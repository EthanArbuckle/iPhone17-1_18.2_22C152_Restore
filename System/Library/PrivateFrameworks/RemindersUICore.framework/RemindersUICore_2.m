void *TTRReminderCellNotesEditingPresenter.targetAttribute.unsafeMutableAddressor()
{
  return &static TTRReminderCellNotesEditingPresenter.targetAttribute;
}

uint64_t static TTRReminderCellNotesEditingPresenter.targetAttribute.getter()
{
  return 1;
}

uint64_t TTRReminderCellNotesEditingPresenter.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B91CDFA0(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item, a1, type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t TTRReminderCellNotesEditingPresenter.editingState.getter@<X0>(uint64_t *a1@<X8>)
{
  v3 = (void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
  char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 1);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  a1[3] = (uint64_t)&type metadata for EditingState;
  a1[4] = (uint64_t)&off_1F12DB2C0;
  uint64_t v10 = swift_allocObject();
  *a1 = v10;
  *(unsigned char *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 17) = v5;
  *(void *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v8;
  *(void *)(v10 + 48) = v9;

  return sub_1B91B64C8(v6, v7);
}

uint64_t sub_1B91C857C()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t TTRReminderCellNotesEditingPresenter.augmentation.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
  sub_1B91B64C8(v1, *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16));
  return v1;
}

uint64_t TTRReminderCellNotesEditingPresenter.__allocating_init(item:inlineHashtagEditingPresenter:paragraphStyleEditingPresenter:presenterManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B91C8654(a1, a2, a3, a4, a5, a6, a7, sub_1B91CD3FC);
}

uint64_t TTRReminderCellNotesEditingPresenter.init(item:inlineHashtagEditingPresenter:paragraphStyleEditingPresenter:presenterManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B91C8654(a1, a2, a3, a4, a5, a6, a7, sub_1B91CD2E4);
}

uint64_t sub_1B91C8654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = swift_getObjectType();
  uint64_t v19 = a8(a1, a2, a4, a6, a7, v8, ObjectType, v18, a3, a5);
  swift_unknownObjectRelease();
  return v19;
}

uint64_t static TTRReminderCellNotesEditingPresenter.typingAttributeStyleStateTogglingStyleState(_:originalTypingAttributeState:originalAttributedText:selectedRange:)(char a1, int a2, void *a3, uint64_t a4)
{
  return sub_1B91CD49C(a1, a2 & 0xFFFFFF, a3, a4) & 0xFFFFFF;
}

Swift::Void __swiftcall TTRReminderCellNotesEditingPresenter.requestAbortEditing()()
{
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9EFD960);
  sub_1B90C4268(MEMORY[0x1E4FBC860]);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state) == 1)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession)) {
      *(unsigned char *)(v0
    }
               + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_shouldSkipSavingEditingSession) = 1;
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v0 + 16))
    {
      uint64_t v2 = *(void *)(v0 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 8))(v0, &protocol witness table for TTRReminderCellNotesEditingPresenter, ObjectType, v2);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t _s15RemindersUICore36TTRReminderCellNotesEditingPresenterC010requestEndF0yyF_0()
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9DB180](v0 + 16);
  if (result)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 8))(v0, &protocol witness table for TTRReminderCellNotesEditingPresenter, ObjectType, v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleBeginEditingNotes()()
{
  uint64_t v1 = sub_1B996D300();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 96;
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v1, (uint64_t)qword_1E9EFD960);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v7 = v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item;
  uint64_t v8 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v9;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v10 = sub_1B91C8C94();
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 32))(v28, ObjectType, v13);
    uint64_t v15 = v29;
    v16 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    id v17 = (id)v16[7](v15, v16);
    if (!v17) {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_init);
    }
    uint64_t v18 = v17;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v0 + 32))
    {
      uint64_t v19 = *(void *)(v0 + 40);
      uint64_t v20 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 88))(v7, v20, v19);
      swift_unknownObjectRelease();
    }
    uint64_t v21 = *(void *)(v0
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                    + 8);
    uint64_t v22 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v18, v12, v13, v22, v21);
    uint64_t v23 = *(void *)(v0
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_paragraphStyleEditingPresenter
                    + 8);
    uint64_t v24 = swift_getObjectType();
    (*(void (**)(void *__return_ptr, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v27, v18, v12, v13, v24, v23);
    sub_1B90BFE54((uint64_t)v27, (uint64_t)v28, &qword_1E9EFD978);
    if (v28[0])
    {
      v25 = v30;
      sub_1B91C8F68(v28[0], v28[1], v28[2], v29, v31);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B91C8C94()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (*(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession)) {
    goto LABEL_6;
  }
  swift_beginAccess();
  if (MEMORY[0x1BA9DB180](v0 + 32))
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v2 + 16))(v0, &protocol witness table for TTRReminderCellNotesEditingPresenter, ObjectType, v2);
    uint64_t v6 = v5;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *uint64_t v1 = v4;
  v1[1] = v6;
  swift_unknownObjectRelease();
  if (*v1)
  {
LABEL_6:
    uint64_t v7 = v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state;
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state) == 1)
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v8 = *(void *)(v7 + 32);
      uint64_t v11 = *(void *)(v7 + 8);
      uint64_t v10 = *(void *)(v7 + 16);
      char v12 = *(unsigned char *)(v7 + 1);
      sub_1B91B64C8(v11, v10);
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      char v12 = 0;
    }
    LOBYTE(v21[0]) = 1;
    BYTE1(v21[0]) = v12;
    v21[1] = v11;
    v21[2] = v10;
    v21[3] = v9;
    v21[4] = v8;
    sub_1B91C97B0((uint64_t)v21);
    return swift_unknownObjectRetain();
  }
  else
  {
    if (qword_1E9EFA298 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B996D300();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E9EFD960);
    swift_retain_n();
    uint64_t v15 = sub_1B996D2F0();
    os_log_type_t v16 = sub_1B996F640();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)id v17 = 136315138;
      v21[0] = v18;
      uint64_t v19 = sub_1B91C7C24();
      sub_1B90D2A1C(v19, v20, v21);
      sub_1B99700D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B90A0000, v15, v16, "TTRReminderCellNotesEditingPresenter: Could not acquire editing session to begin editing. {item: %s}", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v18, -1, -1);
      MEMORY[0x1BA9DB030](v17, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
}

uint64_t sub_1B91C8F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9DB180](v5 + 16);
  if (result)
  {
    uint64_t v13 = *(void *)(v5 + 24);
    uint64_t v14 = *(void *)(a1 + 16);
    if (v14)
    {
      uint64_t v25 = a2;
      uint64_t v26 = a3;
      char v27 = a5;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v15 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      os_log_type_t v16 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v17 = v13;
        uint64_t v18 = *(v16 - 3);
        uint64_t v19 = *(v16 - 2);
        uint64_t v20 = *(v16 - 1);
        uint64_t v21 = *v16;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v22 = v18;
        uint64_t v13 = v17;
        v15(v5, &protocol witness table for TTRReminderCellNotesEditingPresenter, v22, v19, v20, v21, ObjectType, v17);
        swift_bridgeObjectRelease();
        v16 += 4;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v6 = v5;
      a5 = v27;
      a2 = v25;
      a3 = v26;
    }
    if (*(void *)(a2 + 16))
    {
      uint64_t v23 = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 48))(v6, &protocol witness table for TTRReminderCellNotesEditingPresenter, a2, a3, a4, v23, v13);
    }
    if (a5)
    {
      uint64_t v24 = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v13 + 56))(v6, &protocol witness table for TTRReminderCellNotesEditingPresenter, v24, v13);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleNotesTextChange(_:detail:hasMarkedText:)(NSAttributedString _, RemindersUICore::TTRReminderTextChangeDetail_optional *detail, Swift::Bool hasMarkedText)
{
  void (*v29)(void *__return_ptr, Class, long long *);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  uint64_t ObjectType;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Class isa;
  void v65[9];
  void v66[6];
  void v67[5];
  char v68;
  void v69[9];
  _OWORD v70[2];
  uint64_t v71;
  long long v72;
  long long v73;
  uint64_t v74;
  _OWORD v75[2];
  uint64_t v76;
  long long v77;
  long long v78;
  uint64_t v79;
  unsigned char v80[16];
  unsigned char v81[16];
  unsigned char v82[8];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  uint64_t v4 = v3;
  LODWORD(v62) = hasMarkedText;
  isa = _.super.isa;
  uint64_t v6 = sub_1B996D300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9EFD960);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v12 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v13;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = (char *)(v3 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 1) & 1) == 0)
  {
    sub_1B90BFE54((uint64_t)detail, (uint64_t)v75, &qword_1EB9A8258);
    if (*(void *)&v75[0])
    {
      v77 = v75[0];
      v78 = v75[1];
      v79 = v76;
      uint64_t v15 = *(void **)&v75[0];
      sub_1B91CD790();
      sub_1B91CD7D0(detail, (void (*)(void, void, void, void, void))sub_1B91CD5A8);
      id v16 = v15;
      char v17 = sub_1B996FC90();

      if (v17)
      {

        sub_1B90BFE54((uint64_t)&v78 + 8, (uint64_t)&v87, &qword_1EB9A8D10);
        uint64_t v18 = &v87;
      }
      else
      {
        uint64_t v23 = *((void *)v14 + 1);
        uint64_t v24 = *((void *)v14 + 2);
        uint64_t v25 = *((void *)v14 + 3);
        uint64_t v26 = *((void *)v14 + 4);
        v87 = *v14;
        v88 = 1;
        v89 = v23;
        v90 = v24;
        v91 = v25;
        v92 = v26;
        sub_1B91B64C8(v23, v24);
        sub_1B91C97B0((uint64_t)&v87);

        sub_1B90BFE54((uint64_t)&v78 + 8, (uint64_t)v80, &qword_1EB9A8D10);
        uint64_t v18 = v80;
      }
      sub_1B91CD6CC((uint64_t)v18);
    }
    else
    {
      uint64_t v19 = *((void *)v14 + 1);
      uint64_t v20 = *((void *)v14 + 2);
      uint64_t v21 = *((void *)v14 + 3);
      uint64_t v22 = *((void *)v14 + 4);
      v87 = *v14;
      v88 = 1;
      v89 = v19;
      v90 = v20;
      v91 = v21;
      v92 = v22;
      sub_1B91B64C8(v19, v20);
      sub_1B91C97B0((uint64_t)&v87);
    }
  }
  if (*(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession))
  {
    v63 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
    uint64_t v27 = *(void *)(v4
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    sub_1B90BFE54((uint64_t)detail, (uint64_t)v70, &qword_1EB9A8258);
    if (*(void *)&v70[0])
    {
      v72 = v70[0];
      v73 = v70[1];
      v74 = v71;
      uint64_t v28 = *(void *)(v4
                      + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                      + 8);
      swift_getObjectType();
      uint64_t v29 = *(void (**)(void *__return_ptr, Class, long long *))(v28 + 16);
      sub_1B91CD7D0(detail, (void (*)(void, void, void, void, void))sub_1B91CD5A8);
      swift_unknownObjectRetain();
      LODWORD(v62) = v62 & 1;
      v29(v65, isa, &v72);
      v58 = v65[0];
      v59 = v65[1];
      v30 = v65[4];
      uint64_t v31 = v65[5];
      v32 = (void *)v65[8];
      v60 = v65[3];
      v61 = v65[7];
      sub_1B90BFE54((uint64_t)v65, (uint64_t)v69, &qword_1EB9A8BA8);
      v33 = v69[0];
      v34 = v27;
      if (v69[0])
      {
        v54 = v69[2];
        v55 = v69[1];
        v52 = v32;
        v53 = v69[3];
        v56 = v69[4];
        v57 = v27;
        v35 = v31;
        v36 = v69[5];
        v37 = v69[6];
        v38 = v69[7];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B91B64C8(v30, v35);
        v39 = v52;
        sub_1B91C9954(v33, v55, v54, v53);
        v40 = v14[1];
        v82[0] = *v14;
        v82[1] = v40;
        v34 = v57;
        v83 = v56;
        v84 = v36;
        v85 = v37;
        v86 = v38;
        sub_1B91B64C8(v56, v36);
        sub_1B91C97B0((uint64_t)v82);
        sub_1B91CD5EC((uint64_t)v65);
      }
      v41 = *(void *)(v4
                      + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_paragraphStyleEditingPresenter
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *__return_ptr, Class, long long *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 24))(v66, isa, &v72, v62, v63, v34, ObjectType, v41);
      v43 = (void *)v66[4];
      sub_1B90BFE54((uint64_t)v66, (uint64_t)v67, &qword_1E9EFD978);
      v44 = v67[0];
      if (v67[0])
      {
        v45 = v67[1];
        v62 = v67[2];
        v46 = v67[3];
        isa = (Class)v67[4];
        v47 = v68;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v48 = v43;
        sub_1B91C8F68(v44, v45, v62, v46, v47);
        sub_1B91CD5EC((uint64_t)v65);
        sub_1B91CD6F8((uint64_t)v66);

        sub_1B90BFE54((uint64_t)&v73 + 8, (uint64_t)v81, &qword_1EB9A8D10);
        sub_1B91CD6CC((uint64_t)v81);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B91CD5EC((uint64_t)v65);

        sub_1B90BFE54((uint64_t)&v73 + 8, (uint64_t)v81, &qword_1EB9A8D10);
        sub_1B91CD6CC((uint64_t)v81);
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v49 = sub_1B996D2F0();
    v50 = sub_1B996F640();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1B90A0000, v49, v50, "Missing editingSession for notes editing", v51, 2u);
      MEMORY[0x1BA9DB030](v51, -1, -1);
    }
  }
}

uint64_t sub_1B91C97B0(uint64_t a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 24);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 32);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 16) = v7;
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  sub_1B91B64C8(v4, v3);
  sub_1B91B6518(v4, v3);
  uint64_t v8 = *(void *)(v2 + 8);
  unint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  sub_1B91B64C8(v8, v9);
  char v12 = _s15RemindersUICore38TTRReminderCellTextEditingAugmentationO16effectivelyEqualySbACSg_AEtFZ_0(v4, v3, v6, v5, v8, v9, v10, v11);
  sub_1B91B6518(v8, v9);
  if (v12)
  {
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v1 + 16))
    {
      uint64_t v13 = *(void *)(v1 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v13 + 32))(v1, &protocol witness table for TTRReminderCellNotesEditingPresenter, ObjectType, v13);
      swift_unknownObjectRelease();
    }
  }
  return sub_1B91B6518(v4, v3);
}

uint64_t sub_1B91C9954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9DB180](v4 + 16);
  if (result)
  {
    uint64_t v11 = *(void *)(v4 + 24);
    uint64_t v12 = *(void *)(a1 + 16);
    if (v12)
    {
      uint64_t v22 = a2;
      uint64_t v23 = a3;
      uint64_t v24 = a4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v14 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v15 = v11;
        uint64_t v17 = *(v14 - 3);
        uint64_t v16 = *(v14 - 2);
        uint64_t v18 = *(v14 - 1);
        uint64_t v19 = *v14;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v20 = v17;
        uint64_t v11 = v15;
        v13(v4, &protocol witness table for TTRReminderCellNotesEditingPresenter, v20, v16, v18, v19, ObjectType, v15);
        swift_bridgeObjectRelease();
        v14 += 4;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      a3 = v23;
      a4 = v24;
      uint64_t v5 = v4;
      a2 = v22;
    }
    if (*(void *)(a2 + 16))
    {
      uint64_t v21 = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(v5, &protocol witness table for TTRReminderCellNotesEditingPresenter, a2, a3, a4, v21, v11);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleEditingNotesDidEnd(_:)(NSAttributedString a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B996D300();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_1E9EFD960);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v10 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v13)
  {
    uint64_t v14 = v12[1];
    swift_unknownObjectRetain();
    sub_1B91C9EA8((uint64_t)a1.super.isa, v13, v14);
    if (*(unsigned char *)(v1
                  + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_shouldSkipSavingEditingSession) == 1)
    {
      uint64_t v15 = sub_1B996D2F0();
      os_log_type_t v16 = sub_1B996F660();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_1B90A0000, v15, v16, "TTRReminderCellNotesEditingPresenter: skip saving notes editing session", v17, 2u);
        MEMORY[0x1BA9DB030](v17, -1, -1);
      }

      uint64_t v18 = 2;
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 112))(v18, ObjectType, v14);
    uint64_t v23 = *v12;
    if (*v12)
    {
      uint64_t v24 = v12[1];
      *uint64_t v12 = 0;
      v12[1] = 0;
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v2 + 32))
      {
        uint64_t v25 = *(void *)(v2 + 40);
        uint64_t v26 = swift_getObjectType();
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 24))(v2, &protocol witness table for TTRReminderCellNotesEditingPresenter, v23, v24, v26, v25);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v19 = sub_1B996D2F0();
    uint64_t v20 = sub_1B996F640();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1B90A0000, v19, (os_log_type_t)v20, "Missing editing session for editing notes", v21, 2u);
      MEMORY[0x1BA9DB030](v21, -1, -1);
    }
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_shouldSkipSavingEditingSession) = 0;
  __int16 v28 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_1B91C97B0((uint64_t)&v28);
}

uint64_t sub_1B91C9EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 72))(v30, ObjectType, a3);
  uint64_t v8 = *(void *)(v3
                 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                 + 8);
  uint64_t v9 = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4FC8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B997AB90;
  uint64_t v24 = ObjectType;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 32))(aBlock, ObjectType, a3);
  uint64_t v12 = v26;
  uint64_t v11 = v27;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v26);
  *(void *)(v10 + 32) = (*((uint64_t (**)(void *, uint64_t (*)()))v11 + 5))(v12, v11);
  *(void *)&v29[0] = v10;
  sub_1B996EE70();
  uint64_t v13 = *(void *)&v29[0];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  aBlock[0] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5DD0);
  sub_1B91CD790();
  sub_1B91CE6B4();
  uint64_t v14 = sub_1B996EC90();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, a3, v14, v9, v8);
  swift_bridgeObjectRelease();
  os_log_type_t v16 = self;
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v17 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  sub_1B9101650((uint64_t)v30, (uint64_t)v29);
  uint64_t v18 = swift_allocObject();
  sub_1B9101700(v29, v18 + 16);
  *(void *)(v18 + 56) = v15;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B91CE750;
  *(void *)(v19 + 24) = v18;
  uint64_t v27 = sub_1B919966C;
  uint64_t v28 = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  uint64_t v26 = &block_descriptor_87_0;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v15;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_withActionName_block_, v17, v20, 0x80000001B99A79B0);

  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 104))(1, v24, a3);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    return swift_release();
  }
  return result;
}

void TTRReminderCellNotesEditingPresenter.request(applySuggestion:notes:)(uint64_t a1, uint64_t a2)
{
  sub_1B90D7014(a1, (uint64_t)v12);
  if (swift_dynamicCast())
  {
    sub_1B91CA4D8(v13[0], (void *)v13[1], v13[2], v14, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1E9EFA298 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B996D300();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E9EFD960);
    sub_1B913A180(a1, (uint64_t)v12);
    uint64_t v5 = sub_1B996D2F0();
    os_log_type_t v6 = sub_1B996F650();
    if (os_log_type_enabled(v5, v6))
    {
      long long v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)long long v7 = 136315138;
      sub_1B90D7014((uint64_t)v12, (uint64_t)v13);
      __swift_project_boxed_opaque_existential_1(v13, v14);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFD980);
      uint64_t v9 = sub_1B996EA30();
      v13[0] = sub_1B90D2A1C(v9, v10, &v11);
      sub_1B99700D0();
      swift_bridgeObjectRelease();
      sub_1B913A1DC((uint64_t)v12);
      _os_log_impl(&dword_1B90A0000, v5, v6, "Unknown suggestion {type: %s}", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v8, -1, -1);
      MEMORY[0x1BA9DB030](v7, -1, -1);
    }
    else
    {
      sub_1B913A1DC((uint64_t)v12);
    }
  }
}

void sub_1B91CA4D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v22)(void *__return_ptr, uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void v37[5];
  void v38[5];
  unsigned char v39[8];
  long long v40;
  long long v41;

  uint64_t v6 = v5;
  v36 = a2;
  v35 = a1;
  uint64_t v10 = sub_1B996D300();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1E9EFD960);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v16 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = *(void *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v18)
  {
    uint64_t v19 = *(void *)(v5
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    uint64_t v20 = *(void *)(v6
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    v34 = v6;
    uint64_t v22 = *(void (**)(void *__return_ptr, uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 24);
    swift_unknownObjectRetain();
    v22(v37, v35, v36, a3, a4, a5, v18, v19, ObjectType, v20);
    uint64_t v23 = (void *)v37[4];
    sub_1B90BFE54((uint64_t)v37, (uint64_t)v38, &qword_1E9EFD988);
    uint64_t v24 = v38[0];
    if (v38[0])
    {
      uint64_t v25 = v38[1];
      uint64_t v26 = v38[2];
      uint64_t v27 = v38[3];
      v36 = (id)v38[4];
      uint64_t v28 = *(unsigned char *)(v34 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 1);
      v39[0] = *(unsigned char *)(v34 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
      v39[1] = v28;
      v40 = 0u;
      v41 = 0u;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      long long v29 = v23;
      sub_1B91C97B0((uint64_t)v39);
      sub_1B91C9954(v24, v25, v26, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B91CD7D0(v37, (void (*)(void, void, void, void, void))sub_1B91CD730);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    long long v30 = sub_1B996D2F0();
    uint64_t v31 = sub_1B996F640();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1B90A0000, v30, v31, "Missing editing session for applying inline hashtag suggestion", v32, 2u);
      MEMORY[0x1BA9DB030](v32, -1, -1);
    }
  }
}

Swift::String_optional __swiftcall TTRReminderCellNotesEditingPresenter.requestAdoptForeignHashtag(in:notes:)(__C::_NSRange in, NSAttributedString notes)
{
  uint64_t v3 = v2;
  Swift::Int length = in.length;
  Swift::Int location = in.location;
  uint64_t v7 = sub_1B996D300();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFD960);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v13 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v15)
  {
    uint64_t v16 = *(void *)(v2
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    uint64_t v17 = *(void *)(v3
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = *(uint64_t (**)(Swift::Int, Swift::Int, Class, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32);
    swift_unknownObjectRetain();
    uint64_t v20 = v19(location, length, notes.super.isa, v15, v16, ObjectType, v17);
    uint64_t v22 = v21;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  uint64_t v23 = v20;
  uint64_t v24 = v22;
  result.value._object = v24;
  result.value._countAndFlagsBits = v23;
  return result;
}

Swift::Void __swiftcall TTRReminderCellNotesEditingPresenter.requestConvertTextToHashtag(in:title:)(__C::_NSRange in, NSAttributedString title)
{
  void (*v19)(void *__return_ptr, Swift::Int, Swift::Int, Class, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  id v27;
  uint64_t v28;
  void v29[5];
  void v30[5];
  unsigned char v31[8];
  long long v32;
  long long v33;

  uint64_t v3 = v2;
  Swift::Int length = in.length;
  Swift::Int location = in.location;
  uint64_t v7 = sub_1B996D300();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFD960);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v13 = sub_1B91C7C24();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v15)
  {
    uint64_t v16 = *(void *)(v2
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    uint64_t v17 = *(void *)(v3
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = v3;
    uint64_t v19 = *(void (**)(void *__return_ptr, Swift::Int, Swift::Int, Class, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 40);
    swift_unknownObjectRetain();
    v19(v29, location, length, title.super.isa, v15, v16, ObjectType, v17);
    uint64_t v20 = (void *)v29[4];
    sub_1B90BFE54((uint64_t)v29, (uint64_t)v30, &qword_1E9EFD988);
    id v21 = v30[0];
    if (v30[0])
    {
      uint64_t v22 = v30[1];
      uint64_t v23 = v30[2];
      uint64_t v24 = v30[3];
      uint64_t v27 = (id)v30[4];
      uint64_t v25 = *(unsigned char *)(v28 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 1);
      v31[0] = *(unsigned char *)(v28 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
      v31[1] = v25;
      v32 = 0u;
      v33 = 0u;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v26 = v20;
      sub_1B91C97B0((uint64_t)v31);
      sub_1B91C9954(v21, v22, v23, v24);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B91CD7D0(v29, (void (*)(void, void, void, void, void))sub_1B91CD730);
    }
    swift_unknownObjectRelease();
  }
}

Swift::Bool __swiftcall TTRReminderCellNotesEditingPresenter.request(handlePaste:into:selectedRange:)(NSAttributedString handlePaste, NSAttributedString into, __C::_NSRange selectedRange)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v4)
  {
    uint64_t v5 = v3;
    Swift::Int length = selectedRange.length;
    Swift::Int location = selectedRange.location;
    uint64_t v10 = *(void *)(v3
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    TTRRemindersListEditingSession.effectiveParentList.getter(ObjectType, v10, (uint64_t)v69);
    uint64_t v12 = v70;
    if (v70)
    {
      uint64_t v62 = v10;
      uint64_t v13 = v71;
      __swift_project_boxed_opaque_existential_1(v69, v70);
      uint64_t v14 = (void *)v13[8](v12, v13);
      unsigned __int8 v15 = objc_msgSend(v14, sel_supportsTextStyling);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v69);
      if (v15)
      {
        uint64_t v16 = into.super.isa;
        id v17 = [(objc_class *)handlePaste.super.isa string];
        uint64_t v18 = sub_1B996E9F0();
        uint64_t v20 = v19;

        v73[0] = v16;
        v73[1] = location;
        v73[2] = length;
        v73[3] = v18;
        v73[4] = v20;
        id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v16);
        uint64_t v63 = location;
        -[NSObject replaceCharactersInRange:withAttributedString:](v21, sel_replaceCharactersInRange_withAttributedString_, location, length, handlePaste.super.isa);
        [v21 copy];
        sub_1B9970200();
        swift_unknownObjectRelease();
        sub_1B91CD790();
        Swift::Int v59 = length;
        uint64_t v60 = v4;
        v57 = v16;
        if (swift_dynamicCast())
        {

          uint64_t v22 = (objc_class *)v68[0];
        }
        else
        {
          if (qword_1E9EFA4E0 != -1) {
            swift_once();
          }
          uint64_t v29 = sub_1B996D300();
          __swift_project_value_buffer(v29, (uint64_t)qword_1E9EFF728);
          long long v30 = sub_1B996D2F0();
          os_log_type_t v31 = sub_1B996F650();
          if (os_log_type_enabled(v30, v31))
          {
            v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v32 = 0;
            _os_log_impl(&dword_1B90A0000, v30, v31, "Unexpected return type from -[NSMutableAttributedString copy]", v32, 2u);
            MEMORY[0x1BA9DB030](v32, -1, -1);
            v33 = v21;
          }
          else
          {
            v33 = v30;
            long long v30 = v21;
          }

          uint64_t v22 = v16;
        }
        swift_beginAccess();
        uint64_t v65 = v5 + 16;
        if (MEMORY[0x1BA9DB180](v5 + 16))
        {
          uint64_t v34 = *(void *)(v5 + 24);
          uint64_t v35 = swift_getObjectType();
          v36 = v22;
          id v37 = [(objc_class *)handlePaste.super.isa string];
          uint64_t v38 = sub_1B996E9F0();
          uint64_t v40 = v39;

          uint64_t v22 = v36;
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, Swift::Int, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 16))(v5, &protocol witness table for TTRReminderCellNotesEditingPresenter, v63, v59, v38, v40, v35, v34);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        uint64_t v64 = v5;
        v61 = v22;
        uint64_t v58 = sub_1B91CD80C(handlePaste.super.isa, v22, v63);
        uint64_t v41 = *(void *)(v58 + 16);
        if (v41)
        {
          v42 = (uint64_t *)(v58 + 48);
          do
          {
            uint64_t v43 = *(v42 - 2);
            uint64_t v44 = *(v42 - 1);
            uint64_t v45 = *v42;
            if (MEMORY[0x1BA9DB180](v65))
            {
              uint64_t v46 = *(void *)(v64 + 24);
              uint64_t v47 = swift_getObjectType();
              v66 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 40);
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              v66(v64, &protocol witness table for TTRReminderCellNotesEditingPresenter, v43, v44, v45, v47, v46);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
            }
            v42 += 3;
            --v41;
          }
          while (v41);
        }
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void *)(v64
                        + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_paragraphStyleEditingPresenter
                        + 8);
        uint64_t v49 = swift_getObjectType();
        (*(void (**)(void *__return_ptr, NSObject *, void *, uint64_t, Swift::Int, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 16))(v68, v61, v73, v63, v59, v60, v62, v49, v48);
        v50 = (void *)v68[4];
        sub_1B90BFE54((uint64_t)v68, (uint64_t)v69, &qword_1E9EFD978);
        uint64_t v51 = v69[0];
        if (v69[0])
        {
          uint64_t v52 = v69[1];
          uint64_t v53 = v69[2];
          uint64_t v54 = v70;
          v67 = v71;
          char v55 = v72;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          id v56 = v50;
          sub_1B91C8F68(v51, v52, v53, v54, v55);
          sub_1B91CD6F8((uint64_t)v68);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        Swift::Bool v27 = 1;
        uint64_t v24 = v61;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B90CCA68((uint64_t)v69, (uint64_t *)&unk_1EB9B5F60);
    }
    swift_unknownObjectRelease();
  }
  if (qword_1E9EFA298 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1B996D300();
  __swift_project_value_buffer(v23, (uint64_t)qword_1E9EFD960);
  uint64_t v24 = sub_1B996D2F0();
  os_log_type_t v25 = sub_1B996F640();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1B90A0000, v24, v25, "Missing editingSession for notes editing", v26, 2u);
    MEMORY[0x1BA9DB030](v26, -1, -1);
  }
  Swift::Bool v27 = 0;
LABEL_13:

  return v27;
}

NSAttributedString __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleToggleBoldface(in:title:)(__C::_NSRange in, NSAttributedString title)
{
  return (NSAttributedString)sub_1B91CB448(0, in.location, in.length, title.super.isa);
}

id sub_1B91CB448(unsigned __int8 a1, uint64_t a2, uint64_t a3, id a4)
{
  if (a3 < 1) {
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  id v30 = a4;
  id v9 = objc_msgSend(a4, sel_string);
  sub_1B996E9F0();

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B996EC00();
  swift_bridgeObjectRelease_n();
  sub_1B996FFB0();
  a4 = v30;
  if ((v11 & 1) != 0 || v10 != a3)
  {
LABEL_7:
    return a4;
  }
  else
  {
    uint64_t v12 = *(void *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
    uint64_t v13 = *(void *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16);
    uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 24);
    uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 32);
    v32[0] = *(unsigned char *)(v5 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
    v32[1] = 1;
    uint64_t v33 = v12;
    uint64_t v34 = v13;
    uint64_t v35 = v14;
    uint64_t v36 = v15;
    sub_1B91B64C8(v12, v13);
    sub_1B91C97B0((uint64_t)v32);
    BOOL v16 = sub_1B91CE008(a1, a2, a3, v30);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v30);
    uint64_t v18 = v17;
    if (a1)
    {
      if (a1 == 1) {
        -[NSObject rem_setFontHint:isOn:inRange:](v17, sel_rem_setFontHint_isOn_inRange_, 2, v16, a2, a3);
      }
      else {
        -[NSObject rem_setUnderline:inRange:](v17, sel_rem_setUnderline_inRange_, v16, a2, a3);
      }
    }
    else
    {
      -[NSObject rem_setFontHint:isOn:inRange:](v17, sel_rem_setFontHint_isOn_inRange_, 1, v16, a2, a3);
    }
    [v18 copy];
    sub_1B9970200();
    swift_unknownObjectRelease();
    sub_1B91CD790();
    if (swift_dynamicCast())
    {

      id v20 = v31;
    }
    else
    {
      if (qword_1E9EFA4E0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1B996D300();
      __swift_project_value_buffer(v21, (uint64_t)qword_1E9EFF728);
      uint64_t v22 = sub_1B996D2F0();
      os_log_type_t v23 = sub_1B996F650();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_1B90A0000, v22, v23, "Unexpected return type from -[NSMutableAttributedString copy]", v24, 2u);
        MEMORY[0x1BA9DB030](v24, -1, -1);
        os_log_type_t v25 = v18;
      }
      else
      {
        os_log_type_t v25 = v22;
        uint64_t v22 = v18;
      }

      id v20 = v30;
    }
    if (a1 >= 2u)
    {
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v5 + 16))
      {
        uint64_t v26 = *(void *)(v5 + 24);
        uint64_t ObjectType = swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
        *(void *)(inited + 32) = objc_msgSend(self, sel_attributeNameForStyle_, 0);
        *(void *)(inited + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v16);
        unint64_t v29 = sub_1B90C4E48(inited);
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 40))(v5, &protocol witness table for TTRReminderCellNotesEditingPresenter, a2, a3, v29, ObjectType, v26);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1B91CC024(a2, a3, v20);
    }
    return v20;
  }
}

NSAttributedString __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleToggleItalics(in:title:)(__C::_NSRange in, NSAttributedString title)
{
  return (NSAttributedString)sub_1B91CB448(1u, in.location, in.length, title.super.isa);
}

NSAttributedString __swiftcall TTRReminderCellNotesEditingPresenter.requestHandleToggleUnderline(in:title:)(__C::_NSRange in, NSAttributedString title)
{
  return (NSAttributedString)sub_1B91CB448(2u, in.location, in.length, title.super.isa);
}

uint64_t TTRReminderCellNotesEditingPresenter.request(toggleListStyle:in:selectedRange:)(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  if (v6 && a4 >= 1)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(v4
                    + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession
                    + 8);
    swift_unknownObjectRetain();
    id v11 = objc_msgSend(a2, sel_string);
    sub_1B996E9F0();

    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B996EC00();
    swift_bridgeObjectRelease_n();
    uint64_t v12 = sub_1B996FFB0();
    if ((v14 & 1) != 0 || v13 != a4)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v15 = v12;
      uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
      uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16);
      uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 24);
      uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 32);
      v58[0] = *(unsigned char *)(v4 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
      v58[1] = 1;
      uint64_t v59 = v16;
      uint64_t v60 = v17;
      uint64_t v61 = v18;
      uint64_t v62 = v19;
      sub_1B91B64C8(v16, v17);
      sub_1B91C97B0((uint64_t)v58);
      uint64_t v20 = *(void *)(v4
                      + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_paragraphStyleEditingPresenter
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v22 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 32))(v9, a2, v15, a4, v6, v10, ObjectType, v20);
      uint64_t v49 = *(void *)(v22 + 16);
      if (v49)
      {
        uint64_t v48 = v22 + 32;
        Swift::String_optional result = swift_beginAccess();
        unint64_t v23 = 0;
        uint64_t v24 = &protocol witness table for TTRReminderCellNotesEditingPresenter;
        uint64_t v46 = v22;
        while (v23 < *(void *)(v22 + 16))
        {
          os_log_type_t v25 = (uint64_t *)(v48 + 48 * v23);
          uint64_t v26 = *v25;
          uint64_t v27 = v25[1];
          uint64_t v28 = v25[2];
          uint64_t v29 = v25[5];
          uint64_t v53 = (void *)v25[4];
          uint64_t v54 = v25[3];
          Swift::String_optional result = MEMORY[0x1BA9DB180](v4 + 16);
          if (result)
          {
            uint64_t v47 = v28;
            char v50 = v29;
            uint64_t v51 = v27;
            id v30 = v24;
            unint64_t v52 = v23;
            uint64_t v31 = v5;
            uint64_t v32 = *(void *)(v5 + 24);
            uint64_t v33 = *(void *)(v26 + 16);
            uint64_t v57 = v32;
            if (v33)
            {
              uint64_t v34 = swift_getObjectType();
              char v55 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 16);
              uint64_t v56 = v34;
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              id v35 = v53;
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              uint64_t v36 = (uint64_t *)(v26 + 56);
              uint64_t v37 = v31;
              uint64_t v24 = v30;
              do
              {
                uint64_t v39 = *(v36 - 3);
                uint64_t v38 = *(v36 - 2);
                uint64_t v41 = *(v36 - 1);
                uint64_t v40 = *v36;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                uint64_t v42 = v38;
                uint64_t v32 = v57;
                v55(v37, v24, v39, v42, v41, v40, v56, v57);
                swift_bridgeObjectRelease();
                v36 += 4;
                --v33;
              }
              while (v33);
            }
            else
            {
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              id v43 = v53;
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              uint64_t v37 = v5;
              uint64_t v24 = v30;
            }
            uint64_t v5 = v37;
            if (*(void *)(v51 + 16))
            {
              uint64_t v44 = swift_getObjectType();
              (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 48))(v37, v24, v51, v47, v54, v44, v32);
            }
            uint64_t v22 = v46;
            unint64_t v23 = v52;
            if (v50)
            {
              uint64_t v45 = swift_getObjectType();
              (*(void (**)(uint64_t, _UNKNOWN **, uint64_t))(v57 + 56))(v37, v24, v45);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            Swift::String_optional result = swift_unknownObjectRelease();
          }
          if (++v23 == v49)
          {
            swift_unknownObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        __break(1u);
      }
      else
      {
        swift_unknownObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B91CBCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_attributeNameForStyle_, 1);
  id v11 = v10;
  if (!*(void *)(a1 + 16) || (uint64_t v12 = sub_1B90CFC88(v10), (v13 & 1) == 0))
  {
    long long v38 = 0u;
    long long v39 = 0u;

    goto LABEL_11;
  }
  sub_1B90D7014(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v38);

  if (!*((void *)&v39 + 1))
  {
LABEL_11:
    sub_1B90CCA68((uint64_t)&v38, &qword_1EB9B4D10);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
    *(void *)(inited + 32) = objc_msgSend(v9, sel_attributeNameForStyle_, 1);
    *(void *)(inited + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v37);
    unint64_t v15 = sub_1B90C4E48(inited);
    uint64_t v16 = (void *)*a5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a5 = (uint64_t)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v16 = sub_1B9189AE8(0, v16[2] + 1, 1, v16);
      *a5 = (uint64_t)v16;
    }
    unint64_t v18 = v16[2];
    unint64_t v19 = v16[3];
    unint64_t v20 = v18 + 1;
    if (v18 >= v19 >> 1)
    {
      unint64_t v36 = v18 + 1;
      uint64_t v33 = v16;
      unint64_t v34 = v16[2];
      id v35 = sub_1B9189AE8((void *)(v19 > 1), v18 + 1, 1, v33);
      unint64_t v18 = v34;
      unint64_t v20 = v36;
      uint64_t v16 = v35;
      *a5 = (uint64_t)v35;
    }
    v16[2] = v20;
    uint64_t v21 = &v16[3 * v18];
    v21[4] = a2;
    uint64_t v21[5] = a3;
    v21[6] = v15;
  }
LABEL_12:
  id v22 = objc_msgSend(v9, sel_attributeNameForStyle_, 0, v36);
  unint64_t v23 = v22;
  if (*(void *)(a1 + 16) && (uint64_t v24 = sub_1B90CFC88(v22), (v25 & 1) != 0))
  {
    sub_1B90D7014(*(void *)(a1 + 56) + 32 * v24, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }

  if (!*((void *)&v39 + 1)) {
    return sub_1B90CCA68((uint64_t)&v38, &qword_1EB9B4D10);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_1B997AB90;
    *(void *)(v27 + 32) = objc_msgSend(v9, sel_attributeNameForStyle_, 0);
    *(void *)(v27 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v37);
    unint64_t v28 = sub_1B90C4E48(v27);
    uint64_t v29 = (void *)*a5;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a5 = (uint64_t)v29;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B9189AE8(0, v29[2] + 1, 1, v29);
      uint64_t v29 = (void *)result;
      *a5 = result;
    }
    unint64_t v31 = v29[2];
    unint64_t v30 = v29[3];
    if (v31 >= v30 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B9189AE8((void *)(v30 > 1), v31 + 1, 1, v29);
      uint64_t v29 = (void *)result;
      *a5 = result;
    }
    long long v29[2] = v31 + 1;
    uint64_t v32 = &v29[3 * v31];
    v32[4] = a2;
    v32[5] = a3;
    v32[6] = v28;
  }
  return result;
}

unint64_t sub_1B91CC024(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_attributeNameForStyle_, 1);
  v106[0] = MEMORY[0x1E4FBC860];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1B91CCDDC;
  v8[3] = 0;
  v8[4] = v106;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1B9107BD8;
  *(void *)(v9 + 24) = v8;
  v111 = sub_1B91B7238;
  uint64_t v112 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v108 = 1107296256;
  v109 = sub_1B91077A8;
  v110 = &block_descriptor_11;
  id v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_enumerateAttribute_inRange_options_usingBlock_, v7, a1, a2, 0, v10);
  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (v10)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v92 = v106[0];

  swift_release();
  id v12 = objc_msgSend(v6, sel_attributeNameForStyle_, 1);
  v106[0] = MEMORY[0x1E4FBC860];
  char v13 = (void *)swift_allocObject();
  v13[2] = sub_1B91CCE5C;
  uint64_t v13[3] = 0;
  v13[4] = v106;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1B91CE880;
  *(void *)(v14 + 24) = v13;
  v111 = sub_1B91B7BBC;
  uint64_t v112 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v108 = 1107296256;
  v109 = sub_1B91077A8;
  v110 = &block_descriptor_24;
  unint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_enumerateAttribute_inRange_options_usingBlock_, v12, a1, a2, 0, v15);
  _Block_release(v15);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (v15)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v91 = v106[0];

  swift_release();
  id v16 = objc_msgSend(v6, sel_attributeNameForStyle_, 1);
  v106[0] = MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_1B91CCED4;
  v17[3] = 0;
  v17[4] = v106;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1B91CE880;
  *(void *)(v18 + 24) = v17;
  v111 = sub_1B91B7BBC;
  uint64_t v112 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v108 = 1107296256;
  v109 = sub_1B91077A8;
  v110 = &block_descriptor_35;
  unint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_enumerateAttribute_inRange_options_usingBlock_, v16, a1, a2, 0, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (v19)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v90 = v106[0];

  swift_release();
  v104 = v6;
  id v20 = objc_msgSend(v6, sel_attributeNameForStyle_, 1);
  v106[0] = MEMORY[0x1E4FBC860];
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = sub_1B91CCF4C;
  v21[3] = 0;
  v21[4] = v106;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1B91CE880;
  *(void *)(v22 + 24) = v21;
  v111 = sub_1B91B7BBC;
  uint64_t v112 = v22;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v108 = 1107296256;
  v109 = sub_1B91077A8;
  v110 = &block_descriptor_46;
  unint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_enumerateAttribute_inRange_options_usingBlock_, v20, a1, a2, 0, v23);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (v23)
  {
LABEL_45:
    __break(1u);
    return result;
  }
  uint64_t v89 = v106[0];

  swift_release();
  uint64_t v24 = *(void *)(v92 + 16);
  char v25 = v105;
  uint64_t v26 = &selRef_setShowingLargeAttachments_;
  if (!v24) {
    goto LABEL_13;
  }
  swift_beginAccess();
  uint64_t v27 = (uint64_t *)(v92 + 40);
  while (1)
  {
    uint64_t v28 = *(v27 - 1);
    uint64_t v29 = *v27;
    if (MEMORY[0x1BA9DB180](v105 + 16)) {
      break;
    }
LABEL_7:
    v27 += 2;
    if (!--v24) {
      goto LABEL_13;
    }
  }
  uint64_t v96 = v29;
  uint64_t v100 = v28;
  uint64_t v30 = *((void *)v25 + 3);
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = objc_msgSend(v6, sel_attributeNameForStyle_, 1);
  *(void *)(inited + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACC58);
  uint64_t v26 = (char **)sub_1B9970990();
  uint64_t v33 = *(void **)(inited + 32);
  unint64_t v34 = *(void **)(inited + 40);
  swift_retain();
  char v25 = v33;
  id v35 = v34;
  uint64_t v6 = v26;
  unint64_t result = sub_1B90CFC88(v25);
  if (v36)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v26[(result >> 6) + 8] = (char *)((unint64_t)v26[(result >> 6) + 8] | (1 << result));
  uint64_t v37 = 8 * result;
  *(void *)&v26[6][v37] = v25;
  *(void *)&v26[7][v37] = v35;
  long long v38 = v26[2];
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (!v39)
  {
    v26[2] = v40;
    swift_release();
    swift_bridgeObjectRelease();
    char v25 = v105;
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, char **, uint64_t, uint64_t))(v30 + 40))(v105, &protocol witness table for TTRReminderCellNotesEditingPresenter, v100, v96, v26, ObjectType, v30);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v6 = v104;
    uint64_t v26 = &selRef_setShowingLargeAttachments_;
    goto LABEL_7;
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v91 + 16);
  if (v41)
  {
    v93 = v25 + 16;
    swift_beginAccess();
    uint64_t v42 = (uint64_t *)(v91 + 40);
    do
    {
      uint64_t v43 = *(v42 - 1);
      uint64_t v44 = *v42;
      if (MEMORY[0x1BA9DB180](v93))
      {
        uint64_t v97 = v44;
        uint64_t v101 = v43;
        uint64_t v45 = *((void *)v25 + 3);
        uint64_t v46 = swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
        uint64_t v47 = swift_initStackObject();
        *(_OWORD *)(v47 + 16) = xmmword_1B997AB90;
        *(void *)(v47 + 32) = objc_msgSend(v6, v26[215], 1);
        *(void *)(v47 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACC58);
        uint64_t v48 = (void *)sub_1B9970990();
        uint64_t v49 = *(void **)(v47 + 32);
        char v50 = *(void **)(v47 + 40);
        swift_retain();
        id v51 = v49;
        id v52 = v50;
        unint64_t result = sub_1B90CFC88(v51);
        if (v53) {
          goto LABEL_37;
        }
        v48[(result >> 6) + 8] |= 1 << result;
        uint64_t v54 = 8 * result;
        *(void *)(v48[6] + v54) = v51;
        *(void *)(v48[7] + v54) = v52;
        uint64_t v55 = v48[2];
        BOOL v39 = __OFADD__(v55, 1);
        uint64_t v56 = v55 + 1;
        if (v39) {
          goto LABEL_38;
        }
        v48[2] = v56;
        swift_release();
        swift_bridgeObjectRelease();
        char v25 = v105;
        (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v45 + 40))(v105, &protocol witness table for TTRReminderCellNotesEditingPresenter, v101, v97, v48, v46, v45);
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v6 = v104;
        uint64_t v26 = &selRef_setShowingLargeAttachments_;
      }
      v42 += 2;
      --v41;
    }
    while (v41);
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v90 + 16);
  if (v57)
  {
    v94 = v25 + 16;
    swift_beginAccess();
    uint64_t v58 = (uint64_t *)(v90 + 40);
    do
    {
      uint64_t v59 = *(v58 - 1);
      uint64_t v60 = *v58;
      if (MEMORY[0x1BA9DB180](v94))
      {
        uint64_t v98 = v60;
        uint64_t v102 = v59;
        uint64_t v61 = *((void *)v25 + 3);
        uint64_t v62 = swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
        uint64_t v63 = swift_initStackObject();
        *(_OWORD *)(v63 + 16) = xmmword_1B997AB90;
        *(void *)(v63 + 32) = objc_msgSend(v6, v26[215], 1);
        *(void *)(v63 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 2);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACC58);
        uint64_t v64 = (void *)sub_1B9970990();
        uint64_t v65 = *(void **)(v63 + 32);
        v66 = *(void **)(v63 + 40);
        swift_retain();
        id v67 = v65;
        id v68 = v66;
        unint64_t result = sub_1B90CFC88(v67);
        if (v69) {
          goto LABEL_39;
        }
        v64[(result >> 6) + 8] |= 1 << result;
        uint64_t v70 = 8 * result;
        *(void *)(v64[6] + v70) = v67;
        *(void *)(v64[7] + v70) = v68;
        uint64_t v71 = v64[2];
        BOOL v39 = __OFADD__(v71, 1);
        uint64_t v72 = v71 + 1;
        if (v39) {
          goto LABEL_40;
        }
        v64[2] = v72;
        swift_release();
        swift_bridgeObjectRelease();
        char v25 = v105;
        (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v61 + 40))(v105, &protocol witness table for TTRReminderCellNotesEditingPresenter, v102, v98, v64, v62, v61);
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v6 = v104;
        uint64_t v26 = &selRef_setShowingLargeAttachments_;
      }
      v58 += 2;
      --v57;
    }
    while (v57);
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = *(void *)(v89 + 16);
  if (!v73) {
    return swift_bridgeObjectRelease();
  }
  v95 = v25 + 16;
  swift_beginAccess();
  v74 = (uint64_t *)(v89 + 40);
  while (2)
  {
    uint64_t v75 = *(v74 - 1);
    uint64_t v76 = *v74;
    if (!MEMORY[0x1BA9DB180](v95))
    {
LABEL_29:
      v74 += 2;
      if (!--v73) {
        return swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  uint64_t v99 = v76;
  uint64_t v103 = v75;
  uint64_t v77 = *((void *)v25 + 3);
  uint64_t v78 = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACCB0);
  uint64_t v79 = swift_initStackObject();
  *(_OWORD *)(v79 + 16) = xmmword_1B997AB90;
  *(void *)(v79 + 32) = objc_msgSend(v6, v26[215], 1);
  *(void *)(v79 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ACC58);
  v80 = (void *)sub_1B9970990();
  v81 = *(void **)(v79 + 32);
  v82 = *(void **)(v79 + 40);
  swift_retain();
  id v83 = v81;
  id v84 = v82;
  unint64_t result = sub_1B90CFC88(v83);
  if (v85) {
    goto LABEL_41;
  }
  v80[(result >> 6) + 8] |= 1 << result;
  uint64_t v86 = 8 * result;
  *(void *)(v80[6] + v86) = v83;
  *(void *)(v80[7] + v86) = v84;
  uint64_t v87 = v80[2];
  BOOL v39 = __OFADD__(v87, 1);
  uint64_t v88 = v87 + 1;
  if (!v39)
  {
    v80[2] = v88;
    swift_release();
    swift_bridgeObjectRelease();
    char v25 = v105;
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v77 + 40))(v105, &protocol witness table for TTRReminderCellNotesEditingPresenter, v103, v99, v80, v78, v77);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v6 = v104;
    uint64_t v26 = &selRef_setShowingLargeAttachments_;
    goto LABEL_29;
  }
  __break(1u);
  return swift_bridgeObjectRelease();
}

BOOL sub_1B91CCD58(uint64_t a1, uint64_t a2)
{
  sub_1B9109C00(a1, (uint64_t)v5);
  if (v6)
  {
    if (swift_dynamicCast()) {
      return (a2 & ~v4) == 0;
    }
  }
  else
  {
    sub_1B90CCA68((uint64_t)v5, &qword_1EB9B4D10);
  }
  return 0;
}

uint64_t sub_1B91CCDDC(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1B9109C00(a1, (uint64_t)v3);
    if (v4)
    {
      if ((swift_dynamicCast() & 1) != 0 && v2) {
        return 0;
      }
    }
    else
    {
      sub_1B90CCA68((uint64_t)v3, &qword_1EB9B4D10);
    }
  }
  return 1;
}

BOOL sub_1B91CCE5C(uint64_t a1)
{
  sub_1B9109C00(a1, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2 == 1;
    }
  }
  else
  {
    sub_1B90CCA68((uint64_t)v3, &qword_1EB9B4D10);
  }
  return 0;
}

BOOL sub_1B91CCED4(uint64_t a1)
{
  sub_1B9109C00(a1, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2 == 2;
    }
  }
  else
  {
    sub_1B90CCA68((uint64_t)v3, &qword_1EB9B4D10);
  }
  return 0;
}

BOOL sub_1B91CCF4C(uint64_t a1)
{
  sub_1B9109C00(a1, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2 == 3;
    }
  }
  else
  {
    sub_1B90CCA68((uint64_t)v3, &qword_1EB9B4D10);
  }
  return 0;
}

uint64_t TTRReminderCellNotesEditingPresenter.deinit()
{
  sub_1B90D88A0(v0 + 16);
  sub_1B90D88A0(v0 + 32);
  sub_1B91CE7BC(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item, type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B91B6518(*(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8), *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16));
  return v0;
}

uint64_t TTRReminderCellNotesEditingPresenter.__deallocating_deinit()
{
  sub_1B90D88A0(v0 + 16);
  sub_1B90D88A0(v0 + 32);
  sub_1B91CE7BC(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item, type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B91B6518(*(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8), *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16));

  return swift_deallocClassInstance();
}

uint64_t sub_1B91CD128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state);
  char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 1);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  a1[3] = (uint64_t)&type metadata for EditingState;
  a1[4] = (uint64_t)&off_1F12DB2C0;
  uint64_t v10 = swift_allocObject();
  *a1 = v10;
  *(unsigned char *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 17) = v5;
  *(void *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v8;
  *(void *)(v10 + 48) = v9;

  return sub_1B91B64C8(v6, v7);
}

uint64_t sub_1B91CD1D8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 8);
  sub_1B91B64C8(v1, *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state + 16));
  return v1;
}

id sub_1B91CD250(uint64_t a1, uint64_t a2, id a3)
{
  return sub_1B91CB448(0, a1, a2, a3);
}

id sub_1B91CD264(uint64_t a1, uint64_t a2, id a3)
{
  return sub_1B91CB448(1u, a1, a2, a3);
}

id sub_1B91CD278(uint64_t a1, uint64_t a2, id a3)
{
  return sub_1B91CB448(2u, a1, a2, a3);
}

uint64_t sub_1B91CD290@<X0>(uint64_t a1@<X8>)
{
  return sub_1B91CDFA0(v1 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item, a1, type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1B91CD2D4()
{
  return *v0;
}

uint64_t sub_1B91CD2DC()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1B91CD2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a6 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a6 + 40) = 0;
  swift_unknownObjectWeakInit();
  unint64_t v15 = (void *)(a6 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_notesEditingSession);
  *unint64_t v15 = 0;
  v15[1] = 0;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_shouldSkipSavingEditingSession) = 0;
  uint64_t v16 = a6 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_state;
  *(_WORD *)uint64_t v16 = 0;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  sub_1B91CE81C(a1, a6 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_item);
  uint64_t v17 = (void *)(a6
                 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_inlineHashtagEditingPresenter);
  *uint64_t v17 = a2;
  v17[1] = a9;
  uint64_t v18 = (void *)(a6
                 + OBJC_IVAR____TtC15RemindersUICore36TTRReminderCellNotesEditingPresenter_paragraphStyleEditingPresenter);
  *uint64_t v18 = a3;
  v18[1] = a10;
  swift_beginAccess();
  *(void *)(a6 + 40) = a5;
  swift_unknownObjectWeakAssign();
  return a6;
}

uint64_t sub_1B91CD3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();

  return sub_1B91CD2E4(a1, a2, a3, a4, a5, v17, a7, a8, a9, a10);
}

uint64_t sub_1B91CD49C(char a1, unsigned int a2, id a3, uint64_t a4)
{
  unsigned __int8 v5 = a2;
  unsigned int v7 = HIWORD(a2);
  unsigned int v8 = a2 >> 8;
  if (a1)
  {
    if (a1 == 1) {
      LOBYTE(v9) = BYTE1(a2);
    }
    else {
      LOBYTE(v9) = BYTE2(a2);
    }
    int v9 = v9;
    if ((_BYTE)v9) {
      goto LABEL_6;
    }
  }
  else
  {
    int v9 = a2;
    if ((_BYTE)a2)
    {
LABEL_6:
      if (v9 == 1) {
        unsigned __int8 v10 = 2;
      }
      else {
        unsigned __int8 v10 = 1;
      }
      goto LABEL_20;
    }
  }
  uint64_t v11 = a4 - 1;
  if (a4 < 1)
  {
    unsigned __int8 v10 = 1;
  }
  else
  {
    unint64_t v12 = (unint64_t)objc_msgSend(a3, sel_rem_fontHintAtIndex_effectiveRange_, a4 - 1, 0);
    if (a1)
    {
      if (a1 == 1) {
        unint64_t v12 = (v12 >> 1) & 1;
      }
      else {
        LODWORD(v12) = objc_msgSend(a3, sel_rem_isUnderlinedAtIndex_effectiveRange_, v11, 0);
      }
    }
    else
    {
      LODWORD(v12) = v12 & 1;
    }
    if (v12) {
      unsigned __int8 v10 = 2;
    }
    else {
      unsigned __int8 v10 = 1;
    }
  }
LABEL_20:
  if (a1)
  {
    if (a1 == 1) {
      LOBYTE(v8) = v10;
    }
    else {
      LOBYTE(v7) = v10;
    }
    unsigned __int8 v10 = v5;
  }
  return (unsigned __int16)(v8 << 8) | (v7 << 16) | v10;
}

id sub_1B91CD5A8(id result)
{
  if (result)
  {
    id v1 = result;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    return v1;
  }
  return result;
}

uint64_t sub_1B91CD5EC(uint64_t a1)
{
  return a1;
}

void sub_1B91CD634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B91B6518(a5, a6);
  }
}

uint64_t sub_1B91CD6CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91CD6F8(uint64_t a1)
{
  return a1;
}

void sub_1B91CD730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1B91CD790()
{
  unint64_t result = qword_1EB9B4AF8;
  if (!qword_1EB9B4AF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9B4AF8);
  }
  return result;
}

void *sub_1B91CD7D0(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B91CD80C(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_string);
  sub_1B996E9F0();

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v6 = sub_1B996EC00();
  swift_bridgeObjectRelease_n();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = &v13;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1B91CE694;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_1B91CE6AC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B932BBE4;
  void aBlock[3] = &block_descriptor_78;
  int v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_enumerateAttributesInRange_options_usingBlock_, a3, v6, 0, v9);
  _Block_release(v9);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

unint64_t sub_1B91CD9DC()
{
  unint64_t result = qword_1E9EFD990;
  if (!qword_1E9EFD990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFD990);
  }
  return result;
}

uint64_t sub_1B91CDA30()
{
  return type metadata accessor for TTRReminderCellNotesEditingPresenter();
}

uint64_t type metadata accessor for TTRReminderCellNotesEditingPresenter()
{
  uint64_t result = qword_1EB9AD570;
  if (!qword_1EB9AD570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B91CDA84()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRReminderCellNotesEditingPresenter.StyleOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B91CDC14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderCellNotesEditingPresenter.StyleOptions()
{
  return &type metadata for TTRReminderCellNotesEditingPresenter.StyleOptions;
}

uint64_t destroy for EditingState(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for EditingState(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  int v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    _OWORD *v3 = *(_OWORD *)(a2 + 8);
    v3[1] = v6;
  }
  return a1;
}

uint64_t assignWithCopy for EditingState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B90CCA68(a1 + 8, &qword_1EB9B5598);
      long long v7 = v5[1];
      *uint64_t v4 = *v5;
      v4[1] = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 24) = v8;
  }
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EditingState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  long long v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = (_OWORD *)(a2 + 8);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    sub_1B90CCA68((uint64_t)v3, &qword_1EB9B5598);
LABEL_5:
    long long v7 = v4[1];
    _OWORD *v3 = *v4;
    v3[1] = v7;
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EditingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditingState()
{
  return &type metadata for EditingState;
}

uint64_t sub_1B91CDFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_1B91CE008(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1B9969C00();
  BOOL result = 0;
  if (v8 != a2 && a3 >= 1)
  {
    if (a1)
    {
      if (a1 != 1)
      {
        v39[0] = 0;
        v39[1] = 0;
        id v30 = objc_msgSend(self, sel_attributeNameForStyle_, 0);
        id v31 = objc_msgSend(a4, sel_attribute_atIndex_longestEffectiveRange_inRange_, v30, a2, v39, a2, a3);

        if (v31)
        {
          sub_1B9970200();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v46 = 0u;
          long long v47 = 0u;
        }
        sub_1B90BFE54((uint64_t)&v46, (uint64_t)&aBlock, &qword_1EB9B4D10);
        sub_1B9109C00((uint64_t)&aBlock, (uint64_t)&v46);
        if (*((void *)&v47 + 1))
        {
          if swift_dynamicCast() && (v38)
          {
            sub_1B996FFB0();
            uint64_t v33 = v32;
            char v35 = v34;
            sub_1B90CCA68((uint64_t)&aBlock, &qword_1EB9B4D10);
            return (v35 & 1) == 0 && v33 != a3;
          }
        }
        else
        {
          sub_1B90CCA68((uint64_t)&v46, &qword_1EB9B4D10);
        }
        sub_1B90CCA68((uint64_t)&aBlock, &qword_1EB9B4D10);
        return 1;
      }
      id v10 = objc_msgSend(self, sel_attributeNameForStyle_, 1);
      MEMORY[0x1F4188790](v10);
      uint64_t v37 = 2;
      *(void *)&long long v46 = MEMORY[0x1E4FBC860];
      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = sub_1B91CE63C;
      v11[3] = v36;
      v11[4] = &v46;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_1B91CE880;
      *(void *)(v12 + 24) = v11;
      uint64_t v44 = sub_1B91B7BBC;
      uint64_t v45 = v12;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v41 = 1107296256;
      uint64_t v42 = sub_1B91077A8;
      uint64_t v43 = &block_descriptor_57;
      uint64_t v13 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(a4, sel_enumerateAttribute_inRange_options_usingBlock_, v10, a2, a3, 0, v13);
      _Block_release(v13);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
      }
      uint64_t v15 = v46;

      swift_release();
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        uint64_t v17 = 0;
        uint64_t v18 = (uint64_t *)(v15 + 40);
        while (1)
        {
          uint64_t v19 = *v18;
          v18 += 2;
          BOOL v20 = __OFADD__(v17, v19);
          v17 += v19;
          if (v20) {
            break;
          }
          if (!--v16) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      id v21 = objc_msgSend(self, sel_attributeNameForStyle_, 1);
      MEMORY[0x1F4188790](v21);
      uint64_t v37 = 1;
      *(void *)&long long v46 = MEMORY[0x1E4FBC860];
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = sub_1B91CE884;
      v22[3] = v36;
      v22[4] = &v46;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_1B91CE880;
      *(void *)(v23 + 24) = v22;
      uint64_t v44 = sub_1B91B7BBC;
      uint64_t v45 = v23;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v41 = 1107296256;
      uint64_t v42 = sub_1B91077A8;
      uint64_t v43 = &block_descriptor_69_0;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(a4, sel_enumerateAttribute_inRange_options_usingBlock_, v21, a2, a3, 0, v24);
      _Block_release(v24);
      char v25 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v25) {
        goto LABEL_34;
      }
      uint64_t v26 = v46;

      swift_release();
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v17 = 0;
        uint64_t v28 = (uint64_t *)(v26 + 40);
        while (1)
        {
          uint64_t v29 = *v28;
          v28 += 2;
          BOOL v20 = __OFADD__(v17, v29);
          v17 += v29;
          if (v20) {
            goto LABEL_32;
          }
          if (!--v27) {
            goto LABEL_20;
          }
        }
      }
    }
    uint64_t v17 = 0;
LABEL_20:
    swift_bridgeObjectRelease();
    return v17 != a3;
  }
  return result;
}

uint64_t sub_1B91CE5BC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE5CC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE5DC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE5EC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE5FC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE60C()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE61C()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE62C()
{
  return swift_deallocObject();
}

BOOL sub_1B91CE63C(uint64_t a1)
{
  return sub_1B91CCD58(a1, *(void *)(v1 + 16));
}

uint64_t sub_1B91CE644()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE654()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE664()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE674()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE684()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B91CBCB0(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1B91CE69C()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B932BBBC(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

unint64_t sub_1B91CE6B4()
{
  unint64_t result = qword_1EB9B5DD8;
  if (!qword_1EB9B5DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB9B5DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B5DD8);
  }
  return result;
}

uint64_t sub_1B91CE710()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1B91CE750()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, v3, v2);
}

uint64_t sub_1B91CE7AC()
{
  return swift_deallocObject();
}

uint64_t sub_1B91CE7BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B91CE81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91CE8C0()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFD998);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFD998);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1B91CE988(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  (*(void (**)(uint64_t))(*(void *)(v2 + 96) + 24))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B91CEAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1B91CEB30(a1, a2);
  return v4;
}

char *sub_1B91CEB30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 136);
  *(void *)&v2[v6] = sub_1B996E6B0();
  swift_weakInit();
  uint64_t v7 = qword_1EB9A92B0++;
  *((void *)v2 + 2) = v7;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 32))(&v2[*(void *)(*(void *)v2 + 120)], a1);
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v5 + 88) - 8) + 32))(&v2[*(void *)(*(void *)v2 + 128)], a2);
  return v2;
}

uint64_t sub_1B91CEC94(uint64_t a1)
{
  uint64_t v2 = v1;
  if (swift_weakLoadStrong())
  {
    swift_release();
    if (qword_1E9EFA2A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B996D300();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E9EFD998);
    uint64_t v5 = sub_1B996D2F0();
    os_log_type_t v6 = sub_1B996F650();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1B90A0000, v5, v6, "newChild.parentNode should be nil.", v7, 2u);
      MEMORY[0x1BA9DB030](v7, -1, -1);
    }
  }
  swift_beginAccess();
  sub_1B996EFA0();
  swift_retain();
  sub_1B996EF70();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  swift_initStackObject();
  uint64_t v8 = sub_1B996EE80();
  *uint64_t v9 = a1;
  uint64_t v10 = sub_1B91F99B0(v8);
  swift_retain();
  sub_1B91CFA00(v10, v2, (void (*)(uint64_t, uint64_t))sub_1B91CFE04, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B91CEEA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = *v2;
  uint64_t v4 = sub_1B996AC10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B996AAE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4C10);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1;
  sub_1B996AAF0();
  uint64_t v17 = &v16[*(int *)(v14 + 44)];
  uint64_t v34 = (uint64_t)v2 + *(void *)(*v2 + 136);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v35 = v8 + 16;
  uint64_t v18 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v29 = (void (**)(char *, uint64_t))(v5 + 8);
  id v30 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  while (1)
  {
    v32(v12, v17, v7);
    sub_1B91CFE40((unint64_t *)&qword_1EB9B1AC0, MEMORY[0x1E4F27D00]);
    uint64_t v19 = v33;
    sub_1B996F430();
    sub_1B91CFE40(&qword_1EB9B1AB0, MEMORY[0x1E4F27CC8]);
    char v20 = sub_1B996E990();
    id v21 = *v18;
    (*v18)(v19, v7);
    v21(v12, v7);
    if (v20) {
      break;
    }
    uint64_t v22 = (void (*)(char *, void))sub_1B996F4C0();
    v22(v37, 0);
    uint64_t v23 = v31;
    (*v30)(v31, v16, v4);
    sub_1B996F440();
    (*v29)(v23, v4);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    swift_initStackObject();
    uint64_t v24 = sub_1B996EE80();
    swift_beginAccess();
    sub_1B996EFE0();
    swift_endAccess();
    uint64_t v25 = sub_1B91F99B0(v24);
    sub_1B91CF6E0(v25, (void (*)(uint64_t))sub_1B91CFE20, 0);
    swift_bridgeObjectRelease();
  }
  sub_1B91CFE88((uint64_t)v16);
  swift_beginAccess();
  uint64_t v26 = sub_1B996EFA0();
  Array.remove(at:)(v28, v26);
  return swift_endAccess();
}

uint64_t sub_1B91CF310(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (uint64_t)v2 + *(void *)(*v2 + 120);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 24))(v6, a1);
  swift_endAccess();
  uint64_t v7 = (uint64_t)v2 + *(void *)(*v2 + 128);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 88) - 8) + 24))(v7, a2);
  return swift_endAccess();
}

uint64_t sub_1B91CF440(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 136));
  swift_beginAccess();
  uint64_t v4 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B91CF6E0(v4, (void (*)(uint64_t))sub_1B91CFE20, 0);
  swift_bridgeObjectRelease();
  void *v3 = a1;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v5 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B91CFA00(v5, v1, (void (*)(uint64_t, uint64_t))sub_1B91CFE04, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B91CF550(unint64_t a1)
{
  return sub_1B91CF568(a1, (void (*)(uint64_t))sub_1B91CF550);
}

uint64_t sub_1B91CF568(unint64_t a1, void (*a2)(uint64_t))
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t result = sub_1B9970930();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1BA9D9380](v6, a1);
      }
      else {
        swift_retain();
      }
      ++v6;
      swift_weakAssign();
      swift_beginAccess();
      uint64_t v7 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      a2(v7);
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B91CF6E0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (MEMORY[0x1BA9D7DA0](v8, v3))
  {
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v10 = i - 4;
      char v11 = sub_1B996EF20();
      sub_1B996EE90();
      if (v11)
      {
        uint64_t v12 = *(void *)(a1 + 8 * i);
        swift_retain();
        uint64_t v13 = i - 3;
        if (__OFADD__(v10, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v12 = sub_1B9970550();
        uint64_t v13 = i - 3;
        if (__OFADD__(v10, 1))
        {
LABEL_9:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      a2(v12);
      swift_beginAccess();
      uint64_t v14 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B91CF6E0(v14, a2, a3);
      swift_release();
      swift_bridgeObjectRelease();
      if (v13 == MEMORY[0x1BA9D7DA0](a1, v4)) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B91CF868(unint64_t a1, uint64_t a2)
{
  return sub_1B91CF880(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B91CF868);
}

uint64_t sub_1B91CF880(unint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v5) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t result = sub_1B9970930();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x1BA9D9380](v7, a1);
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      ++v7;
      swift_weakAssign();
      swift_beginAccess();
      uint64_t v9 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      a3(v9, v8);
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B91CFA00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (MEMORY[0x1BA9D7DA0](v10, v4))
  {
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v12 = i - 4;
      char v13 = sub_1B996EF20();
      sub_1B996EE90();
      if (v13)
      {
        uint64_t v14 = *(void *)(a1 + 8 * i);
        swift_retain();
        uint64_t v15 = i - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v14 = sub_1B9970550();
        uint64_t v15 = i - 3;
        if (__OFADD__(v12, 1))
        {
LABEL_9:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      a3(v14, a2);
      swift_beginAccess();
      uint64_t v16 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B91CFA00(v16, v14, a3, a4);
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 == MEMORY[0x1BA9D7DA0](a1, v5)) {
        return swift_bridgeObjectRelease();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t *TTRTreeStorageNode.deinit()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 128));
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return v0;
}

uint64_t TTRTreeStorageNode.__deallocating_deinit()
{
  TTRTreeStorageNode.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B91CFCF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRTreeStorageNode()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B91CFE04()
{
  return swift_weakAssign();
}

uint64_t sub_1B91CFE20()
{
  return swift_weakAssign();
}

uint64_t sub_1B91CFE40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B91CFE88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B91CFEE8()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListRouter()
{
  return self;
}

uint64_t sub_1B91CFF4C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFD9B0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFD9B0);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1B91D0014()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  id v6 = v4;
  unint64_t v7 = v5(ObjectType, v2);
  unint64_t v8 = v7;
  v22[0] = MEMORY[0x1E4FBC860];
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v9) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v1 + 40);
    uint64_t v16 = swift_getObjectType();
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v16, v15);
    uint64_t v19 = v18;
    id v21 = v20;
    TTRReminderDetailPendingMoveInteractorCapability.EffectiveList.listForDisplaying.getter(v20, (void *)v17, v18, (uint64_t)v22);

    LOBYTE(v17) = sub_1B91D1C58(v6, v14, (uint64_t)v22);
    return v17 & 1;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t result = sub_1B9970930();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1BA9D9380](i, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      char v13 = v12;
      if (objc_msgSend(v12, sel_isUnsupported))
      {
      }
      else
      {
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v14 = v22[0];
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B91D022C()
{
  sub_1B90D88A0(v0 + 16);
  sub_1B90D88A0(v0 + 32);
  sub_1B91B6518(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListPresenter()
{
  return self;
}

uint64_t getEnumTagSinglePayload for TTRISubtaskListPresenter.PostModelUpdateAction(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISubtaskListPresenter.PostModelUpdateAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISubtaskListPresenter.PostModelUpdateAction()
{
  return &type metadata for TTRISubtaskListPresenter.PostModelUpdateAction;
}

id sub_1B91D0350(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 176);
  *(void *)(a2 + 176) = a1;

  return a1;
}

void sub_1B91D0390(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = a4;
  id v50 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996A580();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v62 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)v49 - v13;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v18 = (void **)((char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = MEMORY[0x1E4FBC860];
  unint64_t v64 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(v15 + 16);
  if (v20)
  {
    v49[0] = v15;
    v49[1] = a3;
    uint64_t v21 = v15 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v22 = *(void *)(v16 + 72);
    uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v55 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    char v53 = (void (**)(char *, uint64_t))(v10 + 8);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v59 = v14;
    uint64_t v60 = v8;
    uint64_t v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v58 = v22;
    uint64_t v54 = v18;
    do
    {
      sub_1B91D1884(v21, (uint64_t)v18, type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      sub_1B90D4358((uint64_t)v18 + *(int *)(v14 + 20), (uint64_t)v8);
      if ((*v23)(v8, 1, v9) == 1)
      {
        sub_1B90CCA68((uint64_t)v8, &qword_1EB9B1A70);
        sub_1B91D18EC((uint64_t)v18, type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      }
      else
      {
        uint64_t v24 = v61;
        (*v56)(v61, v8, v9);
        uint64_t v25 = *v18;
        uint64_t v26 = *v55;
        uint64_t v27 = v62;
        (*v55)(v62, v24, v9);
        uint64_t v28 = (objc_class *)type metadata accessor for TTRIQuickLookImageAttachmentPreviewItem();
        uint64_t v29 = (char *)objc_allocWithZone(v28);
        *(void *)&v29[OBJC_IVAR____TtC15RemindersUICore39TTRIQuickLookImageAttachmentPreviewItem_attachmentID] = v25;
        v26(&v29[OBJC_IVAR____TtC15RemindersUICore39TTRIQuickLookImageAttachmentPreviewItem_fileURL], v27, v9);
        uint64_t v18 = v54;
        v63.receiver = v29;
        v63.super_class = v28;
        id v30 = v25;
        objc_msgSendSuper2(&v63, sel_init);
        id v31 = *v53;
        (*v53)(v27, v9);
        v31(v24, v9);
        uint64_t v32 = sub_1B91D18EC((uint64_t)v18, type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        MEMORY[0x1BA9D7C50](v32);
        if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B996EEB0();
        }
        sub_1B996EF30();
        sub_1B996EE70();
        uint64_t v14 = v59;
        unint64_t v8 = v60;
        uint64_t v23 = v57;
        uint64_t v22 = v58;
      }
      v21 += v22;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    unint64_t v19 = v64;
  }
  if (v19 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v48 = sub_1B9970930();
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_12;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_12:
  id v33 = v50;
  uint64_t v34 = sub_1B91D0F3C(v19);
  char v36 = v35;

  if (v36) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = v34;
  }
  char v38 = __swift_project_boxed_opaque_existential_1((void *)(v51 + 96), *(void *)(v51 + 120));
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v19 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9EFDA30);
    sub_1B99708C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B9970BC0();
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = *v38;
  id v40 = objc_allocWithZone((Class)type metadata accessor for TTRIQuickLookPreviewController());
  uint64_t v41 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v42 = TTRIQuickLookPreviewController.init(ttr_previewItems:)(v41);
  objc_msgSend(v42, sel_setCurrentPreviewItemIndex_, v37);
  uint64_t v43 = &v42[OBJC_IVAR____TtC15RemindersUICore30TTRIQuickLookPreviewController_transitionDelegate];
  swift_beginAccess();
  *((void *)v43 + 1) = v52;
  uint64_t v44 = swift_unknownObjectWeakAssign();
  uint64_t v45 = MEMORY[0x1BA9DB180](v44);
  swift_unknownObjectRetain();
  objc_msgSend(v42, sel_setDelegate_, v45);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  long long v46 = (void *)MEMORY[0x1BA9DB180](v39 + 16);
  if (v46)
  {
    long long v47 = v46;
    objc_msgSend(v46, sel_presentViewController_animated_completion_, v42, 1, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B91D0968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  id v5 = objc_msgSend(*(id *)(a1 + *(int *)(v4 + 20)), sel_stringRepresentation);
  uint64_t v6 = sub_1B996E9F0();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(*(id *)(a2 + *(int *)(v4 + 20)), sel_stringRepresentation);
  uint64_t v10 = sub_1B996E9F0();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_1B91D0A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = *(void **)(a1 + v11);
  if (v12)
  {
    id v13 = objc_msgSend(v12, sel_string);
    uint64_t v14 = sub_1B996E9F0();
    unint64_t v16 = v15;

    uint64_t v17 = *(void **)(a2 + *(int *)(v10 + 28));
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xE000000000000000;
    uint64_t v17 = *(void **)(a2 + v11);
    if (v17)
    {
LABEL_3:
      id v18 = objc_msgSend(v17, sel_string);
      uint64_t v19 = sub_1B996E9F0();
      unint64_t v21 = v20;

      if (v14 != v19) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  unint64_t v21 = 0xE000000000000000;
  if (v14) {
    goto LABEL_9;
  }
LABEL_7:
  if (v16 == v21)
  {
    swift_bridgeObjectRelease_n();
    sub_1B91D1884(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
    sub_1B91D1884(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
    goto LABEL_10;
  }
LABEL_9:
  char v22 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B91D1884(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  sub_1B91D1884(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  if ((v22 & 1) == 0)
  {
    sub_1B91D18EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
    sub_1B91D18EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
    char v25 = 0;
    return v25 & 1;
  }
LABEL_10:
  char v23 = v9[*(int *)(v10 + 32)];
  sub_1B91D18EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  char v24 = v7[*(int *)(v10 + 32)];
  sub_1B91D18EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  char v25 = v23 ^ v24 ^ 1;
  return v25 & 1;
}

void sub_1B91D0CC8(uint64_t a1)
{
  if (*(void *)(v1 + 56))
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v1 + 72);
    uint64_t v4 = *(void **)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 20));
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v5 = objc_msgSend(v4, sel_stringRepresentation);
    uint64_t v6 = sub_1B996E9F0();
    uint64_t v8 = v7;

    if (*(void *)(v3 + 16))
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      unint64_t v9 = sub_1B90CFBBC(v6, v8);
      if (v10)
      {
        uint64_t v11 = *(void *)(*(void *)(v3 + 56) + 8 * v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (__OFADD__(v11, 1))
        {
          __break(1u);
        }
        else
        {
          uint64_t v12 = *(void *)(*(void *)(v2 + 80) + 40);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, id (*)(void *), uint64_t, uint64_t, uint64_t))(v12 + 272))(v11 + 1, sub_1B91D1A0C, v2, ObjectType, v12);
        }
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (qword_1E9EFA2A8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B996D300();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E9EFD9B0);
    oslog = sub_1B996D2F0();
    os_log_type_t v15 = sub_1B996F650();
    if (os_log_type_enabled(oslog, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl(&dword_1B90A0000, oslog, v15, "requestNewSubtask: unable to find subtask", v16, 2u);
      MEMORY[0x1BA9DB030](v16, -1, -1);
    }
  }
}

uint64_t sub_1B91D0F3C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v2 = sub_1B9970930();
  swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
LABEL_3:
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
  for (uint64_t i = 0; ; ++i)
  {
    id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BA9D9380](i, a1) : *(id *)(a1 + 8 * i + 32);
    id v5 = v4;
    char v6 = sub_1B996FC90();

    if (v6) {
      break;
    }
    uint64_t v7 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v7 == v2) {
      return 0;
    }
  }
  return i;
}

void sub_1B91D1070(uint64_t a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v6 = *(void **)(a1 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
  if (qword_1E9EFA2A8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9EFD9B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v9 = objc_msgSend(v6, sel_objectID);
  *(void *)(inited + 72) = sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  *(void *)(inited + 48) = v9;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  id v10 = objc_msgSend(v6, sel_userActivity);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_1B996F720();
  }
}

uint64_t sub_1B91D1274()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA40);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v5 = *(void *)(v59 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v59);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v50 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA48);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1B91D0014();
  if (v15)
  {
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    uint64_t v57 = v4;
    uint64_t v58 = v13;
    uint64_t v52 = v10;
    uint64_t v53 = v5;
    id v54 = (id)(result & 1);
    uint64_t v55 = result;
    uint64_t v21 = v0[7];
    uint64_t v56 = v17;
    if (v21)
    {
      uint64_t v51 = v0[9];
      uint64_t v22 = v0[6];
      uint64_t v60 = v15;
      uint64_t v61 = v21;
      sub_1B91B64C8(v22, v21);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA50);
      sub_1B91D19B0();
      sub_1B996F3F0();
      uint64_t v20 = v56;
      sub_1B91B6518(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1B996CFC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 0, 1, v23);
    }
    else
    {
      uint64_t v24 = sub_1B996CFC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
    }
    uint64_t v25 = v0[6];
    uint64_t v26 = v0[7];
    char v27 = (char)v54;
    v1[6] = v54;
    v1[7] = v18;
    v1[8] = v19;
    v1[9] = v20;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B91B6518(v25, v26);
    if (MEMORY[0x1BA9DB180](v1 + 2))
    {
      sub_1B91E1DB8(v27, v18, v19, v20, v58);
      swift_unknownObjectRelease();
    }
    uint64_t v28 = MEMORY[0x1BA9DB180](v1 + 4);
    uint64_t v29 = (uint64_t)v57;
    if (v28)
    {
      *(unsigned char *)(v28 + OBJC_IVAR____TtC15RemindersUICore27TTRIReminderDetailPresenter_subtasksDidUpdate) = 1;
      *(unsigned char *)(v28 + OBJC_IVAR____TtC15RemindersUICore27TTRIReminderDetailPresenter_deferredUpdateContext) = 1;
      v30._object = (void *)0x80000001B99A7B20;
      v30._countAndFlagsBits = 0xD00000000000002CLL;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v30);
      swift_unknownObjectRelease();
    }
    id v31 = (void *)v1[22];
    uint64_t v32 = (uint64_t)v58;
    if (v31)
    {
      id v50 = v1 + 2;
      uint64_t v51 = v19;
      v1[22] = 0;
      uint64_t v33 = *(void *)(v18 + 16);
      id v54 = v31;
      if (v33)
      {
        uint64_t v34 = v31;
        uint64_t v35 = v53;
        uint64_t v36 = v18 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
        uint64_t v37 = *(void *)(v35 + 72);
        swift_bridgeObjectRetain_n();
        id v38 = v34;
        while (1)
        {
          sub_1B91D1884(v36, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
          id v39 = objc_msgSend(*(id *)&v8[*(int *)(v59 + 20)], sel_objectID);
          char v40 = sub_1B996FC90();

          if (v40) {
            break;
          }
          sub_1B91D18EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
          v36 += v37;
          if (!--v33)
          {
            swift_bridgeObjectRelease();
            uint64_t v41 = 1;
            uint64_t v29 = (uint64_t)v57;
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v29 = (uint64_t)v57;
        sub_1B91D194C((uint64_t)v8, (uint64_t)v57);
        uint64_t v41 = 0;
LABEL_18:
        uint64_t v32 = (uint64_t)v58;
        uint64_t v43 = (uint64_t)v52;
        uint64_t v44 = v53;
      }
      else
      {
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v42 = v31;
        uint64_t v41 = 1;
        uint64_t v43 = (uint64_t)v52;
        uint64_t v44 = v53;
      }
      uint64_t v45 = v59;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v29, v41, 1, v59);
      sub_1B91B6518(v55, v18);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v29, 1, v45) == 1)
      {
        id v46 = v54;

        sub_1B90CCA68(v32, &qword_1E9EFDA48);
        long long v47 = &qword_1E9EFDA40;
        uint64_t v48 = v29;
      }
      else
      {
        sub_1B91D194C(v29, v43);
        if (MEMORY[0x1BA9DB180](v50))
        {
          sub_1B91E2958(v43);
          swift_unknownObjectRelease();
        }
        id v49 = v54;

        sub_1B91D18EC(v43, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
        long long v47 = &qword_1E9EFDA48;
        uint64_t v48 = v32;
      }
      return sub_1B90CCA68(v48, v47);
    }
    else
    {
      sub_1B90CCA68((uint64_t)v58, &qword_1E9EFDA48);
      return sub_1B91B6518(v55, v18);
    }
  }
  return result;
}

uint64_t sub_1B91D1884(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B91D18EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B91D194C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B91D19B0()
{
  unint64_t result = qword_1E9EFDA58;
  if (!qword_1E9EFDA58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9EFDA50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDA58);
  }
  return result;
}

id sub_1B91D1A0C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 176);
  *(void *)(v1 + 176) = a1;

  return a1;
}

uint64_t destroy for TTRISubtaskListViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRISubtaskListViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRISubtaskListViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRISubtaskListViewModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRISubtaskListViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISubtaskListViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISubtaskListViewModel()
{
  return &type metadata for TTRISubtaskListViewModel;
}

uint64_t sub_1B91D1C58(void *a1, unint64_t a2, uint64_t a3)
{
  id v76 = a1;
  uint64_t isUniquelyReferenced_nonNull_native = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA60);
  unint64_t v6 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  uint64_t v78 = &v74[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B36B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v86 = &v74[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  MEMORY[0x1F4188790](v85);
  uint64_t v11 = &v74[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v89 = *(void *)(v84 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v84);
  uint64_t v88 = &v74[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v90 = &v74[-v15];
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v74[-v16];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA68);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (uint64_t)&v74[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  unint64_t v23 = (unint64_t)&v74[-v22];
  uint64_t v77 = a3;
  sub_1B91D27A0(a3, (uint64_t)&v96);
  uint64_t v24 = *((void *)&v97 + 1);
  if (!*((void *)&v97 + 1))
  {
    uint64_t v28 = (uint64_t *)&unk_1EB9B5F60;
    uint64_t v29 = &v96;
LABEL_6:
    sub_1B90CCA68((uint64_t)v29, v28);
    LODWORD(v27) = 0;
    goto LABEL_7;
  }
  uint64_t v25 = v98;
  __swift_project_boxed_opaque_existential_1(&v96, *((uint64_t *)&v97 + 1));
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 104))(v91, v24, v25);
  unint64_t v26 = v92;
  if (!v92)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v96);
    uint64_t v28 = (uint64_t *)&unk_1E9EFDA78;
    uint64_t v29 = (long long *)v91;
    goto LABEL_6;
  }
  char v27 = v93;
  __swift_project_boxed_opaque_existential_1(v91, v92);
  LODWORD(v27) = ((uint64_t (*)(unint64_t, _UNKNOWN **))v27[2])(v26, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v96);
LABEL_7:
  if (a2 >> 62) {
    goto LABEL_56;
  }
  uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  uint64_t v82 = v21;
  unint64_t v81 = v23;
  int v75 = (int)v27;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    a2 = MEMORY[0x1E4FBC860];
LABEL_22:
    uint64_t v17 = *(unsigned char **)(a2 + 16);
    id v83 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v84 = v6 + 56;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v6 = 0;
    char v27 = (_UNKNOWN **)MEMORY[0x1E4FBC868];
    uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
    *(void *)&long long v80 = a2;
    for (i = v17; ; uint64_t v17 = i)
    {
      if ((unsigned char *)v6 == v17)
      {
        uint64_t v44 = 1;
        uint64_t v45 = v17;
      }
      else
      {
        if (v6 >= *(void *)(a2 + 16)) {
          goto LABEL_53;
        }
        uint64_t v45 = (unsigned char *)(v6 + 1);
        uint64_t v46 = (uint64_t)&v78[*(int *)(isUniquelyReferenced_nonNull_native + 48)];
        sub_1B91D2848(a2+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(void *)(v89 + 72) * v6, v46, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
        uint64_t v47 = v21 + *(int *)(isUniquelyReferenced_nonNull_native + 48);
        *(void *)uint64_t v21 = v6;
        sub_1B91D194C(v46, v47);
        uint64_t v44 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v84)(v21, v44, 1, isUniquelyReferenced_nonNull_native);
      sub_1B91D28B0(v21, v23);
      if ((*v83)(v23, 1, isUniquelyReferenced_nonNull_native) == 1)
      {

        sub_1B90CCA68(v77, (uint64_t *)&unk_1EB9B5F60);
        swift_bridgeObjectRelease();
        return v75 & 1;
      }
      unint64_t v48 = *(void *)v23;
      uint64_t v86 = v45;
      unint64_t v87 = v48;
      unint64_t v6 = isUniquelyReferenced_nonNull_native;
      uint64_t v21 = (uint64_t)v90;
      sub_1B91D194C(v23 + *(int *)(isUniquelyReferenced_nonNull_native + 48), (uint64_t)v90);
      uint64_t v49 = *(int *)(v85 + 20);
      id v50 = objc_msgSend(*(id *)(v21 + v49), sel_stringRepresentation);
      a2 = sub_1B996E9F0();
      uint64_t v17 = v51;

      sub_1B91D2848(v21, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v91[0] = v11;
      unint64_t v23 = sub_1B90CFBBC(a2, (uint64_t)v17);
      uint64_t v53 = v11[2];
      BOOL v54 = (v52 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v30 = sub_1B9970930();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      uint64_t v21 = v52;
      if (v11[3] >= v55)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v11 = (void *)v91[0];
          if (v52) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1B9175E90();
          uint64_t v11 = (void *)v91[0];
          if (v21) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1B916C8A8(v55, isUniquelyReferenced_nonNull_native);
        unint64_t v56 = sub_1B90CFBBC(a2, (uint64_t)v17);
        if ((v21 & 1) != (v57 & 1)) {
          goto LABEL_58;
        }
        unint64_t v23 = v56;
        uint64_t v11 = (void *)v91[0];
        if (v21)
        {
LABEL_37:
          sub_1B91D2918((uint64_t)v88, v11[7] + *(void *)(v89 + 72) * v23);
          goto LABEL_41;
        }
      }
      v11[(v23 >> 6) + 8] |= 1 << v23;
      uint64_t v58 = (unint64_t *)(v11[6] + 16 * v23);
      *uint64_t v58 = a2;
      v58[1] = (unint64_t)v17;
      sub_1B91D194C((uint64_t)v88, v11[7] + *(void *)(v89 + 72) * v23);
      uint64_t v59 = v11[2];
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60) {
        goto LABEL_54;
      }
      v11[2] = v61;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v62 = objc_msgSend(*(id *)&v90[v49], sel_stringRepresentation);
      a2 = sub_1B996E9F0();
      uint64_t v17 = v63;

      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v91[0] = v27;
      unint64_t v23 = sub_1B90CFBBC(a2, (uint64_t)v17);
      uint64_t v65 = v27[2];
      BOOL v66 = (v64 & 1) == 0;
      uint64_t v67 = (uint64_t)v65 + v66;
      if (__OFADD__(v65, v66)) {
        goto LABEL_52;
      }
      uint64_t v21 = v64;
      if ((uint64_t)v27[3] >= v67)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1B9174ECC();
        }
      }
      else
      {
        sub_1B916AF10(v67, isUniquelyReferenced_nonNull_native);
        unint64_t v68 = sub_1B90CFBBC(a2, (uint64_t)v17);
        if ((v21 & 1) != (v69 & 1)) {
          goto LABEL_58;
        }
        unint64_t v23 = v68;
      }
      uint64_t isUniquelyReferenced_nonNull_native = v6;
      char v27 = (_UNKNOWN **)v91[0];
      unint64_t v6 = (unint64_t)v86;
      if (v21)
      {
        *(void *)(*(void *)(v91[0] + 56) + 8 * v23) = v87;
      }
      else
      {
        *(void *)(v91[0] + 8 * (v23 >> 6) + 64) |= 1 << v23;
        uint64_t v70 = (unint64_t *)((char *)v27[6] + 16 * v23);
        *uint64_t v70 = a2;
        v70[1] = (unint64_t)v17;
        *((void *)v27[7] + v23) = v87;
        uint64_t v71 = (char *)v27[2];
        BOOL v60 = __OFADD__(v71, 1);
        uint64_t v72 = v71 + 1;
        if (v60) {
          goto LABEL_55;
        }
        v27[2] = v72;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B91D8EE8((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      uint64_t v21 = v82;
      unint64_t v23 = v81;
      a2 = v80;
    }
  }
  unint64_t v95 = MEMORY[0x1E4FBC860];
  sub_1B90E45F0(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t i = (unsigned char *)v6;
    uint64_t v31 = 0;
    unint64_t v87 = a2;
    id v83 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(a2 & 0xC000000000000001);
    uint64_t v98 = 0;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v80 = xmmword_1B997AB90;
    uint64_t v32 = (uint64_t)v86;
    do
    {
      uint64_t v33 = v30;
      if (v83) {
        id v34 = (id)MEMORY[0x1BA9D9380](v31, v87);
      }
      else {
        id v34 = *(id *)(v87 + 8 * v31 + 32);
      }
      uint64_t v35 = v34;
      uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v32, 1, 1, v36);
      unint64_t v92 = sub_1B91D2808();
      v91[0] = v35;
      v93 = &protocol witness table for REMReminderChangeItem;
      uint64_t v94 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA70);
      uint64_t v37 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Reminder.Override(0) - 8);
      unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v80;
      unint64_t v40 = v39 + v38;
      *(void *)unint64_t v40 = 0;
      *(void *)(v40 + 8) = 0;
      *(unsigned char *)(v40 + 16) = 0;
      swift_storeEnumTagMultiPayload();
      id v41 = v35;
      TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)(v32, (uint64_t)v91, (uint64_t)&v96, v39, (uint64_t)v11);
      *((unsigned char *)v11 + *(int *)(v85 + 160)) = 0;
      sub_1B91D2848((uint64_t)v11, (uint64_t)v17, type metadata accessor for TTRRemindersListViewModel.Reminder);
      *(void *)&v17[*(int *)(v84 + 20)] = v41;
      sub_1B91D8EE8((uint64_t)v11, type metadata accessor for TTRRemindersListViewModel.Reminder);
      a2 = v95;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B90E45F0(0, *(void *)(a2 + 16) + 1, 1);
        a2 = v95;
      }
      unint64_t v43 = *(void *)(a2 + 16);
      unint64_t v42 = *(void *)(a2 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1B90E45F0(v42 > 1, v43 + 1, 1);
        a2 = v95;
      }
      ++v31;
      *(void *)(a2 + 16) = v43 + 1;
      sub_1B91D194C((uint64_t)v17, a2+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(void *)(v89 + 72) * v43);
      uint64_t v30 = v33;
    }
    while (v33 != v31);
    swift_bridgeObjectRelease();
    uint64_t v21 = v82;
    unint64_t v23 = v81;
    unint64_t v6 = (unint64_t)i;
    goto LABEL_22;
  }
  __break(1u);
LABEL_58:
  uint64_t result = sub_1B9970C70();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRISubtaskListViewModel.Subtask()
{
  uint64_t result = qword_1E9EFDA88;
  if (!qword_1E9EFDA88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B91D27A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B91D2808()
{
  unint64_t result = qword_1EB9B4B30;
  if (!qword_1EB9B4B30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9B4B30);
  }
  return result;
}

uint64_t sub_1B91D2848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B91D28B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91D2918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void **sub_1B91D297C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = (char *)*a2;
    *a1 = *a2;
    uint64_t v10 = (void **)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
    return v10;
  }
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v288 = v3;
  v289 = a1;
  uint64_t v285 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v70 = *v3;
          *a1 = *v3;
          id v71 = v70;
          goto LABEL_33;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v69 = sub_1B996A6F0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v69 - 8) + 16))(a1, v3, v69);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v72 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v73 = v72[5];
      v74 = (char *)a1 + v73;
      int v75 = (char *)v3 + v73;
      uint64_t v76 = *(uint64_t *)((char *)v3 + v73 + 8);
      if (v76)
      {
        *(void *)v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        uint64_t v77 = (void *)*((void *)v75 + 2);
        uint64_t v78 = *((void *)v75 + 3);
        uint64_t v79 = *((void *)v75 + 4);
        uint64_t v80 = *((void *)v75 + 5);
        uint64_t v81 = *((void *)v75 + 6);
        uint64_t v82 = *((void *)v75 + 7);
        unsigned __int8 v281 = v75[64];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v77, v78, v79, v80, v81, v82, v281);
        *((void *)v74 + 2) = v77;
        *((void *)v74 + 3) = v78;
        *((void *)v74 + 4) = v79;
        *((void *)v74 + 5) = v80;
        *((void *)v74 + 6) = v81;
        *((void *)v74 + 7) = v82;
        v74[64] = v281;
        *(_DWORD *)(v74 + 65) = *(_DWORD *)(v75 + 65);
        int v83 = v75[120];
        if (v83 == 255)
        {
          long long v84 = *(_OWORD *)(v75 + 88);
          *(_OWORD *)(v74 + 72) = *(_OWORD *)(v75 + 72);
          *(_OWORD *)(v74 + 88) = v84;
          *(_OWORD *)(v74 + 104) = *(_OWORD *)(v75 + 104);
          v74[120] = v75[120];
        }
        else
        {
          char v88 = v83 & 1;
          uint64_t v89 = *((void *)v75 + 10);
          v282 = (void *)*((void *)v75 + 9);
          uint64_t v90 = *((void *)v75 + 11);
          uint64_t v91 = *((void *)v75 + 12);
          uint64_t v92 = *((void *)v75 + 13);
          uint64_t v93 = *((void *)v75 + 14);
          sub_1B90BFEB8(v282, v89, v90, v91, v92, v93, v83 & 1);
          *((void *)v74 + 9) = v282;
          *((void *)v74 + 10) = v89;
          *((void *)v74 + 11) = v90;
          *((void *)v74 + 12) = v91;
          *((void *)v74 + 13) = v92;
          *((void *)v74 + 14) = v93;
          v74[120] = v88;
        }
        uint64_t v3 = v288;
        v74[121] = v75[121];
        a1 = v289;
      }
      else
      {
        long long v85 = *((_OWORD *)v75 + 5);
        *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
        *((_OWORD *)v74 + 5) = v85;
        *((_OWORD *)v74 + 6) = *((_OWORD *)v75 + 6);
        *(_OWORD *)(v74 + 106) = *(_OWORD *)(v75 + 106);
        long long v86 = *((_OWORD *)v75 + 1);
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v86;
        long long v87 = *((_OWORD *)v75 + 3);
        *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
        *((_OWORD *)v74 + 3) = v87;
      }
      *((unsigned char *)a1 + v72[6]) = *((unsigned char *)v3 + v72[6]);
      *((unsigned char *)a1 + v72[7]) = *((unsigned char *)v3 + v72[7]);
      *((unsigned char *)a1 + v72[8]) = *((unsigned char *)v3 + v72[8]);
      *((unsigned char *)a1 + v72[9]) = *((unsigned char *)v3 + v72[9]);
      *((unsigned char *)a1 + v72[10]) = *((unsigned char *)v3 + v72[10]);
      uint64_t v94 = v72[11];
      unint64_t v95 = *(void **)((char *)v3 + v94);
      *(void **)((char *)a1 + v94) = v95;
      id v96 = v95;
      goto LABEL_68;
    case 1u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v98 = *v3;
          *a1 = *v3;
          id v99 = v98;
          goto LABEL_44;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v97 = sub_1B996A6F0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v97 - 8) + 16))(a1, v3, v97);
LABEL_44:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, v3, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      uint64_t v100 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v101 = v100[5];
      uint64_t v102 = (char *)a1 + v101;
      uint64_t v103 = (char *)v3 + v101;
      uint64_t v104 = *(uint64_t *)((char *)v3 + v101 + 8);
      if (v104)
      {
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = v104;
        v106 = (void *)*((void *)v103 + 2);
        uint64_t v105 = *((void *)v103 + 3);
        uint64_t v107 = *((void *)v103 + 4);
        uint64_t v108 = *((void *)v103 + 5);
        uint64_t v109 = *((void *)v103 + 6);
        uint64_t v110 = *((void *)v103 + 7);
        unsigned __int8 v283 = v103[64];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v106, v105, v107, v108, v109, v110, v283);
        *((void *)v102 + 2) = v106;
        *((void *)v102 + 3) = v105;
        *((void *)v102 + 4) = v107;
        *((void *)v102 + 5) = v108;
        *((void *)v102 + 6) = v109;
        *((void *)v102 + 7) = v110;
        v102[64] = v283;
        *(_DWORD *)(v102 + 65) = *(_DWORD *)(v103 + 65);
        int v111 = v103[120];
        if (v111 == 255)
        {
          long long v112 = *(_OWORD *)(v103 + 88);
          *(_OWORD *)(v102 + 72) = *(_OWORD *)(v103 + 72);
          *(_OWORD *)(v102 + 88) = v112;
          *(_OWORD *)(v102 + 104) = *(_OWORD *)(v103 + 104);
          v102[120] = v103[120];
        }
        else
        {
          char v116 = v111 & 1;
          v118 = (void *)*((void *)v103 + 9);
          uint64_t v117 = *((void *)v103 + 10);
          uint64_t v119 = *((void *)v103 + 11);
          uint64_t v120 = *((void *)v103 + 12);
          uint64_t v121 = *((void *)v103 + 13);
          uint64_t v122 = *((void *)v103 + 14);
          sub_1B90BFEB8(v118, v117, v119, v120, v121, v122, v111 & 1);
          *((void *)v102 + 9) = v118;
          *((void *)v102 + 10) = v117;
          *((void *)v102 + 11) = v119;
          *((void *)v102 + 12) = v120;
          *((void *)v102 + 13) = v121;
          *((void *)v102 + 14) = v122;
          v102[120] = v116;
        }
        uint64_t v3 = v288;
        v102[121] = v103[121];
        a1 = v289;
      }
      else
      {
        long long v113 = *((_OWORD *)v103 + 5);
        *((_OWORD *)v102 + 4) = *((_OWORD *)v103 + 4);
        *((_OWORD *)v102 + 5) = v113;
        *((_OWORD *)v102 + 6) = *((_OWORD *)v103 + 6);
        *(_OWORD *)(v102 + 106) = *(_OWORD *)(v103 + 106);
        long long v114 = *((_OWORD *)v103 + 1);
        *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
        *((_OWORD *)v102 + 1) = v114;
        long long v115 = *((_OWORD *)v103 + 3);
        *((_OWORD *)v102 + 2) = *((_OWORD *)v103 + 2);
        *((_OWORD *)v102 + 3) = v115;
      }
      *((unsigned char *)a1 + v100[6]) = *((unsigned char *)v3 + v100[6]);
      *((unsigned char *)a1 + v100[7]) = *((unsigned char *)v3 + v100[7]);
      *((unsigned char *)a1 + v100[8]) = *((unsigned char *)v3 + v100[8]);
      *((unsigned char *)a1 + v100[9]) = *((unsigned char *)v3 + v100[9]);
      *((unsigned char *)a1 + v100[10]) = *((unsigned char *)v3 + v100[10]);
      uint64_t v123 = v100[11];
      v124 = *(void **)((char *)v3 + v123);
      *(void **)((char *)a1 + v123) = v124;
      id v125 = v124;
      goto LABEL_68;
    case 2u:
      uint64_t v12 = *v3;
      *a1 = *v3;
      uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v14 = (void **)((char *)a1 + v13);
      uint64_t v15 = (void **)((char *)v3 + v13);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
      id v19 = v12;
      if (v18(v15, 1, v16))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v127 = *v15;
            *uint64_t v14 = *v15;
            id v128 = v127;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v126 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v126 - 8) + 16))(v14, v15, v126);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(v17 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      a1 = v289;
      goto LABEL_68;
    case 3u:
      uint64_t v21 = *v3;
      *a1 = *v3;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      unint64_t v23 = (void **)((char *)a1 + v22);
      uint64_t v24 = (void **)((char *)v3 + v22);
      uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v26 = *(void *)(v25 - 8);
      char v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
      id v28 = v21;
      if (v27(v24, 1, v25))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
        a1 = v289;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v53 = *v24;
            *unint64_t v23 = *v24;
            id v54 = v53;
            goto LABEL_66;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v132 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v132 - 8) + 16))(v23, v24, v132);
LABEL_66:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v23, v24, *(void *)(v26 + 64));
            break;
        }
        a1 = v289;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      goto LABEL_68;
    case 4u:
      uint64_t v30 = *v3;
      *a1 = *v3;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v32 = (void **)((char *)a1 + v31);
      uint64_t v33 = (void **)((char *)v3 + v31);
      uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
      id v37 = v30;
      if (v36(v33, 1, v34))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v130 = *v33;
            void *v32 = *v33;
            id v131 = v130;
            goto LABEL_62;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v129 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v129 - 8) + 16))(v32, v33, v129);
LABEL_62:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v32, v33, *(void *)(v35 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      a1 = v289;
      goto LABEL_68;
    case 5u:
      *a1 = *v3;
      *((unsigned char *)a1 + 8) = *((unsigned char *)v3 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
      uint64_t v39 = v3[2];
      a1[2] = v39;
      id v40 = v39;
      goto LABEL_68;
    case 6u:
      unint64_t v48 = *v3;
      *a1 = *v3;
      id v49 = v48;
      goto LABEL_68;
    case 7u:
      uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48))(v3, 1, v41))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEFF8);
        memcpy(a1, v3, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        *a1 = *v3;
        uint64_t v55 = *(int *)(v41 + 20);
        unint64_t v56 = (char *)a1 + v55;
        char v57 = (char *)v3 + v55;
        uint64_t v58 = sub_1B996BAD0();
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v60 = v58;
        a1 = v289;
        v59(v56, v57, v60);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v42 + 56))(v289, 0, 1, v41);
      }
      uint64_t v61 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      id v62 = (void **)((char *)a1 + v61);
      objc_super v63 = (void **)((char *)v3 + v61);
      uint64_t v64 = v63[1];
      if (v64)
      {
        *id v62 = *v63;
        v62[1] = v64;
        uint64_t v65 = (void *)v63[2];
        v62[2] = v65;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v66 = v65;
      }
      else
      {
        *(_OWORD *)id v62 = *(_OWORD *)v63;
        v62[2] = v63[2];
      }
      goto LABEL_68;
    case 8u:
      uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v51 + 48))(v3, 1, v50))
      {
        uint64_t v52 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, v3, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v67 = sub_1B996A6F0();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v67 - 8) + 16))(a1, v3, v67);
        *((unsigned char *)a1 + *(int *)(v50 + 20)) = *((unsigned char *)v3 + *(int *)(v50 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v51 + 56))(a1, 0, 1, v50);
      }
      uint64_t v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v68 + 20)) = *(void **)((char *)v3 + *(int *)(v68 + 20));
      goto LABEL_68;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)v3;
      uint64_t v44 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)v3 + v44;
      uint64_t v47 = sub_1B996D7B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
LABEL_68:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  v133 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v134 = v133[5];
  v135 = *(void **)((char *)v3 + v134);
  *(void **)((char *)a1 + v134) = v135;
  uint64_t v136 = v133[6];
  v137 = (char *)a1 + v136;
  v138 = (char *)v3 + v136;
  v137[4] = v138[4];
  *(_DWORD *)v137 = *(_DWORD *)v138;
  uint64_t v139 = v133[7];
  v140 = *(void **)((char *)v3 + v139);
  *(void **)((char *)a1 + v139) = v140;
  *((unsigned char *)a1 + v133[8]) = *((unsigned char *)v3 + v133[8]);
  uint64_t v141 = v133[9];
  v142 = (void **)((char *)a1 + v141);
  v143 = (void **)((char *)v3 + v141);
  uint64_t v144 = v143[1];
  void *v142 = *v143;
  v142[1] = v144;
  uint64_t v145 = v133[10];
  v146 = (void **)((char *)a1 + v145);
  v147 = (void **)((char *)v3 + v145);
  v148 = v3;
  uint64_t v149 = v147[1];
  void *v146 = *v147;
  v146[1] = v149;
  uint64_t v150 = v133[11];
  v151 = (void **)((char *)a1 + v150);
  v152 = (void **)((char *)v148 + v150);
  v153 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  uint64_t v286 = *((void *)v153 - 1);
  v154 = *(unsigned int (**)(void *, uint64_t, int *))(v286 + 48);
  id v155 = v135;
  id v156 = v140;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v154(v152, 1, v153))
  {
    uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B33F0);
    memcpy(v151, v152, *(void *)(*(void *)(v157 - 8) + 64));
  }
  else
  {
    uint64_t v158 = v152[1];
    void *v151 = *v152;
    v151[1] = v158;
    uint64_t v159 = v153[5];
    v160 = (char *)v151 + v159;
    v161 = (char *)v152 + v159;
    uint64_t v162 = sub_1B996A6F0();
    v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v163(v160, v161, v162);
    *((unsigned char *)v151 + v153[6]) = *((unsigned char *)v152 + v153[6]);
    *((unsigned char *)v151 + v153[7]) = *((unsigned char *)v152 + v153[7]);
    (*(void (**)(void *, void, uint64_t, int *))(v286 + 56))(v151, 0, 1, v153);
  }
  uint64_t v164 = v133[12];
  v165 = (char *)v289 + v164;
  v166 = (char *)v288 + v164;
  uint64_t v167 = *((void *)v166 + 3);
  if (v167)
  {
    v168 = *(void **)v166;
    v169 = (void *)*((void *)v166 + 1);
    *(void *)v165 = *(void *)v166;
    *((void *)v165 + 1) = v169;
    *((void *)v165 + 2) = *((void *)v166 + 2);
    *((void *)v165 + 3) = v167;
    uint64_t v170 = *((void *)v166 + 5);
    *((void *)v165 + 4) = *((void *)v166 + 4);
    *((void *)v165 + 5) = v170;
    v165[48] = v166[48];
    id v171 = v168;
    id v172 = v169;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v173 = *((_OWORD *)v166 + 1);
    *(_OWORD *)v165 = *(_OWORD *)v166;
    *((_OWORD *)v165 + 1) = v173;
    *((_OWORD *)v165 + 2) = *((_OWORD *)v166 + 2);
    v165[48] = v166[48];
  }
  *((unsigned char *)v289 + v133[13]) = *((unsigned char *)v288 + v133[13]);
  uint64_t v174 = v133[14];
  v175 = *(void **)((char *)v288 + v174);
  *(void **)((char *)v289 + v174) = v175;
  *(void **)((char *)v289 + v133[15]) = *(void **)((char *)v288 + v133[15]);
  *(void **)((char *)v289 + v133[16]) = *(void **)((char *)v288 + v133[16]);
  *((unsigned char *)v289 + v133[17]) = *((unsigned char *)v288 + v133[17]);
  *(void **)((char *)v289 + v133[18]) = *(void **)((char *)v288 + v133[18]);
  uint64_t v176 = v133[19];
  v177 = *(void **)((char *)v288 + v176);
  *(void **)((char *)v289 + v176) = v177;
  uint64_t v178 = v133[20];
  v179 = *(void **)((char *)v288 + v178);
  *(void **)((char *)v289 + v178) = v179;
  uint64_t v180 = v133[21];
  v181 = *(void **)((char *)v288 + v180);
  *(void **)((char *)v289 + v180) = v181;
  uint64_t v182 = v133[22];
  v183 = (char *)v289 + v182;
  v184 = (char *)v288 + v182;
  *(void *)v183 = *(void *)v184;
  v183[8] = v184[8];
  *((unsigned char *)v289 + v133[23]) = *((unsigned char *)v288 + v133[23]);
  *((unsigned char *)v289 + v133[24]) = *((unsigned char *)v288 + v133[24]);
  *((unsigned char *)v289 + v133[25]) = *((unsigned char *)v288 + v133[25]);
  *(void **)((char *)v289 + v133[26]) = *(void **)((char *)v288 + v133[26]);
  *(void **)((char *)v289 + v133[27]) = *(void **)((char *)v288 + v133[27]);
  *((unsigned char *)v289 + v133[28]) = *((unsigned char *)v288 + v133[28]);
  uint64_t v185 = v133[29];
  v186 = (void **)((char *)v289 + v185);
  v187 = (void **)((char *)v288 + v185);
  uint64_t v188 = v187[1];
  void *v186 = *v187;
  v186[1] = v188;
  uint64_t v189 = v133[30];
  v190 = (char *)v289 + v189;
  v191 = (char *)v288 + v189;
  uint64_t v192 = *((void *)v191 + 1);
  *(void *)v190 = *(void *)v191;
  *((void *)v190 + 1) = v192;
  v190[16] = v191[16];
  uint64_t v193 = v133[31];
  v194 = (void **)((char *)v289 + v193);
  v195 = (void **)((char *)v288 + v193);
  uint64_t v196 = *(uint64_t *)((char *)v288 + v193 + 8);
  id v197 = v175;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v198 = v177;
  id v199 = v179;
  id v200 = v181;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v196)
  {
    void *v194 = *v195;
    v194[1] = v196;
    v201 = (void *)v195[2];
    v194[2] = v201;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v202 = v201;
  }
  else
  {
    *(_OWORD *)v194 = *(_OWORD *)v195;
    v194[2] = v195[2];
  }
  v203 = v288;
  uint64_t v10 = v289;
  *((unsigned char *)v289 + v133[32]) = *((unsigned char *)v288 + v133[32]);
  uint64_t v204 = v133[33];
  v205 = (char *)v289 + v204;
  v206 = (char *)v288 + v204;
  v207 = *(void **)((char *)v288 + v204);
  if (!v207)
  {
    long long v215 = *((_OWORD *)v206 + 11);
    *((_OWORD *)v205 + 10) = *((_OWORD *)v206 + 10);
    *((_OWORD *)v205 + 11) = v215;
    long long v216 = *((_OWORD *)v206 + 13);
    *((_OWORD *)v205 + 12) = *((_OWORD *)v206 + 12);
    *((_OWORD *)v205 + 13) = v216;
    long long v217 = *((_OWORD *)v206 + 7);
    *((_OWORD *)v205 + 6) = *((_OWORD *)v206 + 6);
    *((_OWORD *)v205 + 7) = v217;
    long long v218 = *((_OWORD *)v206 + 9);
    *((_OWORD *)v205 + 8) = *((_OWORD *)v206 + 8);
    *((_OWORD *)v205 + 9) = v218;
    long long v219 = *((_OWORD *)v206 + 3);
    *((_OWORD *)v205 + 2) = *((_OWORD *)v206 + 2);
    *((_OWORD *)v205 + 3) = v219;
    long long v220 = *((_OWORD *)v206 + 5);
    *((_OWORD *)v205 + 4) = *((_OWORD *)v206 + 4);
    *((_OWORD *)v205 + 5) = v220;
    long long v221 = *((_OWORD *)v206 + 1);
    *(_OWORD *)v205 = *(_OWORD *)v206;
    *((_OWORD *)v205 + 1) = v221;
LABEL_86:
    *((void *)v205 + 28) = *((void *)v206 + 28);
    goto LABEL_87;
  }
  if (v207 != (void *)1)
  {
    uint64_t v222 = *((void *)v206 + 2);
    v284 = (void *)*((void *)v206 + 1);
    *(void *)v205 = v207;
    *((void *)v205 + 1) = v284;
    uint64_t v224 = *((void *)v206 + 3);
    uint64_t v223 = *((void *)v206 + 4);
    *((void *)v205 + 2) = v222;
    *((void *)v205 + 3) = v224;
    uint64_t v226 = *((void *)v206 + 5);
    uint64_t v225 = *((void *)v206 + 6);
    *((void *)v205 + 4) = v223;
    *((void *)v205 + 5) = v226;
    uint64_t v228 = *((void *)v206 + 7);
    uint64_t v227 = *((void *)v206 + 8);
    *((void *)v205 + 6) = v225;
    *((void *)v205 + 7) = v228;
    uint64_t v229 = *((void *)v206 + 9);
    *((void *)v205 + 8) = v227;
    *((void *)v205 + 9) = v229;
    v287 = (void *)*((void *)v206 + 14);
    uint64_t v230 = *((void *)v206 + 11);
    *((void *)v205 + 10) = *((void *)v206 + 10);
    *((void *)v205 + 11) = v230;
    v205[96] = v206[96];
    v231 = (void *)*((void *)v206 + 13);
    *((void *)v205 + 13) = v231;
    id v232 = v207;
    id v233 = v284;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v234 = v231;
    if (v287)
    {
      v236 = (void *)*((void *)v206 + 15);
      uint64_t v235 = *((void *)v206 + 16);
      *((void *)v205 + 14) = v287;
      *((void *)v205 + 15) = v236;
      uint64_t v238 = *((void *)v206 + 17);
      uint64_t v237 = *((void *)v206 + 18);
      *((void *)v205 + 16) = v235;
      *((void *)v205 + 17) = v238;
      uint64_t v240 = *((void *)v206 + 19);
      uint64_t v239 = *((void *)v206 + 20);
      *((void *)v205 + 18) = v237;
      *((void *)v205 + 19) = v240;
      uint64_t v242 = *((void *)v206 + 21);
      uint64_t v241 = *((void *)v206 + 22);
      *((void *)v205 + 20) = v239;
      *((void *)v205 + 21) = v242;
      uint64_t v244 = *((void *)v206 + 23);
      uint64_t v243 = *((void *)v206 + 24);
      *((void *)v205 + 22) = v241;
      *((void *)v205 + 23) = v244;
      uint64_t v245 = *((void *)v206 + 25);
      *((void *)v205 + 24) = v243;
      *((void *)v205 + 25) = v245;
      v205[208] = v206[208];
      v246 = (void *)*((void *)v206 + 27);
      *((void *)v205 + 27) = v246;
      id v247 = v287;
      id v248 = v236;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      id v249 = v246;
    }
    else
    {
      long long v250 = *((_OWORD *)v206 + 12);
      *((_OWORD *)v205 + 11) = *((_OWORD *)v206 + 11);
      *((_OWORD *)v205 + 12) = v250;
      *((_OWORD *)v205 + 13) = *((_OWORD *)v206 + 13);
      long long v251 = *((_OWORD *)v206 + 8);
      *((_OWORD *)v205 + 7) = *((_OWORD *)v206 + 7);
      *((_OWORD *)v205 + 8) = v251;
      long long v252 = *((_OWORD *)v206 + 10);
      *((_OWORD *)v205 + 9) = *((_OWORD *)v206 + 9);
      *((_OWORD *)v205 + 10) = v252;
    }
    v203 = v288;
    uint64_t v10 = v289;
    goto LABEL_86;
  }
  long long v208 = *((_OWORD *)v206 + 13);
  *((_OWORD *)v205 + 12) = *((_OWORD *)v206 + 12);
  *((_OWORD *)v205 + 13) = v208;
  *((void *)v205 + 28) = *((void *)v206 + 28);
  long long v209 = *((_OWORD *)v206 + 9);
  *((_OWORD *)v205 + 8) = *((_OWORD *)v206 + 8);
  *((_OWORD *)v205 + 9) = v209;
  long long v210 = *((_OWORD *)v206 + 11);
  *((_OWORD *)v205 + 10) = *((_OWORD *)v206 + 10);
  *((_OWORD *)v205 + 11) = v210;
  long long v211 = *((_OWORD *)v206 + 5);
  *((_OWORD *)v205 + 4) = *((_OWORD *)v206 + 4);
  *((_OWORD *)v205 + 5) = v211;
  long long v212 = *((_OWORD *)v206 + 7);
  *((_OWORD *)v205 + 6) = *((_OWORD *)v206 + 6);
  *((_OWORD *)v205 + 7) = v212;
  long long v213 = *((_OWORD *)v206 + 1);
  *(_OWORD *)v205 = *(_OWORD *)v206;
  *((_OWORD *)v205 + 1) = v213;
  long long v214 = *((_OWORD *)v206 + 3);
  *((_OWORD *)v205 + 2) = *((_OWORD *)v206 + 2);
  *((_OWORD *)v205 + 3) = v214;
LABEL_87:
  uint64_t v253 = v133[34];
  uint64_t v254 = (uint64_t)v10 + v253;
  uint64_t v255 = (uint64_t)v203 + v253;
  *(unsigned char *)uint64_t v254 = *(unsigned char *)v255;
  uint64_t v256 = *(void *)(v255 + 16);
  *(void *)(v254 + 8) = *(void *)(v255 + 8);
  *(void *)(v254 + 16) = v256;
  *((unsigned char *)v10 + v133[35]) = *((unsigned char *)v203 + v133[35]);
  uint64_t v257 = v133[36];
  v258 = (void **)((char *)v10 + v257);
  v259 = (void **)((char *)v203 + v257);
  unint64_t v260 = *(unint64_t *)((char *)v203 + v257 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v260 > 1)
  {
    void *v258 = *v259;
    v258[1] = v260;
    uint64_t v262 = v259[3];
    v258[2] = v259[2];
    v258[3] = v262;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v261 = *((_OWORD *)v259 + 1);
    *(_OWORD *)v258 = *(_OWORD *)v259;
    *((_OWORD *)v258 + 1) = v261;
  }
  uint64_t v263 = v133[37];
  v264 = (void **)((char *)v10 + v263);
  uint64_t v265 = (uint64_t)v203 + v263;
  v266 = *(void **)v265;
  if (*(void *)v265)
  {
    uint64_t v267 = *(void *)(v265 + 8);
    uint64_t v268 = *(void *)(v265 + 16);
    void *v264 = v266;
    v264[1] = v267;
    v264[2] = v268;
    id v269 = v266;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    *(_OWORD *)v264 = *(_OWORD *)v265;
    v264[2] = *(void *)(v265 + 16);
  }
  uint64_t v270 = v133[38];
  v271 = (void **)((char *)v10 + v270);
  v272 = (void **)((char *)v203 + v270);
  uint64_t v273 = v272[1];
  void *v271 = *v272;
  v271[1] = v273;
  *((unsigned char *)v10 + v133[39]) = *((unsigned char *)v203 + v133[39]);
  *((unsigned char *)v10 + v133[40]) = *((unsigned char *)v203 + v133[40]);
  uint64_t v274 = v133[41];
  v275 = *(void **)((char *)v203 + v274);
  *(void **)((char *)v10 + v274) = v275;
  *(void **)((char *)v10 + v133[42]) = *(void **)((char *)v203 + v133[42]);
  *((unsigned char *)v10 + v133[44]) = *((unsigned char *)v203 + v133[44]);
  uint64_t v276 = *(int *)(v285 + 20);
  v277 = *(void **)((char *)v203 + v276);
  *(void **)((char *)v10 + v276) = v277;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v278 = v275;
  id v279 = v277;
  return v10;
}

void sub_1B91D4608(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v4 = sub_1B996A6F0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          break;
        default:
          break;
      }
LABEL_24:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v18 = a1 + *(int *)(v17 + 20);
      if (*(void *)(v18 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1B90CBFF4(*(void **)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(unsigned char *)(v18 + 64));
        int v19 = *(unsigned __int8 *)(v18 + 120);
        if (v19 != 255) {
          sub_1B90CC01C(*(void **)(v18 + 72), *(void *)(v18 + 80), *(void *)(v18 + 88), *(void *)(v18 + 96), *(void *)(v18 + 104), *(void *)(v18 + 112), v19 & 1);
        }
      }
      id v10 = *(id *)(a1 + *(int *)(v17 + 44));
      goto LABEL_28;
    case 2u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_45;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_45;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_45:
            id v10 = *v5;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            uint64_t v9 = sub_1B996A6F0();
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      id v10 = *(id *)(a1 + 16);
      goto LABEL_28;
    case 6u:
      id v10 = *(id *)a1;
      goto LABEL_28;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v11 + 20);
        uint64_t v13 = sub_1B996BAD0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      if (!*(void *)(v14 + 8)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      id v10 = *(id *)(v14 + 16);
LABEL_28:

LABEL_29:
      uint64_t v20 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = a1 + v20[11];
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v21 + *(int *)(v22 + 20);
        uint64_t v24 = sub_1B996A6F0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      }
      uint64_t v25 = a1 + v20[12];
      if (*(void *)(v25 + 24))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = a1 + v20[31];
      if (*(void *)(v26 + 8))
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v27 = a1 + v20[33];
      if (*(void *)v27 >= 2uLL)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        id v28 = *(void **)(v27 + 112);
        if (v28)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + v20[36] + 8) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v29 = (id *)(a1 + v20[37]);
      if (*v29)
      {

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      uint64_t v30 = *(void **)(a1 + *(int *)(a2 + 20));

      return;
    case 8u:
      uint64_t v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(a1, 1, v15))
      {
        uint64_t v16 = sub_1B996A6F0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
      }
      goto LABEL_29;
    case 9u:
      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      uint64_t v9 = sub_1B996D7B0();
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1B91D4E70(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v277 = a2;
  id v278 = a1;
  uint64_t v274 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v67 = *a2;
          *a1 = *a2;
          id v68 = v67;
          goto LABEL_31;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v66 = sub_1B996A6F0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      uint64_t v69 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v70 = v69[5];
      id v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      uint64_t v73 = *(uint64_t *)((char *)a2 + v70 + 8);
      if (!v73) {
        goto LABEL_35;
      }
      *(void *)id v71 = *(void *)v72;
      *((void *)v71 + 1) = v73;
      v74 = (void *)*((void *)v72 + 2);
      uint64_t v75 = *((void *)v72 + 3);
      uint64_t v76 = *((void *)v72 + 4);
      uint64_t v77 = *((void *)v72 + 5);
      uint64_t v79 = *((void *)v72 + 6);
      uint64_t v78 = *((void *)v72 + 7);
      unsigned __int8 v80 = v72[64];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B90CC148(v74, v75, v76, v77, v79, v78, v80);
      *((void *)v71 + 2) = v74;
      *((void *)v71 + 3) = v75;
      *((void *)v71 + 4) = v76;
      *((void *)v71 + 5) = v77;
      *((void *)v71 + 6) = v79;
      *((void *)v71 + 7) = v78;
      v71[64] = v80;
      *(_DWORD *)(v71 + 65) = *(_DWORD *)(v72 + 65);
      int v81 = v72[120];
      if (v81 == 255)
      {
        long long v82 = *(_OWORD *)(v72 + 88);
        *(_OWORD *)(v71 + 72) = *(_OWORD *)(v72 + 72);
        *(_OWORD *)(v71 + 88) = v82;
        *(_OWORD *)(v71 + 104) = *(_OWORD *)(v72 + 104);
        v71[120] = v72[120];
      }
      else
      {
        char v86 = v81 & 1;
        long long v87 = (void *)*((void *)v72 + 9);
        uint64_t v88 = *((void *)v72 + 10);
        uint64_t v89 = *((void *)v72 + 11);
        uint64_t v90 = *((void *)v72 + 12);
        uint64_t v91 = *((void *)v72 + 13);
        uint64_t v92 = *((void *)v72 + 14);
        sub_1B90BFEB8(v87, v88, v89, v90, v91, v92, v81 & 1);
        *((void *)v71 + 9) = v87;
        *((void *)v71 + 10) = v88;
        *((void *)v71 + 11) = v89;
        *((void *)v71 + 12) = v90;
        *((void *)v71 + 13) = v91;
        *((void *)v71 + 14) = v92;
        v71[120] = v86;
      }
      a2 = v277;
      v71[121] = v72[121];
      a1 = v278;
      goto LABEL_38;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v97 = *a2;
          *a1 = *a2;
          id v98 = v97;
          goto LABEL_42;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v96 = sub_1B996A6F0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v69 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v99 = v69[5];
      id v71 = (char *)a1 + v99;
      uint64_t v72 = (char *)a2 + v99;
      uint64_t v100 = *(uint64_t *)((char *)a2 + v99 + 8);
      if (v100)
      {
        *(void *)id v71 = *(void *)v72;
        *((void *)v71 + 1) = v100;
        uint64_t v102 = (void *)*((void *)v72 + 2);
        uint64_t v101 = *((void *)v72 + 3);
        uint64_t v103 = *((void *)v72 + 4);
        uint64_t v104 = *((void *)v72 + 5);
        uint64_t v105 = *((void *)v72 + 6);
        uint64_t v106 = *((void *)v72 + 7);
        unsigned __int8 v107 = v72[64];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v102, v101, v103, v104, v105, v106, v107);
        *((void *)v71 + 2) = v102;
        *((void *)v71 + 3) = v101;
        *((void *)v71 + 4) = v103;
        *((void *)v71 + 5) = v104;
        *((void *)v71 + 6) = v105;
        *((void *)v71 + 7) = v106;
        v71[64] = v107;
        *(_DWORD *)(v71 + 65) = *(_DWORD *)(v72 + 65);
        int v108 = v72[120];
        if (v108 == 255)
        {
          long long v109 = *(_OWORD *)(v72 + 88);
          *(_OWORD *)(v71 + 72) = *(_OWORD *)(v72 + 72);
          *(_OWORD *)(v71 + 88) = v109;
          *(_OWORD *)(v71 + 104) = *(_OWORD *)(v72 + 104);
          v71[120] = v72[120];
        }
        else
        {
          char v110 = v108 & 1;
          int v111 = (void *)*((void *)v72 + 9);
          uint64_t v112 = *((void *)v72 + 10);
          uint64_t v113 = *((void *)v72 + 11);
          uint64_t v114 = *((void *)v72 + 12);
          uint64_t v115 = *((void *)v72 + 13);
          uint64_t v116 = *((void *)v72 + 14);
          sub_1B90BFEB8(v111, v112, v113, v114, v115, v116, v108 & 1);
          *((void *)v71 + 9) = v111;
          *((void *)v71 + 10) = v112;
          *((void *)v71 + 11) = v113;
          *((void *)v71 + 12) = v114;
          *((void *)v71 + 13) = v115;
          *((void *)v71 + 14) = v116;
          v71[120] = v110;
        }
        a2 = v277;
        v71[121] = v72[121];
        a1 = v278;
      }
      else
      {
LABEL_35:
        long long v83 = *((_OWORD *)v72 + 5);
        *((_OWORD *)v71 + 4) = *((_OWORD *)v72 + 4);
        *((_OWORD *)v71 + 5) = v83;
        *((_OWORD *)v71 + 6) = *((_OWORD *)v72 + 6);
        *(_OWORD *)(v71 + 106) = *(_OWORD *)(v72 + 106);
        long long v84 = *((_OWORD *)v72 + 1);
        *(_OWORD *)id v71 = *(_OWORD *)v72;
        *((_OWORD *)v71 + 1) = v84;
        long long v85 = *((_OWORD *)v72 + 3);
        *((_OWORD *)v71 + 2) = *((_OWORD *)v72 + 2);
        *((_OWORD *)v71 + 3) = v85;
      }
LABEL_38:
      *((unsigned char *)a1 + v69[6]) = *((unsigned char *)a2 + v69[6]);
      *((unsigned char *)a1 + v69[7]) = *((unsigned char *)a2 + v69[7]);
      *((unsigned char *)a1 + v69[8]) = *((unsigned char *)a2 + v69[8]);
      *((unsigned char *)a1 + v69[9]) = *((unsigned char *)a2 + v69[9]);
      *((unsigned char *)a1 + v69[10]) = *((unsigned char *)a2 + v69[10]);
      uint64_t v93 = v69[11];
      uint64_t v94 = *(void **)((char *)a2 + v93);
      *(void **)((char *)a1 + v93) = v94;
      id v95 = v94;
      goto LABEL_65;
    case 2u:
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v11 = (void **)((char *)a1 + v10);
      uint64_t v12 = (void **)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v16 = v9;
      if (v15(v12, 1, v13))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v118 = *v12;
            *uint64_t v11 = *v12;
            id v119 = v118;
            goto LABEL_52;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v117 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v117 - 8) + 16))(v11, v12, v117);
LABEL_52:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      a1 = v278;
      goto LABEL_65;
    case 3u:
      uint64_t v18 = *a2;
      *a1 = *a2;
      uint64_t v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v20 = (void **)((char *)a1 + v19);
      uint64_t v21 = (void **)((char *)a2 + v19);
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v23 + 48);
      id v25 = v18;
      if (v24(v21, 1, v22))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
        a1 = v278;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v50 = *v21;
            *uint64_t v20 = *v21;
            id v51 = v50;
            goto LABEL_63;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v123 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v123 - 8) + 16))(v20, v21, v123);
LABEL_63:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v20, v21, *(void *)(v23 + 64));
            break;
        }
        a1 = v278;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_65;
    case 4u:
      uint64_t v27 = *a2;
      *a1 = *a2;
      uint64_t v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v29 = (void **)((char *)a1 + v28);
      uint64_t v30 = (void **)((char *)a2 + v28);
      uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
      id v34 = v27;
      if (v33(v30, 1, v31))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v121 = *v30;
            *uint64_t v29 = *v30;
            id v122 = v121;
            goto LABEL_59;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v120 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v120 - 8) + 16))(v29, v30, v120);
LABEL_59:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v29, v30, *(void *)(v32 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      a1 = v278;
      goto LABEL_65;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      uint64_t v36 = a2[2];
      a1[2] = v36;
      id v37 = v36;
      goto LABEL_65;
    case 6u:
      uint64_t v45 = *a2;
      *a1 = *a2;
      id v46 = v45;
      goto LABEL_65;
    case 7u:
      uint64_t v38 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEFF8);
        memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v52 = *(int *)(v38 + 20);
        uint64_t v53 = (char *)a1 + v52;
        id v54 = (char *)a2 + v52;
        uint64_t v55 = sub_1B996BAD0();
        unint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v57 = v55;
        a1 = v278;
        v56(v53, v54, v57);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(v278, 0, 1, v38);
      }
      uint64_t v58 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      uint64_t v59 = (void **)((char *)a1 + v58);
      uint64_t v60 = (void **)((char *)a2 + v58);
      uint64_t v61 = v60[1];
      if (v61)
      {
        *uint64_t v59 = *v60;
        v59[1] = v61;
        id v62 = (void *)v60[2];
        v59[2] = v62;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v63 = v62;
      }
      else
      {
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        v59[2] = v60[2];
      }
      goto LABEL_65;
    case 8u:
      uint64_t v47 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v48 + 48))(a2, 1, v47))
      {
        uint64_t v49 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        uint64_t v64 = sub_1B996A6F0();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
        *((unsigned char *)a1 + *(int *)(v47 + 20)) = *((unsigned char *)a2 + *(int *)(v47 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v48 + 56))(a1, 0, 1, v47);
      }
      uint64_t v65 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v65 + 20)) = *(void **)((char *)a2 + *(int *)(v65 + 20));
      goto LABEL_65;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_1B996D7B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
LABEL_65:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  v124 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v125 = v124[5];
  uint64_t v126 = *(void **)((char *)a2 + v125);
  *(void **)((char *)a1 + v125) = v126;
  uint64_t v127 = v124[6];
  id v128 = (char *)a1 + v127;
  uint64_t v129 = (char *)a2 + v127;
  v128[4] = v129[4];
  *(_DWORD *)id v128 = *(_DWORD *)v129;
  uint64_t v130 = v124[7];
  id v131 = *(void **)((char *)a2 + v130);
  *(void **)((char *)a1 + v130) = v131;
  *((unsigned char *)a1 + v124[8]) = *((unsigned char *)a2 + v124[8]);
  uint64_t v132 = v124[9];
  v133 = (void **)((char *)a1 + v132);
  uint64_t v134 = (void **)((char *)a2 + v132);
  uint64_t v135 = v134[1];
  void *v133 = *v134;
  v133[1] = v135;
  uint64_t v136 = v124[10];
  v137 = (void **)((char *)a1 + v136);
  v138 = (void **)((char *)a2 + v136);
  uint64_t v139 = a2;
  uint64_t v140 = v138[1];
  void *v137 = *v138;
  v137[1] = v140;
  uint64_t v141 = v124[11];
  v142 = (void **)((char *)a1 + v141);
  v143 = (void **)((char *)v139 + v141);
  uint64_t v144 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  uint64_t v275 = *((void *)v144 - 1);
  uint64_t v145 = *(unsigned int (**)(void *, uint64_t, int *))(v275 + 48);
  id v146 = v126;
  id v147 = v131;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v145(v143, 1, v144))
  {
    uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B33F0);
    memcpy(v142, v143, *(void *)(*(void *)(v148 - 8) + 64));
  }
  else
  {
    uint64_t v149 = v143[1];
    void *v142 = *v143;
    v142[1] = v149;
    uint64_t v150 = v144[5];
    v151 = (char *)v142 + v150;
    v152 = (char *)v143 + v150;
    uint64_t v153 = sub_1B996A6F0();
    v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v154(v151, v152, v153);
    *((unsigned char *)v142 + v144[6]) = *((unsigned char *)v143 + v144[6]);
    *((unsigned char *)v142 + v144[7]) = *((unsigned char *)v143 + v144[7]);
    (*(void (**)(void *, void, uint64_t, int *))(v275 + 56))(v142, 0, 1, v144);
  }
  uint64_t v155 = v124[12];
  id v156 = (char *)v278 + v155;
  uint64_t v157 = (char *)v277 + v155;
  uint64_t v158 = *((void *)v157 + 3);
  if (v158)
  {
    uint64_t v159 = *(void **)v157;
    v160 = (void *)*((void *)v157 + 1);
    *(void *)id v156 = *(void *)v157;
    *((void *)v156 + 1) = v160;
    *((void *)v156 + 2) = *((void *)v157 + 2);
    *((void *)v156 + 3) = v158;
    uint64_t v161 = *((void *)v157 + 5);
    *((void *)v156 + 4) = *((void *)v157 + 4);
    *((void *)v156 + 5) = v161;
    v156[48] = v157[48];
    id v162 = v159;
    id v163 = v160;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v164 = *((_OWORD *)v157 + 1);
    *(_OWORD *)id v156 = *(_OWORD *)v157;
    *((_OWORD *)v156 + 1) = v164;
    *((_OWORD *)v156 + 2) = *((_OWORD *)v157 + 2);
    v156[48] = v157[48];
  }
  *((unsigned char *)v278 + v124[13]) = *((unsigned char *)v277 + v124[13]);
  uint64_t v165 = v124[14];
  v166 = *(void **)((char *)v277 + v165);
  *(void **)((char *)v278 + v165) = v166;
  *(void **)((char *)v278 + v124[15]) = *(void **)((char *)v277 + v124[15]);
  *(void **)((char *)v278 + v124[16]) = *(void **)((char *)v277 + v124[16]);
  *((unsigned char *)v278 + v124[17]) = *((unsigned char *)v277 + v124[17]);
  *(void **)((char *)v278 + v124[18]) = *(void **)((char *)v277 + v124[18]);
  uint64_t v167 = v124[19];
  v168 = *(void **)((char *)v277 + v167);
  *(void **)((char *)v278 + v167) = v168;
  uint64_t v169 = v124[20];
  uint64_t v170 = *(void **)((char *)v277 + v169);
  *(void **)((char *)v278 + v169) = v170;
  uint64_t v171 = v124[21];
  id v172 = *(void **)((char *)v277 + v171);
  *(void **)((char *)v278 + v171) = v172;
  uint64_t v173 = v124[22];
  uint64_t v174 = (char *)v278 + v173;
  v175 = (char *)v277 + v173;
  *(void *)uint64_t v174 = *(void *)v175;
  v174[8] = v175[8];
  *((unsigned char *)v278 + v124[23]) = *((unsigned char *)v277 + v124[23]);
  *((unsigned char *)v278 + v124[24]) = *((unsigned char *)v277 + v124[24]);
  *((unsigned char *)v278 + v124[25]) = *((unsigned char *)v277 + v124[25]);
  *(void **)((char *)v278 + v124[26]) = *(void **)((char *)v277 + v124[26]);
  *(void **)((char *)v278 + v124[27]) = *(void **)((char *)v277 + v124[27]);
  *((unsigned char *)v278 + v124[28]) = *((unsigned char *)v277 + v124[28]);
  uint64_t v176 = v124[29];
  v177 = (void **)((char *)v278 + v176);
  uint64_t v178 = (void **)((char *)v277 + v176);
  uint64_t v179 = v178[1];
  void *v177 = *v178;
  v177[1] = v179;
  uint64_t v180 = v124[30];
  v181 = (char *)v278 + v180;
  uint64_t v182 = (char *)v277 + v180;
  uint64_t v183 = *((void *)v182 + 1);
  *(void *)v181 = *(void *)v182;
  *((void *)v181 + 1) = v183;
  v181[16] = v182[16];
  uint64_t v184 = v124[31];
  uint64_t v185 = (void **)((char *)v278 + v184);
  v186 = (void **)((char *)v277 + v184);
  uint64_t v187 = *(uint64_t *)((char *)v277 + v184 + 8);
  id v188 = v166;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v189 = v168;
  id v190 = v170;
  id v191 = v172;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v187)
  {
    *uint64_t v185 = *v186;
    v185[1] = v187;
    uint64_t v192 = (void *)v186[2];
    v185[2] = v192;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v193 = v192;
  }
  else
  {
    *(_OWORD *)uint64_t v185 = *(_OWORD *)v186;
    v185[2] = v186[2];
  }
  v195 = v277;
  v194 = v278;
  *((unsigned char *)v278 + v124[32]) = *((unsigned char *)v277 + v124[32]);
  uint64_t v196 = v124[33];
  id v197 = (char *)v278 + v196;
  id v198 = (char *)v277 + v196;
  id v199 = *(void **)((char *)v277 + v196);
  if (v199)
  {
    if (v199 == (void *)1)
    {
      long long v200 = *((_OWORD *)v198 + 13);
      *((_OWORD *)v197 + 12) = *((_OWORD *)v198 + 12);
      *((_OWORD *)v197 + 13) = v200;
      *((void *)v197 + 28) = *((void *)v198 + 28);
      long long v201 = *((_OWORD *)v198 + 9);
      *((_OWORD *)v197 + 8) = *((_OWORD *)v198 + 8);
      *((_OWORD *)v197 + 9) = v201;
      long long v202 = *((_OWORD *)v198 + 11);
      *((_OWORD *)v197 + 10) = *((_OWORD *)v198 + 10);
      *((_OWORD *)v197 + 11) = v202;
      long long v203 = *((_OWORD *)v198 + 5);
      *((_OWORD *)v197 + 4) = *((_OWORD *)v198 + 4);
      *((_OWORD *)v197 + 5) = v203;
      long long v204 = *((_OWORD *)v198 + 7);
      *((_OWORD *)v197 + 6) = *((_OWORD *)v198 + 6);
      *((_OWORD *)v197 + 7) = v204;
      long long v205 = *((_OWORD *)v198 + 1);
      *(_OWORD *)id v197 = *(_OWORD *)v198;
      *((_OWORD *)v197 + 1) = v205;
      long long v206 = *((_OWORD *)v198 + 3);
      *((_OWORD *)v197 + 2) = *((_OWORD *)v198 + 2);
      *((_OWORD *)v197 + 3) = v206;
      goto LABEL_84;
    }
    uint64_t v214 = *((void *)v198 + 2);
    uint64_t v273 = (void *)*((void *)v198 + 1);
    *(void *)id v197 = v199;
    *((void *)v197 + 1) = v273;
    uint64_t v216 = *((void *)v198 + 3);
    uint64_t v215 = *((void *)v198 + 4);
    *((void *)v197 + 2) = v214;
    *((void *)v197 + 3) = v216;
    uint64_t v218 = *((void *)v198 + 5);
    uint64_t v217 = *((void *)v198 + 6);
    *((void *)v197 + 4) = v215;
    *((void *)v197 + 5) = v218;
    uint64_t v220 = *((void *)v198 + 7);
    uint64_t v219 = *((void *)v198 + 8);
    *((void *)v197 + 6) = v217;
    *((void *)v197 + 7) = v220;
    uint64_t v221 = *((void *)v198 + 9);
    *((void *)v197 + 8) = v219;
    *((void *)v197 + 9) = v221;
    uint64_t v276 = (void *)*((void *)v198 + 14);
    uint64_t v222 = *((void *)v198 + 11);
    *((void *)v197 + 10) = *((void *)v198 + 10);
    *((void *)v197 + 11) = v222;
    v197[96] = v198[96];
    uint64_t v223 = (void *)*((void *)v198 + 13);
    *((void *)v197 + 13) = v223;
    id v224 = v199;
    id v225 = v273;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v226 = v223;
    if (v276)
    {
      uint64_t v228 = (void *)*((void *)v198 + 15);
      uint64_t v227 = *((void *)v198 + 16);
      *((void *)v197 + 14) = v276;
      *((void *)v197 + 15) = v228;
      uint64_t v230 = *((void *)v198 + 17);
      uint64_t v229 = *((void *)v198 + 18);
      *((void *)v197 + 16) = v227;
      *((void *)v197 + 17) = v230;
      uint64_t v232 = *((void *)v198 + 19);
      uint64_t v231 = *((void *)v198 + 20);
      *((void *)v197 + 18) = v229;
      *((void *)v197 + 19) = v232;
      uint64_t v234 = *((void *)v198 + 21);
      uint64_t v233 = *((void *)v198 + 22);
      *((void *)v197 + 20) = v231;
      *((void *)v197 + 21) = v234;
      uint64_t v236 = *((void *)v198 + 23);
      uint64_t v235 = *((void *)v198 + 24);
      *((void *)v197 + 22) = v233;
      *((void *)v197 + 23) = v236;
      uint64_t v237 = *((void *)v198 + 25);
      *((void *)v197 + 24) = v235;
      *((void *)v197 + 25) = v237;
      v197[208] = v198[208];
      uint64_t v238 = (void *)*((void *)v198 + 27);
      *((void *)v197 + 27) = v238;
      id v239 = v276;
      id v240 = v228;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      id v241 = v238;
    }
    else
    {
      long long v242 = *((_OWORD *)v198 + 12);
      *((_OWORD *)v197 + 11) = *((_OWORD *)v198 + 11);
      *((_OWORD *)v197 + 12) = v242;
      *((_OWORD *)v197 + 13) = *((_OWORD *)v198 + 13);
      long long v243 = *((_OWORD *)v198 + 8);
      *((_OWORD *)v197 + 7) = *((_OWORD *)v198 + 7);
      *((_OWORD *)v197 + 8) = v243;
      long long v244 = *((_OWORD *)v198 + 10);
      *((_OWORD *)v197 + 9) = *((_OWORD *)v198 + 9);
      *((_OWORD *)v197 + 10) = v244;
    }
    v195 = v277;
    v194 = v278;
  }
  else
  {
    long long v207 = *((_OWORD *)v198 + 11);
    *((_OWORD *)v197 + 10) = *((_OWORD *)v198 + 10);
    *((_OWORD *)v197 + 11) = v207;
    long long v208 = *((_OWORD *)v198 + 13);
    *((_OWORD *)v197 + 12) = *((_OWORD *)v198 + 12);
    *((_OWORD *)v197 + 13) = v208;
    long long v209 = *((_OWORD *)v198 + 7);
    *((_OWORD *)v197 + 6) = *((_OWORD *)v198 + 6);
    *((_OWORD *)v197 + 7) = v209;
    long long v210 = *((_OWORD *)v198 + 9);
    *((_OWORD *)v197 + 8) = *((_OWORD *)v198 + 8);
    *((_OWORD *)v197 + 9) = v210;
    long long v211 = *((_OWORD *)v198 + 3);
    *((_OWORD *)v197 + 2) = *((_OWORD *)v198 + 2);
    *((_OWORD *)v197 + 3) = v211;
    long long v212 = *((_OWORD *)v198 + 5);
    *((_OWORD *)v197 + 4) = *((_OWORD *)v198 + 4);
    *((_OWORD *)v197 + 5) = v212;
    long long v213 = *((_OWORD *)v198 + 1);
    *(_OWORD *)id v197 = *(_OWORD *)v198;
    *((_OWORD *)v197 + 1) = v213;
  }
  *((void *)v197 + 28) = *((void *)v198 + 28);
LABEL_84:
  uint64_t v245 = v124[34];
  uint64_t v246 = (uint64_t)v194 + v245;
  uint64_t v247 = (uint64_t)v195 + v245;
  *(unsigned char *)uint64_t v246 = *(unsigned char *)v247;
  uint64_t v248 = *(void *)(v247 + 16);
  *(void *)(v246 + 8) = *(void *)(v247 + 8);
  *(void *)(v246 + 16) = v248;
  *((unsigned char *)v194 + v124[35]) = *((unsigned char *)v195 + v124[35]);
  uint64_t v249 = v124[36];
  long long v250 = (void **)((char *)v194 + v249);
  long long v251 = (void **)((char *)v195 + v249);
  unint64_t v252 = *(unint64_t *)((char *)v195 + v249 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v252 > 1)
  {
    *long long v250 = *v251;
    v250[1] = v252;
    uint64_t v254 = v251[3];
    v250[2] = v251[2];
    v250[3] = v254;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v253 = *((_OWORD *)v251 + 1);
    *(_OWORD *)long long v250 = *(_OWORD *)v251;
    *((_OWORD *)v250 + 1) = v253;
  }
  uint64_t v255 = v124[37];
  uint64_t v256 = (void **)((char *)v194 + v255);
  uint64_t v257 = (uint64_t)v195 + v255;
  v258 = *(void **)v257;
  if (*(void *)v257)
  {
    uint64_t v259 = *(void *)(v257 + 8);
    uint64_t v260 = *(void *)(v257 + 16);
    *uint64_t v256 = v258;
    v256[1] = v259;
    v256[2] = v260;
    id v261 = v258;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
    v256[2] = *(void *)(v257 + 16);
  }
  uint64_t v262 = v124[38];
  uint64_t v263 = (void **)((char *)v194 + v262);
  v264 = (void **)((char *)v195 + v262);
  uint64_t v265 = v264[1];
  *uint64_t v263 = *v264;
  v263[1] = v265;
  *((unsigned char *)v194 + v124[39]) = *((unsigned char *)v195 + v124[39]);
  *((unsigned char *)v194 + v124[40]) = *((unsigned char *)v195 + v124[40]);
  uint64_t v266 = v124[41];
  uint64_t v267 = *(void **)((char *)v195 + v266);
  *(void **)((char *)v194 + v266) = v267;
  *(void **)((char *)v194 + v124[42]) = *(void **)((char *)v195 + v124[42]);
  *((unsigned char *)v194 + v124[44]) = *((unsigned char *)v195 + v124[44]);
  uint64_t v268 = *(int *)(v274 + 20);
  id v269 = *(void **)((char *)v195 + v268);
  *(void **)((char *)v194 + v268) = v269;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v270 = v267;
  id v271 = v269;
  return v194;
}

void **sub_1B91D6A90(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3 = a2;
  if (a1 != a2)
  {
    sub_1B91D8EE8((uint64_t)a1, type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v53 = *v3;
            *a1 = *v3;
            id v54 = v53;
            goto LABEL_31;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v52 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v52 - 8) + 16))(a1, v3, v52);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v6 - 8) + 64));
            break;
        }
        uint64_t v55 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        uint64_t v56 = v55[5];
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)v3 + v56;
        if (!*(void **)((char *)v3 + v56 + 8)) {
          goto LABEL_35;
        }
        *(void *)uint64_t v57 = *(void *)v58;
        *((void *)v57 + 1) = *((void *)v58 + 1);
        uint64_t v59 = (void *)*((void *)v58 + 2);
        uint64_t v60 = *((void *)v58 + 3);
        uint64_t v61 = *((void *)v58 + 4);
        uint64_t v62 = *((void *)v58 + 5);
        uint64_t v63 = *((void *)v58 + 6);
        uint64_t v329 = *((void *)v58 + 7);
        unsigned __int8 v64 = v58[64];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v59, v60, v61, v62, v63, v329, v64);
        *((void *)v57 + 2) = v59;
        *((void *)v57 + 3) = v60;
        *((void *)v57 + 4) = v61;
        *((void *)v57 + 5) = v62;
        *((void *)v57 + 6) = v63;
        *((void *)v57 + 7) = v329;
        v57[64] = v64;
        v57[65] = v58[65];
        v57[66] = v58[66];
        v57[67] = v58[67];
        v57[68] = v58[68];
        int v65 = v58[120];
        if (v65 == 255)
        {
          long long v66 = *(_OWORD *)(v58 + 72);
          long long v67 = *(_OWORD *)(v58 + 88);
          long long v68 = *(_OWORD *)(v58 + 104);
          v57[120] = v58[120];
          *(_OWORD *)(v57 + 88) = v67;
          *(_OWORD *)(v57 + 104) = v68;
          *(_OWORD *)(v57 + 72) = v66;
        }
        else
        {
          char v75 = v65 & 1;
          uint64_t v76 = *((void *)v58 + 10);
          v330 = (void *)*((void *)v58 + 9);
          uint64_t v77 = *((void *)v58 + 11);
          uint64_t v78 = *((void *)v58 + 12);
          uint64_t v79 = *((void *)v58 + 13);
          uint64_t v80 = *((void *)v58 + 14);
          sub_1B90BFEB8(v330, v76, v77, v78, v79, v80, v65 & 1);
          *((void *)v57 + 9) = v330;
          *((void *)v57 + 10) = v76;
          *((void *)v57 + 11) = v77;
          *((void *)v57 + 12) = v78;
          *((void *)v57 + 13) = v79;
          *((void *)v57 + 14) = v80;
          v57[120] = v75;
        }
        v57[121] = v58[121];
        uint64_t v3 = a2;
        goto LABEL_38;
      case 1u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            long long v85 = *v3;
            *a1 = *v3;
            id v86 = v85;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v84 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v84 - 8) + 16))(a1, v3, v84);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        uint64_t v55 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        uint64_t v87 = v55[5];
        uint64_t v57 = (char *)a1 + v87;
        uint64_t v58 = (char *)v3 + v87;
        if (*(void **)((char *)v3 + v87 + 8))
        {
          *(void *)uint64_t v57 = *(void *)v58;
          *((void *)v57 + 1) = *((void *)v58 + 1);
          uint64_t v89 = (void *)*((void *)v58 + 2);
          uint64_t v88 = *((void *)v58 + 3);
          uint64_t v90 = *((void *)v58 + 4);
          uint64_t v91 = *((void *)v58 + 5);
          uint64_t v92 = *((void *)v58 + 6);
          uint64_t v93 = *((void *)v58 + 7);
          unsigned __int8 v331 = v58[64];
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          sub_1B90CC148(v89, v88, v90, v91, v92, v93, v331);
          *((void *)v57 + 2) = v89;
          *((void *)v57 + 3) = v88;
          *((void *)v57 + 4) = v90;
          *((void *)v57 + 5) = v91;
          *((void *)v57 + 6) = v92;
          *((void *)v57 + 7) = v93;
          v57[64] = v331;
          v57[65] = v58[65];
          v57[66] = v58[66];
          v57[67] = v58[67];
          v57[68] = v58[68];
          int v94 = v58[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v58 + 72);
            long long v96 = *(_OWORD *)(v58 + 88);
            long long v97 = *(_OWORD *)(v58 + 104);
            v57[120] = v58[120];
            *(_OWORD *)(v57 + 88) = v96;
            *(_OWORD *)(v57 + 104) = v97;
            *(_OWORD *)(v57 + 72) = v95;
          }
          else
          {
            char v98 = v94 & 1;
            uint64_t v99 = *((void *)v58 + 10);
            v332 = (void *)*((void *)v58 + 9);
            uint64_t v100 = *((void *)v58 + 11);
            uint64_t v101 = *((void *)v58 + 12);
            uint64_t v102 = *((void *)v58 + 13);
            uint64_t v103 = *((void *)v58 + 14);
            sub_1B90BFEB8(v332, v99, v100, v101, v102, v103, v94 & 1);
            *((void *)v57 + 9) = v332;
            *((void *)v57 + 10) = v99;
            *((void *)v57 + 11) = v100;
            *((void *)v57 + 12) = v101;
            *((void *)v57 + 13) = v102;
            *((void *)v57 + 14) = v103;
            v57[120] = v98;
          }
          v57[121] = v58[121];
          uint64_t v3 = a2;
        }
        else
        {
LABEL_35:
          long long v69 = *(_OWORD *)v58;
          long long v70 = *((_OWORD *)v58 + 1);
          long long v71 = *((_OWORD *)v58 + 3);
          *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
          *((_OWORD *)v57 + 3) = v71;
          *(_OWORD *)uint64_t v57 = v69;
          *((_OWORD *)v57 + 1) = v70;
          long long v72 = *((_OWORD *)v58 + 4);
          long long v73 = *((_OWORD *)v58 + 5);
          long long v74 = *((_OWORD *)v58 + 6);
          *(_OWORD *)(v57 + 106) = *(_OWORD *)(v58 + 106);
          *((_OWORD *)v57 + 5) = v73;
          *((_OWORD *)v57 + 6) = v74;
          *((_OWORD *)v57 + 4) = v72;
        }
LABEL_38:
        *((unsigned char *)a1 + v55[6]) = *((unsigned char *)v3 + v55[6]);
        *((unsigned char *)a1 + v55[7]) = *((unsigned char *)v3 + v55[7]);
        *((unsigned char *)a1 + v55[8]) = *((unsigned char *)v3 + v55[8]);
        *((unsigned char *)a1 + v55[9]) = *((unsigned char *)v3 + v55[9]);
        *((unsigned char *)a1 + v55[10]) = *((unsigned char *)v3 + v55[10]);
        uint64_t v81 = v55[11];
        long long v82 = *(void **)((char *)v3 + v81);
        *(void **)((char *)a1 + v81) = v82;
        id v83 = v82;
        goto LABEL_64;
      case 2u:
        uint64_t v8 = *v3;
        *a1 = *v3;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (void **)((char *)a1 + v9);
        uint64_t v11 = (void **)((char *)v3 + v9);
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48);
        id v15 = v8;
        if (v14(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v105 = *v11;
            *uint64_t v10 = *v11;
            id v106 = v105;
            goto LABEL_52;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v104 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v10, v11, v104);
LABEL_52:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_63;
      case 3u:
        id v16 = *v3;
        *a1 = *v3;
        uint64_t v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (void **)((char *)a1 + v17);
        uint64_t v11 = (void **)((char *)v3 + v17);
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48);
        id v19 = v16;
        if (v18(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            int v108 = *v11;
            *uint64_t v10 = *v11;
            id v109 = v108;
            goto LABEL_57;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v107 = sub_1B996A6F0();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v10, v11, v107);
LABEL_57:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_63;
      case 4u:
        uint64_t v21 = *v3;
        *a1 = *v3;
        uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (void **)((char *)a1 + v22);
        uint64_t v11 = (void **)((char *)v3 + v22);
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48);
        id v24 = v21;
        if (v23(v11, 1, v12))
        {
LABEL_8:
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
          memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
          uint64_t v3 = a2;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              int v111 = *v11;
              *uint64_t v10 = *v11;
              id v112 = v111;
              goto LABEL_62;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v110 = sub_1B996A6F0();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v10, v11, v110);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_63:
          uint64_t v3 = a2;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *v3;
        *((unsigned char *)a1 + 8) = *((unsigned char *)v3 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)v3 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)v3 + 10);
        id v25 = v3[2];
        a1[2] = v25;
        id v26 = v25;
        goto LABEL_64;
      case 6u:
        id v34 = *v3;
        *a1 = *v3;
        id v35 = v34;
        goto LABEL_64;
      case 7u:
        uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48))(v3, 1, v27))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEFF8);
          memcpy(a1, v3, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          *a1 = *v3;
          uint64_t v39 = *(int *)(v27 + 20);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)v3 + v39;
          uint64_t v42 = sub_1B996BAD0();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v43(v40, v41, v42);
          uint64_t v3 = a2;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v28 + 56))(a1, 0, 1, v27);
        }
        uint64_t v44 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        uint64_t v45 = (void **)((char *)a1 + v44);
        id v46 = (void **)((char *)v3 + v44);
        if (v46[1])
        {
          *uint64_t v45 = *v46;
          v45[1] = v46[1];
          uint64_t v47 = (void *)v46[2];
          v45[2] = v47;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          id v48 = v47;
        }
        else
        {
          long long v49 = *(_OWORD *)v46;
          v45[2] = v46[2];
          *(_OWORD *)uint64_t v45 = v49;
        }
        goto LABEL_64;
      case 8u:
        uint64_t v36 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48))(v3, 1, v36))
        {
          uint64_t v38 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, v3, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v50 = sub_1B996A6F0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(a1, v3, v50);
          *((unsigned char *)a1 + *(int *)(v36 + 20)) = *((unsigned char *)v3 + *(int *)(v36 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        }
        uint64_t v51 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v51 + 20)) = *(void **)((char *)v3 + *(int *)(v51 + 20));
        goto LABEL_64;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)v3;
        uint64_t v30 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)v3 + v30;
        uint64_t v33 = sub_1B996D7B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        goto LABEL_64;
      default:
        memcpy(a1, v3, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
  }
  uint64_t v113 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v114 = v113[5];
  uint64_t v115 = *(void **)((char *)v3 + v114);
  uint64_t v116 = *(void **)((char *)a1 + v114);
  *(void **)((char *)a1 + v114) = v115;
  id v117 = v115;

  uint64_t v118 = v113[6];
  id v119 = (char *)a1 + v118;
  uint64_t v120 = (char *)v3 + v118;
  *id v119 = *v120;
  v119[1] = v120[1];
  v119[2] = v120[2];
  v119[3] = v120[3];
  v119[4] = v120[4];
  uint64_t v121 = v113[7];
  id v122 = *(void **)((char *)a1 + v121);
  uint64_t v123 = *(void **)((char *)v3 + v121);
  *(void **)((char *)a1 + v121) = v123;
  id v124 = v123;

  *((unsigned char *)a1 + v113[8]) = *((unsigned char *)v3 + v113[8]);
  uint64_t v125 = v113[9];
  uint64_t v126 = (void **)((char *)a1 + v125);
  uint64_t v127 = (void **)((char *)v3 + v125);
  *uint64_t v126 = *v127;
  v126[1] = v127[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v128 = v113[10];
  uint64_t v129 = (void **)((char *)a1 + v128);
  uint64_t v130 = (void **)((char *)v3 + v128);
  *uint64_t v129 = *v130;
  v129[1] = v130[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v131 = v113[11];
  uint64_t v132 = (void **)((char *)a1 + v131);
  v133 = (void **)((char *)v3 + v131);
  uint64_t v134 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  uint64_t v135 = *((void *)v134 - 1);
  uint64_t v136 = *(uint64_t (**)(void *, uint64_t, int *))(v135 + 48);
  LODWORD(v122) = v136(v132, 1, v134);
  int v137 = v136(v133, 1, v134);
  if (v122)
  {
    if (!v137)
    {
      *uint64_t v132 = *v133;
      v132[1] = v133[1];
      uint64_t v138 = v134[5];
      v333 = (char *)v133 + v138;
      v335 = (char *)v132 + v138;
      uint64_t v139 = sub_1B996A6F0();
      uint64_t v140 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v140(v335, v333, v139);
      *((unsigned char *)v132 + v134[6]) = *((unsigned char *)v133 + v134[6]);
      *((unsigned char *)v132 + v134[7]) = *((unsigned char *)v133 + v134[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v135 + 56))(v132, 0, 1, v134);
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  if (v137)
  {
    sub_1B91D8EE8((uint64_t)v132, type metadata accessor for TTRRemindersListViewModel.DisplayDate);
LABEL_70:
    uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B33F0);
    memcpy(v132, v133, *(void *)(*(void *)(v141 - 8) + 64));
    goto LABEL_71;
  }
  *uint64_t v132 = *v133;
  v132[1] = v133[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v161 = v134[5];
  id v162 = (char *)v132 + v161;
  id v163 = (char *)v133 + v161;
  uint64_t v164 = sub_1B996A6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 24))(v162, v163, v164);
  *((unsigned char *)v132 + v134[6]) = *((unsigned char *)v133 + v134[6]);
  *((unsigned char *)v132 + v134[7]) = *((unsigned char *)v133 + v134[7]);
LABEL_71:
  v142 = a2;
  uint64_t v143 = v113[12];
  uint64_t v144 = (uint64_t)a1 + v143;
  uint64_t v145 = (char *)a2 + v143;
  uint64_t v146 = *(uint64_t *)((char *)a1 + v143 + 24);
  uint64_t v147 = *(uint64_t *)((char *)a2 + v143 + 24);
  if (v146)
  {
    if (v147)
    {
      uint64_t v148 = *(void **)v144;
      uint64_t v149 = *(void **)v145;
      *(void *)uint64_t v144 = *(void *)v145;
      id v150 = v149;

      v151 = *(void **)(v144 + 8);
      v152 = (void *)*((void *)v145 + 1);
      *(void *)(v144 + 8) = v152;
      id v153 = v152;

      *(void *)(v144 + 16) = *((void *)v145 + 2);
      *(void *)(v144 + 24) = *((void *)v145 + 3);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(v144 + 32) = *((void *)v145 + 4);
      *(void *)(v144 + 40) = *((void *)v145 + 5);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v144 + 48) = v145[48];
    }
    else
    {
      sub_1B91D8F48(v144);
      long long v159 = *((_OWORD *)v145 + 1);
      long long v158 = *((_OWORD *)v145 + 2);
      long long v160 = *(_OWORD *)v145;
      *(unsigned char *)(v144 + 48) = v145[48];
      *(_OWORD *)(v144 + 16) = v159;
      *(_OWORD *)(v144 + 32) = v158;
      *(_OWORD *)uint64_t v144 = v160;
    }
  }
  else if (v147)
  {
    v154 = *(void **)v145;
    *(void *)uint64_t v144 = *(void *)v145;
    uint64_t v155 = (void *)*((void *)v145 + 1);
    *(void *)(v144 + 8) = v155;
    *(void *)(v144 + 16) = *((void *)v145 + 2);
    *(void *)(v144 + 24) = *((void *)v145 + 3);
    *(void *)(v144 + 32) = *((void *)v145 + 4);
    *(void *)(v144 + 40) = *((void *)v145 + 5);
    *(unsigned char *)(v144 + 48) = v145[48];
    id v156 = v154;
    id v157 = v155;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v165 = *(_OWORD *)v145;
    long long v166 = *((_OWORD *)v145 + 1);
    long long v167 = *((_OWORD *)v145 + 2);
    *(unsigned char *)(v144 + 48) = v145[48];
    *(_OWORD *)(v144 + 16) = v166;
    *(_OWORD *)(v144 + 32) = v167;
    *(_OWORD *)uint64_t v144 = v165;
  }
  *((unsigned char *)a1 + v113[13]) = *((unsigned char *)a2 + v113[13]);
  uint64_t v168 = v113[14];
  uint64_t v169 = *(void **)((char *)a1 + v168);
  uint64_t v170 = *(void **)((char *)a2 + v168);
  *(void **)((char *)a1 + v168) = v170;
  id v171 = v170;

  *(void **)((char *)a1 + v113[15]) = *(void **)((char *)a2 + v113[15]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + v113[16]) = *(void **)((char *)a2 + v113[16]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v113[17]) = *((unsigned char *)a2 + v113[17]);
  *(void **)((char *)a1 + v113[18]) = *(void **)((char *)a2 + v113[18]);
  uint64_t v172 = v113[19];
  uint64_t v173 = *(void **)((char *)a2 + v172);
  uint64_t v174 = *(void **)((char *)a1 + v172);
  *(void **)((char *)a1 + v172) = v173;
  id v175 = v173;

  uint64_t v176 = v113[20];
  v177 = *(void **)((char *)a2 + v176);
  uint64_t v178 = *(void **)((char *)a1 + v176);
  *(void **)((char *)a1 + v176) = v177;
  id v179 = v177;

  uint64_t v180 = v113[21];
  v181 = *(void **)((char *)a2 + v180);
  uint64_t v182 = *(void **)((char *)a1 + v180);
  *(void **)((char *)a1 + v180) = v181;
  id v183 = v181;

  uint64_t v184 = v113[22];
  uint64_t v185 = (char *)a1 + v184;
  v186 = (char *)a2 + v184;
  uint64_t v187 = *(void *)v186;
  v185[8] = v186[8];
  *(void *)uint64_t v185 = v187;
  *((unsigned char *)a1 + v113[23]) = *((unsigned char *)a2 + v113[23]);
  *((unsigned char *)a1 + v113[24]) = *((unsigned char *)a2 + v113[24]);
  *((unsigned char *)a1 + v113[25]) = *((unsigned char *)a2 + v113[25]);
  *(void **)((char *)a1 + v113[26]) = *(void **)((char *)a2 + v113[26]);
  *(void **)((char *)a1 + v113[27]) = *(void **)((char *)a2 + v113[27]);
  *((unsigned char *)a1 + v113[28]) = *((unsigned char *)a2 + v113[28]);
  uint64_t v188 = v113[29];
  id v189 = (void **)((char *)a1 + v188);
  id v190 = (void **)((char *)a2 + v188);
  *id v189 = *v190;
  v189[1] = v190[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v191 = v113[30];
  uint64_t v192 = (char *)a1 + v191;
  id v193 = (char *)a2 + v191;
  *(void *)uint64_t v192 = *(void **)((char *)a2 + v191);
  *((void *)v192 + 1) = *(void **)((char *)a2 + v191 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v192[16] = v193[16];
  uint64_t v194 = v113[31];
  v195 = (void **)((char *)a1 + v194);
  uint64_t v196 = (void **)((char *)a2 + v194);
  uint64_t v197 = *(uint64_t *)((char *)a1 + v194 + 8);
  uint64_t v198 = *(uint64_t *)((char *)a2 + v194 + 8);
  if (v197)
  {
    if (v198)
    {
      void *v195 = *v196;
      v195[1] = v196[1];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      id v199 = (void *)v195[2];
      long long v200 = (void *)v196[2];
      v195[2] = v200;
      id v201 = v200;
    }
    else
    {
      sub_1B91D8F9C((uint64_t)v195);
      uint64_t v204 = v196[2];
      *(_OWORD *)v195 = *(_OWORD *)v196;
      v195[2] = v204;
    }
  }
  else if (v198)
  {
    void *v195 = *v196;
    v195[1] = v196[1];
    long long v202 = (void *)v196[2];
    v195[2] = v202;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v203 = v202;
  }
  else
  {
    long long v205 = *(_OWORD *)v196;
    v195[2] = v196[2];
    *(_OWORD *)v195 = v205;
  }
  *((unsigned char *)a1 + v113[32]) = *((unsigned char *)a2 + v113[32]);
  uint64_t v206 = v113[33];
  uint64_t v207 = (uint64_t)a1 + v206;
  long long v208 = (char *)a2 + v206;
  long long v209 = *(void **)((char *)a1 + v206);
  long long v210 = *(void **)((char *)a2 + v206);
  if (v209 == (void *)1)
  {
    if (v210)
    {
      if (v210 == (void *)1)
      {
        long long v211 = *(_OWORD *)v208;
        long long v212 = *((_OWORD *)v208 + 2);
        *(_OWORD *)(v207 + 16) = *((_OWORD *)v208 + 1);
        *(_OWORD *)(v207 + 32) = v212;
        *(_OWORD *)uint64_t v207 = v211;
        long long v213 = *((_OWORD *)v208 + 3);
        long long v214 = *((_OWORD *)v208 + 4);
        long long v215 = *((_OWORD *)v208 + 6);
        *(_OWORD *)(v207 + 80) = *((_OWORD *)v208 + 5);
        *(_OWORD *)(v207 + 96) = v215;
        *(_OWORD *)(v207 + 48) = v213;
        *(_OWORD *)(v207 + 64) = v214;
        long long v216 = *((_OWORD *)v208 + 7);
        long long v217 = *((_OWORD *)v208 + 8);
        long long v218 = *((_OWORD *)v208 + 10);
        *(_OWORD *)(v207 + 144) = *((_OWORD *)v208 + 9);
        *(_OWORD *)(v207 + 160) = v218;
        *(_OWORD *)(v207 + 112) = v216;
        *(_OWORD *)(v207 + 128) = v217;
        long long v219 = *((_OWORD *)v208 + 11);
        long long v220 = *((_OWORD *)v208 + 12);
        long long v221 = *((_OWORD *)v208 + 13);
        *(void *)(v207 + 224) = *((void *)v208 + 28);
        *(_OWORD *)(v207 + 192) = v220;
        *(_OWORD *)(v207 + 208) = v221;
        *(_OWORD *)(v207 + 176) = v219;
        goto LABEL_109;
      }
      goto LABEL_98;
    }
  }
  else
  {
    if (v210 == (void *)1)
    {
      sub_1B91D9098(v207);
      long long v223 = *((_OWORD *)v208 + 1);
      long long v222 = *((_OWORD *)v208 + 2);
      *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
      *(_OWORD *)(v207 + 16) = v223;
      *(_OWORD *)(v207 + 32) = v222;
      long long v224 = *((_OWORD *)v208 + 6);
      long long v226 = *((_OWORD *)v208 + 3);
      long long v225 = *((_OWORD *)v208 + 4);
      *(_OWORD *)(v207 + 80) = *((_OWORD *)v208 + 5);
      *(_OWORD *)(v207 + 96) = v224;
      *(_OWORD *)(v207 + 48) = v226;
      *(_OWORD *)(v207 + 64) = v225;
      long long v227 = *((_OWORD *)v208 + 10);
      long long v229 = *((_OWORD *)v208 + 7);
      long long v228 = *((_OWORD *)v208 + 8);
      *(_OWORD *)(v207 + 144) = *((_OWORD *)v208 + 9);
      *(_OWORD *)(v207 + 160) = v227;
      *(_OWORD *)(v207 + 112) = v229;
      *(_OWORD *)(v207 + 128) = v228;
      long long v231 = *((_OWORD *)v208 + 12);
      long long v230 = *((_OWORD *)v208 + 13);
      long long v232 = *((_OWORD *)v208 + 11);
      *(void *)(v207 + 224) = *((void *)v208 + 28);
      *(_OWORD *)(v207 + 192) = v231;
      *(_OWORD *)(v207 + 208) = v230;
      *(_OWORD *)(v207 + 176) = v232;
      goto LABEL_109;
    }
    if (v209)
    {
      if (v210)
      {
        *(void *)uint64_t v207 = v210;
        id v233 = v210;

        uint64_t v234 = *(void **)(v207 + 8);
        uint64_t v235 = (void *)*((void *)v208 + 1);
        *(void *)(v207 + 8) = v235;
        id v236 = v235;

        *(void *)(v207 + 16) = *((void *)v208 + 2);
        *(void *)(v207 + 24) = *((void *)v208 + 3);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        *(void *)(v207 + 32) = *((void *)v208 + 4);
        *(void *)(v207 + 40) = *((void *)v208 + 5);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        *(void *)(v207 + 48) = *((void *)v208 + 6);
        *(void *)(v207 + 56) = *((void *)v208 + 7);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        *(void *)(v207 + 64) = *((void *)v208 + 8);
        *(void *)(v207 + 72) = *((void *)v208 + 9);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        *(void *)(v207 + 80) = *((void *)v208 + 10);
        *(void *)(v207 + 88) = *((void *)v208 + 11);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v207 + 96) = v208[96];
        uint64_t v237 = *(void **)(v207 + 104);
        uint64_t v238 = (void *)*((void *)v208 + 13);
        *(void *)(v207 + 104) = v238;
        id v239 = v238;

        id v240 = (_OWORD *)(v207 + 112);
        id v241 = *(void **)(v207 + 112);
        long long v243 = v208 + 112;
        long long v242 = (void *)*((void *)v208 + 14);
        if (v241)
        {
          if (v242)
          {
            *(void *)(v207 + 112) = v242;
            id v244 = v242;

            uint64_t v245 = *(void **)(v207 + 120);
            uint64_t v246 = (void *)*((void *)v208 + 15);
            *(void *)(v207 + 120) = v246;
            id v247 = v246;

            *(void *)(v207 + 128) = *((void *)v208 + 16);
            *(void *)(v207 + 136) = *((void *)v208 + 17);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            swift_bridgeObjectRelease();
            *(void *)(v207 + 144) = *((void *)v208 + 18);
            *(void *)(v207 + 152) = *((void *)v208 + 19);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            swift_bridgeObjectRelease();
            *(void *)(v207 + 160) = *((void *)v208 + 20);
            *(void *)(v207 + 168) = *((void *)v208 + 21);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            swift_bridgeObjectRelease();
            *(void *)(v207 + 176) = *((void *)v208 + 22);
            *(void *)(v207 + 184) = *((void *)v208 + 23);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            swift_bridgeObjectRelease();
            *(void *)(v207 + 192) = *((void *)v208 + 24);
            *(void *)(v207 + 200) = *((void *)v208 + 25);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            swift_bridgeObjectRelease();
            *(unsigned char *)(v207 + 208) = v208[208];
            uint64_t v248 = *(void **)(v207 + 216);
            uint64_t v249 = (void *)*((void *)v208 + 27);
            *(void *)(v207 + 216) = v249;
            id v250 = v249;
          }
          else
          {
            sub_1B91D8FF0(v207 + 112);
            long long v289 = *((_OWORD *)v208 + 8);
            long long v288 = *((_OWORD *)v208 + 9);
            *id v240 = *v243;
            *(_OWORD *)(v207 + 128) = v289;
            *(_OWORD *)(v207 + 144) = v288;
            long long v290 = *((_OWORD *)v208 + 13);
            long long v292 = *((_OWORD *)v208 + 10);
            long long v291 = *((_OWORD *)v208 + 11);
            *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
            *(_OWORD *)(v207 + 208) = v290;
            *(_OWORD *)(v207 + 160) = v292;
            *(_OWORD *)(v207 + 176) = v291;
          }
        }
        else if (v242)
        {
          *(void *)(v207 + 112) = v242;
          v284 = (void *)*((void *)v208 + 15);
          *(void *)(v207 + 120) = v284;
          *(void *)(v207 + 128) = *((void *)v208 + 16);
          *(void *)(v207 + 136) = *((void *)v208 + 17);
          *(void *)(v207 + 144) = *((void *)v208 + 18);
          *(void *)(v207 + 152) = *((void *)v208 + 19);
          *(void *)(v207 + 160) = *((void *)v208 + 20);
          *(void *)(v207 + 168) = *((void *)v208 + 21);
          *(void *)(v207 + 176) = *((void *)v208 + 22);
          *(void *)(v207 + 184) = *((void *)v208 + 23);
          *(void *)(v207 + 192) = *((void *)v208 + 24);
          *(void *)(v207 + 200) = *((void *)v208 + 25);
          *(unsigned char *)(v207 + 208) = v208[208];
          v338 = (void *)*((void *)v208 + 27);
          *(void *)(v207 + 216) = v338;
          id v285 = v242;
          id v286 = v284;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v142 = a2;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          id v287 = v338;
        }
        else
        {
          long long v293 = *v243;
          long long v294 = *((_OWORD *)v208 + 9);
          *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
          *(_OWORD *)(v207 + 144) = v294;
          *id v240 = v293;
          long long v295 = *((_OWORD *)v208 + 10);
          long long v296 = *((_OWORD *)v208 + 11);
          long long v297 = *((_OWORD *)v208 + 13);
          *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
          *(_OWORD *)(v207 + 208) = v297;
          *(_OWORD *)(v207 + 160) = v295;
          *(_OWORD *)(v207 + 176) = v296;
        }
      }
      else
      {
        sub_1B91D9044(v207);
        long long v274 = *((_OWORD *)v208 + 1);
        *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
        *(_OWORD *)(v207 + 16) = v274;
        long long v275 = *((_OWORD *)v208 + 5);
        long long v277 = *((_OWORD *)v208 + 2);
        long long v276 = *((_OWORD *)v208 + 3);
        *(_OWORD *)(v207 + 64) = *((_OWORD *)v208 + 4);
        *(_OWORD *)(v207 + 80) = v275;
        *(_OWORD *)(v207 + 32) = v277;
        *(_OWORD *)(v207 + 48) = v276;
        long long v278 = *((_OWORD *)v208 + 9);
        long long v280 = *((_OWORD *)v208 + 6);
        long long v279 = *((_OWORD *)v208 + 7);
        *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
        *(_OWORD *)(v207 + 144) = v278;
        *(_OWORD *)(v207 + 96) = v280;
        *(_OWORD *)(v207 + 112) = v279;
        long long v281 = *((_OWORD *)v208 + 13);
        long long v283 = *((_OWORD *)v208 + 10);
        long long v282 = *((_OWORD *)v208 + 11);
        *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
        *(_OWORD *)(v207 + 208) = v281;
        *(_OWORD *)(v207 + 160) = v283;
        *(_OWORD *)(v207 + 176) = v282;
      }
      goto LABEL_108;
    }
    if (v210)
    {
LABEL_98:
      *(void *)uint64_t v207 = v210;
      long long v251 = (void *)*((void *)v208 + 1);
      *(void *)(v207 + 8) = v251;
      *(void *)(v207 + 16) = *((void *)v208 + 2);
      *(void *)(v207 + 24) = *((void *)v208 + 3);
      *(void *)(v207 + 32) = *((void *)v208 + 4);
      *(void *)(v207 + 40) = *((void *)v208 + 5);
      *(void *)(v207 + 48) = *((void *)v208 + 6);
      *(void *)(v207 + 56) = *((void *)v208 + 7);
      *(void *)(v207 + 64) = *((void *)v208 + 8);
      *(void *)(v207 + 72) = *((void *)v208 + 9);
      *(void *)(v207 + 80) = *((void *)v208 + 10);
      *(void *)(v207 + 88) = *((void *)v208 + 11);
      *(unsigned char *)(v207 + 96) = v208[96];
      v336 = (void *)*((void *)v208 + 13);
      *(void *)(v207 + 104) = v336;
      v334 = (void *)*((void *)v208 + 14);
      id v252 = v210;
      id v253 = v251;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      id v254 = v336;
      if (v334)
      {
        *(void *)(v207 + 112) = v334;
        uint64_t v255 = (void *)*((void *)v208 + 15);
        *(void *)(v207 + 120) = v255;
        *(void *)(v207 + 128) = *((void *)v208 + 16);
        *(void *)(v207 + 136) = *((void *)v208 + 17);
        *(void *)(v207 + 144) = *((void *)v208 + 18);
        *(void *)(v207 + 152) = *((void *)v208 + 19);
        *(void *)(v207 + 160) = *((void *)v208 + 20);
        *(void *)(v207 + 168) = *((void *)v208 + 21);
        *(void *)(v207 + 176) = *((void *)v208 + 22);
        *(void *)(v207 + 184) = *((void *)v208 + 23);
        *(void *)(v207 + 192) = *((void *)v208 + 24);
        *(void *)(v207 + 200) = *((void *)v208 + 25);
        *(unsigned char *)(v207 + 208) = v208[208];
        v337 = (void *)*((void *)v208 + 27);
        *(void *)(v207 + 216) = v337;
        id v256 = v334;
        id v257 = v255;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v258 = v337;
      }
      else
      {
        long long v269 = *((_OWORD *)v208 + 7);
        long long v270 = *((_OWORD *)v208 + 9);
        *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
        *(_OWORD *)(v207 + 144) = v270;
        *(_OWORD *)(v207 + 112) = v269;
        long long v271 = *((_OWORD *)v208 + 10);
        long long v272 = *((_OWORD *)v208 + 11);
        long long v273 = *((_OWORD *)v208 + 13);
        *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
        *(_OWORD *)(v207 + 208) = v273;
        *(_OWORD *)(v207 + 160) = v271;
        *(_OWORD *)(v207 + 176) = v272;
      }
      v142 = a2;
      goto LABEL_108;
    }
  }
  long long v259 = *((_OWORD *)v208 + 1);
  *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
  *(_OWORD *)(v207 + 16) = v259;
  long long v260 = *((_OWORD *)v208 + 2);
  long long v261 = *((_OWORD *)v208 + 3);
  long long v262 = *((_OWORD *)v208 + 5);
  *(_OWORD *)(v207 + 64) = *((_OWORD *)v208 + 4);
  *(_OWORD *)(v207 + 80) = v262;
  *(_OWORD *)(v207 + 32) = v260;
  *(_OWORD *)(v207 + 48) = v261;
  long long v263 = *((_OWORD *)v208 + 6);
  long long v264 = *((_OWORD *)v208 + 7);
  long long v265 = *((_OWORD *)v208 + 9);
  *(_OWORD *)(v207 + 128) = *((_OWORD *)v208 + 8);
  *(_OWORD *)(v207 + 144) = v265;
  *(_OWORD *)(v207 + 96) = v263;
  *(_OWORD *)(v207 + 112) = v264;
  long long v266 = *((_OWORD *)v208 + 10);
  long long v267 = *((_OWORD *)v208 + 11);
  long long v268 = *((_OWORD *)v208 + 13);
  *(_OWORD *)(v207 + 192) = *((_OWORD *)v208 + 12);
  *(_OWORD *)(v207 + 208) = v268;
  *(_OWORD *)(v207 + 160) = v266;
  *(_OWORD *)(v207 + 176) = v267;
LABEL_108:
  *(void *)(v207 + 224) = *((void *)v208 + 28);
LABEL_109:
  uint64_t v298 = v113[34];
  v299 = (char *)a1 + v298;
  uint64_t v300 = (uint64_t)v142 + v298;
  char *v299 = *((unsigned char *)v142 + v298);
  *((void *)v299 + 1) = *(void **)((char *)v142 + v298 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *((void *)v299 + 2) = *(void *)(v300 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v113[35]) = *((unsigned char *)v142 + v113[35]);
  uint64_t v301 = v113[36];
  uint64_t v302 = (uint64_t)a1 + v301;
  uint64_t v303 = (uint64_t)v142 + v301;
  uint64_t v304 = *(uint64_t *)((char *)a1 + v301 + 8);
  unint64_t v305 = *(unint64_t *)((char *)v142 + v301 + 8);
  if (v304 == 1)
  {
    if (v305 <= 1)
    {
LABEL_111:
      long long v306 = *(_OWORD *)(v303 + 16);
      *(_OWORD *)uint64_t v302 = *(_OWORD *)v303;
      *(_OWORD *)(v302 + 16) = v306;
      goto LABEL_120;
    }
    goto LABEL_119;
  }
  if (v305 == 1)
  {
    sub_1B91D90EC(v302);
    goto LABEL_114;
  }
  if (v304)
  {
    if (v305)
    {
      *(void *)uint64_t v302 = *(void *)v303;
      *(void *)(v302 + 8) = *(void *)(v303 + 8);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      *(void *)(v302 + 16) = *(void *)(v303 + 16);
      *(void *)(v302 + 24) = *(void *)(v303 + 24);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      goto LABEL_120;
    }
    sub_1B90CCA68(v302, &qword_1E9EFDA80);
LABEL_114:
    long long v307 = *(_OWORD *)(v303 + 16);
    *(_OWORD *)uint64_t v302 = *(_OWORD *)v303;
    *(_OWORD *)(v302 + 16) = v307;
    goto LABEL_120;
  }
  if (!v305) {
    goto LABEL_111;
  }
LABEL_119:
  *(void *)uint64_t v302 = *(void *)v303;
  *(void *)(v302 + 8) = *(void *)(v303 + 8);
  *(void *)(v302 + 16) = *(void *)(v303 + 16);
  *(void *)(v302 + 24) = *(void *)(v303 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
LABEL_120:
  uint64_t v308 = v113[37];
  v309 = (void **)((char *)a1 + v308);
  v310 = (long long *)((char *)v142 + v308);
  v311 = *(void **)((char *)a1 + v308);
  v312 = *(void **)((char *)v142 + v308);
  if (v311)
  {
    if (v312)
    {
      void *v309 = v312;
      id v313 = v312;

      v309[1] = *((void *)v310 + 1);
      v309[2] = *((void *)v310 + 2);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B91D9140((uint64_t)v309);
      uint64_t v315 = *((void *)v310 + 2);
      *(_OWORD *)v309 = *v310;
      v309[2] = v315;
    }
  }
  else if (v312)
  {
    void *v309 = v312;
    v309[1] = *((void *)v310 + 1);
    v309[2] = *((void *)v310 + 2);
    id v314 = v312;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    long long v316 = *v310;
    v309[2] = *((void *)v310 + 2);
    *(_OWORD *)v309 = v316;
  }
  uint64_t v317 = v113[38];
  v318 = (void **)((char *)a1 + v317);
  v319 = (void **)((char *)v142 + v317);
  void *v318 = *v319;
  v318[1] = v319[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v113[39]) = *((unsigned char *)v142 + v113[39]);
  *((unsigned char *)a1 + v113[40]) = *((unsigned char *)v142 + v113[40]);
  uint64_t v320 = v113[41];
  v321 = *(void **)((char *)a1 + v320);
  v322 = *(void **)((char *)v142 + v320);
  *(void **)((char *)a1 + v320) = v322;
  id v323 = v322;

  *(void **)((char *)a1 + v113[42]) = *(void **)((char *)v142 + v113[42]);
  *((unsigned char *)a1 + v113[44]) = *((unsigned char *)v142 + v113[44]);
  uint64_t v324 = *(int *)(a3 + 20);
  v325 = *(void **)((char *)v142 + v324);
  v326 = *(void **)((char *)a1 + v324);
  *(void **)((char *)a1 + v324) = v325;
  id v327 = v325;

  return a1;
}

uint64_t sub_1B91D8EE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B91D8F48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D8F9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D8FF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D9044(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D9098(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D90EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91D9140(uint64_t a1)
{
  return a1;
}

void *sub_1B91D9194(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v36 = sub_1B996A6F0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v45 = sub_1B996A6F0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      uint64_t v38 = v37[5];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)a2 + v38);
      long long v41 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v41;
      long long v42 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      long long v43 = v40[6];
      long long v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
      *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
      *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
      *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
      *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v46 = sub_1B996A6F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v10 = (char *)a1 + v14;
      uint64_t v11 = (char *)a2 + v14;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = sub_1B996A6F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      uint64_t v10 = (char *)a1 + v16;
      uint64_t v11 = (char *)a2 + v16;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = sub_1B996A6F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      long long v49 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      *(void *)((char *)a1 + v49[5]) = *(void *)((char *)a2 + v49[5]);
      uint64_t v50 = v49[6];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      v51[4] = v52[4];
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      *(void *)((char *)a1 + v49[7]) = *(void *)((char *)a2 + v49[7]);
      *((unsigned char *)a1 + v49[8]) = *((unsigned char *)a2 + v49[8]);
      *(_OWORD *)((char *)a1 + v49[9]) = *(_OWORD *)((char *)a2 + v49[9]);
      *(_OWORD *)((char *)a1 + v49[10]) = *(_OWORD *)((char *)a2 + v49[10]);
      uint64_t v53 = v49[11];
      id v54 = (_OWORD *)((char *)a1 + v53);
      uint64_t v55 = (_OWORD *)((char *)a2 + v53);
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
      uint64_t v57 = *((void *)v56 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B33F0);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        *id v54 = *v55;
        uint64_t v59 = v56[5];
        uint64_t v60 = (char *)v54 + v59;
        uint64_t v61 = (char *)v55 + v59;
        uint64_t v62 = sub_1B996A6F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        *((unsigned char *)v54 + v56[6]) = *((unsigned char *)v55 + v56[6]);
        *((unsigned char *)v54 + v56[7]) = *((unsigned char *)v55 + v56[7]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
      }
      uint64_t v63 = v49[12];
      unsigned __int8 v64 = (char *)a1 + v63;
      int v65 = (char *)a2 + v63;
      long long v66 = *((_OWORD *)v65 + 1);
      *(_OWORD *)unsigned __int8 v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v66;
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      v64[48] = v65[48];
      *((unsigned char *)a1 + v49[13]) = *((unsigned char *)a2 + v49[13]);
      *(void *)((char *)a1 + v49[14]) = *(void *)((char *)a2 + v49[14]);
      *(void *)((char *)a1 + v49[15]) = *(void *)((char *)a2 + v49[15]);
      *(void *)((char *)a1 + v49[16]) = *(void *)((char *)a2 + v49[16]);
      *((unsigned char *)a1 + v49[17]) = *((unsigned char *)a2 + v49[17]);
      *(void *)((char *)a1 + v49[18]) = *(void *)((char *)a2 + v49[18]);
      *(void *)((char *)a1 + v49[19]) = *(void *)((char *)a2 + v49[19]);
      *(void *)((char *)a1 + v49[20]) = *(void *)((char *)a2 + v49[20]);
      *(void *)((char *)a1 + v49[21]) = *(void *)((char *)a2 + v49[21]);
      uint64_t v67 = v49[22];
      long long v68 = (char *)a1 + v67;
      long long v69 = (char *)a2 + v67;
      *(void *)long long v68 = *(void *)v69;
      v68[8] = v69[8];
      *((unsigned char *)a1 + v49[23]) = *((unsigned char *)a2 + v49[23]);
      *((unsigned char *)a1 + v49[24]) = *((unsigned char *)a2 + v49[24]);
      *((unsigned char *)a1 + v49[25]) = *((unsigned char *)a2 + v49[25]);
      *(void *)((char *)a1 + v49[26]) = *(void *)((char *)a2 + v49[26]);
      *(void *)((char *)a1 + v49[27]) = *(void *)((char *)a2 + v49[27]);
      *((unsigned char *)a1 + v49[28]) = *((unsigned char *)a2 + v49[28]);
      *(_OWORD *)((char *)a1 + v49[29]) = *(_OWORD *)((char *)a2 + v49[29]);
      uint64_t v70 = v49[30];
      long long v71 = (char *)a1 + v70;
      long long v72 = (char *)a2 + v70;
      *(_OWORD *)long long v71 = *(_OWORD *)v72;
      v71[16] = v72[16];
      uint64_t v73 = v49[31];
      long long v74 = (char *)a1 + v73;
      char v75 = (char *)a2 + v73;
      *(_OWORD *)long long v74 = *(_OWORD *)v75;
      *((void *)v74 + 2) = *((void *)v75 + 2);
      *((unsigned char *)a1 + v49[32]) = *((unsigned char *)a2 + v49[32]);
      uint64_t v76 = v49[33];
      uint64_t v77 = (char *)a1 + v76;
      uint64_t v78 = (char *)a2 + v76;
      long long v79 = *((_OWORD *)v78 + 13);
      *((_OWORD *)v77 + 12) = *((_OWORD *)v78 + 12);
      *((_OWORD *)v77 + 13) = v79;
      *((void *)v77 + 28) = *((void *)v78 + 28);
      long long v80 = *((_OWORD *)v78 + 9);
      *((_OWORD *)v77 + 8) = *((_OWORD *)v78 + 8);
      *((_OWORD *)v77 + 9) = v80;
      long long v81 = *((_OWORD *)v78 + 11);
      *((_OWORD *)v77 + 10) = *((_OWORD *)v78 + 10);
      *((_OWORD *)v77 + 11) = v81;
      long long v82 = *((_OWORD *)v78 + 5);
      *((_OWORD *)v77 + 4) = *((_OWORD *)v78 + 4);
      *((_OWORD *)v77 + 5) = v82;
      long long v83 = *((_OWORD *)v78 + 7);
      *((_OWORD *)v77 + 6) = *((_OWORD *)v78 + 6);
      *((_OWORD *)v77 + 7) = v83;
      long long v84 = *((_OWORD *)v78 + 1);
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      *((_OWORD *)v77 + 1) = v84;
      long long v85 = *((_OWORD *)v78 + 3);
      *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
      *((_OWORD *)v77 + 3) = v85;
      uint64_t v86 = v49[34];
      uint64_t v87 = (char *)a1 + v86;
      uint64_t v88 = (char *)a2 + v86;
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      *((void *)v87 + 2) = *((void *)v88 + 2);
      *((unsigned char *)a1 + v49[35]) = *((unsigned char *)a2 + v49[35]);
      uint64_t v89 = v49[36];
      uint64_t v90 = (_OWORD *)((char *)a1 + v89);
      uint64_t v91 = (_OWORD *)((char *)a2 + v89);
      long long v92 = v91[1];
      *uint64_t v90 = *v91;
      v90[1] = v92;
      uint64_t v93 = v49[37];
      int v94 = (char *)a1 + v93;
      long long v95 = (char *)a2 + v93;
      *((void *)v94 + 2) = *((void *)v95 + 2);
      *(_OWORD *)int v94 = *(_OWORD *)v95;
      *(_OWORD *)((char *)a1 + v49[38]) = *(_OWORD *)((char *)a2 + v49[38]);
      *((unsigned char *)a1 + v49[39]) = *((unsigned char *)a2 + v49[39]);
      *((unsigned char *)a1 + v49[40]) = *((unsigned char *)a2 + v49[40]);
      *(void *)((char *)a1 + v49[41]) = *(void *)((char *)a2 + v49[41]);
      *(void *)((char *)a1 + v49[42]) = *(void *)((char *)a2 + v49[42]);
      *((unsigned char *)a1 + v49[44]) = *((unsigned char *)a2 + v49[44]);
      *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 7u:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEFF8);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v27 = *(int *)(v17 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_1B996BAD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      goto LABEL_38;
    case 8u:
      uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v34 = sub_1B996A6F0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      id v24 = (char *)a1 + v23;
      id v25 = (char *)a2 + v23;
      uint64_t v26 = sub_1B996D7B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

void *sub_1B91DA638(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B91D8EE8((uint64_t)a1, type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = sub_1B996A6F0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v45 = sub_1B996A6F0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        uint64_t v38 = v37[5];
        uint64_t v39 = (_OWORD *)((char *)a1 + v38);
        uint64_t v40 = (_OWORD *)((char *)a2 + v38);
        long long v41 = v40[3];
        void v39[2] = v40[2];
        v39[3] = v41;
        long long v42 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        long long v43 = v40[6];
        long long v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
        *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
        *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
        *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
        *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
        *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = sub_1B996A6F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (char *)a1 + v14;
        uint64_t v11 = (char *)a2 + v14;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = sub_1B996A6F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        uint64_t v10 = (char *)a1 + v16;
        uint64_t v11 = (char *)a2 + v16;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B3A20);
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v48 = sub_1B996A6F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEFF8);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v27 = *(int *)(v17 + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = sub_1B996BAD0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_1B996A6F0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        id v24 = (char *)a1 + v23;
        id v25 = (char *)a2 + v23;
        uint64_t v26 = sub_1B996D7B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v183 = a3;
  long long v49 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v50 = v49[5];
  uint64_t v51 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = *(void *)((char *)a2 + v50);

  uint64_t v52 = v49[6];
  uint64_t v53 = (char *)a1 + v52;
  id v54 = (char *)a2 + v52;
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  v53[2] = v54[2];
  v53[3] = v54[3];
  v53[4] = v54[4];
  uint64_t v55 = v49[7];
  uint64_t v56 = *(void **)((char *)a1 + v55);
  *(void *)((char *)a1 + v55) = *(void *)((char *)a2 + v55);

  *((unsigned char *)a1 + v49[8]) = *((unsigned char *)a2 + v49[8]);
  uint64_t v57 = v49[9];
  uint64_t v58 = (void *)((char *)a1 + v57);
  uint64_t v59 = (void *)((char *)a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = v49[10];
  uint64_t v63 = (void *)((char *)a1 + v62);
  unsigned __int8 v64 = (void *)((char *)a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = v49[11];
  long long v68 = (void *)((char *)a1 + v67);
  long long v69 = (void *)((char *)a2 + v67);
  uint64_t v70 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  uint64_t v71 = *((void *)v70 - 1);
  long long v72 = *(uint64_t (**)(void *, uint64_t, int *))(v71 + 48);
  int v73 = v72(v68, 1, v70);
  int v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      *(_OWORD *)long long v68 = *(_OWORD *)v69;
      uint64_t v75 = v70[5];
      uint64_t v76 = (char *)v68 + v75;
      uint64_t v77 = (char *)v69 + v75;
      uint64_t v78 = sub_1B996A6F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
      *((unsigned char *)v68 + v70[6]) = *((unsigned char *)v69 + v70[6]);
      *((unsigned char *)v68 + v70[7]) = *((unsigned char *)v69 + v70[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v71 + 56))(v68, 0, 1, v70);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v74)
  {
    sub_1B91D8EE8((uint64_t)v68, type metadata accessor for TTRRemindersListViewModel.DisplayDate);
LABEL_45:
    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B33F0);
    memcpy(v68, v69, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_46;
  }
  uint64_t v141 = v69[1];
  *long long v68 = *v69;
  v68[1] = v141;
  swift_bridgeObjectRelease();
  uint64_t v142 = v70[5];
  uint64_t v143 = (char *)v68 + v142;
  uint64_t v144 = (char *)v69 + v142;
  uint64_t v145 = sub_1B996A6F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 40))(v143, v144, v145);
  *((unsigned char *)v68 + v70[6]) = *((unsigned char *)v69 + v70[6]);
  *((unsigned char *)v68 + v70[7]) = *((unsigned char *)v69 + v70[7]);
LABEL_46:
  uint64_t v80 = v49[12];
  uint64_t v81 = (uint64_t)a1 + v80;
  long long v82 = (char *)a2 + v80;
  if (*(void *)((char *)a1 + v80 + 24))
  {
    if (*((void *)v82 + 3))
    {
      long long v83 = *(void **)v81;
      *(void *)uint64_t v81 = *(void *)v82;

      long long v84 = *(void **)(v81 + 8);
      *(void *)(v81 + 8) = *((void *)v82 + 1);

      uint64_t v85 = *((void *)v82 + 3);
      *(void *)(v81 + 16) = *((void *)v82 + 2);
      *(void *)(v81 + 24) = v85;
      swift_bridgeObjectRelease();
      uint64_t v86 = *((void *)v82 + 5);
      *(void *)(v81 + 32) = *((void *)v82 + 4);
      *(void *)(v81 + 40) = v86;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1B91D8F48(v81);
  }
  long long v87 = *((_OWORD *)v82 + 1);
  *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
  *(_OWORD *)(v81 + 16) = v87;
  *(_OWORD *)(v81 + 32) = *((_OWORD *)v82 + 2);
LABEL_51:
  *(unsigned char *)(v81 + 48) = v82[48];
  *((unsigned char *)a1 + v49[13]) = *((unsigned char *)a2 + v49[13]);
  uint64_t v88 = v49[14];
  uint64_t v89 = *(void **)((char *)a1 + v88);
  *(void *)((char *)a1 + v88) = *(void *)((char *)a2 + v88);

  *(void *)((char *)a1 + v49[15]) = *(void *)((char *)a2 + v49[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v49[16]) = *(void *)((char *)a2 + v49[16]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v49[17]) = *((unsigned char *)a2 + v49[17]);
  *(void *)((char *)a1 + v49[18]) = *(void *)((char *)a2 + v49[18]);
  uint64_t v90 = v49[19];
  uint64_t v91 = *(void **)((char *)a1 + v90);
  *(void *)((char *)a1 + v90) = *(void *)((char *)a2 + v90);

  uint64_t v92 = v49[20];
  uint64_t v93 = *(void **)((char *)a1 + v92);
  *(void *)((char *)a1 + v92) = *(void *)((char *)a2 + v92);

  uint64_t v94 = v49[21];
  long long v95 = *(void **)((char *)a1 + v94);
  *(void *)((char *)a1 + v94) = *(void *)((char *)a2 + v94);

  uint64_t v96 = v49[22];
  long long v97 = (char *)a1 + v96;
  char v98 = (char *)a2 + v96;
  *(void *)long long v97 = *(void *)v98;
  v97[8] = v98[8];
  *((unsigned char *)a1 + v49[23]) = *((unsigned char *)a2 + v49[23]);
  *((unsigned char *)a1 + v49[24]) = *((unsigned char *)a2 + v49[24]);
  *((unsigned char *)a1 + v49[25]) = *((unsigned char *)a2 + v49[25]);
  *(void *)((char *)a1 + v49[26]) = *(void *)((char *)a2 + v49[26]);
  *(void *)((char *)a1 + v49[27]) = *(void *)((char *)a2 + v49[27]);
  *((unsigned char *)a1 + v49[28]) = *((unsigned char *)a2 + v49[28]);
  uint64_t v99 = v49[29];
  uint64_t v100 = (void *)((char *)a1 + v99);
  uint64_t v101 = (void *)((char *)a2 + v99);
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  *uint64_t v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = v49[30];
  uint64_t v105 = (char *)a1 + v104;
  id v106 = (char *)a2 + v104;
  uint64_t v107 = *(void *)((char *)a2 + v104 + 8);
  *(void *)uint64_t v105 = *(void *)((char *)a2 + v104);
  *((void *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  v105[16] = v106[16];
  uint64_t v108 = v49[31];
  id v109 = (void *)((char *)a1 + v108);
  uint64_t v110 = (void *)((char *)a2 + v108);
  if (*(void *)((char *)a1 + v108 + 8))
  {
    uint64_t v111 = v110[1];
    if (v111)
    {
      *id v109 = *v110;
      v109[1] = v111;
      swift_bridgeObjectRelease();
      id v112 = (void *)v109[2];
      v109[2] = v110[2];

      goto LABEL_56;
    }
    sub_1B91D8F9C((uint64_t)v109);
  }
  *(_OWORD *)id v109 = *(_OWORD *)v110;
  v109[2] = v110[2];
LABEL_56:
  *((unsigned char *)a1 + v49[32]) = *((unsigned char *)a2 + v49[32]);
  uint64_t v113 = v49[33];
  uint64_t v114 = (uint64_t)a1 + v113;
  uint64_t v115 = (char *)a2 + v113;
  uint64_t v116 = *(void **)((char *)a1 + v113);
  if (v116 == (void *)1)
  {
LABEL_59:
    long long v118 = *((_OWORD *)v115 + 13);
    *(_OWORD *)(v114 + 192) = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 208) = v118;
    *(void *)(v114 + 224) = *((void *)v115 + 28);
    long long v119 = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 128) = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 144) = v119;
    long long v120 = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 160) = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 176) = v120;
    long long v121 = *((_OWORD *)v115 + 5);
    *(_OWORD *)(v114 + 64) = *((_OWORD *)v115 + 4);
    *(_OWORD *)(v114 + 80) = v121;
    long long v122 = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 96) = *((_OWORD *)v115 + 6);
    *(_OWORD *)(v114 + 112) = v122;
    long long v123 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v123;
    long long v124 = *((_OWORD *)v115 + 3);
    *(_OWORD *)(v114 + 32) = *((_OWORD *)v115 + 2);
    *(_OWORD *)(v114 + 48) = v124;
    goto LABEL_71;
  }
  uint64_t v117 = *(void *)v115;
  if (*(void *)v115 == 1)
  {
    sub_1B91D9098(v114);
    goto LABEL_59;
  }
  if (!v116) {
    goto LABEL_67;
  }
  if (!v117)
  {
    sub_1B91D9044(v114);
LABEL_67:
    long long v146 = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 160) = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 176) = v146;
    long long v147 = *((_OWORD *)v115 + 13);
    *(_OWORD *)(v114 + 192) = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 208) = v147;
    long long v148 = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 96) = *((_OWORD *)v115 + 6);
    *(_OWORD *)(v114 + 112) = v148;
    long long v149 = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 128) = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 144) = v149;
    long long v150 = *((_OWORD *)v115 + 3);
    *(_OWORD *)(v114 + 32) = *((_OWORD *)v115 + 2);
    *(_OWORD *)(v114 + 48) = v150;
    long long v151 = *((_OWORD *)v115 + 5);
    *(_OWORD *)(v114 + 64) = *((_OWORD *)v115 + 4);
    *(_OWORD *)(v114 + 80) = v151;
    long long v152 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v152;
    goto LABEL_70;
  }
  *(void *)uint64_t v114 = v117;

  uint64_t v125 = *(void **)(v114 + 8);
  *(void *)(v114 + 8) = *((void *)v115 + 1);

  uint64_t v126 = *((void *)v115 + 3);
  *(void *)(v114 + 16) = *((void *)v115 + 2);
  *(void *)(v114 + 24) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = *((void *)v115 + 5);
  *(void *)(v114 + 32) = *((void *)v115 + 4);
  *(void *)(v114 + 40) = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = *((void *)v115 + 7);
  *(void *)(v114 + 48) = *((void *)v115 + 6);
  *(void *)(v114 + 56) = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = *((void *)v115 + 9);
  *(void *)(v114 + 64) = *((void *)v115 + 8);
  *(void *)(v114 + 72) = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = *((void *)v115 + 11);
  *(void *)(v114 + 80) = *((void *)v115 + 10);
  *(void *)(v114 + 88) = v130;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v114 + 96) = v115[96];
  uint64_t v131 = *(void **)(v114 + 104);
  *(void *)(v114 + 104) = *((void *)v115 + 13);

  uint64_t v132 = *(void **)(v114 + 112);
  uint64_t v133 = *((void *)v115 + 14);
  if (!v132)
  {
LABEL_69:
    long long v153 = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 176) = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 192) = v153;
    *(_OWORD *)(v114 + 208) = *((_OWORD *)v115 + 13);
    long long v154 = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 112) = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 128) = v154;
    long long v155 = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 144) = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 160) = v155;
    goto LABEL_70;
  }
  if (!v133)
  {
    sub_1B91D8FF0(v114 + 112);
    goto LABEL_69;
  }
  *(void *)(v114 + 112) = v133;

  uint64_t v134 = *(void **)(v114 + 120);
  *(void *)(v114 + 120) = *((void *)v115 + 15);

  uint64_t v135 = *((void *)v115 + 17);
  *(void *)(v114 + 128) = *((void *)v115 + 16);
  *(void *)(v114 + 136) = v135;
  swift_bridgeObjectRelease();
  uint64_t v136 = *((void *)v115 + 19);
  *(void *)(v114 + 144) = *((void *)v115 + 18);
  *(void *)(v114 + 152) = v136;
  swift_bridgeObjectRelease();
  uint64_t v137 = *((void *)v115 + 21);
  *(void *)(v114 + 160) = *((void *)v115 + 20);
  *(void *)(v114 + 168) = v137;
  swift_bridgeObjectRelease();
  uint64_t v138 = *((void *)v115 + 23);
  *(void *)(v114 + 176) = *((void *)v115 + 22);
  *(void *)(v114 + 184) = v138;
  swift_bridgeObjectRelease();
  uint64_t v139 = *((void *)v115 + 25);
  *(void *)(v114 + 192) = *((void *)v115 + 24);
  *(void *)(v114 + 200) = v139;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v114 + 208) = v115[208];
  uint64_t v140 = *(void **)(v114 + 216);
  *(void *)(v114 + 216) = *((void *)v115 + 27);

LABEL_70:
  *(void *)(v114 + 224) = *((void *)v115 + 28);
LABEL_71:
  uint64_t v156 = v49[34];
  id v157 = (char *)a1 + v156;
  long long v158 = (char *)a2 + v156;
  *id v157 = *((unsigned char *)a2 + v156);
  *((void *)v157 + 1) = *(void *)((char *)a2 + v156 + 8);
  swift_bridgeObjectRelease();
  *((void *)v157 + 2) = *((void *)v158 + 2);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v49[35]) = *((unsigned char *)a2 + v49[35]);
  uint64_t v159 = v49[36];
  uint64_t v160 = (uint64_t)a1 + v159;
  uint64_t v161 = (char *)a2 + v159;
  uint64_t v162 = *(void *)((char *)a1 + v159 + 8);
  uint64_t v163 = *(void *)((char *)a2 + v159 + 8);
  if (v162 == 1)
  {
    if (v163)
    {
      uint64_t v164 = v183;
LABEL_74:
      long long v165 = *((_OWORD *)v161 + 1);
      *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
      *(_OWORD *)(v160 + 16) = v165;
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if (v163 == 1)
  {
    sub_1B91D90EC(v160);
LABEL_80:
    long long v167 = *((_OWORD *)v161 + 1);
    *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 16) = v167;
    uint64_t v164 = v183;
    goto LABEL_81;
  }
  if (!v162) {
    goto LABEL_80;
  }
  uint64_t v164 = v183;
  if (!v163)
  {
    sub_1B90CCA68(v160, &qword_1E9EFDA80);
    goto LABEL_74;
  }
  *(void *)uint64_t v160 = *(void *)v161;
  *(void *)(v160 + 8) = v163;
  swift_bridgeObjectRelease();
  uint64_t v166 = *((void *)v161 + 3);
  *(void *)(v160 + 16) = *((void *)v161 + 2);
  *(void *)(v160 + 24) = v166;
  swift_bridgeObjectRelease();
LABEL_81:
  uint64_t v168 = v49[37];
  uint64_t v169 = (uint64_t)a1 + v168;
  uint64_t v170 = (char *)a2 + v168;
  id v171 = *(void **)((char *)a1 + v168);
  if (!v171)
  {
LABEL_85:
    *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
    *(void *)(v169 + 16) = *((void *)v170 + 2);
    goto LABEL_86;
  }
  if (!*(void *)v170)
  {
    sub_1B91D9140(v169);
    goto LABEL_85;
  }
  *(void *)uint64_t v169 = *(void *)v170;

  uint64_t v172 = *((void *)v170 + 2);
  *(void *)(v169 + 8) = *((void *)v170 + 1);
  *(void *)(v169 + 16) = v172;
  swift_bridgeObjectRelease();
LABEL_86:
  uint64_t v173 = v49[38];
  uint64_t v174 = (void *)((char *)a1 + v173);
  id v175 = (void *)((char *)a2 + v173);
  uint64_t v177 = *v175;
  uint64_t v176 = v175[1];
  *uint64_t v174 = v177;
  v174[1] = v176;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v49[39]) = *((unsigned char *)a2 + v49[39]);
  *((unsigned char *)a1 + v49[40]) = *((unsigned char *)a2 + v49[40]);
  uint64_t v178 = v49[41];
  id v179 = *(void **)((char *)a1 + v178);
  *(void *)((char *)a1 + v178) = *(void *)((char *)a2 + v178);

  *(void *)((char *)a1 + v49[42]) = *(void *)((char *)a2 + v49[42]);
  *((unsigned char *)a1 + v49[44]) = *((unsigned char *)a2 + v49[44]);
  uint64_t v180 = *(int *)(v164 + 20);
  v181 = *(void **)((char *)a1 + v180);
  *(void *)((char *)a1 + v180) = *(void *)((char *)a2 + v180);

  return a1;
}

uint64_t sub_1B91DBF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B91DBFA0);
}

uint64_t sub_1B91DBFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1B91DC060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B91DC074);
}

uint64_t sub_1B91DC074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1B91DC130()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1B91DC1C8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v5 = a1;
  Swift::tuple_title_NSAttributedString_isValid_Bool v20 = NSAttributedString.validatedReminderTitle()();
  Class isa = v20.title.super.isa;
  Swift::Bool isValid = v20.isValid;

  if (!isValid)
  {

    uint64_t v13 = MEMORY[0x1BA9DB180](v3 + 16);
    if (!v13) {
      return;
    }
    uint64_t v14 = *(void *)(v13 + 80);
    uint64_t v15 = *(void *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    uint64_t v16 = *(void *)(v14 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 280))(v15, ObjectType, v16);
    goto LABEL_8;
  }
  uint64_t v7 = v3 + 16;
  uint64_t v8 = MEMORY[0x1BA9DB180](v7);
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + 80);
    uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v12 = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v11 + 288))(isa, v10, v12, v11);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1BA9DB180](v7))
  {
    sub_1B91D0CC8(a2);

LABEL_8:
    swift_unknownObjectRelease();
    return;
  }
}

void sub_1B91DC35C(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return;
  }
  uint64_t v4 = v3;
  id v6 = a1;
  Swift::tuple_title_NSAttributedString_isValid_Bool v20 = NSAttributedString.validatedReminderTitle()();
  Class isa = v20.title.super.isa;
  Swift::Bool isValid = v20.isValid;

  if (!isValid)
  {

    uint64_t v13 = MEMORY[0x1BA9DB180](v4 + 16);
    if (!v13) {
      return;
    }
    uint64_t v14 = *(void *)(v13 + 80);
    uint64_t v15 = *(void *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    uint64_t v16 = *(void *)(v14 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 280))(v15, ObjectType, v16);
    goto LABEL_8;
  }
  uint64_t v8 = MEMORY[0x1BA9DB180](v4 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + 80);
    uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v12 = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v11 + 288))(isa, v10, v12, v11);

LABEL_8:
    swift_unknownObjectRelease();
    return;
  }
}

uint64_t sub_1B91DC4B8()
{
  sub_1B90D88A0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListEditingPresenter()
{
  return self;
}

id TTRISubtaskListAssembly.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id TTRISubtaskListAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAssembly();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TTRISubtaskListAssembly()
{
  return self;
}

id TTRISubtaskListAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAssembly();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B91DC614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[3] = type metadata accessor for TTRISubtaskListRouter();
  v18[4] = &off_1F12DB750;
  v18[0] = a2;
  *(void *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 176) = 0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(void *)(a3 + 80) = a1;
  *(void *)(a3 + 88) = &off_1F12DB938;
  sub_1B9101650((uint64_t)v18, a3 + 96);
  uint64_t v6 = type metadata accessor for TTRISubtaskListEditingPresenter();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 160) = v6;
  *(void *)(a3 + 168) = &off_1F12DB920;
  *(void *)(a3 + 136) = v7;
  *(void *)(v7 + 24) = &off_1F12DB7F8;
  swift_unknownObjectWeakAssign();
  swift_retain();
  swift_retain();
  uint64_t v8 = sub_1B91D0014();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  uint64_t v15 = *(void *)(a3 + 48);
  uint64_t v16 = *(void *)(a3 + 56);
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v10;
  *(void *)(a3 + 64) = v12;
  *(void *)(a3 + 72) = v14;
  sub_1B91B6518(v15, v16);
  return a3;
}

id sub_1B91DC75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TTRISubtaskListInteractor();
  uint64_t v7 = (void *)swift_allocObject();
  v7[3] = 0;
  swift_unknownObjectWeakInit();
  v7[4] = a1;
  v7[5] = a2;
  uint64_t v8 = type metadata accessor for TTRISubtaskListRouter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v26[3] = v8;
  v26[4] = &off_1F12DB750;
  v26[0] = v9;
  type metadata accessor for TTRISubtaskListPresenter();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v8);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
  uint64_t v16 = *v14;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v17 = sub_1B91DC614((uint64_t)v7, v16, v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  uint64_t v18 = (objc_class *)type metadata accessor for TTRISubtaskListViewController();
  uint64_t v19 = objc_allocWithZone(v18);
  Swift::tuple_title_NSAttributedString_isValid_Bool v20 = &v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  *Swift::tuple_title_NSAttributedString_isValid_Bool v20 = 0u;
  v20[1] = 0u;
  uint64_t v21 = (uint64_t *)&v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter];
  *uint64_t v21 = v17;
  v21[1] = (uint64_t)&off_1F12DB838;
  v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate] = 0;
  v25.receiver = v19;
  v25.super_class = v18;
  swift_retain();
  id v22 = objc_msgSendSuper2(&v25, sel_initWithStyle_, 0);
  v7[3] = &off_1F12DB828;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(v17 + 24) = &off_1F12DBA80;
  swift_unknownObjectWeakAssign();
  *(void *)(v17 + 40) = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v22;
}

uint64_t sub_1B91DC9EC()
{
  sub_1B90D88A0(v0 + 16);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListInteractor()
{
  return self;
}

uint64_t sub_1B91DCA50(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_1B90D8A70((uint64_t)v14, (uint64_t)v13);
  type metadata accessor for TTRReminderEditor();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 72) = 0;
  *(void *)(v6 + 16) = a2;
  sub_1B90D8A70((uint64_t)v13, v6 + 24);
  *(unsigned char *)(v6 + 64) = 0;
  id v7 = objc_msgSend(a2, sel_fetchedCurrentDueDateDeltaAlert);
  sub_1B90D97EC((uint64_t)v13);
  uint64_t v8 = *(void **)(v6 + 72);
  *(void *)(v6 + 72) = v7;

  sub_1B90D97EC((uint64_t)v14);
  TTRReminderEditor.edit(completed:trackEditedUsing:)(a1, 0);
  if (!MEMORY[0x1BA9DB180](v3 + 16)) {
    return swift_release();
  }
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
  sub_1B91D1274();
  swift_release();

  return swift_unknownObjectRelease();
}

char *sub_1B91DCB78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument(0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate];
  *(void *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController] = 0;
  uint64_t v9 = (uint64_t)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
  uint64_t v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell] = 0;
  uint64_t v11 = qword_1EB9B5348;
  uint64_t result = v2;
  uint64_t v13 = result;
  if (v11 != -1) {
    uint64_t result = (char *)swift_once();
  }
  uint64_t v14 = *((void *)off_1EB9B14A0 + 2);
  if (v14)
  {
    sub_1B90D7014((uint64_t)off_1EB9B14A0 + 32 * v14, (uint64_t)v18);
    swift_dynamicCast();
    swift_beginAccess();
    sub_1B91DEF24((uint64_t)v7, v9);
    swift_endAccess();
    *((void *)v8 + 1) = *(void *)&v7[*(int *)(v5 + 20) + 8];
    swift_unknownObjectWeakAssign();

    v17.receiver = v13;
    v17.super_class = ObjectType;
    id v15 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

    id v16 = v15;
    sub_1B91DEE84((uint64_t)v7, type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument);
    if (v16) {

    }
    return (char *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B91DCDE0()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC0E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  memset(v16, 0, 73);
  memset(v15, 0, 73);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9F00B10);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997ABA0;
  *(void *)(v4 + 32) = sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B91DDCBC);
  *(void *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  *(void *)(v4 + 48) = sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B91DE0A4);
  *(void *)(v4 + 56) = &protocol witness table for TTRITableCell<A>;
  *(void *)(v4 + 64) = sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B91DE554);
  *(void *)(v4 + 72) = &protocol witness table for TTRITableCell<A>;
  type metadata accessor for TTRITableSection();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v5 + 200) = 0;
  *(void *)(v5 + 208) = 0;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 89) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 169) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(unsigned char *)(v5 + 216) = 1;
  swift_beginAccess();
  sub_1B91DEC18((uint64_t)v16, v5 + 32);
  swift_endAccess();
  swift_beginAccess();
  sub_1B91DEC18((uint64_t)v15, v5 + 112);
  swift_endAccess();
  *(void *)(v5 + 192) = v4;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = &protocol witness table for TTRITableSection;
  uint64_t v6 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController());
  id v7 = sub_1B940DC04(v2, v3, 6, 0, v6);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
  *(void *)&v0[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController] = v7;
  uint64_t v9 = v7;

  id v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_setDelegate_, v9);

  id v12 = objc_msgSend(v0, sel_tableView);
  if (v12)
  {
    uint64_t v13 = v12;
    objc_msgSend(v12, sel_setDataSource_, v9);

    uint64_t v14 = v0;
    sub_1B9959460(2, (uint64_t)v9, (uint64_t)v14);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1B91DD0D4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1B91DD13C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v90 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v87 = (uint64_t)&v86 - v5;
  uint64_t v6 = sub_1B996A6F0();
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v89 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v91 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  objc_super v17 = (char *)&v86 - v16;
  sub_1B91DEB50(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1B91DEBB8((uint64_t)v10);
    uint64_t v18 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B91DDCBC)+ 32);
    swift_release();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC8C8];
    Swift::tuple_title_NSAttributedString_isValid_Bool v20 = (char *)v18 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v18) + 0x78);
    swift_beginAccess();
    long long v21 = *((_OWORD *)v20 + 1);
    long long v92 = *(_OWORD *)v20;
    long long v93 = v21;
    long long v22 = *((_OWORD *)v20 + 2);
    long long v23 = *((_OWORD *)v20 + 3);
    long long v24 = *((_OWORD *)v20 + 5);
    long long v96 = *((_OWORD *)v20 + 4);
    v97[0] = v24;
    long long v94 = v22;
    long long v95 = v23;
    long long v25 = *((_OWORD *)v20 + 6);
    long long v26 = *((_OWORD *)v20 + 7);
    long long v27 = *((_OWORD *)v20 + 9);
    v98[1] = *((_OWORD *)v20 + 8);
    v99[0] = v27;
    v97[1] = v25;
    v98[0] = v26;
    long long v28 = *((_OWORD *)v20 + 10);
    long long v29 = *((_OWORD *)v20 + 11);
    long long v30 = *((_OWORD *)v20 + 12);
    *(void *)&v99[4] = *((void *)v20 + 26);
    v99[2] = v29;
    v99[3] = v30;
    v99[1] = v28;
    long long v125 = v92;
    long long v126 = v93;
    long long v127 = v94;
    long long v128 = v95;
    char v129 = v96;
    uint64_t v130 = *((void *)&v96 + 1);
    uint64_t v131 = *(void *)&v97[0];
    long long v132 = *(_OWORD *)((char *)v97 + 8);
    uint64_t v133 = *((void *)&v97[1] + 1);
    uint64_t v134 = *(void *)&v98[0];
    long long v135 = *(_OWORD *)((char *)v98 + 8);
    uint64_t v136 = *((void *)&v98[1] + 1);
    char v137 = 1;
    long long v138 = *(_OWORD *)((char *)v99 + 8);
    long long v139 = *(_OWORD *)((char *)&v99[1] + 8);
    long long v140 = *(_OWORD *)((char *)&v99[2] + 8);
    long long v141 = *(_OWORD *)((char *)&v99[3] + 8);
    sub_1B91DEC80((uint64_t)&v92);
    sub_1B9433300((uint64_t)&v125);

    uint64_t v31 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B91DE0A4)+ 32);
    swift_release();
    uint64_t v32 = (char *)v31 + *(void *)((*v19 & *v31) + 0x78);
    swift_beginAccess();
    long long v33 = *((_OWORD *)v32 + 1);
    long long v100 = *(_OWORD *)v32;
    long long v101 = v33;
    long long v34 = *((_OWORD *)v32 + 2);
    long long v35 = *((_OWORD *)v32 + 3);
    long long v36 = *((_OWORD *)v32 + 5);
    long long v104 = *((_OWORD *)v32 + 4);
    v105[0] = v36;
    long long v102 = v34;
    long long v103 = v35;
    long long v37 = *((_OWORD *)v32 + 6);
    long long v38 = *((_OWORD *)v32 + 7);
    long long v39 = *((_OWORD *)v32 + 9);
    v106[1] = *((_OWORD *)v32 + 8);
    v107[0] = v39;
    v105[1] = v37;
    v106[0] = v38;
    long long v40 = *((_OWORD *)v32 + 10);
    long long v41 = *((_OWORD *)v32 + 11);
    long long v42 = *((_OWORD *)v32 + 12);
    *(void *)&v107[4] = *((void *)v32 + 26);
    v107[2] = v41;
    v107[3] = v42;
    v107[1] = v40;
    long long v108 = v100;
    long long v109 = v101;
    long long v110 = v102;
    long long v111 = v103;
    char v112 = v104;
    uint64_t v113 = *((void *)&v104 + 1);
    uint64_t v114 = *(void *)&v105[0];
    long long v115 = *(_OWORD *)((char *)v105 + 8);
    uint64_t v116 = *((void *)&v105[1] + 1);
    uint64_t v117 = *(void *)&v106[0];
    long long v118 = *(_OWORD *)((char *)v106 + 8);
    uint64_t v119 = *((void *)&v106[1] + 1);
    char v120 = 0;
    long long v121 = *(_OWORD *)((char *)v107 + 8);
    long long v122 = *(_OWORD *)((char *)&v107[1] + 8);
    long long v123 = *(_OWORD *)((char *)&v107[2] + 8);
    long long v124 = *(_OWORD *)((char *)&v107[3] + 8);
    sub_1B91DEC80((uint64_t)&v100);
    sub_1B9433300((uint64_t)&v108);

    BOOL v43 = 0;
  }
  else
  {
    sub_1B91DED54((uint64_t)v10, (uint64_t)v17);
    long long v44 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B91DDCBC)+ 32);
    swift_release();
    uint64_t v45 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v46 = (char *)v44 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v44) + 0x78);
    swift_beginAccess();
    long long v47 = *((_OWORD *)v46 + 1);
    long long v92 = *(_OWORD *)v46;
    long long v93 = v47;
    long long v48 = *((_OWORD *)v46 + 2);
    long long v49 = *((_OWORD *)v46 + 3);
    long long v50 = *((_OWORD *)v46 + 5);
    long long v96 = *((_OWORD *)v46 + 4);
    v97[0] = v50;
    long long v94 = v48;
    long long v95 = v49;
    long long v51 = *((_OWORD *)v46 + 6);
    long long v52 = *((_OWORD *)v46 + 7);
    long long v53 = *((_OWORD *)v46 + 9);
    v98[1] = *((_OWORD *)v46 + 8);
    v99[0] = v53;
    v97[1] = v51;
    v98[0] = v52;
    long long v54 = *((_OWORD *)v46 + 10);
    long long v55 = *((_OWORD *)v46 + 11);
    long long v56 = *((_OWORD *)v46 + 12);
    *(void *)&v99[4] = *((void *)v46 + 26);
    v99[2] = v55;
    v99[3] = v56;
    v99[1] = v54;
    long long v125 = v92;
    long long v126 = v93;
    long long v127 = v94;
    long long v128 = v95;
    char v129 = v96;
    uint64_t v130 = *((void *)&v96 + 1);
    uint64_t v131 = *(void *)&v97[0];
    long long v132 = *(_OWORD *)((char *)v97 + 8);
    uint64_t v133 = *((void *)&v97[1] + 1);
    uint64_t v134 = *(void *)&v98[0];
    long long v135 = *(_OWORD *)((char *)v98 + 8);
    uint64_t v136 = *((void *)&v98[1] + 1);
    char v137 = 0;
    long long v138 = *(_OWORD *)((char *)v99 + 8);
    long long v139 = *(_OWORD *)((char *)&v99[1] + 8);
    long long v140 = *(_OWORD *)((char *)&v99[2] + 8);
    long long v141 = *(_OWORD *)((char *)&v99[3] + 8);
    sub_1B91DEC80((uint64_t)&v92);
    sub_1B9433300((uint64_t)&v125);

    uint64_t v57 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B91DE0A4)+ 32);
    swift_release();
    uint64_t v58 = (char *)v57 + *(void *)((*v45 & *v57) + 0x78);
    swift_beginAccess();
    long long v59 = *((_OWORD *)v58 + 1);
    long long v100 = *(_OWORD *)v58;
    long long v101 = v59;
    long long v60 = *((_OWORD *)v58 + 2);
    long long v61 = *((_OWORD *)v58 + 3);
    long long v62 = *((_OWORD *)v58 + 5);
    long long v104 = *((_OWORD *)v58 + 4);
    v105[0] = v62;
    long long v102 = v60;
    long long v103 = v61;
    long long v63 = *((_OWORD *)v58 + 6);
    long long v64 = *((_OWORD *)v58 + 7);
    long long v65 = *((_OWORD *)v58 + 9);
    v106[1] = *((_OWORD *)v58 + 8);
    v107[0] = v65;
    v105[1] = v63;
    v106[0] = v64;
    long long v66 = *((_OWORD *)v58 + 10);
    long long v67 = *((_OWORD *)v58 + 11);
    long long v68 = *((_OWORD *)v58 + 12);
    *(void *)&v107[4] = *((void *)v58 + 26);
    v107[2] = v67;
    v107[3] = v68;
    v107[1] = v66;
    long long v108 = v100;
    long long v109 = v101;
    long long v110 = v102;
    long long v111 = v103;
    char v112 = v104;
    uint64_t v113 = *((void *)&v104 + 1);
    uint64_t v114 = *(void *)&v105[0];
    long long v115 = *(_OWORD *)((char *)v105 + 8);
    uint64_t v116 = *((void *)&v105[1] + 1);
    uint64_t v117 = *(void *)&v106[0];
    long long v118 = *(_OWORD *)((char *)v106 + 8);
    uint64_t v119 = *((void *)&v106[1] + 1);
    char v120 = 1;
    long long v121 = *(_OWORD *)((char *)v107 + 8);
    long long v122 = *(_OWORD *)((char *)&v107[1] + 8);
    long long v123 = *(_OWORD *)((char *)&v107[2] + 8);
    long long v124 = *(_OWORD *)((char *)&v107[3] + 8);
    sub_1B91DEC80((uint64_t)&v100);
    sub_1B9433300((uint64_t)&v108);

    sub_1B91DEDB8((uint64_t)v17, (uint64_t)v15, type metadata accessor for TTRRecurrenceEndModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    BOOL v43 = EnumCaseMultiPayload != 1;
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v70 = v88;
      uint64_t v71 = *(void (**)(void))(v88 + 32);
      long long v72 = v45;
      int v73 = v91;
      uint64_t v86 = v17;
      uint64_t v74 = v89;
      v71();
      uint64_t v75 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B91DE554)+ 32);
      swift_release();
      uint64_t v76 = (uint64_t)v75 + *(void *)((*v72 & *v75) + 0x78);
      swift_beginAccess();
      uint64_t v77 = v87;
      sub_1B91DEDB8(v76, v87, type metadata accessor for TTRICalendarPickerCellContentState);
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 24))(v77, v73, v74);
      uint64_t v78 = v90;
      sub_1B91DEDB8(v76, v90, type metadata accessor for TTRICalendarPickerCellContentState);
      swift_beginAccess();
      sub_1B91DEE20(v77, v76);
      swift_endAccess();
      sub_1B940BA08(v78);
      sub_1B91DEE84(v77, type metadata accessor for TTRICalendarPickerCellContentState);
      sub_1B91DEE84(v78, type metadata accessor for TTRICalendarPickerCellContentState);

      uint64_t v79 = v74;
      objc_super v17 = v86;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v91, v79);
    }
    sub_1B91DEE84((uint64_t)v17, type metadata accessor for TTRRecurrenceEndModel);
  }
  uint64_t v80 = sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B91DE554);
  BOOL v81 = !v43;
  swift_beginAccess();
  int v82 = *(unsigned __int8 *)(v80 + 49);
  *(unsigned char *)(v80 + 49) = !v43;
  if (v81 == v82) {
    return swift_release();
  }
  swift_beginAccess();
  if (!MEMORY[0x1BA9DB180](v80 + 16)) {
    return swift_release();
  }
  uint64_t v83 = *(void *)(v80 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, _UNKNOWN **, BOOL, uint64_t, uint64_t))(v83 + 8))(v80, &protocol witness table for TTRITableCell<A>, v81, ObjectType, v83);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B91DDB6C(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.receiver = v1;
  v10.super_class = ObjectType;
  objc_msgSendSuper2(&v10, sel_viewWillDisappear_, a1 & 1);
  uint64_t result = MEMORY[0x1BA9DB180](&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate]);
  if (result)
  {
    uint64_t v8 = (uint64_t)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B91DEB50(v8, (uint64_t)v6);
    sub_1B9310E94((uint64_t)v6);
    swift_unknownObjectRelease();
    return sub_1B91DEBB8((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1B91DDCBC()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  memset(v10, 0, 24);
  v10[3] = 0x1FFFFFFFELL;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = 0;
  uint64_t v14 = sub_1B996A200();
  uint64_t v15 = v0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v20 = 0;
  char v23 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v1 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailCellContent(0));
  uint64_t v2 = sub_1B97EDCE8(0, 0x65436C6961746544, 0xEA00000000006C6CLL, 0, (uint64_t)v10);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x108));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)sub_1B91DEF94;
  v5[1] = v3;
  sub_1B90C337C(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDAE0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 48) = 1;
  *(_WORD *)(v7 + 49) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = 0;
  uint64_t v8 = (char *)v2 + *(void *)((*v4 & *v2) + 0x70);
  swift_beginAccess();
  *((void *)v8 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v7;
}

void sub_1B91DDF48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1BA9DB180](a1 + 16);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    uint64_t v7 = type metadata accessor for TTRRecurrenceEndModel(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    uint64_t v8 = (uint64_t)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B91DEF24((uint64_t)v4, v8);
    swift_endAccess();
    uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v9)
    {
      objc_super v10 = v6;
      id v11 = v9;
      sub_1B9959460(1, (uint64_t)v11, (uint64_t)v10);

      sub_1B91DEBB8((uint64_t)v4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1B91DE0A4()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  memset(v10, 0, 24);
  v10[3] = 0x1FFFFFFFELL;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = 0;
  uint64_t v14 = sub_1B996A200();
  uint64_t v15 = v0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v20 = 0;
  char v23 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v1 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailCellContent(0));
  uint64_t v2 = sub_1B97EDCE8(0, 0x65436C6961746544, 0xEA00000000006C6CLL, 0, (uint64_t)v10);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x108));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)sub_1B91DEF8C;
  v5[1] = v3;
  sub_1B90C337C(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDAE0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 48) = 1;
  *(_WORD *)(v7 + 49) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = 0;
  uint64_t v8 = (char *)v2 + *(void *)((*v4 & *v2) + 0x70);
  swift_beginAccess();
  *((void *)v8 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v7;
}

void sub_1B91DE330(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1BA9DB180](a1 + 16);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    uint64_t v7 = *(id *)(sub_1B91DD0D4(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B91DE554)+ 32);
    swift_release();
    uint64_t v8 = (char *)v7 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v7) + 0x78);
    swift_beginAccess();
    uint64_t v9 = sub_1B996A6F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v4, v8, v9);

    uint64_t v10 = type metadata accessor for TTRRecurrenceEndModel(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
    uint64_t v11 = (uint64_t)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B91DEF24((uint64_t)v4, v11);
    swift_endAccess();
    long long v12 = *(void **)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v12)
    {
      char v13 = v6;
      id v14 = v12;
      sub_1B9959460(1, v14, v13);

      sub_1B91DEBB8((uint64_t)v4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1B91DE554()
{
  uint64_t v0 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  id v3 = objc_allocWithZone((Class)type metadata accessor for TTRICalendarPickerCellContent(0));
  uint64_t v4 = TTRICalendarPickerCellContent.init(state:)((uint64_t)v2);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void *)((char *)v4 + direct field offset for TTRICalendarPickerCellContent.stateChangeBlock);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = (uint64_t)sub_1B91DEF1C;
  v6[1] = v5;
  sub_1B90C337C(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDAD8);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v8 + 48) = 1;
  *(_WORD *)(v8 + 49) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(unsigned char *)(v8 + 72) = 1;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = 0;
  uint64_t v9 = (char *)v4 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x70);
  swift_beginAccess();
  *((void *)v9 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v8;
}

uint64_t sub_1B91DE6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1B996A6F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9DB180](a2 + 16);
  if (result)
  {
    long long v12 = (char *)result;
    char v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
    v13(v10, a1, v7);
    v13(v6, (uint64_t)v10, v7);
    uint64_t v14 = type metadata accessor for TTRRecurrenceEndModel(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
    uint64_t v15 = (uint64_t)&v12[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B91DEF24((uint64_t)v6, v15);
    uint64_t result = swift_endAccess();
    uint64_t v16 = *(void **)&v12[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v16)
    {
      uint64_t v17 = v12;
      id v18 = v16;
      sub_1B9959460(1, v18, v17);

      sub_1B91DEBB8((uint64_t)v6);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B91DEA28()
{
  return type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController(0);
}

uint64_t type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController(uint64_t a1)
{
  return sub_1B90EAF08(a1, (uint64_t *)&unk_1E9EFDAC8);
}

void sub_1B91DEA50()
{
  sub_1B91DEAF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1B91DEAF8()
{
  if (!qword_1EB9B2BE8)
  {
    type metadata accessor for TTRRecurrenceEndModel(255);
    unint64_t v0 = sub_1B9970060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9B2BE8);
    }
  }
}

uint64_t sub_1B91DEB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91DEBB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B91DEC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9F07990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91DEC80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 88);
  id v3 = *(void **)(a1 + 96);
  uint64_t v4 = *(void **)(a1 + 120);
  sub_1B910DDB0(*(id *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v5 = v2;
  id v6 = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v7 = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t sub_1B91DED54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91DEDB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B91DEE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B91DEE84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B91DEEE4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1B91DEF1C(uint64_t a1)
{
  return sub_1B91DE6EC(a1, v1);
}

uint64_t sub_1B91DEF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1B91DEF8C()
{
  sub_1B91DE330(v0);
}

void sub_1B91DEF94()
{
  sub_1B91DDF48(v0);
}

uint64_t type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument(uint64_t a1)
{
  return sub_1B90EAF08(a1, (uint64_t *)&unk_1E9EFDAE8);
}

uint64_t *sub_1B91DEFBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TTRRecurrenceEndModel(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v11 = sub_1B996A6F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1B91DF18C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRecurrenceEndModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2)
    && !swift_getEnumCaseMultiPayload())
  {
    uint64_t v3 = sub_1B996A6F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  }

  return swift_unknownObjectRelease();
}

char *sub_1B91DF25C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v9 = sub_1B996A6F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_unknownObjectRetain();
  return a1;
}

char *sub_1B91DF3DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B91DEE84((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v18 = sub_1B996A6F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1B91DEE84((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_14;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v12 = sub_1B996A6F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v14 + 1) = v16;
  return a1;
}

char *sub_1B91DF644(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v9 = sub_1B996A6F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1B91DF7BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1B91DEE84((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v18 = sub_1B996A6F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v11 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1B91DEE84((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_14;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v12 = sub_1B996A6F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  swift_unknownObjectRelease();
  *((void *)v14 + 1) = v16;
  return a1;
}

uint64_t sub_1B91DFA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B91DFA30);
}

uint64_t sub_1B91DFA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1B91DFAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B91DFB08);
}

uint64_t sub_1B91DFB08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1B91DFBC8()
{
  sub_1B91DEAF8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B91DFC5C()
{
  qword_1E9EFDAF8 = 0x4042000000000000;
}

void sub_1B91DFC6C()
{
  uint64_t v1 = v0;
  int v2 = v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries];
  id v3 = objc_msgSend(v1, sel_textLabel);
  uint64_t v4 = v3;
  if (v2 == 1)
  {
    if (!v3) {
      return;
    }
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    unint64_t v5 = 0x80000001B99A7E70;
  }
  else
  {
    if (!v3) {
      return;
    }
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    unint64_t v5 = 0x80000001B99A7E20;
  }
  sub_1B996A200();
  id v6 = (id)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setText_, v6, v5);
}

id sub_1B91DFE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries] = 0;
  if (a3)
  {
    unint64_t v5 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = 0;
  }
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  id v6 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, a1, v5);

  id v7 = v6;
  id v8 = objc_msgSend(v7, sel_textLabel);
  if (v8)
  {
    uint64_t v9 = v8;
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    unint64_t v10 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10, 0x80000001B99A7E20);
  }
  id v11 = objc_msgSend(v7, sel_textLabel);
  if (v11)
  {
    uint64_t v12 = v11;
    if (qword_1EB9B5E18 != -1) {
      swift_once();
    }
    id v13 = sub_1B96B5668(1);
    objc_msgSend(v12, sel_setFont_, v13);
  }
  objc_msgSend(v7, sel_setSeparatorInset_, *MEMORY[0x1E4FB2848], *(double *)(MEMORY[0x1E4FB2848] + 8), *(double *)(MEMORY[0x1E4FB2848] + 16), *(double *)(MEMORY[0x1E4FB2848] + 24));
  objc_msgSend(v7, sel_setNeedsLayout);

  return v7;
}

void sub_1B91E017C()
{
  uint64_t v1 = sub_1B996D300();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (objc_class *)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  v34.receiver = v0;
  v34.super_class = v5;
  objc_msgSendSuper2(&v34, sel_layoutSubviews);
  id v6 = objc_msgSend(v0, sel_textLabel);
  if (v6)
  {
    id v7 = v6;
    id v8 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v8, sel_directionalLayoutMargins);
    double v10 = v9;

    if (qword_1E9EFA2B0 != -1) {
      swift_once();
    }
    double v11 = v10 + *(double *)&qword_1E9EFDAF8;
    objc_msgSend(v7, sel_frame);
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    id v18 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
    id v19 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v19, sel_bounds);
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGFloat v27 = v26;

    v35.origin.x = v21;
    v35.origin.y = v23;
    v35.size.width = v25;
    v35.size.height = v27;
    double Width = CGRectGetWidth(v35);
    if (!v18) {
      goto LABEL_7;
    }
    if (v18 == (id)1)
    {
      double v29 = Width;
      v36.origin.x = v11;
      v36.origin.y = v13;
      v36.size.width = v15;
      v36.size.height = v17;
      double v30 = v29 - CGRectGetMinX(v36);
      v37.origin.x = v11;
      v37.origin.y = v13;
      v37.size.width = v15;
      v37.size.height = v17;
      double v11 = v30 - CGRectGetWidth(v37);
LABEL_7:
      objc_msgSend(v7, sel_setFrame_, v11, v13, v15, v17);
      id v31 = objc_msgSend(v0, sel_tintColor);
      objc_msgSend(v7, sel_setTextColor_, v31);

      return;
    }
    if (qword_1E9EFAA48 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v1, (uint64_t)qword_1E9F05600);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v32, v1);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v33);
    sub_1B984DFDC((uint64_t)"unknown language direction", 26, 2);
    __break(1u);
  }
}

id sub_1B91E04E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TTRISubtaskListAddSubtaskCell()
{
  return self;
}

uint64_t sub_1B91E0540()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFDB08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFDB08);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1B91E074C()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = result;
  type metadata accessor for TTRIRemindersListReminderCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B18F0);
  sub_1B996EA30();
  uint64_t v4 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v5 = result;
  uint64_t v6 = type metadata accessor for TTRISubtaskListAddSubtaskCell();
  uint64_t v7 = swift_getObjCClassFromMetadata();
  uint64_t v23 = v6;
  sub_1B996EA30();
  id v8 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_registerClass_forCellReuseIdentifier_, v7, v8);

  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  double v9 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v9, 0x80000001B99A7FE0, v23);

  id result = objc_msgSend(v0, sel_tableView);
  if (!result) {
    goto LABEL_11;
  }
  double v10 = result;
  id v11 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v12 = result;
  objc_msgSend(result, sel_setKeyboardDismissMode_, 3);

  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    double v14 = result;
    objc_msgSend(result, sel_setTableFooterView_, v13);

    double v15 = *(void **)&v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter];
    uint64_t v16 = v15[6];
    uint64_t v17 = v15[7];
    uint64_t v18 = v15[8];
    uint64_t v19 = v15[9];
    sub_1B91B64C8(v16, v17);

    double v20 = (uint64_t *)&v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
    swift_beginAccess();
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    *double v20 = v16;
    v20[1] = v17;
    v20[2] = v18;
    v20[3] = v19;
    return (id)sub_1B91B6518(v21, v22);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1B91E0B0C()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v9, sel_viewWillLayoutSubviews);
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate) == 1)
  {
    *((unsigned char *)v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate) = 0;
    uint64_t v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1B91E3A70;
    *(void *)(v4 + 24) = v3;
    v8[4] = sub_1B91E3A88;
    v8[5] = v4;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 1107296256;
    v8[2] = sub_1B97E6334;
    v8[3] = &block_descriptor_20;
    unint64_t v5 = _Block_copy(v8);
    id v6 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_performWithoutAnimation_, v5);
    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_1B91E0CA0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tableView);
  if (v1)
  {
    uint64_t v2 = v1;
    v4[4] = nullsub_1;
    v4[5] = 0;
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 1107296256;
    v4[2] = sub_1B97E6334;
    v4[3] = &block_descriptor_23;
    uint64_t v3 = _Block_copy(v4);
    swift_release();
    objc_msgSend(v2, sel_performBatchUpdates_completion_, v3, 0);
    _Block_release(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B91E0DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 + qword_1EB9AC848;
  swift_beginAccess();
  sub_1B90CCA04(v5, (uint64_t)v30, &qword_1EB9ACA10);
  sub_1B90CCA04((uint64_t)v30, (uint64_t)v28, &qword_1EB9ACA10);
  if (v29)
  {
    if (v29 == 1)
    {
      sub_1B90BFE54((uint64_t)v28, (uint64_t)&v31, &qword_1EB9ACA28);
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
  }
  else
  {
    sub_1B9101700(v28, (uint64_t)&v31);
  }
  sub_1B90CCA68((uint64_t)v30, &qword_1EB9ACA10);
  uint64_t v6 = *((void *)&v32 + 1);
  if (!*((void *)&v32 + 1))
  {
    sub_1B90CCA68((uint64_t)&v31, &qword_1EB9ACA28);
LABEL_13:
    uint64_t v23 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
  uint64_t v7 = v33;
  id v8 = __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
  uint64_t v9 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  sub_1B90CCA68((uint64_t)&v31, &qword_1EB9ACA28);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  double v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel);
  swift_beginAccess();
  if (!v15[1])
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v16 = v15[2];
  if (*(void *)(v16 + 16))
  {
    sub_1B91B64C8(*v15, v15[1]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v17 = sub_1B90CFBBC(v12, v14);
    if (v18)
    {
      unint64_t v19 = v17;
      uint64_t v20 = *(void *)(v16 + 56);
      uint64_t v21 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
      uint64_t v22 = *(void *)(v21 - 8);
      sub_1B91E3988(v20 + *(void *)(v22 + 72) * v19, a2, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a2, 0, 1, v21);
    }
    else
    {
      uint64_t v26 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 1, 1, v26);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TTRISubtaskListViewController()
{
  return self;
}

unsigned char *sub_1B91E12EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v44[2] = a1;
  uint64_t v5 = sub_1B996AD50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  double v15 = (char *)v44 - v14;
  uint64_t v16 = sub_1B996ACD0();
  v44[1] = v3;
  unint64_t v17 = (char *)(v3 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel);
  swift_beginAccess();
  uint64_t v18 = *((void *)v17 + 1);
  if (!v18)
  {
    if (v16 < 0)
    {
      if (qword_1E9EFA2B8 == -1)
      {
LABEL_14:
        uint64_t v34 = sub_1B996D300();
        __swift_project_value_buffer(v34, (uint64_t)qword_1E9EFDB08);
        uint64_t v35 = v6;
        CGRect v36 = v8;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
        CGRect v37 = sub_1B996D2F0();
        os_log_type_t v38 = sub_1B996F650();
        if (os_log_type_enabled(v37, v38))
        {
          long long v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          v45[0] = v40;
          *(_DWORD *)long long v39 = 136315138;
          sub_1B91E39F0(&qword_1E9F079B0, MEMORY[0x1E4F27DE8]);
          uint64_t v41 = sub_1B9970B20();
          v45[9] = sub_1B90D2A1C(v41, v42, v45);
          sub_1B99700D0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v5);
          _os_log_impl(&dword_1B90A0000, v37, v38, "Unable to get cellViewModel at indexPath - unable to render subtask list cell. {indexPath: %s}", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BA9DB030](v40, -1, -1);
          MEMORY[0x1BA9DB030](v39, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v36, v5);
        }

        return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      }
LABEL_21:
      swift_once();
      goto LABEL_14;
    }
LABEL_9:
    sub_1B93F3B04(a2);
    uint64_t v21 = v32;
    swift_beginAccess();
    if (*((void *)v17 + 1)) {
      char v33 = *v17;
    }
    else {
      char v33 = 0;
    }
    swift_endAccess();
    v21[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries] = v33;
    sub_1B91DFC6C();
    return v21;
  }
  if (v16 >= *(void *)(v18 + 16)) {
    goto LABEL_9;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  unint64_t v19 = sub_1B996ACD0();
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v19 >= *(void *)(v18 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1B91E3988(v18+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  swift_bridgeObjectRelease();
  sub_1B91D194C((uint64_t)v13, (uint64_t)v15);
  sub_1B93F3AE8(a2);
  uint64_t v21 = v20;
  objc_msgSend(v20, sel_setSelectionStyle_, 0);
  uint64_t v22 = &v21[direct field offset for TTRIRemindersListReminderCell.delegate];
  swift_beginAccess();
  *((void *)v22 + 1) = &off_1F12DB9A8;
  swift_unknownObjectWeakAssign();
  uint64_t v23 = (uint64_t)&v21[direct field offset for TTRIRemindersListReminderCell.titleModule];
  swift_beginAccess();
  sub_1B90CCA04(v23, (uint64_t)v45, &qword_1EB9AC7C8);
  uint64_t v24 = v45[0];
  sub_1B90CCA68((uint64_t)v45, &qword_1EB9AC7C8);
  if (!v24)
  {
    id v25 = sub_1B91E3238();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    v45[5] = type metadata accessor for TTRISubtaskListCellTitleViewController();
    v45[1] = v29;
    v45[2] = (uint64_t)v25;
    v45[0] = v27;
    swift_unknownObjectRetain();
    id v30 = v25;
    TTRIRemindersListReminderCell.titleModule.setter((uint64_t)v45);

    swift_unknownObjectRelease();
  }
  v45[3] = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v45[4] = (uint64_t)&protocol witness table for TTRRemindersListViewModel.Reminder;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
  sub_1B91E3988((uint64_t)v15, (uint64_t)boxed_opaque_existential_0, type metadata accessor for TTRRemindersListViewModel.Reminder);
  TTRIRemindersListReminderCell.viewModel.setter((uint64_t)v45);
  sub_1B91E33B4((uint64_t)v15);
  return v21;
}

uint64_t sub_1B91E19BC(void *a1)
{
  uint64_t v3 = sub_1B996ACD0();
  uint64_t v4 = v1 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 8);
  if (v6)
  {
    if (v3 < *(void *)(v6 + 16)) {
      return result;
    }
  }
  else if (v3 < 0)
  {
    return result;
  }
  uint64_t v7 = (void *)sub_1B996AC70();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v7, 1);

  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter);
  uint64_t v9 = sub_1B996ACD0();
  uint64_t v10 = *(void *)(*(void *)(v8 + 80) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, id (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 272))(v9, sub_1B91E3980, v8, ObjectType, v10);
}

void sub_1B91E1DB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v38 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA48);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B996CFC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  CGRect v36 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  CGRect v37 = (char *)&v35 - v17;
  uint64_t v18 = a1 & 1;
  unint64_t v19 = (uint64_t *)&v5[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  *unint64_t v19 = v18;
  v19[1] = a2;
  v19[2] = a3;
  v19[3] = a4;
  sub_1B91B6518(v20, v21);
  uint64_t v22 = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (objc_msgSend(v5, sel_isViewLoaded))
  {
    sub_1B90CCA04((uint64_t)v38, (uint64_t)v12, &qword_1E9EFDA48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1B90CCA68((uint64_t)v12, &qword_1E9EFDA48);
      id v23 = objc_msgSend(v5, sel_tableView);
      if (v23)
      {
        uint64_t v24 = v23;
        objc_msgSend(v23, sel_reloadData);

        return;
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    id v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v26 = v37;
    v25(v37, v12, v13);
    sub_1B91E39F0(&qword_1E9EFDB38, MEMORY[0x1E4F95C58]);
    sub_1B996F3D0();
    sub_1B996F430();
    if (aBlock[0] == aBlock[6])
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
      return;
    }
    id v38 = objc_msgSend(v22, sel_tableView);
    if (!v38) {
      goto LABEL_11;
    }
    uint64_t v27 = v36;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v36, v26, v13);
    unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v29 = (v15 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = swift_allocObject();
    v25((char *)(v30 + v28), v27, v13);
    *(void *)(v30 + v29) = v22;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_1B91E38E4;
    *(void *)(v31 + 24) = v30;
    aBlock[4] = sub_1B919966C;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B97E6334;
    void aBlock[3] = &block_descriptor_12;
    long long v32 = _Block_copy(aBlock);
    id v33 = v22;
    swift_release();
    id v34 = v38;
    objc_msgSend(v38, sel_performBatchUpdates_completion_, v32, 0);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    swift_release();
  }
}

uint64_t sub_1B91E2204(uint64_t a1, void *a2)
{
  id v50 = a2;
  uint64_t v3 = sub_1B996CFC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v49 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B996CFA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  long long v48 = (char *)&v35 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDB40);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v47 = v4 + 16;
  v46(v16, a1, v3);
  sub_1B91E39F0(&qword_1E9EFDB38, MEMORY[0x1E4F95C58]);
  sub_1B996F3D0();
  *(void *)&v16[*(int *)(v13 + 44)] = v51[0];
  sub_1B90BFE54((uint64_t)v16, (uint64_t)v18, &qword_1E9EFDB40);
  unint64_t v19 = &v18[*(int *)(v13 + 44)];
  uint64_t v20 = *(void *)v19;
  sub_1B996F430();
  if (v20 == v51[0]) {
    return sub_1B90CCA68((uint64_t)v18, &qword_1E9EFDB40);
  }
  long long v44 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v45 = (void (**)(char *))(v7 + 16);
  unint64_t v42 = (uint64_t (**)(uint64_t *, uint64_t))(v7 + 88);
  BOOL v43 = (void (**)(uint64_t *, char *, uint64_t))(v7 + 32);
  int v41 = *MEMORY[0x1E4F95C48];
  int v37 = *MEMORY[0x1E4F95C40];
  int v36 = *MEMORY[0x1E4F95C50];
  uint64_t v40 = (void (**)(uint64_t *, uint64_t))(v7 + 96);
  long long v38 = xmmword_1B997AB90;
  long long v39 = v18;
  while (1)
  {
    uint64_t v27 = (void (*)(uint64_t *, void))sub_1B996F4C0();
    unint64_t v28 = v48;
    (*v45)(v48);
    v27(v51, 0);
    unint64_t v29 = v49;
    v46(v49, (uint64_t)v18, v3);
    sub_1B996F440();
    (*v44)(v29, v3);
    (*v43)(v10, v28, v6);
    int v30 = (*v42)(v10, v6);
    if (v30 == v41) {
      break;
    }
    if (v30 == v37)
    {
      (*v40)(v10, v6);
      uint64_t v31 = *v10;
      id v32 = objc_msgSend(v50, sel_tableView);
      if (!v32) {
        goto LABEL_15;
      }
      uint64_t v24 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA10);
      sub_1B996AD50();
      *(_OWORD *)(swift_allocObject() + 16) = v38;
      MEMORY[0x1BA9D3AE0](v31, 0);
      id v25 = (void *)sub_1B996EE40();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_deleteRowsAtIndexPaths_withRowAnimation_, v25, 100);
    }
    else
    {
      if (v30 != v36) {
        goto LABEL_17;
      }
      (*v40)(v10, v6);
      uint64_t v33 = *v10;
      id v34 = objc_msgSend(v50, sel_tableView);
      if (!v34) {
        goto LABEL_16;
      }
      uint64_t v24 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA10);
      sub_1B996AD50();
      *(_OWORD *)(swift_allocObject() + 16) = v38;
      MEMORY[0x1BA9D3AE0](v33, 0);
      id v25 = (void *)sub_1B996EE40();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_reconfigureRowsAtIndexPaths_, v25);
    }
LABEL_6:

    uint64_t v26 = *(void *)v19;
    uint64_t v18 = v39;
    sub_1B996F430();
    if (v26 == v51[0]) {
      return sub_1B90CCA68((uint64_t)v18, &qword_1E9EFDB40);
    }
  }
  (*v40)(v10, v6);
  uint64_t v22 = *v10;
  id v23 = objc_msgSend(v50, sel_tableView);
  if (v23)
  {
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA10);
    sub_1B996AD50();
    *(_OWORD *)(swift_allocObject() + 16) = v38;
    MEMORY[0x1BA9D3AE0](v22, 0);
    id v25 = (void *)sub_1B996EE40();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_insertRowsAtIndexPaths_withRowAnimation_, v25, 100);
    goto LABEL_6;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_1B9970BA0();
  __break(1u);
  return result;
}

void sub_1B91E2958(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B996AD50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v1[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  swift_beginAccess();
  if (*((void *)v8 + 1))
  {
    uint64_t v9 = *((void *)v8 + 3);
    uint64_t v10 = *(void **)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 20));
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v11 = objc_msgSend(v10, sel_stringRepresentation);
    uint64_t v12 = sub_1B996E9F0();
    uint64_t v14 = v13;

    if (*(void *)(v9 + 16))
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      unint64_t v15 = sub_1B90CFBBC(v12, v14);
      if (v16)
      {
        uint64_t v17 = *(void *)(*(void *)(v9 + 56) + 8 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        id v18 = objc_msgSend(v2, sel_tableView);
        if (v18)
        {
          unint64_t v19 = v18;
          MEMORY[0x1BA9D3AE0](v17, 0);
          uint64_t v20 = (void *)sub_1B996AC70();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          id v21 = objc_msgSend(v19, sel_cellForRowAtIndexPath_, v20);

          if (v21)
          {
            type metadata accessor for TTRIRemindersListReminderCell();
            uint64_t v22 = swift_dynamicCastClass();
            if (v22
              && (id v23 = *(void **)(v22 + qword_1EB9AC840),
                  id v24 = objc_msgSend(v23, sel_window),
                  objc_msgSend(v24, sel_makeKeyWindow),
                  v24,
                  objc_msgSend(v23, sel_becomeFirstResponder),
                  id v25 = objc_msgSend(v23, sel_selectedTextRange),
                  v25,
                  !v25))
            {
              id v26 = objc_msgSend(v23, sel_endOfDocument);
              id v27 = objc_msgSend(v23, sel_endOfDocument);
              id v28 = objc_msgSend(v23, sel_textRangeFromPosition_toPosition_, v26, v27);

              objc_msgSend(v23, sel_setSelectedTextRange_, v28);
            }
            else
            {
            }
          }
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B91E2CC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + qword_1EB9AC848;
  swift_beginAccess();
  sub_1B90CCA04(v7, (uint64_t)v19, &qword_1EB9ACA10);
  sub_1B90CCA04((uint64_t)v19, (uint64_t)v17, &qword_1EB9ACA10);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1B90BFE54((uint64_t)v17, (uint64_t)&v20, &qword_1EB9ACA28);
    }
    else
    {
      uint64_t v22 = 0;
      long long v20 = 0u;
      long long v21 = 0u;
    }
  }
  else
  {
    sub_1B9101700(v17, (uint64_t)&v20);
  }
  sub_1B90CCA68((uint64_t)v19, &qword_1EB9ACA10);
  uint64_t v8 = *((void *)&v21 + 1);
  if (!*((void *)&v21 + 1)) {
    return sub_1B90CCA68((uint64_t)&v20, &qword_1EB9ACA28);
  }
  uint64_t v9 = v22;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
  uint64_t v11 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  sub_1B90CCA68((uint64_t)&v20, &qword_1EB9ACA28);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v8);
  if (v14)
  {
    sub_1B91D0390(v14, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B91E2EE4()
{
  id result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    uint64_t v2 = result;
    unsigned __int8 v3 = objc_msgSend(result, sel_hasActiveDrag);

    if (v3) {
      return 0;
    }
    id result = objc_msgSend(v0, sel_tableView);
    if (result)
    {
      uint64_t v4 = result;
      unsigned int v5 = objc_msgSend(result, sel_hasActiveDrop);

      return (id)(v5 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1B91E2F88()
{
  if (qword_1E9EFA2B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1B996D300();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFDB08);
  oslog = sub_1B996D2F0();
  os_log_type_t v1 = sub_1B996F650();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1B90A0000, oslog, v1, "TTRISubtaskListViewController should never receive requestConfirmSiriFoundInAppsReminder", v2, 2u);
    MEMORY[0x1BA9DB030](v2, -1, -1);
  }
}

uint64_t sub_1B91E3070(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA40);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B91E0DBC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1B90CCA68((uint64_t)v4, &qword_1E9EFDA40);
  }
  sub_1B91D194C((uint64_t)v4, (uint64_t)v8);
  sub_1B91D1070((uint64_t)v8);
  return sub_1B91E33B4((uint64_t)v8);
}

uint64_t sub_1B91E31C8()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B91E31D4()
{
  objc_msgSend(v0, sel_setEditing_animated_, 0, 1);
  return 1;
}

uint64_t sub_1B91E3204()
{
  return 0;
}

uint64_t sub_1B91E3210()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter);
  if (*(void *)(v1 + 56)) {
    return *(unsigned char *)(v1 + 48) & 1;
  }
  else {
    return 0;
  }
}

id sub_1B91E3238()
{
  type metadata accessor for TTRISubtaskListCellTitlePresenter(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  v0[5] = 0;
  swift_unknownObjectWeakInit();
  v0[7] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC15RemindersUICore33TTRISubtaskListCellTitlePresenter_viewModel;
  uint64_t v2 = type metadata accessor for TTRReminderCellTitleViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (objc_class *)type metadata accessor for TTRISubtaskListCellTitleViewController();
  uint64_t v4 = objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_titleTextView] = 0;
  v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_userPressedReturn] = 0;
  uint64_t v5 = &v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_presenter];
  *uint64_t v5 = v0;
  v5[1] = &off_1F130B358;
  v8.receiver = v4;
  v8.super_class = v3;
  swift_retain();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  v0[3] = &off_1F130B2D0;
  swift_unknownObjectWeakAssign();
  v0[7] = &off_1F12DBA50;
  swift_unknownObjectWeakAssign();
  return v6;
}

uint64_t sub_1B91E33B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B91E3410()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2) {
    return *(void *)(v2 + 16) + 1;
  }
  else {
    return 1;
  }
}

unint64_t sub_1B91E346C()
{
  uint64_t v1 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = sub_1B996ACD0();
  uint64_t v9 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  unint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(v9 + 8);
  if (v11 && v8 < *(void *)(v11 + 16))
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t result = sub_1B996ACD0();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v11 + 16))
    {
      sub_1B91E3988(v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * result, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      swift_bridgeObjectRelease();
      sub_1B91D194C((uint64_t)v5, (uint64_t)v7);
      uint64_t v12 = *(void *)&v7[*(int *)(v1 + 20)];
      uint64_t v13 = *(void *)(*(void *)(*(void *)(v0
                                              + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter)
                                  + 80)
                      + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 280))(v12, ObjectType, v13);
      return sub_1B91E33B4((uint64_t)v7);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B91E363C()
{
  uint64_t v1 = sub_1B996ACD0();
  uint64_t v2 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 8);
  if (v3)
  {
    if (v1 < *(void *)(v3 + 16)) {
      return 1;
    }
  }
  else if (v1 < 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1B91E36BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDA40);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B91E0DBC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1B90CCA68((uint64_t)v4, &qword_1E9EFDA40);
  }
  sub_1B91D194C((uint64_t)v4, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  sub_1B91DCA50((v8[*(int *)(v10 + 32)] & 1) == 0, *(void **)&v8[*(int *)(v5 + 20)]);
  return sub_1B91E33B4((uint64_t)v8);
}

uint64_t sub_1B91E3840()
{
  uint64_t v1 = sub_1B996CFC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1B91E38E4()
{
  uint64_t v1 = *(void *)(sub_1B996CFC0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1B91E2204(v0 + v2, v3);
}

uint64_t sub_1B91E3970()
{
  return swift_deallocObject();
}

id sub_1B91E3980(void *a1)
{
  return sub_1B91D0350(a1, v1);
}

uint64_t sub_1B91E3988(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B91E39F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B91E3A38()
{
  return swift_deallocObject();
}

void sub_1B91E3A70()
{
  sub_1B91E0CA0(*(void **)(v0 + 16));
}

uint64_t sub_1B91E3A78()
{
  return swift_deallocObject();
}

uint64_t sub_1B91E3A9C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1EB9AD6E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9AD6E0);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t TTRURLMetadataInteractor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TTRURLMetadataInteractor.init()();
  return v0;
}

uint64_t TTRURLMetadataInteractor.init()()
{
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  sub_1B996F860();
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B47B8);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1B996BA10();
  swift_release();
  sub_1B996F860();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B47C0);
  swift_allocObject();
  *(void *)(v0 + 24) = sub_1B996BA10();
  swift_release();
  return v0;
}

uint64_t sub_1B91E3D04()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1B91E3D3C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(unsigned __int8 *)(a1 + 8);
  unint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v4 = sub_1B91E3E58(v1, v2, v3);
    swift_release();
  }
  else
  {
    uint64_t v5 = sub_1B996AEA0();
    sub_1B91E6528();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, *MEMORY[0x1E4F95160], v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDB68);
    swift_allocObject();
    return sub_1B996D0B0();
  }
  return v4;
}

uint64_t sub_1B91E3E50(uint64_t a1)
{
  return sub_1B91E3D3C(a1);
}

uint64_t sub_1B91E3E58(void *a1, int a2, void *a3)
{
  char v5 = a2;
  int v42 = a2;
  id v40 = a1;
  id v44 = *v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4AD0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v48 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B48F0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4CF0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4820);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  uint64_t v46 = v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4880);
  uint64_t v51 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  BOOL v43 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4800);
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v47 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v54 = 1;
  sub_1B996DAB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5FD0);
  sub_1B996DAA0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v22 = swift_allocObject();
  id v23 = v40;
  *(void *)(v22 + 16) = v40;
  *(unsigned char *)(v22 + 24) = v5;
  int v41 = a3;
  id v24 = v44;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = v24;
  id v44 = a3;
  id v40 = v23;
  sub_1B996D9E0();
  v39[1] = sub_1B90BFD68(0, &qword_1EB9B4A98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B48A0);
  sub_1B90C3338(&qword_1EB9B4CE8, (uint64_t *)&unk_1EB9B4CF0);
  sub_1B90C3338(&qword_1EB9B4898, &qword_1EB9B48A0);
  sub_1B996DCE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  id v53 = (id)sub_1B996F860();
  uint64_t v25 = sub_1B996F810();
  uint64_t v26 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v48, 1, 1, v25);
  sub_1B90C3338(&qword_1EB9B4818, &qword_1EB9B4820);
  sub_1B91B714C((unint64_t *)&qword_1EB9B4AE0, (unint64_t *)&qword_1EB9B5FA0);
  id v27 = v43;
  uint64_t v28 = v45;
  sub_1B996DD00();
  sub_1B90CCA68(v26, (uint64_t *)&unk_1EB9B4AD0);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v28);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v40;
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = v31;
  *(unsigned char *)(v30 + 32) = v42;
  *(void *)(v30 + 40) = v41;
  sub_1B90C3338(&qword_1EB9B4878, &qword_1EB9B4880);
  id v32 = v31;
  id v33 = v44;
  id v34 = v47;
  uint64_t v35 = v49;
  sub_1B996DC20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v35);
  sub_1B90C3338(&qword_1EB9B47F8, &qword_1EB9B4800);
  uint64_t v36 = v50;
  uint64_t v37 = sub_1B996DB80();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v36);
  return v37;
}

uint64_t sub_1B91E4584@<X0>(uint64_t a1@<X8>)
{
  sub_1B91E5928();
  uint64_t result = swift_allocError();
  unsigned char *v3 = 0;
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 1;
  return result;
}

void TTRURLMetadataInteractor.metadata(for:savingIfNeededTo:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0310);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v20 - v13);
  if (a2)
  {
    id v15 = a1;
    id v16 = objc_msgSend(a2, sel_list);
    if (!v16)
    {
      sub_1B91E5538();
      *uint64_t v14 = swift_allocError();
      (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v14, *MEMORY[0x1E4F95400], v8);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v9 + 32))(a3, v14, v8);
      goto LABEL_8;
    }
  }
  else
  {
    id v17 = a1;
  }
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
LABEL_16:
    sub_1B9970BA0();
    __break(1u);
    return;
  }
  v20[1] = a1;
  char v21 = 1;
  uint64_t v22 = a2;
  swift_retain();
  sub_1B996BA00();
  swift_release();
LABEL_8:
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v12, v8);
  if (v18 == *MEMORY[0x1E4F95408])
  {

    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
    swift_release();
    return;
  }
  if (v18 == *MEMORY[0x1E4F95410])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
    unint64_t v19 = (void *)*v12;
    sub_1B91E48B0(*v12, a1, 1, a2, 1);

    return;
  }
  if (v18 != *MEMORY[0x1E4F95400]) {
    goto LABEL_16;
  }

  (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
}

void sub_1B91E48B0(uint64_t a1, void *a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0318);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a2, sel_metadata);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = sub_1B996A5D0();
    unint64_t v18 = v17;

    sub_1B90CDBB4(v16, v18);
  }
  else if (a4)
  {
    uint64_t v48 = a1;
    uint64_t v49 = v5;
    uint64_t v19 = qword_1EB9A7C80;
    id v20 = a4;
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B996D300();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB9AD6E0);
    id v22 = v20;
    id v23 = a2;
    id v24 = sub_1B996D2F0();
    os_log_type_t v25 = sub_1B996F620();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = v11;
      uint64_t v28 = v23;
      uint64_t v29 = (void *)v45;
      uint64_t v47 = swift_slowAlloc();
      v51[0] = v47;
      *(_DWORD *)uint64_t v27 = 138412546;
      id v30 = objc_msgSend(v28, sel_objectID);
      int v44 = v26;
      uint64_t v31 = v22;
      id v32 = v30;
      uint64_t v50 = (uint64_t)v30;
      os_log_t v43 = v24;
      sub_1B99700D0();
      *uint64_t v29 = v32;
      id v23 = v28;
      uint64_t v11 = v46;

      *(_WORD *)(v27 + 12) = 2080;
      if (a5) {
        uint64_t v33 = 1702195828;
      }
      else {
        uint64_t v33 = 0x65736C6166;
      }
      if (a5) {
        unint64_t v34 = 0xE400000000000000;
      }
      else {
        unint64_t v34 = 0xE500000000000000;
      }
      uint64_t v50 = sub_1B90D2A1C(v33, v34, v51);
      sub_1B99700D0();
      id v22 = v31;
      swift_bridgeObjectRelease();
      os_log_t v35 = v43;
      _os_log_impl(&dword_1B90A0000, v43, (os_log_type_t)v44, "TTRURLMetadataInteractor: saving metadata {attachmentID: %@, isResave: %s}", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      uint64_t v36 = v45;
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v36, -1, -1);
      uint64_t v37 = v47;
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v37, -1, -1);
      MEMORY[0x1BA9DB030](v27, -1, -1);
    }
    else
    {
    }
    long long v38 = (void *)v48;
    if (*(void *)(v49 + 24))
    {
      v51[0] = v48;
      v51[1] = (uint64_t)v23;
      v51[2] = (uint64_t)v22;
      id v39 = v22;
      id v40 = v23;
      id v41 = v38;
      swift_retain();
      sub_1B996BA00();

      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1B91E4C9C@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + 8), sel_objectID);
  *a1 = result;
  return result;
}

uint64_t sub_1B91E4CD8@<X0>(id a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  id v7 = objc_msgSend(a1, sel_metadata);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (void *)sub_1B996A5D0();
    unint64_t v11 = v10;

    if (qword_1EB9A7C80 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1B996D300();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB9AD6E0);
    id v13 = a3;
    id v14 = a1;
    id v15 = sub_1B996D2F0();
    os_log_type_t v16 = sub_1B996F620();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      unint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v17 = 138412290;
      id v29 = objc_msgSend(v14, sel_objectID);
      sub_1B99700D0();
      *unint64_t v18 = v29;

      _os_log_impl(&dword_1B90A0000, v15, v16, "TTRURLMetadataInteractor: found metadata {attachmentID: %@}", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v18, -1, -1);
      MEMORY[0x1BA9DB030](v17, -1, -1);
    }
    else
    {
    }
    uint64_t v26 = sub_1B91E5A10(v9, v11);
    uint64_t result = sub_1B90CDBB4((uint64_t)v9, v11);
  }
  else
  {
    if (qword_1EB9A7C80 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1B996D300();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB9AD6E0);
    id v20 = a3;
    id v21 = a1;
    id v22 = sub_1B996D2F0();
    os_log_type_t v23 = sub_1B996F620();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)id v24 = 138412290;
      id v30 = objc_msgSend(v21, sel_objectID);
      sub_1B99700D0();
      *os_log_type_t v25 = v30;

      _os_log_impl(&dword_1B90A0000, v22, v23, "TTRURLMetadataInteractor: fetching metadata {attachmentID: %@}", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v25, -1, -1);
      MEMORY[0x1BA9DB030](v24, -1, -1);
    }
    else
    {
    }
    uint64_t result = sub_1B91E5F48(v21, a2 & 1, a3);
    uint64_t v26 = result;
  }
  *a4 = v26;
  return result;
}

id sub_1B91E5090@<X0>(id *a1@<X0>, void *a2@<X2>, char a3@<W3>, void *a4@<X4>, void *a5@<X8>)
{
  id v10 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1B91E48B0((uint64_t)v10, a2, a3 & 1, a4, 0);
    swift_release();
  }
  *a5 = v10;

  return v10;
}

void sub_1B91E5140(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_1B9118C94(*a1, v4);
  uint64_t v5 = (void *)sub_1B996A5B0();
  id v6 = objc_msgSend(self, sel_metadataWithDataRepresentation_, v5);
  sub_1B90CDBB4(v3, v4);

  *a2 = v6;
}

uint64_t sub_1B91E51CC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1B9133138;
  *(void *)(v11 + 24) = v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  id v12 = a5;
  id v13 = a3;
  id v14 = a4;
  swift_retain();
  id v15 = objc_msgSend(v12, sel_store);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B997C200;
  *(void *)(v16 + 32) = v12;
  unint64_t v19 = v16;
  sub_1B996EE70();
  id v17 = v12;
  sub_1B96EC5B0(v19, (uint64_t)v15, 0, (uint64_t)v20, 0, 0, (uint64_t)sub_1B91E5A08, v11, v13, v14, v17);

  swift_bridgeObjectRelease();
  sub_1B90CCA68((uint64_t)v20, qword_1EB9AC628);

  return swift_release();
}

void sub_1B91E5358(void *a1, void (*a2)(void *, uint64_t))
{
  if (a1)
  {
    id v4 = a1;
    a2(a1, 1);
  }
  else
  {
    a2(0, 0);
  }
}

uint64_t TTRURLMetadataInteractor.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t TTRURLMetadataInteractor.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B91E543C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  id v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFCAB8);
  swift_allocObject();
  id v5 = v1;
  id v6 = v2;
  id v7 = v3;
  sub_1B996DAE0();
  sub_1B90C3338(&qword_1E9EFDB60, &qword_1E9EFCAB8);
  uint64_t v8 = sub_1B996DB80();
  swift_release();
  return v8;
}

unint64_t sub_1B91E5538()
{
  unint64_t result = qword_1E9EFDB48;
  if (!qword_1E9EFDB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDB48);
  }
  return result;
}

uint64_t type metadata accessor for TTRURLMetadataInteractor()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TTRURLMetadataInteractor.MetadataSavingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B91E564CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.MetadataSavingError()
{
  return &type metadata for TTRURLMetadataInteractor.MetadataSavingError;
}

uint64_t assignWithCopy for TTRURLMetadataInteractor.SavingOperationParams(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for TTRURLMetadataInteractor.SavingOperationParams(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.SavingOperationParams()
{
  return &type metadata for TTRURLMetadataInteractor.SavingOperationParams;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unsigned int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.MainOperationParams()
{
  return &type metadata for TTRURLMetadataInteractor.MainOperationParams;
}

uint64_t sub_1B91E5898()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B91E58B4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B91E58D4()
{
  unint64_t result = qword_1E9EFDB50;
  if (!qword_1E9EFDB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDB50);
  }
  return result;
}

unint64_t sub_1B91E5928()
{
  unint64_t result = qword_1E9EFDB58;
  if (!qword_1E9EFDB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDB58);
  }
  return result;
}

uint64_t sub_1B91E597C()
{
  return swift_deallocObject();
}

uint64_t sub_1B91E59C4(uint64_t a1, uint64_t a2)
{
  return sub_1B91E51CC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1B91E59D0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1B91E5A08(void *a1)
{
  sub_1B91E5358(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1B91E5A10(void *a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4AD0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B48E8);
  uint64_t v7 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4870);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B47F0);
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B47D0);
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  id v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = a1;
  unint64_t v34 = a2;
  sub_1B9118C94((uint64_t)a1, a2);
  sub_1B996DAB0();
  sub_1B996B020();
  id v33 = (id)sub_1B996B010();
  uint64_t v18 = sub_1B996F810();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B90C3338(&qword_1EB9B48E0, &qword_1EB9B48E8);
  sub_1B91B714C((unint64_t *)&qword_1EB9B4AE0, (unint64_t *)&qword_1EB9B5FA0);
  uint64_t v19 = v26;
  sub_1B996DD00();
  sub_1B90CCA68((uint64_t)v6, (uint64_t *)&unk_1EB9B4AD0);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  sub_1B90BFD68(0, &qword_1EB9B4A98);
  sub_1B90C3338(&qword_1EB9B4868, &qword_1EB9B4870);
  uint64_t v20 = v27;
  sub_1B996DC20();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5FD0);
  sub_1B90C3338(&qword_1EB9B47E8, &qword_1EB9B47F0);
  uint64_t v21 = v29;
  sub_1B996DD50();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v21);
  sub_1B90C3338(&qword_1EB9B47C8, &qword_1EB9B47D0);
  uint64_t v22 = v30;
  uint64_t v23 = sub_1B996DBB0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v22);
  return v23;
}

uint64_t sub_1B91E5F48(void *a1, int a2, void *a3)
{
  int v46 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4AD0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B996A580();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  uint64_t v8 = *(void *)(v47 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v39 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDB70);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30AB0]), sel_init);
  if (qword_1EB9A7C80 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1B996D300();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB9AD6E0);
  id v15 = a3;
  id v16 = a1;
  id v17 = sub_1B996D2F0();
  os_log_type_t v18 = sub_1B996F620();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v40 = v8;
    uint64_t v21 = (void *)v20;
    id v41 = v13;
    *(_DWORD *)uint64_t v19 = 138412290;
    id v22 = objc_msgSend(v16, sel_objectID);
    uint64_t v52 = (uint64_t)v22;
    id v13 = v41;
    sub_1B99700D0();
    *uint64_t v21 = v22;

    _os_log_impl(&dword_1B90A0000, v17, v18, "TTRURLMetadataInteractor: fetching LPLinkMetadata {attachmentID: %@}", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
    swift_arrayDestroy();
    uint64_t v23 = v21;
    uint64_t v8 = v40;
    MEMORY[0x1BA9DB030](v23, -1, -1);
    MEMORY[0x1BA9DB030](v19, -1, -1);
  }
  else
  {
  }
  id v24 = objc_msgSend(v16, sel_url);
  uint64_t v25 = v45;
  sub_1B996A520();

  uint64_t v26 = v47;
  uint64_t v27 = v48;
  uint64_t v28 = v44;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v25, v48);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30 + v29, v28, v27);
  *(unsigned char *)(v30 + v29 + v8) = v46 & 1;
  uint64_t v31 = v43;
  *(void *)(((v29 + v8) & 0xFFFFFFFFFFFFFFF8) + v30 + 8) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDB78);
  swift_allocObject();
  id v32 = v31;
  uint64_t v33 = sub_1B996DAE0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  uint64_t v52 = v33;
  sub_1B996B020();
  id v51 = (id)sub_1B996B010();
  uint64_t v34 = sub_1B996F810();
  uint64_t v35 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v42, 1, 1, v34);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B90C3338((unint64_t *)&qword_1E9EFDB80, &qword_1E9EFDB78);
  sub_1B91B714C((unint64_t *)&qword_1EB9B4AE0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B996DD00();
  sub_1B90CCA68(v35, (uint64_t *)&unk_1EB9B4AD0);

  swift_release();
  sub_1B90C3338(&qword_1E9EFDB88, &qword_1E9EFDB70);
  uint64_t v36 = v50;
  uint64_t v37 = sub_1B996DBB0();

  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v36);
  return v37;
}

unint64_t sub_1B91E6528()
{
  unint64_t result = qword_1EB9A7C20;
  if (!qword_1EB9A7C20)
  {
    sub_1B996AEA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9A7C20);
  }
  return result;
}

uint64_t sub_1B91E6580()
{
  return swift_deallocObject();
}

uint64_t sub_1B91E65C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B91E4CD8(*(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1B91E65D0()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1B91E6618@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1B91E5090(a1, *(void **)(v2 + 24), *(unsigned char *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_1B91E6628()
{
  uint64_t v1 = sub_1B996A580();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = ((v3 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1B91E66CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1B996A580() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  char v8 = *(unsigned char *)(v2 + v7);
  uint64_t v9 = *(void **)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8);

  sub_1B96B6634(a1, a2, v2 + v6, v8, v9);
}

unsigned char *storeEnumTagSinglePayload for TTRURLMetadataInteractor.InternalError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B91E6848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.InternalError()
{
  return &type metadata for TTRURLMetadataInteractor.InternalError;
}

uint64_t sub_1B91E6880()
{
  return sub_1B91B714C((unint64_t *)&qword_1EB9B4A60, (unint64_t *)&qword_1EB9B4A50);
}

unint64_t sub_1B91E68C8()
{
  unint64_t result = qword_1E9EFDB90;
  if (!qword_1E9EFDB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDB90);
  }
  return result;
}

uint64_t sub_1B91E6924(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = sub_1B996A580();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B90CCA04(v1, (uint64_t)v10, &qword_1EB9B1A70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t sub_1B91E6AFC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  id v16 = a1;
  uint64_t v5 = sub_1B996A6F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B90CCA04(v2, (uint64_t)v11, &qword_1EB9B5EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    uint64_t v12 = sub_1B996A120();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v16(v8);
    if (v3)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v14 = sub_1B996A120();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
    }
  }
}

uint64_t sub_1B91E6D3C(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  id v32 = a1;
  uint64_t v6 = sub_1B996AAB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v27 - v11;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v27 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v30 = v7 + 16;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v29 = v7 + 32;
  id v16 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v33 = a3;
  uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    id v24 = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v31, *(void *)(v33 + 48) + *(void *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v24, v6);
    char v25 = v32(v10);
    if (v3)
    {
      (*v16)(v10, v6);
      swift_release();
      return a2 & 1;
    }
    char v26 = v25;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v16)(v10, v6);
    if ((v26 & 1) == 0)
    {
      a2 = 0;
      goto LABEL_28;
    }
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 1;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B91E7044(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  for (; v5; uint64_t v5 = sub_1B9970930())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BA9D9380](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        char v12 = 0;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_1B91E717C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFDB98);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFDB98);
  if (qword_1EB9AD860 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9CC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id INTaskList.listID.getter()
{
  return sub_1B91EB40C();
}

id INTaskList.remList(store:)(void *a1)
{
  return sub_1B91EB68C(a1, (uint64_t (*)(void))INTaskList.listID.getter, (SEL *)&selRef_fetchListWithObjectID_error_, "Attempting to acquire REMList from INTaskList whose listID is nil", "Error obtaining REMList from INTaskList {error: %s}");
}

uint64_t INTaskList.init(list:includeReminders:)(id a1, char a2)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  if ((a2 & 1) == 0)
  {
LABEL_10:
    unint64_t v6 = MEMORY[0x1E4FBC860];
    return INTaskList.init(list:reminders:)(a1, v6);
  }
  v23[0] = 0;
  id v3 = objc_msgSend(a1, sel_fetchRemindersAndSubtasksWithError_, v23);
  id v4 = v23[0];
  if (!v3)
  {
    id v8 = v23[0];
    uint64_t v9 = (void *)sub_1B996A390();

    swift_willThrow();
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1B996D300();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E9EFDB98);
    id v11 = v9;
    id v12 = v9;
    id v13 = a1;
    uint64_t v14 = sub_1B996D2F0();
    os_log_type_t v15 = sub_1B996F640();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      unint64_t v22 = (void *)swift_slowAlloc();
      v23[0] = v22;
      *(_DWORD *)uint64_t v16 = 138412546;
      id v17 = objc_msgSend(v13, sel_objectID);
      sub_1B99700D0();
      *uint64_t v21 = v17;

      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v18 = sub_1B9970C80();
      sub_1B90D2A1C(v18, v19, (uint64_t *)v23);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, v14, v15, "Error fetching reminders for list {listID: %@, error: %s", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v21, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v22, -1, -1);
      MEMORY[0x1BA9DB030](v16, -1, -1);
    }
    else
    {
    }
    goto LABEL_10;
  }
  uint64_t v5 = v3;
  sub_1B90BFD68(0, (unint64_t *)&unk_1EB9B4A80);
  unint64_t v6 = sub_1B996EE50();
  id v7 = v4;

  return INTaskList.init(list:reminders:)(a1, v6);
}

uint64_t INTaskList.init(list:reminders:)(void *a1, unint64_t a2)
{
  uint64_t v5 = sub_1B996A770();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
    uint64_t v9 = sub_1B9970930();
    uint64_t v40 = v2;
    id v41 = v8;
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v40 = v2;
  id v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1B99705D0();
  if (v9 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v39 = a1;
  sub_1B90BFD68(0, &qword_1EB9B4BA0);
  uint64_t v11 = 0;
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x1BA9D9380](v11, a2);
    }
    else {
      id v12 = *(id *)(a2 + 8 * v11 + 32);
    }
    ++v11;
    INTask.init(reminder:)(v12);
    sub_1B99705A0();
    sub_1B99705E0();
    sub_1B99705F0();
    sub_1B99705B0();
  }
  while (v9 != v11);
  swift_bridgeObjectRelease();
  a1 = v39;
LABEL_12:
  id v13 = objc_msgSend(a1, sel_displayName);
  uint64_t v14 = sub_1B996E9F0();
  uint64_t v16 = v15;

  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  if (v14 == sub_1B996A200() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      id v24 = objc_msgSend(a1, sel_displayName);
      sub_1B996E9F0();

      id v25 = objc_allocWithZone(MEMORY[0x1E4F30750]);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      unint64_t v22 = (void *)sub_1B996E9B0();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v25, sel_initWithSpokenPhrase_, v22);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  id v19 = objc_msgSend(a1, sel_displayName);
  sub_1B996E9F0();

  id v20 = objc_allocWithZone(MEMORY[0x1E4F30750]);
  uint64_t v21 = (void *)sub_1B996E9B0();
  unint64_t v22 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithVocabularyIdentifier_spokenPhrase_pronunciationHint_, v21, v22, 0);

LABEL_20:
  sub_1B90BFD68(0, &qword_1EB9B4BA0);
  char v26 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(a1, sel_parentList);
  if (v27)
  {
    int64_t v28 = v27;
    id v29 = objc_msgSend(v27, sel_displayName);

    sub_1B996E9F0();
    id v30 = objc_allocWithZone(MEMORY[0x1E4F30750]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v31 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v30, sel_initWithSpokenPhrase_, v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v32 = 0;
  }
  id v33 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v34 = objc_msgSend(a1, sel_objectID);
  id v35 = objc_msgSend(v34, sel_uuid);

  uint64_t v36 = v41;
  sub_1B996A740();

  sub_1B996A710();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v36, v5);
  uint64_t v37 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v38 = objc_msgSend(v33, sel_initWithTitle_tasks_groupName_createdDateComponents_modifiedDateComponents_identifier_, v23, v26, v32, 0, 0, v37);

  return (uint64_t)v38;
}

id INTask.init(reminder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B996A770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v97 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B996AAD0();
  id v8 = *(void **)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1B996A6F0();
  uint64_t v102 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  long long v94 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1B996A120();
  uint64_t v93 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  long long v92 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B91E8D38();
  uint64_t v14 = v13;
  sub_1B91E99C8();
  uint64_t v16 = v15;
  id v17 = objc_msgSend(a1, sel_titleAsString);
  uint64_t v73 = v2;
  uint64_t v95 = v5;
  uint64_t v96 = v4;
  long long v72 = v14;
  uint64_t v71 = v16;
  uint64_t v100 = v7;
  long long v103 = v8;
  if (v17)
  {
    char v18 = v17;
    sub_1B996E9F0();
  }
  id v19 = objc_allocWithZone(MEMORY[0x1E4F30750]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v20 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(v19, sel_initWithSpokenPhrase_, v20);
  swift_bridgeObjectRelease();

  unsigned int v69 = objc_msgSend(a1, sel_isCompleted);
  id v21 = objc_msgSend(a1, sel_creationDate);
  unint64_t v22 = v94;
  sub_1B996A6B0();

  _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
  uint64_t v23 = sub_1B996AAB0();
  uint64_t v24 = *(void *)(v23 - 8);
  id v25 = v10;
  uint64_t v26 = v24;
  id v101 = a1;
  uint64_t v27 = *(void *)(v24 + 72);
  uint64_t v28 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v29 = (v28 + 32) & ~v28;
  uint64_t v88 = v29;
  uint64_t v89 = v28 | 7;
  uint64_t v90 = v29 + 6 * v27;
  uint64_t v30 = swift_allocObject();
  long long v87 = xmmword_1B997EED0;
  *(_OWORD *)(v30 + 16) = xmmword_1B997EED0;
  unsigned int v86 = *MEMORY[0x1E4F27C20];
  uint64_t v31 = *(void (**)(uint64_t))(v26 + 104);
  v31(v30 + v29);
  unsigned int v85 = *MEMORY[0x1E4F27C30];
  v31(v30 + v29 + v27);
  uint64_t v80 = 2 * v27;
  unsigned int v84 = *MEMORY[0x1E4F27BF0];
  v31(v30 + v29 + 2 * v27);
  uint64_t v83 = 3 * v27;
  unsigned int v82 = *MEMORY[0x1E4F27C10];
  v31(v30 + v29 + 3 * v27);
  uint64_t v77 = 4 * v27;
  unsigned int v81 = *MEMORY[0x1E4F27C48];
  v31(v30 + v29 + 4 * v27);
  uint64_t v79 = 5 * v27;
  unsigned int v78 = *MEMORY[0x1E4F27C50];
  v31(v30 + v29 + 5 * v27);
  sub_1B912DF60(v30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v32 = v92;
  sub_1B996A980();
  swift_bridgeObjectRelease();
  id v33 = (void (*)(char *, uint64_t))v103[1];
  ++v103;
  uint64_t v76 = v33;
  uint64_t v74 = v25;
  v33(v25, v100);
  id v34 = *(void (**)(char *, uint64_t))(v102 + 8);
  v102 += 8;
  uint64_t v75 = v34;
  v34(v22, v99);
  uint64_t v68 = sub_1B9969F80();
  uint64_t v93 = *(void *)(v93 + 8);
  ((void (*)(char *, uint64_t))v93)(v32, v98);
  id v35 = objc_msgSend(v101, sel_lastModifiedDate);
  sub_1B996A6B0();

  _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v87;
  uint64_t v37 = v36 + v88;
  ((void (*)(uint64_t, void, uint64_t))v31)(v36 + v88, v86, v23);
  uint64_t v38 = v37 + v27;
  id v39 = v101;
  ((void (*)(uint64_t, void, uint64_t))v31)(v38, v85, v23);
  ((void (*)(uint64_t, void, uint64_t))v31)(v37 + v80, v84, v23);
  ((void (*)(uint64_t, void, uint64_t))v31)(v37 + v83, v82, v23);
  ((void (*)(uint64_t, void, uint64_t))v31)(v37 + v77, v81, v23);
  ((void (*)(uint64_t, void, uint64_t))v31)(v37 + v79, v78, v23);
  sub_1B912DF60(v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v40 = v74;
  sub_1B996A980();
  swift_bridgeObjectRelease();
  v76(v40, v100);
  v75(v22, v99);
  uint64_t v41 = sub_1B9969F80();
  ((void (*)(char *, uint64_t))v93)(v32, v98);
  id v42 = objc_msgSend(v39, sel_objectID);
  id v43 = objc_msgSend(v42, sel_uuid);

  int v44 = v97;
  sub_1B996A740();

  sub_1B996A710();
  uint64_t v45 = v96;
  int v46 = *(void (**)(char *, uint64_t))(v95 + 8);
  v46(v44, v96);
  uint64_t v47 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v39, sel_flaggedContext);
  long long v103 = (void *)v41;
  if (v48 && (uint64_t v49 = v48, v50 = objc_msgSend(v48, sel_flagged), v49, (uint64_t)v50 > 0)) {
    uint64_t v51 = 2;
  }
  else {
    uint64_t v51 = 1;
  }
  id v52 = objc_msgSend(v39, sel_parentReminder);
  if (v52)
  {
    id v53 = v52;
    id v54 = objc_msgSend(v52, sel_objectID);

    if (v54)
    {
      id v55 = objc_msgSend(v54, sel_uuid);

      long long v56 = v97;
      sub_1B996A740();

      sub_1B996A710();
      v46(v56, v45);
      id v54 = (id)sub_1B996E9B0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v54 = 0;
  }
  uint64_t v57 = v72;
  uint64_t v58 = v71;
  long long v59 = v70;
  long long v60 = (void *)v68;
  if (v69) {
    uint64_t v61 = 2;
  }
  else {
    uint64_t v61 = 1;
  }
  id v62 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v66 = v51;
  long long v63 = v103;
  id v64 = objc_msgSend(v62, sel_initWithTitle_status_taskType_spatialEventTrigger_temporalEventTrigger_createdDateComponents_modifiedDateComponents_identifier_priority_contactEventTrigger_taskReference_parentIdentifier_, v59, v61, 2, v57, v58, v60, v103, v47, v66, 0, 0, v54);

  return v64;
}

uint64_t static INTaskList.isDefaultListTitle(title:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  if (sub_1B996A200() == a1 && v4 == a2) {
    char v6 = 1;
  }
  else {
    char v6 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id String.speakableString.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F30750]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v1 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSpokenPhrase_, v1);

  return v2;
}

uint64_t INTaskList.init(smartList:reminders:)(void *a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    id v8 = a1;
    id v9 = objc_msgSend(v8, sel_name);
    sub_1B996E9F0();

    id v10 = objc_allocWithZone(MEMORY[0x1E4F30750]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v11 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithSpokenPhrase_, v11);
    swift_bridgeObjectRelease();

    _sSo10INTaskListC15RemindersUICoreE16encodeIdentifier3forSSSo08REMSmartB0C_tFZ_0(v8);
    id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1B90BFD68(0, &qword_1EB9B4BA0);
    uint64_t v14 = (void *)sub_1B996EE40();
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v13, sel_initWithTitle_tasks_groupName_createdDateComponents_modifiedDateComponents_identifier_, v12, v14, 0, 0, 0, v15);

    return (uint64_t)v16;
  }
  uint64_t v4 = sub_1B9970930();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t result = sub_1B99705D0();
  if ((v4 & 0x8000000000000000) == 0)
  {
    sub_1B90BFD68(0, &qword_1EB9B4BA0);
    uint64_t v6 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1BA9D9380](v6, a2);
      }
      else {
        id v7 = *(id *)(a2 + 8 * v6 + 32);
      }
      ++v6;
      INTask.init(reminder:)(v7);
      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    while (v4 != v6);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t INTaskList.isTitleDefaultListTitle.getter()
{
  id v1 = objc_msgSend(v0, sel_title);
  id v2 = objc_msgSend(v1, sel_spokenPhrase);

  uint64_t v3 = sub_1B996E9F0();
  uint64_t v5 = v4;

  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  if (v3 == sub_1B996A200() && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void *INTaskList.customSmartListScheme.unsafeMutableAddressor()
{
  return &static INTaskList.customSmartListScheme;
}

uint64_t static INTaskList.customSmartListScheme.getter()
{
  return 7107427;
}

Swift::tuple_isSmartListID_Bool_decodedIdentifier_String_optional __swiftcall INTaskList.decodeIdentifier()()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_1B996E9F0();
    uint64_t v5 = v4;

    id v6 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v7 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithString_, v7);

    if (v8)
    {
      id v9 = objc_msgSend(v8, sel_scheme);
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = sub_1B996E9F0();
        uint64_t v13 = v12;

        if (v11 == 7107427 && v13 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          char v15 = 1;
        }
        else
        {
          char v15 = sub_1B9970BB0();
          swift_bridgeObjectRelease();
        }
        id v16 = objc_msgSend(v8, sel_host);
        if (v16)
        {
          id v17 = v16;
          swift_bridgeObjectRelease();
          uint64_t v3 = sub_1B996E9F0();
          uint64_t v5 = v18;
        }
      }
      else
      {

        char v15 = 0;
      }
    }
    else
    {
      char v15 = 0;
    }
    LOBYTE(v1) = v15 & 1;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v19 = v3;
  id v20 = v5;
  result.value.decodedIdentifier._object = v20;
  result.value.decodedIdentifier._countAndFlagsBits = v19;
  result.value.isSmartListID = (char)v1;
  return result;
}

void sub_1B91E8D38()
{
  id v1 = v0;
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(char ***)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v40 - v7;
  id v9 = &selRef_setShowingLargeAttachments_;
  id v10 = objc_msgSend(v1, sel_alarms);
  if (!v10)
  {
LABEL_20:
    id v23 = objc_msgSend(v1, v9[312], v40);
    if (!v23) {
      return;
    }
    uint64_t v24 = v23;
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC8);
    unint64_t v25 = sub_1B996EE50();

    if (v25 >> 62)
    {
LABEL_37:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v26 = sub_1B9970930();
      if (v26)
      {
LABEL_23:
        id v42 = v8;
        id v43 = v3;
        id v8 = (char *)(v25 & 0xC000000000000001);
        uint64_t v27 = 4;
        uint64_t v3 = &selRef_setShowingLargeAttachments_;
        while (1)
        {
          if (v8) {
            id v28 = (id)MEMORY[0x1BA9D9380](v27 - 4, v25);
          }
          else {
            id v28 = *(id *)(v25 + 8 * v27);
          }
          uint64_t v29 = v28;
          uint64_t v30 = v27 - 3;
          if (__OFADD__(v27 - 4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          id v31 = objc_msgSend(v28, sel_trigger);
          self;
          if (swift_dynamicCastObjCClass()) {
            break;
          }

          ++v27;
          if (v30 == v26) {
            goto LABEL_30;
          }
        }
        swift_bridgeObjectRelease_n();

        id v32 = objc_msgSend(v29, sel_trigger);
        self;
        id v33 = (void *)swift_dynamicCastObjCClass();
        if (v33)
        {
          id v34 = objc_msgSend(v33, sel_event);
          if ((unint64_t)v34 >= 3) {
            goto LABEL_42;
          }
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30748]), sel_initWithMobileSpace_event_, 1, v34);
        }
        else
        {
        }
        return;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v26) {
        goto LABEL_23;
      }
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v11 = v10;
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC8);
  unint64_t v12 = sub_1B996EE50();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
LABEL_18:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v13 = sub_1B9970930();
  if (!v13)
  {
LABEL_19:
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
LABEL_4:
  uint64_t v40 = v6;
  uint64_t v41 = v2;
  id v42 = v8;
  id v43 = v3;
  id v8 = (char *)(v12 & 0xC000000000000001);
  uint64_t v2 = 4;
  uint64_t v3 = &selRef_setShowingLargeAttachments_;
  while (1)
  {
    id v9 = (char **)(v2 - 4);
    if (v8) {
      id v14 = (id)MEMORY[0x1BA9D9380](v2 - 4, v12);
    }
    else {
      id v14 = *(id *)(v12 + 8 * v2);
    }
    char v15 = v14;
    id v6 = (char *)(v2 - 3);
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v16 = objc_msgSend(v14, sel_trigger);
    self;
    if (swift_dynamicCastObjCClass()) {
      break;
    }

    ++v2;
    if (v6 == (char *)v13)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v41;
LABEL_16:
      id v8 = v42;
      uint64_t v3 = v43;
      id v9 = &selRef_setShowingLargeAttachments_;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();

  id v17 = objc_msgSend(v15, sel_trigger);
  self;
  char v18 = (void *)swift_dynamicCastObjCClass();
  uint64_t v2 = v41;
  if (!v18)
  {

    goto LABEL_16;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_structuredLocation);
  id v21 = (void *)sub_1B996FAA0();

  id v22 = objc_msgSend(v19, sel_proximity);
  if ((unint64_t)v22 >= 3)
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v35 = v41;
    uint64_t v36 = __swift_project_value_buffer(v41, (uint64_t)qword_1E9EFDB98);
    ((void (*)(char *, uint64_t, uint64_t))v43[2])(v40, v36, v35);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v37);
    sub_1B984DFDC((uint64_t)"unknown event", 13, 2);
    __break(1u);
LABEL_42:
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v38 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9EFDB98);
    ((void (*)(char *, uint64_t, uint64_t))v43[2])(v42, v38, v2);
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v39);
    sub_1B984DFDC((uint64_t)"unknown event", 13, 2);
    __break(1u);
  }
  else
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30748]), sel_initWithPlacemark_event_, v21, v22);
  }
}

INSpatialEventTrigger_optional __swiftcall TTRReminderProtocol.spatialEventTrigger()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1B996D300();
  unint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char **)((char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v43 - v10;
  unint64_t v12 = (void *)(v2 + 80);
  uint64_t v13 = *(uint64_t (**)(char **, unint64_t, __n128))(v2 + 80);
  unint64_t v14 = v13(v3, v2, v9);
  if (v14)
  {
    unint64_t v15 = v14;
    uint64_t v49 = v13;
    if (v14 >> 62)
    {
LABEL_18:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v16 = sub_1B9970930();
      if (v16)
      {
LABEL_4:
        v43[1] = v12;
        int v44 = v3;
        unint64_t v45 = v2;
        uint64_t v46 = v4;
        v43[0] = v11;
        uint64_t v47 = v7;
        unint64_t v48 = v5;
        uint64_t v7 = (char **)(v15 & 0xC000000000000001);
        unint64_t v5 = 4;
        uint64_t v3 = &selRef_setShowingLargeAttachments_;
        uint64_t v11 = (char *)0x1E4F94000;
        while (1)
        {
          uint64_t v4 = v5 - 4;
          if (v7) {
            id v17 = (id)MEMORY[0x1BA9D9380](v5 - 4, v15);
          }
          else {
            id v17 = *(id *)(v15 + 8 * v5);
          }
          unint64_t v12 = v17;
          unint64_t v2 = v5 - 3;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_18;
          }
          id v18 = objc_msgSend(v17, sel_trigger);
          self;
          if (swift_dynamicCastObjCClass()) {
            break;
          }

          ++v5;
          if (v2 == v16)
          {
            swift_bridgeObjectRelease_n();
LABEL_16:
            uint64_t v4 = v46;
            uint64_t v7 = v47;
            unint64_t v5 = v48;
            uint64_t v3 = v44;
            unint64_t v2 = v45;
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease_n();

        id v19 = objc_msgSend(v12, sel_trigger);
        self;
        id v20 = (void *)swift_dynamicCastObjCClass();
        if (!v20)
        {

          goto LABEL_16;
        }
        id v21 = v20;
        id v22 = objc_msgSend(v20, sel_structuredLocation);
        id v23 = (void *)sub_1B996FAA0();

        id v24 = objc_msgSend(v21, sel_proximity);
        if ((unint64_t)v24 < 3)
        {
          unint64_t v25 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30748]), sel_initWithPlacemark_event_, v23, v24);

          goto LABEL_33;
        }
        if (qword_1E9EFA2C8 != -1) {
          swift_once();
        }
        uint64_t v39 = v46;
        uint64_t v40 = __swift_project_value_buffer(v46, (uint64_t)qword_1E9EFDB98);
        (*(void (**)(void, uint64_t, uint64_t))(v48 + 16))(v43[0], v40, v39);
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v16) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_20:
    uint64_t v13 = v49;
  }
  unint64_t v27 = ((uint64_t (*)(char **, unint64_t))v13)(v3, v2);
  if (v27)
  {
    unint64_t v28 = v27;
    if (v27 >> 62)
    {
LABEL_39:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v29 = sub_1B9970930();
      if (v29)
      {
LABEL_24:
        uint64_t v47 = v7;
        unint64_t v48 = v5;
        uint64_t v30 = 4;
        uint64_t v7 = &selRef_setShowingLargeAttachments_;
        unint64_t v5 = 0x1E4F94000uLL;
        while (1)
        {
          if ((v28 & 0xC000000000000001) != 0) {
            id v31 = (id)MEMORY[0x1BA9D9380](v30 - 4, v28);
          }
          else {
            id v31 = *(id *)(v28 + 8 * v30);
          }
          id v32 = v31;
          uint64_t v33 = v30 - 3;
          if (__OFADD__(v30 - 4, 1))
          {
            __break(1u);
            goto LABEL_39;
          }
          id v34 = objc_msgSend(v31, sel_trigger);
          self;
          if (swift_dynamicCastObjCClass()) {
            break;
          }

          ++v30;
          if (v33 == v29) {
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease_n();

        id v36 = objc_msgSend(v32, sel_trigger);
        self;
        uint64_t v37 = (void *)swift_dynamicCastObjCClass();
        if (!v37)
        {

          goto LABEL_32;
        }
        id v38 = objc_msgSend(v37, sel_event);
        if ((unint64_t)v38 < 3)
        {
          unint64_t v25 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30748]), sel_initWithMobileSpace_event_, 1, v38);

          goto LABEL_33;
        }
        if (qword_1E9EFA2C8 != -1) {
          swift_once();
        }
        uint64_t v41 = __swift_project_value_buffer(v4, (uint64_t)qword_1E9EFDB98);
        (*(void (**)(char **, uint64_t, uint64_t))(v48 + 16))(v47, v41, v4);
LABEL_47:
        uint64_t v42 = MEMORY[0x1E4FBC860];
        sub_1B90C4268(MEMORY[0x1E4FBC860]);
        sub_1B90C4268(v42);
        sub_1B984DFDC((uint64_t)"unknown event", 13, 2);
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v29) {
        goto LABEL_24;
      }
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
  }
LABEL_32:
  unint64_t v25 = 0;
LABEL_33:
  uint64_t v35 = v25;
LABEL_48:
  result.value.super.Class isa = v35;
  result.is_nil = v26;
  return result;
}

void _sSo17REMAlarmProximityV15RemindersUICoreE14inSpatialEventSo09INSpatialG0Vvg_0(unint64_t a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3)
  {
    uint64_t v7 = v4;
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFDB98);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v9);
    sub_1B984DFDC((uint64_t)"unknown event", 13, 2);
    __break(1u);
  }
}

void sub_1B91E99C8()
{
  uint64_t v1 = sub_1B996D300();
  uint64_t v98 = *(void *)(v1 - 8);
  uint64_t v99 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  id v101 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v104 = (uint64_t)&v91 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  long long v109 = (char *)&v91 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v111 = (uint64_t)&v91 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v15 - 8);
  long long v108 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1B996A6F0();
  uint64_t v17 = *(void *)(v112 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v112);
  uint64_t v102 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v91 - v20;
  uint64_t v110 = sub_1B996A120();
  uint64_t v114 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v113 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B996AC50();
  uint64_t v106 = *(void *)(v23 - 8);
  uint64_t v107 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v117 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1B996A8F0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  unint64_t v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1B996AAD0();
  uint64_t v115 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v116 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = objc_msgSend(v0, sel_recurrenceRules);
  uint64_t v105 = v11;
  if (v31)
  {
    id v32 = v3;
    uint64_t v33 = v17;
    uint64_t v34 = v29;
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4AF0);
    unint64_t v35 = sub_1B996EE50();

    if (v35 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      id v31 = (id)sub_1B9970930();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_4;
      }
    }
    else
    {
      id v31 = *(id *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31)
      {
LABEL_4:
        if ((v35 & 0xC000000000000001) != 0)
        {
          id v36 = (id)MEMORY[0x1BA9D9380](0, v35);
        }
        else
        {
          if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_30;
          }
          id v36 = *(id *)(v35 + 32);
        }
        id v31 = v36;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = v34;
    uint64_t v17 = v33;
    uint64_t v3 = v32;
  }
  id v37 = objc_msgSend(v0, sel_displayDate);
  if (!v37)
  {

    return;
  }
  uint64_t v93 = v3;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, *MEMORY[0x1E4F27B20], v25);
  uint64_t v38 = v17;
  uint64_t v39 = v116;
  sub_1B996A900();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
  uint64_t v40 = self;
  uint64_t v41 = v37;
  id v42 = objc_msgSend(v37, sel_date);
  sub_1B996A6B0();

  id v43 = (void *)sub_1B996A670();
  uint64_t v100 = v38;
  uint64_t v95 = *(void (**)(char *, uint64_t))(v38 + 8);
  v95(v21, v112);
  int v44 = (void *)sub_1B996AC20();
  id v103 = v41;
  id v45 = objc_msgSend(v41, sel_isAllDay);
  id v94 = v40;
  id v46 = objc_msgSend(v40, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v43, v44, v45);

  uint64_t v47 = v113;
  sub_1B9969FA0();

  uint64_t v48 = v115;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  id v50 = v108;
  v49(v108, v39, v29);
  uint64_t v51 = *(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56);
  v51(v50, 0, 1, v29);
  sub_1B996A100();
  if (!v31)
  {
    uint64_t v63 = v114;
    uint64_t v64 = (uint64_t)v109;
    uint64_t v53 = v110;
    long long v65 = v47;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v109, v47, v110);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    v66(v64, 0, 1, v53);
    uint64_t v67 = (uint64_t)v105;
    v66((uint64_t)v105, 1, 1, v53);
    id v68 = objc_allocWithZone(MEMORY[0x1E4F303D8]);
    id v69 = sub_1B91F644C(v64, v67, 0);
    id v54 = 0;
LABEL_25:
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F307B0]), sel_initWithDateComponentsRange_, v69);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v53);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v117, v107);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v29);
    return;
  }
  id v52 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56);
  uint64_t v53 = v110;
  uint64_t v97 = v114 + 56;
  uint64_t v96 = v52;
  v52(v111, 1, 1, v110);
  id v54 = v31;
  id v55 = objc_msgSend(v54, sel_recurrenceEnd);
  if (!v55)
  {
    uint64_t v70 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v104, 1, 1, v112);
LABEL_19:
    sub_1B90CCA68(v70, &qword_1EB9B5EB0);
    goto LABEL_23;
  }
  long long v56 = v55;
  long long v92 = v51;
  id v57 = objc_msgSend(v55, sel_endDate);

  uint64_t v91 = v49;
  if (v57)
  {
    uint64_t v58 = v101;
    sub_1B996A6B0();

    long long v59 = v58;
    uint64_t v60 = 0;
    uint64_t v61 = v112;
  }
  else
  {
    uint64_t v60 = 1;
    uint64_t v61 = v112;
    long long v59 = v101;
  }
  id v62 = v102;
  uint64_t v71 = v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v59, v60, 1, v61);
  uint64_t v72 = (uint64_t)v59;
  uint64_t v70 = v104;
  sub_1B90BFE54(v72, v104, &qword_1EB9B5EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v70, 1, v61) == 1) {
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v62, v70, v61);
  uint64_t v73 = v62;
  uint64_t v74 = (void *)sub_1B996A670();
  uint64_t v75 = (void *)sub_1B996AC20();
  id v76 = objc_msgSend(v103, sel_isAllDay);
  id v77 = objc_msgSend(v94, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v74, v75, v76);

  uint64_t v78 = (uint64_t)v109;
  sub_1B9969FA0();

  uint64_t v53 = v110;
  v96(v78, 0, 1, v110);
  uint64_t v79 = v111;
  sub_1B91F68B4(v78, v111);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v79, 1, v53))
  {
    uint64_t v80 = v108;
    v91(v108, v116, v29);
    v92(v80, 0, 1, v29);
    sub_1B996A100();
  }
  v95(v73, v61);
LABEL_23:
  uint64_t v112 = v29;
  id v81 = objc_msgSend(v54, sel_interval, v91);
  unint64_t v82 = (unint64_t)objc_msgSend(v54, sel_frequency);
  uint64_t v83 = (uint64_t)v105;
  uint64_t v63 = v114;
  if (v82 < 5)
  {
    id v84 = objc_msgSend(self, sel_rem_recurrenceRuleWithInterval_frequency_, v81, qword_1B997F030[v82]);
    uint64_t v85 = (uint64_t)v109;
    long long v65 = v113;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v109, v113, v53);
    v96(v85, 0, 1, v53);
    uint64_t v86 = v111;
    sub_1B90CCA04(v111, v83, (uint64_t *)&unk_1EB9B1A60);
    id v87 = objc_allocWithZone(MEMORY[0x1E4F303D8]);
    id v69 = sub_1B91F644C(v85, v83, v84);

    sub_1B90CCA68(v86, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v29 = v112;
    goto LABEL_25;
  }
LABEL_30:
  if (qword_1E9EFA2C8 != -1) {
    swift_once();
  }
  uint64_t v88 = v99;
  uint64_t v89 = __swift_project_value_buffer(v99, (uint64_t)qword_1E9EFDB98);
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v93, v89, v88);
  uint64_t v90 = MEMORY[0x1E4FBC860];
  sub_1B90C4268(MEMORY[0x1E4FBC860]);
  sub_1B90C4268(v90);
  sub_1B984DFDC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
  __break(1u);
}

INTemporalEventTrigger_optional __swiftcall TTRReminderProtocol.temporalEventTrigger()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1B996D300();
  uint64_t v102 = *(void *)(v4 - 8);
  uint64_t v103 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v104 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v105 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v108 = (uint64_t)&v96 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v109 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v112 = (char *)&v96 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v113 = (uint64_t)&v96 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B996A6F0();
  uint64_t v114 = *(void *)(v19 - 8);
  uint64_t v115 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v106 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v96 - v22;
  uint64_t v24 = sub_1B996A120();
  uint64_t v117 = *(void *)(v24 - 8);
  uint64_t v118 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v116 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1B996AC50();
  uint64_t v110 = *(void *)(v26 - 8);
  uint64_t v111 = v26;
  MEMORY[0x1F4188790](v26);
  long long v122 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1B996A8F0();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1B996AAD0();
  uint64_t v119 = *(void *)(v121 - 8);
  __n128 v32 = MEMORY[0x1F4188790](v121);
  char v120 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + 136))(v3, v2, v32);
  if (!v34) {
    goto LABEL_10;
  }
  unint64_t v35 = v34;
  uint64_t v36 = v34 & 0xFFFFFFFFFFFFFF8;
  if (v34 >> 62)
  {
    if (sub_1B9970930()) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v38 = 0;
    goto LABEL_11;
  }
LABEL_4:
  if ((v35 & 0xC000000000000001) != 0)
  {
    id v37 = (id)MEMORY[0x1BA9D9380](0, v35);
  }
  else
  {
    if (!*(void *)(v36 + 16))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v37 = *(id *)(v35 + 32);
  }
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v3, v2);
  if (!v39)
  {

    id v62 = 0;
LABEL_28:
    long long v92 = v62;
    goto LABEL_34;
  }
  uint64_t v40 = (void *)v39;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E4F27B20], v28);
  uint64_t v41 = v120;
  sub_1B996A900();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
  id v42 = self;
  id v43 = objc_msgSend(v40, sel_date);
  sub_1B996A6B0();

  int v44 = (void *)sub_1B996A670();
  uint64_t v100 = *(void (**)(char *, uint64_t))(v114 + 8);
  v100(v23, v115);
  id v45 = (void *)sub_1B996AC20();
  id v107 = v40;
  id v46 = objc_msgSend(v40, sel_isAllDay);
  id v99 = v42;
  id v47 = objc_msgSend(v42, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v44, v45, v46);

  uint64_t v48 = v116;
  sub_1B9969FA0();

  uint64_t v49 = v119;
  id v50 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
  uint64_t v51 = v121;
  v50(v18, v41, v121);
  id v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
  v52(v18, 0, 1, v51);
  sub_1B996A100();
  if (!v38)
  {
    uint64_t v64 = v117;
    uint64_t v63 = v118;
    uint64_t v65 = (uint64_t)v112;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v112, v48, v118);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v66(v65, 0, 1, v63);
    uint64_t v67 = v109;
    v66(v109, 1, 1, v63);
    id v68 = objc_allocWithZone(MEMORY[0x1E4F303D8]);
    id v69 = sub_1B91F644C(v65, v67, 0);
    id v53 = 0;
LABEL_27:
    id v62 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F307B0]), sel_initWithDateComponentsRange_, v69);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v63);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v122, v111);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
    goto LABEL_28;
  }
  uint64_t v98 = v50;
  id v101 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
  v101(v113, 1, 1, v118);
  id v53 = v38;
  id v54 = objc_msgSend(v53, sel_recurrenceEnd);
  if (!v54)
  {
    uint64_t v70 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v108, 1, 1, v115);
LABEL_21:
    sub_1B90CCA68(v70, &qword_1EB9B5EB0);
    uint64_t v74 = v101;
    goto LABEL_25;
  }
  id v55 = v54;
  uint64_t v97 = v52;
  id v56 = objc_msgSend(v54, sel_endDate);

  uint64_t v57 = v115;
  if (v56)
  {
    uint64_t v58 = v105;
    sub_1B996A6B0();

    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v59 = 1;
    uint64_t v58 = v105;
  }
  uint64_t v60 = v106;
  uint64_t v71 = v114;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v58, v59, 1, v57);
  uint64_t v72 = (uint64_t)v58;
  uint64_t v73 = v71;
  uint64_t v70 = v108;
  sub_1B90BFE54(v72, v108, &qword_1EB9B5EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v70, 1, v57) == 1) {
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v60, v70, v57);
  uint64_t v75 = (void *)sub_1B996A670();
  id v76 = (void *)sub_1B996AC20();
  id v77 = objc_msgSend(v107, sel_isAllDay);
  id v78 = objc_msgSend(v99, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v75, v76, v77);

  uint64_t v79 = v112;
  sub_1B9969FA0();

  uint64_t v80 = v118;
  uint64_t v74 = v101;
  v101((uint64_t)v79, 0, 1, v118);
  uint64_t v81 = (uint64_t)v79;
  uint64_t v82 = v113;
  sub_1B91F68B4(v81, v113);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v82, 1, v80))
  {
    uint64_t v83 = v121;
    v98(v18, v120, v121);
    v97(v18, 0, 1, v83);
    sub_1B996A100();
  }
  v100(v106, v57);
LABEL_25:
  id v84 = objc_msgSend(v53, sel_interval);
  unint64_t v85 = (unint64_t)objc_msgSend(v53, sel_frequency);
  uint64_t v64 = v117;
  uint64_t v63 = v118;
  if (v85 < 5)
  {
    id v86 = objc_msgSend(self, sel_rem_recurrenceRuleWithInterval_frequency_, v84, qword_1B997F030[v85]);
    uint64_t v87 = (uint64_t)v112;
    uint64_t v88 = v116;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v112, v116, v63);
    v74(v87, 0, 1, v63);
    uint64_t v48 = v88;
    uint64_t v89 = v113;
    uint64_t v90 = v109;
    sub_1B90CCA04(v113, v109, (uint64_t *)&unk_1EB9B1A60);
    id v91 = objc_allocWithZone(MEMORY[0x1E4F303D8]);
    id v69 = sub_1B91F644C(v87, v90, v86);

    sub_1B90CCA68(v89, (uint64_t *)&unk_1EB9B1A60);
    goto LABEL_27;
  }
LABEL_31:
  if (qword_1E9EFA2C8 != -1) {
    swift_once();
  }
  uint64_t v93 = v103;
  uint64_t v94 = __swift_project_value_buffer(v103, (uint64_t)qword_1E9EFDB98);
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v104, v94, v93);
  uint64_t v95 = MEMORY[0x1E4FBC860];
  sub_1B90C4268(MEMORY[0x1E4FBC860]);
  sub_1B90C4268(v95);
  sub_1B984DFDC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
  __break(1u);
LABEL_34:
  result.value.super.Class isa = v92;
  result.is_nil = v61;
  return result;
}

void REMRecurrenceFrequency.inRecurrenceFrequency.getter(unint64_t a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 5)
  {
    uint64_t v7 = v4;
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFDB98);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v9);
    sub_1B984DFDC((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
    __break(1u);
  }
}

id INTask.reminderID.getter()
{
  return sub_1B91EB40C();
}

id sub_1B91EB40C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1AA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B996A770();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v1, sel_identifier);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1B996E9F0();

    sub_1B996A700();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v12 = self;
      uint64_t v13 = (void *)sub_1B996A720();
      id v11 = objc_msgSend(v12, sel_objectIDWithUUID_, v13);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v11;
    }
    sub_1B90CCA68((uint64_t)v4, &qword_1EB9B1AA8);
  }
  return 0;
}

id INTask.remReminder(store:)(void *a1)
{
  return sub_1B91EB68C(a1, (uint64_t (*)(void))INTask.reminderID.getter, (SEL *)&selRef_fetchReminderWithObjectID_error_, "Attempting to acquire REMReminder from INTask whose reminderID is nil", "Error obtaining REMReminder from INTask {error: %s}");
}

id sub_1B91EB68C(void *a1, uint64_t (*a2)(void), SEL *a3, const char *a4, const char *a5)
{
  v29[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = a2();
  if (!v9)
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B996D300();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9EFDB98);
    uint64_t v14 = sub_1B996D2F0();
    os_log_type_t v15 = sub_1B996F640();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1B90A0000, v14, v15, a4, v16, 2u);
      MEMORY[0x1BA9DB030](v16, -1, -1);
    }

    return 0;
  }
  uint64_t v10 = (void *)v9;
  v29[0] = 0;
  id v11 = objc_msgSend(a1, *a3, v9, v29);
  id v12 = v29[0];
  if (!v11)
  {
    uint64_t v17 = v12;
    uint64_t v18 = (void *)sub_1B996A390();

    swift_willThrow();
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1B996D300();
    __swift_project_value_buffer(v19, (uint64_t)qword_1E9EFDB98);
    id v20 = v18;
    id v21 = v18;
    uint64_t v22 = sub_1B996D2F0();
    os_log_type_t v23 = sub_1B996F640();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      v29[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_getErrorValue();
      uint64_t v26 = sub_1B9970C80();
      sub_1B90D2A1C(v26, v27, (uint64_t *)v29);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, v22, v23, a5, v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v25, -1, -1);
      MEMORY[0x1BA9DB030](v24, -1, -1);
    }
    else
    {
    }
    return 0;
  }

  return v11;
}

id INTask.init(reminderChangeItem:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v127 = sub_1B996A770();
  uint64_t v125 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  long long v126 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B996AAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v112 = v5;
  uint64_t v113 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996A6F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v128 = v9;
  uint64_t v129 = v10;
  MEMORY[0x1F4188790](v9);
  long long v124 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v116 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v117 = (char *)&v110 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v110 - v18;
  MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v110 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v27 = (char *)&v110 - v26;
  sub_1B91E8D38();
  uint64_t v29 = v28;
  sub_1B91E99C8();
  id v31 = v30;
  id v130 = a1;
  id v32 = objc_msgSend(a1, sel_titleAsString);
  char v120 = v31;
  uint64_t v121 = v29;
  uint64_t v118 = v25;
  if (v32)
  {
    uint64_t v33 = v32;
    sub_1B996E9F0();
  }
  id v34 = objc_allocWithZone(MEMORY[0x1E4F30750]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  unint64_t v35 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v34, sel_initWithSpokenPhrase_, v35);
  swift_bridgeObjectRelease();

  id v37 = v130;
  unsigned int v119 = objc_msgSend(v130, sel_isCompleted);
  id v38 = objc_msgSend(v37, sel_creationDate);
  if (v38)
  {
    uint64_t v39 = v38;
    sub_1B996A6B0();

    uint64_t v40 = v129;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
    id v42 = v19;
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v40 = v129;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
    id v42 = v19;
    uint64_t v43 = 1;
  }
  uint64_t v44 = v128;
  uint64_t v114 = v41;
  v41((uint64_t)v42, v43, 1, v128);
  sub_1B90BFE54((uint64_t)v19, (uint64_t)v21, &qword_1EB9B5EB0);
  id v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  unsigned int v46 = v45(v21, 1, v44);
  id v123 = v36;
  uint64_t v115 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v45;
  if (v46)
  {
    sub_1B90CCA68((uint64_t)v21, &qword_1EB9B5EB0);
    uint64_t v47 = sub_1B996A120();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v27, 1, 1, v47);
    uint64_t v48 = 0;
    uint64_t v49 = v125;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v124, v21, v44);
    sub_1B90CCA68((uint64_t)v21, &qword_1EB9B5EB0);
    _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
    uint64_t v50 = sub_1B996AAB0();
    uint64_t v51 = *(void *)(v50 - 8);
    long long v122 = v2;
    uint64_t v52 = v51;
    uint64_t v53 = *(void *)(v51 + 72);
    unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1B997EED0;
    unint64_t v56 = v55 + v54;
    uint64_t v57 = *(void (**)(unint64_t, void, uint64_t))(v52 + 104);
    v57(v56, *MEMORY[0x1E4F27C20], v50);
    v57(v56 + v53, *MEMORY[0x1E4F27C30], v50);
    uint64_t v111 = v8;
    uint64_t v58 = v27;
    v57(v56 + 2 * v53, *MEMORY[0x1E4F27BF0], v50);
    v57(v56 + 3 * v53, *MEMORY[0x1E4F27C10], v50);
    v57(v56 + 4 * v53, *MEMORY[0x1E4F27C48], v50);
    uint64_t v59 = 5 * v53;
    uint64_t v8 = v111;
    uint64_t v60 = v112;
    v57(v56 + v59, *MEMORY[0x1E4F27C50], v50);
    sub_1B912DF60(v55);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Swift::Bool v61 = v124;
    sub_1B996A980();
    uint64_t v44 = v128;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v8, v60);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v61, v44);
    uint64_t v62 = sub_1B996A120();
    uint64_t v63 = *(void *)(v62 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v58, 0, 1, v62);
    int v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v58, 1, v62);
    uint64_t v48 = 0;
    uint64_t v49 = v125;
    if (v64 != 1)
    {
      uint64_t v48 = sub_1B9969F80();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v62);
    }
  }
  id v65 = objc_msgSend(v130, sel_lastModifiedDate);
  long long v122 = (void *)v48;
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = (uint64_t)v116;
    sub_1B996A6B0();

    uint64_t v68 = 0;
    uint64_t v69 = v129;
  }
  else
  {
    uint64_t v68 = 1;
    uint64_t v69 = v129;
    uint64_t v67 = (uint64_t)v116;
  }
  uint64_t v70 = (uint64_t)v117;
  uint64_t v71 = v115;
  v114(v67, v68, 1, v44);
  sub_1B90BFE54(v67, v70, &qword_1EB9B5EB0);
  if (v71(v70, 1, v44))
  {
    sub_1B90CCA68(v70, &qword_1EB9B5EB0);
    uint64_t v72 = sub_1B996A120();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v118, 1, 1, v72);
    uint64_t v73 = 0;
  }
  else
  {
    uint64_t v74 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v124, v70, v44);
    sub_1B90CCA68(v70, &qword_1EB9B5EB0);
    _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
    uint64_t v75 = sub_1B996AAB0();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v111 = v8;
    uint64_t v77 = v76;
    uint64_t v78 = *(void *)(v76 + 72);
    unint64_t v79 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_1B997EED0;
    unint64_t v81 = v80 + v79;
    uint64_t v82 = *(void (**)(unint64_t, void, uint64_t))(v77 + 104);
    v82(v81, *MEMORY[0x1E4F27C20], v75);
    v82(v81 + v78, *MEMORY[0x1E4F27C30], v75);
    v82(v81 + 2 * v78, *MEMORY[0x1E4F27BF0], v75);
    v82(v81 + 3 * v78, *MEMORY[0x1E4F27C10], v75);
    v82(v81 + 4 * v78, *MEMORY[0x1E4F27C48], v75);
    uint64_t v49 = v125;
    v82(v81 + 5 * v78, *MEMORY[0x1E4F27C50], v75);
    sub_1B912DF60(v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v83 = v118;
    id v84 = v111;
    sub_1B996A980();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v84, v112);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v74, v128);
    uint64_t v85 = sub_1B996A120();
    uint64_t v86 = *(void *)(v85 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    uint64_t v73 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v83, 1, v85) != 1)
    {
      uint64_t v73 = (void *)sub_1B9969F80();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v85);
    }
  }
  id v87 = v130;
  id v88 = objc_msgSend(v130, sel_objectID);
  id v89 = objc_msgSend(v88, sel_uuid);

  uint64_t v90 = v126;
  sub_1B996A740();

  sub_1B996A710();
  id v91 = *(void (**)(char *, uint64_t))(v49 + 8);
  v91(v90, v127);
  long long v92 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v93 = objc_msgSend(v87, sel_flaggedContext);
  if (v93 && (uint64_t v94 = v93, v95 = objc_msgSend(v93, sel_flagged), v94, (uint64_t)v95 > 0)) {
    uint64_t v96 = 2;
  }
  else {
    uint64_t v96 = 1;
  }
  id v97 = objc_msgSend(v130, sel_parentReminderID);
  uint64_t v98 = v97;
  if (v97)
  {
    id v99 = objc_msgSend(v97, sel_uuid);

    uint64_t v100 = v126;
    sub_1B996A740();

    sub_1B996A710();
    v91(v100, v127);
    uint64_t v98 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v102 = v120;
  id v101 = v121;
  if (v119) {
    uint64_t v103 = 2;
  }
  else {
    uint64_t v103 = 1;
  }
  id v104 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v109 = v96;
  uint64_t v106 = v122;
  uint64_t v105 = v123;
  id v107 = objc_msgSend(v104, sel_initWithTitle_status_taskType_spatialEventTrigger_temporalEventTrigger_createdDateComponents_modifiedDateComponents_identifier_priority_contactEventTrigger_taskReference_parentIdentifier_, v123, v103, 2, v101, v102, v122, v73, v92, v109, 0, 0, v98);

  return v107;
}

void *static INTask.disambiguateWithIncompleteReminders<A>(store:)(void *a1)
{
  unint64_t v2 = _sSo6INTaskC15RemindersUICoreE18allIncompleteTasks5storeSayABGSo8REMStoreC_tFZ_0(a1);
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v21 = sub_1B9970930();
    swift_bridgeObjectRelease();
    if (v21)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v4 = (uint8_t *)sub_1B9970930();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1B996D300();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E9EFDB98);
    uint64_t v23 = sub_1B996D2F0();
    os_log_type_t v24 = sub_1B996F660();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1B90A0000, v23, v24, "disambiguateWithIncompleteReminders done with 0 results {result: .needsValue}", v25, 2u);
      MEMORY[0x1BA9DB030](v25, -1, -1);
    }

    id v26 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_needsValue);
    return v26;
  }
  uint64_t v4 = *(uint8_t **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_25;
  }
LABEL_3:
  if (v4 != (uint8_t *)1)
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1B996D300();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E9EFDB98);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v13 = sub_1B996D2F0();
    os_log_type_t v14 = sub_1B996F660();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134217984;
      sub_1B99700D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B90A0000, v13, v14, "disambiguateWithIncompleteReminders done with %ld results {result: .disambiguation}", v15, 0xCu);
      MEMORY[0x1BA9DB030](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_1B90BFD68(0, &qword_1EB9B4BA0);
    uint64_t v17 = (void *)sub_1B996EE40();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(ObjCClassFromMetadata, sel_disambiguationWithTasksToDisambiguate_, v17);
LABEL_22:
    id v20 = v18;

    return v20;
  }
  if (qword_1E9EFA2C8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B996D300();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E9EFDB98);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1B996D2F0();
  os_log_type_t v7 = sub_1B996F660();
  if (!os_log_type_enabled(v6, v7))
  {

    swift_bridgeObjectRelease_n();
    unint64_t v9 = v3 & 0xC000000000000001;
    goto LABEL_16;
  }
  uint64_t v4 = (uint8_t *)swift_slowAlloc();
  INTemporalEventTrigger_optional result = (void *)swift_slowAlloc();
  uint64_t v1 = result;
  *(_DWORD *)uint64_t v4 = 138412290;
  unint64_t v9 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_34;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v3 + 32); ; id i = (id)MEMORY[0x1BA9D9380](0, v3))
    {
      id v11 = i;
      sub_1B99700D0();
      *uint64_t v1 = v11;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B90A0000, v6, v7, "disambiguateWithIncompleteReminders done with 1 result {result: .success, task: %@}", v4, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v1, -1, -1);
      MEMORY[0x1BA9DB030](v4, -1, -1);

LABEL_16:
      if (v9) {
        break;
      }
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v16 = *(id *)(v3 + 32);
        goto LABEL_19;
      }
      __break(1u);
LABEL_34:
      ;
    }
    id v16 = (id)MEMORY[0x1BA9D9380](0, v3);
LABEL_19:
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_successWithResolvedTask_, v17);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id static INTask.augmentWithSubtasks(reminders:)(unint64_t a1)
{
  uint64_t v1 = a1;
  v78[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v77 = MEMORY[0x1E4FBC870];
  if (a1 >> 62) {
    goto LABEL_86;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  while (v2)
  {
    unint64_t v3 = 0;
    unint64_t v75 = v1 & 0xC000000000000001;
    uint64_t v72 = v1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v76 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v73 = v1;
    uint64_t v71 = v1 + 32;
    uint64_t v74 = v2;
    while (1)
    {
      if (v75)
      {
        id v4 = (id)MEMORY[0x1BA9D9380](v3, v73);
      }
      else
      {
        if (v3 >= *(void *)(v72 + 16)) {
          goto LABEL_84;
        }
        id v4 = *(id *)(v71 + 8 * v3);
      }
      uint64_t v1 = (uint64_t)v4;
      BOOL v5 = __OFADD__(v3++, 1);
      if (v5) {
        break;
      }
      id v6 = objc_msgSend(v4, sel_subtaskContext);
      if (v6)
      {
        os_log_type_t v7 = v6;
        v78[0] = 0;
        id v8 = objc_msgSend(v6, sel_fetchRemindersWithError_, v78);

        id v9 = v78[0];
        if (v8)
        {
          sub_1B90BFD68(0, (unint64_t *)&unk_1EB9B4A80);
          unint64_t v10 = sub_1B996EE50();
          id v11 = v9;

          goto LABEL_14;
        }
        id v30 = v78[0];
        id v31 = (void *)sub_1B996A390();

        swift_willThrow();
        if (qword_1E9EFA2C8 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1B996D300();
        uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1E9EFDB98);
        id v34 = v31;
        id v35 = (id)v1;
        id v36 = v31;
        uint64_t v1 = v33;
        id v37 = sub_1B996D2F0();
        os_log_type_t v38 = sub_1B996F640();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = (void *)swift_slowAlloc();
          uint64_t v41 = (void *)swift_slowAlloc();
          v78[0] = v41;
          *(_DWORD *)uint64_t v39 = 138412546;
          id v42 = objc_msgSend(v35, sel_objectID);
          *(void *)(v39 + 4) = v42;
          *uint64_t v40 = v42;

          *(_WORD *)(v39 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v43 = sub_1B9970C80();
          uint64_t v1 = v44;
          *(void *)(v39 + 14) = sub_1B90D2A1C(v43, v44, (uint64_t *)v78);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1B90A0000, v37, v38, "Error fetching subtasks from reminder {reminderID: %@, error: %s}", (uint8_t *)v39, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
          swift_arrayDestroy();
          MEMORY[0x1BA9DB030](v40, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1BA9DB030](v41, -1, -1);
          MEMORY[0x1BA9DB030](v39, -1, -1);
        }
        else
        {
        }
        if (v3 == v74)
        {
LABEL_52:
          swift_bridgeObjectRelease();
          v78[0] = (id)MEMORY[0x1E4FBC860];
          uint64_t v50 = v77;
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
          uint64_t v70 = v50 + 56;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          unint64_t v51 = 0;
          while (1)
          {
            if (v75)
            {
              id v53 = (id)MEMORY[0x1BA9D9380](v51, v73);
            }
            else
            {
              if (v51 >= *(void *)(v72 + 16)) {
                goto LABEL_85;
              }
              id v53 = *(id *)(v71 + 8 * v51);
            }
            id v54 = v53;
            BOOL v5 = __OFADD__(v51++, 1);
            if (v5) {
              goto LABEL_81;
            }
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            id v55 = objc_msgSend(v54, sel_objectID);
            unint64_t v56 = v55;
            if ((v50 & 0xC000000000000001) == 0) {
              break;
            }
            id v57 = v55;
            uint64_t v1 = sub_1B99703A0();
            swift_bridgeObjectRelease();

            if ((v1 & 1) == 0) {
              goto LABEL_74;
            }
LABEL_55:

LABEL_56:
            if (v51 == v74)
            {
              swift_bridgeObjectRelease();
              id v68 = v78[0];
              goto LABEL_88;
            }
          }
          if (*(void *)(v50 + 16))
          {
            uint64_t v58 = sub_1B996FC80();
            uint64_t v59 = -1 << *(unsigned char *)(v50 + 32);
            unint64_t v60 = v58 & ~v59;
            if ((*(void *)(v70 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60))
            {
              id v61 = *(id *)(*(void *)(v50 + 48) + 8 * v60);
              uint64_t v1 = sub_1B996FC90();

              if (v1)
              {

                swift_bridgeObjectRelease();
                goto LABEL_56;
              }
              uint64_t v62 = ~v59;
              while (1)
              {
                unint64_t v60 = (v60 + 1) & v62;
                if (((*(void *)(v70 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
                  break;
                }
                id v63 = *(id *)(*(void *)(v50 + 48) + 8 * v60);
                uint64_t v1 = sub_1B996FC90();

                if (v1)
                {

                  goto LABEL_54;
                }
              }
            }
          }

          swift_bridgeObjectRelease();
LABEL_74:
          id v54 = v54;
          MEMORY[0x1BA9D7C50]();
          if (*(void *)(((unint64_t)v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v78[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1B996EEB0();
          sub_1B996EF30();
          sub_1B996EE70();
          id v64 = objc_msgSend(v54, sel_objectID);
          id v65 = v64;
          uint64_t v1 = (uint64_t)v76;
          if (!v76[2] || (unint64_t v66 = sub_1B90CFC34((uint64_t)v64), (v67 & 1) == 0))
          {

            goto LABEL_56;
          }
          unint64_t v52 = *(void *)(v76[7] + 8 * v66);
          swift_bridgeObjectRetain_n();

          uint64_t v1 = (uint64_t)v78;
          sub_1B9120C80(v52);
LABEL_54:
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
      }
      else
      {
        unint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_14:
        if (qword_1E9EFA2C8 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_1B996D300();
        __swift_project_value_buffer(v12, (uint64_t)qword_1E9EFDB98);
        id v13 = (id)v1;
        swift_bridgeObjectRetain_n();
        id v14 = v13;
        uint64_t v15 = sub_1B996D2F0();
        os_log_type_t v16 = sub_1B996F620();
        unint64_t v17 = v10 >> 62;
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v18 = swift_slowAlloc();
          uint64_t v19 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v18 = 138412546;
          id v20 = objc_msgSend(v14, sel_objectID);
          *(void *)(v18 + 4) = v20;
          *uint64_t v19 = v20;

          *(_WORD *)(v18 + 12) = 2048;
          if (v17)
          {
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            uint64_t v21 = sub_1B9970930();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v21 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          *(void *)(v18 + 14) = v21;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B90A0000, v15, v16, "Found subtasks for reminder {reminderID: %@, subtasks: %ld}", (uint8_t *)v18, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
          swift_arrayDestroy();
          MEMORY[0x1BA9DB030](v19, -1, -1);
          MEMORY[0x1BA9DB030](v18, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v22 = objc_msgSend(v14, sel_objectID);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v78[0] = v76;
        uint64_t v1 = (uint64_t)v78;
        sub_1B90D4CC8(v10, v22, isUniquelyReferenced_nonNull_native);
        uint64_t v76 = v78[0];

        swift_bridgeObjectRelease();
        if (v17)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          uint64_t v24 = sub_1B9970930();
          swift_bridgeObjectRelease();
          if (!v24)
          {
LABEL_38:
            swift_bridgeObjectRelease();
            unint64_t v29 = MEMORY[0x1E4FBC860];
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t v24 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v24) {
            goto LABEL_38;
          }
        }
        v78[0] = (id)MEMORY[0x1E4FBC860];
        sub_1B99705D0();
        if (v24 < 0) {
          goto LABEL_82;
        }
        uint64_t v25 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v26 = (id)MEMORY[0x1BA9D9380](v25, v10);
          }
          else {
            id v26 = *(id *)(v10 + 8 * v25 + 32);
          }
          unint64_t v27 = v26;
          ++v25;
          id v28 = objc_msgSend(v26, sel_objectID);

          uint64_t v1 = (uint64_t)v78;
          sub_1B99705A0();
          sub_1B99705E0();
          sub_1B99705F0();
          sub_1B99705B0();
        }
        while (v24 != v25);
        unint64_t v29 = (unint64_t)v78[0];
        swift_bridgeObjectRelease();
LABEL_39:
        if (v29 >> 62)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          uint64_t v45 = sub_1B9970930();
          swift_bridgeObjectRelease();
          if (!v45) {
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v45 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v45) {
            goto LABEL_4;
          }
        }
        if (v45 < 1) {
          goto LABEL_83;
        }
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v46 = 0;
          do
          {
            uint64_t v47 = (void *)MEMORY[0x1BA9D9380](v46++, v29);
            uint64_t v1 = (uint64_t)&v77;
            sub_1B91A5748(v78, v47);
          }
          while (v45 != v46);
        }
        else
        {
          uint64_t v48 = 0;
          do
          {
            uint64_t v49 = *(void **)(v29 + 8 * v48++ + 32);
            uint64_t v1 = (uint64_t)&v77;
            sub_1B91A5748(v78, v49);
          }
          while (v45 != v48);
        }
LABEL_4:

        swift_bridgeObjectRelease();
        if (v3 == v74) {
          goto LABEL_52;
        }
      }
    }
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v2 = sub_1B9970930();
  }
  swift_bridgeObjectRelease();
  id v68 = (id)MEMORY[0x1E4FBC860];
LABEL_88:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t INPerson.flattenedPhones.getter()
{
  return sub_1B91ED6C0((id)2, 0);
}

uint64_t sub_1B91ED6C0(id a1, uint64_t a2)
{
  unint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDBF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = objc_msgSend(v3, sel_personHandle);
  sub_1B996EE70();
  uint64_t v6 = inited;
  id v48 = v3;
  id v7 = objc_msgSend(v3, sel_aliases);
  unint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    id v9 = v7;
    sub_1B90BFD68(0, &qword_1E9F03440);
    unint64_t v10 = sub_1B996EE50();
  }
  else
  {
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = sub_1B95E65C8(v10);
  swift_bridgeObjectRelease();
  sub_1B9120C98(v11);
  uint64_t v12 = v6;
  uint64_t v13 = *(void *)(v6 + 16);
  if (v13)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = *(void **)(v12 + 8 * i + 32);
      if (v15)
      {
        id v16 = v15;
        MEMORY[0x1BA9D7C50]();
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B996EEB0();
        }
        sub_1B996EF30();
        sub_1B996EE70();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v17 = v8;
  }
  else
  {
    unint64_t v17 = v8;
  }
  swift_bridgeObjectRelease();
  unint64_t v50 = v8;
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_15;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    unint64_t v22 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_56;
    }
    goto LABEL_28;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v18 = sub_1B9970930();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_27;
  }
LABEL_15:
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v19 = 0;
  unint64_t v8 = (unint64_t)&selRef_setShowingLargeAttachments_;
  do
  {
    if ((v17 & 0xC000000000000001) != 0) {
      id v20 = (id)MEMORY[0x1BA9D9380](v19, v17);
    }
    else {
      id v20 = *(id *)(v17 + 8 * v19 + 32);
    }
    uint64_t v21 = v20;
    if (objc_msgSend(v20, sel_type) == a1)
    {
      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    else
    {
    }
    ++v19;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
  unint64_t v22 = v50;
  if ((v50 & 0x8000000000000000) != 0) {
    goto LABEL_56;
  }
LABEL_28:
  if ((v22 & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    swift_retain();
    goto LABEL_30;
  }
LABEL_56:
  swift_retain();
  uint64_t v23 = sub_1B9970930();
LABEL_30:
  uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  if (!v23) {
    goto LABEL_44;
  }
  if (v23 < 1)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  for (uint64_t j = 0; j != v23; ++j)
  {
    if ((v22 & 0xC000000000000001) != 0) {
      id v26 = (id)MEMORY[0x1BA9D9380](j, v22);
    }
    else {
      id v26 = *(id *)(v22 + 8 * j + 32);
    }
    unint64_t v27 = v26;
    id v28 = objc_msgSend(v26, sel_value);
    if (v28)
    {
      unint64_t v29 = v28;
      id v30 = a1;
      uint64_t v31 = sub_1B996E9F0();
      uint64_t v33 = v32;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_1B91885B4(0, v24[2] + 1, 1, v24);
      }
      unint64_t v35 = v24[2];
      unint64_t v34 = v24[3];
      if (v35 >= v34 >> 1) {
        uint64_t v24 = sub_1B91885B4((void *)(v34 > 1), v35 + 1, 1, v24);
      }
      v24[2] = v35 + 1;
      id v36 = &v24[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
      a1 = v30;
    }
    else
    {
    }
  }
LABEL_44:
  swift_release_n();
  unint64_t v50 = (unint64_t)v24;
  id v37 = objc_msgSend(v48, sel_alternatives);
  if (!v37) {
    return v50;
  }
  os_log_type_t v38 = v37;
  sub_1B90BFD68(0, &qword_1E9EFDBB0);
  unint64_t v8 = sub_1B996EE50();

  uint64_t v39 = a2;
  if (a2 >= 1)
  {
    swift_bridgeObjectRelease();
    return v50;
  }
  uint64_t v49 = MEMORY[0x1E4FBC860];
  if (!(v8 >> 62))
  {
    uint64_t v40 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v40) {
      goto LABEL_49;
    }
LABEL_60:
    swift_bridgeObjectRelease_n();
    uint64_t v46 = MEMORY[0x1E4FBC860];
LABEL_61:
    sub_1B9120848(v46);
    return v50;
  }
LABEL_59:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v39 = a2;
  uint64_t result = sub_1B9970930();
  uint64_t v40 = result;
  if (!result) {
    goto LABEL_60;
  }
LABEL_49:
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x1BA9D9380](v42, v8);
      }
      else {
        id v43 = *(id *)(v8 + 8 * v42 + 32);
      }
      unint64_t v44 = v43;
      ++v42;
      uint64_t v45 = sub_1B91ED6C0(a1, v39 + 1);

      sub_1B9120848(v45);
    }
    while (v40 != v42);
    swift_bridgeObjectRelease_n();
    uint64_t v46 = v49;
    goto LABEL_61;
  }
  __break(1u);
  return result;
}

uint64_t INPerson.flattenedEmails.getter()
{
  return sub_1B91ED6C0((id)1, 0);
}

uint64_t INPerson.contactRepresentation(contactStore:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_contactIdentifier);
  if (v3)
  {
    id v4 = v3;
    sub_1B996E9F0();

    sub_1B90BFD68(0, &qword_1E9F03B90);
    id v5 = a1;
    return sub_1B996FB70();
  }
  else
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B996D300();
    __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFDB98);
    id v8 = v1;
    id v9 = sub_1B996D2F0();
    os_log_type_t v10 = sub_1B996F640();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      id v13 = v8;
      sub_1B99700D0();
      *uint64_t v12 = v8;

      _os_log_impl(&dword_1B90A0000, v9, v10, "Unable to get contactRepresentation from INPerson because contactIdentifier is nil {self: %@}", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v12, -1, -1);
      MEMORY[0x1BA9DB030](v11, -1, -1);
    }
    else
    {
    }
    return 0;
  }
}

id static INPerson.skeletonPerson(email:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F305B8]);
  uint64_t v1 = (void *)sub_1B996E9B0();
  id v2 = objc_msgSend(v0, sel_initWithValue_type_, v1, 0);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F305B0]), sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, v2, 0, 0, 0, 0, 0);
  id v4 = objc_allocWithZone(MEMORY[0x1E4F305B8]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v5 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithValue_type_, v5, 1);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F305B0]), sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, v6, 0, 0, 0, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B997C200;
  *(void *)(v8 + 32) = v7;
  sub_1B996EE70();
  sub_1B90BFD68(0, &qword_1E9EFDBB0);
  id v9 = v7;
  os_log_type_t v10 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAlternatives_, v10);

  return v3;
}

id REMAlarmLocationTrigger.init(spatialEventTrigger:)(void *a1)
{
  if (objc_msgSend(a1, sel_mobileSpace))
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1B996D300();
    __swift_project_value_buffer(v2, (uint64_t)qword_1E9EFDB98);
    id v3 = a1;
    id v4 = sub_1B996D2F0();
    os_log_type_t v5 = sub_1B996F630();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v6 = 134217984;
      id v52 = objc_msgSend(v3, sel_mobileSpace);
      sub_1B99700D0();

      _os_log_impl(&dword_1B90A0000, v4, v5, "spatialEventTrigger.mobileSpace is set, which means this is not really a locationTrigger. {mobileSpace: %ld}", v6, 0xCu);
      MEMORY[0x1BA9DB030](v6, -1, -1);

LABEL_22:
      return 0;
    }

    goto LABEL_21;
  }
  id v7 = objc_msgSend(a1, sel_placemark);
  id v8 = objc_msgSend(v7, sel_region);
  if (!v8)
  {
LABEL_16:
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1B996D300();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E9EFDB98);
    id v3 = a1;
    uint64_t v21 = sub_1B996D2F0();
    os_log_type_t v22 = sub_1B996F640();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      id v24 = (id)swift_slowAlloc();
      id v52 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      id v25 = objc_msgSend(v3, sel_placemark);
      id v26 = objc_msgSend(v25, sel_region);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDBB8);
      uint64_t v27 = sub_1B9970030();
      unint64_t v29 = v28;

      sub_1B90D2A1C(v27, v29, (uint64_t *)&v52);
      sub_1B99700D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B90A0000, v21, v22, "Placemark region is not a CLCircularRegion, unable to create REMAlarmLocationTrigger. {region: %s}", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v24, -1, -1);
      MEMORY[0x1BA9DB030](v23, -1, -1);

      goto LABEL_22;
    }

LABEL_21:
    goto LABEL_22;
  }
  id v9 = v8;
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10)
  {

    goto LABEL_16;
  }
  id v51 = (id)v10;
  if (qword_1E9EFA2C8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1B996D300();
  __swift_project_value_buffer(v11, (uint64_t)qword_1E9EFDB98);
  uint64_t v12 = sub_1B996D2F0();
  os_log_type_t v13 = sub_1B996F620();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_1B90A0000, v12, v13, "Non-nil .spatialEventTrigger", v14, 2u);
    MEMORY[0x1BA9DB030](v14, -1, -1);
  }

  id v15 = v7;
  id v16 = sub_1B996D2F0();
  os_log_type_t v17 = sub_1B996F630();
  unint64_t v50 = v15;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    id v48 = (void *)swift_slowAlloc();
    buf = v18;
    *(_DWORD *)uint64_t v18 = 138412290;
    id v52 = v15;
    id v19 = v15;
    sub_1B99700D0();
    *id v48 = v15;

    _os_log_impl(&dword_1B90A0000, v16, v17, ".placemark = %@", buf, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9AD9C0);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v48, -1, -1);
    MEMORY[0x1BA9DB030](buf, -1, -1);
  }
  else
  {
  }
  id v32 = v9;
  uint64_t v33 = sub_1B996D2F0();
  os_log_type_t v34 = sub_1B996F630();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    id v36 = (id)swift_slowAlloc();
    id v52 = v36;
    *(_DWORD *)unint64_t v35 = 136315138;
    id v37 = objc_msgSend(v51, sel_description);
    uint64_t v38 = sub_1B996E9F0();
    unint64_t v40 = v39;

    sub_1B90D2A1C(v38, v40, (uint64_t *)&v52);
    sub_1B99700D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v33, v34, ".circularRegion = %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v36, -1, -1);
    MEMORY[0x1BA9DB030](v35, -1, -1);
  }
  else
  {
  }
  id v41 = objc_msgSend(a1, sel_event);
  id v42 = objc_msgSend(v50, sel_name);
  if (v42)
  {
    id v43 = v42;
    sub_1B996E9F0();
  }
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4B40);
  id v44 = v50;
  id v45 = v32;
  uint64_t v46 = (void *)sub_1B996FAD0();
  if (v41 == (id)1) {
    uint64_t v47 = 1;
  }
  else {
    uint64_t v47 = 2;
  }
  id v30 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStructuredLocation_proximity_, v46, v47);

  return v30;
}

void REMAlarmVehicleTrigger.init(spatialEventTrigger:)(void *a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_mobileSpace) == (id)1)
  {
    id v6 = objc_msgSend(a1, sel_event);
    if ((unint64_t)v6 >= 3)
    {
      if (qword_1E9EFA2C8 != -1) {
        swift_once();
      }
      uint64_t v11 = __swift_project_value_buffer(v2, (uint64_t)qword_1E9EFDB98);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
      uint64_t v12 = MEMORY[0x1E4FBC860];
      sub_1B90C4268(MEMORY[0x1E4FBC860]);
      sub_1B90C4268(v12);
      sub_1B984DFDC((uint64_t)"unknown event", 13, 2);
      __break(1u);
    }
    else
    {
      objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEvent_, v6);
    }
  }
  else
  {
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v2, (uint64_t)qword_1E9EFDB98);
    id v7 = a1;
    id v8 = sub_1B996D2F0();
    os_log_type_t v9 = sub_1B996F630();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134217984;
      v13[1] = objc_msgSend(v7, sel_mobileSpace);
      sub_1B99700D0();

      _os_log_impl(&dword_1B90A0000, v8, v9, "spatialEventTrigger.mobileSpace is not .car, which means this is not really a REMAlarmVehicleTrigger. {mobileSpace: %ld}", v10, 0xCu);
      MEMORY[0x1BA9DB030](v10, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t TTRRecurrenceRuleModel.init(temporalEventTrigger:timeProvider:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEE70);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_dateComponentsRange);
  sub_1B9101650(a2, (uint64_t)v15);
  TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)(v9, v15, (uint64_t)v8);

  __swift_destroy_boxed_opaque_existential_0(a2);
  uint64_t v10 = type metadata accessor for TTRRecurrenceRuleModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
  {
    sub_1B90CCA68((uint64_t)v8, &qword_1EB9AEE70);
    uint64_t v12 = 1;
  }
  else
  {
    sub_1B90F1CDC((uint64_t)v8, a3);
    uint64_t v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v12, 1, v10);
}

uint64_t TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996A6F0();
  uint64_t v99 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v98 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v96 = (char *)&v87 - v12;
  uint64_t v13 = sub_1B996A120();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v100 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v97 = (char *)&v87 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  id v101 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  os_log_type_t v22 = (char *)&v87 - v21;
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)&v87 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1B996AAD0();
  uint64_t v106 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v105 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = (int *)type metadata accessor for TTRRecurrenceRuleModel(0);
  uint64_t v107 = *((void *)v29 - 1);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v108 = a1;
  id v32 = objc_msgSend(a1, sel_recurrenceRule);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v94 = v8;
    uint64_t v34 = INRecurrenceFrequency.remRecurrenceFrequency.getter((uint64_t)objc_msgSend(v32, sel_frequency));
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = v34;
      uint64_t v90 = v9;
      uint64_t v93 = a3;
      id v95 = a2;
      id v37 = objc_msgSend(v33, sel_interval);
      id v38 = objc_msgSend(v33, sel_weeklyRecurrenceDays);
      uint64_t v39 = type metadata accessor for TTRRecurrenceEndModel(0);
      uint64_t v40 = *(void *)(v39 - 8);
      id v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56);
      uint64_t v89 = v39;
      id v88 = v41;
      uint64_t v87 = v40 + 56;
      ((void (*)(char *, uint64_t, uint64_t))v41)(v31, 1, 1);
      uint64_t v42 = v29[5];
      uint64_t v43 = v29[6];
      *(void *)&v31[v29[7]] = 0;
      uint64_t v44 = v29[8];
      *(void *)&v31[v44] = 0;
      *(void *)&v31[v29[9]] = 0;
      *(void *)&v31[v29[10]] = 0;
      *(void *)&v31[v29[11]] = 0;
      *(void *)&v31[v29[12]] = 0;
      *(void *)&v31[v29[13]] = 0;
      *(void *)&v31[v42] = v36;
      *(void *)&v31[v43] = v37;
      if (v36 == 1 && v38) {
        *(void *)&v31[v44] = sub_1B95C1A64((char)v38);
      }
      id v45 = objc_msgSend(v108, sel_endDateComponents);
      uint64_t v46 = v104;
      if (v45)
      {
        uint64_t v47 = v45;
        sub_1B9969FA0();

        uint64_t v48 = v103;
        uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
        unint64_t v50 = v22;
        uint64_t v51 = 0;
      }
      else
      {
        uint64_t v48 = v103;
        uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
        unint64_t v50 = v22;
        uint64_t v51 = 1;
      }
      long long v92 = v49;
      v49((uint64_t)v50, v51, 1, v46);
      sub_1B90BFE54((uint64_t)v22, (uint64_t)v24, (uint64_t *)&unk_1EB9B1A60);
      id v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      int v55 = v54(v24, 1, v46);
      id v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
      if (v55 == 1)
      {
        sub_1B90CCA68((uint64_t)v24, (uint64_t *)&unk_1EB9B1A60);
        uint64_t v56 = v106;
        uint64_t v57 = v102;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v27, 1, 1, v102);
      }
      else
      {
        sub_1B996A0F0();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v46);
        uint64_t v57 = v102;
        uint64_t v56 = v106;
      }
      sub_1B9101650((uint64_t)v95, (uint64_t)v109);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v27, 1, v57) == 1)
      {
        uint64_t v58 = v110;
        uint64_t v59 = v111;
        __swift_project_boxed_opaque_existential_1(v109, v110);
        unint64_t v60 = *(void (**)(uint64_t, uint64_t))(v59 + 16);
        uint64_t v61 = v59;
        uint64_t v46 = v104;
        v60(v58, v61);
        sub_1B90CCA68((uint64_t)v27, &qword_1EB9B5EB8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v105, v27, v57);
      }
      uint64_t v62 = (uint64_t)v101;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v109);
      id v63 = objc_msgSend(v108, sel_endDateComponents);
      if (v63)
      {
        id v64 = v63;
        uint64_t v65 = v48;
        uint64_t v66 = v57;
        char v67 = v100;
        sub_1B9969FA0();

        id v68 = *(void (**)(uint64_t, char *, uint64_t))(v65 + 32);
        uint64_t v69 = v67;
        uint64_t v57 = v66;
        v68(v62, v69, v46);
        v92(v62, 0, 1, v46);
        int v70 = v91(v62, 1, v46);
        uint64_t v71 = v46;
        uint64_t v72 = v93;
        if (v70 != 1)
        {
          uint64_t v73 = (uint64_t)v97;
          v68((uint64_t)v97, (char *)v62, v71);
          uint64_t v74 = v95[3];
          uint64_t v75 = v95[4];
          __swift_project_boxed_opaque_existential_1(v95, v74);
          uint64_t v76 = v103;
          uint64_t v77 = (uint64_t)v98;
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v75);
          uint64_t v62 = (uint64_t)v94;
          uint64_t v78 = v105;
          Calendar.dateMatching(_:now:)(v73, v77, (uint64_t)v94);

          uint64_t v79 = v57;
          uint64_t v80 = v99;
          uint64_t v81 = v90;
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v77, v90);
          uint64_t v82 = v73;
          uint64_t v72 = v93;
          (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v82, v104);
          (*(void (**)(char *, uint64_t))(v106 + 8))(v78, v79);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v62, 1, v81) != 1)
          {
            id v84 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
            uint64_t v85 = v96;
            v84(v96, v62, v81);
            sub_1B90CCA68((uint64_t)v31, &qword_1EB9B2BE0);
            v84(v31, (uint64_t)v85, v81);
            uint64_t v86 = v89;
            swift_storeEnumTagMultiPayload();
            v88(v31, 0, 1, v86);
            goto LABEL_26;
          }
          uint64_t v83 = &qword_1EB9B5EB0;
LABEL_25:
          sub_1B90CCA68(v62, v83);
LABEL_26:
          sub_1B90F1C78((uint64_t)v31, v72);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v107 + 56))(v72, 0, 1, v29);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
          return sub_1B91F751C((uint64_t)v31);
        }
      }
      else
      {
        v92(v62, 1, 1, v46);
        uint64_t v72 = v93;
      }

      (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v57);
      uint64_t v83 = (uint64_t *)&unk_1EB9B1A60;
      goto LABEL_25;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  id v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v107 + 56);

  return v52(a3, 1, 1, v29);
}

uint64_t INRecurrenceFrequency.remRecurrenceFrequency.getter(uint64_t a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t result = 4;
      break;
    case 3:
      uint64_t result = 0;
      break;
    case 4:
      uint64_t result = 1;
      break;
    case 5:
      uint64_t result = 2;
      break;
    case 6:
      uint64_t result = 3;
      break;
    default:
      if (qword_1E9EFA2C8 != -1) {
        swift_once();
      }
      uint64_t v7 = __swift_project_value_buffer(0, (uint64_t)qword_1E9EFDB98);
      (*(void (**)(char *, uint64_t, void))(v3 + 16))(v5, v7, 0);
      uint64_t v8 = MEMORY[0x1E4FBC860];
      sub_1B90C4268(MEMORY[0x1E4FBC860]);
      sub_1B90C4268(v8);
      sub_1B984DFDC((uint64_t)"unknown frequency", 17, 2);
      __break(1u);
      JUMPOUT(0x1B91EF738);
  }
  return result;
}

uint64_t Calendar.dateMatching(_:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v58 = a2;
  uint64_t v59 = sub_1B996A990();
  uint64_t v65 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1B996A9D0();
  uint64_t v5 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B996A960();
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  MEMORY[0x1F4188790](v8);
  int v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
  uint64_t v12 = sub_1B996AAB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B997ABA0;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x1E4F27C20], v12);
  v18(v17 + v14, *MEMORY[0x1E4F27C30], v12);
  v18(v17 + 2 * v14, *MEMORY[0x1E4F27BF0], v12);
  uint64_t v19 = sub_1B912DF60(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v64 = a1;
  uint64_t v67 = a1;
  LOBYTE(v12) = sub_1B91E6D3C((uint64_t (*)(char *))sub_1B91F7578, (char)&v66, v19);
  swift_bridgeObjectRelease();
  if (v12) {
    return sub_1B996AA20();
  }
  uint64_t v21 = v62;
  os_log_type_t v22 = *(void (**)(void))(v62 + 104);
  uint64_t v23 = v55;
  unsigned int v53 = *MEMORY[0x1E4F27B68];
  uint64_t v54 = v62 + 104;
  id v52 = (void (*)(char *, void, uint64_t))v22;
  v22(v55);
  id v24 = *(void (**)(void))(v5 + 104);
  unsigned int v50 = *MEMORY[0x1E4F27BA8];
  uint64_t v25 = v56;
  uint64_t v51 = v5 + 104;
  uint64_t v49 = (void (*)(char *, void, uint64_t))v24;
  v24(v7);
  uint64_t v26 = *MEMORY[0x1E4F27B80];
  uint64_t v27 = v65;
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v65 + 104);
  unint64_t v29 = v57;
  uint64_t v30 = v59;
  uint64_t v48 = v65 + 104;
  uint64_t v47 = v28;
  v28(v57, v26, v59);
  uint64_t v31 = v60;
  sub_1B996AA90();
  id v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v65 = v27 + 8;
  uint64_t v46 = v32;
  v32(v29, v30);
  uint64_t v33 = v7;
  id v45 = *(void (**)(char *, uint64_t))(v5 + 8);
  v45(v7, v25);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v62 = v21 + 8;
  v34(v23, v63);
  uint64_t v35 = sub_1B996A6F0();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
  {
    sub_1B90CCA68(v60, &qword_1EB9B5EB0);
    id v37 = v55;
    uint64_t v38 = v63;
    v52(v55, v53, v63);
    uint64_t v39 = v33;
    uint64_t v40 = v56;
    v49(v33, v50, v56);
    id v41 = v57;
    uint64_t v42 = (uint64_t (*)(char *, uint64_t))v34;
    uint64_t v43 = v59;
    v47(v57, *MEMORY[0x1E4F27B90], v59);
    sub_1B996AA90();
    v46(v41, v43);
    v45(v39, v40);
    return v42(v37, v38);
  }
  else
  {
    uint64_t v44 = v61;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v61, v60, v35);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v35);
  }
}

uint64_t sub_1B91EFDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v82 = a4;
  int v85 = a3;
  uint64_t v79 = a1;
  uint64_t v80 = a2;
  uint64_t v71 = a5;
  uint64_t v7 = sub_1B996AC50();
  uint64_t v83 = *(void *)(v7 - 8);
  uint64_t v84 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v81 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996A6F0();
  uint64_t v86 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B90CCA04(v6, (uint64_t)v14, &qword_1EB9B2BE0);
  uint64_t v15 = type metadata accessor for TTRRecurrenceEndModel(0);
  int v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  id v88 = 0;
  if (v16 != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v88 = objc_msgSend(self, sel_recurrenceEndWithOccurrenceCount_, *v14);
    }
    else
    {
      uint64_t v18 = v86;
      uint64_t v17 = v87;
      (*(void (**)(char *, void *, uint64_t))(v86 + 32))(v11, v14, v87);
      uint64_t v19 = (void *)sub_1B996A670();
      id v88 = objc_msgSend(self, sel_recurrenceEndWithEndDate_, v19);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
    }
  }
  uint64_t v20 = self;
  id v77 = objc_msgSend(v20, sel_newObjectID);
  id v76 = objc_msgSend(v20, sel_newObjectID);
  id v78 = v20;
  id v75 = objc_msgSend(v20, sel_newObjectID);
  uint64_t v21 = (int *)type metadata accessor for TTRRecurrenceRuleModel(0);
  uint64_t v22 = *(void *)(v6 + v21[6]);
  uint64_t v73 = *(void *)(v6 + v21[5]);
  uint64_t v74 = v22;
  uint64_t v23 = *(void *)(v6 + v21[8]);
  uint64_t v72 = *(void *)(v6 + v21[7]);
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v25 = (void *)(v23 + 40);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94BC8]), sel_initWithDayOfTheWeek_weekNumber_, *(v25 - 1), *v25);
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        v25 += 2;
        --v24;
      }
      while (v24);
      uint64_t v70 = v89;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v70 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v70 = 0;
  }
  uint64_t v26 = *(void *)(v6 + v21[9]);
  if (v26)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v28 = 0;
      do
      {
        uint64_t v29 = v28 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v26 + 8 * v28 + 32));
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        uint64_t v28 = v29;
      }
      while (v27 != v29);
      uint64_t v69 = v89;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v69 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v69 = 0;
  }
  uint64_t v30 = *(void *)(v6 + v21[12]);
  if (v30)
  {
    uint64_t v31 = *(void *)(v30 + 16);
    uint64_t v32 = MEMORY[0x1E4FBC860];
    if (v31)
    {
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v33 = 0;
      do
      {
        uint64_t v34 = v33 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v30 + 8 * v33 + 32));
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        uint64_t v33 = v34;
      }
      while (v31 != v34);
      uint64_t v32 = v89;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v32 = 0;
  }
  uint64_t v35 = *(void *)(v6 + v21[11]);
  if (v35)
  {
    uint64_t v36 = *(void *)(v35 + 16);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    if (v36)
    {
      uint64_t v68 = v32;
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v38 = 0;
      do
      {
        uint64_t v39 = v38 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v35 + 8 * v38 + 32));
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        uint64_t v38 = v39;
      }
      while (v36 != v39);
      uint64_t v37 = v89;
      swift_bridgeObjectRelease();
      uint64_t v32 = v68;
    }
  }
  else
  {
    uint64_t v37 = 0;
  }
  uint64_t v40 = *(void *)(v6 + v21[10]);
  if (v40)
  {
    uint64_t v41 = *(void *)(v40 + 16);
    uint64_t v42 = MEMORY[0x1E4FBC860];
    if (v41)
    {
      uint64_t v67 = v37;
      uint64_t v68 = v32;
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v43 = 0;
      do
      {
        uint64_t v44 = v43 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v40 + 8 * v43 + 32));
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        uint64_t v43 = v44;
      }
      while (v41 != v44);
      uint64_t v42 = v89;
      swift_bridgeObjectRelease();
      uint64_t v32 = v68;
      uint64_t v37 = v67;
    }
  }
  else
  {
    uint64_t v42 = 0;
  }
  uint64_t v45 = *(void *)(v6 + v21[13]);
  if (v45)
  {
    uint64_t v46 = *(void *)(v45 + 16);
    uint64_t v47 = MEMORY[0x1E4FBC860];
    if (v46)
    {
      uint64_t v67 = v37;
      uint64_t v89 = MEMORY[0x1E4FBC860];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B99705D0();
      uint64_t v48 = 0;
      do
      {
        uint64_t v49 = v48 + 1;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v45 + 8 * v48 + 32));
        sub_1B99705A0();
        sub_1B99705E0();
        sub_1B99705F0();
        sub_1B99705B0();
        uint64_t v48 = v49;
      }
      while (v46 != v49);
      uint64_t v47 = v89;
      swift_bridgeObjectRelease();
      uint64_t v37 = v67;
    }
  }
  else
  {
    uint64_t v47 = 0;
  }
  id v50 = objc_allocWithZone(MEMORY[0x1E4F94BD8]);
  id v51 = v88;
  id v52 = v88;
  id v53 = sub_1B95C52A8(v77, v76, v75, v73, v74, v72, v70, v69, v32, v37, v42, v47, v51);
  uint64_t v54 = (void *)sub_1B996A670();
  int v55 = (void *)sub_1B996A670();
  uint64_t v56 = v82[3];
  uint64_t v57 = v82[4];
  __swift_project_boxed_opaque_existential_1(v82, v56);
  uint64_t v58 = v81;
  (*(void (**)(uint64_t, uint64_t))(v57 + 24))(v56, v57);
  uint64_t v59 = (void *)sub_1B996AC20();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v84);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1B997C200;
  *(void *)(v60 + 32) = v53;
  uint64_t v89 = v60;
  sub_1B996EE70();
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4AF0);
  id v61 = v53;
  uint64_t v62 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  id v63 = objc_msgSend(v78, sel_nextRecurrentDueDateAfter_dueDate_timeZone_allDay_recurrenceRules_, v54, v55, v59, v85 & 1, v62);

  if (v63)
  {
    uint64_t v64 = v71;
    sub_1B996A6B0();

    uint64_t v65 = 0;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v64 = v71;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v64, v65, 1, v87);
}

uint64_t DateComponents.smartlyCorrectedValue.getter@<X0>(unsigned char *a1@<X8>)
{
  char v120 = a1;
  uint64_t v109 = sub_1B996A6F0();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v107 = &v98[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1B996AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v110 = &v98[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1B996A120();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v106 = &v98[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  long long v126 = &v98[-v10];
  uint64_t v11 = sub_1B996A8F0();
  uint64_t v129 = *(void *)(v11 - 8);
  uint64_t v130 = v11;
  MEMORY[0x1F4188790](v11);
  unsigned int v119 = &v98[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDBC0);
  uint64_t v13 = MEMORY[0x1F4188790](v128);
  uint64_t v121 = &v98[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  int v16 = &v98[-v15];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v102 = &v98[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v113 = &v98[-v21];
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v98[-v22];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDBC8);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v103 = &v98[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v115 = &v98[-v28];
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v116 = &v98[-v30];
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = &v98[-v32];
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = &v98[-v35];
  MEMORY[0x1F4188790](v34);
  uint64_t v38 = &v98[-v37];
  uint64_t v118 = v7;
  uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v127 = v6;
  uint64_t v117 = v39;
  v39(v120, v1, v6);
  uint64_t v122 = v1;
  sub_1B996A0F0();
  uint64_t v40 = v4 + 48;
  uint64_t v111 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48);
  int v41 = v111(v23, 1, v3);
  uint64_t v123 = v3;
  uint64_t v114 = v4;
  uint64_t v105 = v33;
  if (v41 == 1)
  {
    sub_1B90CCA68((uint64_t)v23, &qword_1EB9B5EB8);
    uint64_t v42 = v129;
    uint64_t v43 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v43(v38, 1, 1, v130);
  }
  else
  {
    sub_1B996A910();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v23, v3);
    uint64_t v42 = v129;
    uint64_t v43 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v43(v38, 0, 1, v130);
  }
  uint64_t v44 = *MEMORY[0x1E4F27B10];
  uint64_t v45 = v130;
  long long v124 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 104);
  uint64_t v125 = v42 + 104;
  v124(v36, v44, v130);
  uint64_t v112 = v43;
  v43(v36, 0, 1, v45);
  uint64_t v46 = (uint64_t)&v16[*(int *)(v128 + 48)];
  sub_1B90CCA04((uint64_t)v38, (uint64_t)v16, &qword_1E9EFDBC8);
  sub_1B90CCA04((uint64_t)v36, v46, &qword_1E9EFDBC8);
  uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v47((uint64_t)v16, 1, v45) == 1)
  {
    sub_1B90CCA68((uint64_t)v36, &qword_1E9EFDBC8);
    uint64_t v48 = (uint64_t)v38;
    uint64_t v49 = v130;
    sub_1B90CCA68(v48, &qword_1E9EFDBC8);
    if (v47(v46, 1, v49) == 1)
    {
      sub_1B90CCA68((uint64_t)v16, &qword_1E9EFDBC8);
      id v51 = v126;
      uint64_t v50 = v127;
      v117(v126, v122, v127);
      uint64_t v52 = v123;
LABEL_20:
      uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v118 + 8);
      v64(v51, v50);
      uint64_t v66 = v50;
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  id v101 = v38;
  uint64_t v53 = (uint64_t)v105;
  sub_1B90CCA04((uint64_t)v16, (uint64_t)v105, &qword_1E9EFDBC8);
  if (v47(v46, 1, v130) == 1)
  {
    sub_1B90CCA68((uint64_t)v36, &qword_1E9EFDBC8);
    sub_1B90CCA68((uint64_t)v101, &qword_1E9EFDBC8);
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v53, v130);
LABEL_9:
    uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v47;
    sub_1B90CCA68((uint64_t)v16, &qword_1E9EFDBC0);
    id v51 = v126;
    v117(v126, v122, v127);
    uint64_t v52 = v123;
    goto LABEL_10;
  }
  uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v47;
  uint64_t v72 = v129;
  uint64_t v73 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v129 + 32);
  uint64_t v100 = v40;
  uint64_t v74 = v119;
  uint64_t v75 = v130;
  v73(v119, v46, v130);
  sub_1B91F79F0(&qword_1E9EFDBD0, MEMORY[0x1E4F27B30]);
  int v99 = sub_1B996E990();
  id v76 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
  v76(v74, v75);
  sub_1B90CCA68((uint64_t)v36, &qword_1E9EFDBC8);
  sub_1B90CCA68((uint64_t)v101, &qword_1E9EFDBC8);
  v76((unsigned char *)v53, v75);
  sub_1B90CCA68((uint64_t)v16, &qword_1E9EFDBC8);
  id v51 = v126;
  uint64_t v50 = v127;
  v117(v126, v122, v127);
  uint64_t v52 = v123;
  if (v99) {
    goto LABEL_20;
  }
LABEL_10:
  uint64_t v54 = (uint64_t)v113;
  sub_1B996A0F0();
  if (v111((unsigned char *)v54, 1, v52) == 1)
  {
    sub_1B90CCA68(v54, &qword_1EB9B5EB8);
    uint64_t v55 = 1;
    uint64_t v56 = v121;
    uint64_t v57 = v116;
  }
  else
  {
    uint64_t v58 = v116;
    sub_1B996A910();
    uint64_t v57 = v58;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v54, v52);
    uint64_t v55 = 0;
    uint64_t v56 = v121;
  }
  uint64_t v59 = v115;
  uint64_t v60 = v130;
  id v61 = v112;
  v112(v57, v55, 1, v130);
  v124(v59, *MEMORY[0x1E4F27B18], v60);
  v61(v59, 0, 1, v60);
  uint64_t v62 = (uint64_t)&v56[*(int *)(v128 + 48)];
  sub_1B90CCA04((uint64_t)v57, (uint64_t)v56, &qword_1E9EFDBC8);
  sub_1B90CCA04((uint64_t)v59, v62, &qword_1E9EFDBC8);
  id v63 = v104;
  if (v104((uint64_t)v56, 1, v60) != 1)
  {
    uint64_t v67 = v103;
    sub_1B90CCA04((uint64_t)v56, (uint64_t)v103, &qword_1E9EFDBC8);
    int v68 = v63(v62, 1, v130);
    uint64_t v69 = v129;
    uint64_t v70 = (void (**)(unsigned char *, uint64_t))(v129 + 8);
    if (v68 != 1)
    {
      uint64_t v77 = (uint64_t)v56;
      id v78 = v119;
      uint64_t v79 = v130;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v129 + 32))(v119, v62, v130);
      sub_1B91F79F0(&qword_1E9EFDBD0, MEMORY[0x1E4F27B30]);
      char v80 = sub_1B996E990();
      uint64_t v81 = v67;
      uint64_t v82 = *(void (**)(unsigned char *, uint64_t))(v69 + 8);
      v82(v78, v79);
      sub_1B90CCA68((uint64_t)v115, &qword_1E9EFDBC8);
      sub_1B90CCA68((uint64_t)v116, &qword_1E9EFDBC8);
      uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v118 + 8);
      uint64_t v83 = v127;
      v64(v126, v127);
      v82(v81, v79);
      uint64_t result = sub_1B90CCA68(v77, &qword_1E9EFDBC8);
      if ((v80 & 1) == 0) {
        return result;
      }
      uint64_t v66 = v83;
      goto LABEL_23;
    }
    sub_1B90CCA68((uint64_t)v115, &qword_1E9EFDBC8);
    sub_1B90CCA68((uint64_t)v116, &qword_1E9EFDBC8);
    (*(void (**)(unsigned char *, uint64_t))(v118 + 8))(v126, v127);
    (*v70)(v67, v130);
    return sub_1B90CCA68((uint64_t)v121, &qword_1E9EFDBC0);
  }
  sub_1B90CCA68((uint64_t)v59, &qword_1E9EFDBC8);
  sub_1B90CCA68((uint64_t)v57, &qword_1E9EFDBC8);
  uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v118 + 8);
  uint64_t v65 = v127;
  v64(v51, v127);
  if (v63(v62, 1, v130) != 1) {
    return sub_1B90CCA68((uint64_t)v121, &qword_1E9EFDBC0);
  }
  sub_1B90CCA68((uint64_t)v121, &qword_1E9EFDBC8);
  uint64_t v66 = v65;
LABEL_23:
  uint64_t v52 = v123;
LABEL_24:
  uint64_t v84 = v119;
  uint64_t v85 = v130;
  v124(v119, *MEMORY[0x1E4F27B20], v130);
  uint64_t v86 = v110;
  sub_1B996A900();
  (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v84, v85);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
  uint64_t v87 = sub_1B996AAB0();
  uint64_t v88 = *(void *)(v87 - 8);
  unint64_t v89 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_1B997AB90;
  (*(void (**)(unint64_t, void, uint64_t))(v88 + 104))(v90 + v89, *MEMORY[0x1E4F27C20], v87);
  sub_1B912DF60(v90);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v91 = v107;
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  long long v92 = v106;
  sub_1B996A980();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v91, v109);
  uint64_t v93 = sub_1B996A010();
  LOBYTE(v87) = v94;
  v64(v92, v66);
  if (v87) {
    uint64_t v93 = 0;
  }
  uint64_t result = sub_1B996A010();
  uint64_t v95 = v114;
  if (v96) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v95 + 8))(v86, v52);
  }
  if (__OFSUB__(v93, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (result >= v93 - 1)
  {
    if (!__OFADD__(v93, 1))
    {
      if (v93 + 1 >= result)
      {
        id v97 = v102;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v114 + 16))(v102, v86, v52);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v95 + 56))(v97, 0, 1, v52);
        sub_1B996A100();
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v95 + 8))(v86, v52);
    }
LABEL_35:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v95 + 8))(v86, v52);
}

uint64_t sub_1B91F1548(void *a1, int a2)
{
  int v83 = a2;
  uint64_t v4 = sub_1B996A120();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v90 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v7 - 8);
  id v78 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v77 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v88 = (uint64_t)&v76 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EC0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1B996AC50();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1B996A6F0();
  unint64_t v89 = *(void (**)(char *, char *, uint64_t))(v91 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v91);
  uint64_t v82 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v81 = (char *)&v76 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v79 = (char *)&v76 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v84 = (char *)&v76 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v76 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v87 = (char *)&v76 - v31;
  uint64_t v32 = (void *)sub_1B9969F80();
  uint64_t v85 = v2;
  sub_1B996A110();
  char v80 = a1;
  sub_1B9101650((uint64_t)a1, (uint64_t)v96);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  uint64_t v86 = v5;
  if (v33 == 1)
  {
    uint64_t v34 = v4;
    uint64_t v35 = v97;
    uint64_t v36 = v98;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    uint64_t v37 = v35;
    uint64_t v4 = v34;
    (*(void (**)(uint64_t, uint64_t))(v36 + 24))(v37, v36);
    sub_1B90CCA68((uint64_t)v15, &qword_1EB9B5EC0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  uint64_t v38 = self;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
  uint64_t v39 = (void *)sub_1B996AC20();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  id v40 = objc_msgSend(v38, sel_rem_dateWithDateComponents_timeZone_, v32, v39);

  uint64_t v41 = v91;
  if (v40)
  {
    sub_1B996A6B0();

    uint64_t v42 = v88;
    uint64_t v43 = v89;
    uint64_t v44 = (void (*)(uint64_t, char *, uint64_t))*((void *)v89 + 4);
    v44(v88, v30, v41);
    uint64_t v45 = (char *)*((void *)v43 + 7);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v45)(v42, 0, 1, v41);
    int v46 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v43 + 6))(v42, 1, v41);
    uint64_t v47 = v90;
    if (v46 != 1)
    {
      uint64_t v90 = v45;
      uint64_t v48 = v87;
      v44((uint64_t)v87, (char *)v42, v41);
      uint64_t v49 = v80;
      uint64_t v50 = v80[3];
      uint64_t v51 = v80[4];
      __swift_project_boxed_opaque_existential_1(v80, v50);
      uint64_t v52 = v50;
      uint64_t v53 = v48;
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v51);
      sub_1B996A650();
      uint64_t v54 = (void (*)(char *, uint64_t))*((void *)v43 + 1);
      v54(v30, v41);
      sub_1B9101650((uint64_t)v49, (uint64_t)v92);
      uint64_t v55 = (void (*)(char *, char *, uint64_t))*((void *)v43 + 2);
      uint64_t v56 = v79;
      v55(v79, v53, v41);
      if (v83)
      {
        unint64_t v89 = v55;
        uint64_t v57 = (uint64_t)v56;
        uint64_t v58 = v93;
        uint64_t v88 = v94;
        uint64_t v86 = __swift_project_boxed_opaque_existential_1(v92, v93);
        uint64_t v59 = sub_1B996AAD0();
        char v60 = 1;
        uint64_t v61 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v78, 1, 1, v59);
        uint64_t v62 = (uint64_t)v77;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v90)(v77, 1, 1, v41);
        LOBYTE(v58) = TTRTimeProvider.isDateInToday(_:calendar:now:)(v57, v61, v62, v58, v88);
        sub_1B90CCA68(v62, &qword_1EB9B5EB0);
        sub_1B90CCA68(v61, &qword_1EB9B5EB8);
        v54((char *)v57, v41);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        id v63 = v81;
        uint64_t v64 = v89;
        v89(v81, v87, v41);
        uint64_t v65 = v82;
        uint64_t v66 = v84;
        v64(v82, v84, v41);
        if (v58) {
          goto LABEL_18;
        }
      }
      else
      {
        v54(v56, v41);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        id v63 = v81;
        v55(v81, v53, v41);
        uint64_t v65 = v82;
        uint64_t v66 = v84;
        v55(v82, v84, v41);
      }
      char v60 = sub_1B996A680();
LABEL_18:
      v54(v65, v41);
      v54(v63, v41);
      v54(v66, v41);
      v54(v87, v41);
      return v60 & 1;
    }
  }
  else
  {
    uint64_t v42 = v88;
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v89 + 7))(v88, 1, 1, v91);
    uint64_t v47 = v90;
  }
  sub_1B90CCA68(v42, &qword_1EB9B5EB0);
  if (qword_1E9EFA2C8 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_1B996D300();
  __swift_project_value_buffer(v67, (uint64_t)qword_1E9EFDB98);
  int v68 = v86;
  ((void (*)(char *, uint64_t, uint64_t))v86[2])(v47, v85, v4);
  uint64_t v69 = sub_1B996D2F0();
  os_log_type_t v70 = sub_1B996F640();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    v92[0] = v72;
    *(_DWORD *)uint64_t v71 = 136315138;
    sub_1B91F79F0(&qword_1E9EFDBE8, MEMORY[0x1E4F26F90]);
    uint64_t v73 = sub_1B9970B20();
    uint64_t v95 = sub_1B90D2A1C(v73, v74, v92);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v68[1])(v47, v4);
    _os_log_impl(&dword_1B90A0000, v69, v70, "Unable to determine if date is in the future {dateComponents: %s}", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v72, -1, -1);
    MEMORY[0x1BA9DB030](v71, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v68[1])(v47, v4);
  }

  char v60 = 0;
  return v60 & 1;
}

BOOL DateComponents.has(component:)()
{
  uint64_t v0 = sub_1B996A050();
  return (v1 & 1) == 0 && v0 != sub_1B9969C00();
}

uint64_t DateComponents.has(components:)(uint64_t a1)
{
  return sub_1B91E6D3C((uint64_t (*)(char *))sub_1B91F7578, (char)&v2, a1) & 1;
}

Swift::Bool __swiftcall String.fuzzyMatch(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  sub_1B90BFD68(0, &qword_1E9EFDBD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1B90CCBAC();
  *(void *)(v3 + 32) = countAndFlagsBits;
  *(void *)(v3 + 40) = object;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v4 = (void *)sub_1B996F570();
  uint64_t v5 = (void *)sub_1B996E9B0();
  unsigned __int8 v6 = objc_msgSend(v4, sel_evaluateWithObject_, v5);

  return v6;
}

uint64_t INSearchForNotebookItemsIntent.isTodayQuery(timeProvider:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v108 = a1;
  uint64_t v3 = sub_1B996A120();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v96 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v97 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v100 = (uint64_t)&v92 - v10;
  MEMORY[0x1F4188790](v9);
  id v101 = (char *)&v92 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v105 = (char *)&v92 - v16;
  uint64_t v99 = sub_1B996AAD0();
  uint64_t v107 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v109 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1B996A6F0();
  uint64_t v106 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v110 = (uint64_t)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v95 = (uint64_t)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v94 = (char *)&v92 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v92 = (uint64_t)&v92 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v104 = (uint64_t)&v92 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v92 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  int v33 = (char *)&v92 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = (char *)&v92 - v35;
  uint64_t v37 = MEMORY[0x1F4188790](v34);
  uint64_t v112 = (char *)&v92 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)&v92 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v44 = (char *)&v92 - v43;
  MEMORY[0x1F4188790](v42);
  uint64_t v111 = (char *)&v92 - v45;
  id v103 = v2;
  id v46 = objc_msgSend(v2, sel_dateTime);
  if (!v46)
  {
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_8:
    uint64_t v50 = v111;
    uint64_t v51 = 1;
    goto LABEL_10;
  }
  uint64_t v47 = v46;
  id v48 = objc_msgSend(v46, sel_startDateComponents);

  if (v48)
  {
    sub_1B9969FA0();

    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v49(v41, 0, 1, v3);
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v49(v41, 1, 1, v3);
  }
  sub_1B90BFE54((uint64_t)v41, (uint64_t)v44, (uint64_t *)&unk_1EB9B1A60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v44, 1, v3) == 1)
  {
    sub_1B90CCA68((uint64_t)v44, (uint64_t *)&unk_1EB9B1A60);
    goto LABEL_8;
  }
  uint64_t v52 = v111;
  DateComponents.smartlyCorrectedValue.getter(v111);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v44, v3);
  uint64_t v50 = v52;
  uint64_t v51 = 0;
LABEL_10:
  v49(v50, v51, 1, v3);
  id v53 = objc_msgSend(v103, sel_dateTime);
  if (v53)
  {
    uint64_t v54 = v53;
    id v55 = objc_msgSend(v53, sel_endDateComponents);

    if (v55)
    {
      sub_1B9969FA0();

      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v56 = 1;
    }
    v49(v33, v56, 1, v3);
    sub_1B90BFE54((uint64_t)v33, (uint64_t)v36, (uint64_t *)&unk_1EB9B1A60);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v36, 1, v3) == 1)
    {
      sub_1B90CCA68((uint64_t)v36, (uint64_t *)&unk_1EB9B1A60);
      uint64_t v57 = 1;
    }
    else
    {
      DateComponents.smartlyCorrectedValue.getter(v112);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v36, v3);
      uint64_t v57 = 0;
    }
  }
  else
  {
    uint64_t v57 = 1;
  }
  uint64_t v58 = v99;
  v49(v112, v57, 1, v3);
  uint64_t v59 = v108[3];
  uint64_t v60 = v108[4];
  __swift_project_boxed_opaque_existential_1(v108, v59);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
  sub_1B90CCA04((uint64_t)v111, (uint64_t)v30, (uint64_t *)&unk_1EB9B1A60);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v62 = v61(v30, 1, v3);
  uint64_t v93 = v15;
  uint64_t v102 = v4;
  if (v62 == 1)
  {
    sub_1B90CCA68((uint64_t)v30, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v63 = v107;
    uint64_t v64 = v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v105, 1, 1, v58);
    uint64_t v65 = v101;
  }
  else
  {
    uint64_t v64 = v105;
    sub_1B996A0F0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v30, v3);
    uint64_t v65 = v101;
    uint64_t v63 = v107;
  }
  uint64_t v66 = v104;
  sub_1B90CCA04((uint64_t)v112, v104, (uint64_t *)&unk_1EB9B1A60);
  sub_1B9101650((uint64_t)v108, (uint64_t)v116);
  uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v67((uint64_t)v64, 1, v58) == 1)
  {
    uint64_t v68 = v66;
    uint64_t v69 = v92;
    sub_1B90CCA04(v68, v92, (uint64_t *)&unk_1EB9B1A60);
    if (v61((char *)v69, 1, v3) == 1)
    {
      sub_1B90CCA68(v69, (uint64_t *)&unk_1EB9B1A60);
      uint64_t v70 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v93, 1, 1, v58);
    }
    else
    {
      uint64_t v70 = (uint64_t)v93;
      sub_1B996A0F0();
      uint64_t v63 = v107;
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69, v3);
    }
    uint64_t v73 = (uint64_t)v65;
    sub_1B9101650((uint64_t)v116, (uint64_t)v113);
    if (v67(v70, 1, v58) == 1)
    {
      uint64_t v75 = v114;
      uint64_t v76 = v115;
      __swift_project_boxed_opaque_existential_1(v113, v114);
      (*(void (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
      sub_1B90CCA68(v104, (uint64_t *)&unk_1EB9B1A60);
      sub_1B90CCA68(v70, &qword_1EB9B5EB8);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
      sub_1B90CCA68(v104, (uint64_t *)&unk_1EB9B1A60);
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v109, v70, v58);
    }
    uint64_t v77 = (uint64_t)v105;
    uint64_t v74 = v102;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v113);
    sub_1B90CCA68(v77, &qword_1EB9B5EB8);
    uint64_t v71 = v98;
    uint64_t v72 = (uint64_t)v94;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
    sub_1B90CCA68(v66, (uint64_t *)&unk_1EB9B1A60);
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v109, v64, v58);
    uint64_t v71 = v98;
    uint64_t v72 = (uint64_t)v94;
    uint64_t v73 = (uint64_t)v65;
    uint64_t v74 = v102;
  }
  sub_1B90CCA04((uint64_t)v111, v72, (uint64_t *)&unk_1EB9B1A60);
  if (v61((char *)v72, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v73, 1, 1, v71);
  }
  else
  {
    uint64_t v78 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v96, v72, v3);
    Calendar.dateMatching(_:now:)(v78, v110, v73);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v78, v3);
  }
  uint64_t v79 = v95;
  sub_1B90CCA04((uint64_t)v112, v95, (uint64_t *)&unk_1EB9B1A60);
  if (v61((char *)v79, 1, v3) == 1)
  {
    uint64_t v80 = v106;
    uint64_t v81 = v100;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v100, 1, 1, v71);
  }
  else
  {
    uint64_t v82 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v96, v79, v3);
    uint64_t v81 = v100;
    Calendar.dateMatching(_:now:)(v82, v110, v100);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v82, v3);
    uint64_t v80 = v106;
  }
  uint64_t v83 = (uint64_t)v97;
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  int v85 = v84(v73, 1, v71);
  sub_1B90CCA04(v81, v83, &qword_1EB9B5EB0);
  if (v85 == 1 && v84(v83, 1, v71) == 1)
  {
    sub_1B90CCA68(v83, &qword_1EB9B5EB0);
LABEL_45:
    LOBYTE(v88) = 0;
    goto LABEL_46;
  }
  sub_1B90CCA68(v83, &qword_1EB9B5EB0);
  uint64_t v88 = v108;
  char v86 = sub_1B91F75DC(v73, v108);
  char v87 = sub_1B91F75DC(v81, v88);
  LOBYTE(v88) = 0;
  if ((v86 & 1) == 0 && (v87 & 1) == 0)
  {
    unint64_t v89 = objc_msgSend(v103, sel_dateTime);
    uint64_t v88 = v89;
    if (v89)
    {
      id v90 = objc_msgSend(v89, sel_allDay);

      if (!v90) {
        goto LABEL_45;
      }
      LODWORD(v88) = objc_msgSend(v90, sel_BOOLValue);

      if (v88) {
        LOBYTE(v88) = sub_1B91F2E48(0, 0, 1, 0, 0, 0, 0, 0);
      }
    }
  }
LABEL_46:
  sub_1B90CCA68(v81, &qword_1EB9B5EB0);
  sub_1B90CCA68((uint64_t)v112, (uint64_t *)&unk_1EB9B1A60);
  sub_1B90CCA68((uint64_t)v111, (uint64_t *)&unk_1EB9B1A60);
  sub_1B90CCA68(v73, &qword_1EB9B5EB0);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v58);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v110, v71);
  return v88 & 1;
}

uint64_t sub_1B91F2E48(char a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8)
{
  int v16 = a1 & 1;
  id v17 = objc_msgSend(v8, sel_title);

  if ((v17 == 0) == v16) {
    goto LABEL_13;
  }
  id v18 = objc_msgSend(v8, sel_content);
  if (v18)
  {

    if ((a2 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else if (a2)
  {
LABEL_13:
    a8 = 0;
    return a8 & 1;
  }
  id v19 = objc_msgSend(v8, sel_dateTime);

  if ((v19 == 0) == (a3 & 1)) {
    goto LABEL_13;
  }
  if ((objc_msgSend(v8, sel_status) == 0) == (a4 & 1)) {
    goto LABEL_13;
  }
  id v20 = objc_msgSend(v8, sel_location);

  if ((v20 == 0) == (a5 & 1)
    || (objc_msgSend(v8, sel_temporalEventTriggerTypes) == 0) == (a6 & 1)
    || (objc_msgSend(v8, sel_taskPriority) == 0) == (a7 & 1))
  {
    goto LABEL_13;
  }
  id v21 = objc_msgSend(v8, sel_notebookItemIdentifier);
  if (v21) {

  }
  else {
    a8 ^= 1u;
  }
  return a8 & 1;
}

uint64_t INSearchForNotebookItemsIntent.isFlaggedQuery.getter()
{
  if (objc_msgSend(v0, sel_taskPriority) != (id)2) {
    return 0;
  }

  return sub_1B91F2E48(0, 0, 0, 0, 0, 0, 1, 0);
}

uint64_t INSearchForNotebookItemsIntent.isScheduledQuery.getter()
{
  if (!objc_msgSend(v0, sel_temporalEventTriggerTypes))
  {
    uint64_t result = (uint64_t)objc_msgSend(v0, sel_dateTime);
    if (!result) {
      return result;
    }
  }
  return 1;
}

uint64_t INSearchForNotebookItemsIntent.isListOrAllQuery.getter()
{
  if (objc_msgSend(v0, sel_itemType) == (id)2) {
    return 1;
  }

  return sub_1B91F2E48(0, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t INDateComponentsRange.dueDateComponents(timeProvider:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v5 = objc_msgSend(v2, sel_recurrenceRule);

  if (v5)
  {
    return sub_1B91F31AC(a1, (uint64_t)a2);
  }
  else
  {
    return sub_1B91F3FC0(a1, a2);
  }
}

uint64_t sub_1B91F31AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v100 = (uint64_t)&v99 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v102 = (uint64_t)&v99 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEE70);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v109 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for TTRRecurrenceRuleModel(0);
  uint64_t v114 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v116 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v107 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1B996AAD0();
  uint64_t v120 = *(void *)(v118 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v118);
  id v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v106 = (char *)&v99 - v21;
  uint64_t v115 = sub_1B996A6F0();
  uint64_t v111 = *(void *)(v115 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v115);
  id v103 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v105 = (char *)&v99 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v117 = (char *)&v99 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  int v33 = (char *)&v99 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v99 - v34;
  uint64_t v36 = sub_1B996A120();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v121 = (void **)((char *)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v110 = v3;
  id v39 = objc_msgSend(v3, sel_startDateComponents);
  uint64_t v122 = v20;
  if (v39)
  {
    uint64_t v40 = v39;
    sub_1B9969FA0();

    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    uint64_t v42 = v30;
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    uint64_t v42 = v30;
    uint64_t v43 = 1;
  }
  unsigned int v119 = v41;
  v41(v42, v43, 1, v36);
  sub_1B90BFE54((uint64_t)v30, (uint64_t)v33, (uint64_t *)&unk_1EB9B1A60);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v44(v33, 1, v36) == 1)
  {
    sub_1B90CCA68((uint64_t)v33, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v45 = 1;
  }
  else
  {
    DateComponents.smartlyCorrectedValue.getter(v35);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v36);
    uint64_t v45 = 0;
  }
  v119(v35, v45, 1, v36);
  sub_1B9101650((uint64_t)a1, (uint64_t)&v127);
  unsigned int v46 = v44(v35, 1, v36);
  uint64_t v113 = a2;
  id v101 = v9;
  uint64_t v104 = v37 + 56;
  uint64_t v112 = v36;
  if (v46 == 1)
  {
    uint64_t v47 = v128;
    uint64_t v48 = v129;
    __swift_project_boxed_opaque_existential_1(&v127, v128);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
    uint64_t v49 = v128;
    uint64_t v50 = v129;
    __swift_project_boxed_opaque_existential_1(&v127, v128);
    (*(void (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
    uint64_t v51 = sub_1B996AAB0();
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = v52;
    uint64_t v99 = a1;
    uint64_t v54 = *(void *)(v52 + 72);
    unint64_t v55 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1B997EED0;
    uint64_t v57 = *(void (**)(unint64_t, void, uint64_t))(v53 + 104);
    v57(v56 + v55, *MEMORY[0x1E4F27C20], v51);
    v57(v56 + v55 + v54, *MEMORY[0x1E4F27C30], v51);
    v57(v56 + v55 + 2 * v54, *MEMORY[0x1E4F27BF0], v51);
    v57(v56 + v55 + 3 * v54, *MEMORY[0x1E4F27C10], v51);
    v57(v56 + v55 + 4 * v54, *MEMORY[0x1E4F27C48], v51);
    uint64_t v58 = v99;
    v57(v56 + v55 + 5 * v54, *MEMORY[0x1E4F27C50], v51);
    uint64_t v59 = v113;
    sub_1B912DF60(v56);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v60 = v117;
    uint64_t v61 = v106;
    sub_1B996A980();
    swift_bridgeObjectRelease();
    uint64_t v62 = v120;
    uint64_t v63 = v118;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v61, v118);
    uint64_t v64 = v60;
    a2 = v59;
    a1 = v58;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v64, v115);
    sub_1B90CCA68((uint64_t)v35, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v65 = (uint64_t)v116;
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v121, v35, v36);
    uint64_t v65 = (uint64_t)v116;
    uint64_t v63 = v118;
    uint64_t v62 = v120;
  }
  uint64_t v66 = (uint64_t)v107;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
  sub_1B996A0F0();
  sub_1B9101650((uint64_t)a1, (uint64_t)&v124);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v66, 1, v63) == 1)
  {
    uint64_t v67 = v125;
    uint64_t v68 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v125);
    uint64_t v69 = v67;
    uint64_t v62 = v120;
    (*(void (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    sub_1B90CCA68(v66, &qword_1EB9B5EB8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v122, v66, v63);
  }
  uint64_t v70 = v110;
  uint64_t v71 = (uint64_t)v109;
  uint64_t v72 = v108;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v124);
  sub_1B9101650((uint64_t)a1, (uint64_t)v123);
  id v73 = v70;
  TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)(v73, v123, v71);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v71, 1, v72) == 1)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v122, v63);
    uint64_t v74 = v112;
    (*(void (**)(void *, uint64_t))(v37 + 8))(v121, v112);
    sub_1B90CCA68(v71, &qword_1EB9AEE70);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v119)(a2, 1, 1, v74);
  }
  uint64_t v114 = v37;
  sub_1B90F1CDC(v71, v65);
  uint64_t v75 = a1[3];
  uint64_t v76 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v75);
  uint64_t v77 = (uint64_t)v117;
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v76);
  uint64_t v78 = v102;
  uint64_t v80 = (uint64_t)v121;
  uint64_t v79 = v122;
  Calendar.dateMatching(_:now:)((uint64_t)v121, v77, v102);
  uint64_t v81 = v111;
  uint64_t v82 = v115;
  uint64_t v117 = *(char **)(v111 + 8);
  ((void (*)(uint64_t, uint64_t))v117)(v77, v115);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v78, 1, v82) == 1)
  {
    sub_1B91F751C(v65);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v79, v118);
    uint64_t v74 = v112;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v80, v112);
    sub_1B90CCA68(v78, &qword_1EB9B5EB0);
    a2 = v113;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v119)(a2, 1, 1, v74);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v105, v78, v82);
  uint64_t v84 = a1[3];
  uint64_t v85 = a1[4];
  char v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v84);
  uint64_t v87 = (uint64_t)v103;
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v85);
  id v88 = objc_msgSend(v73, sel_allDay);
  if (v88)
  {
    unint64_t v89 = v88;
    int v90 = objc_msgSend(v88, sel_BOOLValue);
  }
  else
  {
    int v90 = 0;
  }
  uint64_t v91 = (uint64_t)v105;
  if (sub_1B996A680())
  {
    uint64_t v92 = v100;
    uint64_t v93 = v115;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v100, v91, v115);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v92, 0, 1, v93);
    uint64_t v94 = (uint64_t)v116;
  }
  else
  {
    uint64_t v92 = v100;
    uint64_t v94 = (uint64_t)v116;
    sub_1B91EFDD0(v87, v91, v90, v86, v100);
    uint64_t v93 = v115;
  }
  uint64_t v95 = (uint64_t)v101;
  uint64_t v96 = sub_1B90CCA04(v92, (uint64_t)v101, &qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v96);
  uint64_t v97 = (uint64_t)v121;
  *(&v99 - 4) = v121;
  *(&v99 - 3) = v86;
  *((unsigned char *)&v99 - 16) = v90;
  sub_1B91E6AFC((void (*)(char *))sub_1B91F7A38, v113);
  sub_1B90CCA68(v95, &qword_1EB9B5EB0);
  sub_1B90CCA68(v92, &qword_1EB9B5EB0);
  uint64_t v98 = (void (*)(char *, uint64_t))v117;
  ((void (*)(char *, uint64_t))v117)(v103, v93);
  v98(v105, v93);
  sub_1B91F751C(v94);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v118);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 8))(v97, v112);
}

uint64_t sub_1B91F3FC0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v141 = a1;
  long long v138 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v122 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v128 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1B996A6F0();
  uint64_t v7 = *(void *)(v131 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v131);
  uint64_t v126 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v129 = (char *)&v119 - v10;
  uint64_t v11 = sub_1B996A120();
  uint64_t v143 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v130 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v134 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1B996AAD0();
  uint64_t v142 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v145 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v123 = (uint64_t)&v119 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v124 = (uint64_t)&v119 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v125 = (uint64_t)&v119 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v133 = (uint64_t)&v119 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  long long v132 = (char *)&v119 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v119 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v119 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33);
  long long v146 = (char *)&v119 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v119 - v39;
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  uint64_t v43 = (char *)&v119 - v42;
  uint64_t v44 = MEMORY[0x1F4188790](v41);
  long long v149 = (char *)&v119 - v45;
  MEMORY[0x1F4188790](v44);
  uint64_t v147 = (uint64_t)&v119 - v46;
  uint64_t v137 = sub_1B996AC50();
  uint64_t v47 = *(void *)(v137 - 8);
  uint64_t v48 = MEMORY[0x1F4188790](v137);
  uint64_t v120 = (char *)&v119 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v121 = (char *)&v119 - v51;
  MEMORY[0x1F4188790](v50);
  uint64_t v144 = (char *)&v119 - v52;
  uint64_t v53 = v2;
  id v54 = objc_msgSend(v2, sel_allDay);
  uint64_t v127 = v7;
  long long v135 = v19;
  if (v54)
  {
    unint64_t v55 = v54;
    unsigned int v139 = objc_msgSend(v54, sel_BOOLValue);
  }
  else
  {
    unsigned int v139 = 0;
  }
  uint64_t v57 = v141[3];
  uint64_t v56 = v141[4];
  __swift_project_boxed_opaque_existential_1(v141, v57);
  (*(void (**)(uint64_t, uint64_t))(v56 + 24))(v57, v56);
  id v58 = objc_msgSend(v53, sel_startDateComponents);
  uint64_t v136 = v47;
  if (v58)
  {
    uint64_t v59 = v58;
    sub_1B9969FA0();

    uint64_t v60 = v143;
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56);
    uint64_t v62 = v40;
    uint64_t v63 = 0;
  }
  else
  {
    uint64_t v60 = v143;
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56);
    uint64_t v62 = v40;
    uint64_t v63 = 1;
  }
  long long v150 = v61;
  v61(v62, v63, 1, v11);
  sub_1B90BFE54((uint64_t)v40, (uint64_t)v43, (uint64_t *)&unk_1EB9B1A60);
  uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  if (v64(v43, 1, v11) == 1)
  {
    sub_1B90CCA68((uint64_t)v43, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v65 = 1;
    uint64_t v66 = v149;
  }
  else
  {
    uint64_t v66 = v149;
    DateComponents.smartlyCorrectedValue.getter(v149);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v11);
    uint64_t v65 = 0;
  }
  uint64_t v67 = 1;
  uint64_t v148 = v60 + 56;
  v150(v66, v65, 1, v11);
  id v68 = objc_msgSend(v53, sel_endDateComponents);
  uint64_t v69 = v141;
  if (v68)
  {
    uint64_t v70 = v68;
    sub_1B9969FA0();

    uint64_t v67 = 0;
  }
  v150(v32, v67, 1, v11);
  sub_1B90BFE54((uint64_t)v32, (uint64_t)v35, (uint64_t *)&unk_1EB9B1A60);
  if (v64(v35, 1, v11) == 1)
  {
    sub_1B90CCA68((uint64_t)v35, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v71 = 1;
    uint64_t v72 = v146;
  }
  else
  {
    uint64_t v72 = v146;
    DateComponents.smartlyCorrectedValue.getter(v146);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v11);
    uint64_t v71 = 0;
  }
  uint64_t v73 = (uint64_t)v132;
  v150(v72, v71, 1, v11);
  sub_1B90CCA04((uint64_t)v149, v73, (uint64_t *)&unk_1EB9B1A60);
  unsigned int v74 = v64((char *)v73, 1, v11);
  uint64_t v75 = (uint64_t)v134;
  if (v74 == 1)
  {
    sub_1B90CCA68(v73, (uint64_t *)&unk_1EB9B1A60);
    char v76 = 0;
  }
  else
  {
    char v76 = sub_1B91F1548(v69, v139);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v73, v11);
  }
  uint64_t v77 = v133;
  sub_1B90CCA04((uint64_t)v72, v133, (uint64_t *)&unk_1EB9B1A60);
  unsigned int v78 = v64((char *)v77, 1, v11);
  uint64_t v79 = v140;
  if (v78 == 1)
  {
    uint64_t v80 = (uint64_t)v69;
    sub_1B90CCA68(v77, (uint64_t *)&unk_1EB9B1A60);
    if ((v76 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
  uint64_t v80 = (uint64_t)v69;
  char v81 = sub_1B91F1548(v69, v139);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v77, v11);
  if (v76)
  {
LABEL_22:
    uint64_t v82 = v149;
LABEL_25:
    uint64_t v83 = v147;
    sub_1B90CCA04((uint64_t)v82, v147, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v84 = v142;
    goto LABEL_30;
  }
  if (v81)
  {
    uint64_t v82 = v146;
    goto LABEL_25;
  }
LABEL_26:
  uint64_t v85 = v124;
  sub_1B90CCA04((uint64_t)v149, v124, (uint64_t *)&unk_1EB9B1A60);
  uint64_t v86 = v123;
  sub_1B90CCA04((uint64_t)v146, v123, (uint64_t *)&unk_1EB9B1A60);
  if (v64((char *)v85, 1, v11) == 1)
  {
    uint64_t v87 = v125;
    sub_1B90BFE54(v86, v125, (uint64_t *)&unk_1EB9B1A60);
    sub_1B90CCA68(v85, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v60 = v143;
  }
  else
  {
    sub_1B90CCA68(v86, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v60 = v143;
    uint64_t v87 = v125;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32))(v125, v85, v11);
    v150((char *)v87, 0, 1, v11);
  }
  uint64_t v84 = v142;
  uint64_t v83 = v147;
  sub_1B90BFE54(v87, v147, (uint64_t *)&unk_1EB9B1A60);
LABEL_30:
  id v88 = (void *)v80;
  if (v64((char *)v83, 1, v11))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v75, 1, 1, v79);
  }
  else
  {
    sub_1B996A0F0();
    uint64_t v83 = v147;
  }
  sub_1B9101650(v80, (uint64_t)&v151);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v75, 1, v79) == 1)
  {
    uint64_t v89 = v152;
    uint64_t v90 = v153;
    __swift_project_boxed_opaque_existential_1(&v151, v152);
    uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v90 + 16);
    uint64_t v92 = v89;
    uint64_t v93 = v90;
    uint64_t v84 = v142;
    uint64_t v60 = v143;
    v91(v92, v93);
    uint64_t v83 = v147;
    sub_1B90CCA68(v75, &qword_1EB9B5EB8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v145, v75, v79);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v151);
  uint64_t v94 = (uint64_t)v135;
  sub_1B90CCA04(v83, (uint64_t)v135, (uint64_t *)&unk_1EB9B1A60);
  if (v64((char *)v94, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v145, v79);
    sub_1B90CCA68((uint64_t)v146, (uint64_t *)&unk_1EB9B1A60);
    sub_1B90CCA68((uint64_t)v149, (uint64_t *)&unk_1EB9B1A60);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v144, v137);
    sub_1B90CCA68(v94, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v95 = 1;
    uint64_t v96 = v138;
  }
  else
  {
    uint64_t v97 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v130, v94, v11);
    uint64_t v98 = v60;
    uint64_t v99 = v88[3];
    uint64_t v100 = v88[4];
    __swift_project_boxed_opaque_existential_1(v88, v99);
    uint64_t v101 = (uint64_t)v126;
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v100);
    uint64_t v102 = v128;
    id v103 = v145;
    Calendar.dateMatching(_:now:)(v97, v101, v128);
    uint64_t v104 = v127;
    uint64_t v105 = v97;
    uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
    uint64_t v107 = v131;
    v106(v101, v131);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v102, 1, v107) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v105, v11);
      (*(void (**)(char *, uint64_t))(v142 + 8))(v103, v140);
      sub_1B90CCA68((uint64_t)v146, (uint64_t *)&unk_1EB9B1A60);
      sub_1B90CCA68((uint64_t)v149, (uint64_t *)&unk_1EB9B1A60);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v144, v137);
      sub_1B90CCA68(v102, &qword_1EB9B5EB0);
      uint64_t v95 = 1;
      uint64_t v83 = v147;
      uint64_t v96 = v138;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v129, v102, v107);
      uint64_t v108 = (void *)sub_1B996A670();
      uint64_t v109 = (uint64_t)v122;
      sub_1B996A110();
      uint64_t v110 = v136;
      uint64_t v111 = v137;
      uint64_t v112 = v120;
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v120, v144, v137);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v109, 1, v111) == 1)
      {
        uint64_t v113 = v121;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v121, v112, v111);
        sub_1B90CCA68(v109, &qword_1EB9B5EC0);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v111);
        uint64_t v113 = v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v121, v109, v111);
      }
      uint64_t v114 = self;
      uint64_t v115 = (void *)sub_1B996AC20();
      uint64_t v116 = *(void (**)(char *, uint64_t))(v110 + 8);
      v116(v113, v111);
      id v117 = objc_msgSend(v114, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v108, v115, v139);

      uint64_t v96 = v138;
      sub_1B9969FA0();

      v106((uint64_t)v129, v131);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v130, v11);
      (*(void (**)(char *, uint64_t))(v142 + 8))(v145, v140);
      sub_1B90CCA68((uint64_t)v146, (uint64_t *)&unk_1EB9B1A60);
      sub_1B90CCA68((uint64_t)v149, (uint64_t *)&unk_1EB9B1A60);
      v116(v144, v111);
      uint64_t v95 = 0;
      uint64_t v83 = v147;
    }
  }
  v150(v96, v95, 1, v11);
  return sub_1B90CCA68(v83, (uint64_t *)&unk_1EB9B1A60);
}

uint64_t INDateComponentsRange.calendar(timeProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v46 = (uint64_t)&v43 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v43 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v48 = (char *)&v43 - v21;
  id v22 = objc_msgSend(v3, sel_startDateComponents);
  uint64_t v47 = a2;
  uint64_t v44 = v20;
  id v45 = v3;
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1B9969FA0();

    uint64_t v24 = sub_1B996A120();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 0, 1, v24);
  }
  else
  {
    uint64_t v24 = sub_1B996A120();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  }
  sub_1B90BFE54((uint64_t)v14, (uint64_t)v16, (uint64_t *)&unk_1EB9B1A60);
  sub_1B996A120();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v16, 1, v24) == 1)
  {
    sub_1B90CCA68((uint64_t)v16, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v27 = sub_1B996AAD0();
    uint64_t v28 = v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v48, 1, 1, v27);
  }
  else
  {
    uint64_t v29 = v48;
    sub_1B996A0F0();
    uint64_t v30 = v16;
    uint64_t v28 = v29;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  }
  sub_1B9101650(a1, (uint64_t)v52);
  uint64_t v31 = sub_1B996AAD0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v33((uint64_t)v28, 1, v31) == 1)
  {
    id v34 = objc_msgSend(v45, sel_endDateComponents);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_1B9969FA0();

      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v9, v36, 1, v24);
    uint64_t v38 = v46;
    sub_1B90BFE54((uint64_t)v9, v46, (uint64_t *)&unk_1EB9B1A60);
    if (v26((char *)v38, 1, v24) == 1)
    {
      sub_1B90CCA68(v38, (uint64_t *)&unk_1EB9B1A60);
      uint64_t v39 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v44, 1, 1, v31);
    }
    else
    {
      uint64_t v39 = (uint64_t)v44;
      sub_1B996A0F0();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v24);
    }
    sub_1B9101650((uint64_t)v52, (uint64_t)v49);
    if (v33(v39, 1, v31) == 1)
    {
      uint64_t v40 = v50;
      uint64_t v41 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      (*(void (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      sub_1B90CCA68(v39, &qword_1EB9B5EB8);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v47, v39, v31);
    }
    uint64_t v42 = (uint64_t)v48;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    return sub_1B90CCA68(v42, &qword_1EB9B5EB8);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v47, v28, v31);
  }
}

void sub_1B91F54F0(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B996AC50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1B996A670();
  sub_1B996A110();
  sub_1B9101650(a1, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
    sub_1B90CCA68((uint64_t)v7, &qword_1EB9B5EC0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  uint64_t v15 = self;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  uint64_t v16 = (void *)sub_1B996AC20();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v17 = objc_msgSend(v15, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v12, v16, a2 & 1, v18);

  sub_1B9969FA0();
}

BOOL static INTemporalEventTrigger.ValidationError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t INTemporalEventTrigger.ValidationError.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t INTemporalEventTrigger.ValidationError.hashValue.getter()
{
  return sub_1B9970D60();
}

void INTemporalEventTrigger.dueDateComponents(timeProvider:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  id v7 = objc_msgSend(v3, sel_dateComponentsRange);
  id v6 = objc_msgSend(v7, sel_recurrenceRule);

  if (v6) {
    sub_1B91F31AC(a1, (uint64_t)a2);
  }
  else {
    sub_1B91F3FC0(a1, a2);
  }
}

uint64_t INTemporalEventTrigger.validate(timeProvider:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1B996A120();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AEE70);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v14 = objc_msgSend(v2, sel_dateComponentsRange);
  id v15 = objc_msgSend(v14, sel_recurrenceRule);

  sub_1B9101650((uint64_t)a1, (uint64_t)v28);
  if (v15)
  {
    sub_1B9101650((uint64_t)v28, (uint64_t)v27);
    TTRRecurrenceRuleModel.init(temporalEventTrigger:timeProvider:)(v2, (uint64_t)v27, (uint64_t)v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    uint64_t v16 = type metadata accessor for TTRRecurrenceRuleModel(0);
    uint64_t v17 = 1;
    int v18 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16);
    sub_1B90CCA68((uint64_t)v13, &qword_1EB9AEE70);
    if (v18 == 1) {
      return v17;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  id v19 = objc_msgSend(v2, sel_dateComponentsRange);
  id v20 = objc_msgSend(v19, sel_recurrenceRule);

  if (v20) {
    sub_1B91F31AC(a1, (uint64_t)v6);
  }
  else {
    sub_1B91F3FC0(a1, v6);
  }

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1B90CCA68((uint64_t)v6, (uint64_t *)&unk_1EB9B1A60);
    return 2;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v21 = objc_msgSend(v2, sel_dateComponentsRange);
    id v22 = objc_msgSend(v21, sel_allDay);

    if (v22)
    {
      int v23 = objc_msgSend(v22, sel_BOOLValue);
    }
    else
    {
      int v23 = 0;
    }
    char v24 = sub_1B91F1548(a1, v23);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    if (v24)
    {
      id v25 = v2;
      return (uint64_t)v2;
    }
    else
    {
      return 0;
    }
  }
}

id sub_1B91F5BE0()
{
  return objc_msgSend(*v0, sel_priority);
}

id sub_1B91F5BF0()
{
  id v1 = objc_msgSend(*v0, sel_spatialEventTrigger);

  return v1;
}

BOOL sub_1B91F5C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 16);
  uint64_t v5 = (void *)v4();

  id v6 = (void *)((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_mobileSpace);

    if (v5) {
      BOOL v9 = v8 == (id)1;
    }
    else {
      BOOL v9 = 1;
    }
  }
  else
  {
    BOOL v9 = v5 == 0;
  }
  return !v9;
}

uint64_t TTRIntentResultWarningBearing.warnings(store:accountCapabilties:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4) == 2
    && !objc_msgSend(a2, sel_supportsFlagged))
  {
    char v9 = 1;
    uint64_t v8 = 2;
  }
  else
  {
    uint64_t v8 = 0;
    char v9 = 0;
  }
  uint64_t v10 = sub_1B91F5F04(a1, a3, a4);
  char v12 = v11;
  uint64_t v13 = sub_1B91F6218(a3, a4);
  char v15 = v14;
  if ((v9 & 1) == 0)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    if (v12) {
      goto LABEL_9;
    }
LABEL_16:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_1B918A1C8(0, v16[2] + 1, 1, v16);
    }
    unint64_t v23 = v16[2];
    unint64_t v22 = v16[3];
    if (v23 >= v22 >> 1) {
      uint64_t v16 = sub_1B918A1C8((void *)(v22 > 1), v23 + 1, 1, v16);
    }
    v16[2] = v23 + 1;
    v16[v23 + 4] = v10;
    if ((v15 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
  uint64_t v16 = sub_1B918A1C8(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_1B918A1C8((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v16[2] = v18 + 1;
  v16[v18 + 4] = v8;
  if ((v12 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v15 & 1) == 0)
  {
LABEL_10:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_1B918A1C8(0, v16[2] + 1, 1, v16);
    }
    unint64_t v20 = v16[2];
    unint64_t v19 = v16[3];
    unint64_t v21 = v20 + 1;
    if (v20 >= v19 >> 1) {
      uint64_t v16 = sub_1B918A1C8((void *)(v19 > 1), v20 + 1, 1, v16);
    }
    v16[2] = v21;
    v16[v20 + 4] = v13;
    goto LABEL_22;
  }
LABEL_21:
  unint64_t v21 = v16[2];
  if (!v21)
  {
    uint64_t v25 = 0;
    goto LABEL_26;
  }
LABEL_22:
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  do
  {
    uint64_t v26 = v16[v24 + 4];
    if ((v26 & ~v25) == 0) {
      uint64_t v26 = 0;
    }
    v25 |= v26;
    ++v24;
  }
  while (v21 != v24);
LABEL_26:
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1B91F5F04(void *a1, uint64_t a2, uint64_t a3)
{
  v22[1] = *(id *)MEMORY[0x1E4F143B8];
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) != 2) {
    return 0;
  }
  v22[0] = 0;
  id v4 = objc_msgSend(a1, sel_fetchActiveCloudKitAccountObjectIDsWithFetchOption_error_, 2, v22);
  id v5 = v22[0];
  if (!v4)
  {
    id v11 = v22[0];
    char v12 = (void *)sub_1B996A390();

    swift_willThrow();
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B996D300();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9EFDB98);
    id v14 = v12;
    id v15 = v12;
    uint64_t v16 = sub_1B996D2F0();
    os_log_type_t v17 = sub_1B996F640();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      v22[0] = v19;
      *(_DWORD *)unint64_t v18 = 136315138;
      swift_getErrorValue();
      uint64_t v20 = sub_1B9970C90();
      sub_1B90D2A1C(v20, v21, (uint64_t *)v22);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, v16, v17, "Could not retrieve accounts to determine if upgraded to cloudkit {error: %s}", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v19, -1, -1);
      MEMORY[0x1BA9DB030](v18, -1, -1);

      return 0;
    }

    return 0;
  }
  id v6 = v4;
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  unint64_t v7 = sub_1B996EE50();
  id v8 = v5;

  if (v7 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v9 = sub_1B9970930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return 8 * (v9 == 0);
}

uint64_t sub_1B91F6218(uint64_t a1, uint64_t a2)
{
  if (!sub_1B91F5C28(a1, a2)) {
    return 0;
  }
  uint64_t v2 = (Class *)0x1E4F1E000;
  unsigned int v3 = objc_msgSend(self, sel_locationServicesEnabled);
  id v4 = objc_msgSend(self, sel_processInfo);
  id v5 = objc_msgSend(v4, sel_processName);

  uint64_t v6 = sub_1B996E9F0();
  uint64_t v8 = v7;

  if (v6 == 0xD000000000000011 && v8 == 0x80000001B99A8180)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (qword_1EB9B5338 != -1) {
    swift_once();
  }
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1E600]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v2 = (Class *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v11, sel_initWithEffectiveBundleIdentifier_, v2);

  if (v12) {
    goto LABEL_12;
  }
  __break(1u);
LABEL_11:
  id v12 = objc_msgSend(objc_allocWithZone(v2[192]), sel_init);
LABEL_12:
  unsigned int v13 = objc_msgSend(v12, sel_authorizationStatus);

  if (v13 - 3 < 2) {
    unsigned int v14 = v3;
  }
  else {
    unsigned int v14 = 0;
  }
  return v14 ^ 1;
}

uint64_t sub_1B91F63F4()
{
  id v1 = objc_msgSend(*v0, sel_name);
  uint64_t v2 = sub_1B996E9F0();

  return v2;
}

id sub_1B91F644C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v8 = sub_1B996A120();
  uint64_t v9 = *(void *)(v8 - 8);
  char v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  id v11 = 0;
  if (v10(a1, 1, v8) != 1)
  {
    id v11 = (void *)sub_1B9969F80();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  if (v10(a2, 1, v8) == 1)
  {
    id v12 = 0;
  }
  else
  {
    id v12 = (void *)sub_1B9969F80();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  id v13 = objc_msgSend(v4, sel_initWithStartDateComponents_endDateComponents_recurrenceRule_, v11, v12, a3);

  return v13;
}

uint64_t _sSo10INTaskListC15RemindersUICoreE16encodeIdentifier3forSSSo08REMSmartB0C_tFZ_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B9969E60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996A770();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_objectID);
  id v14 = objc_msgSend(v13, sel_uuid);

  sub_1B996A740();
  uint64_t v15 = sub_1B996A710();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1B9969E50();
  sub_1B9969E40();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  MEMORY[0x1BA9D2C50](v15, v17);
  sub_1B9969E20();
  uint64_t v18 = sub_1B996A580();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B90CCA68((uint64_t)v4, &qword_1EB9B1A70);
  }
  else
  {
    uint64_t v15 = sub_1B996A410();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1B91F68B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _sSo6INTaskC15RemindersUICoreE013allIncompleteB05storeSaySo11REMReminderCGSo8REMStoreC_tFZ_0(void *a1)
{
  uint64_t v82 = a1;
  v85[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v71 = sub_1B996BC40();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1B996BE20();
  uint64_t v68 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1B996BE30();
  uint64_t v73 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B996C260();
  uint64_t v78 = *(void *)(v6 - 8);
  uint64_t v79 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996C0C0();
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B996BFE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDBF8);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *MEMORY[0x1E4F95838];
  uint64_t v19 = sub_1B996C250();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  uint64_t v20 = *MEMORY[0x1E4F95740];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  uint64_t v80 = (void *)v12;
  v21(v15, v20, v12);
  uint64_t v22 = *MEMORY[0x1E4F957B0];
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 104);
  char v81 = (char *)v9;
  v23(v11, v22, v9);
  uint64_t v24 = v78;
  uint64_t v25 = v79;
  (*(void (**)(char *, void))(v78 + 104))(v8, *MEMORY[0x1E4F95850]);
  sub_1B996C5F0();
  uint64_t v77 = 0;
  uint64_t v36 = v76;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
  (*(void (**)(char *, char *))(v83 + 8))(v11, v81);
  (*(void (**)(char *, void *))(v13 + 8))(v15, v80);
  sub_1B996C5E0();
  uint64_t v37 = sub_1B996BD20();
  v85[0] = (id)MEMORY[0x1E4FBC860];
  uint64_t v38 = *(void *)(v37 + 16);
  char v81 = v17;
  if (v38)
  {
    uint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
    unint64_t v40 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v83 = v37;
    unint64_t v41 = v37 + v40;
    uint64_t v42 = *(void *)(v68 + 72);
    uint64_t v43 = (void (**)(char *, uint64_t))(v68 + 8);
    do
    {
      v39(v4, v41, v2);
      uint64_t v44 = sub_1B996BE10();
      (*v43)(v4, v2);
      sub_1B9120C54(v44);
      v41 += v42;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    id v45 = v85[0];
    uint64_t v46 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v45 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v46 = v36;
  }
  uint64_t v47 = v45[2];
  uint64_t v48 = v71;
  uint64_t v49 = v70;
  if (v47)
  {
    v85[0] = (id)MEMORY[0x1E4FBC860];
    sub_1B99705D0();
    uint64_t v83 = *(void *)(v69 + 16);
    uint64_t v50 = *(unsigned __int8 *)(v69 + 80);
    uint64_t v80 = v45;
    uint64_t v51 = (char *)v45 + ((v50 + 32) & ~v50);
    uint64_t v52 = *(void *)(v69 + 72);
    uint64_t v53 = (void (**)(char *, uint64_t))(v69 + 8);
    do
    {
      ((void (*)(char *, char *, uint64_t))v83)(v49, v51, v48);
      sub_1B996BC20();
      (*v53)(v49, v48);
      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
      v51 += v52;
      --v47;
    }
    while (v47);
    unint64_t v54 = (unint64_t)v85[0];
    swift_bridgeObjectRelease();
    uint64_t v46 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v54 = MEMORY[0x1E4FBC860];
  }
  uint64_t v56 = v72;
  uint64_t v55 = v73;
  uint64_t v57 = v75;
  id v58 = v82;
  if (v54 >> 62)
  {
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B99708C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B9970BC0();
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  }
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  uint64_t v59 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  v85[0] = 0;
  id v60 = objc_msgSend(v58, sel_fetchRemindersWithObjectIDs_error_, v59, v85);

  id v61 = v85[0];
  if (v60)
  {
    sub_1B90BFD68(0, (unint64_t *)&unk_1EB9B4A80);
    sub_1B90BFDA4();
    uint64_t v62 = sub_1B996E6E0();
    id v63 = v61;

    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v35 = sub_1B917B438(v54, v62);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v46);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v81, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v65 = v85[0];
    swift_bridgeObjectRelease();
    uint64_t v66 = (void *)sub_1B996A390();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v46);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v81, v74);
    if (qword_1E9EFA2C8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1B996D300();
    __swift_project_value_buffer(v26, (uint64_t)qword_1E9EFDB98);
    id v27 = v66;
    id v28 = v66;
    uint64_t v29 = sub_1B996D2F0();
    os_log_type_t v30 = sub_1B996F640();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      v85[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      swift_getErrorValue();
      uint64_t v33 = sub_1B9970C80();
      uint64_t v84 = sub_1B90D2A1C(v33, v34, (uint64_t *)v85);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, v29, v30, "Error trying to REMRemindersListDataView.fetchAll {error: %s}", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v32, -1, -1);
      MEMORY[0x1BA9DB030](v31, -1, -1);
    }
    else
    {
    }
    return MEMORY[0x1E4FBC860];
  }
  return v35;
}

uint64_t _sSo6INTaskC15RemindersUICoreE18allIncompleteTasks5storeSayABGSo8REMStoreC_tFZ_0(void *a1)
{
  unint64_t v1 = _sSo6INTaskC15RemindersUICoreE013allIncompleteB05storeSaySo11REMReminderCGSo8REMStoreC_tFZ_0(a1);
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = sub_1B9970930();
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1B99705D0();
  if ((v3 & 0x8000000000000000) == 0)
  {
    sub_1B90BFD68(0, &qword_1EB9B4BA0);
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1BA9D9380](v5, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      ++v5;
      INTask.init(reminder:)(v6);
      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    while (v3 != v5);
    uint64_t v7 = v8;
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B91F751C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRecurrenceRuleModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1B91F7578()
{
  return sub_1B91F7594();
}

BOOL sub_1B91F7594()
{
  uint64_t v0 = sub_1B996A050();
  return (v1 & 1) == 0 && v0 != sub_1B9969C00();
}

uint64_t sub_1B91F75DC(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB8);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = sub_1B996A6F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B90CCA04(a1, (uint64_t)v12, &qword_1EB9B5EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1B90CCA68((uint64_t)v12, &qword_1EB9B5EB0);
    char v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v18 = a2[3];
    uint64_t v19 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    uint64_t v20 = sub_1B996AAD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    char v21 = TTRTimeProvider.isDateInToday(_:calendar:now:)((uint64_t)v16, (uint64_t)v6, (uint64_t)v10, v18, v19);
    sub_1B90CCA68((uint64_t)v10, &qword_1EB9B5EB0);
    sub_1B90CCA68((uint64_t)v6, &qword_1EB9B5EB8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    char v17 = v21 ^ 1;
  }
  return v17 & 1;
}

unint64_t sub_1B91F7898()
{
  unint64_t result = qword_1E9EFDBE0;
  if (!qword_1E9EFDBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFDBE0);
  }
  return result;
}

unsigned char *_s15ValidationErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B91F79B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for INTemporalEventTrigger.ValidationError()
{
  return &type metadata for INTemporalEventTrigger.ValidationError;
}

uint64_t sub_1B91F79F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B91F7A38(uint64_t a1@<X8>)
{
  sub_1B91F54F0(*(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

uint64_t TTRIDateIconGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t TTRIDateIconGenerator.init()()
{
  return v0;
}

Class TTRIDateIconGenerator.generateQuickBarDateIcons(for:)()
{
  v0._uint64_t countAndFlagsBits = sub_1B91F7AD0();
  Class isa = TTRIDateIconGenerator.generateQuickBarDateIcons(withText:)(v0).normal.super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_1B91F7AD0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B996AC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B996A6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v29 = (char *)&v29 - v15;
  uint64_t v16 = (void *)sub_1B9969F80();
  sub_1B996A110();
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v30 = v10;
  if (v17 == 1)
  {
    _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
    sub_1B90CCA68((uint64_t)v5, &qword_1EB9B5EC0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  uint64_t v18 = self;
  uint64_t v19 = (void *)sub_1B996AC20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v20 = objc_msgSend(v18, sel_rem_dateWithDateComponents_timeZone_, v16, v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v2, 1, 1, v30);
    goto LABEL_10;
  }
  sub_1B996A6B0();

  char v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v22 = v30;
  v21(v2, v14, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v2, 0, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v22) == 1)
  {
LABEL_10:
    sub_1B90CCA68((uint64_t)v2, &qword_1EB9B5EB0);
    return 0;
  }
  uint64_t v23 = v29;
  v21(v29, v2, v22);
  if (qword_1EB9B4FE0 != -1) {
    swift_once();
  }
  id v24 = (id)qword_1EB9B1A80;
  uint64_t v25 = (void *)sub_1B996A670();
  id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

  uint64_t v27 = sub_1B996E9F0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v22);
  return v27;
}

Swift::tuple_normal_UIImage_highlighted_UIImage __swiftcall TTRIDateIconGenerator.generateQuickBarDateIcons(withText:)(Swift::String withText)
{
  uint64_t v50 = (void *)*v1;
  type metadata accessor for RemindersUICoreBundleLookupObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_1B996E9B0();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v6);
  uint64_t v8 = v7;

  id v9 = v3;
  uint64_t v10 = (void *)sub_1B996E9B0();
  id v11 = objc_msgSend(v5, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v10, v9, 0);

  id v49 = v9;
  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v11);
  uint64_t v48 = v12;

  double v13 = *MEMORY[0x1E4FB09B8];
  uint64_t v14 = self;
  id v15 = v8;
  id v16 = objc_msgSend(v14, sel_systemFontOfSize_weight_, 12.0, v13);
  id v17 = objc_msgSend(v16, sel_fontDescriptor);
  id v18 = objc_msgSend(v17, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

  if (v18)
  {
    id v19 = objc_msgSend(v14, sel_fontWithDescriptor_size_, v18, 0.0);

    id v16 = v19;
  }
  id v20 = self;
  id v47 = objc_msgSend(v20, sel_labelColor);
  v61[0] = v15;
  v61[1] = v16;
  v61[2] = v47;
  long long v62 = xmmword_1B997F060;
  long long v63 = xmmword_1B997F070;
  sub_1B98BEE38((uint64_t)v61, (uint64_t)&v51);
  id v21 = v51;
  long long v46 = v52;
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  objc_msgSend(v15, sel_size);
  double v25 = v24;
  double v27 = v26;
  uint64_t v28 = swift_allocObject();
  *(double *)(v28 + 16) = v25;
  *(double *)(v28 + 24) = v27;
  id v55 = v21;
  long long v56 = v46;
  uint64_t v57 = v22;
  uint64_t v58 = v23;
  uint64_t v59 = sub_1B91F96BC;
  uint64_t v60 = v28;
  MEMORY[0x1F4188790](v28);
  uint64_t v42 = v61;
  uint64_t v43 = &v55;
  uint64_t v29 = v50;
  uint64_t v44 = (id *)v50;
  *(void *)&long long v46 = sub_1B91F9498((uint64_t)sub_1B91F96C4, (uint64_t)v41, v25, v27);
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v21);
  uint64_t v31 = *MEMORY[0x1E4FB0700];
  id v32 = objc_msgSend(v20, sel_blackColor);
  id v33 = objc_msgSend(v30, sel_string);
  sub_1B996E9F0();

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v34 = sub_1B996EC00();
  swift_bridgeObjectRelease_n();
  objc_msgSend(v30, sel_addAttribute_value_range_, v31, v32, 0, v34);

  MEMORY[0x1F4188790](v35);
  uint64_t v36 = v48;
  uint64_t v42 = v48;
  uint64_t v43 = (id *)v30;
  uint64_t v44 = &v55;
  id v45 = v29;
  uint64_t v37 = (objc_class *)sub_1B91F9498((uint64_t)sub_1B91F96C8, (uint64_t)v41, v25, v27);

  sub_1B918297C(&v51);
  swift_release();
  uint64_t v38 = (objc_class *)v46;
  uint64_t v39 = v37;
  result.highlighted.super.Class isa = v39;
  result.normal.super.Class isa = v38;
  return result;
}

id sub_1B91F841C(CGContext *a1, id a2, void *a3, double *a4)
{
  objc_msgSend(a2, sel_drawAtPoint_, 0.0, 0.0);
  CGContextSetBlendMode(a1, kCGBlendModeDestinationOut);
  double v7 = a4[1];
  double v8 = a4[2];
  double v9 = a4[3];
  double v10 = a4[4];

  return objc_msgSend(a3, sel_drawWithRect_options_context_, 2, 0, v7, v8, v9, v10);
}

UIImage __swiftcall TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(Swift::String withText)
{
  uint64_t v2 = *v1;
  type metadata accessor for RemindersUICoreBundleLookupObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v5 = (void *)sub_1B996E9B0();
  id v6 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v6);
  double v8 = v7;

  double v9 = *MEMORY[0x1E4FB09C0];
  double v10 = self;
  id v11 = objc_msgSend(v10, sel_systemFontOfSize_weight_, 16.0, v9);
  id v12 = objc_msgSend(v11, sel_fontDescriptor);
  id v13 = objc_msgSend(v12, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

  if (v13)
  {
    id v14 = objc_msgSend(v10, sel_fontWithDescriptor_size_, v13, 0.0);

    id v11 = v14;
  }
  id v15 = objc_msgSend(self, sel_blackColor);
  v33[0] = v8;
  v33[1] = v11;
  v33[2] = v15;
  long long v34 = xmmword_1B997F080;
  long long v35 = xmmword_1B997F090;
  sub_1B98BEE38((uint64_t)v33, (uint64_t)&v29);
  id v16 = v29;
  long long v28 = v30;
  uint64_t v17 = v31;
  uint64_t v18 = v32;
  objc_msgSend(v8, sel_size);
  double v20 = v19;
  double v22 = v21;
  uint64_t v23 = swift_allocObject();
  *(double *)(v23 + 16) = v20;
  *(double *)(v23 + 24) = v22;
  id v36 = v16;
  long long v37 = v28;
  uint64_t v38 = v17;
  uint64_t v39 = v18;
  unint64_t v40 = sub_1B91F99AC;
  uint64_t v41 = v23;
  MEMORY[0x1F4188790](v23);
  v27[2] = v33;
  v27[3] = &v36;
  v27[4] = v2;
  id v24 = sub_1B91F9498((uint64_t)sub_1B91F96C4, (uint64_t)v27, v20, v22);
  id v25 = objc_msgSend(v24, sel_imageWithRenderingMode_, 2);

  sub_1B918297C(&v29);
  swift_release();
  return (UIImage)v25;
}

uint64_t TTRIDateIconGenerator.generateDueDateMenuIcon(for:)()
{
  uint64_t v1 = v0;
  sub_1B91F7AD0();
  type metadata accessor for RemindersUICoreBundleLookupObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v4 = (void *)sub_1B996E9B0();
  id v5 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v5);
  double v7 = v6;

  double v8 = *MEMORY[0x1E4FB09C0];
  double v9 = self;
  id v10 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 24.0, v8);
  id v11 = objc_msgSend(v10, sel_fontDescriptor);
  id v12 = objc_msgSend(v11, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

  if (v12)
  {
    id v13 = objc_msgSend(v9, sel_fontWithDescriptor_size_, v12, 0.0);

    id v10 = v13;
  }
  id v14 = objc_msgSend(self, sel_labelColor);
  *(void *)&long long v46 = v7;
  *((void *)&v46 + 1) = v10;
  *(void *)id v47 = v14;
  *(_OWORD *)&v47[8] = xmmword_1B997F0A0;
  *(_OWORD *)&v47[24] = xmmword_1B997F0B0;
  sub_1B98BEE38((uint64_t)&v46, (uint64_t)&v42);
  id v15 = v42;
  long long v40 = v43;
  uint64_t v16 = v44;
  uint64_t v17 = v45;
  objc_msgSend(v7, sel_size);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v19;
  *(void *)(v22 + 24) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = self;
  id v24 = (void *)sub_1B996E9B0();
  uint64_t v25 = swift_allocObject();
  long long v26 = *(_OWORD *)v47;
  *(_OWORD *)(v25 + 16) = v46;
  *(_OWORD *)(v25 + 32) = v26;
  *(_OWORD *)(v25 + 48) = *(_OWORD *)&v47[16];
  *(void *)(v25 + 64) = *(void *)&v47[32];
  *(void *)(v25 + 72) = v3;
  *(void *)(v25 + 80) = v1;
  *(void *)(v25 + 88) = v15;
  *(_OWORD *)(v25 + 96) = v40;
  *(void *)(v25 + 112) = v16;
  *(void *)(v25 + 120) = v17;
  *(void *)(v25 + 128) = sub_1B91F96F4;
  *(void *)(v25 + 136) = v22;
  aBlock[4] = sub_1B91F9764;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B91F9088;
  void aBlock[3] = &block_descriptor_13;
  double v27 = _Block_copy(aBlock);
  id v28 = v3;
  swift_retain();
  sub_1B9182950(&v42);
  swift_retain();
  id v29 = v7;
  id v30 = v10;
  id v31 = v14;
  swift_release();
  id v32 = objc_msgSend(v23, sel__dynamicAssetNamed_generator_, v24, v27);
  _Block_release(v27);

  if (v32)
  {
    id v33 = self;
    id v34 = v32;
    id v35 = objc_msgSend(v33, sel_currentTraitCollection);
    id v36 = objc_msgSend(v34, sel_imageWithTraitCollection_, v35);
  }
  else
  {
    id v36 = 0;
  }
  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v36);
  uint64_t v38 = v37;

  sub_1B918297C(&v42);
  swift_release();

  return v38;
}

uint64_t sub_1B91F8C44(int a1, id a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (a2
    && (id v11 = objc_msgSend(a2, sel_traitCollection)) != 0
    && (id v12 = v11, v13 = objc_msgSend(v11, sel_userInterfaceStyle), v12, v13 == (id)2))
  {
    uint64_t v14 = 2;
  }
  else
  {
    uint64_t v14 = 1;
  }
  id v15 = objc_msgSend(self, sel_traitCollectionWithUserInterfaceStyle_, v14);
  id v33 = 0;
  long long v16 = *(_OWORD *)(a7 + 16);
  v34[0] = *(_OWORD *)a7;
  v34[1] = v16;
  uint64_t v35 = *(void *)(a7 + 32);
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v17 + 32) = v18;
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(a4 + 32);
  *(void *)(v17 + 64) = *(void *)(a4 + 48);
  *(void *)(v17 + 72) = a5;
  *(void *)(v17 + 80) = &v33;
  *(void *)(v17 + 88) = a6;
  long long v19 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)a7;
  *(_OWORD *)(v17 + 112) = v19;
  *(_OWORD *)(v17 + 128) = *(_OWORD *)(a7 + 32);
  *(void *)(v17 + 144) = *(void *)(a7 + 48);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1B91F9800;
  *(void *)(v20 + 24) = v17;
  aBlock[4] = sub_1B919966C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_21;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a5;
  swift_retain();
  sub_1B9182950((id *)v34);
  swift_retain();
  swift_retain();
  sub_1B91F9824(a4);
  swift_release();
  objc_msgSend(v15, sel_performAsCurrentTraitCollection_, v21);
  _Block_release(v21);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v25 = v33;
    if (v33)
    {
      id v25 = objc_msgSend(v33, sel_imageWithRenderingMode_, 1);
      id v26 = v33;
    }
    else
    {
      id v26 = 0;
    }
    id v33 = v25;

    id v27 = v33;
    id v28 = v33;
    _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v27);
    uint64_t v30 = v29;

    id v31 = v33;
    swift_release();

    return v30;
  }
  return result;
}

void sub_1B91F8EF8(uint64_t a1, void *a2, void **a3, uint64_t *a4, uint64_t a5)
{
  id v10 = *(void **)(a1 + 8);
  double v9 = *(void **)(a1 + 16);
  long long v26 = *(_OWORD *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  id v13 = *(void **)a1;
  sub_1B91F9824(a1);
  id v14 = a2;
  id v15 = (void *)sub_1B996E9B0();
  id v16 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v15, v14, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v16);
  long long v18 = v17;

  id v19 = v18;
  v27[0] = v19;
  v27[1] = v10;
  v27[2] = v9;
  long long v28 = v26;
  uint64_t v29 = v11;
  uint64_t v30 = v12;
  id v20 = v10;
  id v21 = v9;
  uint64_t v22 = *a4;
  uint64_t v23 = *(uint64_t (**)(uint64_t (*)(), unsigned char *))(a5 + 40);
  id v32 = v27;
  uint64_t v33 = a5;
  uint64_t v34 = v22;
  uint64_t v24 = v23(sub_1B91F96C4, v31);

  id v25 = *a3;
  *a3 = (void *)v24;
}

id sub_1B91F9088(uint64_t a1, void *a2, void *a3, void *a4)
{
  double v7 = *(uint64_t (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)v7(a2, a3, a4);
  swift_release();

  return v11;
}

uint64_t sub_1B91F9130(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17E8]), sel_initWithBounds_, 0.0, 0.0, a3, a4);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1B91F9874;
  *(void *)(v8 + 24) = v7;
  v25[4] = sub_1B91F988C;
  v25[5] = v8;
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 1107296256;
  v25[2] = sub_1B91F944C;
  v25[3] = &block_descriptor_30;
  id v9 = _Block_copy(v25);
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v6, sel_PDFDataWithActions_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = sub_1B996A5D0();
    unint64_t v14 = v13;

    CFDataRef v15 = (const __CFData *)sub_1B996A5B0();
    id v16 = CGDataProviderCreateWithCFData(v15);

    if (v16)
    {
      uint64_t v17 = CGPDFDocumentCreateWithProvider(v16);
      if (v17)
      {
        long long v18 = v17;
        id v19 = CGPDFDocumentGetPage(v17, 1uLL);
        if (v19)
        {
          id v20 = self;
          id v21 = v19;
          id v19 = (CGPDFPage *)objc_msgSend(v20, sel__imageWithCGPDFPage_, v21);
        }
        else
        {
        }
      }
      else
      {

        id v19 = 0;
      }
    }
    else
    {
      id v19 = 0;
    }
    uint64_t v22 = v19;
    _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v19);
    uint64_t v24 = v23;

    sub_1B90CDBB4(v12, v14);
    swift_release();

    return v24;
  }
  return result;
}

void sub_1B91F93D0(void *a1, void (*a2)(void))
{
  objc_msgSend(a1, sel_beginPage);
  id v4 = objc_msgSend(a1, sel_CGContext);
  a2();
}

void sub_1B91F944C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id sub_1B91F9498(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id result = objc_msgSend(self, sel__currentTraitCollection);
  if (result)
  {
    id v9 = result;
    id v10 = objc_msgSend(self, sel_formatForTraitCollection_, result);

    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v10, a3, a4);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1B91F9928;
    *(void *)(v13 + 24) = v12;
    v16[4] = sub_1B91F9994;
    objc_super v16[5] = v13;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1B91F944C;
    v16[3] = &block_descriptor_40;
    unint64_t v14 = _Block_copy(v16);
    swift_retain();
    swift_release();
    id v15 = objc_msgSend(v11, sel_imageWithActions_, v14);

    _Block_release(v14);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((v10 & 1) == 0) {
      return v15;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t TTRIDateIconGenerator.deinit()
{
  return v0;
}

uint64_t TTRIDateIconGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B91F96AC()
{
  return swift_deallocObject();
}

id sub_1B91F96BC(uint64_t a1, uint64_t a2)
{
  return sub_1B91F9498(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

id sub_1B91F96C8(CGContext *a1)
{
  return sub_1B91F841C(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(double **)(v1 + 32));
}

uint64_t sub_1B91F96D4()
{
  return swift_deallocObject();
}

uint64_t sub_1B91F96E4()
{
  return swift_deallocObject();
}

uint64_t sub_1B91F96F4(uint64_t a1, uint64_t a2)
{
  return sub_1B91F9130(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

uint64_t sub_1B91F96FC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B91F9764(int a1, void *a2, uint64_t a3)
{
  return sub_1B91F8C44(a1, a2, a3, v3 + 16, *(void **)(v3 + 72), *(void *)(v3 + 80), v3 + 88);
}

uint64_t type metadata accessor for TTRIDateIconGenerator()
{
  return self;
}

uint64_t sub_1B91F9798()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1B91F9800()
{
  sub_1B91F8EF8(v0 + 16, *(void **)(v0 + 72), *(void ***)(v0 + 80), *(uint64_t **)(v0 + 88), v0 + 96);
}

uint64_t sub_1B91F9814()
{
  return swift_deallocObject();
}

uint64_t sub_1B91F9824(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  id v4 = *(id *)a1;
  id v5 = v2;
  id v6 = v3;
  return a1;
}

uint64_t sub_1B91F9864()
{
  return swift_deallocObject();
}

void sub_1B91F9874(void *a1)
{
  sub_1B91F93D0(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1B91F987C()
{
  return swift_deallocObject();
}

uint64_t sub_1B91F988C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1B91F98B4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  objc_msgSend(**(id **)(v0 + 16), sel_drawAtPoint_, 0.0, 0.0);
  uint64_t v2 = *(void **)v1;
  double v3 = *(double *)(v1 + 8);
  double v4 = *(double *)(v1 + 16);
  double v5 = *(double *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);

  return objc_msgSend(v2, sel_drawWithRect_options_context_, 2, 0, v3, v4, v5, v6);
}

uint64_t sub_1B91F9918()
{
  return swift_deallocObject();
}

void sub_1B91F9928(void *a1)
{
  uint64_t v2 = *(void (**)(void))(v1 + 16);
  id v3 = objc_msgSend(a1, sel_CGContext);
  v2();
}

uint64_t sub_1B91F9984()
{
  return swift_deallocObject();
}

uint64_t sub_1B91F9994(uint64_t a1)
{
  return sub_1B966F4D8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B91F99B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B91F99DC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  long long v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1B996F410();
  if (!v18) {
    return sub_1B996EF00();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1B996E6B0();
  uint64_t v32 = sub_1B9970620();
  sub_1B99705C0();
  uint64_t v36 = v8;
  uint64_t result = sub_1B996F3D0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      id v21 = (void (*)(char *, void))sub_1B996F4C0();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1B9970600();
      sub_1B996F440();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1B91F9DDC@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1B91FA084()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFDC00);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFDC00);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  swift_getTupleTypeMetadata2();
  sub_1B996EF00();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1B996E730();
  swift_allocObject();
  id v3 = sub_1B9209DA8(a1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t TTRMutableTreeStorage.numberOfChildren(of:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v34 = (void *)*v1;
  uint64_t v4 = v34[10];
  uint64_t v5 = sub_1B9970060();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = v34[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v14);
  uint64_t v17 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    uint64_t v18 = v2[2];
    uint64_t v19 = v34[11];
    uint64_t v20 = v34[13];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v35 = v4;
    uint64_t v36 = v19;
    uint64_t v37 = v9;
    uint64_t v38 = v20;
    uint64_t v21 = type metadata accessor for TTRTreeStorageNode();
    uint64_t v22 = MEMORY[0x1BA9D7D60](v18, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v34;
    (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v4, v9);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v4);
    uint64_t v24 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v16, v12, AssociatedTypeWitness);
    uint64_t v25 = sub_1B91FA624((uint64_t)v16);
    if (v25)
    {
      uint64_t v26 = (uint64_t *)(v25 + *(void *)(*(void *)v25 + 136));
      swift_beginAccess();
      uint64_t v27 = *v26;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_release();
      uint64_t v28 = v23[11];
      uint64_t v29 = v23[13];
      uint64_t v35 = v4;
      uint64_t v36 = v28;
      uint64_t v37 = v9;
      uint64_t v38 = v29;
      uint64_t v30 = type metadata accessor for TTRTreeStorageNode();
      uint64_t v22 = MEMORY[0x1BA9D7D60](v27, v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, AssociatedTypeWitness);
  }
  return v22;
}

uint64_t sub_1B91FA624(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = v1[3];
  long long v10 = *(_OWORD *)(v3 + 96);
  v11[0] = *(_OWORD *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[1] = v10;
  uint64_t v6 = type metadata accessor for TTRTreeStorageNode();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x1BA9D7600](v11, a1, v4, AssociatedTypeWitness, v6, AssociatedConformanceWitness);
  uint64_t v8 = *(void *)&v11[0];
  swift_endAccess();
  return v8;
}

uint64_t TTRMutableTreeStorage.child(_:of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v31 = (void *)*v3;
  uint64_t v5 = v31;
  uint64_t v32 = a1;
  uint64_t v6 = v31[10];
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v30 = (char *)&v30 - v8;
  uint64_t v9 = sub_1B9970060();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = v5[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v30 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a2, v9, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_beginAccess();
    unint64_t v20 = v31[11];
    uint64_t v21 = v31[13];
    uint64_t v36 = v6;
    unint64_t v37 = v20;
    uint64_t v38 = v13;
    uint64_t v39 = v21;
    type metadata accessor for TTRTreeStorageNode();
    sub_1B996EFE0();
    uint64_t v22 = v40;
    swift_endAccess();
    uint64_t v23 = v22 + *(void *)(*(void *)v22 + 120);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v34, v23, v6);
    return swift_release();
  }
  else
  {
    uint64_t v25 = v31;
    (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v6, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v19, v15, AssociatedTypeWitness);
    if (sub_1B91FA624((uint64_t)v19))
    {
      swift_beginAccess();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_release();
      unint64_t v26 = v25[11];
      uint64_t v27 = v25[13];
      uint64_t v36 = v6;
      unint64_t v37 = v26;
      uint64_t v38 = v13;
      uint64_t v39 = v27;
      type metadata accessor for TTRTreeStorageNode();
      sub_1B996EFE0();
      swift_bridgeObjectRelease();
      uint64_t v28 = v40 + *(void *)(*(void *)v40 + 120);
      swift_beginAccess();
      uint64_t v29 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v28, v6);
      swift_release();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v19, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v34, v29, v6);
    }
    else
    {
      uint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      sub_1B99704B0();
      sub_1B996EB60();
      sub_1B9970B50();
      sub_1B996EB60();
      uint64_t result = sub_1B99708A0();
      __break(1u);
    }
  }
  return result;
}

uint64_t TTRMutableTreeStorage.children(of:)(uint64_t a1)
{
  uint64_t v29 = (void *)*v1;
  uint64_t v3 = v29[10];
  uint64_t v4 = sub_1B9970060();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = v29[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, v4, v13);
  uint64_t v16 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_beginAccess();
    uint64_t v17 = v29[11];
    uint64_t v18 = v29[13];
    uint64_t v19 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v20 = sub_1B9209ED0(v19, v3, v17, v8, v18);
    swift_bridgeObjectRelease();
    return v20;
  }
  uint64_t v21 = v29;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v3, v8);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v3);
  uint64_t v22 = AssociatedTypeWitness;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v11, AssociatedTypeWitness);
  uint64_t v23 = sub_1B91FA624((uint64_t)v15);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(v23 + *(void *)(*(void *)v23 + 136));
    swift_beginAccess();
    uint64_t v25 = *v24;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    uint64_t v20 = sub_1B9209ED0(v25, v3, v21[11], v8, v21[13]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v22);
    return v20;
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_1B99704B0();
  sub_1B996EB60();
  sub_1B9970B50();
  sub_1B996EB60();
  uint64_t result = sub_1B99708A0();
  __break(1u);
  return result;
}

uint64_t TTRMutableTreeStorage.itemsFromNodes(_:)(uint64_t a1)
{
  return sub_1B9209ED0(a1, *(void *)(*(void *)v1 + 80), *(void *)(*(void *)v1 + 88), *(void *)(*(void *)v1 + 96), *(void *)(*(void *)v1 + 104));
}

uint64_t TTRMutableTreeStorage.parent(of:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v16 - v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 24))(v4, v3, v7);
  uint64_t v10 = sub_1B91FA624((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
  if (v10 && (uint64_t Strong = swift_weakLoadStrong(), swift_release(), Strong))
  {
    uint64_t v12 = Strong + *(void *)(*(void *)Strong + 120);
    swift_beginAccess();
    uint64_t v13 = *(void *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a1, v12, v4);
    swift_release();
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v13 = *(void *)(v4 - 8);
    uint64_t v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v14, 1, v4);
}

uint64_t sub_1B91FB35C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v45 = a3;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B30C8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - v19;
  char v46 = 0;
  sub_1B90CCA04(a1, (uint64_t)v14, &qword_1EB9B30C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_1B90CCA68((uint64_t)v14, &qword_1EB9B30C8);
    swift_beginAccess();
    unint64_t v21 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B91FBEE8(v21, MEMORY[0x1E4FBC860], (uint64_t)&v46, a2, v45);
    return swift_bridgeObjectRelease();
  }
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v17);
  sub_1B920AC24((uint64_t)v14, type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1B920ACE8((uint64_t)v17, (uint64_t)v20, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v44 = a2;
  uint64_t v22 = sub_1B9770170((uint64_t)v20);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v43 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4C90);
    uint64_t v24 = *(void *)(v6 + 72);
    unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1B997AB90;
    uint64_t v27 = v23 + *(void *)(*(void *)v23 + 120);
    swift_beginAccess();
    sub_1B920AC84(v27, v26 + v25);
    swift_retain();
    for (uint64_t i = swift_weakLoadStrong(); i; uint64_t i = swift_weakLoadStrong())
    {
      uint64_t v29 = i + *(void *)(*(void *)i + 120);
      swift_beginAccess();
      sub_1B920AC84(v29, (uint64_t)v11);
      unint64_t v31 = *(void *)(v26 + 16);
      unint64_t v30 = *(void *)(v26 + 24);
      if (v31 >= v30 >> 1) {
        uint64_t v26 = sub_1B918C64C(v30 > 1, v31 + 1, 1, v26);
      }
      *(void *)(v26 + 16) = v31 + 1;
      sub_1B920ACE8((uint64_t)v11, v26 + v25 + v31 * v24, type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
    }
    swift_release();
    unint64_t v32 = *(void *)(v26 + 16);
    if (v32 < 2)
    {
LABEL_14:
      uint64_t v39 = (unint64_t *)(v23 + *(void *)(*(void *)v23 + 136));
      swift_beginAccess();
      unint64_t v40 = *v39;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B91FBEE8(v40, v26, (uint64_t)&v46, v44, v45);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B920AC24((uint64_t)v43, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      return swift_bridgeObjectRelease();
    }
    unint64_t v33 = v32 - 1;
    uint64_t v34 = v26 + v25;
    uint64_t v35 = v26 + v25 + v24 * (v32 - 1);
    uint64_t v36 = 1;
    while (1)
    {
      unint64_t v37 = *(void *)(v26 + 16);
      if (v36 - 1 >= v37) {
        break;
      }
      sub_1B920AC84(v34, (uint64_t)v8);
      if (v33 >= v37) {
        goto LABEL_17;
      }
      sub_1B920ADCC(v35, v34);
      if (v33 >= *(void *)(v26 + 16)) {
        goto LABEL_18;
      }
      sub_1B920AE30((uint64_t)v8, v35);
      --v33;
      v35 -= v24;
      v34 += v24;
      if (v36++ >= (uint64_t)v33) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  uint64_t result = sub_1B99708A0();
  __break(1u);
  return result;
}

uint64_t TTRMutableTreeStorage.traverseDescendants(of:using:)(uint64_t a1, void (*a2)(char *, char *, uint64_t, uint64_t, unsigned char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 80);
  uint64_t v8 = sub_1B9970060();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = *(void *)(v6 + 96);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v34 - v18;
  char v39 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a1, v8, v17);
  uint64_t v20 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_beginAccess();
    uint64_t v21 = v4[2];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v22 = sub_1B996EF00();
    sub_1B91FC2B8(v21, v22, &v39, v36, v37);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v7, v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v7);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v19, v15, AssociatedTypeWitness);
  uint64_t v23 = sub_1B91FA624((uint64_t)v19);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_1B9209CE4(v7, v7);
    swift_allocObject();
    uint64_t v25 = sub_1B996EE80();
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(*(void *)v24 + 120);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v27, v28, v7);
    uint64_t v29 = sub_1B996EFA0();
    uint64_t v38 = v25;
    MEMORY[0x1F4188790](v29);
    sub_1B9209F94(v24, (void (*)(uint64_t, char *))sub_1B9209F8C);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1B996E970();
    unint64_t v30 = (uint64_t *)(v24 + *(void *)(*(void *)v24 + 136));
    swift_beginAccess();
    uint64_t v31 = *v30;
    uint64_t v32 = v38;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B91FC2B8(v31, v32, &v39, v36, v37);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, AssociatedTypeWitness);
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1B99708A0();
  __break(1u);
  return result;
}

uint64_t sub_1B91FBDD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 80);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v7 = v6 + *(void *)(v5 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_1B996EFA0();
  return sub_1B996EF60();
}

uint64_t sub_1B91FBEE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v32 = (unsigned char *)a3;
  unint64_t v33 = a5;
  uint64_t v29 = a2;
  uint64_t v30 = a4;
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_21:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v9 = sub_1B9970930();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v9)
    {
LABEL_3:
      unint64_t v31 = a1 & 0xC000000000000001;
      uint64_t v10 = 4;
      long long v27 = xmmword_1B997AB90;
      while (1)
      {
        uint64_t v11 = v10 - 4;
        if (v31)
        {
          uint64_t v12 = MEMORY[0x1BA9D9380](v10 - 4, a1);
          uint64_t v13 = v10 - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v10);
          swift_retain();
          uint64_t v13 = v10 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v14 = v12 + *(void *)(*(void *)v12 + 120);
        swift_beginAccess();
        sub_1B920AC84(v14, (uint64_t)v8);
        uint64_t v15 = v12 + *(void *)(*(void *)v12 + 128);
        swift_beginAccess();
        char v16 = *(unsigned char *)(v15 + 8);
        uint64_t v34 = *(void *)v15;
        char v35 = v16;
        __n128 v17 = v32;
        sub_1B978F624((uint64_t)v8, (uint64_t)&v34, (uint64_t)v32, v33);
        sub_1B920AC24((uint64_t)v8, type metadata accessor for TTRAccountsListsViewModel.Item);
        if (*v17 == 1)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        unint64_t v18 = a1;
        uint64_t v19 = (void *)(v12 + *(void *)(*(void *)v12 + 136));
        swift_beginAccess();
        if (*v19 >> 62)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          uint64_t v25 = sub_1B9970930();
          swift_bridgeObjectRelease();
          if (!v25)
          {
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
        }
        else if (!*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_4;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4C90);
        unint64_t v20 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v27;
        sub_1B920AC84(v14, v21 + v20);
        uint64_t v34 = v29;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B91226EC(v21);
        uint64_t v22 = v34;
        uint64_t v23 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v24 = v32;
        sub_1B91FBEE8(v23, v22, v32, v30, v33);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*v24) {
          return swift_bridgeObjectRelease();
        }
LABEL_5:
        ++v10;
        a1 = v18;
        if (v13 == v9) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B91FC2B8(uint64_t a1, uint64_t a2, unsigned char *a3, void (*a4)(char *, char *, uint64_t, uint64_t, unsigned char *), uint64_t a5)
{
  uint64_t v43 = (void (*)(char *, char *, uint64_t, uint64_t, unsigned char *))a4;
  uint64_t v44 = a5;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v6 = *(void *)(*(void *)(*(void *)v5 + 88) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v33 = v5;
  uint64_t v10 = *(void *)(v9 + 80);
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v45 = v14;
  uint64_t v49 = v10;
  uint64_t v50 = v15;
  uint64_t v40 = v15;
  long long v51 = *(_OWORD *)(v16 + 96);
  type metadata accessor for TTRTreeStorageNode();
  uint64_t v17 = sub_1B996EFA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1BA9D7B90](v46, v17, WitnessTable);
  uint64_t v45 = v46[0];
  sub_1B9970910();
  sub_1B99708E0();
  uint64_t v39 = v17;
  uint64_t v38 = sub_1B9970900();
  sub_1B99708F0();
  uint64_t v19 = v48;
  if (v48)
  {
    uint64_t v20 = v47;
    uint64_t v21 = (void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v36 = (void (**)(char *, uint64_t))(v6 + 8);
    char v35 = (void (**)(char *, uint64_t))(v34 + 8);
    while (1)
    {
      uint64_t v22 = v19 + *(void *)(*(void *)v19 + 120);
      swift_beginAccess();
      uint64_t v23 = *v21;
      (*v21)(v13, v22, v10);
      uint64_t v24 = v19 + *(void *)(*(void *)v19 + 128);
      swift_beginAccess();
      uint64_t v25 = v40;
      (*v37)(v8, v24, v40);
      uint64_t v26 = v42;
      v43(v13, v8, v20, v41, v42);
      (*v36)(v8, v25);
      (*v35)(v13, v10);
      if (*v26) {
        break;
      }
      long long v27 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 136));
      swift_beginAccess();
      uint64_t v47 = *v27;
      swift_getWitnessTable();
      if (sub_1B996F480())
      {
        swift_release();
      }
      else
      {
        sub_1B9209CE4(v10, v10);
        swift_allocObject();
        sub_1B996EE80();
        v23(v28, v22, v10);
        sub_1B996EFA0();
        uint64_t v29 = sub_1B996EEE0();
        swift_bridgeObjectRelease();
        uint64_t v30 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        unint64_t v31 = v42;
        sub_1B91FC2B8(v30, v29, v42, v43, v44);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*v31 == 1) {
          return swift_bridgeObjectRelease();
        }
      }
      sub_1B99708F0();
      uint64_t v20 = v47;
      uint64_t v19 = v48;
      if (!v48) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t TTRMutableTreeStorage.item(withID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1B91FA624(a1);
  if (v5)
  {
    uint64_t v6 = v5 + *(void *)(*(void *)v5 + 120);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v6, v7);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 56);
    return v10(a2, 1, 1);
  }
}

uint64_t TTRMutableTreeStorage.auxiliaryData(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 24))(v5, v4, v8);
  uint64_t v11 = sub_1B91FA624((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  if (!v11) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 88) - 8) + 56))(a1, 1, 1);
  }
  uint64_t v12 = v11 + *(void *)(*(void *)v11 + 128);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v3 + 88);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a1, v12, v13);
  swift_release();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
}

uint64_t TTRMutableTreeStorage.setAuxiliaryData(_:for:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 24))(v5, v4, v8);
  uint64_t v11 = sub_1B91FA624((uint64_t)v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  if (v11)
  {
    uint64_t v13 = v11 + *(void *)(*(void *)v11 + 128);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 88) - 8) + 24))(v13, a1);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t TTRMutableTreeStorage.editAuxiliaryData(for:using:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(*(void *)v2 + 96);
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 24))(v5, v4, v8);
  uint64_t v11 = sub_1B91FA624((uint64_t)v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  if (v11)
  {
    uint64_t v13 = v11 + *(void *)(*(void *)v11 + 128);
    swift_beginAccess();
    a2(v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t TTRMutableTreeStorage.insertNewItem(with:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v10 = *(_OWORD *)(*(void *)v4 + 96);
  v11[0] = *(_OWORD *)(*(void *)v4 + 80);
  swift_getAssociatedTypeWitness();
  v11[1] = v10;
  type metadata accessor for TTRTreeStorageNode();
  swift_getAssociatedConformanceWitness();
  *(void *)&v11[0] = sub_1B996E6A0();
  uint64_t v8 = sub_1B91FD038(a1, (uint64_t)v11);
  if (sub_1B91FD1D0(v8, a2, a3)) {
    sub_1B91FD758();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B91FD038(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 80);
  type metadata accessor for TTRTreeStorageNode();
  uint64_t v12 = sub_1B996E6B0();
  uint64_t v11 = v5;
  uint64_t v6 = type metadata accessor for TTRTreeStorageNodeValue();
  sub_1B9970B30();
  uint64_t v7 = *(void *)(v6 - 8);
  swift_allocObject();
  uint64_t v8 = sub_1B996EE80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1B996EFA0();
  sub_1B9200F30(v8, (uint64_t)&v12, a2);
  swift_bridgeObjectRelease();
  sub_1B996EFA0();
  swift_getWitnessTable();
  uint64_t result = sub_1B996F470();
  if (v11)
  {
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B91FD1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v43 = (void *)*v3;
  uint64_t v4 = v43[12];
  uint64_t v5 = v43[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_1B9970060();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v41 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v41 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v45, v9, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v47[7] = v46;
    swift_beginAccess();
    uint64_t v20 = v43[11];
    uint64_t v21 = v43[13];
    swift_retain();
    v47[0] = v5;
    v47[1] = v20;
    v47[2] = v4;
    v47[3] = v21;
    type metadata accessor for TTRTreeStorageNode();
    sub_1B996EFA0();
    sub_1B996EF70();
    swift_endAccess();
    return 1;
  }
  uint64_t v22 = v46;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v12, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v5, v4);
  uint64_t v23 = sub_1B91FA624((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  if (v23)
  {
    sub_1B91CEC94(v22);
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v5);
    return 1;
  }
  uint64_t v25 = v4;
  if (qword_1E9EFA2D0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1B996D300();
  __swift_project_value_buffer(v26, (uint64_t)qword_1E9EFDC00);
  long long v27 = v41;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v41, v19, v5);
  uint64_t v28 = sub_1B996D2F0();
  os_log_type_t v29 = sub_1B996F640();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = v27;
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = v25;
    uint64_t v46 = (uint64_t)v19;
    v47[0] = v32;
    uint64_t v34 = v32;
    *(_DWORD *)unint64_t v31 = 136315138;
    char v35 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 32);
    uint64_t v36 = v30;
    uint64_t v37 = v35(v5, v33);
    v47[4] = sub_1B90D2A1C(v37, v38, v47);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v13 + 8);
    v39(v36, v5);
    _os_log_impl(&dword_1B90A0000, v28, v29, "Cannot find node {item: %s}", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v34, -1, -1);
    MEMORY[0x1BA9DB030](v31, -1, -1);

    uint64_t v40 = (char *)v46;
  }
  else
  {

    uint64_t v39 = *(void (**)(char *, uint64_t))(v13 + 8);
    v39(v27, v5);
    uint64_t v40 = v19;
  }
  v39(v40, v5);
  return 0;
}

uint64_t sub_1B91FD758()
{
  return swift_endAccess();
}

uint64_t TTRMutableTreeStorage.insertNewItems(with:in:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  long long v5 = *(_OWORD *)(*(void *)v3 + 96);
  long long v45 = *(_OWORD *)(*(void *)v3 + 80);
  long long v46 = v5;
  uint64_t v6 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)v34 - v7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1B9970060();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v34 - v10;
  uint64_t v12 = sub_1B996EFA0();
  uint64_t v13 = sub_1B996AC10();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_1B920AF48((unint64_t *)&qword_1EB9B1AB8);
  *(void *)&long long v45 = v12;
  *((void *)&v45 + 1) = v13;
  *(void *)&long long v46 = WitnessTable;
  *((void *)&v46 + 1) = v15;
  uint64_t v35 = sub_1B9970530();
  MEMORY[0x1F4188790](v35);
  v34[1] = (char *)v34 - v16;
  uint64_t v43 = (char *)v12;
  *(void *)&long long v45 = v12;
  *((void *)&v45 + 1) = v13;
  uint64_t v41 = v13;
  uint64_t v36 = v15;
  uint64_t v37 = WitnessTable;
  *(void *)&long long v46 = WitnessTable;
  *((void *)&v46 + 1) = v15;
  uint64_t v44 = sub_1B9970520();
  uint64_t v38 = *(void *)(v44 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v44);
  uint64_t v19 = (char *)v34 - v18;
  uint64_t v20 = a1;
  uint64_t v21 = MEMORY[0x1BA9D7D60](a1, v6, v17);
  if (v21 != sub_1B996AB30())
  {
    if (qword_1E9EFA2D0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1B996D300();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E9EFDC00);
    uint64_t v23 = sub_1B996D2F0();
    os_log_type_t v24 = sub_1B996F650();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1B90A0000, v23, v24, "newItems and indexes have different count", v25, 2u);
      MEMORY[0x1BA9DB030](v25, -1, -1);
    }
  }
  *(void *)&long long v45 = v20;
  sub_1B9970C50();
  sub_1B9970500();
  uint64_t v43 = v19;
  sub_1B9970510();
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48);
  uint64_t v41 = v3;
  unsigned int v27 = v26(v11, 1, TupleTypeMetadata2);
  uint64_t v28 = (uint64_t)v39;
  if (v27 != 1)
  {
    os_log_type_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
    uint64_t v30 = (void (**)(uint64_t, uint64_t))(v40 + 8);
    do
    {
      unint64_t v31 = v26;
      uint64_t v32 = *(void *)&v11[*(int *)(TupleTypeMetadata2 + 48)];
      v29(v28, v11, v6);
      TTRMutableTreeStorage.insertNewItem(with:in:at:)(v28, v42, v32);
      (*v30)(v28, v6);
      sub_1B9970510();
      uint64_t v26 = v31;
    }
    while (v31(v11, 1, TupleTypeMetadata2) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v43, v44);
}

uint64_t TTRMutableTreeStorage.deleteItems(at:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B91FDE0C(a1, a2);
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for TTRTreeStorageNode();
    sub_1B91CF6E0(v4, (void (*)(uint64_t))sub_1B920A038, v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B91FDE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)v2;
  long long v5 = *v2;
  uint64_t v6 = *v2;
  uint64_t v67 = a1;
  uint64_t v68 = v6;
  uint64_t v7 = *((void *)v5 + 10);
  uint64_t v8 = sub_1B9970060();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v63 - v10;
  uint64_t v12 = *((void *)v5 + 12);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v64 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v65 = (char *)&v63 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v63 - v18;
  __n128 v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v63 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, a2, v8, v21);
  uint64_t v24 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v25 = sub_1B996AC10();
    uint64_t v26 = *((void *)v68 + 11);
    uint64_t v27 = *((void *)v68 + 13);
    uint64_t v70 = v7;
    uint64_t v71 = v26;
    uint64_t v72 = v12;
    uint64_t v73 = v27;
    uint64_t v28 = type metadata accessor for TTRTreeStorageNode();
    uint64_t v29 = sub_1B920AF48((unint64_t *)&qword_1EB9B1AC0);
    uint64_t v30 = v67;
    uint64_t v32 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920AF28, v3, v25, v28, MEMORY[0x1E4FBC248], v29, MEMORY[0x1E4FBC278], v31);
    swift_beginAccess();
    uint64_t v33 = sub_1B996EFA0();
    Array.remove(at:)(v30, v33);
    swift_endAccess();
  }
  else
  {
    uint64_t v34 = v68;
    (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v7, v12);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v7);
    uint64_t v35 = v66;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v23, v19, AssociatedTypeWitness);
    uint64_t v36 = sub_1B91FA624((uint64_t)v23);
    uint64_t v37 = v35;
    if (v36)
    {
      uint64_t v38 = v36;
      uint64_t v39 = sub_1B996AC10();
      uint64_t v40 = *((void *)v34 + 11);
      uint64_t v41 = *((void *)v34 + 13);
      uint64_t v70 = v7;
      uint64_t v71 = v40;
      uint64_t v72 = v12;
      uint64_t v73 = v41;
      uint64_t v42 = type metadata accessor for TTRTreeStorageNode();
      uint64_t v43 = sub_1B920AF48((unint64_t *)&qword_1EB9B1AC0);
      uint64_t v44 = v42;
      uint64_t v45 = v67;
      uint64_t v32 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920AF8C, v38, v39, v44, MEMORY[0x1E4FBC248], v43, MEMORY[0x1E4FBC278], v46);
      sub_1B91CEEA0(v45);
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, AssociatedTypeWitness);
    }
    else
    {
      if (qword_1E9EFA2D0 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1B996D300();
      __swift_project_value_buffer(v47, (uint64_t)qword_1E9EFDC00);
      uint64_t v48 = v35;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      uint64_t v50 = v65;
      long long v51 = v23;
      long long v52 = v23;
      uint64_t v53 = AssociatedTypeWitness;
      v49(v65, v52, AssociatedTypeWitness);
      uint64_t v54 = sub_1B996D2F0();
      os_log_type_t v55 = sub_1B996F640();
      if (os_log_type_enabled(v54, v55))
      {
        long long v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        uint64_t v70 = v67;
        *(_DWORD *)long long v56 = 136315138;
        long long v63 = v56 + 4;
        uint64_t v68 = v51;
        v49(v64, v50, AssociatedTypeWitness);
        uint64_t v57 = sub_1B996EA30();
        uint64_t v69 = sub_1B90D2A1C(v57, v58, &v70);
        sub_1B99700D0();
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void (**)(char *, uint64_t))(v48 + 8);
        v59(v50, AssociatedTypeWitness);
        _os_log_impl(&dword_1B90A0000, v54, v55, "Cannot find node {itemID: %s}", v56, 0xCu);
        uint64_t v60 = v67;
        swift_arrayDestroy();
        MEMORY[0x1BA9DB030](v60, -1, -1);
        MEMORY[0x1BA9DB030](v56, -1, -1);

        v59(v68, v53);
      }
      else
      {

        id v61 = *(void (**)(char *, uint64_t))(v35 + 8);
        v61(v50, AssociatedTypeWitness);
        v61(v51, AssociatedTypeWitness);
      }
      return 0;
    }
  }
  return v32;
}

uint64_t sub_1B91FE4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 96);
  uint64_t v7 = *(void *)(*v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __n128 v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v17 - v9, a2, AssociatedTypeWitness, v11);
    uint64_t v17 = a1;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v5 + 88);
    uint64_t v13 = *(void *)(v5 + 104);
    swift_retain();
    uint64_t v18 = v7;
    uint64_t v19 = v12;
    uint64_t v20 = v6;
    uint64_t v21 = v13;
    type metadata accessor for TTRTreeStorageNode();
    swift_getAssociatedConformanceWitness();
    sub_1B996E7D0();
    sub_1B996E7F0();
    return swift_endAccess();
  }
  else
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(v5 + 88);
    uint64_t v16 = *(void *)(v5 + 104);
    uint64_t v18 = v7;
    uint64_t v19 = v15;
    uint64_t v20 = v6;
    uint64_t v21 = v16;
    type metadata accessor for TTRTreeStorageNode();
    swift_getAssociatedConformanceWitness();
    sub_1B996E7D0();
    sub_1B996E700();
    swift_endAccess();
    return swift_release();
  }
}

uint64_t TTRMutableTreeStorage.delete(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  sub_1B9970060();
  uint64_t v5 = type metadata accessor for TTRParentAndChildIndexes();
  uint64_t v6 = sub_1B9970060();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - v8;
  sub_1B9209CE4(v4, v4);
  uint64_t v10 = *(void *)(v4 - 8);
  swift_allocObject();
  uint64_t v11 = sub_1B996EE80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, a1, v4);
  sub_1B996EFA0();
  uint64_t v13 = TTRMutableTreeStorage.delete(_:)(v11);
  swift_bridgeObjectRelease();
  v17[1] = v13;
  sub_1B996EFA0();
  swift_getWitnessTable();
  sub_1B996F470();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v17[0], 1, 1, TupleTypeMetadata2);
  }
  else
  {
    TTRParentAndChildIndexes.first.getter(v5, v17[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v5);
  }
}

uint64_t TTRMutableTreeStorage.delete(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_1B9970060();
  uint64_t v6 = *(uint64_t **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v35 - v7;
  uint64_t v44 = sub_1B996AC10();
  uint64_t v36 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v5;
  uint64_t v9 = type metadata accessor for TTRParentAndChildIndexes();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v35 = *(void *)(v47 + 64);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v49 = (char *)&v35 - v11;
  uint64_t v12 = MEMORY[0x1BA9D7D60](a1, v4, v10);
  if (v12 < 2)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    uint64_t v46 = v6;
    *(void *)&long long v42 = &v35;
    uint64_t v51 = a1;
    MEMORY[0x1F4188790](v12);
    uint64_t v13 = *(void *)(v3 + 88);
    *(&v35 - 4) = v4;
    *(&v35 - 3) = v13;
    long long v41 = *(_OWORD *)(v3 + 96);
    *((_OWORD *)&v35 - 1) = v41;
    sub_1B996EFA0();
    swift_getAssociatedTypeWitness();
    swift_getWitnessTable();
    *(void *)&long long v41 = v3;
    swift_getAssociatedConformanceWitness();
    uint64_t v14 = sub_1B996ED10();
    uint64_t v51 = a1;
    MEMORY[0x1F4188790](v14);
    *(&v35 - 2) = (uint64_t)v1;
    *(&v35 - 1) = v15;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_getWitnessTable();
    uint64_t v3 = v41;
    a1 = sub_1B9970590();
    swift_bridgeObjectRelease();
    uint64_t v6 = v46;
  }
  uint64_t v51 = a1;
  sub_1B996EFA0();
  swift_getTupleTypeMetadata2();
  swift_getWitnessTable();
  uint64_t v46 = v1;
  uint64_t v16 = sub_1B996ED60();
  uint64_t v17 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = *(void *)(v3 + 88);
  *(&v35 - 4) = v4;
  *(&v35 - 3) = v18;
  long long v42 = *(_OWORD *)(v3 + 96);
  *((_OWORD *)&v35 - 1) = v42;
  KeyPath = (void *)swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  sub_1B9970060();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = static TTRParentAndChildIndexes.grouped<A>(_:byParentProperty:)(v16, KeyPath, WitnessTable);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (!MEMORY[0x1BA9D7DA0](v22, v9))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return v21;
  }
  uint64_t v23 = 0;
  *(void *)&long long v41 = &v49[*(int *)(v9 + 28)];
  *(void *)&long long v42 = v47 + 16;
  uint64_t v39 = (void (**)(uint64_t, char *, uint64_t))(v6 + 2);
  uint64_t v40 = (void (**)(uint64_t, void, uint64_t))(v36 + 16);
  uint64_t v37 = (void (**)(uint64_t, uint64_t))(v6 + 1);
  uint64_t v38 = (void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v24 = (void (**)(uint64_t, uint64_t))(v36 + 8);
  uint64_t v25 = (uint64_t)v43;
  uint64_t v26 = v44;
  uint64_t v27 = (uint64_t)v45;
  while (1)
  {
    char v28 = sub_1B996EF20();
    sub_1B996EE90();
    if (v28)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v49, v21+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v23, v9);
      uint64_t v29 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    uint64_t result = sub_1B9970550();
    if (v35 != 8) {
      break;
    }
    uint64_t v51 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))v42)(v49, &v51, v9);
    swift_unknownObjectRelease();
    uint64_t v29 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_8:
    (*v40)(v25, v41, v26);
    uint64_t v30 = v49;
    uint64_t v31 = v9;
    uint64_t v32 = v48;
    (*v39)(v27, v49, v48);
    (*v38)(v30, v31);
    TTRMutableTreeStorage.deleteItems(at:in:)(v25, v27);
    uint64_t v33 = v32;
    uint64_t v9 = v31;
    (*v37)(v27, v33);
    (*v24)(v25, v26);
    ++v23;
    if (v29 == MEMORY[0x1BA9D7DA0](v21, v31)) {
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B91FF134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 96);
  uint64_t v5 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  __n128 v10 = (char *)&v15 - v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 24))(v5, v4, v8);
  uint64_t v11 = sub_1B91FA624((uint64_t)v10);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  if (v11)
  {
    char v16 = 0;
    MEMORY[0x1F4188790](v12);
    *(&v15 - 2) = a3;
    *(&v15 - 1) = (uint64_t)&v16;
    sub_1B9209F94(v11, (void (*)(uint64_t, char *))sub_1B920AF20);
    swift_release();
    char v13 = v16 ^ 1;
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1B91FF2F8(uint64_t a1, unsigned char *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1B91CE988(v10);
  swift_getAssociatedConformanceWitness();
  char v11 = sub_1B996F2F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  if (v11)
  {
    *a4 = 1;
    *a2 = 1;
  }
  return result;
}

uint64_t TTRMutableTreeStorage.moveItem(at:in:to:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v93 = a4;
  uint64_t v80 = a3;
  uint64_t v86 = a1;
  uint64_t v6 = *v4;
  uint64_t v7 = *v4;
  uint64_t v8 = sub_1B996AC10();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v87 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v6 + 80);
  uint64_t v11 = sub_1B9970060();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v74 - v15;
  uint64_t v17 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v81 = (char *)&v74 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v79 = (char *)&v74 - v23;
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v74 - v26;
  char v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v90 = a2;
  uint64_t v83 = v28;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v28)(v16, a2, v11, v25);
  uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v29 = v82(v16, 1, v10);
  uint64_t v91 = (uint64_t)v4;
  uint64_t v92 = v7;
  if (v29 == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    uint64_t v30 = v17;
  }
  else
  {
    uint64_t v78 = v11;
    uint64_t v77 = v12;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v27, v16, v10);
    uint64_t v94 = v4;
    uint64_t WitnessTable = swift_getWitnessTable();
    if (TTRTreeContentsQueryable.contains(_:)((uint64_t)v27, v7, WitnessTable))
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v10);
      uint64_t v30 = v17;
    }
    else
    {
      uint64_t v32 = v17;
      if (qword_1E9EFA2D0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1B996D300();
      __swift_project_value_buffer(v33, (uint64_t)qword_1E9EFDC00);
      uint64_t v30 = v17;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      uint64_t v35 = v79;
      uint64_t v36 = v10;
      v34(v79, v27, v10);
      uint64_t v37 = sub_1B996D2F0();
      os_log_type_t v38 = sub_1B996F640();
      int v39 = v38;
      if (os_log_type_enabled(v37, v38))
      {
        int v76 = v39;
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v75 = v41;
        *(_DWORD *)uint64_t v40 = 136315138;
        uint64_t v94 = (void *)v41;
        uint64_t v74 = v40 + 4;
        uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)(v92 + 96) + 32))(v36);
        uint64_t v97 = sub_1B90D2A1C(v42, v43, (uint64_t *)&v94);
        sub_1B99700D0();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
        v44(v35, v36);
        _os_log_impl(&dword_1B90A0000, v37, (os_log_type_t)v76, "Invalid oldParent {oldParent: %s}", v40, 0xCu);
        uint64_t v45 = v75;
        swift_arrayDestroy();
        MEMORY[0x1BA9DB030](v45, -1, -1);
        MEMORY[0x1BA9DB030](v40, -1, -1);

        v44(v27, v36);
      }
      else
      {

        uint64_t v46 = *(void (**)(char *, uint64_t))(v32 + 8);
        v46(v35, v36);
        v46(v27, v36);
        uint64_t v30 = v32;
      }
      uint64_t v10 = v36;
    }
    uint64_t v12 = v77;
    uint64_t v11 = v78;
  }
  uint64_t v47 = v84;
  uint64_t v48 = v93;
  v83(v84, v93, v11);
  int v49 = v82(v47, 1, v10);
  uint64_t v50 = v85;
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v47, v11);
    uint64_t v51 = v92;
  }
  else
  {
    uint64_t v52 = (uint64_t)v81;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v81, v47, v10);
    uint64_t v51 = v92;
    uint64_t v94 = (void *)v91;
    uint64_t v53 = swift_getWitnessTable();
    if (TTRTreeContentsQueryable.contains(_:)(v52, v51, v53))
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v52, v10);
    }
    else
    {
      if (qword_1E9EFA2D0 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1B996D300();
      __swift_project_value_buffer(v54, (uint64_t)qword_1E9EFDC00);
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v50, v52, v10);
      os_log_type_t v55 = sub_1B996D2F0();
      os_log_type_t v56 = sub_1B996F640();
      int v57 = v56;
      unint64_t v58 = v50;
      if (os_log_type_enabled(v55, v56))
      {
        LODWORD(v84) = v57;
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = v10;
        uint64_t v61 = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v94 = (void *)v61;
        uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))(v59 + 4);
        uint64_t v62 = (*(uint64_t (**)(uint64_t))(*(void *)(v51 + 96) + 32))(v60);
        uint64_t v97 = sub_1B90D2A1C(v62, v63, (uint64_t *)&v94);
        sub_1B99700D0();
        swift_bridgeObjectRelease();
        uint64_t v64 = *(void (**)(char *, uint64_t))(v30 + 8);
        v64(v50, v60);
        _os_log_impl(&dword_1B90A0000, v55, (os_log_type_t)v84, "Invalid newParent {newParent: %s}", v59, 0xCu);
        swift_arrayDestroy();
        uint64_t v65 = v61;
        uint64_t v10 = v60;
        MEMORY[0x1BA9DB030](v65, -1, -1);
        uint64_t v66 = v59;
        uint64_t v48 = v93;
        MEMORY[0x1BA9DB030](v66, -1, -1);

        v64(v81, v60);
      }
      else
      {

        uint64_t v67 = *(void (**)(char *, uint64_t))(v30 + 8);
        v67(v58, v10);
        v67((char *)v52, v10);
      }
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4CC8);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_1B997AB90;
  *(void *)(v68 + 32) = v86;
  uint64_t v94 = (void *)v68;
  sub_1B920AF48((unint64_t *)&qword_1EB9B1AC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B49E0);
  sub_1B90C3338((unint64_t *)&qword_1EB9B49E8, &qword_1EB9B49E0);
  uint64_t v69 = (uint64_t)v87;
  uint64_t v70 = v89;
  sub_1B99702A0();
  uint64_t v71 = sub_1B91FDE0C(v69, v90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v69, v70);
  if (v71)
  {
    uint64_t v73 = *(void *)(v51 + 104);
    uint64_t v94 = (void *)v10;
    long long v95 = *(_OWORD *)(v51 + 88);
    uint64_t v96 = v73;
    uint64_t v97 = v71;
    type metadata accessor for TTRTreeStorageNode();
    sub_1B996EFA0();
    swift_getWitnessTable();
    sub_1B996F470();
    uint64_t result = swift_bridgeObjectRelease();
    if (v94)
    {
      sub_1B91FD1D0((uint64_t)v94, v48, v80);
      return swift_release();
    }
  }
  return result;
}

void TTRMutableTreeStorage.replace(_:with:replacesChildren:)(unint64_t a1, void (**a2)(char *, char *, uint64_t), int a3)
{
  uint64_t v4 = (uint64_t)v3;
  LODWORD(v124) = a3;
  uint64_t v126 = a2;
  unint64_t v5 = a1;
  uint64_t v130 = (void *)*v3;
  uint64_t v6 = v130;
  uint64_t v7 = v130[10];
  unint64_t v125 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v123 = (void (**)(uint64_t, char *, uint64_t))((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v115 = (char *)&v101 - v10;
  uint64_t v11 = v6[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = v6[11];
  uint64_t v14 = v6[13];
  uint64_t v137 = v7;
  uint64_t v138 = v13;
  uint64_t v139 = v11;
  uint64_t v140 = v14;
  uint64_t v114 = type metadata accessor for TTRTreeStorageNode();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v118 = sub_1B9970060();
  int64_t v112 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  id v117 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v127 = (char *)&v101 - v18;
  uint64_t v137 = v7;
  uint64_t v138 = v13;
  uint64_t v139 = v11;
  uint64_t v140 = v14;
  uint64_t v131 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t v121 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131);
  uint64_t v20 = (char *)&v101 - v19;
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v132 = (uint64_t)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v101 - v26;
  char v28 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 24);
  uint64_t v119 = v7;
  uint64_t v120 = v11;
  v28(v7, v11, v25);
  uint64_t v29 = sub_1B91FA624((uint64_t)v27);
  uint64_t v122 = v21;
  uint64_t v128 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v129 = v21 + 8;
  v128(v27, AssociatedTypeWitness);
  uint64_t v104 = v29;
  if (v29)
  {
    uint64_t v137 = v4;
    uint64_t v30 = (uint64_t)v130;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v32 = (char *)v126;
    BOOL v33 = TTRTreeContentsQueryable.contains(_:)((uint64_t)v126, v30, WitnessTable);
    if (v33)
    {
      uint64_t v34 = v131;
      if (qword_1E9EFA2D0 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1B996D300();
      __swift_project_value_buffer(v35, (uint64_t)qword_1E9EFDC00);
      uint64_t v36 = v121;
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v20, v32, v34);
      uint64_t v37 = sub_1B996D2F0();
      os_log_type_t v38 = sub_1B996F650();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v113 = TupleTypeMetadata2;
        uint64_t v40 = (uint8_t *)v39;
        uint64_t v41 = swift_slowAlloc();
        uint64_t v123 = (void (**)(uint64_t, char *, uint64_t))v41;
        *(_DWORD *)uint64_t v40 = 136315138;
        uint64_t v137 = v41;
        uint64_t v116 = (uint64_t)(v40 + 4);
        uint64_t v42 = (*(uint64_t (**)(uint64_t))(v120 + 32))(v119);
        uint64_t v133 = sub_1B90D2A1C(v42, v43, &v137);
        sub_1B99700D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v131);
        _os_log_impl(&dword_1B90A0000, v37, v38, "The ID of new item is already used by another item in the tree {item: %s}", v40, 0xCu);
        uint64_t v44 = v123;
        swift_arrayDestroy();
        MEMORY[0x1BA9DB030](v44, -1, -1);
        uint64_t v45 = v40;
        TupleTypeMetadata2 = v113;
        MEMORY[0x1BA9DB030](v45, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v34);
      }

      uint64_t v32 = (char *)v126;
    }
    uint64_t v55 = v104;
    sub_1B91CE988(v33);
    sub_1B91FE4B8(0, (uint64_t)v27);
    os_log_type_t v56 = v128;
    v128(v27, AssociatedTypeWitness);
    uint64_t v57 = v131;
    sub_1B91CF310((uint64_t)v32, (uint64_t)&v32[*(int *)(v131 + 52)]);
    uint64_t v58 = swift_retain();
    sub_1B91CE988(v58);
    sub_1B91FE4B8(v55, (uint64_t)v27);
    swift_release();
    v56(v27, AssociatedTypeWitness);
    if ((v124 & 1) == 0)
    {
LABEL_56:
      swift_release();
      return;
    }
    uint64_t v136 = sub_1B996E6B0();
    swift_getAssociatedConformanceWitness();
    uint64_t v135 = sub_1B996E6A0();
    sub_1B9200F30(*(void *)&v32[*(int *)(v57 + 56)], (uint64_t)&v136, (uint64_t)&v135);
    swift_beginAccess();
    uint64_t v59 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B91CF6E0(v59, (void (*)(uint64_t))sub_1B920A038, v4);
    swift_bridgeObjectRelease();
    sub_1B91CF440(v136);
    swift_bridgeObjectRelease();
    unint64_t v61 = v135;
    if ((v135 & 0xC000000000000001) != 0)
    {
      uint64_t v62 = sub_1B9970790();
      uint64_t v105 = 0;
      uint64_t v63 = 0;
      unint64_t v5 = 0;
      unint64_t v61 = v62 | 0x8000000000000000;
    }
    else
    {
      uint64_t v64 = -1 << *(unsigned char *)(v135 + 32);
      uint64_t v65 = *(void *)(v135 + 64);
      uint64_t v105 = v135 + 64;
      uint64_t v66 = ~v64;
      uint64_t v67 = -v64;
      if (v67 < 64) {
        uint64_t v68 = ~(-1 << v67);
      }
      else {
        uint64_t v68 = -1;
      }
      unint64_t v5 = v68 & v65;
      uint64_t v63 = v66;
    }
    uint64_t v69 = v118;
    uint64_t v70 = v117;
    int64_t v71 = 0;
    uint64_t v116 = v61 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v124 = TupleTypeMetadata2 - 8;
    uint64_t v103 = v63;
    uint64_t v121 = v122 + 16;
    uint64_t v126 = (void (**)(char *, char *, uint64_t))(v112 + 32);
    uint64_t v123 = (void (**)(uint64_t, char *, uint64_t))(v122 + 32);
    uint64_t v110 = (void (**)(char *, uint64_t, uint64_t))(v125 + 16);
    uint64_t v109 = v120 + 32;
    uint64_t v108 = (void (**)(char *, uint64_t))(v125 + 8);
    int64_t v112 = (unint64_t)(v63 + 64) >> 6;
    int64_t v102 = v112 - 1;
    *(void *)&long long v60 = 136315138;
    long long v107 = v60;
    uint64_t v106 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v125 = v61;
    uint64_t v111 = AssociatedTypeWitness;
    uint64_t v113 = TupleTypeMetadata2;
    while (1)
    {
      if ((v61 & 0x8000000000000000) != 0)
      {
        if (sub_1B9970850())
        {
          sub_1B9970B70();
          swift_unknownObjectRelease();
          sub_1B9970B70();
          swift_unknownObjectRelease();
          uint64_t v77 = *(void *)(TupleTypeMetadata2 - 8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v70, 0, 1, TupleTypeMetadata2);
        }
        else
        {
          uint64_t v77 = *(void *)(TupleTypeMetadata2 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v70, 1, 1, TupleTypeMetadata2);
        }
        uint64_t v130 = (void *)v71;
        uint64_t v131 = v5;
      }
      else
      {
        if (v5)
        {
          uint64_t v131 = (v5 - 1) & v5;
          unint64_t v74 = __clz(__rbit64(v5)) | (v71 << 6);
          int64_t v75 = v71;
          goto LABEL_28;
        }
        int64_t v75 = v71 + 1;
        if (__OFADD__(v71, 1))
        {
          __break(1u);
          goto LABEL_58;
        }
        uint64_t v78 = (void *)v71;
        if (v75 < v112)
        {
          unint64_t v79 = *(void *)(v105 + 8 * v75);
          if (v79) {
            goto LABEL_34;
          }
          uint64_t v78 = (void *)(v71 + 1);
          if (v71 + 2 < v112)
          {
            unint64_t v79 = *(void *)(v105 + 8 * (v71 + 2));
            if (v79)
            {
              int64_t v75 = v71 + 2;
              goto LABEL_34;
            }
            int64_t v80 = v71 + 3;
            uint64_t v78 = (void *)(v71 + 2);
            if (v71 + 3 < v112)
            {
              unint64_t v79 = *(void *)(v105 + 8 * v80);
              if (!v79)
              {
                while (1)
                {
                  int64_t v75 = v80 + 1;
                  if (__OFADD__(v80, 1)) {
                    break;
                  }
                  if (v75 >= v112)
                  {
                    uint64_t v78 = (void *)v102;
                    goto LABEL_48;
                  }
                  unint64_t v79 = *(void *)(v105 + 8 * v75);
                  ++v80;
                  if (v79) {
                    goto LABEL_34;
                  }
                }
                __break(1u);
                return;
              }
              int64_t v75 = v71 + 3;
LABEL_34:
              uint64_t v131 = (v79 - 1) & v79;
              unint64_t v74 = __clz(__rbit64(v79)) + (v75 << 6);
LABEL_28:
              unint64_t v76 = v61;
              (*(void (**)(char *, unint64_t, uint64_t))(v122 + 16))(v70, *(void *)(v61 + 48) + *(void *)(v122 + 72) * v74, AssociatedTypeWitness);
              *(void *)&v70[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v76 + 56) + 8 * v74);
              uint64_t v77 = *(void *)(TupleTypeMetadata2 - 8);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v70, 0, 1, TupleTypeMetadata2);
              swift_retain();
              uint64_t v130 = (void *)v75;
              goto LABEL_49;
            }
          }
        }
LABEL_48:
        uint64_t v130 = v78;
        uint64_t v77 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v70, 1, 1, TupleTypeMetadata2);
        uint64_t v131 = 0;
      }
LABEL_49:
      char v81 = v127;
      (*v126)(v127, v70, v69);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v81, 1, TupleTypeMetadata2) == 1)
      {
        sub_1B90EB030();
        goto LABEL_56;
      }
      uint64_t v82 = *(void *)&v81[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v83 = v132;
      (*v123)(v132, v81, AssociatedTypeWitness);
      uint64_t v84 = sub_1B91FA624(v83);
      swift_release();
      if (v84)
      {
        if (qword_1E9EFA2D0 != -1) {
          swift_once();
        }
        uint64_t v85 = sub_1B996D300();
        __swift_project_value_buffer(v85, (uint64_t)qword_1E9EFDC00);
        swift_retain_n();
        uint64_t v86 = sub_1B996D2F0();
        os_log_type_t v87 = sub_1B996F650();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v88 = swift_slowAlloc();
          uint64_t v89 = swift_slowAlloc();
          uint64_t v134 = v89;
          *(_DWORD *)uint64_t v88 = v107;
          uint64_t v90 = v82 + *(void *)(*(void *)v82 + 120);
          swift_beginAccess();
          uint64_t v91 = v115;
          uint64_t v92 = v90;
          uint64_t v93 = v4;
          uint64_t v94 = v119;
          (*v110)(v115, v92, v119);
          uint64_t v95 = (*(uint64_t (**)(uint64_t))(v120 + 32))(v94);
          unint64_t v97 = v96;
          uint64_t v98 = v94;
          uint64_t v4 = v93;
          uint64_t AssociatedTypeWitness = v111;
          (*v108)(v91, v98);
          uint64_t v99 = v95;
          uint64_t v69 = v118;
          *(void *)(v88 + 4) = sub_1B90D2A1C(v99, v97, &v134);
          swift_release_n();
          uint64_t v70 = v117;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B90A0000, v86, v87, "The ID of new item is already used by another item in the tree {item: %s}", (uint8_t *)v88, 0xCu);
          swift_arrayDestroy();
          uint64_t v100 = v89;
          TupleTypeMetadata2 = v113;
          MEMORY[0x1BA9DB030](v100, -1, -1);
          MEMORY[0x1BA9DB030](v88, -1, -1);
        }
        else
        {

          swift_release_n();
        }
      }
      uint64_t v72 = swift_retain();
      uint64_t v73 = v132;
      sub_1B91FE4B8(v72, v132);
      swift_release_n();
      v128((char *)v73, AssociatedTypeWitness);
      int64_t v71 = (int64_t)v130;
      unint64_t v5 = v131;
      unint64_t v61 = v125;
    }
  }
  TupleTypeMetadata2 = (uint64_t)v123;
  if (qword_1E9EFA2D0 != -1) {
LABEL_58:
  }
    swift_once();
  uint64_t v46 = sub_1B996D300();
  __swift_project_value_buffer(v46, (uint64_t)qword_1E9EFDC00);
  unint64_t v47 = v125;
  uint64_t v48 = v119;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v125 + 16))(TupleTypeMetadata2, v5, v119);
  int v49 = sub_1B996D2F0();
  os_log_type_t v50 = sub_1B996F640();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v137 = v52;
    uint64_t v53 = (*(uint64_t (**)(uint64_t))(v120 + 32))(v48);
    uint64_t v133 = sub_1B90D2A1C(v53, v54, &v137);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(TupleTypeMetadata2, v48);
    _os_log_impl(&dword_1B90A0000, v49, v50, "Cannot find item in tree {item: %s}", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v52, -1, -1);
    MEMORY[0x1BA9DB030](v51, -1, -1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(TupleTypeMetadata2, v48);
  }
}

uint64_t sub_1B9200F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v67 = a2;
  uint64_t v5 = v3[12];
  uint64_t v6 = v3[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v72 = (char *)v55 - v8;
  uint64_t v9 = *(void *)(v3[11] - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v3;
  uint64_t v15 = v3[13];
  uint64_t v74 = v6;
  uint64_t v75 = v5;
  uint64_t v84 = v6;
  uint64_t v85 = v16;
  uint64_t v68 = v16;
  uint64_t v86 = v5;
  uint64_t v87 = v15;
  uint64_t v17 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t v69 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v81 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v55 - v20;
  v55[0] = v22;
  MEMORY[0x1F4188790](v23);
  __n128 v25 = (char *)v55 - v24;
  uint64_t v26 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (!MEMORY[0x1BA9D7DA0](v26, v17)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = v75;
  uint64_t v84 = v74;
  uint64_t v85 = v68;
  uint64_t v86 = v75;
  uint64_t v87 = v15;
  uint64_t v77 = type metadata accessor for TTRTreeStorageNode();
  uint64_t v28 = 0;
  uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v27 + 24);
  uint64_t v71 = v27 + 24;
  int64_t v80 = (void (**)(char *, uint64_t *, uint64_t))(v69 + 16);
  uint64_t v62 = (void (**)(char *, char *, uint64_t))(v69 + 32);
  unint64_t v61 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  long long v60 = (void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v59 = (void (**)(char *, uint64_t))(v7 + 8);
  unint64_t v79 = (void (**)(char *, uint64_t))(v69 + 8);
  *(void *)&long long v29 = 136315138;
  long long v56 = v29;
  v55[1] = MEMORY[0x1E4FBC840] + 8;
  uint64_t v64 = a1;
  uint64_t v63 = v25;
  while (1)
  {
    char v32 = sub_1B996EF20();
    sub_1B996EE90();
    if ((v32 & 1) == 0) {
      break;
    }
    BOOL v33 = *(void (**)(char *, uint64_t *, uint64_t))(v69 + 16);
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v33)(v25, a1+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v28, v17);
    uint64_t v35 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      goto LABEL_21;
    }
LABEL_7:
    uint64_t v82 = v35;
    (*v62)(v21, v25, v17);
    uint64_t v36 = (uint64_t)v65;
    uint64_t v37 = v74;
    (*v61)(v65, v21, v74);
    uint64_t v38 = (uint64_t)v66;
    (*v60)(v66, &v21[*(int *)(v17 + 52)], v68);
    uint64_t v39 = sub_1B91CEAE0(v36, v38);
    uint64_t v84 = v39;
    uint64_t v40 = sub_1B996EFA0();
    swift_retain();
    uint64_t v76 = v40;
    sub_1B996EF60();
    uint64_t v83 = v39;
    swift_retain();
    uint64_t v41 = v72;
    v70(v37, v75);
    uint64_t v42 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    sub_1B996E7D0();
    sub_1B996E710();
    (*v59)(v41, v42);
    uint64_t v43 = v84;
    uint64_t v44 = v81;
    if (v84)
    {
      if (qword_1E9EFA2D0 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1B996D300();
      __swift_project_value_buffer(v45, (uint64_t)qword_1E9EFDC00);
      v33(v44, (uint64_t *)v21, v17);
      uint64_t v46 = sub_1B996D2F0();
      os_log_type_t v47 = sub_1B996F650();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v58 = v43;
        uint64_t v50 = v49;
        uint64_t v84 = v49;
        *(_DWORD *)uint64_t v48 = v56;
        v70(v74, v75);
        uint64_t v51 = sub_1B996EA30();
        *(void *)(v48 + 4) = sub_1B90D2A1C(v51, v52, &v84);
        swift_bridgeObjectRelease();
        (*v79)(v81, v17);
        _os_log_impl(&dword_1B90A0000, v46, v47, "item ID is not unique {treeItemIdentifier: %s}", (uint8_t *)v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BA9DB030](v50, -1, -1);
        MEMORY[0x1BA9DB030](v48, -1, -1);
      }
      else
      {
        (*v79)(v44, v17);
      }
    }
    uint64_t v84 = *(void *)&v21[*(int *)(v17 + 56)];
    sub_1B996EFA0();
    swift_getWitnessTable();
    if (sub_1B996F480())
    {
      (*v79)(v21, v17);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v84 = sub_1B996E6B0();
      uint64_t v53 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      MEMORY[0x1BA9D7D60](v53, v17);
      swift_bridgeObjectRelease();
      sub_1B996EEA0();
      uint64_t v54 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B9200F30(v54, &v84, v78);
      swift_bridgeObjectRelease();
      sub_1B91CF440(v84);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*v79)(v21, v17);
    }
    uint64_t v30 = v82;
    a1 = v64;
    uint64_t v31 = MEMORY[0x1BA9D7DA0](v64, v17);
    ++v28;
    __n128 v25 = v63;
    if (v30 == v31) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1B9970550();
  if (v55[0] != 8) {
    goto LABEL_22;
  }
  uint64_t v84 = result;
  BOOL v33 = *v80;
  (*v80)(v25, &v84, v17);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v35 = v28 + 1;
  if (!__OFADD__(v28, 1)) {
    goto LABEL_7;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1B92017DC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  sub_1B91CE988(v4);
  sub_1B91FE4B8(0, (uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

uint64_t TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)(*(void *)v3 + 80);
  uint64_t v8 = type metadata accessor for TTRRelativeInsertionPosition();
  uint64_t v9 = sub_1B9970060();
  uint64_t v30 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v33 = (uint64_t)&v27 - v10;
  uint64_t v11 = sub_1B9970060();
  uint64_t v32 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t result = TTRMutableTreeStorage.numberOfChildren(of:)(a1);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = result;
    uint64_t v29 = v9;
    uint64_t v16 = v6[12];
    uint64_t v17 = type metadata accessor for TTRTreeLocation();
    uint64_t v18 = *(void *)(a1 + *(int *)(v17 + 36));
    if (v18 < 0 || v15 < v18)
    {
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      return v26(a3, 1, 1, v8);
    }
    else
    {
      uint64_t v27 = (uint64_t)&v27;
      uint64_t v28 = a3;
      uint64_t v34 = 0;
      uint64_t v35 = v18;
      MEMORY[0x1F4188790](v17);
      *(&v27 - 4) = v3;
      *(&v27 - 3) = a1;
      *(&v27 - 2) = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDC18);
      sub_1B90C3338(&qword_1E9EFDC20, &qword_1E9EFDC18);
      uint64_t v19 = sub_1B996ED00();
      MEMORY[0x1F4188790](v19);
      uint64_t v20 = v6[11];
      *(&v27 - 4) = v7;
      *(&v27 - 3) = v20;
      uint64_t v21 = v6[13];
      *(&v27 - 2) = v16;
      *(&v27 - 1) = v21;
      uint64_t v22 = v33;
      sub_1B91F9DDC((void (*)(char *, char *))sub_1B920A1D4, (uint64_t)(&v27 - 6), MEMORY[0x1E4FBC248], v8, v23, v33);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
      uint64_t v24 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v8) == 1)
      {
        uint64_t v25 = v28;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v22, v29);
      }
      else
      {
        uint64_t v25 = v28;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v28, v22, v8);
      }
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, v8);
    }
  }
  return result;
}

uint64_t sub_1B9201D30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(*a2 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v17 - v10;
  BOOL v13 = __OFSUB__(*v12, 1);
  uint64_t v14 = *v12 - 1;
  if (v14 < 0 != v13) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a4, 1, 1, v7);
  }
  uint64_t v15 = TTRMutableTreeStorage.child(_:of:)(v14, v9, (uint64_t)v11);
  if (a3)
  {
    v17[1] = a3;
    MEMORY[0x1F4188790](v15);
    v17[-6] = v7;
    *(_OWORD *)&v17[-5] = *(_OWORD *)(v6 + 88);
    v17[-3] = *(void *)(v6 + 104);
    v17[-2] = v11;
    sub_1B996EFA0();
    swift_getWitnessTable();
    if (sub_1B996EDF0())
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a4, 1, 1, v7);
    }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v11, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a4, 0, 1, v7);
}

uint64_t sub_1B9201F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v19 - v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, __n128))(a5 + 24);
  v15(a3, a5, v12);
  ((void (*)(uint64_t, uint64_t))v15)(a3, a5);
  swift_getAssociatedConformanceWitness();
  char v16 = sub_1B996E990();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, AssociatedTypeWitness);
  v17(v14, AssociatedTypeWitness);
  return v16 & 1;
}

void (*TTRMutableTreeStorage.steps(forMoving:to:)(uint64_t a1, uint64_t a2))(char *, void)
{
  sub_1B996EFA0();
  uint64_t v3 = type metadata accessor for TTRTreeLocation();
  swift_getTupleTypeMetadata2();
  swift_getWitnessTable();
  uint64_t v4 = sub_1B996ED60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = swift_getWitnessTable();
  uint64_t v7 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)(v4, a2, v3, WitnessTable, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B9202298@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t v7 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1B9970060();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](v36);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v39 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v40 = (char *)&v36 - v18;
  uint64_t v43 = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = v5;
  TTRTreeContentsQueryable.parentAndChildIndex(for:)(a1, v5, WitnessTable, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v11, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
    type metadata accessor for TTRTreeLocation();
    uint64_t v20 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v42, 1, 1, v20);
  }
  else
  {
    uint64_t v22 = *(void *)&v11[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v23 = v7;
    uint64_t v24 = v36;
    uint64_t v25 = *(int *)(v36 + 48);
    uint64_t v37 = a1;
    uint64_t v26 = v6;
    uint64_t v27 = *(void (**)(char *, char *))(v14 + 32);
    uint64_t v28 = v11;
    uint64_t v29 = v23;
    v27(v13, v28);
    *(void *)&v13[v25] = v22;
    uint64_t v38 = *(void *)&v13[*(int *)(v24 + 48)];
    uint64_t v30 = v40;
    uint64_t v31 = v29;
    ((void (*)(char *, char *, uint64_t))v27)(v40, v13, v29);
    type metadata accessor for TTRTreeLocation();
    uint64_t v32 = swift_getTupleTypeMetadata2();
    uint64_t v33 = v42;
    uint64_t v34 = v42 + *(int *)(v32 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v42, v37, v26);
    uint64_t v35 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v30, v31);
    TTRTreeLocation.init(parent:index:)(v35, v38, v26, v34);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v31);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v33, 0, 1, v32);
  }
}

void (*static TTRMutableTreeStorage.steps<A>(forMoving:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(char *, void)
{
  uint64_t v104 = a4;
  uint64_t v99 = a2;
  uint64_t v9 = *(void *)(v5 + 80);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v73 = (char *)&v69 - v11;
  uint64_t v100 = sub_1B9970060();
  uint64_t v12 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v14 = (char *)&v69 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v71 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v81 = (char *)&v69 - v16;
  uint64_t v101 = v9;
  uint64_t v94 = *(char **)(v9 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v89 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v20);
  int64_t v80 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  int64_t v102 = (char *)&v69 - v23;
  __n128 v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v69 - v26;
  uint64_t v28 = MEMORY[0x1BA9D7D60](a1, TupleTypeMetadata2, v25);
  uint64_t v108 = a1;
  uint64_t v69 = v19;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v105 = v27;
  uint64_t v30 = v99;
  uint64_t v98 = v29;
  uint64_t v99 = v19 + 16;
  v29(v27, v30, a3);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v107 = sub_1B996E6B0();
  uint64_t v74 = TupleTypeMetadata3;
  uint64_t v72 = sub_1B996EFA0();
  uint64_t result = (void (*)(char *, void))sub_1B996EEA0();
  if (v28 < 0)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v32 = v28;
  if (v28)
  {
    uint64_t v83 = a3;
    uint64_t v33 = a5;
    unint64_t v34 = 0;
    uint64_t v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 64);
    uint64_t v77 = v104 + 64;
    unint64_t v79 = (void (**)(char *, char *, uint64_t))(v94 + 32);
    uint64_t v35 = v69;
    uint64_t v78 = (void (**)(uint64_t, char *, uint64_t))(v69 + 32);
    uint64_t v36 = (char **)(v69 + 56);
    uint64_t v37 = (void (**)(void, void))(v12 + 8);
    uint64_t v70 = (void (**)(char *, char *, uint64_t))(v94 + 16);
    uint64_t v75 = (uint64_t (**)(char *, uint64_t))(v94 + 8);
    uint64_t v91 = (uint64_t (**)(char *, uint64_t))(v69 + 8);
    uint64_t v69 = (v69 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v39 = v101;
    uint64_t v38 = (uint64_t)v102;
    uint64_t v40 = v89;
    uint64_t v97 = v33;
    uint64_t v88 = TupleTypeMetadata2;
    uint64_t v87 = v14;
    uint64_t v103 = v32;
    uint64_t v95 = v37;
    unint64_t v96 = (char **)(v35 + 56);
    while (v34 != v32)
    {
      uint64_t v41 = v81;
      uint64_t v42 = TupleTypeMetadata2;
      uint64_t v43 = v36;
      uint64_t v44 = (uint64_t)v14;
      uint64_t v45 = v37;
      sub_1B996EFE0();
      uint64_t v46 = &v41[*(int *)(v42 + 48)];
      (*v79)(v40, v41, v39);
      os_log_type_t v47 = v46;
      uint64_t v48 = v83;
      (*v78)(v38, v47, v83);
      uint64_t v94 = *v43;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v94)(v44, 1, 1, v48);
      uint64_t v49 = v82[12];
      uint64_t v50 = v82[13];
      uint64_t v51 = (uint64_t)v105;
      uint64_t v93 = v82[11];
      uint64_t v86 = v49;
      uint64_t v85 = v50;
      sub_1B9202FBC((uint64_t)v105, v38, v44, v39, v93, v48, v49, v50, v104);
      uint64_t v84 = *v45;
      v84(v44, v100);
      unint64_t v52 = v80;
      uint64_t v53 = v98;
      v98(v80, v51, v48);
      uint64_t v54 = v48;
      LOBYTE(v48) = sub_1B996E990();
      uint64_t v90 = *v91;
      uint64_t result = (void (*)(char *, void))v90(v52, v54);
      if ((v48 & 1) == 0)
      {
        uint64_t v55 = &v73[*(int *)(v74 + 48)];
        long long v56 = &v73[*(int *)(v74 + 64)];
        (*v70)(v73, v89, v39);
        v53(v55, (uint64_t)v102, v54);
        v53(v56, v51, v54);
        uint64_t result = (void (*)(char *, void))sub_1B996EF60();
      }
      int64_t v57 = v34 + 1;
      unint64_t v92 = v57;
      if (v57 != v103)
      {
        if (v57 >= v103) {
          goto LABEL_18;
        }
        unint64_t v58 = v92;
        uint64_t v59 = v71;
        uint64_t v60 = v88;
        uint64_t v61 = (uint64_t)v87;
        uint64_t v62 = v86;
        uint64_t v63 = v85;
        uint64_t v64 = v84;
        do
        {
          v98((char *)v61, (uint64_t)v105, v54);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v94)(v61, 0, 1, v54);
          sub_1B996EFA0();
          sub_1B996EEF0();
          uint64_t v65 = v108;
          sub_1B9209D54(v58, v108);
          sub_1B9202FBC(v65+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v58+ *(int *)(v60 + 48), (uint64_t)v102, v61, v101, v93, v54, v62, v63, v104);
          v64(v61, v100);
          ++v58;
        }
        while (v103 != v58);
      }
      uint64_t result = (void (*)(char *, void))v76(v106, v54, v104);
      if (__OFADD__(*v66, 1)) {
        goto LABEL_17;
      }
      ++*v66;
      result(v106, 0);
      uint64_t v38 = (uint64_t)v102;
      uint64_t v67 = (void (*)(char *, uint64_t))v90;
      v90(v102, v54);
      uint64_t v40 = v89;
      uint64_t v39 = v101;
      uint64_t result = (void (*)(char *, void))(*v75)(v89, v101);
      uint64_t v32 = v103;
      unint64_t v34 = v92;
      uint64_t v36 = v96;
      TupleTypeMetadata2 = v88;
      uint64_t v14 = v87;
      uint64_t v37 = v95;
      if (v92 == v103)
      {
        a3 = v83;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v67 = *(void (**)(char *, uint64_t))(v69 + 8);
LABEL_15:
  v67(v105, a3);
  uint64_t v68 = v107;
  swift_bridgeObjectRelease();
  return (void (*)(char *, void))v68;
}

void (*sub_1B9202FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(char *, void)
{
  uint64_t v177 = a6;
  uint64_t v150 = a3;
  uint64_t v158 = a2;
  uint64_t v174 = a1;
  uint64_t v153 = sub_1B9970060();
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x1F4188790](v153);
  uint64_t v151 = (char *)&v133 - v10;
  uint64_t v159 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v166 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v165 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v134 = (char *)&v133 - v14;
  uint64_t v173 = v15;
  uint64_t v16 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v144 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v145 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v164 = (char *)&v133 - v19;
  uint64_t v20 = swift_checkMetadataState();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v142 = (char *)&v133 - v22;
  uint64_t v23 = sub_1B9970060();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v139 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v138 = (char *)&v133 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v133 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v133 - v32;
  uint64_t v161 = v16;
  uint64_t v160 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v140 = (char *)&v133 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v143 = (char *)&v133 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v156 = (char *)&v133 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v133 - v41;
  MEMORY[0x1F4188790](v43);
  uint64_t v162 = (char *)&v133 - v44;
  __n128 v46 = MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v133 - v47;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(a9 + 24);
  uint64_t v175 = a9;
  id v171 = v49;
  uint64_t v172 = a9 + 24;
  ((void (*)(uint64_t, uint64_t, __n128))v49)(v177, a9, v46);
  uint64_t v169 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v170 = v21 + 48;
  int v50 = v169(v33, 1, v20);
  uint64_t v167 = v24;
  uint64_t v147 = v21;
  uint64_t v154 = v23;
  long long v141 = v42;
  if (v50)
  {
    id v157 = *(void (**)(char *, uint64_t))(v24 + 8);
    v157(v33, v23);
    uint64_t v51 = v165;
    unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
    uint64_t v53 = v173;
    v52(v48, 1, 1, v173);
    uint64_t v54 = AssociatedConformanceWitness;
  }
  else
  {
    uint64_t v55 = v142;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v142, v33, v20);
    id v157 = *(void (**)(char *, uint64_t))(v24 + 8);
    v157(v33, v23);
    uint64_t v54 = AssociatedConformanceWitness;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v20, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v55, v20);
    uint64_t v51 = v165;
    unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56);
    uint64_t v53 = v173;
    v52(v48, 0, 1, v173);
  }
  uint64_t v163 = v48;
  v171(v177, v175);
  int v56 = v169(v30, 1, v20);
  uint64_t v57 = v161;
  uint64_t v146 = v20;
  if (v56 == 1)
  {
    v157(v30, v154);
    uint64_t v58 = 1;
    uint64_t v59 = v162;
  }
  else
  {
    uint64_t v60 = v20;
    uint64_t v59 = v162;
    (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v60, v54);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v30, v60);
    uint64_t v58 = 0;
  }
  uint64_t v148 = v51 + 56;
  long long v149 = v52;
  v52(v59, v58, 1, v53);
  uint64_t v61 = v163;
  uint64_t v62 = v164;
  uint64_t v63 = &v164[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v64 = v160;
  uint64_t v65 = v59;
  uint64_t v66 = v160 + 16;
  uint64_t v67 = *(void (**)(void))(v160 + 16);
  ((void (*)(char *, char *, uint64_t))v67)(v164, v163, v57);
  long long v155 = v63;
  ((void (*)(char *, char *, uint64_t))v67)(v63, v65, v57);
  uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  unsigned int v69 = v68(v62, 1, v53);
  uint64_t v137 = (uint64_t (*)(char *, uint64_t, uint64_t))v68;
  uint64_t v136 = v67;
  uint64_t v135 = v66;
  if (v69 != 1)
  {
    uint64_t v73 = v141;
    ((void (*)(char *, char *, uint64_t))v67)(v141, v62, v57);
    uint64_t v74 = v155;
    unsigned int v75 = v68(v155, 1, v53);
    uint64_t v72 = v177;
    if (v75 != 1)
    {
      uint64_t v79 = v64;
      uint64_t v80 = v165;
      char v81 = v134;
      (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v134, v74, v53);
      swift_getAssociatedConformanceWitness();
      LODWORD(v155) = sub_1B996E990();
      uint64_t v82 = *(void (**)(char *, uint64_t))(v80 + 8);
      v82(v81, v53);
      uint64_t v83 = *(void (**)(char *, uint64_t))(v79 + 8);
      v83(v162, v57);
      v83(v163, v57);
      v82(v73, v53);
      uint64_t v162 = (char *)v83;
      v83(v62, v57);
      uint64_t v72 = v177;
      uint64_t v77 = v166;
      if ((v155 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_15;
    }
    uint64_t v76 = *(void (**)(char *, uint64_t))(v64 + 8);
    v76(v162, v57);
    uint64_t v162 = (char *)v76;
    v76(v163, v57);
    (*(void (**)(char *, uint64_t))(v165 + 8))(v73, v53);
    uint64_t v77 = v166;
    uint64_t v78 = v62;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v144 + 8))(v78, TupleTypeMetadata2);
    goto LABEL_19;
  }
  uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v65, v57);
  v70(v61, v57);
  unsigned int v71 = v68(v155, 1, v53);
  uint64_t v72 = v177;
  uint64_t v162 = (char *)v70;
  if (v71 != 1)
  {
    uint64_t v77 = v166;
    uint64_t v78 = v164;
    goto LABEL_13;
  }
  v70(v164, v57);
LABEL_15:
  uint64_t v84 = v175;
  uint64_t v85 = *(uint64_t (**)(uint64_t, uint64_t))(v175 + 48);
  uint64_t v86 = v85(v72, v175);
  if (v86 < v85(v72, v84))
  {
    uint64_t result = (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 64))(v178, v72, v84);
    if (__OFSUB__(*v88, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    --*v88;
    result(v178, 0);
  }
  uint64_t v77 = v166;
LABEL_19:
  uint64_t v89 = v77;
  uint64_t v90 = v152;
  uint64_t v91 = v151;
  uint64_t v92 = v153;
  (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v151, v150, v153);
  uint64_t v93 = v159;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v91, 1, v72) == 1) {
    return (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v91, v92);
  }
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v89, v91, v72);
  uint64_t v94 = v138;
  uint64_t v95 = v175;
  v171(v72, v175);
  uint64_t v96 = v146;
  if (v169(v94, 1, v146))
  {
    uint64_t v97 = v154;
    v157(v94, v154);
    uint64_t v98 = 1;
    uint64_t v99 = v156;
  }
  else
  {
    uint64_t v100 = v147;
    uint64_t v101 = v142;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v142, v94, v96);
    int64_t v102 = v94;
    uint64_t v103 = v154;
    v157(v102, v154);
    uint64_t v99 = v156;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v96);
    uint64_t v104 = v100;
    uint64_t v97 = v103;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v96);
    uint64_t v98 = 0;
  }
  v149(v99, v98, 1, v173);
  uint64_t v105 = v139;
  v171(v72, v95);
  int v106 = v169(v105, 1, v96);
  uint64_t v107 = v136;
  if (v106 == 1)
  {
    v157(v105, v97);
    uint64_t v108 = 1;
    uint64_t v109 = v143;
  }
  else
  {
    uint64_t v109 = v143;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v96);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v105, v96);
    uint64_t v108 = 0;
  }
  uint64_t v110 = v173;
  v149(v109, v108, 1, v173);
  uint64_t v111 = v145;
  int64_t v112 = &v145[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v113 = v156;
  uint64_t v114 = v161;
  ((void (*)(char *, char *, uint64_t))v107)(v145, v156, v161);
  ((void (*)(char *, char *, uint64_t))v107)(v112, v109, v114);
  uint64_t v115 = v107;
  uint64_t v116 = v137;
  if (v137(v111, 1, v110) == 1)
  {
    id v117 = (void (*)(char *, uint64_t))v162;
    ((void (*)(char *, uint64_t))v162)(v109, v114);
    v117(v113, v114);
    int v118 = v116(v112, 1, v110);
    uint64_t v119 = v159;
    uint64_t v120 = v166;
    if (v118 != 1)
    {
LABEL_33:
      (*(void (**)(char *, uint64_t))(v144 + 8))(v145, TupleTypeMetadata2);
      uint64_t v121 = v177;
      return (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v120, v121);
    }
    v117(v145, v114);
    uint64_t v121 = v177;
  }
  else
  {
    uint64_t v122 = v140;
    v115();
    if (v116(v112, 1, v110) == 1)
    {
      uint64_t v123 = (void (*)(char *, uint64_t))v162;
      ((void (*)(char *, uint64_t))v162)(v143, v114);
      v123(v156, v114);
      (*(void (**)(char *, uint64_t))(v165 + 8))(v122, v110);
      uint64_t v119 = v159;
      uint64_t v120 = v166;
      goto LABEL_33;
    }
    uint64_t v124 = v165;
    unint64_t v125 = v134;
    (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v134, v112, v110);
    swift_getAssociatedConformanceWitness();
    char v126 = sub_1B996E990();
    uint64_t v127 = *(void (**)(char *, uint64_t))(v124 + 8);
    v127(v125, v110);
    uint64_t v128 = (void (*)(char *, uint64_t))v162;
    ((void (*)(char *, uint64_t))v162)(v143, v114);
    v128(v156, v114);
    v127(v122, v110);
    uint64_t v120 = v166;
    v128(v111, v114);
    uint64_t v121 = v177;
    uint64_t v119 = v159;
    if ((v126 & 1) == 0) {
      return (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v120, v121);
    }
  }
  uint64_t v129 = v175;
  uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t))(v175 + 48);
  uint64_t v131 = v130(v121, v175);
  if (v130(v121, v129) < v131) {
    return (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v120, v121);
  }
  uint64_t result = (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 64))(v178, v121, v129);
  if (!__OFADD__(*v132, 1))
  {
    ++*v132;
    result(v178, 0);
    return (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v120, v121);
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t TTRMutableTreeStorage.unadjustInsertionLocation(_:forMoving:)(uint64_t a1)
{
  sub_1B996EFA0();
  uint64_t v2 = type metadata accessor for TTRTreeLocation();
  swift_getWitnessTable();
  uint64_t v3 = sub_1B996ED60();
  uint64_t WitnessTable = swift_getWitnessTable();
  static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)(a1, v3, v2, WitnessTable);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9204358@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = a3;
  uint64_t v4 = *a2;
  uint64_t v36 = *(void *)(*a2 + 80);
  uint64_t v5 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_1B9970060();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v31 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v37 = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = v34;
  uint64_t v34 = v4;
  TTRTreeContentsQueryable.parentAndChildIndex(for:)(v20, v4, WitnessTable, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v9, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
    uint64_t v21 = type metadata accessor for TTRTreeLocation();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v35, 1, 1, v21);
  }
  else
  {
    uint64_t v33 = *(void *)&v9[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v23 = *(int *)(v10 + 48);
    uint64_t v24 = v13;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v25(v12, v9, v5);
    *(void *)&v12[v23] = v33;
    uint64_t v26 = *(void *)&v12[*(int *)(v10 + 48)];
    v25(v18, v12, v5);
    uint64_t v27 = (uint64_t)v31;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v31, v18, v5);
    uint64_t v28 = v35;
    TTRTreeLocation.init(parent:index:)(v27, v26, v36, v35);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v5);
    uint64_t v29 = type metadata accessor for TTRTreeLocation();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
}

uint64_t static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1B9970060();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v15[-v10];
  uint64_t v21 = a2;
  long long v12 = *(_OWORD *)(v4 + 96);
  long long v16 = *(_OWORD *)(v4 + 80);
  uint64_t v17 = a3;
  long long v18 = v12;
  uint64_t v19 = a4;
  uint64_t v20 = a1;
  sub_1B996EFA0();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B996ECC0();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  if (!__OFADD__(result, v13)) {
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(a4 + 72))(v11, result + v13, a3, a4);
  }
  __break(1u);
  return result;
}

BOOL sub_1B92048EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v105 = a2;
  uint64_t v97 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v96 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v95 = (char *)&v84 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v108 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v85 = (char *)&v84 - v16;
  uint64_t v103 = v17;
  uint64_t v18 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v89 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v107 = (char *)&v84 - v19;
  uint64_t v20 = sub_1B9970060();
  uint64_t v91 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v92 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v93 = v18;
  uint64_t v100 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v88 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v99 = (char *)&v84 - v28;
  __n128 v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v84 - v31;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(a8 + 24);
  uint64_t v94 = a1;
  uint64_t v106 = a5;
  uint64_t v98 = a8;
  uint64_t v34 = a8;
  uint64_t v35 = v108;
  uint64_t v90 = v33;
  ((void (*)(uint64_t, uint64_t, __n128))v33)(a5, v34, v30);
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v24, 1, AssociatedTypeWitness);
  uint64_t v104 = v32;
  uint64_t v87 = v20;
  uint64_t v86 = v36;
  if (v38 == 1)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v24, v20);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 56);
    uint64_t v40 = v32;
    uint64_t v41 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, AssociatedTypeWitness);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 56);
    uint64_t v40 = v32;
    uint64_t v41 = 0;
  }
  uint64_t v42 = v103;
  v39(v40, v41, 1);
  uint64_t v43 = v92;
  v90(v106, v98);
  uint64_t v44 = 1;
  int v45 = v37(v43, 1, AssociatedTypeWitness);
  uint64_t v84 = AssociatedTypeWitness;
  if (v45 == 1)
  {
    uint64_t v46 = v108;
    uint64_t v47 = v107;
    uint64_t v48 = v99;
    uint64_t v49 = v87;
    uint64_t v50 = v91;
  }
  else
  {
    uint64_t v48 = v99;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness);
    uint64_t v44 = 0;
    uint64_t v50 = v86;
    uint64_t v49 = AssociatedTypeWitness;
    uint64_t v46 = v108;
    uint64_t v47 = v107;
  }
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v49);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v48, v44, 1, v42);
  uint64_t v51 = v100;
  unint64_t v52 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  uint64_t v54 = v93;
  v53(v47, v104, v93);
  uint64_t v92 = v52;
  v53(v52, v48, v54);
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v55(v47, 1, v42) != 1)
  {
    uint64_t v64 = v88;
    uint64_t v65 = v107;
    v53(v88, v107, v54);
    uint64_t v66 = v55;
    uint64_t v67 = v92;
    uint64_t v68 = v103;
    int v69 = v66(v92, 1, v103);
    uint64_t v70 = v54;
    uint64_t v60 = v97;
    if (v69 != 1)
    {
      uint64_t v73 = v108;
      uint64_t v74 = v85;
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v85, v67, v68);
      swift_getAssociatedConformanceWitness();
      LODWORD(AssociatedConformanceWitness) = sub_1B996E990();
      unsigned int v75 = *(void (**)(char *, uint64_t))(v73 + 8);
      v75(v74, v68);
      uint64_t v76 = *(void (**)(char *, uint64_t))(v100 + 8);
      v76(v99, v70);
      v76(v104, v70);
      v75(v64, v68);
      v76(v65, v70);
      uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      uint64_t v62 = v95;
      uint64_t v58 = v106;
      v77(v95, v94, v106);
      uint64_t v63 = v96;
      v77(v96, v105, v58);
      if (AssociatedConformanceWitness) {
        goto LABEL_14;
      }
LABEL_15:
      BOOL v81 = 0;
      goto LABEL_16;
    }
    unsigned int v71 = *(void (**)(char *, uint64_t))(v100 + 8);
    v71(v99, v70);
    v71(v104, v70);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v64, v68);
    uint64_t v58 = v106;
LABEL_12:
    (*(void (**)(char *, uint64_t))(v89 + 8))(v107, TupleTypeMetadata2);
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    uint64_t v62 = v95;
    v72(v95, v94, v58);
    uint64_t v63 = v96;
    v72(v96, v105, v58);
    goto LABEL_15;
  }
  int v56 = *(void (**)(char *, uint64_t))(v51 + 8);
  v56(v48, v54);
  v56(v104, v54);
  unsigned int v57 = v55(v92, 1, v103);
  uint64_t v58 = v106;
  uint64_t v59 = v54;
  uint64_t v60 = v97;
  if (v57 != 1) {
    goto LABEL_12;
  }
  v56(v107, v59);
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  uint64_t v62 = v95;
  v61(v95, v94, v58);
  uint64_t v63 = v96;
  v61(v96, v105, v58);
LABEL_14:
  uint64_t v78 = v98;
  uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t))(v98 + 48);
  uint64_t v80 = v79(v58, v98);
  BOOL v81 = v80 < v79(v58, v78);
LABEL_16:
  uint64_t v82 = *(void (**)(char *, uint64_t))(v60 + 8);
  v82(v63, v58);
  v82(v62, v58);
  return v81;
}

uint64_t TTRMutableTreeStorage.insertTemporaryItem(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v111 = a1;
  uint64_t v108 = a2;
  uint64_t v105 = *v2;
  uint64_t v5 = v105[11];
  uint64_t v6 = v105[12];
  uint64_t v7 = v105[13];
  uint64_t v113 = v105[10];
  uint64_t v4 = v113;
  uint64_t v114 = v5;
  uint64_t v115 = v6;
  uint64_t v116 = v7;
  uint64_t v103 = type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  uint64_t v8 = sub_1B9970060();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v100 = (char *)&v86 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v98 = (char *)&v86 - v10;
  uint64_t v91 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v92 = (char *)&v86 - v12;
  uint64_t v113 = v4;
  uint64_t v114 = v5;
  uint64_t v96 = v7;
  uint64_t v97 = v5;
  uint64_t v101 = v6;
  uint64_t v115 = v6;
  uint64_t v116 = v7;
  uint64_t v94 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v90 = (uint64_t)&v86 - v13;
  uint64_t v14 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v88 = sub_1B9970060();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v86 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](v86);
  uint64_t v19 = (char *)&v86 - v18;
  uint64_t v109 = v14;
  uint64_t v102 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v95 = (char *)&v86 - v21;
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v89 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v86 - v27);
  MEMORY[0x1F4188790](v28);
  __n128 v30 = (char *)&v86 - v29;
  __n128 v32 = MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v86 - v33;
  uint64_t v106 = v22;
  uint64_t v107 = v4;
  uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  v104((char *)&v86 - v33, v111, v4, v32);
  uint64_t v113 = v3;
  uint64_t v35 = v105;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v110 = v34;
  if (TTRTreeContentsQueryable.contains(_:)((uint64_t)v34, (uint64_t)v35, WitnessTable))
  {
    if (qword_1E9EFA2D0 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1B996D300();
    __swift_project_value_buffer(v37, (uint64_t)qword_1E9EFDC00);
    int v38 = v110;
    uint64_t v39 = v107;
    ((void (*)(char *, char *, uint64_t))v104)(v25, v110, v107);
    uint64_t v40 = sub_1B996D2F0();
    os_log_type_t v41 = sub_1B996F620();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v113 = v43;
      uint64_t v44 = (*(uint64_t (**)(uint64_t))(v101 + 32))(v39);
      uint64_t v112 = sub_1B90D2A1C(v44, v45, &v113);
      sub_1B99700D0();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(char *, uint64_t))(v106 + 8);
      v46(v25, v39);
      _os_log_impl(&dword_1B90A0000, v40, v41, "Temporary item already exists {item: %s}", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v43, -1, -1);
      MEMORY[0x1BA9DB030](v42, -1, -1);

      v46(v110, v39);
    }
    else
    {

      uint64_t v58 = *(void (**)(char *, uint64_t))(v106 + 8);
      v58(v25, v39);
      v58(v38, v39);
    }
  }
  else
  {
    TTRMutableTreeStorage.resolve(_:)(v111 + *(int *)(v103 + 56), (uint64_t)v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v59 = *(void *)&v17[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v60 = v86;
      uint64_t v61 = *(int *)(v86 + 48);
      uint64_t v62 = v102 + 32;
      uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32);
      uint64_t v89 = v63;
      uint64_t v64 = v17;
      uint64_t v65 = v109;
      v63((uint64_t)v19, (uint64_t)v64, v109);
      uint64_t v102 = v62;
      *(void *)&v19[v61] = v59;
      uint64_t v105 = *(void **)&v19[*(int *)(v60 + 48)];
      uint64_t v66 = (uint64_t)v95;
      v63((uint64_t)v95, (uint64_t)v19, v65);
      uint64_t v67 = v107;
      ((void (*)(char *, char *, uint64_t))v104)(v30, v110, v107);
      uint64_t v68 = v103;
      uint64_t v69 = v111;
      uint64_t v70 = v92;
      uint64_t v71 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v92, v111 + *(int *)(v103 + 52), v97);
      uint64_t v72 = v94;
      uint64_t v73 = sub_1B996EF00();
      uint64_t v74 = v90;
      uint64_t v75 = (uint64_t)v70;
      uint64_t v76 = v101;
      TTRTreeStorageNodeValue.init(item:auxiliaryData:children:)((uint64_t)v30, v75, v73, v67, v71, v90);
      TTRMutableTreeStorage.insertNewItem(with:in:at:)(v74, v66, (uint64_t)v105);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v74, v72);
      (*(void (**)(uint64_t, uint64_t))(v76 + 24))(v67, v76);
      uint64_t v77 = *(void *)(v68 - 8);
      uint64_t v78 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v100, v69, v68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v68);
      swift_beginAccess();
      swift_getAssociatedConformanceWitness();
      sub_1B996E7D0();
      sub_1B996E7F0();
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v110, v67);
      uint64_t v79 = v109;
      uint64_t v80 = swift_getTupleTypeMetadata2();
      uint64_t v81 = *(int *)(v80 + 48);
      uint64_t v82 = v108;
      v89(v108, v66, v79);
      *(void *)(v82 + v81) = v105;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v82, 0, 1, v80);
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v17, v88);
    if (qword_1E9EFA2D0 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1B996D300();
    __swift_project_value_buffer(v47, (uint64_t)qword_1E9EFDC00);
    uint64_t v48 = (char *)v89;
    uint64_t v49 = v110;
    uint64_t v50 = v107;
    ((void (*)(void, char *, uint64_t))v104)(v89, v110, v107);
    uint64_t v51 = sub_1B996D2F0();
    os_log_type_t v52 = sub_1B996F620();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v113 = v54;
      uint64_t v55 = (*(uint64_t (**)(uint64_t))(v101 + 32))(v50);
      uint64_t v112 = sub_1B90D2A1C(v55, v56, &v113);
      sub_1B99700D0();
      swift_bridgeObjectRelease();
      unsigned int v57 = *(void (**)(char *, uint64_t))(v106 + 8);
      v57(v48, v50);
      _os_log_impl(&dword_1B90A0000, v51, v52, "Unable to determine target location for new temporary item {item: %s}", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v54, -1, -1);
      MEMORY[0x1BA9DB030](v53, -1, -1);

      v57(v49, v50);
    }
    else
    {

      uint64_t v84 = *(void (**)(char *, uint64_t))(v106 + 8);
      v84(v48, v50);
      v84(v49, v50);
    }
  }
  uint64_t v85 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v108, 1, 1, v85);
}

uint64_t TTRMutableTreeStorage.resolve(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v25 = *v2;
  uint64_t v4 = *(void *)(v25 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1B9970060();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v26 = type metadata accessor for TTRTreeStorageTemporaryNodeLocation();
  uint64_t v27 = a1;
  TTRTreeStorageTemporaryNodeLocation.parent.getter(v26, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    uint64_t v29 = v2;
    uint64_t v15 = v25;
    uint64_t WitnessTable = swift_getWitnessTable();
    LOBYTE(v15) = TTRTreeContentsQueryable.contains(_:)((uint64_t)v7, v15, WitnessTable);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v15 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v28, 1, 1, TupleTypeMetadata2);
    }
  }
  uint64_t v17 = TTRMutableTreeStorage.numberOfChildren(of:)((uint64_t)v14);
  uint64_t result = TTRTreeStorageTemporaryNodeLocation.index.getter(v26);
  if (v19)
  {
LABEL_8:
    uint64_t v20 = swift_getTupleTypeMetadata2();
    uint64_t v21 = *(int *)(v20 + 48);
    uint64_t v22 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v28, v14, v8);
    *(void *)(v22 + v21) = v17;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v22, 0, 1, v20);
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    if (v17 >= (result & ~(result >> 63))) {
      uint64_t v17 = result & ~(result >> 63);
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B9206308()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDC28);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B30C8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v10);
  sub_1B9770EC0((uint64_t)v10, (uint64_t)v13);
  sub_1B920AC24((uint64_t)v10, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v14 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14);
  sub_1B90CCA68((uint64_t)v13, &qword_1EB9B30C8);
  if (v15 == 1) {
    return 2;
  }
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v7);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v1 + 32);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1B90D0640((uint64_t)v7), (v19 & 1) != 0))
  {
    unint64_t v20 = v18;
    uint64_t v21 = *(void *)(v17 + 56);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFBD28);
    uint64_t v23 = *(void *)(v22 - 8);
    sub_1B90CCA04(v21 + *(void *)(v23 + 72) * v20, (uint64_t)v4, &qword_1E9EFBD28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v4, 0, 1, v22);
  }
  else
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFBD28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 1, 1, v24);
  }
  swift_endAccess();
  sub_1B920AC24((uint64_t)v7, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFBD28);
  BOOL v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v4, 1, v25) != 1;
  sub_1B90CCA68((uint64_t)v4, &qword_1E9EFDC28);
  return v16;
}

uint64_t TTRMutableTreeStorage.isTemporary(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  long long v4 = *(_OWORD *)(*v1 + 96);
  long long v24 = *(_OWORD *)(*v1 + 80);
  long long v25 = v4;
  long long v26 = v24;
  long long v27 = v4;
  uint64_t v21 = type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  uint64_t v5 = sub_1B9970060();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = v24;
  uint64_t v9 = v25;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)&long long v25 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v20 - v11;
  *(void *)&long long v26 = v1;
  uint64_t WitnessTable = swift_getWitnessTable();
  if (!TTRTreeContentsQueryable.contains(_:)(a1, v3, WitnessTable)) {
    return 2;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  swift_beginAccess();
  uint64_t v14 = v1[4];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = v14;
  uint64_t v17 = v21;
  MEMORY[0x1BA9D7600](v12, v16, AssociatedTypeWitness, v21, AssociatedConformanceWitness);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, AssociatedTypeWitness);
  BOOL v18 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17) != 1;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return v18;
}

uint64_t TTRMutableTreeStorage.temporaryNodeValues.getter()
{
  uint64_t v1 = (void *)*v0;
  sub_1B9206B00();
  swift_beginAccess();
  uint64_t v19 = v0[4];
  uint64_t v9 = v1[10];
  uint64_t v10 = v1[11];
  uint64_t v11 = v1[12];
  uint64_t v12 = v1[13];
  uint64_t v13 = sub_1B920A2BC;
  uint64_t v14 = v0;
  swift_getAssociatedTypeWitness();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  uint64_t v18 = v12;
  uint64_t v2 = type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = sub_1B996E7D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920A2C4, (uint64_t)&v8, v3, v2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B9206B00()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  swift_getAssociatedConformanceWitness();
  *(void *)(v0 + 32) = sub_1B996E7B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9206C30@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v17 - v13;
  uint64_t v19 = *(void *)(v4 + 80);
  uint64_t v20 = v6;
  long long v21 = *(_OWORD *)(v5 + 96);
  uint64_t v15 = type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a3, v18, v15);
  TTRMutableTreeStorage.auxiliaryData(for:)((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(a3 + *(int *)(v15 + 52), v14, v6);
}

uint64_t sub_1B9206E94(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void *TTRMutableTreeStorage.copy()()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  type metadata accessor for TTRTreeStorageNode();
  uint64_t v1 = sub_1B996EFA0();
  uint64_t v2 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920B12C, v0, v1, v2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v4);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 32);
  swift_allocObject();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v7 = sub_1B9209DA8(v5, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B920713C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v30 = a2;
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = v5[11];
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v28 = (char *)&v26 - v7;
  uint64_t v8 = v5[10];
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v10);
  long long v27 = (char *)&v26 - v11;
  uint64_t v13 = (uint64_t *)(v12 + *(void *)(*(void *)v12 + 136));
  swift_beginAccess();
  uint64_t v31 = *v13;
  uint64_t v14 = v5[12];
  uint64_t v15 = v5[13];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v32 = v8;
  uint64_t v33 = v6;
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  type metadata accessor for TTRTreeStorageNode();
  uint64_t v16 = sub_1B996EFA0();
  uint64_t v32 = v8;
  uint64_t v33 = v6;
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  uint64_t v17 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920AE94, v3, v16, v17, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  uint64_t v22 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v27, v21, v8);
  uint64_t v23 = a1 + *(void *)(*(void *)a1 + 128);
  swift_beginAccess();
  uint64_t v24 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v23, v6);
  return TTRTreeStorageNodeValue.init(item:auxiliaryData:children:)(v22, v24, v20, v8, v6, v30);
}

void *TTRMutableTreeStorage.subtreeCopy(rootItem:)()
{
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)(*v0 + 88);
  uint64_t v4 = *(void *)(*v0 + 96);
  uint64_t v5 = *(void *)(*v0 + 104);
  uint64_t v28 = *(void *)(*v0 + 80);
  uint64_t v2 = v28;
  uint64_t v29 = v3;
  uint64_t v24 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v6 = type metadata accessor for TTRTreeStorageNodeValue();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v25 = (uint64_t)v23 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = AssociatedTypeWitness;
  __n128 v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)v23 - v11;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 24))(v2, v4, v10);
  uint64_t v13 = sub_1B91FA624((uint64_t)v12);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = swift_beginAccess();
    v23[0] = v23;
    MEMORY[0x1F4188790](v15);
    v23[1] = v1;
    v23[-4] = v12;
    v23[-3] = v14;
    v23[-2] = v0;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v28 = v2;
    uint64_t v29 = v24;
    uint64_t v30 = v4;
    uint64_t v31 = v5;
    type metadata accessor for TTRTreeStorageTemporaryNodeValue();
    uint64_t v16 = v27;
    swift_getAssociatedConformanceWitness();
    uint64_t v17 = sub_1B996E7B0();
    uint64_t v18 = v25;
    sub_1B920713C(v14, v25);
    sub_1B9970B30();
    swift_allocObject();
    uint64_t v19 = sub_1B996EE80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v20, v18, v6);
    sub_1B996EFA0();
    swift_allocObject();
    uint64_t v21 = sub_1B9209DA8(v19, v17);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v6);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
    return 0;
  }
  return v21;
}

uint64_t sub_1B920782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v29 = *a5;
  uint64_t v8 = *(void *)(*(void *)a4 + 80);
  uint64_t v9 = sub_1B9970060();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if (sub_1B996E990())
  {
    char v17 = 1;
  }
  else
  {
    TTRMutableTreeStorage.item(withID:)(a1, (uint64_t)v11);
    uint64_t v18 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v8) == 1)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
      char v17 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v11, v8);
      uint64_t v31 = a5;
      uint64_t v19 = a4 + *(void *)(*(void *)a4 + 120);
      swift_beginAccess();
      uint64_t v20 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v28, v19, v8);
      uint64_t v21 = v29;
      uint64_t WitnessTable = swift_getWitnessTable();
      char v17 = TTRTreeContentsQueryable.contains(_:inSubtreeAtRoot:)((uint64_t)v16, v20, v21, WitnessTable);
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v23(v20, v8);
      v23((uint64_t)v16, v8);
    }
  }
  return v17 & 1;
}

uint64_t sub_1B9207B78@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  if (qword_1E9EFA2D0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1B996D300();
  __swift_project_value_buffer(v12, (uint64_t)qword_1E9EFDC00);
  swift_retain_n();
  uint64_t v13 = sub_1B996D2F0();
  os_log_type_t v14 = sub_1B996F650();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v16;
    uint64_t v26 = v4;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v31 = v16;
    v23[1] = v15 + 4;
    uint64_t v24 = v15;
    uint64_t v17 = v11 + *(void *)(*(void *)v11 + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, a2);
    (*(void (**)(uint64_t))(v28 + 24))(a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a2);
    uint64_t v18 = sub_1B996EA30();
    uint64_t v30 = sub_1B90D2A1C(v18, v19, &v31);
    sub_1B99700D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v20 = v24;
    _os_log_impl(&dword_1B90A0000, v13, v14, "item ID is not unique {treeItemIdentifier: %s}", v24, 0xCu);
    uint64_t v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v21, -1, -1);
    MEMORY[0x1BA9DB030](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  *uint64_t v29 = v11;
  return swift_retain();
}

uint64_t sub_1B9207EBC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9207F80()
{
  return swift_endAccess();
}

uint64_t TTRMutableTreeStorage.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTRMutableTreeStorage.__deallocating_deinit()
{
  TTRMutableTreeStorage.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B920809C(uint64_t a1)
{
  return TTRMutableTreeStorage.numberOfChildren(of:)(a1);
}

uint64_t sub_1B92080C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TTRMutableTreeStorage.child(_:of:)(a1, a2, a3);
}

uint64_t sub_1B92080E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TTRMutableTreeStorage.item(withID:)(a1, a2);
}

uint64_t sub_1B9208108@<X0>(uint64_t a1@<X8>)
{
  return TTRMutableTreeStorage.parent(of:)(a1);
}

uint64_t TTRMutableTreeStorage.descendants(of:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = sub_1B9970060();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = *(void *)(v3 + 96);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  os_log_type_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v29 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v16);
  uint64_t v19 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v4 + 88);
    uint64_t v21 = *(void *)(v4 + 104);
    uint64_t v22 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v23 = sub_1B9208598(v22);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v5, v10);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v5);
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v18, v14, v30);
    if (!sub_1B91FA624((uint64_t)v18))
    {
      uint64_t v32 = sub_1B996EF00();
      sub_1B996EFA0();
      swift_getWitnessTable();
      uint64_t v27 = sub_1B9970440();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v24);
      return v27;
    }
    swift_beginAccess();
    uint64_t v20 = *(void *)(v4 + 88);
    uint64_t v21 = *(void *)(v4 + 104);
    uint64_t v25 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v23 = sub_1B9208598(v25);
    swift_release();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v24);
  }
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = v5;
  v26[3] = v20;
  v26[4] = v10;
  void v26[5] = v21;
  v26[6] = v23;
  uint64_t v32 = v5;
  uint64_t v33 = v20;
  uint64_t v34 = v10;
  uint64_t v35 = v21;
  type metadata accessor for TTRMutableTreeStorage.DescendantIterator();
  swift_getWitnessTable();
  return sub_1B9970450();
}

uint64_t sub_1B9208598(uint64_t a1)
{
  type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level();
  sub_1B9970B30();
  swift_allocObject();
  uint64_t v2 = sub_1B996EE80();
  void *v3 = a1;
  v3[1] = 0;
  sub_1B996EFA0();
  return v2;
}

uint64_t sub_1B9208618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)v2;
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v28 = v7;
  uint64_t v29 = v5;
  uint64_t v27 = v6;
  uint64_t v26 = v4;
  while (1)
  {
    unint64_t v32 = *v2;
    uint64_t v34 = v5;
    uint64_t v35 = v4;
    uint64_t v36 = v6;
    uint64_t v37 = v7;
    type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level();
    uint64_t v8 = sub_1B996EFA0();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1B996E8E0();
    if (!v30) {
      break;
    }
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v34 = v5;
    uint64_t v35 = v4;
    uint64_t v36 = v6;
    uint64_t v37 = v7;
    uint64_t v10 = type metadata accessor for TTRTreeStorageNode();
    uint64_t v11 = MEMORY[0x1BA9D7D60](v30, v10);
    swift_bridgeObjectRelease_n();
    if (v31 != v11) {
      break;
    }
    uint64_t v12 = swift_getWitnessTable();
    MEMORY[0x1BA9D8300](&v34, v8, WitnessTable, v12);
    swift_bridgeObjectRelease();
    uint64_t v7 = v28;
    uint64_t v5 = v29;
    uint64_t v4 = v26;
    uint64_t v6 = v27;
  }
  swift_getWitnessTable();
  sub_1B996F3C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4A30);
  sub_1B920A3E8();
  swift_getWitnessTable();
  sub_1B996E8E0();
  if (v33)
  {
    uint64_t v13 = v29;
    uint64_t v14 = *(void *)(v29 - 8);
    uint64_t v15 = 1;
    uint64_t v16 = a2;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, v15, 1, v13);
  }
  sub_1B996EFE0();
  uint64_t v34 = v29;
  uint64_t v35 = v26;
  uint64_t v36 = v27;
  uint64_t v37 = v28;
  type metadata accessor for TTRTreeStorageNode();
  sub_1B996EFE0();
  swift_bridgeObjectRelease();
  uint64_t v17 = v34;
  sub_1B996EEF0();
  unint64_t v18 = *v2;
  uint64_t result = sub_1B9209D54(v32, *v3);
  unint64_t v20 = v18 + 16 * v32;
  uint64_t v22 = *(void *)(v20 + 40);
  uint64_t v21 = (void *)(v20 + 40);
  uint64_t v23 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    *uint64_t v21 = v23;
    swift_beginAccess();
    sub_1B996EFA0();
    swift_getWitnessTable();
    if ((sub_1B996F480() & 1) == 0)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B996EF60();
    }
    uint64_t v24 = v17 + *(void *)(*(void *)v17 + 120);
    swift_beginAccess();
    uint64_t v13 = v29;
    uint64_t v14 = *(void *)(v29 - 8);
    uint64_t v16 = a2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a2, v24, v29);
    swift_release();
    uint64_t v15 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, v15, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t TTRMutableTreeStorage.debugTreeDescription.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = sub_1B9970060();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v9[-v5];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v1 - 8) + 56))(&v9[-v5], 1, 1, v1, v4);
  uint64_t v10 = v0;
  uint64_t v11 = &v13;
  sub_1B9209364((uint64_t)v6, (void (*)(uint64_t, uint64_t))sub_1B920A354, (uint64_t)v9);
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v12 = v13;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B49C0);
  sub_1B90C3338((unint64_t *)&qword_1EB9B49D0, (uint64_t *)&unk_1EB9B49C0);
  uint64_t v7 = sub_1B996E910();
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_1B9208BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v28 = a4;
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1BA9D7A50](538976288, 0xE400000000000000, *(void *)(a2 + 16), v7);
  unint64_t v11 = v10;
  uint64_t v12 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  sub_1B920AC84(v12, (uint64_t)v9);
  sub_1B91C7DEC();
  sub_1B920AC24((uint64_t)v9, type metadata accessor for TTRAccountsListsViewModel.Item);
  uint64_t v13 = a1 + *(void *)(*(void *)a1 + 128);
  swift_beginAccess();
  uint64_t v14 = *(void **)v13;
  LOBYTE(v13) = *(unsigned char *)(v13 + 8);
  sub_1B91C3D58(v14, v13);
  uint64_t v15 = sub_1B91C3A84(v14, v13);
  unint64_t v17 = v16;
  sub_1B920AD50(v14, v13);
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    uint64_t v29 = 0x203A787561202CLL;
    unint64_t v30 = 0xE700000000000000;
    sub_1B996EB60();
    swift_bridgeObjectRelease();
  }
  sub_1B920AC84(v12, (uint64_t)v9);
  sub_1B9206308();
  sub_1B920AC24((uint64_t)v9, type metadata accessor for TTRAccountsListsViewModel.Item);
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_1B99704B0();
  swift_bridgeObjectRelease();
  uint64_t v29 = v27;
  unint64_t v30 = v11;
  sub_1B996EB60();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  sub_1B996EB60();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  uint64_t v19 = v29;
  unint64_t v20 = v30;
  uint64_t v21 = v28;
  uint64_t v22 = (void *)*v28;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v21 = (uint64_t)v22;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B91885B4(0, v22[2] + 1, 1, v22);
    uint64_t v22 = (void *)result;
    *uint64_t v21 = result;
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  if (v25 >= v24 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B91885B4((void *)(v24 > 1), v25 + 1, 1, v22);
    uint64_t v22 = (void *)result;
    *uint64_t v21 = result;
  }
  id v22[2] = v25 + 1;
  uint64_t v26 = &v22[2 * v25];
  v26[4] = v19;
  void v26[5] = v20;
  return result;
}

uint64_t sub_1B9208F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 88);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = v5[10];
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v17 = MEMORY[0x1BA9D7D60](v16, v10, v13);
  uint64_t v18 = MEMORY[0x1BA9D7A50](538976288, 0xE400000000000000, v17);
  unint64_t v41 = v19;
  uint64_t v42 = v18;
  uint64_t v20 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v38 = v20;
  v37(v15, v20, v10);
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v5[12] + 32))(v10);
  uint64_t v40 = v21;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
  v36(v15, v10);
  uint64_t v22 = a1 + *(void *)(*(void *)a1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v5[13] + 16))(v6);
  unint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    uint64_t v45 = 0x203A787561202CLL;
    unint64_t v46 = 0xE700000000000000;
    sub_1B996EB60();
    swift_bridgeObjectRelease();
  }
  v37(v15, v38, v10);
  TTRMutableTreeStorage.isTemporary(_:)((uint64_t)v15);
  v36(v15, v10);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_1B99704B0();
  swift_bridgeObjectRelease();
  uint64_t v45 = v42;
  unint64_t v46 = v41;
  sub_1B996EB60();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  sub_1B996EB60();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  uint64_t v27 = v45;
  unint64_t v28 = v46;
  uint64_t v29 = v44;
  unint64_t v30 = (void *)*v44;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v29 = (uint64_t)v30;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B91885B4(0, v30[2] + 1, 1, v30);
    unint64_t v30 = (void *)result;
    *uint64_t v29 = result;
  }
  unint64_t v33 = v30[2];
  unint64_t v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B91885B4((void *)(v32 > 1), v33 + 1, 1, v30);
    unint64_t v30 = (void *)result;
    *uint64_t v29 = result;
  }
  v30[2] = v33 + 1;
  uint64_t v34 = &v30[2 * v33];
  v34[4] = v27;
  v34[5] = v28;
  return result;
}

uint64_t sub_1B9209364(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  __n128 v4 = v3;
  uint64_t v38 = a3;
  uint64_t v35 = a2;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 80);
  uint64_t v9 = sub_1B9970060();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *(void *)(v6 + 96);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v35 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v18);
  uint64_t v21 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_beginAccess();
    uint64_t v22 = v4[2];
    uint64_t v23 = *(void *)(v7 + 88);
    uint64_t v24 = *(void *)(v7 + 104);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v39 = v8;
    uint64_t v40 = v23;
    uint64_t v41 = v13;
    uint64_t v42 = v24;
    type metadata accessor for TTRTreeStorageNode();
    uint64_t v25 = sub_1B996EF00();
    sub_1B9209A00(v22, v25, v35, v38);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = v35;
    (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v8, v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v8);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v20, v16, v37);
    uint64_t v28 = sub_1B91FA624((uint64_t)v20);
    if (v28)
    {
      uint64_t v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
      swift_initStackObject();
      uint64_t v30 = sub_1B996EE80();
      *uint64_t v31 = v29;
      uint64_t v32 = *(void *)(v7 + 88);
      uint64_t v33 = *(void *)(v7 + 104);
      uint64_t v39 = v8;
      uint64_t v40 = v32;
      uint64_t v41 = v13;
      uint64_t v42 = v33;
      type metadata accessor for TTRTreeStorageNode();
      sub_1B996EFA0();
      swift_retain();
      uint64_t v34 = sub_1B996EF00();
      sub_1B9209A00(v30, v34, v27, v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
    }
    else
    {
      uint64_t result = sub_1B99708A0();
      __break(1u);
    }
  }
  return result;
}

uint64_t TTRMutableTreeStorage.debugTraverseItems(startingAt:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a2;
  v4[3] = a3;
  return sub_1B9209364(a1, (void (*)(uint64_t, uint64_t))sub_1B920A35C, (uint64_t)v4);
}

uint64_t sub_1B92097D0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  uint64_t v21 = a3;
  uint64_t v5 = *(void *)(*(void *)a1 + 88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v10 = *(void *)(v9 + 80);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v17 = v16 + *(void *)(v15 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v17, v10);
  uint64_t v18 = a1 + *(void *)(*(void *)a1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
  v21(v14, v8, a2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B9209A00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8 = (void *)*v4;
  uint64_t v34 = a2;
  uint64_t v26 = v8[10];
  uint64_t v27 = v8[11];
  uint64_t v28 = v8[12];
  uint64_t v29 = v8[13];
  uint64_t v30 = v26;
  uint64_t v31 = v27;
  uint64_t v32 = v28;
  uint64_t v33 = v29;
  uint64_t v9 = type metadata accessor for TTRTreeStorageNode();
  uint64_t v10 = sub_1B996EFA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = sub_1B91F99DC((void (*)(char *, char *))sub_1B920ADB4, (uint64_t)v25, v10, v26, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v11);
  uint64_t v12 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (MEMORY[0x1BA9D7DA0](v12, v9))
  {
    uint64_t v13 = 4;
    do
    {
      uint64_t v17 = v13 - 4;
      char v18 = sub_1B996EF20();
      sub_1B996EE90();
      if (v18)
      {
        uint64_t v19 = *(void *)(a1 + 8 * v13);
        swift_retain();
        uint64_t v20 = v13 - 3;
        if (__OFADD__(v17, 1)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v19 = sub_1B9970550();
        uint64_t v20 = v13 - 3;
        if (__OFADD__(v17, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      a3(v19, v24);
      uint64_t v21 = (uint64_t *)(v19 + *(void *)(*(void *)v19 + 136));
      swift_beginAccess();
      uint64_t v34 = *v21;
      if (sub_1B996F480())
      {
        swift_release();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
        swift_allocObject();
        sub_1B996EE80();
        *uint64_t v14 = v19;
        swift_retain();
        uint64_t v15 = sub_1B996EEE0();
        swift_bridgeObjectRelease();
        uint64_t v16 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B9209A00(v16, v15, a3, a4);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      ++v13;
    }
    while (v20 != MEMORY[0x1BA9D7DA0](a1, v9));
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9209CE4(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  }
  else
  {
    return sub_1B9970B30();
  }
}

uint64_t sub_1B9209D54(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

void *sub_1B9209DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v8 = *(_OWORD *)(*v3 + 96);
  v10[0] = *(_OWORD *)(*v3 + 80);
  v10[1] = v8;
  type metadata accessor for TTRTreeStorageNode();
  *(void *)&v10[0] = sub_1B996E6B0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = sub_1B996E6A0();
  sub_1B9200F30(a1, (uint64_t)v10, (uint64_t)&v9);
  uint64_t v6 = v9;
  v3[2] = *(void *)&v10[0];
  v3[3] = v6;
  v3[4] = a2;
  return v3;
}

uint64_t sub_1B9209ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[11] = a1;
  _OWORD v10[2] = a2;
  v10[3] = a3;
  void v10[4] = a4;
  v10[5] = a5;
  v10[6] = a2;
  v10[7] = a3;
  v10[8] = a4;
  v10[9] = a5;
  type metadata accessor for TTRTreeStorageNode();
  uint64_t v6 = sub_1B996EFA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1B91F99DC((void (*)(char *, char *))sub_1B920ADB4, (uint64_t)v10, v6, a2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
}

uint64_t sub_1B9209F8C(uint64_t a1)
{
  return sub_1B91FBDD0(a1);
}

uint64_t sub_1B9209F94(uint64_t a1, void (*a2)(uint64_t, char *))
{
  char v5 = 0;
  swift_retain();
  do
  {
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      break;
    }
    a2(Strong, &v5);
    swift_release();
  }
  while (v5 != 1);

  return swift_release();
}

uint64_t sub_1B920A038()
{
  return sub_1B92017DC();
}

uint64_t sub_1B920A054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  return TTRTreeContentsQueryable.parentAndChildIndex(for:)(a1, v5, WitnessTable, a2);
}

uint64_t sub_1B920A0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 16) + 24))(*(void *)(a3 + a2 - 32));
}

uint64_t sub_1B920A134()
{
  return 32;
}

__n128 sub_1B920A140(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B920A14C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 24))(*(void *)(v0 + 16));
}

uint64_t sub_1B920A194(uint64_t a1)
{
  return sub_1B91FF134(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1B920A1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B9201D30(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B920A1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1, *(void *)(v2 + 16));
  type metadata accessor for TTRRelativeInsertionPosition();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B920A258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B9202298(a1, v2, a2);
}

uint64_t sub_1B920A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B9204358(a1, v2, a2);
}

BOOL sub_1B920A290(uint64_t a1)
{
  return sub_1B92048EC(a1, v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B920A2BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1B9206C30(a1, v2, a2);
}

uint64_t sub_1B920A2C4(uint64_t a1)
{
  return sub_1B9206E94(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

uint64_t sub_1B920A2EC(uint64_t a1, uint64_t a2)
{
  return sub_1B920782C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(uint64_t **)(v2 + 32));
}

uint64_t sub_1B920A2F8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1B920A330@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t type metadata accessor for TTRMutableTreeStorage.DescendantIterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B920A354(uint64_t a1, uint64_t a2)
{
  return sub_1B9208F08(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1B920A35C(uint64_t a1, uint64_t a2)
{
  return sub_1B92097D0(a1, a2, *(void (**)(char *, char *, uint64_t))(v2 + 16));
}

uint64_t sub_1B920A364(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1B920A36C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTRMutableTreeStorage()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1B920A3E8()
{
  unint64_t result = qword_1EB9B4970;
  if (!qword_1EB9B4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B4970);
  }
  return result;
}

uint64_t sub_1B920A43C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v39 = a5;
  uint64_t v37 = a3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  if (a2 >> 62)
  {
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v15 = sub_1B9970930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v38 = a2;
  if (!v15) {
    goto LABEL_16;
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1B90E4C34(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v36 = a1;
    uint64_t v16 = v41;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        uint64_t v19 = MEMORY[0x1BA9D9380](i, v38);
        uint64_t v20 = v19 + *(void *)(*(void *)v19 + 120);
        swift_beginAccess();
        sub_1B920AC84(v20, (uint64_t)v11);
        swift_unknownObjectRelease();
        uint64_t v41 = v16;
        unint64_t v22 = *(void *)(v16 + 16);
        unint64_t v21 = *(void *)(v16 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1B90E4C34(v21 > 1, v22 + 1, 1);
          uint64_t v16 = v41;
        }
        *(void *)(v16 + 16) = v22 + 1;
        sub_1B920ACE8((uint64_t)v11, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, type metadata accessor for TTRAccountsListsViewModel.Item);
      }
    }
    else
    {
      unint64_t v23 = a2 + 32;
      do
      {
        uint64_t v24 = *(void *)v23 + *(void *)(**(void **)v23 + 120);
        swift_beginAccess();
        sub_1B920AC84(v24, (uint64_t)v14);
        uint64_t v41 = v16;
        unint64_t v26 = *(void *)(v16 + 16);
        unint64_t v25 = *(void *)(v16 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1B90E4C34(v25 > 1, v26 + 1, 1);
          uint64_t v16 = v41;
        }
        *(void *)(v16 + 16) = v26 + 1;
        sub_1B920ACE8((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v26, type metadata accessor for TTRAccountsListsViewModel.Item);
        v23 += 8;
        --v15;
      }
      while (v15);
    }
    a1 = v36;
LABEL_16:
    if (a1 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t result = sub_1B9970930();
      uint64_t v27 = result;
      if (result)
      {
LABEL_18:
        if (v27 >= 1)
        {
          uint64_t v28 = 0;
          while (1)
          {
            if ((a1 & 0xC000000000000001) != 0)
            {
              uint64_t v29 = MEMORY[0x1BA9D9380](v28, a1);
            }
            else
            {
              uint64_t v29 = *(void *)(a1 + 8 * v28 + 32);
              swift_retain();
            }
            sub_1B9208BE8(v29, v16, a4, v39);
            uint64_t v30 = (void *)(v29 + *(void *)(*(void *)v29 + 136));
            swift_beginAccess();
            if (*v30 >> 62)
            {
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              uint64_t v34 = sub_1B9970930();
              swift_bridgeObjectRelease();
              if (v34)
              {
LABEL_26:
                unint64_t v40 = v38;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                uint64_t v31 = swift_retain();
                MEMORY[0x1BA9D7C50](v31);
                if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1B996EEB0();
                }
                sub_1B996EF30();
                sub_1B996EE70();
                unint64_t v32 = v40;
                swift_retain();
                uint64_t v33 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B920A43C(v33, v32, v37, a4, v39);
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
              }
            }
            else if (*(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_26;
            }
            swift_release();
            if (v27 == ++v28) {
              goto LABEL_33;
            }
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v27) {
        goto LABEL_18;
      }
    }
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B920A918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B30C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v24[-v15];
  sub_1B90CCA04(a1, (uint64_t)v10, &qword_1EB9B30C8);
  uint64_t v17 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  LODWORD(a1) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v10, 1, v17);
  swift_retain_n();
  if (a1 == 1)
  {
    sub_1B90CCA68((uint64_t)v10, &qword_1EB9B30C8);
    swift_beginAccess();
    swift_retain();
    unint64_t v18 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B920A43C(v18, MEMORY[0x1E4FBC860], a2, a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release_n();
  }
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v13);
  sub_1B920AC24((uint64_t)v10, type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1B920ACE8((uint64_t)v13, (uint64_t)v16, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v19 = sub_1B9770170((uint64_t)v16);
  if (v19)
  {
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B997C200;
    *(void *)(inited + 32) = v20;
    unint64_t v25 = inited;
    sub_1B996EE70();
    unint64_t v22 = v25;
    swift_retain();
    swift_retain();
    sub_1B920A43C(v22, MEMORY[0x1E4FBC860], a2, a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1B920AC24((uint64_t)v16, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return swift_release_n();
  }
  swift_release_n();
  uint64_t result = sub_1B99708A0();
  __break(1u);
  return result;
}

uint64_t sub_1B920AC24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B920AC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B920ACE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B920AD50(id a1, char a2)
{
  if (a2 != -1) {
    sub_1B920AD64(a1, a2);
  }
}

void sub_1B920AD64(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 4:

      break;
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1B920ADB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B920AFCC(a1, a2);
}

uint64_t sub_1B920ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B920AE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B920AE94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B920713C(*a1, a2);
}

BOOL sub_1B920AEC0(uint64_t a1)
{
  uint64_t v1 = sub_1B91FA624(a1);
  if (v1) {
    swift_release();
  }
  return v1 != 0;
}

uint64_t sub_1B920AEF8(uint64_t a1)
{
  return sub_1B9201F54(a1, v1[6], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1B920AF20(uint64_t a1, unsigned char *a2)
{
  return sub_1B91FF2F8(a1, a2, *(void *)(v2 + 16), *(unsigned char **)(v2 + 24));
}

uint64_t sub_1B920AF28()
{
  return sub_1B9207F80();
}

uint64_t sub_1B920AF48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B996AC10();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B920AF8C()
{
  return sub_1B9207EBC();
}

uint64_t sub_1B920AFAC@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  return sub_1B9207B78(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B920AFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)a1 + *(void *)(**(void **)a1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v5, v4);
}

void *sub_1B920B06C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

void *sub_1B920B09C(void *a1, void *a2)
{
  *a1 = *a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *sub_1B920B0EC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_1B920B12C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B920AE94(a1, a2);
}

id TTRNoDefaultImplicitActionLayer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id TTRNoDefaultImplicitActionLayer.init()()
{
  return sub_1B920B324(type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionLayer()
{
  return self;
}

id TTRNoDefaultImplicitActionLayer.init(layer:)(void *a1)
{
  return sub_1B920B430(a1, type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id TTRNoDefaultImplicitActionLayer.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TTRNoDefaultImplicitActionLayer.init(coder:)(void *a1)
{
  return sub_1B920B4E4(a1, type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id TTRNoDefaultImplicitActionLayer.__deallocating_deinit()
{
  return sub_1B920B808(type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id _s15RemindersUICore31TTRNoDefaultImplicitActionLayerC07defaultF06forKeySo8CAAction_pSgSS_tFZ_0()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CA98]);

  return objc_msgSend(v0, sel_init);
}

id TTRNoDefaultImplicitActionShapeLayer.init()()
{
  return sub_1B920B324(type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B920B324(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionShapeLayer()
{
  return self;
}

id _s15RemindersUICore31TTRNoDefaultImplicitActionLayerC5layerACyp_tcfC_0(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1B9970B90());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

id TTRNoDefaultImplicitActionShapeLayer.init(layer:)(void *a1)
{
  return sub_1B920B430(a1, type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B920B430(void *a1, uint64_t (*a2)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_1B9970B90();
  v8.receiver = v2;
  v8.super_class = (Class)a2();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithLayer_, v5);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

id TTRNoDefaultImplicitActionShapeLayer.init(coder:)(void *a1)
{
  return sub_1B920B4E4(a1, type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B920B4E4(void *a1, uint64_t (*a2)(void))
{
  v6.receiver = v2;
  v6.super_class = (Class)a2();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id TTRNoDefaultImplicitActionShapeLayer.__deallocating_deinit()
{
  return sub_1B920B808(type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B920B5B0()
{
  return sub_1B920B808(type metadata accessor for TTRNoDefaultImplicitActionGradientLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionGradientLayer()
{
  return self;
}

id sub_1B920B634()
{
  return sub_1B920B808(type metadata accessor for TTRNoDefaultImplicitTransformLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitTransformLayer()
{
  return self;
}

id sub_1B920B688(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1B920B6E4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  swift_unknownObjectRetain();
  sub_1B9970200();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v6 = sub_1B9970B90();
  v9.receiver = a1;
  v9.super_class = (Class)a4();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithLayer_, v6);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v7;
}

id sub_1B920B7A4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1B920B7F0()
{
  return sub_1B920B808(type metadata accessor for TTRNoDefaultImplicitScrollLayer);
}

id sub_1B920B808(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitScrollLayer()
{
  return self;
}

uint64_t static TTRTextFieldCharacterLimiter.isWithinCharacterLimit(for:range:replacementString:maxLength:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a5) {
    return 1;
  }
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_string);
  if (result)
  {
    uint64_t v11 = (void *)result;
    uint64_t v12 = (void *)sub_1B996E9B0();
    id v13 = objc_msgSend(v11, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v12);

    sub_1B996E9F0();
    uint64_t v14 = sub_1B996EB00();
    id v15 = objc_msgSend(a1, sel_string);
    sub_1B996E9F0();

    uint64_t v16 = sub_1B996EB00();
    swift_bridgeObjectRelease();
    if (v16 < v14)
    {
      uint64_t v17 = sub_1B996EB00();
      swift_bridgeObjectRelease();

      return v17 <= a6;
    }

    swift_bridgeObjectRelease();
    return 1;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for TTRTextFieldCharacterLimiter()
{
  return &type metadata for TTRTextFieldCharacterLimiter;
}

uint64_t TTRBoardReminderCellTitleConfiguration.module.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B9970060();
  objc_super v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TTRBoardReminderCellTitleConfiguration.module.setter(uint64_t a1)
{
  uint64_t v3 = sub_1B9970060();
  objc_super v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TTRBoardReminderCellTitleConfiguration.module.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellTitleConfiguration.viewModelUpdate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B920BAE4(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1B920BAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TTRBoardReminderCellTitleConfiguration.viewModelUpdate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B920BB58(a1, v2 + *(int *)(a2 + 28));
}

uint64_t sub_1B920BB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TTRBoardReminderCellTitleConfiguration.viewModelUpdate.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellTitleConfiguration.init(module:viewModelUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 1, 1, a3);
  uint64_t v7 = sub_1B9970060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(a4, a1, v7);
  uint64_t v8 = type metadata accessor for TTRBoardReminderCellTitleConfiguration();
  return sub_1B90BFE54(a2, a4 + *(int *)(v8 + 28), &qword_1E9EFDC30);
}

uint64_t type metadata accessor for TTRBoardReminderCellTitleConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TTRBoardReminderCellNotesConfiguration.isHidden.getter()
{
  return *v0;
}

uint64_t TTRBoardReminderCellNotesConfiguration.isHidden.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.isHidden.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.module.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1B9970060();
  objc_super v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t TTRBoardReminderCellNotesConfiguration.module.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1B9970060();
  objc_super v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.module.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.viewModelUpdate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
  objc_super v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for TTRBoardReminderCellOptionalUpdate()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TTRBoardReminderCellNotesConfiguration.viewModelUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
  objc_super v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.viewModelUpdate.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.init(isHidden:module:viewModelUpdate:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for TTRBoardReminderCellNotesConfiguration();
  uint64_t v11 = &a5[*(int *)(v10 + 36)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v11, 1, 1, a4);
  *a5 = a1;
  uint64_t v12 = sub_1B9970060();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v11, a2, v12);
  id v13 = &a5[*(int *)(v10 + 40)];
  uint64_t v14 = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
  id v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);

  return v15(v13, a3, v14);
}

uint64_t type metadata accessor for TTRBoardReminderCellNotesConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.getter()
{
  return *v0;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellCompletedButtonConfiguration.tintColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void TTRBoardReminderCellCompletedButtonConfiguration.tintColor.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.preferredSymbolConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.onCompletedPressed.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

void *TTRBoardReminderCellLocationConfiguration.icon.getter(void *a1)
{
  id v2 = a1;
  return a1;
}

void TTRBoardReminderCellLocationConfiguration.icon.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*TTRBoardReminderCellLocationConfiguration.icon.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellLocationConfiguration.attributedDescription.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void TTRBoardReminderCellLocationConfiguration.attributedDescription.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellLocationConfiguration.attributedDescription.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellLocationConfiguration.isHidden.getter(int a1, id a2)
{
  if (!a2) {
    return 1;
  }
  id v2 = objc_msgSend(a2, sel_string);
  uint64_t v3 = sub_1B996E9F0();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  return v6 == 0;
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B996A580();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.url.setter(uint64_t a1)
{
  uint64_t v3 = sub_1B996A580();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.url.modify())()
{
  return nullsub_1;
}

id TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 20));

  return v1;
}

uint64_t type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment()
{
  uint64_t result = qword_1E9EFDDD0;
  if (!qword_1E9EFDDD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 20);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.modify())(void)
{
  return nullsub_1;
}

void *TTRBoardReminderCellURLConfiguration.Attachment.metadata.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 24));
  id v2 = v1;
  return v1;
}

void TTRBoardReminderCellURLConfiguration.Attachment.metadata.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 24);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.init(url:attachmentID:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = sub_1B996A580();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  *(void *)(a4 + *(int *)(v8 + 20)) = a2;
  *(void *)(a4 + v9) = a3;
  return result;
}

uint64_t TTRBoardReminderCellURLConfiguration.attachments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.attachments.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellURLConfiguration.isHidden.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.contact.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.name.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.onAssigneePress.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellAssigneeConfiguration.isHidden.getter()
{
  return *v0 == 0;
}

id TTRBoardReminderCellAppLinkConfiguration.icon.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void TTRBoardReminderCellAppLinkConfiguration.icon.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.name.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B90C3328(v1);
  return v1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B90C337C(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.modify())()
{
  return nullsub_1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationV7contact4name02onF5PressACSo9CNContactCSg_SSSgySo6UIViewCcSgtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

BOOL TTRBoardReminderCellAppLinkConfiguration.isHidden.getter()
{
  sub_1B90BFE54(v0, (uint64_t)&v2, &qword_1E9EFDC38);
  sub_1B90BFE54((uint64_t)&v2, (uint64_t)&v3, &qword_1E9EFDC38);
  return !v3 && *(void *)(v0 + 16) == 0;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.getter()
{
  return *v0;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellShowSubtasksConfiguration.tintColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void TTRBoardReminderCellShowSubtasksConfiguration.tintColor.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B90C3328(v1);
  return v1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B90C337C(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v1 = 0;
    if (*(unsigned char *)v0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 8);
    if (*(unsigned char *)v0)
    {
LABEL_3:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_7;
      }
      goto LABEL_8;
    }
  }
  if (qword_1EB9B6110 != -1) {
LABEL_8:
  }
    swift_once();
LABEL_7:
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = v1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isHidden.getter()
{
  return *(unsigned char *)(v0 + 16) & 1 | (*(void *)(v0 + 8) == 0);
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.getter()
{
  uint64_t v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellSubtaskCountConfiguration.tintColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void TTRBoardReminderCellSubtaskCountConfiguration.tintColor.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.onSubtaskCountPressed.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCount:displayStyle:tintColor:onSubtaskCountPressed:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  if (a3 != 2 && (a3 & 1) == 0 && (a2 & 1) == 0)
  {
    uint64_t v15 = result;
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v16 + 16) = xmmword_1B997AB90;
    uint64_t v18 = MEMORY[0x1E4FBB5C8];
    *(void *)(v16 + 56) = v17;
    *(void *)(v16 + 64) = v18;
    *(void *)(v16 + 32) = v15;
    uint64_t v13 = sub_1B996E9C0();
    uint64_t v14 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *a7 = v13;
  a7[1] = v14;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = a6;
  return result;
}

BOOL TTRBoardReminderCellSubtaskCountConfiguration.isHidden.getter()
{
  sub_1B90BFE54(v0, (uint64_t)v3, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)v3, (uint64_t)&v4, &qword_1EB9A8D10);
  if (!v5) {
    return 1;
  }
  if ((v5 & 0x2000000000000000) != 0) {
    uint64_t v1 = HIBYTE(v5) & 0xF;
  }
  else {
    uint64_t v1 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v1 == 0;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.getter()
{
  uint64_t v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B90C3328(v1);
  return v1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B90C337C(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.init(sectionTitle:onSuggestedSectionPress:isEditingItem:isInMultiSelectMode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 33) = a6;
  return result;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isHidden.getter()
{
  sub_1B90BFE54(v0, (uint64_t)v2, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)v2, (uint64_t)v3, &qword_1EB9A8D10);
  if (!v4 || (*(unsigned char *)(v0 + 32) & 1) != 0) {
    return 1;
  }
  else {
    return *(unsigned char *)(v0 + 33) & 1;
  }
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.infoButtonState.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.infoButtonState.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellInfoButtonConfiguration.tintColor.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void TTRBoardReminderCellInfoButtonConfiguration.tintColor.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B90C337C(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.modify())()
{
  return nullsub_1;
}

BOOL static TTRBoardReminderCellInfoButtonVisibility.Layout.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRBoardReminderCellInfoButtonVisibility.Layout.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t TTRBoardReminderCellInfoButtonVisibility.Layout.hashValue.getter()
{
  return sub_1B9970D60();
}

uint64_t static TTRBoardReminderCellInfoButtonVisibility.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  uint64_t result = a2 == 2 && a1 == 2;
  if (v2 != 2)
  {
    BOOL v4 = ((a2 ^ v2) & 1) == 0;
    if (a2 == 2) {
      return result;
    }
    else {
      return v4;
    }
  }
  return result;
}

BOOL sub_1B920D3D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2) {
    return ((v3 ^ v2) & 1) == 0;
  }
  return result;
}

uint64_t TTRBoardReminderCellContentConfigurationType.notesTextViewIsHidden.getter(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for TTRBoardReminderCellNotesConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (unsigned __int8 *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 144))(a1, a2, v6);
  uint64_t v9 = *v8;
  (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v8, v4);
  return v9;
}

BOOL TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 336))();
  if (!v3) {
    return 1;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 384))();
  if (!v3) {
    return 1;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.flaggedIndicatorIsHidden.getter(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 360))() & 1) == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 432))();
  if (!v2) {
    return 1;
  }
  unint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_string);

  uint64_t v5 = sub_1B996E9F0();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  return v8 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 408))();
  if (!v3) {
    return 1;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 216))(v7);
  sub_1B90BFE54((uint64_t)v7, (uint64_t)v10, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)v10, (uint64_t)&v11, &qword_1EB9A8D10);
  unint64_t v2 = v12;
  if (v12)
  {
    uint64_t v3 = v11;
    sub_1B91CD6CC((uint64_t)v10);
    uint64_t v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v5 = v4 == 0;
  }
  else
  {
    BOOL v5 = 1;
  }
  sub_1B90BFE54((uint64_t)v8, (uint64_t)&v9, &qword_1E9F060C0);
  sub_1B918297C(&v9);
  sub_1B90C337C(v8[1]);
  return v5;
}

BOOL TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(a2 + 168))();
  uint64_t v4 = v2;
  if (v2)
  {
    id v5 = objc_msgSend(v2, sel_string);
    uint64_t v6 = sub_1B996E9F0();
    unint64_t v8 = v7;

    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v10 = v9 == 0;
  }
  else
  {
    BOOL v10 = 1;
  }

  return v10;
}

uint64_t TTRBoardReminderCellContentConfigurationType.imageAttachmentsAreHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 288))(a1, a2, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
  return a2 & 1;
}

BOOL TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(id *__return_ptr))(a2 + 480))(&v4);
  BOOL v2 = v4 == 0;

  sub_1B90BFE54((uint64_t)v5, (uint64_t)v6, &qword_1EB9A8D10);
  sub_1B91CD6CC((uint64_t)v6);
  sub_1B90C337C(v5[2]);
  return v2;
}

BOOL TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 504))(&v4);
  sub_1B90BFE54((uint64_t)&v4, (uint64_t)&v7, &qword_1E9EFDC38);
  sub_1B90BFE54((uint64_t)&v7, (uint64_t)&v8, &qword_1E9EFDC38);
  if (v8)
  {
    sub_1B918297C(&v7);
    BOOL v2 = 0;
  }
  else
  {
    BOOL v2 = v5[1] == 0;
  }
  sub_1B90BFE54((uint64_t)v5, (uint64_t)v6, &qword_1EB9A8D10);
  sub_1B91CD6CC((uint64_t)v6);
  sub_1B90C337C(v5[2]);
  return v2;
}

BOOL TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 456))() + 16);
  swift_bridgeObjectRelease();
  return v2 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.accessoriesAreHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  BOOL v14 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(v12, v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v11, v3, a1);
  BOOL v16 = v14 && TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(a1, a2);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v11, a1);
  v15(v8, v3, a1);
  if (v16)
  {
    uint64_t v18 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 456))(a1, a2) + 16);
    swift_bridgeObjectRelease();
    BOOL v19 = v18 == 0;
  }
  else
  {
    BOOL v19 = 0;
  }
  v17(v8, a1);
  return v19;
}

uint64_t TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 192))(v4);
  char v2 = v5 | (v4[1] == 0);
  sub_1B90BFE54((uint64_t)v6, (uint64_t)&v7, &qword_1E9F060C0);
  sub_1B918297C(&v7);
  sub_1B90C337C(v6[1]);
  return v2 & 1;
}

uint64_t TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter(uint64_t a1, uint64_t a2)
{
  char v4 = (*(uint64_t (**)(void))(a2 + 264))();
  uint64_t v6 = v5;

  sub_1B90C337C(v6);
  uint64_t result = 2;
  switch(v4)
  {
    case 1:
      goto LABEL_3;
    case 2:
      if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2) & 1) == 0) {
        goto LABEL_4;
      }
LABEL_3:
      uint64_t result = 1;
      break;
    case 3:
    case 5:
      return result;
    case 4:
      if ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2)) {
        return 1;
      }
      else {
        return 2;
      }
    default:
LABEL_4:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t TTRBoardReminderCellContentConfigurationType.suggestedSectionButtonIsHidden.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 240))(v4);
  sub_1B90BFE54((uint64_t)v4, (uint64_t)v7, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)v7, (uint64_t)v8, &qword_1EB9A8D10);
  if (!v9 || (sub_1B91CD6CC((uint64_t)v7), (v5 & 1) != 0)) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = v6 & 1;
  }
  sub_1B90C337C(v4[2]);
  return v2;
}

unint64_t sub_1B920DF10()
{
  unint64_t result = qword_1E9EFDC40[0];
  if (!qword_1E9EFDC40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9EFDC40);
  }
  return result;
}

uint64_t sub_1B920DF64()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1B920E000(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v10 = v9 + 8;
  size_t v11 = v9 + 9;
  if (v7) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v11;
  }
  int v13 = *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0 || v12 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((unsigned __int16)((v13 & 0xF8) + 23) & (unsigned __int16)~(v13 & 0xF8) & 0x1F8));
    swift_retain();
    return a1;
  }
  if (!v7)
  {
    if (!*((unsigned char *)a2 + v10)) {
      goto LABEL_18;
    }
    int v16 = *((unsigned __int8 *)a2 + v10) - 1;
    int v17 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      int v16 = 0;
      int v17 = *(_DWORD *)a2;
    }
    if ((v17 | v16) == 0xFFFFFFFF) {
      goto LABEL_18;
    }
LABEL_17:
    memcpy(a1, a2, v12);
    return a1;
  }
  if ((*(unsigned int (**)(void *, void, uint64_t))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), v5)) {
    goto LABEL_17;
  }
LABEL_18:
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
  *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (!v7) {
    *((unsigned char *)a1 + v10) = 0;
  }
  return a1;
}

uint64_t sub_1B920E18C(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5)
  {
    uint64_t v13 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    uint64_t v4 = v13;
    if (result) {
      return result;
    }
    goto LABEL_13;
  }
  unint64_t v7 = ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!*((unsigned char *)a1 + v7)
    || ((uint64_t v8 = v7 & 0xFFFFFFF8, (v7 & 0xFFFFFFF8) != 0)
      ? (int v9 = 0)
      : (int v9 = *((unsigned __int8 *)a1 + v7) - 1),
        !v8 ? (int v10 = 0) : (int v10 = *a1),
        int v11 = v10 | v9,
        uint64_t result = (v11 + 1),
        v11 == -1))
  {
LABEL_13:
    size_t v12 = *(uint64_t (**)(_DWORD *, uint64_t))(v4 + 8);
    return v12(a1, v3);
  }
  return result;
}

unsigned char *sub_1B920E2A0(unsigned char *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v9 + 8;
  if (v7)
  {
    if (!(*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_12:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (!v7) {
        a1[v10] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v10)) {
      goto LABEL_12;
    }
    int v11 = *((unsigned __int8 *)a2 + v10) - 1;
    int v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      int v11 = 0;
      int v12 = *a2;
    }
    if ((v12 | v11) == 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  if (v7) {
    size_t v13 = v9 + 8;
  }
  else {
    size_t v13 = v9 + 9;
  }
  memcpy(a1, a2, v13);
  return a1;
}

unsigned char *sub_1B920E3EC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v10 = v9 + 8;
  if (!v7)
  {
    if (*((unsigned char *)a1 + v10))
    {
      int v14 = *((unsigned __int8 *)a1 + v10) - 1;
      if (v9 == -8)
      {
        int v15 = 0;
      }
      else
      {
        int v14 = 0;
        int v15 = *a1;
      }
      if ((v15 | v14) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v10)) {
          goto LABEL_29;
        }
        int v16 = *((unsigned __int8 *)a2 + v10) - 1;
        if (v9 == -8)
        {
          int v17 = 0;
        }
        else
        {
          int v16 = 0;
          int v17 = *a2;
        }
        uint64_t v4 = a1;
        if ((v17 | v16) == 0xFFFFFFFF) {
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    if (!*((unsigned char *)a2 + v10))
    {
LABEL_22:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 24))(v4, a2, v5);
      *(void *)((unint64_t)&v4[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      return v4;
    }
    int v18 = *((unsigned __int8 *)a2 + v10) - 1;
    if (v9 != -8) {
      int v18 = 0;
    }
    __dst = a1;
    if (v9 == -8) {
      int v19 = 0;
    }
    else {
      int v19 = *a2;
    }
    int v13 = (v19 | v18) + 1;
LABEL_20:
    uint64_t v4 = __dst;
    if (v13)
    {
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(__dst, v5);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  int v11 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  __dst = a1;
  int v12 = v11(a1, v7, v5);
  int v13 = v11(a2, v7, v5);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v4 = __dst;
  if (!v13)
  {
LABEL_29:
    (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 16))(v4, a2, v5);
    *(void *)((unint64_t)&v4[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (!v7) {
      v4[v10] = 0;
    }
    return v4;
  }
LABEL_25:
  if (v7) {
    size_t v20 = v10;
  }
  else {
    size_t v20 = v9 + 9;
  }
  memcpy(v4, a2, v20);
  return v4;
}

unsigned char *sub_1B920E64C(unsigned char *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v9 + 8;
  if (v7)
  {
    if (!(*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_12:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      *(void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (!v7) {
        a1[v10] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v10)) {
      goto LABEL_12;
    }
    int v11 = *((unsigned __int8 *)a2 + v10) - 1;
    int v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      int v11 = 0;
      int v12 = *a2;
    }
    if ((v12 | v11) == 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  if (v7) {
    size_t v13 = v9 + 8;
  }
  else {
    size_t v13 = v9 + 9;
  }
  memcpy(a1, a2, v13);
  return a1;
}

unsigned char *sub_1B920E798(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v10 = v9 + 8;
  if (!v7)
  {
    if (*((unsigned char *)a1 + v10))
    {
      int v14 = *((unsigned __int8 *)a1 + v10) - 1;
      if (v9 == -8)
      {
        int v15 = 0;
      }
      else
      {
        int v14 = 0;
        int v15 = *a1;
      }
      if ((v15 | v14) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v10)) {
          goto LABEL_29;
        }
        int v16 = *((unsigned __int8 *)a2 + v10) - 1;
        if (v9 == -8)
        {
          int v17 = 0;
        }
        else
        {
          int v16 = 0;
          int v17 = *a2;
        }
        uint64_t v4 = a1;
        if ((v17 | v16) == 0xFFFFFFFF) {
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    if (!*((unsigned char *)a2 + v10))
    {
LABEL_22:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 40))(v4, a2, v5);
      *(void *)((unint64_t)&v4[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      return v4;
    }
    int v18 = *((unsigned __int8 *)a2 + v10) - 1;
    if (v9 != -8) {
      int v18 = 0;
    }
    __dst = a1;
    if (v9 == -8) {
      int v19 = 0;
    }
    else {
      int v19 = *a2;
    }
    int v13 = (v19 | v18) + 1;
LABEL_20:
    uint64_t v4 = __dst;
    if (v13)
    {
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(__dst, v5);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  int v11 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  __dst = a1;
  int v12 = v11(a1, v7, v5);
  int v13 = v11(a2, v7, v5);
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v4 = __dst;
  if (!v13)
  {
LABEL_29:
    (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v6 + 32))(v4, a2, v5);
    *(void *)((unint64_t)&v4[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (!v7) {
      v4[v10] = 0;
    }
    return v4;
  }
LABEL_25:
  if (v7) {
    size_t v20 = v10;
  }
  else {
    size_t v20 = v9 + 9;
  }
  memcpy(v4, a2, v20);
  return v4;
}

uint64_t sub_1B920E9F8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (v5)
  {
    uint64_t v7 = 8;
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v7 = 9;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_17;
  }
  unint64_t v9 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v7;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v11 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v11))
    {
      int v12 = *(_DWORD *)((char *)a1 + v9);
      if (v12) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
    if (v11 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v9);
      if (*(_WORD *)((char *)a1 + v9)) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
    if (v11 < 2) {
      goto LABEL_17;
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9))
  {
LABEL_17:
    if (v5 >= 2)
    {
      unsigned int v15 = (*(uint64_t (**)(void))(v4 + 48))();
      if (v15 >= 2) {
        return v15 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
LABEL_11:
  int v13 = (v12 - 1) << v10;
  if (v9 >= 4) {
    int v13 = 0;
  }
  if (v9)
  {
    if (v9 == 1) {
      LODWORD(v9) = *(unsigned __int8 *)a1;
    }
    else {
      LODWORD(v9) = *a1;
    }
  }
  return v6 + (v9 | v13) + 1;
}

void sub_1B920EB4C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  unint64_t v10 = (*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v11 = v10 + 8;
  size_t v12 = v10 + 9;
  if (v8) {
    size_t v13 = v11;
  }
  else {
    size_t v13 = v12;
  }
  BOOL v14 = a3 >= v9;
  unsigned int v15 = a3 - v9;
  if (v15 == 0 || !v14)
  {
LABEL_16:
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_16;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_17:
    unsigned int v17 = ~v9 + a2;
    if (v13 >= 4)
    {
      bzero(a1, v13);
      int v18 = 1;
LABEL_22:
      *(_DWORD *)a1 = v17;
      goto LABEL_23;
    }
    int v18 = (v17 >> (8 * v13)) + 1;
    if (v13)
    {
      v17 &= ~(-1 << (8 * v13));
      bzero(a1, v13);
      if (v13 != 1) {
        goto LABEL_22;
      }
      *a1 = v17;
    }
LABEL_23:
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_26:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1B920EDACLL);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v8 >= 2)
        {
          if (a2 + 1 <= v8)
          {
            if (a2 != -1)
            {
              size_t v20 = *(void (**)(void))(v7 + 56);
              v20();
            }
          }
          else if (v11)
          {
            unsigned int v19 = a2 - v8;
            bzero(a1, v11);
            *(_DWORD *)a1 = v19;
          }
        }
      }
      return;
  }
}

uint64_t sub_1B920EDD4(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  unint64_t v4 = ((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!*((unsigned char *)a1 + v4)) {
    return 0;
  }
  uint64_t v5 = v4 & 0xFFFFFFF8;
  if ((v4 & 0xFFFFFFF8) != 0) {
    int v6 = 0;
  }
  else {
    int v6 = *((unsigned __int8 *)a1 + v4) - 1;
  }
  if (v5) {
    int v7 = *a1;
  }
  else {
    int v7 = 0;
  }
  return (v7 | v6) + 1;
}

void sub_1B920EE78(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 <= v5)
  {
    if (v5)
    {
      if (!a2) {
        return;
      }
    }
    else
    {
      a1[v6] = 0;
      if (!a2) {
        return;
      }
    }
    unsigned int v9 = *(void (**)(void))(v4 + 56);
    v9();
  }
  else
  {
    if (((*(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      char v7 = a2 - v5;
    }
    else {
      char v7 = 1;
    }
    if (((*(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v8 = ~v5 + a2;
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
    }
    if (!v5) {
      a1[v6] = v7;
    }
  }
}

void sub_1B920EF80()
{
  sub_1B9970060();
  if (v0 <= 0x3F)
  {
    sub_1B921ED64();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1B920F04C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v242 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v242 - 8);
  uint64_t v241 = v3;
  if (*(_DWORD *)(v3 + 84)) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  size_t __n = v4;
  uint64_t v235 = sub_1B996A6F0();
  uint64_t v5 = *(void *)(v235 - 8);
  uint64_t v6 = v5;
  int v238 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v238 & 0xF8;
  uint64_t v232 = sub_1B996BAD0();
  uint64_t v8 = *(void *)(v232 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_1B996D7B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v5;
  unint64_t v13 = *(_DWORD *)(v11 + 80);
  uint64_t v14 = v9 | v13 | v7 | 7;
  unint64_t v15 = *(void *)(v12 + 64);
  if (v15 <= 0x19) {
    uint64_t v16 = 25;
  }
  else {
    uint64_t v16 = *(void *)(v12 + 64);
  }
  unint64_t v17 = (((v16 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v18 = v7 + 15;
  uint64_t v237 = v238 & 0xF8 | 7;
  uint64_t v19 = (v7 + 15) & ~(v7 | 7);
  uint64_t v231 = v8;
  uint64_t v20 = v9 + 8;
  uint64_t v233 = v9;
  unint64_t v21 = *(void *)(v8 + 64) + (v20 & ~(unint64_t)v9);
  uint64_t v236 = v6;
  unsigned int v22 = *(_DWORD *)(v6 + 84);
  unint64_t v23 = v21 + 7;
  unint64_t v24 = v16 + 1 + v19;
  if (v24 > v17) {
    unint64_t v17 = v24;
  }
  if (v17 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v17 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  uint64_t v234 = *(void *)(v12 + 64);
  if (v17 <= (v15 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v25 = *(void *)(*(void *)(v10 - 8) + 64) + ((v13 + 1) & ~v13);
  if (v17 > v25) {
    unint64_t v25 = v17;
  }
  if (v25 <= 0x18) {
    uint64_t v26 = 24;
  }
  else {
    uint64_t v26 = v25;
  }
  if (v26 > 3) {
    goto LABEL_22;
  }
  unsigned int v27 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  uint64_t v28 = 2;
  if (v27 > 0xFFF5) {
    uint64_t v28 = 4;
  }
  if (v27 <= 0xF5) {
LABEL_22:
  }
    uint64_t v28 = 1;
  uint64_t v29 = v14 | *(_DWORD *)(v241 + 80);
  if (v29 != 7
    || ((v9 | v238 | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v241 + 80)) & 0x100000) != 0
    || (size_t v30 = v14 + __n,
        ((v14 + __n) & ~v14)
      + ((((((((v28 + v26) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    uint64_t v33 = (uint64_t *)(v34 + ((v29 + 16) & ~v29));
    swift_retain();
    return v33;
  }
  uint64_t v239 = v16;
  unint64_t v226 = v13 + 1;
  unsigned int v225 = v22;
  int v227 = *(_DWORD *)(v8 + 84);
  uint64_t v31 = *(_DWORD *)(v11 + 80);
  uint64_t v32 = v18;
  uint64_t v228 = *(void *)(v10 - 8);
  uint64_t v229 = v10;
  size_t v223 = v21;
  size_t v230 = v16 + 1;
  uint64_t v224 = v20;
  uint64_t v33 = a1;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v241 + 48))(a2, 1, v242))
  {
    memcpy(a1, a2, __n);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v241 + 16))(a1, a2, v242);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v241 + 56))(a1, 0, 1, v242);
  }
  uint64_t v35 = v32;
  uint64_t v36 = v26;
  uint64_t v37 = ~v14;
  if (v26 > 3)
  {
    int v38 = 11;
    uint64_t v39 = v239;
LABEL_32:
    char v40 = 8;
    goto LABEL_33;
  }
  unsigned int v44 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  uint64_t v39 = v239;
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_42;
  }
  int v38 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_32;
  }
  char v40 = 16;
LABEL_33:
  unsigned int v41 = (1 << v40) - v38;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_42:
  uint64_t v45 = (void *)(((unint64_t)a1 + v30) & v37);
  unint64_t v46 = (unsigned __int16 *)(((unint64_t)a2 + v30) & v37);
  if (v26 > 3)
  {
    int v47 = 11;
LABEL_44:
    char v48 = 8;
    goto LABEL_45;
  }
  unsigned int v53 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  if (v53 > 0xFFF5) {
    goto LABEL_56;
  }
  int v47 = v53 + 10;
  if (v53 <= 0xF5) {
    goto LABEL_44;
  }
  char v48 = 16;
LABEL_45:
  int v49 = (1 << v48) - v47;
  if ((v49 & 0x80000000) == 0)
  {
    if (v49 == v42) {
      goto LABEL_47;
    }
LABEL_57:
    if (v26 > 3) {
      goto LABEL_61;
    }
    unsigned int v54 = ((1 << (8 * v26)) + 1) >> (8 * v26);
    uint64_t v55 = 2;
    if (v54 > 0xFFF5) {
      uint64_t v55 = 4;
    }
    if (v54 <= 0xF5) {
LABEL_61:
    }
      uint64_t v55 = 1;
    unint64_t v56 = *(void *)((((unint64_t)v46 + v26 + v55) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v56 >= 0xFFFFFFFF) {
      LODWORD(v56) = -1;
    }
    if (v56 == -1) {
      goto LABEL_104;
    }
    goto LABEL_183;
  }
LABEL_56:
  if (v42 != 0x7FFFFFFF) {
    goto LABEL_57;
  }
LABEL_47:
  if (v26 > 3)
  {
    int v50 = 11;
LABEL_49:
    char v51 = 8;
    goto LABEL_50;
  }
  unsigned int v57 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  if (v57 > 0xFFF5) {
    goto LABEL_69;
  }
  int v50 = v57 + 10;
  if (v57 <= 0xF5) {
    goto LABEL_49;
  }
  char v51 = 16;
LABEL_50:
  unsigned int v52 = (1 << v51) - v50;
  if ((v52 & 0x80000000) == 0)
  {
    if (v26 > 3) {
      goto LABEL_73;
    }
LABEL_70:
    unsigned int v58 = ((1 << (8 * v26)) + 1) >> (8 * v26);
    uint64_t v59 = 2;
    if (v58 > 0xFFF5) {
      uint64_t v59 = 4;
    }
    if (v58 > 0xF5) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
LABEL_69:
  unsigned int v52 = 0x7FFFFFFF;
  if (v26 <= 3) {
    goto LABEL_70;
  }
LABEL_73:
  uint64_t v59 = 1;
LABEL_74:
  unsigned int v60 = v42 - v52;
  if (v42 <= v52) {
    goto LABEL_91;
  }
  uint64_t v61 = v59 + v26;
  char v62 = 8 * (v59 + v26);
  if (v61 > 3) {
    goto LABEL_76;
  }
  unsigned int v64 = ((v60 + ~(-1 << v62)) >> v62) + 1;
  if (HIWORD(v64))
  {
    int v63 = *(_DWORD *)((char *)v46 + v61);
    if (!v63) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  if (v64 > 0xFF)
  {
    int v63 = *(unsigned __int16 *)((char *)v46 + v61);
    if (!*(unsigned __int16 *)((char *)v46 + v61)) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  if (v64 >= 2)
  {
LABEL_76:
    int v63 = *((unsigned __int8 *)v46 + v61);
    if (!*((unsigned char *)v46 + v61)) {
      goto LABEL_91;
    }
LABEL_83:
    int v65 = (v63 - 1) << v62;
    if (v61 > 3) {
      int v65 = 0;
    }
    if (v61)
    {
      if (v61 > 3) {
        LODWORD(v61) = 4;
      }
      switch((int)v61)
      {
        case 2:
          LODWORD(v61) = *v46;
          break;
        case 3:
          LODWORD(v61) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          break;
        case 4:
          LODWORD(v61) = *(_DWORD *)v46;
          break;
        default:
          LODWORD(v61) = *(unsigned __int8 *)v46;
          break;
      }
    }
    if (v52 + (v61 | v65) == -1) {
      goto LABEL_104;
    }
    goto LABEL_183;
  }
LABEL_91:
  if (!v52) {
    goto LABEL_104;
  }
  if (v26 > 3)
  {
    int v66 = *((unsigned __int8 *)v46 + v26);
    unsigned int v67 = v66 | 0xFFFFFF00;
    unsigned int v68 = v66 ^ 0xFF;
    char v69 = 8;
    int v70 = 11;
    goto LABEL_99;
  }
  unsigned int v71 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  if (v71 <= 0xFFF5)
  {
    int v70 = v71 + 10;
    if (v71 > 0xF5)
    {
      int v73 = *(unsigned __int16 *)((char *)v46 + v26);
      unsigned int v67 = v73 | 0xFFFF0000;
      unsigned int v68 = v73 ^ 0xFFFF;
      char v69 = 16;
    }
    else
    {
      int v72 = *((unsigned __int8 *)v46 + v26);
      unsigned int v67 = v72 | 0xFFFFFF00;
      unsigned int v68 = v72 ^ 0xFF;
      char v69 = 8;
    }
LABEL_99:
    unsigned int v74 = (1 << v69) - v70;
    if ((v74 & 0x80000000) == 0)
    {
      if (v74 <= v68) {
        goto LABEL_104;
      }
LABEL_103:
      if (!v67) {
        goto LABEL_104;
      }
LABEL_183:
      if (v26 > 3) {
        goto LABEL_187;
      }
      unsigned int v119 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      uint64_t v120 = 2;
      if (v119 > 0xFFF5) {
        uint64_t v120 = 4;
      }
      if (v119 <= 0xF5) {
LABEL_187:
      }
        uint64_t v120 = 1;
      memcpy(v45, v46, ((((((((v120 + v26) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      return v33;
    }
    goto LABEL_102;
  }
  unsigned int v67 = *(_DWORD *)((char *)v46 + v26);
  unsigned int v68 = ~v67;
LABEL_102:
  if (v68 < 0x7FFFFFFF) {
    goto LABEL_103;
  }
LABEL_104:
  if (v26 > 3) {
    goto LABEL_105;
  }
  unsigned int v76 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  if (v76 > 0xFFF5)
  {
    unsigned int v75 = *(_DWORD *)((char *)v46 + v26);
    goto LABEL_110;
  }
  if (v76 <= 0xF5) {
LABEL_105:
  }
    unsigned int v75 = *((unsigned __int8 *)v46 + v26);
  else {
    unsigned int v75 = *(unsigned __int16 *)((char *)v46 + v26);
  }
LABEL_110:
  unsigned int v77 = v75 - 10;
  if (v75 >= 0xA)
  {
    if (v26 <= 3) {
      uint64_t v78 = v26;
    }
    else {
      uint64_t v78 = 4;
    }
    switch(v78)
    {
      case 1:
        int v79 = *(unsigned __int8 *)v46;
        goto LABEL_119;
      case 2:
        int v79 = *v46;
        goto LABEL_119;
      case 3:
        int v79 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
        goto LABEL_119;
      case 4:
        int v79 = *(_DWORD *)v46;
LABEL_119:
        if (v26 < 4) {
          v79 |= v77 << (8 * v26);
        }
        unsigned int v75 = v79 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v80 = ~v237;
  switch(v75)
  {
    case 0u:
      unsigned int v81 = *((unsigned __int8 *)v46 + v39);
      unsigned int v82 = v81 - 10;
      if (v81 >= 0xA)
      {
        if (v39 <= 3) {
          uint64_t v83 = v39;
        }
        else {
          uint64_t v83 = 4;
        }
        switch(v83)
        {
          case 1:
            int v84 = *(unsigned __int8 *)v46;
            goto LABEL_211;
          case 2:
            int v84 = *v46;
            goto LABEL_211;
          case 3:
            int v84 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
            goto LABEL_211;
          case 4:
            int v84 = *(_DWORD *)v46;
LABEL_211:
            if (v39 < 4) {
              unsigned int v81 = (v84 | (v82 << (8 * v39))) + 10;
            }
            else {
              unsigned int v81 = v84 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v81)
      {
        case 1u:
          uint64_t v128 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v129 = 1;
          goto LABEL_240;
        case 2u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 5;
          break;
        case 6u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 6;
          break;
        case 7u:
          long long v130 = *(_OWORD *)v46;
          *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v46 + 9);
          *(_OWORD *)uint64_t v45 = v130;
          *((unsigned char *)v45 + v39) = 7;
          break;
        case 8u:
          uint64_t v128 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v129 = 8;
          goto LABEL_240;
        case 9u:
          uint64_t v128 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v129 = 9;
LABEL_240:
          *((unsigned char *)v45 + v39) = v129;
          id v134 = v128;
          break;
        default:
          *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
          *((unsigned char *)v45 + v39) = 0;
          break;
      }
      unint64_t v135 = ((unint64_t)v45 + v39 + 8) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v136 = ((unint64_t)v46 + v39 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v136 + 8) < 0xFFFFFFFFuLL)
      {
        long long v147 = *(_OWORD *)v136;
        long long v148 = *(_OWORD *)(v136 + 16);
        long long v149 = *(_OWORD *)(v136 + 48);
        *(_OWORD *)(v135 + 32) = *(_OWORD *)(v136 + 32);
        *(_OWORD *)(v135 + 48) = v149;
        *(_OWORD *)unint64_t v135 = v147;
        *(_OWORD *)(v135 + 16) = v148;
        long long v150 = *(_OWORD *)(v136 + 64);
        long long v151 = *(_OWORD *)(v136 + 80);
        long long v152 = *(_OWORD *)(v136 + 96);
        *(_OWORD *)(v135 + 106) = *(_OWORD *)(v136 + 106);
        *(_OWORD *)(v135 + 80) = v151;
        *(_OWORD *)(v135 + 96) = v152;
        *(_OWORD *)(v135 + 64) = v150;
      }
      else
      {
        uint64_t v248 = v45;
        *(void *)unint64_t v135 = *(void *)v136;
        *(void *)(v135 + 8) = *(void *)(v136 + 8);
        uint64_t v137 = *(void **)(v136 + 16);
        uint64_t v138 = *(void *)(v136 + 24);
        uint64_t v139 = *(void *)(v136 + 32);
        uint64_t v140 = *(void *)(v136 + 40);
        uint64_t v141 = *(void *)(v136 + 48);
        uint64_t v142 = *(void *)(v136 + 56);
        unsigned __int8 v243 = *(unsigned char *)(v136 + 64);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v137, v138, v139, v140, v141, v142, v243);
        *(void *)(v135 + 16) = v137;
        *(void *)(v135 + 24) = v138;
        *(void *)(v135 + 32) = v139;
        *(void *)(v135 + 40) = v140;
        *(void *)(v135 + 48) = v141;
        *(void *)(v135 + 56) = v142;
        *(unsigned char *)(v135 + 64) = v243;
        *(unsigned char *)(v135 + 65) = *(unsigned char *)(v136 + 65);
        *(unsigned char *)(v135 + 66) = *(unsigned char *)(v136 + 66);
        *(unsigned char *)(v135 + 67) = *(unsigned char *)(v136 + 67);
        *(unsigned char *)(v135 + 68) = *(unsigned char *)(v136 + 68);
        int v143 = *(unsigned __int8 *)(v136 + 120);
        if (v143 == 255)
        {
          long long v144 = *(_OWORD *)(v136 + 72);
          long long v145 = *(_OWORD *)(v136 + 88);
          long long v146 = *(_OWORD *)(v136 + 104);
          *(unsigned char *)(v135 + 120) = *(unsigned char *)(v136 + 120);
          *(_OWORD *)(v135 + 88) = v145;
          *(_OWORD *)(v135 + 104) = v146;
          *(_OWORD *)(v135 + 72) = v144;
        }
        else
        {
          char v244 = v143 & 1;
          uint64_t v153 = *(void **)(v136 + 72);
          uint64_t v154 = *(void *)(v136 + 80);
          uint64_t v155 = *(void *)(v136 + 88);
          uint64_t v156 = *(void *)(v136 + 96);
          uint64_t v158 = *(void *)(v136 + 104);
          uint64_t v157 = *(void *)(v136 + 112);
          sub_1B90BFEB8(v153, v154, v155, v156, v158, v157, v143 & 1);
          *(void *)(v135 + 72) = v153;
          *(void *)(v135 + 80) = v154;
          *(void *)(v135 + 88) = v155;
          *(void *)(v135 + 96) = v156;
          *(void *)(v135 + 104) = v158;
          *(void *)(v135 + 112) = v157;
          *(unsigned char *)(v135 + 120) = v244;
        }
        uint64_t v45 = v248;
        uint64_t v33 = a1;
        *(unsigned char *)(v135 + 121) = *(unsigned char *)(v136 + 121);
      }
      *(unsigned char *)(v135 + 122) = *(unsigned char *)(v136 + 122);
      *(unsigned char *)(v135 + 123) = *(unsigned char *)(v136 + 123);
      *(unsigned char *)(v135 + 124) = *(unsigned char *)(v136 + 124);
      *(unsigned char *)(v135 + 125) = *(unsigned char *)(v136 + 125);
      *(unsigned char *)(v135 + 126) = *(unsigned char *)(v136 + 126);
      uint64_t v159 = *(void **)((v136 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v135 + 134) & 0xFFFFFFFFFFFFFFF8) = v159;
      id v160 = v159;
      if (v36 > 3) {
        goto LABEL_248;
      }
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5)
      {
        *(_DWORD *)((char *)v45 + v36) = 0;
      }
      else
      {
        if (v114 <= 0xF5)
        {
LABEL_248:
          *((unsigned char *)v45 + v36) = 0;
          goto LABEL_312;
        }
        *(_WORD *)((char *)v45 + v36) = 0;
      }
      goto LABEL_322;
    case 1u:
      unsigned int v85 = *((unsigned __int8 *)v46 + v39);
      unsigned int v86 = v85 - 10;
      if (v85 >= 0xA)
      {
        if (v39 <= 3) {
          uint64_t v87 = v39;
        }
        else {
          uint64_t v87 = 4;
        }
        switch(v87)
        {
          case 1:
            int v88 = *(unsigned __int8 *)v46;
            goto LABEL_219;
          case 2:
            int v88 = *v46;
            goto LABEL_219;
          case 3:
            int v88 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
            goto LABEL_219;
          case 4:
            int v88 = *(_DWORD *)v46;
LABEL_219:
            if (v39 < 4) {
              unsigned int v85 = (v88 | (v86 << (8 * v39))) + 10;
            }
            else {
              unsigned int v85 = v88 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v85)
      {
        case 1u:
          uint64_t v131 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v132 = 1;
          goto LABEL_255;
        case 2u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 5;
          break;
        case 6u:
          (*(void (**)(void *, unsigned __int16 *, uint64_t))(v236 + 16))(v45, v46, v235);
          *((unsigned char *)v45 + v39) = 6;
          break;
        case 7u:
          long long v133 = *(_OWORD *)v46;
          *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v46 + 9);
          *(_OWORD *)uint64_t v45 = v133;
          *((unsigned char *)v45 + v39) = 7;
          break;
        case 8u:
          uint64_t v131 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v132 = 8;
          goto LABEL_255;
        case 9u:
          uint64_t v131 = *(void **)v46;
          *uint64_t v45 = *(void *)v46;
          char v132 = 9;
LABEL_255:
          *((unsigned char *)v45 + v39) = v132;
          id v161 = v131;
          break;
        default:
          *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
          *((unsigned char *)v45 + v39) = 0;
          break;
      }
      unint64_t v162 = ((unint64_t)v45 + v39 + 8) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v163 = ((unint64_t)v46 + v39 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v163 + 8) < 0xFFFFFFFFuLL)
      {
        long long v174 = *(_OWORD *)v163;
        long long v175 = *(_OWORD *)(v163 + 16);
        long long v176 = *(_OWORD *)(v163 + 48);
        *(_OWORD *)(v162 + 32) = *(_OWORD *)(v163 + 32);
        *(_OWORD *)(v162 + 48) = v176;
        *(_OWORD *)unint64_t v162 = v174;
        *(_OWORD *)(v162 + 16) = v175;
        long long v177 = *(_OWORD *)(v163 + 64);
        long long v178 = *(_OWORD *)(v163 + 80);
        long long v179 = *(_OWORD *)(v163 + 96);
        *(_OWORD *)(v162 + 106) = *(_OWORD *)(v163 + 106);
        *(_OWORD *)(v162 + 80) = v178;
        *(_OWORD *)(v162 + 96) = v179;
        *(_OWORD *)(v162 + 64) = v177;
      }
      else
      {
        uint64_t v249 = v45;
        *(void *)unint64_t v162 = *(void *)v163;
        *(void *)(v162 + 8) = *(void *)(v163 + 8);
        uint64_t v164 = *(void **)(v163 + 16);
        uint64_t v165 = *(void *)(v163 + 24);
        uint64_t v166 = *(void *)(v163 + 32);
        uint64_t v167 = *(void *)(v163 + 40);
        uint64_t v168 = *(void *)(v163 + 48);
        uint64_t v169 = *(void *)(v163 + 56);
        unsigned __int8 v245 = *(unsigned char *)(v163 + 64);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B90CC148(v164, v165, v166, v167, v168, v169, v245);
        *(void *)(v162 + 16) = v164;
        *(void *)(v162 + 24) = v165;
        *(void *)(v162 + 32) = v166;
        *(void *)(v162 + 40) = v167;
        *(void *)(v162 + 48) = v168;
        *(void *)(v162 + 56) = v169;
        *(unsigned char *)(v162 + 64) = v245;
        *(unsigned char *)(v162 + 65) = *(unsigned char *)(v163 + 65);
        *(unsigned char *)(v162 + 66) = *(unsigned char *)(v163 + 66);
        *(unsigned char *)(v162 + 67) = *(unsigned char *)(v163 + 67);
        *(unsigned char *)(v162 + 68) = *(unsigned char *)(v163 + 68);
        int v170 = *(unsigned __int8 *)(v163 + 120);
        if (v170 == 255)
        {
          long long v171 = *(_OWORD *)(v163 + 72);
          long long v172 = *(_OWORD *)(v163 + 88);
          long long v173 = *(_OWORD *)(v163 + 104);
          *(unsigned char *)(v162 + 120) = *(unsigned char *)(v163 + 120);
          *(_OWORD *)(v162 + 88) = v172;
          *(_OWORD *)(v162 + 104) = v173;
          *(_OWORD *)(v162 + 72) = v171;
        }
        else
        {
          char v246 = v170 & 1;
          uint64_t v180 = *(void **)(v163 + 72);
          uint64_t v181 = *(void *)(v163 + 80);
          uint64_t v182 = *(void *)(v163 + 88);
          uint64_t v183 = *(void *)(v163 + 96);
          uint64_t v185 = *(void *)(v163 + 104);
          uint64_t v184 = *(void *)(v163 + 112);
          sub_1B90BFEB8(v180, v181, v182, v183, v185, v184, v170 & 1);
          *(void *)(v162 + 72) = v180;
          *(void *)(v162 + 80) = v181;
          *(void *)(v162 + 88) = v182;
          *(void *)(v162 + 96) = v183;
          *(void *)(v162 + 104) = v185;
          *(void *)(v162 + 112) = v184;
          *(unsigned char *)(v162 + 120) = v246;
        }
        uint64_t v45 = v249;
        uint64_t v33 = a1;
        *(unsigned char *)(v162 + 121) = *(unsigned char *)(v163 + 121);
      }
      *(unsigned char *)(v162 + 122) = *(unsigned char *)(v163 + 122);
      *(unsigned char *)(v162 + 123) = *(unsigned char *)(v163 + 123);
      *(unsigned char *)(v162 + 124) = *(unsigned char *)(v163 + 124);
      *(unsigned char *)(v162 + 125) = *(unsigned char *)(v163 + 125);
      *(unsigned char *)(v162 + 126) = *(unsigned char *)(v163 + 126);
      v186 = *(void **)((v163 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v162 + 134) & 0xFFFFFFFFFFFFFFF8) = v186;
      id v187 = v186;
      if (v36 > 3) {
        goto LABEL_263;
      }
      int v127 = 1;
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5) {
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_263:
        char v106 = 1;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v36) = 1;
      goto LABEL_322;
    case 2u:
      uint64_t v89 = *(void **)v46;
      *uint64_t v45 = *(void *)v46;
      uint64_t v90 = (char *)(((unint64_t)v45 + v35) & v80);
      uint64_t v91 = (unsigned __int8 *)(((unint64_t)v46 + v35) & v80);
      int v92 = v91[v39];
      id v93 = v89;
      switch(v92)
      {
        case 0:
          *uint64_t v90 = *v91;
          v90[v39] = 0;
          break;
        case 1:
          uint64_t v188 = *(void **)v91;
          *(void *)uint64_t v90 = *(void *)v91;
          char v189 = 1;
          goto LABEL_276;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v90, v91, v235);
          v90[v39] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v90, v91, v235);
          v90[v39] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v90, v91, v235);
          v90[v39] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v90, v91, v235);
          v90[v39] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v90, v91, v235);
          v90[v39] = 6;
          break;
        case 7:
          long long v190 = *(_OWORD *)v91;
          *(_OWORD *)(v90 + 9) = *(_OWORD *)(v91 + 9);
          *(_OWORD *)uint64_t v90 = v190;
          v90[v39] = 7;
          break;
        case 8:
          uint64_t v188 = *(void **)v91;
          *(void *)uint64_t v90 = *(void *)v91;
          char v189 = 8;
          goto LABEL_276;
        case 9:
          uint64_t v188 = *(void **)v91;
          *(void *)uint64_t v90 = *(void *)v91;
          char v189 = 9;
LABEL_276:
          v90[v39] = v189;
          id v191 = v188;
          break;
        default:
          memcpy(v90, v91, v230);
          break;
      }
      if (v36 > 3) {
        goto LABEL_278;
      }
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5)
      {
        int v127 = 2;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_278:
        char v106 = 2;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v36) = 2;
      goto LABEL_322;
    case 3u:
      uint64_t v94 = *(void **)v46;
      *uint64_t v45 = *(void *)v46;
      uint64_t v95 = (char *)(((unint64_t)v45 + v35) & v80);
      uint64_t v96 = (unsigned __int8 *)(((unint64_t)v46 + v35) & v80);
      int v97 = v96[v39];
      id v98 = v94;
      switch(v97)
      {
        case 0:
          char *v95 = *v96;
          v95[v39] = 0;
          break;
        case 1:
          uint64_t v192 = *(void **)v96;
          *(void *)uint64_t v95 = *(void *)v96;
          char v193 = 1;
          goto LABEL_292;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v95, v96, v235);
          v95[v39] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v95, v96, v235);
          v95[v39] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v95, v96, v235);
          v95[v39] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v95, v96, v235);
          v95[v39] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v95, v96, v235);
          v95[v39] = 6;
          break;
        case 7:
          long long v194 = *(_OWORD *)v96;
          *(_OWORD *)(v95 + 9) = *(_OWORD *)(v96 + 9);
          *(_OWORD *)uint64_t v95 = v194;
          v95[v39] = 7;
          break;
        case 8:
          uint64_t v192 = *(void **)v96;
          *(void *)uint64_t v95 = *(void *)v96;
          char v193 = 8;
          goto LABEL_292;
        case 9:
          uint64_t v192 = *(void **)v96;
          *(void *)uint64_t v95 = *(void *)v96;
          char v193 = 9;
LABEL_292:
          v95[v39] = v193;
          id v195 = v192;
          break;
        default:
          memcpy(v95, v96, v230);
          break;
      }
      if (v36 > 3) {
        goto LABEL_294;
      }
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5)
      {
        int v127 = 3;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_294:
        char v106 = 3;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v36) = 3;
      goto LABEL_322;
    case 4u:
      uint64_t v99 = *(void **)v46;
      *uint64_t v45 = *(void *)v46;
      uint64_t v100 = (char *)(((unint64_t)v45 + v35) & v80);
      uint64_t v101 = (unsigned __int8 *)(((unint64_t)v46 + v35) & v80);
      int v102 = v101[v39];
      id v103 = v99;
      switch(v102)
      {
        case 0:
          *uint64_t v100 = *v101;
          v100[v39] = 0;
          break;
        case 1:
          uint64_t v196 = *(void **)v101;
          *(void *)uint64_t v100 = *(void *)v101;
          char v197 = 1;
          goto LABEL_308;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v100, v101, v235);
          v100[v39] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v100, v101, v235);
          v100[v39] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v100, v101, v235);
          v100[v39] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v100, v101, v235);
          v100[v39] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v236 + 16))(v100, v101, v235);
          v100[v39] = 6;
          break;
        case 7:
          long long v198 = *(_OWORD *)v101;
          *(_OWORD *)(v100 + 9) = *(_OWORD *)(v101 + 9);
          *(_OWORD *)uint64_t v100 = v198;
          v100[v39] = 7;
          break;
        case 8:
          uint64_t v196 = *(void **)v101;
          *(void *)uint64_t v100 = *(void *)v101;
          char v197 = 8;
          goto LABEL_308;
        case 9:
          uint64_t v196 = *(void **)v101;
          *(void *)uint64_t v100 = *(void *)v101;
          char v197 = 9;
LABEL_308:
          v100[v39] = v197;
          id v199 = v196;
          break;
        default:
          memcpy(v100, v101, v230);
          break;
      }
      if (v36 > 3) {
        goto LABEL_310;
      }
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5)
      {
        int v127 = 4;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_310:
        char v106 = 4;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v36) = 4;
      goto LABEL_322;
    case 5u:
      *uint64_t v45 = *(void *)v46;
      *((unsigned char *)v45 + 8) = *((unsigned char *)v46 + 8);
      *((unsigned char *)v45 + 9) = *((unsigned char *)v46 + 9);
      *((unsigned char *)v45 + 10) = *((unsigned char *)v46 + 10);
      uint64_t v104 = (void *)*((void *)v46 + 2);
      v45[2] = v104;
      id v105 = v104;
      if (v26 > 3) {
        goto LABEL_142;
      }
      unsigned int v114 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      if (v114 > 0xFFF5)
      {
        int v127 = 5;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_142:
        char v106 = 5;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v26) = 5;
      goto LABEL_322;
    case 6u:
      uint64_t v112 = *(void **)v46;
      *uint64_t v45 = *(void *)v46;
      id v113 = v112;
      if (v26 > 3) {
        goto LABEL_158;
      }
      unsigned int v114 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      if (v114 > 0xFFF5)
      {
        int v127 = 6;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_158:
        char v106 = 6;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v26) = 6;
      goto LABEL_322;
    case 7u:
      uint64_t v107 = ~v233;
      if (v227 < 0)
      {
        int v109 = (*(uint64_t (**)(unint64_t))(v231 + 48))(((unint64_t)v46 + v224) & v107);
      }
      else
      {
        uint64_t v108 = *(void *)v46;
        if (*(void *)v46 >= 0xFFFFFFFFuLL) {
          LODWORD(v108) = -1;
        }
        int v109 = v108 + 1;
      }
      if (v109)
      {
        memcpy(v45, v46, v223);
      }
      else
      {
        *uint64_t v45 = *(void *)v46;
        uint64_t v121 = *(void (**)(unint64_t, unint64_t, uint64_t))(v231 + 16);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v121(((unint64_t)v45 + v224) & v107, ((unint64_t)v46 + v224) & v107, v232);
      }
      unint64_t v122 = ((unint64_t)v45 + v23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v123 = ((unint64_t)v46 + v23) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v123 + 8) < 0xFFFFFFFFuLL)
      {
        long long v126 = *(_OWORD *)v123;
        *(void *)(v122 + 16) = *(void *)(v123 + 16);
        *(_OWORD *)unint64_t v122 = v126;
      }
      else
      {
        *(void *)unint64_t v122 = *(void *)v123;
        *(void *)(v122 + 8) = *(void *)(v123 + 8);
        uint64_t v124 = *(void **)(v123 + 16);
        *(void *)(v122 + 16) = v124;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v125 = v124;
      }
      if (v36 > 3) {
        goto LABEL_197;
      }
      unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v114 > 0xFFF5)
      {
        int v127 = 7;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_197:
        char v106 = 7;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v36) = 7;
      goto LABEL_322;
    case 8u:
      if (v225 < 0xFD)
      {
        uint64_t v116 = v235;
        unsigned int v118 = *((unsigned __int8 *)v46 + v234);
        uint64_t v115 = v236;
        if (v118 < 3) {
          goto LABEL_174;
        }
        unsigned int v117 = v118 - 2;
      }
      else
      {
        uint64_t v116 = v235;
        uint64_t v115 = v236;
        unsigned int v117 = (*(uint64_t (**)(unsigned __int16 *))(v236 + 48))(v46);
      }
      if (v117)
      {
        memcpy(v45, v46, v234 + 1);
        goto LABEL_175;
      }
LABEL_174:
      (*(void (**)(void *, unsigned __int16 *, uint64_t))(v115 + 16))(v45, v46, v116);
      *((unsigned char *)v45 + v234) = *((unsigned char *)v46 + v234);
LABEL_175:
      *(void *)(((unint64_t)v45 + v234 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v46
                                                                                          + v234
                                                                                          + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v26 > 3) {
        goto LABEL_178;
      }
      unsigned int v114 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      if (v114 > 0xFFF5)
      {
        int v127 = 8;
        goto LABEL_321;
      }
      if (v114 <= 0xF5)
      {
LABEL_178:
        char v106 = 8;
        goto LABEL_311;
      }
      *(_WORD *)((char *)v45 + v26) = 8;
      goto LABEL_322;
    case 9u:
      *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 16))(((unint64_t)v45 + v226) & ~v31, ((unint64_t)v46 + v226) & ~v31, v229);
      if (v26 > 3) {
        goto LABEL_148;
      }
      unsigned int v114 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      if (v114 > 0xFFF5)
      {
        int v127 = 9;
LABEL_321:
        *(_DWORD *)((char *)v45 + v36) = v127;
        goto LABEL_322;
      }
      if (v114 > 0xF5)
      {
        *(_WORD *)((char *)v45 + v26) = 9;
LABEL_322:
        BOOL v202 = v114 > 0xFFF5;
        uint64_t v201 = 2;
        if (v202) {
          uint64_t v201 = 4;
        }
        goto LABEL_324;
      }
LABEL_148:
      char v106 = 9;
LABEL_311:
      *((unsigned char *)v45 + v36) = v106;
LABEL_312:
      if (v36 > 3) {
        goto LABEL_316;
      }
      unsigned int v200 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      uint64_t v201 = 2;
      if (v200 > 0xFFF5) {
        uint64_t v201 = 4;
      }
      if (v200 <= 0xF5) {
LABEL_316:
      }
        uint64_t v201 = 1;
LABEL_324:
      uint64_t v203 = v201 + v36;
      unint64_t v204 = (unint64_t)v45 + v203;
      unint64_t v205 = (unint64_t)v46 + v203;
      *(unsigned char *)unint64_t v204 = *(unsigned char *)v205;
      v204 &= 0xFFFFFFFFFFFFFFF8;
      v205 &= 0xFFFFFFFFFFFFFFF8;
      uint64_t v206 = *(void **)(v205 + 8);
      *(void *)(v204 + 8) = v206;
      unint64_t v207 = (v204 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v208 = (v205 + 23) & 0xFFFFFFFFFFFFFFF8;
      long long v209 = *(void **)v208;
      *(void *)unint64_t v207 = *(void *)v208;
      *(unsigned char *)(v207 + 8) = *(unsigned char *)(v208 + 8);
      unint64_t v210 = (v204 + 39) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v211 = (v205 + 39) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v212 = *(void *)v211;
      *(unsigned char *)(v210 + 8) = *(unsigned char *)(v211 + 8);
      *(void *)unint64_t v210 = v212;
      long long v213 = (void *)((v204 + 55) & 0xFFFFFFFFFFFFFFF8);
      long long v214 = (void *)((v205 + 55) & 0xFFFFFFFFFFFFFFF8);
      *long long v213 = *v214;
      long long v215 = *(void **)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8) = v215;
      id v216 = v206;
      id v217 = v209;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      id v218 = v215;
      if (v36 > 3) {
        goto LABEL_328;
      }
      unsigned int v219 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      uint64_t v220 = 2;
      if (v219 > 0xFFF5) {
        uint64_t v220 = 4;
      }
      if (v219 <= 0xF5) {
LABEL_328:
      }
        uint64_t v220 = 1;
      unint64_t v221 = ((((((v220 + v36) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)(((unint64_t)v45 + v221) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v46 + v221) & 0xFFFFFFFFFFFFFFF8);
      break;
    default:
      if (v26 > 3) {
        goto LABEL_153;
      }
      unsigned int v110 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      uint64_t v111 = 2;
      if (v110 > 0xFFF5) {
        uint64_t v111 = 4;
      }
      if (v110 <= 0xF5) {
LABEL_153:
      }
        uint64_t v111 = 1;
      memcpy(v45, v46, v111 + v26);
      goto LABEL_312;
  }
  return v33;
}

void sub_1B9210CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v96 = *(void *)(v4 + 64);
  uint64_t v95 = sub_1B996A6F0();
  uint64_t v6 = *(void *)(v95 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v94 = sub_1B996BAD0();
  uint64_t v9 = *(void *)(v94 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = sub_1B996D7B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v8 & 0xF8;
  uint64_t v14 = v13 | 7;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v10 | v15;
  if (v5) {
    uint64_t v17 = v96 + a1;
  }
  else {
    uint64_t v17 = v96 + a1 + 1;
  }
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 0x19) {
    uint64_t v19 = 25;
  }
  else {
    uint64_t v19 = *(void *)(v6 + 64);
  }
  uint64_t v20 = v19 + 1;
  unint64_t v21 = (((v19 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v22 = (v13 + 15) & ~v14;
  uint64_t v97 = v9;
  int v23 = *(_DWORD *)(v9 + 84);
  uint64_t v24 = v10;
  uint64_t v25 = *(void *)(v9 + 64) + ((v10 + 8) & ~v10);
  if (v19 + 1 + v22 > v21) {
    unint64_t v21 = v19 + 1 + v22;
  }
  if (v21 <= ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v21 = ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v21 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v26 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v26 = v21;
  }
  unint64_t v27 = *(void *)(*(void *)(v11 - 8) + 64) + ((v15 + 1) & ~v15);
  if (v26 > v27) {
    unint64_t v27 = v26;
  }
  if (v27 <= 0x18) {
    uint64_t v28 = 24;
  }
  else {
    uint64_t v28 = v27;
  }
  char v29 = 8 * v28;
  uint64_t v30 = v16 | v14;
  uint64_t v31 = v17 + (v16 | v14);
  if (v28 > 3)
  {
    int v32 = 11;
LABEL_23:
    char v33 = 8;
    goto LABEL_24;
  }
  unsigned int v37 = ((1 << v29) + 1) >> v29;
  if (v37 > 0xFFF5)
  {
    unsigned int v35 = 0x7FFFFFFF;
    goto LABEL_33;
  }
  int v32 = v37 + 10;
  if (v37 <= 0xF5) {
    goto LABEL_23;
  }
  char v33 = 16;
LABEL_24:
  unsigned int v34 = (1 << v33) - v32;
  unsigned int v35 = 0x7FFFFFFF;
  if (v34 <= 0x7FFFFFFF) {
    int v36 = 0x7FFFFFFF;
  }
  else {
    int v36 = v34;
  }
  if ((v34 & 0x80000000) == 0) {
    unsigned int v35 = v36;
  }
LABEL_33:
  int v38 = (unsigned __int16 *)(v31 & ~v30);
  if (v28 > 3)
  {
    int v39 = 11;
LABEL_35:
    char v40 = 8;
    goto LABEL_36;
  }
  unsigned int v43 = ((1 << v29) + 1) >> v29;
  if (v43 > 0xFFF5) {
    goto LABEL_43;
  }
  int v39 = v43 + 10;
  if (v43 <= 0xF5) {
    goto LABEL_35;
  }
  char v40 = 16;
LABEL_36:
  int v41 = (1 << v40) - v39;
  if ((v41 & 0x80000000) == 0)
  {
    if (v41 == v35) {
      goto LABEL_38;
    }
LABEL_44:
    if (v28 > 3) {
      goto LABEL_48;
    }
    unsigned int v44 = ((1 << v29) + 1) >> v29;
    uint64_t v45 = 2;
    if (v44 > 0xFFF5) {
      uint64_t v45 = 4;
    }
    if (v44 <= 0xF5) {
LABEL_48:
    }
      uint64_t v45 = 1;
    unint64_t v46 = *(void *)((((unint64_t)v38 + v28 + v45) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v46 >= 0xFFFFFFFF) {
      LODWORD(v46) = -1;
    }
    if (v46 != -1) {
      return;
    }
    goto LABEL_96;
  }
LABEL_43:
  if (v35 != 0x7FFFFFFF) {
    goto LABEL_44;
  }
LABEL_38:
  if (v28 > 3)
  {
    int v42 = 11;
LABEL_55:
    char v48 = 8;
    goto LABEL_56;
  }
  unsigned int v47 = ((1 << v29) + 1) >> v29;
  if (v47 > 0xFFF5) {
    goto LABEL_59;
  }
  int v42 = v47 + 10;
  if (v47 <= 0xF5) {
    goto LABEL_55;
  }
  char v48 = 16;
LABEL_56:
  unsigned int v49 = (1 << v48) - v42;
  if ((v49 & 0x80000000) == 0)
  {
    if (v28 > 3) {
      goto LABEL_63;
    }
LABEL_60:
    unsigned int v50 = ((1 << v29) + 1) >> v29;
    uint64_t v51 = 2;
    if (v50 > 0xFFF5) {
      uint64_t v51 = 4;
    }
    if (v50 > 0xF5) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_59:
  unsigned int v49 = 0x7FFFFFFF;
  if (v28 <= 3) {
    goto LABEL_60;
  }
LABEL_63:
  uint64_t v51 = 1;
LABEL_64:
  unsigned int v52 = v35 - v49;
  if (v35 <= v49) {
    goto LABEL_83;
  }
  uint64_t v53 = v51 + v28;
  char v54 = 8 * (v51 + v28);
  if (v53 > 3) {
    goto LABEL_66;
  }
  unsigned int v56 = ((v52 + ~(-1 << v54)) >> v54) + 1;
  if (HIWORD(v56))
  {
    int v55 = *(_DWORD *)((char *)v38 + v53);
    if (!v55) {
      goto LABEL_83;
    }
    goto LABEL_74;
  }
  if (v56 > 0xFF)
  {
    int v55 = *(unsigned __int16 *)((char *)v38 + v53);
    if (!*(unsigned __int16 *)((char *)v38 + v53)) {
      goto LABEL_83;
    }
    goto LABEL_74;
  }
  if (v56 >= 2)
  {
LABEL_66:
    int v55 = *((unsigned __int8 *)v38 + v53);
    if (!*((unsigned char *)v38 + v53)) {
      goto LABEL_83;
    }
LABEL_74:
    int v57 = (v55 - 1) << v54;
    if (v53 <= 3) {
      int v58 = v57;
    }
    else {
      int v58 = 0;
    }
    if (v53)
    {
      if (v53 > 3) {
        LODWORD(v53) = 4;
      }
      switch((int)v53)
      {
        case 2:
          LODWORD(v53) = *v38;
          break;
        case 3:
          LODWORD(v53) = *v38 | (*((unsigned __int8 *)v38 + 2) << 16);
          break;
        case 4:
          LODWORD(v53) = *(_DWORD *)v38;
          break;
        default:
          LODWORD(v53) = *(unsigned __int8 *)v38;
          break;
      }
    }
    if (v49 + (v53 | v58) != -1) {
      return;
    }
    goto LABEL_96;
  }
LABEL_83:
  if (!v49) {
    goto LABEL_96;
  }
  if (v28 > 3)
  {
    int v59 = *((unsigned __int8 *)v38 + v28);
    unsigned int v60 = v59 | 0xFFFFFF00;
    unsigned int v61 = v59 ^ 0xFF;
    char v62 = 8;
    int v63 = 11;
    goto LABEL_91;
  }
  unsigned int v64 = ((1 << v29) + 1) >> v29;
  if (v64 <= 0xFFF5)
  {
    int v63 = v64 + 10;
    if (v64 > 0xF5)
    {
      int v66 = *(unsigned __int16 *)((char *)v38 + v28);
      unsigned int v60 = v66 | 0xFFFF0000;
      unsigned int v61 = v66 ^ 0xFFFF;
      char v62 = 16;
    }
    else
    {
      int v65 = *((unsigned __int8 *)v38 + v28);
      unsigned int v60 = v65 | 0xFFFFFF00;
      unsigned int v61 = v65 ^ 0xFF;
      char v62 = 8;
    }
LABEL_91:
    unsigned int v67 = (1 << v62) - v63;
    if ((v67 & 0x80000000) == 0)
    {
      if (v67 <= v61) {
        goto LABEL_96;
      }
LABEL_95:
      if (v60) {
        return;
      }
      goto LABEL_96;
    }
    goto LABEL_94;
  }
  unsigned int v60 = *(_DWORD *)((char *)v38 + v28);
  unsigned int v61 = ~v60;
LABEL_94:
  if (v61 < 0x7FFFFFFF) {
    goto LABEL_95;
  }
LABEL_96:
  if (v28 > 3) {
    goto LABEL_97;
  }
  unsigned int v69 = ((1 << v29) + 1) >> v29;
  if (v69 > 0xFFF5)
  {
    unsigned int v68 = *(_DWORD *)((char *)v38 + v28);
    goto LABEL_102;
  }
  if (v69 <= 0xF5) {
LABEL_97:
  }
    unsigned int v68 = *((unsigned __int8 *)v38 + v28);
  else {
    unsigned int v68 = *(unsigned __int16 *)((char *)v38 + v28);
  }
LABEL_102:
  unsigned int v70 = v68 - 10;
  if (v68 >= 0xA)
  {
    if (v28 <= 3) {
      uint64_t v71 = v28;
    }
    else {
      uint64_t v71 = 4;
    }
    switch(v71)
    {
      case 1:
        int v72 = *(unsigned __int8 *)v38;
        if (v28 < 4) {
          goto LABEL_114;
        }
        goto LABEL_115;
      case 2:
        int v72 = *v38;
        if (v28 >= 4) {
          goto LABEL_115;
        }
        goto LABEL_114;
      case 3:
        int v72 = *v38 | (*((unsigned __int8 *)v38 + 2) << 16);
        if (v28 >= 4) {
          goto LABEL_115;
        }
        goto LABEL_114;
      case 4:
        int v72 = *(_DWORD *)v38;
        if (v28 < 4) {
LABEL_114:
        }
          v72 |= v70 << v29;
LABEL_115:
        unsigned int v68 = v72 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v73 = ~v14;
  switch(v68)
  {
    case 0u:
      unsigned int v74 = *((unsigned __int8 *)v38 + v19);
      unsigned int v75 = v74 - 10;
      if (v74 >= 0xA)
      {
        if (v19 <= 3) {
          uint64_t v76 = v19;
        }
        else {
          uint64_t v76 = 4;
        }
        switch(v76)
        {
          case 1:
            int v77 = *(unsigned __int8 *)v38;
            goto LABEL_164;
          case 2:
            int v77 = *v38;
            goto LABEL_164;
          case 3:
            int v77 = *v38 | (*((unsigned __int8 *)v38 + 2) << 16);
            goto LABEL_164;
          case 4:
            int v77 = *(_DWORD *)v38;
LABEL_164:
            if (v19 < 4) {
              unsigned int v74 = (v77 | (v75 << (8 * v19))) + 10;
            }
            else {
              unsigned int v74 = v77 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v74)
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_176;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_175;
        default:
          goto LABEL_178;
      }
      goto LABEL_178;
    case 1u:
      unsigned int v78 = *((unsigned __int8 *)v38 + v19);
      unsigned int v79 = v78 - 10;
      if (v78 >= 0xA)
      {
        if (v19 <= 3) {
          uint64_t v80 = v19;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *(unsigned __int8 *)v38;
            goto LABEL_171;
          case 2:
            int v81 = *v38;
            goto LABEL_171;
          case 3:
            int v81 = *v38 | (*((unsigned __int8 *)v38 + 2) << 16);
            goto LABEL_171;
          case 4:
            int v81 = *(_DWORD *)v38;
LABEL_171:
            if (v19 < 4) {
              unsigned int v78 = (v81 | (v79 << (8 * v19))) + 10;
            }
            else {
              unsigned int v78 = v81 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v78)
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_176:
          uint64_t v87 = v19 + 1;

          goto LABEL_177;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_175:
          uint64_t v87 = v19 + 1;
          (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v38, v95);
LABEL_177:
          uint64_t v20 = v87;
          break;
        default:
          break;
      }
LABEL_178:
      unint64_t v88 = (((unint64_t)v38 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v88 + 8) >= 0xFFFFFFFFuLL)
      {
        swift_bridgeObjectRelease();
        sub_1B90CBFF4(*(void **)(v88 + 16), *(void *)(v88 + 24), *(void *)(v88 + 32), *(void *)(v88 + 40), *(void *)(v88 + 48), *(void *)(v88 + 56), *(unsigned char *)(v88 + 64));
        int v89 = *(unsigned __int8 *)(v88 + 120);
        if (v89 != 255) {
          sub_1B90CC01C(*(void **)(v88 + 72), *(void *)(v88 + 80), *(void *)(v88 + 88), *(void *)(v88 + 96), *(void *)(v88 + 104), *(void *)(v88 + 112), v89 & 1);
        }
      }
      id v86 = *(id *)((v88 + 134) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_182;
    case 2u:

      unsigned int v82 = (id *)(((unint64_t)v38 + v14 + 8) & v73);
      switch(*((unsigned char *)v82 + v19))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_156;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_132;
        default:
          goto LABEL_157;
      }
    case 3u:

      unsigned int v82 = (id *)(((unint64_t)v38 + v14 + 8) & v73);
      switch(*((unsigned char *)v82 + v19))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_156;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_132;
        default:
          goto LABEL_157;
      }
    case 4u:

      unsigned int v82 = (id *)(((unint64_t)v38 + v14 + 8) & v73);
      switch(*((unsigned char *)v82 + v19))
      {
        case 1:
        case 8:
        case 9:
LABEL_156:

          goto LABEL_157;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_132:
          (*(void (**)(id *, uint64_t))(v7 + 8))(v82, v95);
          goto LABEL_149;
        default:
          goto LABEL_157;
      }
    case 5u:
      id v86 = (id)*((void *)v38 + 2);
      goto LABEL_182;
    case 6u:
      id v86 = *(id *)v38;
      goto LABEL_182;
    case 7u:
      uint64_t v83 = ~v24;
      if (v23 < 0)
      {
        if (!(*(unsigned int (**)(unint64_t))(v97 + 48))(((unint64_t)v38 + v24 + 8) & v83))
        {
LABEL_137:
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v97 + 8))(((unint64_t)v38 + v24 + 8) & v83, v94);
        }
      }
      else
      {
        id v84 = *(id *)v38;
        if (*(void *)v38 >= 0xFFFFFFFFuLL) {
          LODWORD(v84) = -1;
        }
        if (v84 == -1) {
          goto LABEL_137;
        }
      }
      unint64_t v85 = (((unint64_t)v38 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v85 + 8) < 0xFFFFFFFFuLL)
      {
LABEL_157:
        if (v28 > 3)
        {
LABEL_186:
          uint64_t v91 = 1;
          goto LABEL_187;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        id v86 = *(id *)(v85 + 16);
LABEL_182:

        if (v28 > 3) {
          goto LABEL_186;
        }
      }
LABEL_183:
      unsigned int v90 = ((1 << v29) + 1) >> v29;
      uint64_t v91 = 2;
      if (v90 > 0xFFF5) {
        uint64_t v91 = 4;
      }
      if (v90 <= 0xF5) {
        goto LABEL_186;
      }
LABEL_187:
      unint64_t v92 = ((unint64_t)v38 + v28 + v91) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      id v93 = *(void **)((((v92 + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

      break;
    case 8u:
      if (*(_DWORD *)(v7 + 84) < 0xFDu)
      {
        if (*((unsigned __int8 *)v38 + v18) >= 3u) {
          goto LABEL_157;
        }
      }
      else if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v7 + 48))(v38, *(unsigned int *)(v7 + 84), v95))
      {
        goto LABEL_157;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v38, v95);
LABEL_149:
      if (v28 > 3) {
        goto LABEL_186;
      }
      goto LABEL_183;
    case 9u:
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(((unint64_t)v38 + v15 + 1) & ~v15, v11);
      if (v28 > 3) {
        goto LABEL_186;
      }
      goto LABEL_183;
    default:
      goto LABEL_157;
  }
}

void *sub_1B92119A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v256 = v12;
  uint64_t v246 = sub_1B996A6F0();
  uint64_t v13 = *(void *)(v246 - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v245 = sub_1B996BAD0();
  uint64_t v16 = *(void *)(v245 - 8);
  uint64_t v17 = v16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = sub_1B996D7B0();
  uint64_t v20 = v15 | 7;
  uint64_t v21 = v19;
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t v23 = v22;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = v18 | v24 | v15 | 7;
  unint64_t v26 = *(void *)(v13 + 64);
  if (v26 <= 0x19) {
    uint64_t v27 = 25;
  }
  else {
    uint64_t v27 = v26;
  }
  uint64_t v28 = v27 + 1;
  unint64_t v29 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v30 = v15 + 15;
  uint64_t v31 = (v15 + 15) & ~(v15 | 7);
  size_t v32 = *(void *)(v16 + 64) + ((v18 + 8) & ~v18);
  uint64_t v251 = v14;
  uint64_t v33 = *(unsigned int *)(v14 + 84);
  if (v27 + 1 + v31 > v29) {
    unint64_t v29 = v27 + 1 + v31;
  }
  if (v29 <= ((v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v29 = ((v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= (v26 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = (v26 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v34 = v29;
  }
  unint64_t v35 = *(void *)(v22 + 64) + ((v24 + 1) & ~v24);
  if (v34 > v35) {
    unint64_t v35 = v34;
  }
  if (v35 <= 0x18) {
    uint64_t v36 = 24;
  }
  else {
    uint64_t v36 = v35;
  }
  char v37 = 8 * v36;
  int v38 = a1;
  if (v36 > 3)
  {
    int v39 = 11;
LABEL_27:
    char v40 = 8;
    goto LABEL_28;
  }
  unsigned int v44 = ((1 << v37) + 1) >> v37;
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_37;
  }
  int v39 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_27;
  }
  char v40 = 16;
LABEL_28:
  unsigned int v41 = (1 << v40) - v39;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_37:
  unint64_t v45 = ((unint64_t)a1 + v25 + v256) & ~v25;
  unint64_t v46 = (unsigned __int16 *)(((unint64_t)a2 + v25 + v256) & ~v25);
  if (v36 > 3)
  {
    int v47 = 11;
LABEL_39:
    char v48 = 8;
    goto LABEL_40;
  }
  unsigned int v53 = ((1 << v37) + 1) >> v37;
  if (v53 > 0xFFF5) {
    goto LABEL_51;
  }
  int v47 = v53 + 10;
  if (v53 <= 0xF5) {
    goto LABEL_39;
  }
  char v48 = 16;
LABEL_40:
  int v49 = (1 << v48) - v47;
  if ((v49 & 0x80000000) == 0)
  {
    if (v49 == v42) {
      goto LABEL_42;
    }
LABEL_52:
    if (v36 > 3) {
      goto LABEL_56;
    }
    unsigned int v54 = ((1 << v37) + 1) >> v37;
    uint64_t v55 = 2;
    if (v54 > 0xFFF5) {
      uint64_t v55 = 4;
    }
    if (v54 <= 0xF5) {
LABEL_56:
    }
      uint64_t v55 = 1;
    unint64_t v56 = *(void *)((((unint64_t)v46 + v36 + v55) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v56 >= 0xFFFFFFFF) {
      LODWORD(v56) = -1;
    }
    if (v56 != -1) {
      goto LABEL_181;
    }
    goto LABEL_99;
  }
LABEL_51:
  if (v42 != 0x7FFFFFFF) {
    goto LABEL_52;
  }
LABEL_42:
  if (v36 > 3)
  {
    int v50 = 11;
LABEL_44:
    char v51 = 8;
    goto LABEL_45;
  }
  unsigned int v57 = ((1 << v37) + 1) >> v37;
  if (v57 > 0xFFF5) {
    goto LABEL_64;
  }
  int v50 = v57 + 10;
  if (v57 <= 0xF5) {
    goto LABEL_44;
  }
  char v51 = 16;
LABEL_45:
  unsigned int v52 = (1 << v51) - v50;
  if ((v52 & 0x80000000) == 0)
  {
    if (v36 > 3) {
      goto LABEL_68;
    }
    goto LABEL_65;
  }
LABEL_64:
  unsigned int v52 = 0x7FFFFFFF;
  if (v36 > 3)
  {
LABEL_68:
    uint64_t v59 = 1;
    goto LABEL_69;
  }
LABEL_65:
  unsigned int v58 = ((1 << v37) + 1) >> v37;
  uint64_t v59 = 2;
  if (v58 > 0xFFF5) {
    uint64_t v59 = 4;
  }
  if (v58 <= 0xF5) {
    goto LABEL_68;
  }
LABEL_69:
  unsigned int v60 = v42 - v52;
  if (v42 <= v52) {
    goto LABEL_86;
  }
  uint64_t v61 = v59 + v36;
  char v62 = 8 * (v59 + v36);
  if (v61 > 3)
  {
LABEL_71:
    int v63 = *((unsigned __int8 *)v46 + v61);
    if (!*((unsigned char *)v46 + v61)) {
      goto LABEL_86;
    }
    goto LABEL_78;
  }
  unsigned int v64 = ((v60 + ~(-1 << v62)) >> v62) + 1;
  if (HIWORD(v64))
  {
    int v63 = *(_DWORD *)((char *)v46 + v61);
    if (!v63) {
      goto LABEL_86;
    }
LABEL_78:
    int v65 = (v63 - 1) << v62;
    if (v61 > 3) {
      int v65 = 0;
    }
    if (v61)
    {
      if (v61 > 3) {
        LODWORD(v61) = 4;
      }
      switch((int)v61)
      {
        case 2:
          LODWORD(v61) = *v46;
          break;
        case 3:
          LODWORD(v61) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          break;
        case 4:
          LODWORD(v61) = *(_DWORD *)v46;
          break;
        default:
          LODWORD(v61) = *(unsigned __int8 *)v46;
          break;
      }
    }
    if (v52 + (v61 | v65) != -1) {
      goto LABEL_181;
    }
LABEL_99:
    if (v36 > 3)
    {
LABEL_100:
      unsigned int v75 = *((unsigned __int8 *)v46 + v36);
      goto LABEL_105;
    }
    unsigned int v76 = ((1 << v37) + 1) >> v37;
    if (v76 > 0xFFF5)
    {
      unsigned int v75 = *(_DWORD *)((char *)v46 + v36);
    }
    else
    {
      if (v76 <= 0xF5) {
        goto LABEL_100;
      }
      unsigned int v75 = *(unsigned __int16 *)((char *)v46 + v36);
    }
LABEL_105:
    unsigned int v77 = v75 - 10;
    if (v75 >= 0xA)
    {
      if (v36 <= 3) {
        uint64_t v78 = v36;
      }
      else {
        uint64_t v78 = 4;
      }
      switch(v78)
      {
        case 1:
          int v79 = *(unsigned __int8 *)v46;
          if (v36 < 4) {
            goto LABEL_117;
          }
          goto LABEL_118;
        case 2:
          int v79 = *v46;
          if (v36 >= 4) {
            goto LABEL_118;
          }
          goto LABEL_117;
        case 3:
          int v79 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          if (v36 >= 4) {
            goto LABEL_118;
          }
          goto LABEL_117;
        case 4:
          int v79 = *(_DWORD *)v46;
          if (v36 < 4) {
LABEL_117:
          }
            v79 |= v77 << v37;
LABEL_118:
          unsigned int v75 = v79 + 10;
          break;
        default:
          break;
      }
    }
    unint64_t v257 = v45;
    uint64_t v80 = ~v20;
    switch(v75)
    {
      case 0u:
        unsigned int v81 = *((unsigned __int8 *)v46 + v27);
        unsigned int v82 = v81 - 10;
        if (v81 >= 0xA)
        {
          if (v27 <= 3) {
            uint64_t v83 = v27;
          }
          else {
            uint64_t v83 = 4;
          }
          switch(v83)
          {
            case 1:
              int v84 = *(unsigned __int8 *)v46;
              goto LABEL_207;
            case 2:
              int v84 = *v46;
              goto LABEL_207;
            case 3:
              int v84 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
              goto LABEL_207;
            case 4:
              int v84 = *(_DWORD *)v46;
LABEL_207:
              if (v27 < 4) {
                unsigned int v81 = (v84 | (v82 << (8 * v27))) + 10;
              }
              else {
                unsigned int v81 = v84 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v81)
        {
          case 1u:
            char v132 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v133 = 1;
            goto LABEL_236;
          case 2u:
            uint64_t v134 = v27;
            uint64_t v135 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v135;
            *(unsigned char *)(v45 + v134) = 2;
            break;
          case 3u:
            uint64_t v136 = v27;
            uint64_t v137 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v137;
            *(unsigned char *)(v45 + v136) = 3;
            break;
          case 4u:
            uint64_t v138 = v27;
            uint64_t v139 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v139;
            *(unsigned char *)(v45 + v138) = 4;
            break;
          case 5u:
            uint64_t v140 = v27;
            uint64_t v141 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v141;
            *(unsigned char *)(v45 + v140) = 5;
            break;
          case 6u:
            uint64_t v154 = v27;
            uint64_t v155 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v155;
            *(unsigned char *)(v45 + v154) = 6;
            break;
          case 7u:
            long long v142 = *(_OWORD *)v46;
            *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
            *(_OWORD *)unint64_t v45 = v142;
            *(unsigned char *)(v45 + v27) = 7;
            break;
          case 8u:
            char v132 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v133 = 8;
            goto LABEL_236;
          case 9u:
            char v132 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v133 = 9;
LABEL_236:
            *(unsigned char *)(v45 + v27) = v133;
            uint64_t v156 = v27 + 1;
            id v157 = v132;
            uint64_t v28 = v156;
            break;
          default:
            *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
            *(unsigned char *)(v45 + v27) = 0;
            break;
        }
        unint64_t v158 = ((v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v159 = (((unint64_t)v46 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v159 + 8) < 0xFFFFFFFFuLL)
        {
          long long v169 = *(_OWORD *)v159;
          long long v170 = *(_OWORD *)(v159 + 16);
          long long v171 = *(_OWORD *)(v159 + 48);
          *(_OWORD *)(v158 + 32) = *(_OWORD *)(v159 + 32);
          *(_OWORD *)(v158 + 48) = v171;
          *(_OWORD *)unint64_t v158 = v169;
          *(_OWORD *)(v158 + 16) = v170;
          long long v172 = *(_OWORD *)(v159 + 64);
          long long v173 = *(_OWORD *)(v159 + 80);
          long long v174 = *(_OWORD *)(v159 + 96);
          *(_OWORD *)(v158 + 106) = *(_OWORD *)(v159 + 106);
          *(_OWORD *)(v158 + 80) = v173;
          *(_OWORD *)(v158 + 96) = v174;
          *(_OWORD *)(v158 + 64) = v172;
        }
        else
        {
          *(void *)unint64_t v158 = *(void *)v159;
          *(void *)(v158 + 8) = *(void *)(v159 + 8);
          id v160 = *(void **)(v159 + 16);
          uint64_t v161 = *(void *)(v159 + 24);
          uint64_t v162 = *(void *)(v159 + 32);
          uint64_t v163 = *(void *)(v159 + 40);
          uint64_t v164 = *(void *)(v159 + 48);
          uint64_t v252 = *(void *)(v159 + 56);
          unsigned __int8 v247 = *(unsigned char *)(v159 + 64);
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          sub_1B90CC148(v160, v161, v162, v163, v164, v252, v247);
          *(void *)(v158 + 16) = v160;
          *(void *)(v158 + 24) = v161;
          *(void *)(v158 + 32) = v162;
          *(void *)(v158 + 40) = v163;
          *(void *)(v158 + 48) = v164;
          *(void *)(v158 + 56) = v252;
          *(unsigned char *)(v158 + 64) = v247;
          *(unsigned char *)(v158 + 65) = *(unsigned char *)(v159 + 65);
          *(unsigned char *)(v158 + 66) = *(unsigned char *)(v159 + 66);
          *(unsigned char *)(v158 + 67) = *(unsigned char *)(v159 + 67);
          *(unsigned char *)(v158 + 68) = *(unsigned char *)(v159 + 68);
          int v165 = *(unsigned __int8 *)(v159 + 120);
          if (v165 == 255)
          {
            long long v166 = *(_OWORD *)(v159 + 72);
            long long v167 = *(_OWORD *)(v159 + 88);
            long long v168 = *(_OWORD *)(v159 + 104);
            *(unsigned char *)(v158 + 120) = *(unsigned char *)(v159 + 120);
            *(_OWORD *)(v158 + 88) = v167;
            *(_OWORD *)(v158 + 104) = v168;
            *(_OWORD *)(v158 + 72) = v166;
          }
          else
          {
            char v253 = v165 & 1;
            long long v175 = *(void **)(v159 + 72);
            uint64_t v176 = *(void *)(v159 + 80);
            uint64_t v177 = *(void *)(v159 + 88);
            uint64_t v178 = *(void *)(v159 + 96);
            uint64_t v179 = *(void *)(v159 + 104);
            uint64_t v248 = *(void *)(v159 + 112);
            sub_1B90BFEB8(v175, v176, v177, v178, v179, v248, v165 & 1);
            *(void *)(v158 + 72) = v175;
            *(void *)(v158 + 80) = v176;
            *(void *)(v158 + 88) = v177;
            *(void *)(v158 + 96) = v178;
            *(void *)(v158 + 104) = v179;
            *(void *)(v158 + 112) = v248;
            *(unsigned char *)(v158 + 120) = v253;
          }
          *(unsigned char *)(v158 + 121) = *(unsigned char *)(v159 + 121);
          unint64_t v45 = v257;
        }
        *(unsigned char *)(v158 + 122) = *(unsigned char *)(v159 + 122);
        *(unsigned char *)(v158 + 123) = *(unsigned char *)(v159 + 123);
        *(unsigned char *)(v158 + 124) = *(unsigned char *)(v159 + 124);
        *(unsigned char *)(v158 + 125) = *(unsigned char *)(v159 + 125);
        *(unsigned char *)(v158 + 126) = *(unsigned char *)(v159 + 126);
        uint64_t v180 = *(void **)((v159 + 134) & 0xFFFFFFFFFFFFFFF8);
        *(void *)((v158 + 134) & 0xFFFFFFFFFFFFFFF8) = v180;
        id v181 = v180;
        if (v36 <= 3)
        {
          unsigned int v119 = ((1 << v37) + 1) >> v37;
          if (v119 > 0xFFF5)
          {
            *(_DWORD *)(v45 + v36) = 0;
            goto LABEL_318;
          }
          if (v119 > 0xF5)
          {
            *(_WORD *)(v45 + v36) = 0;
            goto LABEL_318;
          }
        }
        *(unsigned char *)(v45 + v36) = 0;
        if (v36 <= 3) {
          goto LABEL_309;
        }
        goto LABEL_312;
      case 1u:
        unsigned int v85 = *((unsigned __int8 *)v46 + v27);
        unsigned int v86 = v85 - 10;
        if (v85 >= 0xA)
        {
          if (v27 <= 3) {
            uint64_t v87 = v27;
          }
          else {
            uint64_t v87 = 4;
          }
          switch(v87)
          {
            case 1:
              int v88 = *(unsigned __int8 *)v46;
              goto LABEL_215;
            case 2:
              int v88 = *v46;
              goto LABEL_215;
            case 3:
              int v88 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
              goto LABEL_215;
            case 4:
              int v88 = *(_DWORD *)v46;
LABEL_215:
              if (v27 < 4) {
                unsigned int v85 = (v88 | (v86 << (8 * v27))) + 10;
              }
              else {
                unsigned int v85 = v88 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v85)
        {
          case 1u:
            int v143 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v144 = 1;
            goto LABEL_252;
          case 2u:
            uint64_t v145 = v27;
            uint64_t v146 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v146;
            *(unsigned char *)(v45 + v145) = 2;
            break;
          case 3u:
            uint64_t v147 = v27;
            uint64_t v148 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v148;
            *(unsigned char *)(v45 + v147) = 3;
            break;
          case 4u:
            uint64_t v149 = v27;
            uint64_t v150 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v150;
            *(unsigned char *)(v45 + v149) = 4;
            break;
          case 5u:
            uint64_t v151 = v27;
            uint64_t v152 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v152;
            *(unsigned char *)(v45 + v151) = 5;
            break;
          case 6u:
            uint64_t v182 = v27;
            uint64_t v183 = v27 + 1;
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            uint64_t v28 = v183;
            *(unsigned char *)(v45 + v182) = 6;
            break;
          case 7u:
            long long v153 = *(_OWORD *)v46;
            *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
            *(_OWORD *)unint64_t v45 = v153;
            *(unsigned char *)(v45 + v27) = 7;
            break;
          case 8u:
            int v143 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v144 = 8;
            goto LABEL_252;
          case 9u:
            int v143 = *(void **)v46;
            *(void *)unint64_t v45 = *(void *)v46;
            char v144 = 9;
LABEL_252:
            *(unsigned char *)(v45 + v27) = v144;
            uint64_t v184 = v27 + 1;
            id v185 = v143;
            uint64_t v28 = v184;
            break;
          default:
            *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
            *(unsigned char *)(v45 + v27) = 0;
            break;
        }
        unint64_t v186 = ((v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v187 = (((unint64_t)v46 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v187 + 8) < 0xFFFFFFFFuLL)
        {
          long long v197 = *(_OWORD *)v187;
          long long v198 = *(_OWORD *)(v187 + 16);
          long long v199 = *(_OWORD *)(v187 + 48);
          *(_OWORD *)(v186 + 32) = *(_OWORD *)(v187 + 32);
          *(_OWORD *)(v186 + 48) = v199;
          *(_OWORD *)unint64_t v186 = v197;
          *(_OWORD *)(v186 + 16) = v198;
          long long v200 = *(_OWORD *)(v187 + 64);
          long long v201 = *(_OWORD *)(v187 + 80);
          long long v202 = *(_OWORD *)(v187 + 96);
          *(_OWORD *)(v186 + 106) = *(_OWORD *)(v187 + 106);
          *(_OWORD *)(v186 + 80) = v201;
          *(_OWORD *)(v186 + 96) = v202;
          *(_OWORD *)(v186 + 64) = v200;
        }
        else
        {
          *(void *)unint64_t v186 = *(void *)v187;
          *(void *)(v186 + 8) = *(void *)(v187 + 8);
          uint64_t v188 = *(void **)(v187 + 16);
          uint64_t v189 = *(void *)(v187 + 24);
          uint64_t v190 = *(void *)(v187 + 32);
          uint64_t v191 = *(void *)(v187 + 40);
          uint64_t v192 = *(void *)(v187 + 48);
          uint64_t v254 = *(void *)(v187 + 56);
          unsigned __int8 v249 = *(unsigned char *)(v187 + 64);
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          sub_1B90CC148(v188, v189, v190, v191, v192, v254, v249);
          *(void *)(v186 + 16) = v188;
          *(void *)(v186 + 24) = v189;
          *(void *)(v186 + 32) = v190;
          *(void *)(v186 + 40) = v191;
          *(void *)(v186 + 48) = v192;
          *(void *)(v186 + 56) = v254;
          *(unsigned char *)(v186 + 64) = v249;
          *(unsigned char *)(v186 + 65) = *(unsigned char *)(v187 + 65);
          *(unsigned char *)(v186 + 66) = *(unsigned char *)(v187 + 66);
          *(unsigned char *)(v186 + 67) = *(unsigned char *)(v187 + 67);
          *(unsigned char *)(v186 + 68) = *(unsigned char *)(v187 + 68);
          int v193 = *(unsigned __int8 *)(v187 + 120);
          if (v193 == 255)
          {
            long long v194 = *(_OWORD *)(v187 + 72);
            long long v195 = *(_OWORD *)(v187 + 88);
            long long v196 = *(_OWORD *)(v187 + 104);
            *(unsigned char *)(v186 + 120) = *(unsigned char *)(v187 + 120);
            *(_OWORD *)(v186 + 88) = v195;
            *(_OWORD *)(v186 + 104) = v196;
            *(_OWORD *)(v186 + 72) = v194;
          }
          else
          {
            char v255 = v193 & 1;
            uint64_t v203 = *(void **)(v187 + 72);
            uint64_t v204 = *(void *)(v187 + 80);
            uint64_t v205 = *(void *)(v187 + 88);
            uint64_t v206 = *(void *)(v187 + 96);
            uint64_t v207 = *(void *)(v187 + 104);
            uint64_t v250 = *(void *)(v187 + 112);
            sub_1B90BFEB8(v203, v204, v205, v206, v207, v250, v193 & 1);
            *(void *)(v186 + 72) = v203;
            *(void *)(v186 + 80) = v204;
            *(void *)(v186 + 88) = v205;
            *(void *)(v186 + 96) = v206;
            *(void *)(v186 + 104) = v207;
            *(void *)(v186 + 112) = v250;
            *(unsigned char *)(v186 + 120) = v255;
          }
          *(unsigned char *)(v186 + 121) = *(unsigned char *)(v187 + 121);
          unint64_t v45 = v257;
        }
        *(unsigned char *)(v186 + 122) = *(unsigned char *)(v187 + 122);
        *(unsigned char *)(v186 + 123) = *(unsigned char *)(v187 + 123);
        *(unsigned char *)(v186 + 124) = *(unsigned char *)(v187 + 124);
        *(unsigned char *)(v186 + 125) = *(unsigned char *)(v187 + 125);
        *(unsigned char *)(v186 + 126) = *(unsigned char *)(v187 + 126);
        unint64_t v208 = *(void **)((v187 + 134) & 0xFFFFFFFFFFFFFFF8);
        *(void *)((v186 + 134) & 0xFFFFFFFFFFFFFFF8) = v208;
        id v209 = v208;
        if (v36 > 3) {
          goto LABEL_260;
        }
        int v131 = 1;
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5) {
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_260:
          char v112 = 1;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 1;
        goto LABEL_318;
      case 2u:
        size_t v89 = v27 + 1;
        unsigned int v90 = *(void **)v46;
        *(void *)unint64_t v45 = *(void *)v46;
        uint64_t v91 = (char *)((v30 + v45) & v80);
        unint64_t v92 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v80);
        uint64_t v93 = v27;
        int v94 = v92[v27];
        id v95 = v90;
        switch(v94)
        {
          case 0:
            *uint64_t v91 = *v92;
            v91[v93] = 0;
            break;
          case 1:
            unint64_t v210 = *(void **)v92;
            *(void *)uint64_t v91 = *(void *)v92;
            char v211 = 1;
            goto LABEL_273;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v91, v92, v246);
            v91[v93] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v91, v92, v246);
            v91[v93] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v91, v92, v246);
            v91[v93] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v91, v92, v246);
            v91[v93] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v91, v92, v246);
            v91[v93] = 6;
            break;
          case 7:
            long long v212 = *(_OWORD *)v92;
            *(_OWORD *)(v91 + 9) = *(_OWORD *)(v92 + 9);
            *(_OWORD *)uint64_t v91 = v212;
            v91[v93] = 7;
            break;
          case 8:
            unint64_t v210 = *(void **)v92;
            *(void *)uint64_t v91 = *(void *)v92;
            char v211 = 8;
            goto LABEL_273;
          case 9:
            unint64_t v210 = *(void **)v92;
            *(void *)uint64_t v91 = *(void *)v92;
            char v211 = 9;
LABEL_273:
            v91[v93] = v211;
            id v213 = v210;
            break;
          default:
            memcpy(v91, v92, v89);
            break;
        }
        if (v36 > 3) {
          goto LABEL_275;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 2;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_275:
          char v112 = 2;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 2;
        goto LABEL_318;
      case 3u:
        size_t v96 = v27 + 1;
        uint64_t v97 = *(void **)v46;
        *(void *)unint64_t v45 = *(void *)v46;
        id v98 = (char *)((v30 + v45) & v80);
        uint64_t v99 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v80);
        uint64_t v100 = v27;
        int v101 = v99[v27];
        id v102 = v97;
        switch(v101)
        {
          case 0:
            *id v98 = *v99;
            v98[v100] = 0;
            break;
          case 1:
            long long v214 = *(void **)v99;
            *(void *)id v98 = *(void *)v99;
            char v215 = 1;
            goto LABEL_289;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v98, v99, v246);
            v98[v100] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v98, v99, v246);
            v98[v100] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v98, v99, v246);
            v98[v100] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v98, v99, v246);
            v98[v100] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v98, v99, v246);
            v98[v100] = 6;
            break;
          case 7:
            long long v216 = *(_OWORD *)v99;
            *(_OWORD *)(v98 + 9) = *(_OWORD *)(v99 + 9);
            *(_OWORD *)id v98 = v216;
            v98[v100] = 7;
            break;
          case 8:
            long long v214 = *(void **)v99;
            *(void *)id v98 = *(void *)v99;
            char v215 = 8;
            goto LABEL_289;
          case 9:
            long long v214 = *(void **)v99;
            *(void *)id v98 = *(void *)v99;
            char v215 = 9;
LABEL_289:
            v98[v100] = v215;
            id v217 = v214;
            break;
          default:
            memcpy(v98, v99, v96);
            break;
        }
        if (v36 > 3) {
          goto LABEL_291;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 3;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_291:
          char v112 = 3;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 3;
        goto LABEL_318;
      case 4u:
        size_t v103 = v27 + 1;
        uint64_t v104 = *(void **)v46;
        *(void *)unint64_t v45 = *(void *)v46;
        id v105 = (char *)((v30 + v45) & v80);
        char v106 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v80);
        uint64_t v107 = v27;
        int v108 = v106[v27];
        id v109 = v104;
        switch(v108)
        {
          case 0:
            char *v105 = *v106;
            v105[v107] = 0;
            break;
          case 1:
            id v218 = *(void **)v106;
            *(void *)id v105 = *(void *)v106;
            char v219 = 1;
            goto LABEL_305;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v105, v106, v246);
            v105[v107] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v105, v106, v246);
            v105[v107] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v105, v106, v246);
            v105[v107] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v105, v106, v246);
            v105[v107] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v251 + 16))(v105, v106, v246);
            v105[v107] = 6;
            break;
          case 7:
            long long v220 = *(_OWORD *)v106;
            *(_OWORD *)(v105 + 9) = *(_OWORD *)(v106 + 9);
            *(_OWORD *)id v105 = v220;
            v105[v107] = 7;
            break;
          case 8:
            id v218 = *(void **)v106;
            *(void *)id v105 = *(void *)v106;
            char v219 = 8;
            goto LABEL_305;
          case 9:
            id v218 = *(void **)v106;
            *(void *)id v105 = *(void *)v106;
            char v219 = 9;
LABEL_305:
            v105[v107] = v219;
            id v221 = v218;
            break;
          default:
            memcpy(v105, v106, v103);
            break;
        }
        if (v36 > 3) {
          goto LABEL_307;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 4;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_307:
          char v112 = 4;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 4;
        goto LABEL_318;
      case 5u:
        *(void *)unint64_t v45 = *(void *)v46;
        *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
        *(unsigned char *)(v45 + 9) = *((unsigned char *)v46 + 9);
        *(unsigned char *)(v45 + 10) = *((unsigned char *)v46 + 10);
        unsigned int v110 = (void *)*((void *)v46 + 2);
        *(void *)(v45 + 16) = v110;
        id v111 = v110;
        if (v36 > 3) {
          goto LABEL_139;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 5;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_139:
          char v112 = 5;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 5;
        goto LABEL_318;
      case 6u:
        unsigned int v117 = *(void **)v46;
        *(void *)unint64_t v45 = *(void *)v46;
        id v118 = v117;
        if (v36 > 3) {
          goto LABEL_157;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 6;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_157:
          char v112 = 6;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 6;
        goto LABEL_318;
      case 7u:
        uint64_t v113 = ~v18;
        if ((*(_DWORD *)(v17 + 84) & 0x80000000) != 0)
        {
          if ((*(unsigned int (**)(unint64_t))(v17 + 48))(((unint64_t)v46 + v18 + 8) & v113))
          {
LABEL_144:
            memcpy((void *)v45, v46, v32);
            goto LABEL_189;
          }
        }
        else
        {
          uint64_t v114 = *(void *)v46;
          if (*(void *)v46 >= 0xFFFFFFFFuLL) {
            LODWORD(v114) = -1;
          }
          if (v114 != -1) {
            goto LABEL_144;
          }
        }
        *(void *)unint64_t v45 = *(void *)v46;
        uint64_t v122 = (v18 + 8 + v45) & v113;
        uint64_t v123 = ((unint64_t)v46 + v18 + 8) & v113;
        uint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v125 = v122;
        unint64_t v45 = v257;
        v124(v125, v123, v245);
LABEL_189:
        unint64_t v126 = ((v45 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v127 = (((unint64_t)v46 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v127 + 8) < 0xFFFFFFFFuLL)
        {
          long long v130 = *(_OWORD *)v127;
          *(void *)(v126 + 16) = *(void *)(v127 + 16);
          *(_OWORD *)unint64_t v126 = v130;
          if (v36 > 3)
          {
LABEL_195:
            char v112 = 7;
            goto LABEL_308;
          }
        }
        else
        {
          *(void *)unint64_t v126 = *(void *)v127;
          *(void *)(v126 + 8) = *(void *)(v127 + 8);
          uint64_t v128 = *(void **)(v127 + 16);
          *(void *)(v126 + 16) = v128;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          id v129 = v128;
          if (v36 > 3) {
            goto LABEL_195;
          }
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 7;
          goto LABEL_317;
        }
        if (v119 <= 0xF5) {
          goto LABEL_195;
        }
        *(_WORD *)(v45 + v36) = 7;
        goto LABEL_318;
      case 8u:
        if (v33 < 0xFD)
        {
          if (*((unsigned __int8 *)v46 + v26) < 3u)
          {
LABEL_172:
            (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v14 + 16))(v45, v46, v246);
            *(unsigned char *)(v45 + v26) = *((unsigned char *)v46 + v26);
LABEL_173:
            *(void *)(((v45 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7)
                                                                                   + v26
                                                                                   + 1) & 0xFFFFFFFFFFFFFFF8);
            if (v36 > 3) {
              goto LABEL_176;
            }
            unsigned int v119 = ((1 << v37) + 1) >> v37;
            if (v119 > 0xFFF5)
            {
              int v131 = 8;
LABEL_317:
              *(_DWORD *)(v45 + v36) = v131;
            }
            else
            {
              if (v119 <= 0xF5)
              {
LABEL_176:
                char v112 = 8;
LABEL_308:
                *(unsigned char *)(v45 + v36) = v112;
                if (v36 <= 3)
                {
LABEL_309:
                  unsigned int v222 = ((1 << v37) + 1) >> v37;
                  uint64_t v223 = 2;
                  if (v222 > 0xFFF5) {
                    uint64_t v223 = 4;
                  }
                  if (v222 > 0xF5) {
                    goto LABEL_320;
                  }
                }
LABEL_312:
                uint64_t v223 = 1;
LABEL_320:
                uint64_t v225 = v223 + v36;
                unint64_t v226 = v225 + v45;
                unint64_t v227 = (unint64_t)v46 + v225;
                *(unsigned char *)unint64_t v226 = *(unsigned char *)v227;
                v226 &= 0xFFFFFFFFFFFFFFF8;
                v227 &= 0xFFFFFFFFFFFFFFF8;
                uint64_t v228 = *(void **)(v227 + 8);
                *(void *)(v226 + 8) = v228;
                unint64_t v229 = (v226 + 23) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v230 = (v227 + 23) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v231 = *(void **)v230;
                *(void *)unint64_t v229 = *(void *)v230;
                *(unsigned char *)(v229 + 8) = *(unsigned char *)(v230 + 8);
                unint64_t v232 = (v226 + 39) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v233 = (v227 + 39) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v234 = *(void *)v233;
                *(unsigned char *)(v232 + 8) = *(unsigned char *)(v233 + 8);
                *(void *)unint64_t v232 = v234;
                uint64_t v235 = (void *)((v226 + 55) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v236 = (void *)((v227 + 55) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v235 = *v236;
                uint64_t v237 = *(void **)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
                *(void *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8) = v237;
                id v238 = v228;
                id v239 = v231;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                id v240 = v237;
                if (v36 > 3) {
                  goto LABEL_324;
                }
                unsigned int v241 = ((1 << v37) + 1) >> v37;
                uint64_t v242 = 2;
                if (v241 > 0xFFF5) {
                  uint64_t v242 = 4;
                }
                if (v241 <= 0xF5) {
LABEL_324:
                }
                  uint64_t v242 = 1;
                int v38 = a1;
                unint64_t v243 = ((((((v242 + v36) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 8;
                *(void *)((v257 + v243) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v46 + v243) & 0xFFFFFFFFFFFFFFF8);
                return v38;
              }
              *(_WORD *)(v45 + v36) = 8;
            }
LABEL_318:
            BOOL v224 = v119 > 0xFFF5;
            uint64_t v223 = 2;
            if (v224) {
              uint64_t v223 = 4;
            }
            goto LABEL_320;
          }
        }
        else if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v14 + 48))(v46, v33, v246))
        {
          goto LABEL_172;
        }
        memcpy((void *)v45, v46, v26 + 1);
        goto LABEL_173;
      case 9u:
        *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))((v24 + 1 + v45) & ~v24, ((unint64_t)v46 + v24 + 1) & ~v24, v21);
        if (v36 > 3) {
          goto LABEL_146;
        }
        unsigned int v119 = ((1 << v37) + 1) >> v37;
        if (v119 > 0xFFF5)
        {
          int v131 = 9;
          goto LABEL_317;
        }
        if (v119 <= 0xF5)
        {
LABEL_146:
          char v112 = 9;
          goto LABEL_308;
        }
        *(_WORD *)(v45 + v36) = 9;
        goto LABEL_318;
      default:
        if (v36 > 3) {
          goto LABEL_151;
        }
        unsigned int v115 = ((1 << v37) + 1) >> v37;
        uint64_t v116 = 2;
        if (v115 > 0xFFF5) {
          uint64_t v116 = 4;
        }
        if (v115 <= 0xF5) {
LABEL_151:
        }
          uint64_t v116 = 1;
        memcpy((void *)v45, v46, v116 + v36);
        if (v36 > 3) {
          goto LABEL_312;
        }
        goto LABEL_309;
    }
  }
  if (v64 > 0xFF)
  {
    int v63 = *(unsigned __int16 *)((char *)v46 + v61);
    if (!*(unsigned __int16 *)((char *)v46 + v61)) {
      goto LABEL_86;
    }
    goto LABEL_78;
  }
  if (v64 >= 2) {
    goto LABEL_71;
  }
LABEL_86:
  if (!v52) {
    goto LABEL_99;
  }
  if (v36 <= 3)
  {
    unsigned int v71 = ((1 << v37) + 1) >> v37;
    if (v71 > 0xFFF5)
    {
      unsigned int v67 = *(_DWORD *)((char *)v46 + v36);
      unsigned int v68 = ~v67;
      goto LABEL_97;
    }
    int v70 = v71 + 10;
    if (v71 > 0xF5)
    {
      int v73 = *(unsigned __int16 *)((char *)v46 + v36);
      unsigned int v67 = v73 | 0xFFFF0000;
      unsigned int v68 = v73 ^ 0xFFFF;
      char v69 = 16;
    }
    else
    {
      int v72 = *((unsigned __int8 *)v46 + v36);
      unsigned int v67 = v72 | 0xFFFFFF00;
      unsigned int v68 = v72 ^ 0xFF;
      char v69 = 8;
    }
  }
  else
  {
    int v66 = *((unsigned __int8 *)v46 + v36);
    unsigned int v67 = v66 | 0xFFFFFF00;
    unsigned int v68 = v66 ^ 0xFF;
    char v69 = 8;
    int v70 = 11;
  }
  unsigned int v74 = (1 << v69) - v70;
  if ((v74 & 0x80000000) == 0)
  {
    if (v74 <= v68) {
      goto LABEL_99;
    }
    goto LABEL_98;
  }
LABEL_97:
  if (v68 >= 0x7FFFFFFF) {
    goto LABEL_99;
  }
LABEL_98:
  if (!v67) {
    goto LABEL_99;
  }
LABEL_181:
  if (v36 > 3) {
    goto LABEL_185;
  }
  unsigned int v120 = ((1 << v37) + 1) >> v37;
  uint64_t v121 = 2;
  if (v120 > 0xFFF5) {
    uint64_t v121 = 4;
  }
  if (v120 <= 0xF5) {
LABEL_185:
  }
    uint64_t v121 = 1;
  memcpy((void *)v45, v46, ((((((((v121 + v36) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v38;
}

void *sub_1B9213568(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  v585 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v577 = v13;
  uint64_t v567 = sub_1B996A6F0();
  uint64_t v14 = *(void *)(v567 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = v15 | 7;
  uint64_t v566 = sub_1B996BAD0();
  uint64_t v17 = *(void *)(v566 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = sub_1B996D7B0();
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t v23 = v22;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = v18 | v24 | v15 | 7;
  unint64_t v26 = *(void *)(v14 + 64);
  if (v26 <= 0x19) {
    uint64_t v27 = 25;
  }
  else {
    uint64_t v27 = *(void *)(v14 + 64);
  }
  uint64_t v28 = v27 + 1;
  unint64_t v29 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v30 = v15 + 15;
  uint64_t v565 = v17;
  int v31 = *(_DWORD *)(v17 + 84);
  uint64_t v32 = *(void *)(v17 + 64);
  size_t v33 = v32 + ((v18 + 8) & ~v18);
  uint64_t v568 = v14;
  uint64_t v34 = *(unsigned int *)(v14 + 84);
  if (v27 + 1 + ((v15 + 15) & (unint64_t)~v16) > v29) {
    unint64_t v29 = v27 + 1 + ((v15 + 15) & ~v16);
  }
  if (v29 <= ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v29 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= (v26 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v35 = v24 + 1;
  unint64_t v36 = *(void *)(v22 + 64) + ((v24 + 1) & ~v24);
  if (v29 > v36) {
    unint64_t v36 = v29;
  }
  if (v36 <= 0x18) {
    uint64_t v37 = 24;
  }
  else {
    uint64_t v37 = v36;
  }
  int v38 = v585;
  if (v37 > 3)
  {
    int v39 = 11;
LABEL_31:
    char v40 = 8;
    goto LABEL_32;
  }
  unsigned int v44 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_41;
  }
  int v39 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_31;
  }
  char v40 = 16;
LABEL_32:
  unsigned int v41 = (1 << v40) - v39;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_41:
  unint64_t v45 = (unsigned __int8 *)(((unint64_t)v585 + v25 + v577) & ~v25);
  unint64_t v46 = (unsigned __int16 *)(((unint64_t)a2 + v25 + v577) & ~v25);
  if (v37 > 3)
  {
    int v47 = 11;
    goto LABEL_43;
  }
  unsigned int v50 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v50 <= 0xFFF5)
  {
    int v47 = v50 + 10;
    if (v50 > 0xF5)
    {
      char v48 = 16;
LABEL_44:
      int v49 = (1 << v48) - v47;
      if ((v49 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_49;
    }
LABEL_43:
    char v48 = 8;
    goto LABEL_44;
  }
LABEL_49:
  int v49 = 0x7FFFFFFF;
LABEL_50:
  uint64_t v51 = ~v16;
  uint64_t v52 = ~v18;
  uint64_t v53 = ~v24;
  if (v49 != v42)
  {
    if (v37 > 3) {
      goto LABEL_61;
    }
    unsigned int v57 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v58 = 2;
    if (v57 > 0xFFF5) {
      uint64_t v58 = 4;
    }
    if (v57 <= 0xF5) {
LABEL_61:
    }
      uint64_t v58 = 1;
    unint64_t v59 = *(void *)(((unint64_t)&v45[v37 + v58] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v59 >= 0xFFFFFFFF) {
      LODWORD(v59) = -1;
    }
    if (v59 != -1) {
      goto LABEL_168;
    }
LABEL_103:
    if (v37 <= 3)
    {
      unsigned int v78 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v78 > 0xFFF5)
      {
        unsigned int v81 = 0x7FFFFFFF;
        if (v37 > 3)
        {
LABEL_114:
          int v83 = 11;
          goto LABEL_118;
        }
LABEL_116:
        unsigned int v84 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v84 > 0xFFF5) {
          goto LABEL_123;
        }
        int v83 = v84 + 10;
        if (v84 > 0xF5)
        {
          char v85 = 16;
LABEL_119:
          int v86 = (1 << v85) - v83;
          if ((v86 & 0x80000000) == 0)
          {
            if (v86 == v81) {
              goto LABEL_121;
            }
            goto LABEL_124;
          }
LABEL_123:
          if (v81 == 0x7FFFFFFF)
          {
LABEL_121:
            if (v37 <= 3)
            {
              unsigned int v91 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v91 > 0xFFF5) {
                goto LABEL_139;
              }
              int v87 = v91 + 10;
              if (v91 > 0xF5)
              {
                char v92 = 16;
LABEL_136:
                unsigned int v93 = (1 << v92) - v87;
                if ((v93 & 0x80000000) == 0)
                {
                  if (v37 > 3) {
                    goto LABEL_143;
                  }
LABEL_140:
                  unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                  uint64_t v95 = 2;
                  if (v94 > 0xFFF5) {
                    uint64_t v95 = 4;
                  }
                  if (v94 > 0xF5)
                  {
LABEL_144:
                    unsigned int v96 = v81 - v93;
                    if (v81 <= v93) {
                      goto LABEL_229;
                    }
                    uint64_t v97 = v95 + v37;
                    char v98 = 8 * (v95 + v37);
                    if (v97 > 3)
                    {
LABEL_146:
                      int v99 = *((unsigned __int8 *)v46 + v97);
                      if (!*((unsigned char *)v46 + v97)) {
                        goto LABEL_229;
                      }
                      goto LABEL_156;
                    }
                    unsigned int v100 = ((v96 + ~(-1 << v98)) >> v98) + 1;
                    if (HIWORD(v100))
                    {
                      int v99 = *(_DWORD *)((char *)v46 + v97);
                      if (!v99) {
                        goto LABEL_229;
                      }
                    }
                    else
                    {
                      if (v100 <= 0xFF)
                      {
                        if (v100 < 2)
                        {
LABEL_229:
                          if (!v93) {
                            goto LABEL_241;
                          }
                          if (v37 <= 3)
                          {
                            unsigned int v134 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                            if (v134 > 0xFFF5)
                            {
                              unsigned int v129 = *(_DWORD *)((char *)v46 + v37);
                              unsigned int v130 = ~v129;
                              goto LABEL_239;
                            }
                            int v132 = v134 + 10;
                            if (v134 > 0xF5)
                            {
                              int v215 = *(unsigned __int16 *)((char *)v46 + v37);
                              unsigned int v129 = v215 | 0xFFFF0000;
                              unsigned int v130 = v215 ^ 0xFFFF;
                              char v131 = 16;
                            }
                            else
                            {
                              int v135 = *((unsigned __int8 *)v46 + v37);
                              unsigned int v129 = v135 | 0xFFFFFF00;
                              unsigned int v130 = v135 ^ 0xFF;
                              char v131 = 8;
                            }
                          }
                          else
                          {
                            int v128 = *((unsigned __int8 *)v46 + v37);
                            unsigned int v129 = v128 | 0xFFFFFF00;
                            unsigned int v130 = v128 ^ 0xFF;
                            char v131 = 8;
                            int v132 = 11;
                          }
                          unsigned int v133 = (1 << v131) - v132;
                          if ((v133 & 0x80000000) == 0)
                          {
                            if (v133 <= v130) {
                              goto LABEL_241;
                            }
                            goto LABEL_240;
                          }
LABEL_239:
                          if (v130 >= 0x7FFFFFFF) {
                            goto LABEL_241;
                          }
LABEL_240:
                          if (!v129) {
                            goto LABEL_241;
                          }
LABEL_369:
                          if (v37 <= 3)
                          {
                            unsigned int v217 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                            if (v217 > 0xFFF5)
                            {
                              unsigned int v218 = *(_DWORD *)&v45[v37];
                              unsigned int v219 = v218 - 10;
                              if (v218 < 0xA) {
                                goto LABEL_389;
                              }
LABEL_377:
                              if (v37 <= 3) {
                                uint64_t v220 = v37;
                              }
                              else {
                                uint64_t v220 = 4;
                              }
                              switch(v220)
                              {
                                case 1:
                                  int v221 = *v45;
                                  if (v37 >= 4) {
                                    goto LABEL_388;
                                  }
                                  goto LABEL_384;
                                case 2:
                                  int v221 = *(unsigned __int16 *)v45;
                                  if (v37 < 4) {
                                    goto LABEL_384;
                                  }
                                  goto LABEL_388;
                                case 3:
                                  int v221 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                  if (v37 < 4) {
                                    goto LABEL_384;
                                  }
                                  goto LABEL_388;
                                case 4:
                                  int v221 = *(_DWORD *)v45;
                                  if (v37 < 4) {
LABEL_384:
                                  }
                                    unsigned int v218 = (v221 | (v219 << (8 * v37))) + 10;
                                  else {
LABEL_388:
                                  }
                                    unsigned int v218 = v221 + 10;
                                  break;
                                default:
                                  break;
                              }
LABEL_389:
                              switch(v218)
                              {
                                case 0u:
                                  unsigned int v222 = v45[v27];
                                  unsigned int v223 = v222 - 10;
                                  if (v222 >= 0xA)
                                  {
                                    if (v27 <= 3) {
                                      uint64_t v224 = v27;
                                    }
                                    else {
                                      uint64_t v224 = 4;
                                    }
                                    switch(v224)
                                    {
                                      case 1:
                                        int v225 = *v45;
                                        goto LABEL_498;
                                      case 2:
                                        int v225 = *(unsigned __int16 *)v45;
                                        goto LABEL_498;
                                      case 3:
                                        int v225 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                        goto LABEL_498;
                                      case 4:
                                        int v225 = *(_DWORD *)v45;
LABEL_498:
                                        if (v27 < 4) {
                                          unsigned int v222 = (v225 | (v223 << (8 * v27))) + 10;
                                        }
                                        else {
                                          unsigned int v222 = v225 + 10;
                                        }
                                        break;
                                      default:
                                        break;
                                    }
                                  }
                                  switch(v222)
                                  {
                                    case 1u:
                                    case 8u:
                                    case 9u:
                                      goto LABEL_510;
                                    case 2u:
                                    case 3u:
                                    case 4u:
                                    case 5u:
                                    case 6u:
                                      goto LABEL_509;
                                    default:
                                      goto LABEL_512;
                                  }
                                  goto LABEL_512;
                                case 1u:
                                  unsigned int v226 = v45[v27];
                                  unsigned int v227 = v226 - 10;
                                  if (v226 >= 0xA)
                                  {
                                    if (v27 <= 3) {
                                      uint64_t v228 = v27;
                                    }
                                    else {
                                      uint64_t v228 = 4;
                                    }
                                    switch(v228)
                                    {
                                      case 1:
                                        int v229 = *v45;
                                        goto LABEL_505;
                                      case 2:
                                        int v229 = *(unsigned __int16 *)v45;
                                        goto LABEL_505;
                                      case 3:
                                        int v229 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                        goto LABEL_505;
                                      case 4:
                                        int v229 = *(_DWORD *)v45;
LABEL_505:
                                        if (v27 < 4) {
                                          unsigned int v226 = (v229 | (v227 << (8 * v27))) + 10;
                                        }
                                        else {
                                          unsigned int v226 = v229 + 10;
                                        }
                                        break;
                                      default:
                                        break;
                                    }
                                  }
                                  switch(v226)
                                  {
                                    case 1u:
                                    case 8u:
                                    case 9u:
LABEL_510:
                                      uint64_t v267 = v27 + 1;

                                      goto LABEL_511;
                                    case 2u:
                                    case 3u:
                                    case 4u:
                                    case 5u:
                                    case 6u:
LABEL_509:
                                      uint64_t v267 = v27 + 1;
                                      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v568 + 8))(v45, v567, v20);
LABEL_511:
                                      uint64_t v28 = v267;
                                      break;
                                    default:
                                      break;
                                  }
LABEL_512:
                                  unint64_t v268 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
                                  if (*(void *)(v268 + 8) >= 0xFFFFFFFFuLL)
                                  {
                                    swift_bridgeObjectRelease();
                                    sub_1B90CBFF4(*(void **)(v268 + 16), *(void *)(v268 + 24), *(void *)(v268 + 32), *(void *)(v268 + 40), *(void *)(v268 + 48), *(void *)(v268 + 56), *(unsigned char *)(v268 + 64));
                                    int v269 = *(unsigned __int8 *)(v268 + 120);
                                    if (v269 != 255) {
                                      sub_1B90CC01C(*(void **)(v268 + 72), *(void *)(v268 + 80), *(void *)(v268 + 88), *(void *)(v268 + 96), *(void *)(v268 + 104), *(void *)(v268 + 112), v269 & 1);
                                    }
                                  }
                                  id v240 = *(id *)((v268 + 134) & 0xFFFFFFFFFFFFFFF8);
                                  goto LABEL_516;
                                case 2u:
                                  uint64_t v230 = v27;
                                  uint64_t v231 = v30;
                                  uint64_t v232 = v51;

                                  unint64_t v233 = (id *)((unint64_t)&v45[v231] & v232);
                                  switch(*((unsigned char *)v233 + v230))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
                                      goto LABEL_437;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                      goto LABEL_405;
                                    default:
                                      goto LABEL_517;
                                  }
                                  goto LABEL_517;
                                case 3u:
                                  uint64_t v234 = v27;
                                  uint64_t v235 = v30;
                                  uint64_t v236 = v51;

                                  unint64_t v233 = (id *)((unint64_t)&v45[v235] & v236);
                                  switch(*((unsigned char *)v233 + v234))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
                                      goto LABEL_437;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                      goto LABEL_405;
                                    default:
                                      goto LABEL_517;
                                  }
                                  goto LABEL_517;
                                case 4u:
                                  uint64_t v237 = v27;
                                  uint64_t v238 = v30;
                                  uint64_t v239 = v51;

                                  unint64_t v233 = (id *)((unint64_t)&v45[v238] & v239);
                                  switch(*((unsigned char *)v233 + v237))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
LABEL_437:
                                      id v240 = *v233;
                                      goto LABEL_516;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
LABEL_405:
                                      (*(void (**)(id *, uint64_t))(v568 + 8))(v233, v567);
                                      break;
                                    default:
                                      goto LABEL_517;
                                  }
                                  goto LABEL_517;
                                case 5u:
                                  id v240 = (id)*((void *)v45 + 2);
                                  goto LABEL_516;
                                case 6u:
                                  id v240 = *(id *)v45;
                                  goto LABEL_516;
                                case 7u:
                                  if (v31 < 0)
                                  {
                                    int v242 = (*(uint64_t (**)(unint64_t))(v565 + 48))((unint64_t)&v45[v18 + 8] & v52);
                                    uint64_t v20 = v18;
                                  }
                                  else
                                  {
                                    id v241 = *(id *)v45;
                                    if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                                      LODWORD(v241) = -1;
                                    }
                                    int v242 = v241 + 1;
                                  }
                                  if (!v242)
                                  {
                                    uint64_t v246 = v20;
                                    swift_bridgeObjectRelease();
                                    (*(void (**)(unint64_t, uint64_t))(v565 + 8))((unint64_t)&v45[v246 + 8] & v52, v566);
                                  }
                                  unint64_t v247 = (((unint64_t)v45 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
                                  if (*(void *)(v247 + 8) < 0xFFFFFFFFuLL) {
                                    goto LABEL_517;
                                  }
                                  swift_bridgeObjectRelease();
                                  id v240 = *(id *)(v247 + 16);
LABEL_516:

                                  goto LABEL_517;
                                case 8u:
                                  if (v34 < 0xFD)
                                  {
                                    unsigned int v245 = v45[v26];
                                    if (v245 < 3) {
                                      goto LABEL_430;
                                    }
                                    unsigned int v243 = v245 - 2;
                                  }
                                  else
                                  {
                                    unsigned int v243 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v568 + 48))(v45, v34, v567);
                                  }
                                  if (v243) {
                                    goto LABEL_517;
                                  }
LABEL_430:
                                  (*(void (**)(unsigned __int8 *, uint64_t))(v568 + 8))(v45, v567);
LABEL_517:
                                  if (v37 > 3) {
                                    goto LABEL_521;
                                  }
                                  unsigned int v270 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                                  uint64_t v271 = 2;
                                  if (v270 > 0xFFF5) {
                                    uint64_t v271 = 4;
                                  }
                                  if (v270 <= 0xF5) {
LABEL_521:
                                  }
                                    uint64_t v271 = 1;
                                  unint64_t v272 = (unint64_t)&v45[v37 + v271] & 0xFFFFFFFFFFFFFFF8;

                                  swift_bridgeObjectRelease();
                                  if (v37 <= 3) {
                                    goto LABEL_523;
                                  }
                                  goto LABEL_526;
                                case 9u:
                                  (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 8))((unint64_t)&v45[v35] & v53, v21, v18);
                                  goto LABEL_517;
                                default:
                                  goto LABEL_517;
                              }
                            }
                            if (v217 > 0xF5)
                            {
                              unsigned int v218 = *(unsigned __int16 *)&v45[v37];
                              unsigned int v219 = v218 - 10;
                              if (v218 < 0xA) {
                                goto LABEL_389;
                              }
                              goto LABEL_377;
                            }
                          }
                          unsigned int v218 = v45[v37];
                          unsigned int v219 = v218 - 10;
                          if (v218 < 0xA) {
                            goto LABEL_389;
                          }
                          goto LABEL_377;
                        }
                        goto LABEL_146;
                      }
                      int v99 = *(unsigned __int16 *)((char *)v46 + v97);
                      if (!*(unsigned __int16 *)((char *)v46 + v97)) {
                        goto LABEL_229;
                      }
                    }
LABEL_156:
                    int v101 = (v99 - 1) << v98;
                    if (v97 > 3) {
                      int v101 = 0;
                    }
                    if (v97)
                    {
                      if (v97 > 3) {
                        LODWORD(v97) = 4;
                      }
                      switch((int)v97)
                      {
                        case 2:
                          LODWORD(v97) = *v46;
                          break;
                        case 3:
                          LODWORD(v97) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                          break;
                        case 4:
                          LODWORD(v97) = *(_DWORD *)v46;
                          break;
                        default:
                          LODWORD(v97) = *(unsigned __int8 *)v46;
                          break;
                      }
                    }
                    if (v93 + (v97 | v101) != -1) {
                      goto LABEL_369;
                    }
                    goto LABEL_241;
                  }
LABEL_143:
                  uint64_t v95 = 1;
                  goto LABEL_144;
                }
LABEL_139:
                unsigned int v93 = 0x7FFFFFFF;
                if (v37 > 3) {
                  goto LABEL_143;
                }
                goto LABEL_140;
              }
            }
            else
            {
              int v87 = 11;
            }
            char v92 = 8;
            goto LABEL_136;
          }
LABEL_124:
          if (v37 > 3) {
            goto LABEL_128;
          }
          unsigned int v88 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          uint64_t v89 = 2;
          if (v88 > 0xFFF5) {
            uint64_t v89 = 4;
          }
          if (v88 <= 0xF5) {
LABEL_128:
          }
            uint64_t v89 = 1;
          unint64_t v90 = *(void *)((((unint64_t)v46 + v37 + v89) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v90 >= 0xFFFFFFFF) {
            LODWORD(v90) = -1;
          }
          if (v90 != -1) {
            goto LABEL_369;
          }
LABEL_241:
          if (v45 == (unsigned __int8 *)v46) {
            goto LABEL_849;
          }
          if (v37 > 3) {
            goto LABEL_243;
          }
          unsigned int v137 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          if (v137 > 0xFFF5)
          {
            unsigned int v136 = *(_DWORD *)&v45[v37];
          }
          else
          {
            if (v137 <= 0xF5)
            {
LABEL_243:
              unsigned int v136 = v45[v37];
              goto LABEL_248;
            }
            unsigned int v136 = *(unsigned __int16 *)&v45[v37];
          }
LABEL_248:
          unsigned int v138 = v136 - 10;
          size_t v563 = v26 + 1;
          uint64_t v564 = v18 + 8;
          if (v136 >= 0xA)
          {
            if (v37 <= 3) {
              uint64_t v139 = v37;
            }
            else {
              uint64_t v139 = 4;
            }
            switch(v139)
            {
              case 1:
                int v140 = *v45;
                goto LABEL_257;
              case 2:
                int v140 = *(unsigned __int16 *)v45;
                goto LABEL_257;
              case 3:
                int v140 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                goto LABEL_257;
              case 4:
                int v140 = *(_DWORD *)v45;
LABEL_257:
                if (v37 < 4) {
                  unsigned int v136 = (v140 | (v138 << (8 * v37))) + 10;
                }
                else {
                  unsigned int v136 = v140 + 10;
                }
                break;
              default:
                break;
            }
          }
          uint64_t v578 = ~v18;
          size_t v556 = v32 + ((v18 + 8) & ~v18);
          size_t __n = v27 + 1;
          uint64_t v561 = v21;
          uint64_t v562 = v30;
          uint64_t v559 = v51;
          uint64_t v560 = v23;
          int v141 = v31;
          uint64_t v558 = v53;
          switch(v136)
          {
            case 0u:
              unsigned int v142 = v45[v27];
              unsigned int v143 = v142 - 10;
              if (v142 < 0xA)
              {
                size_t v145 = v27 + 1;
              }
              else
              {
                if (v27 <= 3) {
                  uint64_t v144 = v27;
                }
                else {
                  uint64_t v144 = 4;
                }
                size_t v145 = v27 + 1;
                switch(v144)
                {
                  case 1:
                    int v146 = *v45;
                    goto LABEL_574;
                  case 2:
                    int v146 = *(unsigned __int16 *)v45;
                    goto LABEL_574;
                  case 3:
                    int v146 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                    goto LABEL_574;
                  case 4:
                    int v146 = *(_DWORD *)v45;
LABEL_574:
                    if (v27 < 4) {
                      unsigned int v142 = (v146 | (v143 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v142 = v146 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              uint64_t v555 = v18;
              uint64_t v359 = v27;
              switch(v142)
              {
                case 1u:
                case 8u:
                case 9u:
                  goto LABEL_586;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  goto LABEL_585;
                default:
                  goto LABEL_588;
              }
              goto LABEL_588;
            case 1u:
              unsigned int v147 = v45[v27];
              unsigned int v148 = v147 - 10;
              if (v147 < 0xA)
              {
                size_t v145 = v27 + 1;
              }
              else
              {
                if (v27 <= 3) {
                  uint64_t v149 = v27;
                }
                else {
                  uint64_t v149 = 4;
                }
                size_t v145 = v27 + 1;
                switch(v149)
                {
                  case 1:
                    int v150 = *v45;
                    goto LABEL_581;
                  case 2:
                    int v150 = *(unsigned __int16 *)v45;
                    goto LABEL_581;
                  case 3:
                    int v150 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                    goto LABEL_581;
                  case 4:
                    int v150 = *(_DWORD *)v45;
LABEL_581:
                    if (v27 < 4) {
                      unsigned int v147 = (v150 | (v148 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v147 = v150 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              uint64_t v555 = v18;
              uint64_t v359 = v27;
              switch(v147)
              {
                case 1u:
                case 8u:
                case 9u:
LABEL_586:

                  goto LABEL_587;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
LABEL_585:
                  (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v568 + 8))(v45, v567, v18);
LABEL_587:
                  size_t v145 = __n;
                  break;
                default:
                  break;
              }
LABEL_588:
              unint64_t v360 = (((unint64_t)v45 | 7) + v145) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v360 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                sub_1B90CBFF4(*(void **)(v360 + 16), *(void *)(v360 + 24), *(void *)(v360 + 32), *(void *)(v360 + 40), *(void *)(v360 + 48), *(void *)(v360 + 56), *(unsigned char *)(v360 + 64));
                int v361 = *(unsigned __int8 *)(v360 + 120);
                if (v361 != 255) {
                  sub_1B90CC01C(*(void **)(v360 + 72), *(void *)(v360 + 80), *(void *)(v360 + 88), *(void *)(v360 + 96), *(void *)(v360 + 104), *(void *)(v360 + 112), v361 & 1);
                }
              }

              uint64_t v27 = v359;
              uint64_t v20 = v555;
              uint64_t v21 = v561;
              uint64_t v30 = v562;
              uint64_t v51 = v559;
              uint64_t v23 = v560;
              int v31 = v141;
              uint64_t v53 = v558;
              goto LABEL_592;
            case 2u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v558;
              uint64_t v51 = v559;
              int v31 = v141;
              uint64_t v23 = v560;
              uint64_t v21 = v561;
              uint64_t v30 = v562;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              long long v153 = (id *)((unint64_t)&v45[v562] & v559);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
                  goto LABEL_463;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                  goto LABEL_276;
                default:
                  goto LABEL_592;
              }
              goto LABEL_592;
            case 3u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v558;
              uint64_t v51 = v559;
              int v31 = v141;
              uint64_t v23 = v560;
              uint64_t v21 = v561;
              uint64_t v30 = v562;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              long long v153 = (id *)((unint64_t)&v45[v562] & v559);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
                  goto LABEL_463;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                  goto LABEL_276;
                default:
                  goto LABEL_592;
              }
              goto LABEL_592;
            case 4u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v558;
              uint64_t v51 = v559;
              int v31 = v141;
              uint64_t v23 = v560;
              uint64_t v21 = v561;
              uint64_t v30 = v562;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              long long v153 = (id *)((unint64_t)&v45[v562] & v559);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
LABEL_463:

                  goto LABEL_462;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
LABEL_276:
                  uint64_t v154 = *(void (**)(void))(v568 + 8);
                  goto LABEL_461;
                default:
                  goto LABEL_592;
              }
              goto LABEL_592;
            case 5u:
              id v155 = (id)*((void *)v45 + 2);
              goto LABEL_284;
            case 6u:
              id v155 = *(id *)v45;
LABEL_284:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              goto LABEL_462;
            case 7u:
              if (v31 < 0)
              {
                uint64_t v257 = (unint64_t)&v45[v18 + 8] & v578;
                uint64_t v258 = v27;
                uint64_t v259 = v20;
                int v157 = (*(uint64_t (**)(uint64_t))(v565 + 48))(v257);
                uint64_t v53 = v558;
                uint64_t v51 = v559;
                int v31 = v141;
                uint64_t v23 = v560;
                uint64_t v21 = v561;
                uint64_t v30 = v562;
                uint64_t v20 = v259;
                uint64_t v27 = v258;
              }
              else
              {
                id v156 = *(id *)v45;
                if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                  LODWORD(v156) = -1;
                }
                int v157 = v156 + 1;
              }
              if (!v157)
              {
                uint64_t v260 = v27;
                uint64_t v261 = v20;
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v565 + 8))((unint64_t)&v45[v261 + 8] & v578, v566);
                uint64_t v53 = v558;
                uint64_t v51 = v559;
                int v31 = v141;
                uint64_t v23 = v560;
                uint64_t v21 = v561;
                uint64_t v30 = v562;
                uint64_t v20 = v261;
                uint64_t v27 = v260;
              }
              unint64_t v262 = (((unint64_t)v45 | 7) + v556) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v262 + 8) >= 0xFFFFFFFFuLL)
              {
                uint64_t v263 = v27;
                uint64_t v264 = v34;
                uint64_t v265 = v20;
                swift_bridgeObjectRelease();

                uint64_t v53 = v558;
                uint64_t v51 = v559;
                int v31 = v141;
                uint64_t v23 = v560;
                uint64_t v21 = v561;
                uint64_t v30 = v562;
                uint64_t v20 = v265;
                uint64_t v34 = v264;
                uint64_t v27 = v263;
              }
              goto LABEL_592;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v256 = v45[v26];
                if (v256 < 3) {
                  goto LABEL_459;
                }
                unsigned int v160 = v256 - 2;
              }
              else
              {
                uint64_t v158 = v27;
                uint64_t v159 = v20;
                unsigned int v160 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v568 + 48))(v45, v34, v567);
                uint64_t v53 = v558;
                uint64_t v51 = v559;
                int v31 = v141;
                uint64_t v23 = v560;
                uint64_t v21 = v561;
                uint64_t v30 = v562;
                uint64_t v20 = v159;
                uint64_t v27 = v158;
              }
              if (v160) {
                goto LABEL_592;
              }
LABEL_459:
              uint64_t v154 = *(void (**)(void))(v568 + 8);
              uint64_t v151 = v27;
LABEL_460:
              uint64_t v152 = v20;
LABEL_461:
              v154();
LABEL_462:
              uint64_t v53 = v558;
              uint64_t v51 = v559;
              int v31 = v141;
              uint64_t v23 = v560;
              uint64_t v21 = v561;
              uint64_t v30 = v562;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
LABEL_592:
              if (v37 > 3) {
                goto LABEL_593;
              }
              unsigned int v363 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v363 > 0xFFF5)
              {
                unsigned int v362 = *(_DWORD *)((char *)v46 + v37);
              }
              else if (v363 <= 0xF5)
              {
LABEL_593:
                unsigned int v362 = *((unsigned __int8 *)v46 + v37);
              }
              else
              {
                unsigned int v362 = *(unsigned __int16 *)((char *)v46 + v37);
              }
              unsigned int v364 = v362 - 10;
              int v38 = v585;
              if (v362 >= 0xA)
              {
                if (v37 <= 3) {
                  uint64_t v365 = v37;
                }
                else {
                  uint64_t v365 = 4;
                }
                switch(v365)
                {
                  case 1:
                    int v366 = *(unsigned __int8 *)v46;
                    goto LABEL_607;
                  case 2:
                    int v366 = *v46;
                    goto LABEL_607;
                  case 3:
                    int v366 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_607;
                  case 4:
                    int v366 = *(_DWORD *)v46;
LABEL_607:
                    if (v37 < 4) {
                      unsigned int v362 = (v366 | (v364 << (8 * v37))) + 10;
                    }
                    else {
                      unsigned int v362 = v366 + 10;
                    }
                    break;
                  default:
                    goto LABEL_610;
                }
              }
              break;
            case 9u:
              uint64_t v154 = *(void (**)(void))(v23 + 8);
              uint64_t v151 = v27;
              goto LABEL_460;
            default:
              goto LABEL_592;
          }
LABEL_610:
          switch(v362)
          {
            case 0u:
              unsigned int v367 = *((unsigned __int8 *)v46 + v27);
              unsigned int v368 = v367 - 10;
              if (v367 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v369 = v27;
                }
                else {
                  uint64_t v369 = 4;
                }
                switch(v369)
                {
                  case 1:
                    int v370 = *(unsigned __int8 *)v46;
                    goto LABEL_689;
                  case 2:
                    int v370 = *v46;
                    goto LABEL_689;
                  case 3:
                    int v370 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_689;
                  case 4:
                    int v370 = *(_DWORD *)v46;
LABEL_689:
                    if (v27 < 4) {
                      unsigned int v367 = (v370 | (v368 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v367 = v370 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v367)
              {
                case 1u:
                  v416 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v417 = 1;
                  goto LABEL_718;
                case 2u:
                  uint64_t v418 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v418;
                  v45[v418] = 2;
                  break;
                case 3u:
                  uint64_t v419 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v419;
                  v45[v419] = 3;
                  break;
                case 4u:
                  uint64_t v420 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v420;
                  v45[v420] = 4;
                  break;
                case 5u:
                  uint64_t v421 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v421;
                  v45[v421] = 5;
                  break;
                case 6u:
                  uint64_t v430 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v430;
                  v45[v430] = 6;
                  break;
                case 7u:
                  long long v422 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v422;
                  v45[v27] = 7;
                  break;
                case 8u:
                  v416 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v417 = 8;
                  goto LABEL_718;
                case 9u:
                  v416 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v417 = 9;
LABEL_718:
                  v45[v27] = v417;
                  uint64_t v431 = v27;
                  id v432 = v416;
                  uint64_t v27 = v431;
                  break;
                default:
                  *unint64_t v45 = *(unsigned char *)v46;
                  v45[v27] = 0;
                  break;
              }
              unint64_t v433 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v434 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v434 + 8) < 0xFFFFFFFFuLL)
              {
                long long v444 = *(_OWORD *)v434;
                long long v445 = *(_OWORD *)(v434 + 16);
                long long v446 = *(_OWORD *)(v434 + 48);
                *(_OWORD *)(v433 + 32) = *(_OWORD *)(v434 + 32);
                *(_OWORD *)(v433 + 48) = v446;
                *(_OWORD *)unint64_t v433 = v444;
                *(_OWORD *)(v433 + 16) = v445;
                long long v447 = *(_OWORD *)(v434 + 64);
                long long v448 = *(_OWORD *)(v434 + 80);
                long long v449 = *(_OWORD *)(v434 + 96);
                *(_OWORD *)(v433 + 106) = *(_OWORD *)(v434 + 106);
                *(_OWORD *)(v433 + 80) = v448;
                *(_OWORD *)(v433 + 96) = v449;
                *(_OWORD *)(v433 + 64) = v447;
              }
              else
              {
                *(void *)unint64_t v433 = *(void *)v434;
                *(void *)(v433 + 8) = *(void *)(v434 + 8);
                v435 = *(void **)(v434 + 16);
                uint64_t v436 = *(void *)(v434 + 24);
                uint64_t v437 = *(void *)(v434 + 32);
                uint64_t v438 = *(void *)(v434 + 40);
                uint64_t v439 = *(void *)(v434 + 48);
                uint64_t v573 = *(void *)(v434 + 56);
                unsigned __int8 v581 = *(unsigned char *)(v434 + 64);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B90CC148(v435, v436, v437, v438, v439, v573, v581);
                *(void *)(v433 + 16) = v435;
                *(void *)(v433 + 24) = v436;
                *(void *)(v433 + 32) = v437;
                *(void *)(v433 + 40) = v438;
                *(void *)(v433 + 48) = v439;
                *(void *)(v433 + 56) = v573;
                *(unsigned char *)(v433 + 64) = v581;
                *(unsigned char *)(v433 + 65) = *(unsigned char *)(v434 + 65);
                *(unsigned char *)(v433 + 66) = *(unsigned char *)(v434 + 66);
                *(unsigned char *)(v433 + 67) = *(unsigned char *)(v434 + 67);
                *(unsigned char *)(v433 + 68) = *(unsigned char *)(v434 + 68);
                int v440 = *(unsigned __int8 *)(v434 + 120);
                if (v440 == 255)
                {
                  long long v441 = *(_OWORD *)(v434 + 72);
                  long long v442 = *(_OWORD *)(v434 + 88);
                  long long v443 = *(_OWORD *)(v434 + 104);
                  *(unsigned char *)(v433 + 120) = *(unsigned char *)(v434 + 120);
                  *(_OWORD *)(v433 + 88) = v442;
                  *(_OWORD *)(v433 + 104) = v443;
                  *(_OWORD *)(v433 + 72) = v441;
                }
                else
                {
                  char v582 = v440 & 1;
                  v450 = *(void **)(v434 + 72);
                  uint64_t v451 = *(void *)(v434 + 80);
                  uint64_t v452 = *(void *)(v434 + 88);
                  uint64_t v453 = *(void *)(v434 + 96);
                  uint64_t v454 = *(void *)(v434 + 112);
                  uint64_t v574 = *(void *)(v434 + 104);
                  sub_1B90BFEB8(v450, v451, v452, v453, v574, v454, v440 & 1);
                  *(void *)(v433 + 72) = v450;
                  *(void *)(v433 + 80) = v451;
                  *(void *)(v433 + 88) = v452;
                  *(void *)(v433 + 96) = v453;
                  *(void *)(v433 + 104) = v574;
                  *(void *)(v433 + 112) = v454;
                  *(unsigned char *)(v433 + 120) = v582;
                }
                int v38 = v585;
                *(unsigned char *)(v433 + 121) = *(unsigned char *)(v434 + 121);
              }
              *(unsigned char *)(v433 + 122) = *(unsigned char *)(v434 + 122);
              *(unsigned char *)(v433 + 123) = *(unsigned char *)(v434 + 123);
              *(unsigned char *)(v433 + 124) = *(unsigned char *)(v434 + 124);
              *(unsigned char *)(v433 + 125) = *(unsigned char *)(v434 + 125);
              *(unsigned char *)(v433 + 126) = *(unsigned char *)(v434 + 126);
              v455 = *(void **)((v434 + 134) & 0xFFFFFFFFFFFFFFF8);
              *(void *)((v433 + 134) & 0xFFFFFFFFFFFFFFF8) = v455;
              id v456 = v455;
              if (v37 > 3) {
                goto LABEL_726;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 0;
              }
              else
              {
                if (v403 <= 0xF5)
                {
LABEL_726:
                  v45[v37] = 0;
                  break;
                }
                *(_WORD *)&v45[v37] = 0;
              }
              goto LABEL_859;
            case 1u:
              unsigned int v371 = *((unsigned __int8 *)v46 + v27);
              unsigned int v372 = v371 - 10;
              if (v371 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v373 = v27;
                }
                else {
                  uint64_t v373 = 4;
                }
                switch(v373)
                {
                  case 1:
                    int v374 = *(unsigned __int8 *)v46;
                    goto LABEL_697;
                  case 2:
                    int v374 = *v46;
                    goto LABEL_697;
                  case 3:
                    int v374 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_697;
                  case 4:
                    int v374 = *(_DWORD *)v46;
LABEL_697:
                    if (v27 < 4) {
                      unsigned int v371 = (v374 | (v372 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v371 = v374 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v371)
              {
                case 1u:
                  v423 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v424 = 1;
                  goto LABEL_733;
                case 2u:
                  uint64_t v425 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v425;
                  v45[v425] = 2;
                  break;
                case 3u:
                  uint64_t v426 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v426;
                  v45[v426] = 3;
                  break;
                case 4u:
                  uint64_t v427 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v427;
                  v45[v427] = 4;
                  break;
                case 5u:
                  uint64_t v428 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v428;
                  v45[v428] = 5;
                  break;
                case 6u:
                  uint64_t v457 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v27 = v457;
                  v45[v457] = 6;
                  break;
                case 7u:
                  long long v429 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v429;
                  v45[v27] = 7;
                  break;
                case 8u:
                  v423 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v424 = 8;
                  goto LABEL_733;
                case 9u:
                  v423 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v424 = 9;
LABEL_733:
                  v45[v27] = v424;
                  uint64_t v458 = v27;
                  id v459 = v423;
                  uint64_t v27 = v458;
                  break;
                default:
                  *unint64_t v45 = *(unsigned char *)v46;
                  v45[v27] = 0;
                  break;
              }
              unint64_t v460 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v461 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v461 + 8) < 0xFFFFFFFFuLL)
              {
                long long v471 = *(_OWORD *)v461;
                long long v472 = *(_OWORD *)(v461 + 16);
                long long v473 = *(_OWORD *)(v461 + 48);
                *(_OWORD *)(v460 + 32) = *(_OWORD *)(v461 + 32);
                *(_OWORD *)(v460 + 48) = v473;
                *(_OWORD *)unint64_t v460 = v471;
                *(_OWORD *)(v460 + 16) = v472;
                long long v474 = *(_OWORD *)(v461 + 64);
                long long v475 = *(_OWORD *)(v461 + 80);
                long long v476 = *(_OWORD *)(v461 + 96);
                *(_OWORD *)(v460 + 106) = *(_OWORD *)(v461 + 106);
                *(_OWORD *)(v460 + 80) = v475;
                *(_OWORD *)(v460 + 96) = v476;
                *(_OWORD *)(v460 + 64) = v474;
              }
              else
              {
                *(void *)unint64_t v460 = *(void *)v461;
                *(void *)(v460 + 8) = *(void *)(v461 + 8);
                v462 = *(void **)(v461 + 16);
                uint64_t v463 = *(void *)(v461 + 24);
                uint64_t v464 = *(void *)(v461 + 32);
                uint64_t v465 = *(void *)(v461 + 40);
                uint64_t v466 = *(void *)(v461 + 48);
                uint64_t v575 = *(void *)(v461 + 56);
                unsigned __int8 v583 = *(unsigned char *)(v461 + 64);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B90CC148(v462, v463, v464, v465, v466, v575, v583);
                *(void *)(v460 + 16) = v462;
                *(void *)(v460 + 24) = v463;
                *(void *)(v460 + 32) = v464;
                *(void *)(v460 + 40) = v465;
                *(void *)(v460 + 48) = v466;
                *(void *)(v460 + 56) = v575;
                *(unsigned char *)(v460 + 64) = v583;
                *(unsigned char *)(v460 + 65) = *(unsigned char *)(v461 + 65);
                *(unsigned char *)(v460 + 66) = *(unsigned char *)(v461 + 66);
                *(unsigned char *)(v460 + 67) = *(unsigned char *)(v461 + 67);
                *(unsigned char *)(v460 + 68) = *(unsigned char *)(v461 + 68);
                int v467 = *(unsigned __int8 *)(v461 + 120);
                if (v467 == 255)
                {
                  long long v468 = *(_OWORD *)(v461 + 72);
                  long long v469 = *(_OWORD *)(v461 + 88);
                  long long v470 = *(_OWORD *)(v461 + 104);
                  *(unsigned char *)(v460 + 120) = *(unsigned char *)(v461 + 120);
                  *(_OWORD *)(v460 + 88) = v469;
                  *(_OWORD *)(v460 + 104) = v470;
                  *(_OWORD *)(v460 + 72) = v468;
                }
                else
                {
                  char v584 = v467 & 1;
                  v477 = *(void **)(v461 + 72);
                  uint64_t v478 = *(void *)(v461 + 80);
                  uint64_t v479 = *(void *)(v461 + 88);
                  uint64_t v480 = *(void *)(v461 + 96);
                  uint64_t v481 = *(void *)(v461 + 112);
                  uint64_t v576 = *(void *)(v461 + 104);
                  sub_1B90BFEB8(v477, v478, v479, v480, v576, v481, v467 & 1);
                  *(void *)(v460 + 72) = v477;
                  *(void *)(v460 + 80) = v478;
                  *(void *)(v460 + 88) = v479;
                  *(void *)(v460 + 96) = v480;
                  *(void *)(v460 + 104) = v576;
                  *(void *)(v460 + 112) = v481;
                  *(unsigned char *)(v460 + 120) = v584;
                }
                int v38 = v585;
                *(unsigned char *)(v460 + 121) = *(unsigned char *)(v461 + 121);
              }
              *(unsigned char *)(v460 + 122) = *(unsigned char *)(v461 + 122);
              *(unsigned char *)(v460 + 123) = *(unsigned char *)(v461 + 123);
              *(unsigned char *)(v460 + 124) = *(unsigned char *)(v461 + 124);
              *(unsigned char *)(v460 + 125) = *(unsigned char *)(v461 + 125);
              *(unsigned char *)(v460 + 126) = *(unsigned char *)(v461 + 126);
              v482 = *(void **)((v461 + 134) & 0xFFFFFFFFFFFFFFF8);
              *(void *)((v460 + 134) & 0xFFFFFFFFFFFFFFF8) = v482;
              id v483 = v482;
              if (v37 > 3) {
                goto LABEL_741;
              }
              int v415 = 1;
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5) {
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_741:
                char v395 = 1;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 1;
              goto LABEL_859;
            case 2u:
              v375 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              v376 = (char *)((unint64_t)&v45[v30] & v51);
              v377 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              uint64_t v378 = v27;
              int v379 = v377[v27];
              id v380 = v375;
              switch(v379)
              {
                case 0:
                  char *v376 = *v377;
                  v376[v378] = 0;
                  break;
                case 1:
                  v515 = *(void **)v377;
                  *(void *)v376 = *(void *)v377;
                  char v516 = 1;
                  goto LABEL_813;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v376, v377, v567);
                  v376[v378] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v376, v377, v567);
                  v376[v378] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v376, v377, v567);
                  v376[v378] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v376, v377, v567);
                  v376[v378] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v376, v377, v567);
                  v376[v378] = 6;
                  break;
                case 7:
                  long long v517 = *(_OWORD *)v377;
                  *(_OWORD *)(v376 + 9) = *(_OWORD *)(v377 + 9);
                  *(_OWORD *)v376 = v517;
                  v376[v378] = 7;
                  break;
                case 8:
                  v515 = *(void **)v377;
                  *(void *)v376 = *(void *)v377;
                  char v516 = 8;
                  goto LABEL_813;
                case 9:
                  v515 = *(void **)v377;
                  *(void *)v376 = *(void *)v377;
                  char v516 = 9;
LABEL_813:
                  v376[v378] = v516;
                  id v518 = v515;
                  break;
                default:
                  memcpy(v376, v377, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_815;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 2;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_815:
                char v395 = 2;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 2;
              goto LABEL_859;
            case 3u:
              v381 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              v382 = (char *)((unint64_t)&v45[v30] & v51);
              v383 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              uint64_t v384 = v27;
              int v385 = v383[v27];
              id v386 = v381;
              switch(v385)
              {
                case 0:
                  char *v382 = *v383;
                  v382[v384] = 0;
                  break;
                case 1:
                  v519 = *(void **)v383;
                  *(void *)v382 = *(void *)v383;
                  char v520 = 1;
                  goto LABEL_829;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v382, v383, v567);
                  v382[v384] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v382, v383, v567);
                  v382[v384] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v382, v383, v567);
                  v382[v384] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v382, v383, v567);
                  v382[v384] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v382, v383, v567);
                  v382[v384] = 6;
                  break;
                case 7:
                  long long v521 = *(_OWORD *)v383;
                  *(_OWORD *)(v382 + 9) = *(_OWORD *)(v383 + 9);
                  *(_OWORD *)v382 = v521;
                  v382[v384] = 7;
                  break;
                case 8:
                  v519 = *(void **)v383;
                  *(void *)v382 = *(void *)v383;
                  char v520 = 8;
                  goto LABEL_829;
                case 9:
                  v519 = *(void **)v383;
                  *(void *)v382 = *(void *)v383;
                  char v520 = 9;
LABEL_829:
                  v382[v384] = v520;
                  id v522 = v519;
                  break;
                default:
                  memcpy(v382, v383, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_831;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 3;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_831:
                char v395 = 3;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 3;
              goto LABEL_859;
            case 4u:
              v387 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              v388 = (char *)((unint64_t)&v45[v30] & v51);
              v389 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              uint64_t v390 = v27;
              int v391 = v389[v27];
              id v392 = v387;
              switch(v391)
              {
                case 0:
                  char *v388 = *v389;
                  v388[v390] = 0;
                  break;
                case 1:
                  v523 = *(void **)v389;
                  *(void *)v388 = *(void *)v389;
                  char v524 = 1;
                  goto LABEL_845;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v388, v389, v567);
                  v388[v390] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v388, v389, v567);
                  v388[v390] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v388, v389, v567);
                  v388[v390] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v388, v389, v567);
                  v388[v390] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v388, v389, v567);
                  v388[v390] = 6;
                  break;
                case 7:
                  long long v525 = *(_OWORD *)v389;
                  *(_OWORD *)(v388 + 9) = *(_OWORD *)(v389 + 9);
                  *(_OWORD *)v388 = v525;
                  v388[v390] = 7;
                  break;
                case 8:
                  v523 = *(void **)v389;
                  *(void *)v388 = *(void *)v389;
                  char v524 = 8;
                  goto LABEL_845;
                case 9:
                  v523 = *(void **)v389;
                  *(void *)v388 = *(void *)v389;
                  char v524 = 9;
LABEL_845:
                  v388[v390] = v524;
                  id v526 = v523;
                  break;
                default:
                  memcpy(v388, v389, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_847;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 4;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_847:
                char v395 = 4;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 4;
              goto LABEL_859;
            case 5u:
              *(void *)unint64_t v45 = *(void *)v46;
              v45[8] = *((unsigned char *)v46 + 8);
              v45[9] = *((unsigned char *)v46 + 9);
              v45[10] = *((unsigned char *)v46 + 10);
              v393 = (void *)*((void *)v46 + 2);
              *((void *)v45 + 2) = v393;
              id v394 = v393;
              if (v37 > 3) {
                goto LABEL_630;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 5;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_630:
                char v395 = 5;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 5;
              goto LABEL_859;
            case 6u:
              v401 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              id v402 = v401;
              if (v37 > 3) {
                goto LABEL_646;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 6;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_646:
                char v395 = 6;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 6;
              goto LABEL_859;
            case 7u:
              if (v31 < 0)
              {
                uint64_t v396 = v564;
                uint64_t v406 = v20;
                int v398 = (*(uint64_t (**)(unint64_t))(v565 + 48))(((unint64_t)v46 + v564) & v578);
                uint64_t v20 = v406;
              }
              else
              {
                uint64_t v396 = v564;
                uint64_t v397 = *(void *)v46;
                if (*(void *)v46 >= 0xFFFFFFFFuLL) {
                  LODWORD(v397) = -1;
                }
                int v398 = v397 + 1;
              }
              size_t v407 = v556;
              if (v398)
              {
                memcpy(v45, v46, v556);
              }
              else
              {
                *(void *)unint64_t v45 = *(void *)v46;
                uint64_t v408 = (unint64_t)&v45[v20 + 8] & v578;
                v409 = *(void (**)(uint64_t, unint64_t, uint64_t))(v565 + 16);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                v409(v408, ((unint64_t)v46 + v396) & v578, v566);
                size_t v407 = v556;
              }
              unint64_t v410 = (((unint64_t)v45 | 7) + v407) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v411 = (((unint64_t)v46 | 7) + v407) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v411 + 8) < 0xFFFFFFFFuLL)
              {
                long long v414 = *(_OWORD *)v411;
                *(void *)(v410 + 16) = *(void *)(v411 + 16);
                *(_OWORD *)unint64_t v410 = v414;
              }
              else
              {
                *(void *)unint64_t v410 = *(void *)v411;
                *(void *)(v410 + 8) = *(void *)(v411 + 8);
                v412 = *(void **)(v411 + 16);
                *(void *)(v410 + 16) = v412;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                id v413 = v412;
              }
              if (v37 > 3) {
                goto LABEL_675;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 7;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_675:
                char v395 = 7;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 7;
              goto LABEL_859;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v405 = *((unsigned __int8 *)v46 + v26);
                if (v405 < 3) {
                  goto LABEL_662;
                }
                unsigned int v404 = v405 - 2;
              }
              else
              {
                unsigned int v404 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v568 + 48))(v46, v34, v567);
              }
              if (v404)
              {
                memcpy(v45, v46, v563);
                goto LABEL_663;
              }
LABEL_662:
              (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
              v45[v26] = *((unsigned char *)v46 + v26);
LABEL_663:
              *(void *)((((unint64_t)v45 | 7) + v563) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7) + v563) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_666;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 8;
                goto LABEL_858;
              }
              if (v403 <= 0xF5)
              {
LABEL_666:
                char v395 = 8;
                goto LABEL_848;
              }
              *(_WORD *)&v45[v37] = 8;
              goto LABEL_859;
            case 9u:
              *unint64_t v45 = *(unsigned char *)v46;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))((unint64_t)&v45[v35] & v53, ((unint64_t)v46 + v35) & v53, v21);
              if (v37 > 3) {
                goto LABEL_636;
              }
              unsigned int v403 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v403 > 0xFFF5)
              {
                int v415 = 9;
LABEL_858:
                *(_DWORD *)&v45[v37] = v415;
                goto LABEL_859;
              }
              if (v403 > 0xF5)
              {
                *(_WORD *)&v45[v37] = 9;
LABEL_859:
                BOOL v498 = v403 > 0xFFF5;
                uint64_t v528 = 2;
                if (v498) {
                  uint64_t v528 = 4;
                }
                goto LABEL_861;
              }
LABEL_636:
              char v395 = 9;
LABEL_848:
              v45[v37] = v395;
              break;
            default:
              if (v37 > 3) {
                goto LABEL_641;
              }
              unsigned int v399 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              uint64_t v400 = 2;
              if (v399 > 0xFFF5) {
                uint64_t v400 = 4;
              }
              if (v399 <= 0xF5) {
LABEL_641:
              }
                uint64_t v400 = 1;
              memcpy(v45, v46, v400 + v37);
              break;
          }
LABEL_849:
          if (v37 > 3) {
            goto LABEL_853;
          }
          unsigned int v527 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          uint64_t v528 = 2;
          if (v527 > 0xFFF5) {
            uint64_t v528 = 4;
          }
          if (v527 <= 0xF5) {
LABEL_853:
          }
            uint64_t v528 = 1;
LABEL_861:
          uint64_t v529 = v528 + v37;
          unint64_t v530 = (unint64_t)&v45[v529];
          unint64_t v531 = (unint64_t)v46 + v529;
          *(unsigned char *)unint64_t v530 = *(unsigned char *)v531;
          unint64_t v532 = v530 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v533 = v531 & 0xFFFFFFFFFFFFFFF8;
          v534 = *(void **)((v531 & 0xFFFFFFFFFFFFFFF8) + 8);
          v535 = *(void **)((v530 & 0xFFFFFFFFFFFFFFF8) + 8);
          *(void *)((v530 & 0xFFFFFFFFFFFFFFF8) + 8) = v534;
          id v536 = v534;

          unint64_t v537 = (v532 + 23) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v538 = (v533 + 23) & 0xFFFFFFFFFFFFFFF8;
          v539 = *(void **)v538;
          v540 = *(void **)v537;
          *(void *)unint64_t v537 = *(void *)v538;
          id v541 = v539;

          *(unsigned char *)(v537 + 8) = *(unsigned char *)(v538 + 8);
          unint64_t v542 = (v532 + 39) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v543 = (v533 + 39) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v544 = *(void *)v543;
          *(unsigned char *)(v542 + 8) = *(unsigned char *)(v543 + 8);
          *(void *)unint64_t v542 = v544;
          v545 = (void *)((v532 + 55) & 0xFFFFFFFFFFFFFFF8);
          v546 = (void *)((v533 + 55) & 0xFFFFFFFFFFFFFFF8);
          void *v545 = *v546;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          swift_bridgeObjectRelease();
          v547 = (void **)(((unint64_t)v545 + 15) & 0xFFFFFFFFFFFFFFF8);
          v548 = *(void **)(((unint64_t)v546 + 15) & 0xFFFFFFFFFFFFFFF8);
          v549 = *v547;
          *v547 = v548;
          id v550 = v548;

          if (v37 <= 3) {
            goto LABEL_862;
          }
          goto LABEL_865;
        }
LABEL_118:
        char v85 = 8;
        goto LABEL_119;
      }
      int v77 = v78 + 10;
      if (v78 > 0xF5)
      {
        char v79 = 16;
LABEL_108:
        unsigned int v80 = (1 << v79) - v77;
        unsigned int v81 = 0x7FFFFFFF;
        if (v80 <= 0x7FFFFFFF) {
          int v82 = 0x7FFFFFFF;
        }
        else {
          int v82 = v80;
        }
        if ((v80 & 0x80000000) == 0) {
          unsigned int v81 = v82;
        }
        if (v37 > 3) {
          goto LABEL_114;
        }
        goto LABEL_116;
      }
    }
    else
    {
      int v77 = 11;
    }
    char v79 = 8;
    goto LABEL_108;
  }
  if (v37 > 3)
  {
    int v54 = 11;
LABEL_53:
    char v55 = 8;
    goto LABEL_54;
  }
  unsigned int v60 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v60 > 0xFFF5) {
    goto LABEL_69;
  }
  int v54 = v60 + 10;
  if (v60 <= 0xF5) {
    goto LABEL_53;
  }
  char v55 = 16;
LABEL_54:
  unsigned int v56 = (1 << v55) - v54;
  if ((v56 & 0x80000000) == 0)
  {
    if (v37 > 3) {
      goto LABEL_73;
    }
    goto LABEL_70;
  }
LABEL_69:
  unsigned int v56 = 0x7FFFFFFF;
  if (v37 > 3)
  {
LABEL_73:
    uint64_t v62 = 1;
    goto LABEL_74;
  }
LABEL_70:
  unsigned int v61 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  uint64_t v62 = 2;
  if (v61 > 0xFFF5) {
    uint64_t v62 = 4;
  }
  if (v61 <= 0xF5) {
    goto LABEL_73;
  }
LABEL_74:
  unsigned int v63 = v42 - v56;
  if (v42 <= v56) {
    goto LABEL_91;
  }
  uint64_t v64 = v62 + v37;
  char v65 = 8 * (v62 + v37);
  if (v64 > 3)
  {
LABEL_76:
    int v66 = v45[v64];
    if (!v45[v64]) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  unsigned int v67 = ((v63 + ~(-1 << v65)) >> v65) + 1;
  if (HIWORD(v67))
  {
    int v66 = *(_DWORD *)&v45[v64];
    if (!v66) {
      goto LABEL_91;
    }
LABEL_83:
    int v68 = (v66 - 1) << v65;
    if (v64 > 3) {
      int v68 = 0;
    }
    if (v64)
    {
      if (v64 > 3) {
        LODWORD(v64) = 4;
      }
      switch((int)v64)
      {
        case 2:
          LODWORD(v64) = *(unsigned __int16 *)v45;
          break;
        case 3:
          LODWORD(v64) = *(unsigned __int16 *)v45 | (v45[2] << 16);
          break;
        case 4:
          LODWORD(v64) = *(_DWORD *)v45;
          break;
        default:
          LODWORD(v64) = *v45;
          break;
      }
    }
    if (v56 + (v64 | v68) != -1) {
      goto LABEL_168;
    }
    goto LABEL_103;
  }
  if (v67 > 0xFF)
  {
    int v66 = *(unsigned __int16 *)&v45[v64];
    if (!*(_WORD *)&v45[v64]) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  if (v67 >= 2) {
    goto LABEL_76;
  }
LABEL_91:
  if (!v56) {
    goto LABEL_103;
  }
  if (v37 <= 3)
  {
    unsigned int v75 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    if (v75 > 0xFFF5)
    {
      unsigned int v70 = *(_DWORD *)&v45[v37];
      unsigned int v71 = ~v70;
      goto LABEL_101;
    }
    int v73 = v75 + 10;
    if (v75 > 0xF5)
    {
      int v102 = *(unsigned __int16 *)&v45[v37];
      unsigned int v70 = v102 | 0xFFFF0000;
      unsigned int v71 = v102 ^ 0xFFFF;
      char v72 = 16;
    }
    else
    {
      int v76 = v45[v37];
      unsigned int v70 = v76 | 0xFFFFFF00;
      unsigned int v71 = v76 ^ 0xFF;
      char v72 = 8;
    }
  }
  else
  {
    int v69 = v45[v37];
    unsigned int v70 = v69 | 0xFFFFFF00;
    unsigned int v71 = v69 ^ 0xFF;
    char v72 = 8;
    int v73 = 11;
  }
  unsigned int v74 = (1 << v72) - v73;
  if ((v74 & 0x80000000) == 0)
  {
    if (v74 <= v71) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_101:
  if (v71 >= 0x7FFFFFFF) {
    goto LABEL_103;
  }
LABEL_102:
  if (!v70) {
    goto LABEL_103;
  }
LABEL_168:
  if (v37 > 3)
  {
    int v103 = 11;
    goto LABEL_172;
  }
  unsigned int v104 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v104 <= 0xFFF5)
  {
    int v103 = v104 + 10;
    if (v104 > 0xF5)
    {
      char v105 = 16;
LABEL_173:
      unsigned int v106 = (1 << v105) - v103;
      unsigned int v107 = 0x7FFFFFFF;
      if (v106 <= 0x7FFFFFFF) {
        int v108 = 0x7FFFFFFF;
      }
      else {
        int v108 = v106;
      }
      if ((v106 & 0x80000000) == 0) {
        unsigned int v107 = v108;
      }
      if (v37 > 3) {
        goto LABEL_179;
      }
      goto LABEL_181;
    }
LABEL_172:
    char v105 = 8;
    goto LABEL_173;
  }
  unsigned int v107 = 0x7FFFFFFF;
  if (v37 > 3)
  {
LABEL_179:
    int v109 = 11;
LABEL_183:
    char v111 = 8;
    goto LABEL_184;
  }
LABEL_181:
  unsigned int v110 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v110 > 0xFFF5) {
    goto LABEL_188;
  }
  int v109 = v110 + 10;
  if (v110 <= 0xF5) {
    goto LABEL_183;
  }
  char v111 = 16;
LABEL_184:
  int v112 = (1 << v111) - v109;
  if ((v112 & 0x80000000) == 0)
  {
    if (v112 == v107) {
      goto LABEL_186;
    }
LABEL_189:
    if (v37 > 3) {
      goto LABEL_193;
    }
    unsigned int v114 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v115 = 2;
    if (v114 > 0xFFF5) {
      uint64_t v115 = 4;
    }
    if (v114 <= 0xF5) {
LABEL_193:
    }
      uint64_t v115 = 1;
    unint64_t v116 = *(void *)((((unint64_t)v46 + v37 + v115) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v116 >= 0xFFFFFFFF) {
      LODWORD(v116) = -1;
    }
    if (v116 == -1) {
      goto LABEL_300;
    }
    goto LABEL_435;
  }
LABEL_188:
  if (v107 != 0x7FFFFFFF) {
    goto LABEL_189;
  }
LABEL_186:
  if (v37 > 3)
  {
    int v113 = 11;
LABEL_200:
    char v118 = 8;
    goto LABEL_201;
  }
  unsigned int v117 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v117 > 0xFFF5) {
    goto LABEL_204;
  }
  int v113 = v117 + 10;
  if (v117 <= 0xF5) {
    goto LABEL_200;
  }
  char v118 = 16;
LABEL_201:
  unsigned int v119 = (1 << v118) - v113;
  if ((v119 & 0x80000000) == 0)
  {
    if (v37 > 3) {
      goto LABEL_208;
    }
LABEL_205:
    unsigned int v120 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v121 = 2;
    if (v120 > 0xFFF5) {
      uint64_t v121 = 4;
    }
    if (v120 > 0xF5) {
      goto LABEL_209;
    }
    goto LABEL_208;
  }
LABEL_204:
  unsigned int v119 = 0x7FFFFFFF;
  if (v37 <= 3) {
    goto LABEL_205;
  }
LABEL_208:
  uint64_t v121 = 1;
LABEL_209:
  unsigned int v122 = v107 - v119;
  if (v107 <= v119) {
    goto LABEL_288;
  }
  uint64_t v123 = v121 + v37;
  char v124 = 8 * (v121 + v37);
  if (v123 > 3) {
    goto LABEL_211;
  }
  unsigned int v126 = ((v122 + ~(-1 << v124)) >> v124) + 1;
  if (HIWORD(v126))
  {
    int v125 = *(_DWORD *)((char *)v46 + v123);
    if (!v125) {
      goto LABEL_288;
    }
    goto LABEL_221;
  }
  if (v126 > 0xFF)
  {
    int v125 = *(unsigned __int16 *)((char *)v46 + v123);
    if (!*(unsigned __int16 *)((char *)v46 + v123)) {
      goto LABEL_288;
    }
    goto LABEL_221;
  }
  if (v126 >= 2)
  {
LABEL_211:
    int v125 = *((unsigned __int8 *)v46 + v123);
    if (!*((unsigned char *)v46 + v123)) {
      goto LABEL_288;
    }
LABEL_221:
    int v127 = (v125 - 1) << v124;
    if (v123 > 3) {
      int v127 = 0;
    }
    if (v123)
    {
      if (v123 > 3) {
        LODWORD(v123) = 4;
      }
      switch((int)v123)
      {
        case 2:
          LODWORD(v123) = *v46;
          break;
        case 3:
          LODWORD(v123) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          break;
        case 4:
          LODWORD(v123) = *(_DWORD *)v46;
          break;
        default:
          LODWORD(v123) = *(unsigned __int8 *)v46;
          break;
      }
    }
    if (v119 + (v123 | v127) == -1) {
      goto LABEL_300;
    }
    goto LABEL_435;
  }
LABEL_288:
  if (!v119) {
    goto LABEL_300;
  }
  if (v37 <= 3)
  {
    unsigned int v167 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    if (v167 > 0xFFF5)
    {
      unsigned int v162 = *(_DWORD *)((char *)v46 + v37);
      unsigned int v163 = ~v162;
LABEL_298:
      if (v163 < 0x7FFFFFFF) {
        goto LABEL_299;
      }
      if (v37 > 3) {
        goto LABEL_303;
      }
LABEL_300:
      unsigned int v169 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v169 > 0xFFF5)
      {
        unsigned int v170 = *(_DWORD *)((char *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA) {
          goto LABEL_320;
        }
        goto LABEL_308;
      }
      if (v169 > 0xF5)
      {
        unsigned int v170 = *(unsigned __int16 *)((char *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA)
        {
LABEL_320:
          switch(v170)
          {
            case 0u:
              unsigned int v174 = *((unsigned __int8 *)v46 + v27);
              unsigned int v175 = v174 - 10;
              if (v174 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v176 = v27;
                }
                else {
                  uint64_t v176 = 4;
                }
                switch(v176)
                {
                  case 1:
                    int v177 = *(unsigned __int8 *)v46;
                    goto LABEL_482;
                  case 2:
                    int v177 = *v46;
                    goto LABEL_482;
                  case 3:
                    int v177 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_482;
                  case 4:
                    int v177 = *(_DWORD *)v46;
LABEL_482:
                    if (v27 < 4) {
                      unsigned int v174 = (v177 | (v175 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v174 = v177 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v174)
              {
                case 1u:
                  long long v275 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v276 = 1;
                  goto LABEL_537;
                case 2u:
                  uint64_t v277 = v27 + 1;
                  uint64_t v278 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v277;
                  uint64_t v27 = v278;
                  v45[v278] = 2;
                  break;
                case 3u:
                  uint64_t v279 = v27 + 1;
                  uint64_t v280 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v279;
                  uint64_t v27 = v280;
                  v45[v280] = 3;
                  break;
                case 4u:
                  uint64_t v281 = v27 + 1;
                  uint64_t v282 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v281;
                  uint64_t v27 = v282;
                  v45[v282] = 4;
                  break;
                case 5u:
                  uint64_t v283 = v27 + 1;
                  uint64_t v284 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v283;
                  uint64_t v27 = v284;
                  v45[v284] = 5;
                  break;
                case 6u:
                  uint64_t v285 = v27 + 1;
                  uint64_t v286 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v285;
                  uint64_t v27 = v286;
                  v45[v286] = 6;
                  break;
                case 7u:
                  long long v287 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v287;
                  v45[v27] = 7;
                  break;
                case 8u:
                  long long v275 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v276 = 8;
                  goto LABEL_537;
                case 9u:
                  long long v275 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v276 = 9;
LABEL_537:
                  v45[v27] = v276;
                  uint64_t v288 = v27;
                  uint64_t v289 = v27 + 1;
                  id v290 = v275;
                  uint64_t v28 = v289;
                  uint64_t v27 = v288;
                  break;
                default:
                  *unint64_t v45 = *(unsigned char *)v46;
                  v45[v27] = 0;
                  break;
              }
              unint64_t v291 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v292 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v292 + 8) < 0xFFFFFFFFuLL)
              {
                long long v303 = *(_OWORD *)v292;
                long long v304 = *(_OWORD *)(v292 + 16);
                long long v305 = *(_OWORD *)(v292 + 48);
                *(_OWORD *)(v291 + 32) = *(_OWORD *)(v292 + 32);
                *(_OWORD *)(v291 + 48) = v305;
                *(_OWORD *)unint64_t v291 = v303;
                *(_OWORD *)(v291 + 16) = v304;
                long long v306 = *(_OWORD *)(v292 + 64);
                long long v307 = *(_OWORD *)(v292 + 80);
                long long v308 = *(_OWORD *)(v292 + 96);
                *(_OWORD *)(v291 + 106) = *(_OWORD *)(v292 + 106);
                *(_OWORD *)(v291 + 80) = v307;
                *(_OWORD *)(v291 + 96) = v308;
                *(_OWORD *)(v291 + 64) = v306;
              }
              else
              {
                v579 = v46;
                *(void *)unint64_t v291 = *(void *)v292;
                *(void *)(v291 + 8) = *(void *)(v292 + 8);
                long long v293 = *(void **)(v292 + 16);
                uint64_t v294 = *(void *)(v292 + 24);
                uint64_t v295 = *(void *)(v292 + 32);
                uint64_t v296 = *(void *)(v292 + 40);
                uint64_t v298 = *(void *)(v292 + 48);
                uint64_t v297 = *(void *)(v292 + 56);
                unsigned __int8 v569 = *(unsigned char *)(v292 + 64);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B90CC148(v293, v294, v295, v296, v298, v297, v569);
                *(void *)(v291 + 16) = v293;
                *(void *)(v291 + 24) = v294;
                *(void *)(v291 + 32) = v295;
                *(void *)(v291 + 40) = v296;
                *(void *)(v291 + 48) = v298;
                *(void *)(v291 + 56) = v297;
                *(unsigned char *)(v291 + 64) = v569;
                *(unsigned char *)(v291 + 65) = *(unsigned char *)(v292 + 65);
                *(unsigned char *)(v291 + 66) = *(unsigned char *)(v292 + 66);
                *(unsigned char *)(v291 + 67) = *(unsigned char *)(v292 + 67);
                *(unsigned char *)(v291 + 68) = *(unsigned char *)(v292 + 68);
                int v299 = *(unsigned __int8 *)(v292 + 120);
                if (v299 == 255)
                {
                  long long v300 = *(_OWORD *)(v292 + 72);
                  long long v301 = *(_OWORD *)(v292 + 88);
                  long long v302 = *(_OWORD *)(v292 + 104);
                  *(unsigned char *)(v291 + 120) = *(unsigned char *)(v292 + 120);
                  *(_OWORD *)(v291 + 88) = v301;
                  *(_OWORD *)(v291 + 104) = v302;
                  *(_OWORD *)(v291 + 72) = v300;
                }
                else
                {
                  char v570 = v299 & 1;
                  v309 = *(void **)(v292 + 72);
                  uint64_t v310 = *(void *)(v292 + 80);
                  uint64_t v311 = *(void *)(v292 + 88);
                  uint64_t v312 = *(void *)(v292 + 96);
                  uint64_t v313 = *(void *)(v292 + 104);
                  uint64_t v314 = *(void *)(v292 + 112);
                  sub_1B90BFEB8(v309, v310, v311, v312, v313, v314, v299 & 1);
                  *(void *)(v291 + 72) = v309;
                  *(void *)(v291 + 80) = v310;
                  *(void *)(v291 + 88) = v311;
                  *(void *)(v291 + 96) = v312;
                  *(void *)(v291 + 104) = v313;
                  *(void *)(v291 + 112) = v314;
                  *(unsigned char *)(v291 + 120) = v570;
                }
                unint64_t v46 = v579;
                int v38 = v585;
                *(unsigned char *)(v291 + 121) = *(unsigned char *)(v292 + 121);
              }
              *(unsigned char *)(v291 + 122) = *(unsigned char *)(v292 + 122);
              *(unsigned char *)(v291 + 123) = *(unsigned char *)(v292 + 123);
              *(unsigned char *)(v291 + 124) = *(unsigned char *)(v292 + 124);
              *(unsigned char *)(v291 + 125) = *(unsigned char *)(v292 + 125);
              *(unsigned char *)(v291 + 126) = *(unsigned char *)(v292 + 126);
              uint64_t v315 = *(void **)((v292 + 134) & 0xFFFFFFFFFFFFFFF8);
              *(void *)((v291 + 134) & 0xFFFFFFFFFFFFFFF8) = v315;
              id v316 = v315;
              if (v37 > 3) {
                goto LABEL_547;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 0;
              }
              else
              {
                if (v207 <= 0xF5)
                {
LABEL_547:
                  v45[v37] = 0;
                  goto LABEL_792;
                }
                *(_WORD *)&v45[v37] = 0;
              }
              goto LABEL_800;
            case 1u:
              unsigned int v180 = *((unsigned __int8 *)v46 + v27);
              unsigned int v181 = v180 - 10;
              if (v180 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v182 = v27;
                }
                else {
                  uint64_t v182 = 4;
                }
                switch(v182)
                {
                  case 1:
                    int v183 = *(unsigned __int8 *)v46;
                    goto LABEL_490;
                  case 2:
                    int v183 = *v46;
                    goto LABEL_490;
                  case 3:
                    int v183 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_490;
                  case 4:
                    int v183 = *(_DWORD *)v46;
LABEL_490:
                    if (v27 < 4) {
                      unsigned int v180 = (v183 | (v181 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v180 = v183 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v180)
              {
                case 1u:
                  uint64_t v317 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v318 = 1;
                  goto LABEL_559;
                case 2u:
                  uint64_t v319 = v27 + 1;
                  uint64_t v320 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v319;
                  uint64_t v27 = v320;
                  v45[v320] = 2;
                  break;
                case 3u:
                  uint64_t v321 = v27 + 1;
                  uint64_t v322 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v321;
                  uint64_t v27 = v322;
                  v45[v322] = 3;
                  break;
                case 4u:
                  uint64_t v323 = v27 + 1;
                  uint64_t v324 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v323;
                  uint64_t v27 = v324;
                  v45[v324] = 4;
                  break;
                case 5u:
                  uint64_t v325 = v27 + 1;
                  uint64_t v326 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v325;
                  uint64_t v27 = v326;
                  v45[v326] = 5;
                  break;
                case 6u:
                  uint64_t v327 = v27 + 1;
                  uint64_t v328 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
                  uint64_t v28 = v327;
                  uint64_t v27 = v328;
                  v45[v328] = 6;
                  break;
                case 7u:
                  long long v329 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v329;
                  v45[v27] = 7;
                  break;
                case 8u:
                  uint64_t v317 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v318 = 8;
                  goto LABEL_559;
                case 9u:
                  uint64_t v317 = *(void **)v46;
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v318 = 9;
LABEL_559:
                  v45[v27] = v318;
                  uint64_t v330 = v27;
                  uint64_t v331 = v27 + 1;
                  id v332 = v317;
                  uint64_t v28 = v331;
                  uint64_t v27 = v330;
                  break;
                default:
                  *unint64_t v45 = *(unsigned char *)v46;
                  v45[v27] = 0;
                  break;
              }
              unint64_t v333 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v334 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v334 + 8) < 0xFFFFFFFFuLL)
              {
                long long v345 = *(_OWORD *)v334;
                long long v346 = *(_OWORD *)(v334 + 16);
                long long v347 = *(_OWORD *)(v334 + 48);
                *(_OWORD *)(v333 + 32) = *(_OWORD *)(v334 + 32);
                *(_OWORD *)(v333 + 48) = v347;
                *(_OWORD *)unint64_t v333 = v345;
                *(_OWORD *)(v333 + 16) = v346;
                long long v348 = *(_OWORD *)(v334 + 64);
                long long v349 = *(_OWORD *)(v334 + 80);
                long long v350 = *(_OWORD *)(v334 + 96);
                *(_OWORD *)(v333 + 106) = *(_OWORD *)(v334 + 106);
                *(_OWORD *)(v333 + 80) = v349;
                *(_OWORD *)(v333 + 96) = v350;
                *(_OWORD *)(v333 + 64) = v348;
              }
              else
              {
                v580 = v46;
                *(void *)unint64_t v333 = *(void *)v334;
                *(void *)(v333 + 8) = *(void *)(v334 + 8);
                v335 = *(void **)(v334 + 16);
                uint64_t v336 = *(void *)(v334 + 24);
                uint64_t v337 = *(void *)(v334 + 32);
                uint64_t v338 = *(void *)(v334 + 40);
                uint64_t v340 = *(void *)(v334 + 48);
                uint64_t v339 = *(void *)(v334 + 56);
                unsigned __int8 v571 = *(unsigned char *)(v334 + 64);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B90CC148(v335, v336, v337, v338, v340, v339, v571);
                *(void *)(v333 + 16) = v335;
                *(void *)(v333 + 24) = v336;
                *(void *)(v333 + 32) = v337;
                *(void *)(v333 + 40) = v338;
                *(void *)(v333 + 48) = v340;
                *(void *)(v333 + 56) = v339;
                *(unsigned char *)(v333 + 64) = v571;
                *(unsigned char *)(v333 + 65) = *(unsigned char *)(v334 + 65);
                *(unsigned char *)(v333 + 66) = *(unsigned char *)(v334 + 66);
                *(unsigned char *)(v333 + 67) = *(unsigned char *)(v334 + 67);
                *(unsigned char *)(v333 + 68) = *(unsigned char *)(v334 + 68);
                int v341 = *(unsigned __int8 *)(v334 + 120);
                if (v341 == 255)
                {
                  long long v342 = *(_OWORD *)(v334 + 72);
                  long long v343 = *(_OWORD *)(v334 + 88);
                  long long v344 = *(_OWORD *)(v334 + 104);
                  *(unsigned char *)(v333 + 120) = *(unsigned char *)(v334 + 120);
                  *(_OWORD *)(v333 + 88) = v343;
                  *(_OWORD *)(v333 + 104) = v344;
                  *(_OWORD *)(v333 + 72) = v342;
                }
                else
                {
                  char v572 = v341 & 1;
                  v351 = *(void **)(v334 + 72);
                  uint64_t v352 = *(void *)(v334 + 80);
                  uint64_t v353 = *(void *)(v334 + 88);
                  uint64_t v354 = *(void *)(v334 + 96);
                  uint64_t v355 = *(void *)(v334 + 104);
                  uint64_t v356 = *(void *)(v334 + 112);
                  sub_1B90BFEB8(v351, v352, v353, v354, v355, v356, v341 & 1);
                  *(void *)(v333 + 72) = v351;
                  *(void *)(v333 + 80) = v352;
                  *(void *)(v333 + 88) = v353;
                  *(void *)(v333 + 96) = v354;
                  *(void *)(v333 + 104) = v355;
                  *(void *)(v333 + 112) = v356;
                  *(unsigned char *)(v333 + 120) = v572;
                }
                unint64_t v46 = v580;
                int v38 = v585;
                *(unsigned char *)(v333 + 121) = *(unsigned char *)(v334 + 121);
              }
              *(unsigned char *)(v333 + 122) = *(unsigned char *)(v334 + 122);
              *(unsigned char *)(v333 + 123) = *(unsigned char *)(v334 + 123);
              *(unsigned char *)(v333 + 124) = *(unsigned char *)(v334 + 124);
              *(unsigned char *)(v333 + 125) = *(unsigned char *)(v334 + 125);
              *(unsigned char *)(v333 + 126) = *(unsigned char *)(v334 + 126);
              v357 = *(void **)((v334 + 134) & 0xFFFFFFFFFFFFFFF8);
              *(void *)((v333 + 134) & 0xFFFFFFFFFFFFFFF8) = v357;
              id v358 = v357;
              if (v37 > 3) {
                goto LABEL_569;
              }
              __int16 v266 = 1;
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 1;
                goto LABEL_800;
              }
              if (v207 > 0xF5) {
                goto LABEL_799;
              }
LABEL_569:
              char v208 = 1;
              goto LABEL_791;
            case 2u:
              size_t v184 = v27 + 1;
              id v185 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              unint64_t v186 = (char *)((unint64_t)&v45[v30] & v51);
              unint64_t v187 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              int v188 = v187[v27];
              uint64_t v189 = v27;
              id v190 = v185;
              switch(v188)
              {
                case 0:
                  char *v186 = *v187;
                  v186[v189] = 0;
                  break;
                case 1:
                  v484 = *(void **)v187;
                  *(void *)unint64_t v186 = *(void *)v187;
                  char v485 = 1;
                  goto LABEL_754;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v186, v187, v567);
                  v186[v189] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v186, v187, v567);
                  v186[v189] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v186, v187, v567);
                  v186[v189] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v186, v187, v567);
                  v186[v189] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v186, v187, v567);
                  v186[v189] = 6;
                  break;
                case 7:
                  long long v486 = *(_OWORD *)v187;
                  *(_OWORD *)(v186 + 9) = *(_OWORD *)(v187 + 9);
                  *(_OWORD *)unint64_t v186 = v486;
                  v186[v189] = 7;
                  break;
                case 8:
                  v484 = *(void **)v187;
                  *(void *)unint64_t v186 = *(void *)v187;
                  char v485 = 8;
                  goto LABEL_754;
                case 9:
                  v484 = *(void **)v187;
                  *(void *)unint64_t v186 = *(void *)v187;
                  char v485 = 9;
LABEL_754:
                  v186[v189] = v485;
                  id v487 = v484;
                  break;
                default:
                  memcpy(v186, v187, v184);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_758;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 2;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_758:
                char v208 = 2;
                goto LABEL_791;
              }
              __int16 v266 = 2;
              goto LABEL_799;
            case 3u:
              size_t v191 = v27 + 1;
              uint64_t v192 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              int v193 = (char *)((unint64_t)&v45[v30] & v51);
              long long v194 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              int v195 = v194[v27];
              uint64_t v196 = v27;
              id v197 = v192;
              switch(v195)
              {
                case 0:
                  *int v193 = *v194;
                  v193[v196] = 0;
                  break;
                case 1:
                  v488 = *(void **)v194;
                  *(void *)int v193 = *(void *)v194;
                  char v489 = 1;
                  goto LABEL_770;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v193, v194, v567);
                  v193[v196] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v193, v194, v567);
                  v193[v196] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v193, v194, v567);
                  v193[v196] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v193, v194, v567);
                  v193[v196] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v193, v194, v567);
                  v193[v196] = 6;
                  break;
                case 7:
                  long long v490 = *(_OWORD *)v194;
                  *(_OWORD *)(v193 + 9) = *(_OWORD *)(v194 + 9);
                  *(_OWORD *)int v193 = v490;
                  v193[v196] = 7;
                  break;
                case 8:
                  v488 = *(void **)v194;
                  *(void *)int v193 = *(void *)v194;
                  char v489 = 8;
                  goto LABEL_770;
                case 9:
                  v488 = *(void **)v194;
                  *(void *)int v193 = *(void *)v194;
                  char v489 = 9;
LABEL_770:
                  v193[v196] = v489;
                  id v491 = v488;
                  break;
                default:
                  memcpy(v193, v194, v191);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_774;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 3;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_774:
                char v208 = 3;
                goto LABEL_791;
              }
              __int16 v266 = 3;
              goto LABEL_799;
            case 4u:
              size_t v198 = v27 + 1;
              long long v199 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              long long v200 = (char *)((unint64_t)&v45[v30] & v51);
              long long v201 = (unsigned __int8 *)(((unint64_t)v46 + v30) & v51);
              int v202 = v201[v27];
              uint64_t v203 = v27;
              id v204 = v199;
              switch(v202)
              {
                case 0:
                  *long long v200 = *v201;
                  v200[v203] = 0;
                  break;
                case 1:
                  v492 = *(void **)v201;
                  *(void *)long long v200 = *(void *)v201;
                  char v493 = 1;
                  goto LABEL_786;
                case 2:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v200, v201, v567);
                  v200[v203] = 2;
                  break;
                case 3:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v200, v201, v567);
                  v200[v203] = 3;
                  break;
                case 4:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v200, v201, v567);
                  v200[v203] = 4;
                  break;
                case 5:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v200, v201, v567);
                  v200[v203] = 5;
                  break;
                case 6:
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v568 + 16))(v200, v201, v567);
                  v200[v203] = 6;
                  break;
                case 7:
                  long long v494 = *(_OWORD *)v201;
                  *(_OWORD *)(v200 + 9) = *(_OWORD *)(v201 + 9);
                  *(_OWORD *)long long v200 = v494;
                  v200[v203] = 7;
                  break;
                case 8:
                  v492 = *(void **)v201;
                  *(void *)long long v200 = *(void *)v201;
                  char v493 = 8;
                  goto LABEL_786;
                case 9:
                  v492 = *(void **)v201;
                  *(void *)long long v200 = *(void *)v201;
                  char v493 = 9;
LABEL_786:
                  v200[v203] = v493;
                  id v495 = v492;
                  break;
                default:
                  memcpy(v200, v201, v198);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_790;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 4;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_790:
                char v208 = 4;
                goto LABEL_791;
              }
              __int16 v266 = 4;
              goto LABEL_799;
            case 5u:
              *(void *)unint64_t v45 = *(void *)v46;
              v45[8] = *((unsigned char *)v46 + 8);
              v45[9] = *((unsigned char *)v46 + 9);
              v45[10] = *((unsigned char *)v46 + 10);
              uint64_t v205 = (void *)*((void *)v46 + 2);
              *((void *)v45 + 2) = v205;
              id v206 = v205;
              if (v37 > 3) {
                goto LABEL_348;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 5;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_348:
                char v208 = 5;
                goto LABEL_791;
              }
              __int16 v266 = 5;
              goto LABEL_799;
            case 6u:
              id v209 = *(void **)v46;
              *(void *)unint64_t v45 = *(void *)v46;
              id v210 = v209;
              if (v37 > 3) {
                goto LABEL_352;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 6;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_352:
                char v208 = 6;
                goto LABEL_791;
              }
              __int16 v266 = 6;
              goto LABEL_799;
            case 7u:
              if (v31 < 0)
              {
                uint64_t v211 = v18 + 8;
                int v213 = (*(uint64_t (**)(unint64_t))(v565 + 48))(((unint64_t)v46 + v18 + 8) & v52);
                uint64_t v20 = v18;
              }
              else
              {
                uint64_t v211 = v18 + 8;
                uint64_t v212 = *(void *)v46;
                if (*(void *)v46 >= 0xFFFFFFFFuLL) {
                  LODWORD(v212) = -1;
                }
                int v213 = v212 + 1;
              }
              if (v213)
              {
                memcpy(v45, v46, v33);
              }
              else
              {
                *(void *)unint64_t v45 = *(void *)v46;
                uint64_t v248 = (unint64_t)&v45[v20 + 8] & v52;
                unint64_t v249 = ((unint64_t)v46 + v211) & ~v18;
                uint64_t v250 = *(void (**)(uint64_t, unint64_t, uint64_t))(v565 + 16);
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                v250(v248, v249, v566);
              }
              unint64_t v251 = (((unint64_t)v45 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v252 = (((unint64_t)v46 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v252 + 8) < 0xFFFFFFFFuLL)
              {
                long long v255 = *(_OWORD *)v252;
                *(void *)(v251 + 16) = *(void *)(v252 + 16);
                *(_OWORD *)unint64_t v251 = v255;
              }
              else
              {
                *(void *)unint64_t v251 = *(void *)v252;
                *(void *)(v251 + 8) = *(void *)(v252 + 8);
                char v253 = *(void **)(v252 + 16);
                *(void *)(v251 + 16) = v253;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                id v254 = v253;
              }
              if (v37 > 3) {
                goto LABEL_453;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 7;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_453:
                char v208 = 7;
                goto LABEL_791;
              }
              __int16 v266 = 7;
              goto LABEL_799;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v244 = *((unsigned __int8 *)v46 + v26);
                if (v244 < 3) {
                  goto LABEL_422;
                }
                unsigned int v214 = v244 - 2;
              }
              else
              {
                unsigned int v214 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v568 + 48))(v46, v34, v567);
              }
              if (v214)
              {
                memcpy(v45, v46, v26 + 1);
                goto LABEL_423;
              }
LABEL_422:
              (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v568 + 16))(v45, v46, v567);
              v45[v26] = *((unsigned char *)v46 + v26);
LABEL_423:
              *(void *)((((unint64_t)v45 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_426;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 8;
                goto LABEL_800;
              }
              if (v207 <= 0xF5)
              {
LABEL_426:
                char v208 = 8;
                goto LABEL_791;
              }
              __int16 v266 = 8;
              goto LABEL_799;
            case 9u:
              *unint64_t v45 = *(unsigned char *)v46;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))((unint64_t)&v45[v35] & v53, ((unint64_t)v46 + v35) & v53, v21);
              if (v37 > 3) {
                goto LABEL_362;
              }
              unsigned int v207 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v207 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 9;
              }
              else
              {
                if (v207 <= 0xF5)
                {
LABEL_362:
                  char v208 = 9;
LABEL_791:
                  v45[v37] = v208;
LABEL_792:
                  if (v37 > 3) {
                    goto LABEL_796;
                  }
                  unsigned int v496 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                  uint64_t v497 = 2;
                  if (v496 > 0xFFF5) {
                    uint64_t v497 = 4;
                  }
                  if (v496 <= 0xF5) {
LABEL_796:
                  }
                    uint64_t v497 = 1;
LABEL_802:
                  uint64_t v499 = v497 + v37;
                  unint64_t v500 = (unint64_t)&v45[v499];
                  unint64_t v501 = (unint64_t)v46 + v499;
                  *(unsigned char *)unint64_t v500 = *(unsigned char *)v501;
                  v500 &= 0xFFFFFFFFFFFFFFF8;
                  v501 &= 0xFFFFFFFFFFFFFFF8;
                  v502 = *(void **)(v501 + 8);
                  *(void *)(v500 + 8) = v502;
                  unint64_t v503 = (v500 + 23) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v504 = (v501 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v505 = *(void **)v504;
                  *(void *)unint64_t v503 = *(void *)v504;
                  *(unsigned char *)(v503 + 8) = *(unsigned char *)(v504 + 8);
                  unint64_t v506 = (v500 + 39) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v507 = (v501 + 39) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v508 = *(void *)v507;
                  *(unsigned char *)(v506 + 8) = *(unsigned char *)(v507 + 8);
                  *(void *)unint64_t v506 = v508;
                  v509 = (void *)((v500 + 55) & 0xFFFFFFFFFFFFFFF8);
                  v510 = (void *)((v501 + 55) & 0xFFFFFFFFFFFFFFF8);
                  void *v509 = *v510;
                  v511 = *(void **)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(void *)(((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8) = v511;
                  id v512 = v502;
                  id v513 = v505;
                  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                  id v514 = v511;
                  if (v37 <= 3)
                  {
LABEL_862:
                    unsigned int v551 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                    uint64_t v552 = 2;
                    if (v551 > 0xFFF5) {
                      uint64_t v552 = 4;
                    }
                    if (v551 > 0xF5) {
                      goto LABEL_866;
                    }
                  }
LABEL_865:
                  uint64_t v552 = 1;
LABEL_866:
                  unint64_t v553 = ((((((v552 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 8;
                  *(void *)((unint64_t)&v45[v553] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v46
                                                                                                + v553) & 0xFFFFFFFFFFFFFFF8);
                  return v38;
                }
                __int16 v266 = 9;
LABEL_799:
                *(_WORD *)&v45[v37] = v266;
              }
LABEL_800:
              BOOL v498 = v207 > 0xFFF5;
              uint64_t v497 = 2;
              if (v498) {
                uint64_t v497 = 4;
              }
              goto LABEL_802;
            default:
              if (v37 > 3) {
                goto LABEL_331;
              }
              unsigned int v178 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              uint64_t v179 = 2;
              if (v178 > 0xFFF5) {
                uint64_t v179 = 4;
              }
              if (v178 <= 0xF5) {
LABEL_331:
              }
                uint64_t v179 = 1;
              memcpy(v45, v46, v179 + v37);
              goto LABEL_792;
          }
        }
      }
      else
      {
LABEL_303:
        unsigned int v170 = *((unsigned __int8 *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA) {
          goto LABEL_320;
        }
      }
LABEL_308:
      if (v37 <= 3) {
        uint64_t v172 = v37;
      }
      else {
        uint64_t v172 = 4;
      }
      switch(v172)
      {
        case 1:
          int v173 = *(unsigned __int8 *)v46;
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 2:
          int v173 = *v46;
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 3:
          int v173 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 4:
          int v173 = *(_DWORD *)v46;
          if (v37 < 4) {
LABEL_315:
          }
            unsigned int v170 = (v173 | (v171 << (8 * v37))) + 10;
          else {
LABEL_319:
          }
            unsigned int v170 = v173 + 10;
          break;
        default:
          goto LABEL_320;
      }
      goto LABEL_320;
    }
    int v165 = v167 + 10;
    if (v167 > 0xF5)
    {
      int v216 = *(unsigned __int16 *)((char *)v46 + v37);
      unsigned int v162 = v216 | 0xFFFF0000;
      unsigned int v163 = v216 ^ 0xFFFF;
      char v164 = 16;
    }
    else
    {
      int v168 = *((unsigned __int8 *)v46 + v37);
      unsigned int v162 = v168 | 0xFFFFFF00;
      unsigned int v163 = v168 ^ 0xFF;
      char v164 = 8;
    }
  }
  else
  {
    int v161 = *((unsigned __int8 *)v46 + v37);
    unsigned int v162 = v161 | 0xFFFFFF00;
    unsigned int v163 = v161 ^ 0xFF;
    char v164 = 8;
    int v165 = 11;
  }
  unsigned int v166 = (1 << v164) - v165;
  if ((v166 & 0x80000000) != 0) {
    goto LABEL_298;
  }
  if (v166 <= v163) {
    goto LABEL_300;
  }
LABEL_299:
  if (!v162) {
    goto LABEL_300;
  }
LABEL_435:
  if (v37 <= 3)
  {
LABEL_523:
    unsigned int v273 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v274 = 2;
    if (v273 > 0xFFF5) {
      uint64_t v274 = 4;
    }
    if (v273 > 0xF5) {
      goto LABEL_527;
    }
  }
LABEL_526:
  uint64_t v274 = 1;
LABEL_527:
  memcpy(v45, v46, ((((((((v274 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v38;
}

void *sub_1B9217C38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v188 = v12;
  uint64_t v187 = sub_1B996A6F0();
  uint64_t v13 = *(void *)(v187 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 | 7;
  uint64_t v186 = sub_1B996BAD0();
  uint64_t v16 = *(void *)(v186 - 8);
  uint64_t v17 = v16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = sub_1B996D7B0();
  uint64_t v20 = v13;
  uint64_t v21 = v18;
  uint64_t v22 = v19;
  uint64_t v23 = *(void *)(v19 - 8);
  uint64_t v24 = v23;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = v18 | v25 | v14 | 7;
  unint64_t v27 = *(void *)(v13 + 64);
  if (v27 <= 0x19) {
    uint64_t v28 = 25;
  }
  else {
    uint64_t v28 = v27;
  }
  uint64_t v29 = v28 + 1;
  unint64_t v30 = (((v28 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v31 = v14 + 15;
  uint64_t v32 = (v14 + 15) & ~v15;
  uint64_t v33 = v18 + 8;
  size_t v34 = *(void *)(v16 + 64) + ((v18 + 8) & ~v18);
  if (v28 + 1 + v32 > v30) {
    unint64_t v30 = v28 + 1 + v32;
  }
  if (v30 <= ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v30 = ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v30 <= (v27 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = (v27 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v35 = v30;
  }
  unint64_t v36 = *(void *)(v23 + 64) + ((v25 + 1) & ~v25);
  if (v35 > v36) {
    unint64_t v36 = v35;
  }
  if (v36 <= 0x18) {
    uint64_t v37 = 24;
  }
  else {
    uint64_t v37 = v36;
  }
  char v38 = 8 * v37;
  if (v37 > 3)
  {
    int v39 = 11;
LABEL_27:
    char v40 = 8;
    goto LABEL_28;
  }
  unsigned int v44 = ((1 << v38) + 1) >> v38;
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_37;
  }
  int v39 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_27;
  }
  char v40 = 16;
LABEL_28:
  unsigned int v41 = (1 << v40) - v39;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_37:
  unint64_t v45 = ((unint64_t)a1 + v26 + v188) & ~v26;
  unint64_t v46 = ((unint64_t)a2 + v26 + v188) & ~v26;
  if (v37 > 3)
  {
    int v47 = 11;
LABEL_39:
    char v48 = 8;
    goto LABEL_40;
  }
  unsigned int v53 = ((1 << v38) + 1) >> v38;
  if (v53 > 0xFFF5) {
    goto LABEL_51;
  }
  int v47 = v53 + 10;
  if (v53 <= 0xF5) {
    goto LABEL_39;
  }
  char v48 = 16;
LABEL_40:
  int v49 = (1 << v48) - v47;
  if ((v49 & 0x80000000) == 0)
  {
    if (v49 == v42) {
      goto LABEL_42;
    }
LABEL_52:
    if (v37 > 3) {
      goto LABEL_56;
    }
    unsigned int v54 = ((1 << v38) + 1) >> v38;
    uint64_t v55 = 2;
    if (v54 > 0xFFF5) {
      uint64_t v55 = 4;
    }
    if (v54 <= 0xF5) {
LABEL_56:
    }
      uint64_t v55 = 1;
    unint64_t v56 = *(void *)(((v37 + v46 + v55) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v56 >= 0xFFFFFFFF) {
      LODWORD(v56) = -1;
    }
    if (v56 != -1) {
      goto LABEL_197;
    }
    goto LABEL_99;
  }
LABEL_51:
  if (v42 != 0x7FFFFFFF) {
    goto LABEL_52;
  }
LABEL_42:
  if (v37 > 3)
  {
    int v50 = 11;
LABEL_44:
    char v51 = 8;
    goto LABEL_45;
  }
  unsigned int v57 = ((1 << v38) + 1) >> v38;
  if (v57 > 0xFFF5) {
    goto LABEL_64;
  }
  int v50 = v57 + 10;
  if (v57 <= 0xF5) {
    goto LABEL_44;
  }
  char v51 = 16;
LABEL_45:
  unsigned int v52 = (1 << v51) - v50;
  if ((v52 & 0x80000000) == 0)
  {
    if (v37 > 3) {
      goto LABEL_68;
    }
    goto LABEL_65;
  }
LABEL_64:
  unsigned int v52 = 0x7FFFFFFF;
  if (v37 > 3)
  {
LABEL_68:
    uint64_t v59 = 1;
    goto LABEL_69;
  }
LABEL_65:
  unsigned int v58 = ((1 << v38) + 1) >> v38;
  uint64_t v59 = 2;
  if (v58 > 0xFFF5) {
    uint64_t v59 = 4;
  }
  if (v58 <= 0xF5) {
    goto LABEL_68;
  }
LABEL_69:
  unsigned int v60 = v42 - v52;
  if (v42 <= v52) {
    goto LABEL_86;
  }
  uint64_t v61 = v59 + v37;
  char v62 = 8 * (v59 + v37);
  if (v61 > 3)
  {
LABEL_71:
    int v63 = *(unsigned __int8 *)(v46 + v61);
    if (!*(unsigned char *)(v46 + v61)) {
      goto LABEL_86;
    }
    goto LABEL_78;
  }
  unsigned int v64 = ((v60 + ~(-1 << v62)) >> v62) + 1;
  if (HIWORD(v64))
  {
    int v63 = *(_DWORD *)(v46 + v61);
    if (!v63) {
      goto LABEL_86;
    }
  }
  else
  {
    if (v64 <= 0xFF)
    {
      if (v64 < 2)
      {
LABEL_86:
        if (!v52) {
          goto LABEL_99;
        }
        if (v37 <= 3)
        {
          unsigned int v71 = ((1 << v38) + 1) >> v38;
          if (v71 > 0xFFF5)
          {
            unsigned int v67 = *(_DWORD *)(v46 + v37);
            unsigned int v68 = ~v67;
            goto LABEL_97;
          }
          int v70 = v71 + 10;
          if (v71 > 0xF5)
          {
            int v73 = *(unsigned __int16 *)(v46 + v37);
            unsigned int v67 = v73 | 0xFFFF0000;
            unsigned int v68 = v73 ^ 0xFFFF;
            char v69 = 16;
          }
          else
          {
            int v72 = *(unsigned __int8 *)(v46 + v37);
            unsigned int v67 = v72 | 0xFFFFFF00;
            unsigned int v68 = v72 ^ 0xFF;
            char v69 = 8;
          }
        }
        else
        {
          int v66 = *(unsigned __int8 *)(v46 + v37);
          unsigned int v67 = v66 | 0xFFFFFF00;
          unsigned int v68 = v66 ^ 0xFF;
          char v69 = 8;
          int v70 = 11;
        }
        unsigned int v74 = (1 << v69) - v70;
        if ((v74 & 0x80000000) == 0)
        {
          if (v74 <= v68) {
            goto LABEL_99;
          }
          goto LABEL_98;
        }
LABEL_97:
        if (v68 >= 0x7FFFFFFF) {
          goto LABEL_99;
        }
LABEL_98:
        if (!v67) {
          goto LABEL_99;
        }
LABEL_197:
        if (v37 > 3) {
          goto LABEL_201;
        }
        unsigned int v103 = ((1 << v38) + 1) >> v38;
        uint64_t v104 = 2;
        if (v103 > 0xFFF5) {
          uint64_t v104 = 4;
        }
        if (v103 <= 0xF5) {
LABEL_201:
        }
          uint64_t v104 = 1;
        memcpy((void *)v45, (const void *)v46, ((((((((v104 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
        return a1;
      }
      goto LABEL_71;
    }
    int v63 = *(unsigned __int16 *)(v46 + v61);
    if (!*(_WORD *)(v46 + v61)) {
      goto LABEL_86;
    }
  }
LABEL_78:
  int v65 = (v63 - 1) << v62;
  if (v61 > 3) {
    int v65 = 0;
  }
  if (v61)
  {
    if (v61 > 3) {
      LODWORD(v61) = 4;
    }
    switch((int)v61)
    {
      case 2:
        LODWORD(v61) = *(unsigned __int16 *)v46;
        break;
      case 3:
        LODWORD(v61) = *(unsigned __int16 *)v46 | (*(unsigned __int8 *)(v46 + 2) << 16);
        break;
      case 4:
        LODWORD(v61) = *(_DWORD *)v46;
        break;
      default:
        LODWORD(v61) = *(unsigned __int8 *)v46;
        break;
    }
  }
  if (v52 + (v61 | v65) != -1) {
    goto LABEL_197;
  }
LABEL_99:
  if (v37 > 3)
  {
LABEL_100:
    unsigned int v75 = *(unsigned __int8 *)(v46 + v37);
    goto LABEL_105;
  }
  unsigned int v76 = ((1 << v38) + 1) >> v38;
  if (v76 > 0xFFF5)
  {
    unsigned int v75 = *(_DWORD *)(v46 + v37);
  }
  else
  {
    if (v76 <= 0xF5) {
      goto LABEL_100;
    }
    unsigned int v75 = *(unsigned __int16 *)(v46 + v37);
  }
LABEL_105:
  unsigned int v77 = v75 - 10;
  if (v75 >= 0xA)
  {
    if (v37 <= 3) {
      uint64_t v78 = v37;
    }
    else {
      uint64_t v78 = 4;
    }
    switch(v78)
    {
      case 1:
        int v79 = *(unsigned __int8 *)v46;
        if (v37 < 4) {
          goto LABEL_117;
        }
        goto LABEL_118;
      case 2:
        int v79 = *(unsigned __int16 *)v46;
        if (v37 >= 4) {
          goto LABEL_118;
        }
        goto LABEL_117;
      case 3:
        int v79 = *(unsigned __int16 *)v46 | (*(unsigned __int8 *)(v46 + 2) << 16);
        if (v37 >= 4) {
          goto LABEL_118;
        }
        goto LABEL_117;
      case 4:
        int v79 = *(_DWORD *)v46;
        if (v37 < 4) {
LABEL_117:
        }
          v79 |= v77 << v38;
LABEL_118:
        unsigned int v75 = v79 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v80 = ~v15;
  switch(v75)
  {
    case 0u:
      unsigned int v81 = *(unsigned __int8 *)(v46 + v28);
      unsigned int v82 = v81 - 10;
      if (v81 >= 0xA)
      {
        if (v28 <= 3) {
          uint64_t v83 = v28;
        }
        else {
          uint64_t v83 = 4;
        }
        switch(v83)
        {
          case 1:
            int v84 = *(unsigned __int8 *)v46;
            goto LABEL_223;
          case 2:
            int v84 = *(unsigned __int16 *)v46;
            goto LABEL_223;
          case 3:
            int v84 = *(unsigned __int16 *)v46 | (*(unsigned __int8 *)(v46 + 2) << 16);
            goto LABEL_223;
          case 4:
            int v84 = *(_DWORD *)v46;
LABEL_223:
            if (v28 < 4) {
              unsigned int v81 = (v84 | (v82 << (8 * v28))) + 10;
            }
            else {
              unsigned int v81 = v84 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v81)
      {
        case 1u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v111 = 1;
          break;
        case 2u:
          uint64_t v113 = v28;
          uint64_t v114 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v114;
          uint64_t v28 = v113;
          char v111 = 2;
          break;
        case 3u:
          uint64_t v115 = v28;
          uint64_t v116 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v116;
          uint64_t v28 = v115;
          char v111 = 3;
          break;
        case 4u:
          uint64_t v117 = v28;
          uint64_t v118 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v118;
          uint64_t v28 = v117;
          char v111 = 4;
          break;
        case 5u:
          uint64_t v119 = v28;
          uint64_t v120 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v120;
          uint64_t v28 = v119;
          char v111 = 5;
          break;
        case 6u:
          uint64_t v131 = v28;
          uint64_t v132 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v132;
          uint64_t v28 = v131;
          char v111 = 6;
          break;
        case 7u:
          long long v121 = *(_OWORD *)v46;
          *(_OWORD *)(v45 + 9) = *(_OWORD *)(v46 + 9);
          *(_OWORD *)unint64_t v45 = v121;
          char v111 = 7;
          break;
        case 8u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v111 = 8;
          break;
        case 9u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v111 = 9;
          break;
        default:
          char v111 = 0;
          *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
          break;
      }
      *(unsigned char *)(v45 + v28) = v111;
      unint64_t v133 = ((v45 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v134 = ((v46 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
      long long v135 = *(_OWORD *)v134;
      long long v136 = *(_OWORD *)(v134 + 16);
      long long v137 = *(_OWORD *)(v134 + 48);
      *(_OWORD *)(v133 + 32) = *(_OWORD *)(v134 + 32);
      *(_OWORD *)(v133 + 48) = v137;
      *(_OWORD *)unint64_t v133 = v135;
      *(_OWORD *)(v133 + 16) = v136;
      long long v138 = *(_OWORD *)(v134 + 64);
      long long v139 = *(_OWORD *)(v134 + 80);
      long long v140 = *(_OWORD *)(v134 + 96);
      *(_OWORD *)(v133 + 106) = *(_OWORD *)(v134 + 106);
      *(_OWORD *)(v133 + 80) = v139;
      *(_OWORD *)(v133 + 96) = v140;
      *(_OWORD *)(v133 + 64) = v138;
      *(unsigned char *)(v133 + 122) = *(unsigned char *)(v134 + 122);
      *(unsigned char *)(v133 + 123) = *(unsigned char *)(v134 + 123);
      *(unsigned char *)(v133 + 124) = *(unsigned char *)(v134 + 124);
      *(unsigned char *)(v133 + 125) = *(unsigned char *)(v134 + 125);
      *(unsigned char *)(v133 + 126) = *(unsigned char *)(v134 + 126);
      *(void *)((v133 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v134 + 134) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        unsigned int v101 = ((1 << v38) + 1) >> v38;
        if (v101 > 0xFFF5)
        {
          *(_DWORD *)(v45 + v37) = 0;
          goto LABEL_272;
        }
        if (v101 > 0xF5)
        {
          *(_WORD *)(v45 + v37) = 0;
          goto LABEL_272;
        }
      }
      *(unsigned char *)(v45 + v37) = 0;
      if (v37 <= 3) {
        goto LABEL_264;
      }
      goto LABEL_267;
    case 1u:
      unsigned int v85 = *(unsigned __int8 *)(v46 + v28);
      unsigned int v86 = v85 - 10;
      if (v85 >= 0xA)
      {
        if (v28 <= 3) {
          uint64_t v87 = v28;
        }
        else {
          uint64_t v87 = 4;
        }
        switch(v87)
        {
          case 1:
            int v88 = *(unsigned __int8 *)v46;
            goto LABEL_231;
          case 2:
            int v88 = *(unsigned __int16 *)v46;
            goto LABEL_231;
          case 3:
            int v88 = *(unsigned __int16 *)v46 | (*(unsigned __int8 *)(v46 + 2) << 16);
            goto LABEL_231;
          case 4:
            int v88 = *(_DWORD *)v46;
LABEL_231:
            if (v28 < 4) {
              unsigned int v85 = (v88 | (v86 << (8 * v28))) + 10;
            }
            else {
              unsigned int v85 = v88 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v85)
      {
        case 1u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v112 = 1;
          break;
        case 2u:
          uint64_t v122 = v28;
          uint64_t v123 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v123;
          uint64_t v28 = v122;
          char v112 = 2;
          break;
        case 3u:
          uint64_t v124 = v28;
          uint64_t v125 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v125;
          uint64_t v28 = v124;
          char v112 = 3;
          break;
        case 4u:
          uint64_t v126 = v28;
          uint64_t v127 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v127;
          uint64_t v28 = v126;
          char v112 = 4;
          break;
        case 5u:
          uint64_t v128 = v28;
          uint64_t v129 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v129;
          uint64_t v28 = v128;
          char v112 = 5;
          break;
        case 6u:
          uint64_t v141 = v28;
          uint64_t v142 = v28 + 1;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
          uint64_t v29 = v142;
          uint64_t v28 = v141;
          char v112 = 6;
          break;
        case 7u:
          long long v130 = *(_OWORD *)v46;
          *(_OWORD *)(v45 + 9) = *(_OWORD *)(v46 + 9);
          *(_OWORD *)unint64_t v45 = v130;
          char v112 = 7;
          break;
        case 8u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v112 = 8;
          break;
        case 9u:
          *(void *)unint64_t v45 = *(void *)v46;
          char v112 = 9;
          break;
        default:
          char v112 = 0;
          *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
          break;
      }
      *(unsigned char *)(v45 + v28) = v112;
      unint64_t v143 = ((v45 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v144 = ((v46 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
      long long v145 = *(_OWORD *)v144;
      long long v146 = *(_OWORD *)(v144 + 16);
      long long v147 = *(_OWORD *)(v144 + 48);
      *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
      *(_OWORD *)(v143 + 48) = v147;
      *(_OWORD *)unint64_t v143 = v145;
      *(_OWORD *)(v143 + 16) = v146;
      long long v148 = *(_OWORD *)(v144 + 64);
      long long v149 = *(_OWORD *)(v144 + 80);
      long long v150 = *(_OWORD *)(v144 + 96);
      *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
      *(_OWORD *)(v143 + 80) = v149;
      *(_OWORD *)(v143 + 96) = v150;
      *(_OWORD *)(v143 + 64) = v148;
      *(unsigned char *)(v143 + 122) = *(unsigned char *)(v144 + 122);
      *(unsigned char *)(v143 + 123) = *(unsigned char *)(v144 + 123);
      *(unsigned char *)(v143 + 124) = *(unsigned char *)(v144 + 124);
      *(unsigned char *)(v143 + 125) = *(unsigned char *)(v144 + 125);
      *(unsigned char *)(v143 + 126) = *(unsigned char *)(v144 + 126);
      *(void *)((v143 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + 134) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_262;
      }
      int v110 = 1;
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5) {
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_262:
        char v96 = 1;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 1;
      goto LABEL_272;
    case 2u:
      *(void *)unint64_t v45 = *(void *)v46;
      uint64_t v89 = (unsigned char *)((v31 + v45) & v80);
      unint64_t v90 = (unsigned char *)((v31 + v46) & v80);
      switch(v90[v28])
      {
        case 0:
          *uint64_t v89 = *v90;
          v89[v28] = 0;
          break;
        case 1:
          *(void *)uint64_t v89 = *(void *)v90;
          v89[v28] = 1;
          break;
        case 2:
          uint64_t v168 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v89[v168] = 2;
          break;
        case 3:
          uint64_t v169 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v89[v169] = 3;
          break;
        case 4:
          uint64_t v170 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v89[v170] = 4;
          break;
        case 5:
          uint64_t v171 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v89[v171] = 5;
          break;
        case 6:
          uint64_t v172 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v89[v172] = 6;
          break;
        case 7:
          long long v173 = *(_OWORD *)v90;
          *(_OWORD *)(((v31 + v45) & v80) + 9) = *(_OWORD *)(((v31 + v46) & v80) + 9);
          *(_OWORD *)uint64_t v89 = v173;
          v89[v28] = 7;
          break;
        case 8:
          *(void *)uint64_t v89 = *(void *)v90;
          v89[v28] = 8;
          break;
        case 9:
          *(void *)uint64_t v89 = *(void *)v90;
          v89[v28] = 9;
          break;
        default:
          memcpy((void *)((v31 + v45) & v80), v90, v28 + 1);
          break;
      }
      if (v37 > 3) {
        goto LABEL_163;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 2;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_163:
        char v96 = 2;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 2;
      goto LABEL_272;
    case 3u:
      *(void *)unint64_t v45 = *(void *)v46;
      unsigned int v91 = (unsigned char *)((v31 + v45) & v80);
      char v92 = (unsigned char *)((v31 + v46) & v80);
      switch(v92[v28])
      {
        case 0:
          *unsigned int v91 = *v92;
          v91[v28] = 0;
          break;
        case 1:
          *(void *)unsigned int v91 = *(void *)v92;
          v91[v28] = 1;
          break;
        case 2:
          uint64_t v174 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v91[v174] = 2;
          break;
        case 3:
          uint64_t v175 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v91[v175] = 3;
          break;
        case 4:
          uint64_t v176 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v91[v176] = 4;
          break;
        case 5:
          uint64_t v177 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v91[v177] = 5;
          break;
        case 6:
          uint64_t v178 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v91[v178] = 6;
          break;
        case 7:
          long long v179 = *(_OWORD *)v92;
          *(_OWORD *)(((v31 + v45) & v80) + 9) = *(_OWORD *)(((v31 + v46) & v80) + 9);
          *(_OWORD *)unsigned int v91 = v179;
          v91[v28] = 7;
          break;
        case 8:
          *(void *)unsigned int v91 = *(void *)v92;
          v91[v28] = 8;
          break;
        case 9:
          *(void *)unsigned int v91 = *(void *)v92;
          v91[v28] = 9;
          break;
        default:
          memcpy((void *)((v31 + v45) & v80), v92, v28 + 1);
          break;
      }
      if (v37 > 3) {
        goto LABEL_166;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 3;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_166:
        char v96 = 3;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 3;
      goto LABEL_272;
    case 4u:
      *(void *)unint64_t v45 = *(void *)v46;
      unsigned int v93 = (unsigned char *)((v31 + v45) & v80);
      unsigned int v94 = (unsigned char *)((v31 + v46) & v80);
      switch(v94[v28])
      {
        case 0:
          unsigned char *v93 = *v94;
          v93[v28] = 0;
          break;
        case 1:
          *(void *)unsigned int v93 = *(void *)v94;
          v93[v28] = 1;
          break;
        case 2:
          uint64_t v180 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v93[v180] = 2;
          break;
        case 3:
          uint64_t v181 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v93[v181] = 3;
          break;
        case 4:
          uint64_t v182 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v93[v182] = 4;
          break;
        case 5:
          uint64_t v183 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v93[v183] = 5;
          break;
        case 6:
          uint64_t v184 = v28;
          (*(void (**)(unint64_t))(v20 + 32))((v31 + v45) & v80);
          v93[v184] = 6;
          break;
        case 7:
          long long v185 = *(_OWORD *)v94;
          *(_OWORD *)(((v31 + v45) & v80) + 9) = *(_OWORD *)(((v31 + v46) & v80) + 9);
          *(_OWORD *)unsigned int v93 = v185;
          v93[v28] = 7;
          break;
        case 8:
          *(void *)unsigned int v93 = *(void *)v94;
          v93[v28] = 8;
          break;
        case 9:
          *(void *)unsigned int v93 = *(void *)v94;
          v93[v28] = 9;
          break;
        default:
          memcpy((void *)((v31 + v45) & v80), v94, v28 + 1);
          break;
      }
      if (v37 > 3) {
        goto LABEL_169;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 4;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_169:
        char v96 = 4;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 4;
      goto LABEL_272;
    case 5u:
      long long v95 = *(_OWORD *)v46;
      *(void *)(v45 + 16) = *(void *)(v46 + 16);
      *(_OWORD *)unint64_t v45 = v95;
      if (v37 > 3) {
        goto LABEL_139;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 5;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_139:
        char v96 = 5;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 5;
      goto LABEL_272;
    case 6u:
      *(void *)unint64_t v45 = *(void *)v46;
      if (v37 > 3) {
        goto LABEL_157;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 6;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_157:
        char v96 = 6;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 6;
      goto LABEL_272;
    case 7u:
      uint64_t v97 = ~v21;
      if ((*(_DWORD *)(v17 + 84) & 0x80000000) != 0)
      {
        uint64_t v105 = v33;
        int v106 = (*(uint64_t (**)(unint64_t))(v17 + 48))((v46 + v21 + 8) & v97);
        uint64_t v33 = v105;
        if (v106)
        {
LABEL_144:
          memcpy((void *)v45, (const void *)v46, v34);
          goto LABEL_205;
        }
      }
      else
      {
        uint64_t v98 = *(void *)v46;
        if (*(void *)v46 >= 0xFFFFFFFFuLL) {
          LODWORD(v98) = -1;
        }
        if (v98 != -1) {
          goto LABEL_144;
        }
      }
      *(void *)unint64_t v45 = *(void *)v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))((v33 + v45) & v97, (v46 + v21 + 8) & v97, v186);
LABEL_205:
      unint64_t v107 = ((v46 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
      long long v108 = *(_OWORD *)v107;
      unint64_t v109 = ((v45 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v109 + 16) = *(void *)(v107 + 16);
      *(_OWORD *)unint64_t v109 = v108;
      if (v37 > 3) {
        goto LABEL_206;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 7;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_206:
        char v96 = 7;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 7;
      goto LABEL_272;
    case 8u:
      if (*(_DWORD *)(v20 + 84) < 0xFDu)
      {
        if (*(unsigned __int8 *)(v46 + v27) >= 3u) {
          goto LABEL_160;
        }
      }
      else
      {
        uint64_t v102 = v20;
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v20 + 48))(v46, *(unsigned int *)(v20 + 84), v187))
        {
LABEL_160:
          memcpy((void *)v45, (const void *)v46, v27 + 1);
          goto LABEL_189;
        }
        uint64_t v20 = v102;
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v45, v46, v187);
      *(unsigned char *)(v45 + v27) = *(unsigned char *)(v46 + v27);
LABEL_189:
      *(void *)(((v45 | 7) + v27 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v46 | 7) + v27 + 1) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_192;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 8;
LABEL_271:
        *(_DWORD *)(v45 + v37) = v110;
        goto LABEL_272;
      }
      if (v101 > 0xF5)
      {
        *(_WORD *)(v45 + v37) = 8;
LABEL_272:
        BOOL v153 = v101 > 0xFFF5;
        uint64_t v152 = 2;
        if (v153) {
          uint64_t v152 = 4;
        }
        goto LABEL_274;
      }
LABEL_192:
      char v96 = 8;
LABEL_263:
      *(unsigned char *)(v45 + v37) = v96;
      if (v37 > 3) {
        goto LABEL_267;
      }
LABEL_264:
      unsigned int v151 = ((1 << v38) + 1) >> v38;
      uint64_t v152 = 2;
      if (v151 > 0xFFF5) {
        uint64_t v152 = 4;
      }
      if (v151 <= 0xF5) {
LABEL_267:
      }
        uint64_t v152 = 1;
LABEL_274:
      uint64_t v154 = v152 + v37;
      unint64_t v155 = v154 + v45;
      unint64_t v156 = v154 + v46;
      *(unsigned char *)unint64_t v155 = *(unsigned char *)v156;
      v155 &= 0xFFFFFFFFFFFFFFF8;
      v156 &= 0xFFFFFFFFFFFFFFF8;
      *(void *)(v155 + 8) = *(void *)(v156 + 8);
      unint64_t v157 = (v155 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v156 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
      unint64_t v159 = (v155 + 39) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v156 + 39) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v161 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(void *)unint64_t v159 = v161;
      unsigned int v162 = (void *)((v155 + 55) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v163 = (void *)((v156 + 55) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v162 = *v163;
      *(void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_278;
      }
      unsigned int v164 = ((1 << v38) + 1) >> v38;
      uint64_t v165 = 2;
      if (v164 > 0xFFF5) {
        uint64_t v165 = 4;
      }
      if (v164 <= 0xF5) {
LABEL_278:
      }
        uint64_t v165 = 1;
      unint64_t v166 = ((((((v165 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v45 + v166) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v46 + v166) & 0xFFFFFFFFFFFFFFF8);
      return a1;
    case 9u:
      *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 32))((v25 + 1 + v45) & ~v25, (v25 + 1 + v46) & ~v25, v22);
      if (v37 > 3) {
        goto LABEL_146;
      }
      unsigned int v101 = ((1 << v38) + 1) >> v38;
      if (v101 > 0xFFF5)
      {
        int v110 = 9;
        goto LABEL_271;
      }
      if (v101 <= 0xF5)
      {
LABEL_146:
        char v96 = 9;
        goto LABEL_263;
      }
      *(_WORD *)(v45 + v37) = 9;
      goto LABEL_272;
    default:
      if (v37 > 3) {
        goto LABEL_151;
      }
      unsigned int v99 = ((1 << v38) + 1) >> v38;
      uint64_t v100 = 2;
      if (v99 > 0xFFF5) {
        uint64_t v100 = 4;
      }
      if (v99 <= 0xF5) {
LABEL_151:
      }
        uint64_t v100 = 1;
      memcpy((void *)v45, (const void *)v46, v100 + v37);
      if (v37 > 3) {
        goto LABEL_267;
      }
      goto LABEL_264;
  }
}

void *sub_1B92194E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  long long v446 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v444 = v13;
  uint64_t v442 = sub_1B996A6F0();
  uint64_t v14 = *(void *)(v442 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = v15 | 7;
  uint64_t v441 = sub_1B996BAD0();
  uint64_t v17 = *(void *)(v441 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = sub_1B996D7B0();
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t v23 = v22;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = v18 | v24 | v15 | 7;
  unint64_t v26 = *(void *)(v14 + 64);
  if (v26 <= 0x19) {
    uint64_t v27 = 25;
  }
  else {
    uint64_t v27 = *(void *)(v14 + 64);
  }
  uint64_t v28 = v27 + 1;
  unint64_t v29 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v30 = v15 + 15;
  uint64_t v440 = v17;
  int v31 = *(_DWORD *)(v17 + 84);
  uint64_t v32 = *(void *)(v17 + 64);
  size_t v33 = v32 + ((v18 + 8) & ~v18);
  uint64_t v443 = v14;
  uint64_t v34 = *(unsigned int *)(v14 + 84);
  if (v27 + 1 + ((v15 + 15) & (unint64_t)~v16) > v29) {
    unint64_t v29 = v27 + 1 + ((v15 + 15) & ~v16);
  }
  if (v29 <= ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v29 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= (v26 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v35 = v24 + 1;
  unint64_t v36 = *(void *)(v22 + 64) + ((v24 + 1) & ~v24);
  if (v29 > v36) {
    unint64_t v36 = v29;
  }
  if (v36 <= 0x18) {
    uint64_t v37 = 24;
  }
  else {
    uint64_t v37 = v36;
  }
  char v38 = v446;
  if (v37 > 3)
  {
    int v39 = 11;
LABEL_31:
    char v40 = 8;
    goto LABEL_32;
  }
  unsigned int v44 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_41;
  }
  int v39 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_31;
  }
  char v40 = 16;
LABEL_32:
  unsigned int v41 = (1 << v40) - v39;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_41:
  unint64_t v45 = (unsigned __int8 *)(((unint64_t)v446 + v25 + v444) & ~v25);
  unint64_t v46 = (unsigned __int16 *)(((unint64_t)a2 + v25 + v444) & ~v25);
  if (v37 > 3)
  {
    int v47 = 11;
    goto LABEL_43;
  }
  unsigned int v50 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v50 <= 0xFFF5)
  {
    int v47 = v50 + 10;
    if (v50 > 0xF5)
    {
      char v48 = 16;
LABEL_44:
      int v49 = (1 << v48) - v47;
      if ((v49 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_49;
    }
LABEL_43:
    char v48 = 8;
    goto LABEL_44;
  }
LABEL_49:
  int v49 = 0x7FFFFFFF;
LABEL_50:
  uint64_t v51 = ~v16;
  uint64_t v52 = ~v18;
  uint64_t v53 = ~v24;
  if (v49 != v42)
  {
    if (v37 > 3) {
      goto LABEL_61;
    }
    unsigned int v57 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v58 = 2;
    if (v57 > 0xFFF5) {
      uint64_t v58 = 4;
    }
    if (v57 <= 0xF5) {
LABEL_61:
    }
      uint64_t v58 = 1;
    unint64_t v59 = *(void *)(((unint64_t)&v45[v37 + v58] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v59 >= 0xFFFFFFFF) {
      LODWORD(v59) = -1;
    }
    if (v59 != -1) {
      goto LABEL_168;
    }
LABEL_103:
    if (v37 <= 3)
    {
      unsigned int v78 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v78 > 0xFFF5)
      {
        unsigned int v81 = 0x7FFFFFFF;
        if (v37 > 3)
        {
LABEL_114:
          int v83 = 11;
          goto LABEL_118;
        }
LABEL_116:
        unsigned int v84 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v84 > 0xFFF5) {
          goto LABEL_123;
        }
        int v83 = v84 + 10;
        if (v84 > 0xF5)
        {
          char v85 = 16;
LABEL_119:
          int v86 = (1 << v85) - v83;
          if ((v86 & 0x80000000) == 0)
          {
            if (v86 == v81) {
              goto LABEL_121;
            }
            goto LABEL_124;
          }
LABEL_123:
          if (v81 == 0x7FFFFFFF)
          {
LABEL_121:
            if (v37 <= 3)
            {
              unsigned int v91 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v91 > 0xFFF5) {
                goto LABEL_139;
              }
              int v87 = v91 + 10;
              if (v91 > 0xF5)
              {
                char v92 = 16;
LABEL_136:
                unsigned int v93 = (1 << v92) - v87;
                if ((v93 & 0x80000000) == 0)
                {
                  if (v37 > 3) {
                    goto LABEL_143;
                  }
LABEL_140:
                  unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                  uint64_t v95 = 2;
                  if (v94 > 0xFFF5) {
                    uint64_t v95 = 4;
                  }
                  if (v94 > 0xF5)
                  {
LABEL_144:
                    unsigned int v96 = v81 - v93;
                    if (v81 <= v93) {
                      goto LABEL_229;
                    }
                    uint64_t v97 = v95 + v37;
                    char v98 = 8 * (v95 + v37);
                    if (v97 > 3)
                    {
LABEL_146:
                      int v99 = *((unsigned __int8 *)v46 + v97);
                      if (!*((unsigned char *)v46 + v97)) {
                        goto LABEL_229;
                      }
                      goto LABEL_156;
                    }
                    unsigned int v100 = ((v96 + ~(-1 << v98)) >> v98) + 1;
                    if (HIWORD(v100))
                    {
                      int v99 = *(_DWORD *)((char *)v46 + v97);
                      if (!v99) {
                        goto LABEL_229;
                      }
                    }
                    else
                    {
                      if (v100 <= 0xFF)
                      {
                        if (v100 < 2)
                        {
LABEL_229:
                          if (!v93) {
                            goto LABEL_241;
                          }
                          if (v37 <= 3)
                          {
                            unsigned int v134 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                            if (v134 > 0xFFF5)
                            {
                              unsigned int v129 = *(_DWORD *)((char *)v46 + v37);
                              unsigned int v130 = ~v129;
                              goto LABEL_239;
                            }
                            int v132 = v134 + 10;
                            if (v134 > 0xF5)
                            {
                              int v198 = *(unsigned __int16 *)((char *)v46 + v37);
                              unsigned int v129 = v198 | 0xFFFF0000;
                              unsigned int v130 = v198 ^ 0xFFFF;
                              char v131 = 16;
                            }
                            else
                            {
                              int v135 = *((unsigned __int8 *)v46 + v37);
                              unsigned int v129 = v135 | 0xFFFFFF00;
                              unsigned int v130 = v135 ^ 0xFF;
                              char v131 = 8;
                            }
                          }
                          else
                          {
                            int v128 = *((unsigned __int8 *)v46 + v37);
                            unsigned int v129 = v128 | 0xFFFFFF00;
                            unsigned int v130 = v128 ^ 0xFF;
                            char v131 = 8;
                            int v132 = 11;
                          }
                          unsigned int v133 = (1 << v131) - v132;
                          if ((v133 & 0x80000000) == 0)
                          {
                            if (v133 <= v130) {
                              goto LABEL_241;
                            }
                            goto LABEL_240;
                          }
LABEL_239:
                          if (v130 >= 0x7FFFFFFF) {
                            goto LABEL_241;
                          }
LABEL_240:
                          if (!v129) {
                            goto LABEL_241;
                          }
LABEL_369:
                          if (v37 <= 3)
                          {
                            unsigned int v200 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                            if (v200 > 0xFFF5)
                            {
                              unsigned int v201 = *(_DWORD *)&v45[v37];
                              unsigned int v202 = v201 - 10;
                              if (v201 < 0xA) {
                                goto LABEL_389;
                              }
LABEL_377:
                              if (v37 <= 3) {
                                uint64_t v203 = v37;
                              }
                              else {
                                uint64_t v203 = 4;
                              }
                              switch(v203)
                              {
                                case 1:
                                  int v204 = *v45;
                                  if (v37 >= 4) {
                                    goto LABEL_388;
                                  }
                                  goto LABEL_384;
                                case 2:
                                  int v204 = *(unsigned __int16 *)v45;
                                  if (v37 < 4) {
                                    goto LABEL_384;
                                  }
                                  goto LABEL_388;
                                case 3:
                                  int v204 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                  if (v37 < 4) {
                                    goto LABEL_384;
                                  }
                                  goto LABEL_388;
                                case 4:
                                  int v204 = *(_DWORD *)v45;
                                  if (v37 < 4) {
LABEL_384:
                                  }
                                    unsigned int v201 = (v204 | (v202 << (8 * v37))) + 10;
                                  else {
LABEL_388:
                                  }
                                    unsigned int v201 = v204 + 10;
                                  break;
                                default:
                                  break;
                              }
LABEL_389:
                              switch(v201)
                              {
                                case 0u:
                                  unsigned int v205 = v45[v27];
                                  unsigned int v206 = v205 - 10;
                                  if (v205 >= 0xA)
                                  {
                                    if (v27 <= 3) {
                                      uint64_t v207 = v27;
                                    }
                                    else {
                                      uint64_t v207 = 4;
                                    }
                                    switch(v207)
                                    {
                                      case 1:
                                        int v208 = *v45;
                                        goto LABEL_513;
                                      case 2:
                                        int v208 = *(unsigned __int16 *)v45;
                                        goto LABEL_513;
                                      case 3:
                                        int v208 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                        goto LABEL_513;
                                      case 4:
                                        int v208 = *(_DWORD *)v45;
LABEL_513:
                                        if (v27 < 4) {
                                          unsigned int v205 = (v208 | (v206 << (8 * v27))) + 10;
                                        }
                                        else {
                                          unsigned int v205 = v208 + 10;
                                        }
                                        break;
                                      default:
                                        break;
                                    }
                                  }
                                  switch(v205)
                                  {
                                    case 1u:
                                    case 8u:
                                    case 9u:
                                      goto LABEL_525;
                                    case 2u:
                                    case 3u:
                                    case 4u:
                                    case 5u:
                                    case 6u:
                                      goto LABEL_524;
                                    default:
                                      goto LABEL_527;
                                  }
                                  goto LABEL_527;
                                case 1u:
                                  unsigned int v209 = v45[v27];
                                  unsigned int v210 = v209 - 10;
                                  if (v209 >= 0xA)
                                  {
                                    if (v27 <= 3) {
                                      uint64_t v211 = v27;
                                    }
                                    else {
                                      uint64_t v211 = 4;
                                    }
                                    switch(v211)
                                    {
                                      case 1:
                                        int v212 = *v45;
                                        goto LABEL_520;
                                      case 2:
                                        int v212 = *(unsigned __int16 *)v45;
                                        goto LABEL_520;
                                      case 3:
                                        int v212 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                        goto LABEL_520;
                                      case 4:
                                        int v212 = *(_DWORD *)v45;
LABEL_520:
                                        if (v27 < 4) {
                                          unsigned int v209 = (v212 | (v210 << (8 * v27))) + 10;
                                        }
                                        else {
                                          unsigned int v209 = v212 + 10;
                                        }
                                        break;
                                      default:
                                        break;
                                    }
                                  }
                                  switch(v209)
                                  {
                                    case 1u:
                                    case 8u:
                                    case 9u:
LABEL_525:
                                      uint64_t v247 = v27 + 1;

                                      goto LABEL_526;
                                    case 2u:
                                    case 3u:
                                    case 4u:
                                    case 5u:
                                    case 6u:
LABEL_524:
                                      uint64_t v247 = v27 + 1;
                                      (*(void (**)(unsigned __int8 *, uint64_t))(v443 + 8))(v45, v442);
LABEL_526:
                                      uint64_t v28 = v247;
                                      break;
                                    default:
                                      break;
                                  }
LABEL_527:
                                  unint64_t v248 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
                                  if (*(void *)(v248 + 8) >= 0xFFFFFFFFuLL)
                                  {
                                    swift_bridgeObjectRelease();
                                    sub_1B90CBFF4(*(void **)(v248 + 16), *(void *)(v248 + 24), *(void *)(v248 + 32), *(void *)(v248 + 40), *(void *)(v248 + 48), *(void *)(v248 + 56), *(unsigned char *)(v248 + 64));
                                    int v249 = *(unsigned __int8 *)(v248 + 120);
                                    if (v249 != 255) {
                                      sub_1B90CC01C(*(void **)(v248 + 72), *(void *)(v248 + 80), *(void *)(v248 + 88), *(void *)(v248 + 96), *(void *)(v248 + 104), *(void *)(v248 + 112), v249 & 1);
                                    }
                                  }
                                  id v223 = *(id *)((v248 + 134) & 0xFFFFFFFFFFFFFFF8);
                                  goto LABEL_531;
                                case 2u:
                                  uint64_t v213 = v27;
                                  uint64_t v214 = v30;
                                  uint64_t v215 = v51;

                                  int v216 = (id *)((unint64_t)&v45[v214] & v215);
                                  switch(*((unsigned char *)v216 + v213))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
                                      goto LABEL_449;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                      goto LABEL_405;
                                    default:
                                      goto LABEL_532;
                                  }
                                  goto LABEL_532;
                                case 3u:
                                  uint64_t v217 = v27;
                                  uint64_t v218 = v30;
                                  uint64_t v219 = v51;

                                  int v216 = (id *)((unint64_t)&v45[v218] & v219);
                                  switch(*((unsigned char *)v216 + v217))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
                                      goto LABEL_449;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                      goto LABEL_405;
                                    default:
                                      goto LABEL_532;
                                  }
                                  goto LABEL_532;
                                case 4u:
                                  uint64_t v220 = v27;
                                  uint64_t v221 = v30;
                                  uint64_t v222 = v51;

                                  int v216 = (id *)((unint64_t)&v45[v221] & v222);
                                  switch(*((unsigned char *)v216 + v220))
                                  {
                                    case 1:
                                    case 8:
                                    case 9:
LABEL_449:
                                      id v223 = *v216;
                                      goto LABEL_531;
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
LABEL_405:
                                      (*(void (**)(id *, uint64_t))(v443 + 8))(v216, v442);
                                      break;
                                    default:
                                      goto LABEL_532;
                                  }
                                  goto LABEL_532;
                                case 5u:
                                  id v223 = (id)*((void *)v45 + 2);
                                  goto LABEL_531;
                                case 6u:
                                  id v223 = *(id *)v45;
                                  goto LABEL_531;
                                case 7u:
                                  if (v31 < 0)
                                  {
                                    int v225 = (*(uint64_t (**)(unint64_t))(v440 + 48))((unint64_t)&v45[v18 + 8] & v52);
                                    uint64_t v20 = v18;
                                  }
                                  else
                                  {
                                    id v224 = *(id *)v45;
                                    if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                                      LODWORD(v224) = -1;
                                    }
                                    int v225 = v224 + 1;
                                  }
                                  if (!v225)
                                  {
                                    uint64_t v229 = v20;
                                    swift_bridgeObjectRelease();
                                    (*(void (**)(unint64_t, uint64_t))(v440 + 8))((unint64_t)&v45[v229 + 8] & v52, v441);
                                  }
                                  unint64_t v230 = (((unint64_t)v45 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
                                  if (*(void *)(v230 + 8) < 0xFFFFFFFFuLL) {
                                    goto LABEL_532;
                                  }
                                  swift_bridgeObjectRelease();
                                  id v223 = *(id *)(v230 + 16);
LABEL_531:

                                  goto LABEL_532;
                                case 8u:
                                  if (v34 < 0xFD)
                                  {
                                    unsigned int v228 = v45[v26];
                                    if (v228 < 3) {
                                      goto LABEL_442;
                                    }
                                    unsigned int v226 = v228 - 2;
                                  }
                                  else
                                  {
                                    unsigned int v226 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v443 + 48))(v45, v34, v442);
                                  }
                                  if (v226) {
                                    goto LABEL_532;
                                  }
LABEL_442:
                                  (*(void (**)(unsigned __int8 *, uint64_t))(v443 + 8))(v45, v442);
LABEL_532:
                                  if (v37 > 3) {
                                    goto LABEL_536;
                                  }
                                  unsigned int v250 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                                  uint64_t v251 = 2;
                                  if (v250 > 0xFFF5) {
                                    uint64_t v251 = 4;
                                  }
                                  if (v250 <= 0xF5) {
LABEL_536:
                                  }
                                    uint64_t v251 = 1;
                                  unint64_t v252 = (unint64_t)&v45[v37 + v251] & 0xFFFFFFFFFFFFFFF8;

                                  swift_bridgeObjectRelease();
                                  if (v37 <= 3) {
                                    goto LABEL_538;
                                  }
                                  goto LABEL_541;
                                case 9u:
                                  (*(void (**)(unint64_t, uint64_t))(v23 + 8))((unint64_t)&v45[v35] & v53, v21);
                                  goto LABEL_532;
                                default:
                                  goto LABEL_532;
                              }
                            }
                            if (v200 > 0xF5)
                            {
                              unsigned int v201 = *(unsigned __int16 *)&v45[v37];
                              unsigned int v202 = v201 - 10;
                              if (v201 < 0xA) {
                                goto LABEL_389;
                              }
                              goto LABEL_377;
                            }
                          }
                          unsigned int v201 = v45[v37];
                          unsigned int v202 = v201 - 10;
                          if (v201 < 0xA) {
                            goto LABEL_389;
                          }
                          goto LABEL_377;
                        }
                        goto LABEL_146;
                      }
                      int v99 = *(unsigned __int16 *)((char *)v46 + v97);
                      if (!*(unsigned __int16 *)((char *)v46 + v97)) {
                        goto LABEL_229;
                      }
                    }
LABEL_156:
                    int v101 = (v99 - 1) << v98;
                    if (v97 > 3) {
                      int v101 = 0;
                    }
                    if (v97)
                    {
                      if (v97 > 3) {
                        LODWORD(v97) = 4;
                      }
                      switch((int)v97)
                      {
                        case 2:
                          LODWORD(v97) = *v46;
                          break;
                        case 3:
                          LODWORD(v97) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                          break;
                        case 4:
                          LODWORD(v97) = *(_DWORD *)v46;
                          break;
                        default:
                          LODWORD(v97) = *(unsigned __int8 *)v46;
                          break;
                      }
                    }
                    if (v93 + (v97 | v101) != -1) {
                      goto LABEL_369;
                    }
                    goto LABEL_241;
                  }
LABEL_143:
                  uint64_t v95 = 1;
                  goto LABEL_144;
                }
LABEL_139:
                unsigned int v93 = 0x7FFFFFFF;
                if (v37 > 3) {
                  goto LABEL_143;
                }
                goto LABEL_140;
              }
            }
            else
            {
              int v87 = 11;
            }
            char v92 = 8;
            goto LABEL_136;
          }
LABEL_124:
          if (v37 > 3) {
            goto LABEL_128;
          }
          unsigned int v88 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          uint64_t v89 = 2;
          if (v88 > 0xFFF5) {
            uint64_t v89 = 4;
          }
          if (v88 <= 0xF5) {
LABEL_128:
          }
            uint64_t v89 = 1;
          unint64_t v90 = *(void *)((((unint64_t)v46 + v37 + v89) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v90 >= 0xFFFFFFFF) {
            LODWORD(v90) = -1;
          }
          if (v90 != -1) {
            goto LABEL_369;
          }
LABEL_241:
          if (v45 == (unsigned __int8 *)v46) {
            goto LABEL_756;
          }
          if (v37 > 3) {
            goto LABEL_243;
          }
          unsigned int v137 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          if (v137 > 0xFFF5)
          {
            unsigned int v136 = *(_DWORD *)&v45[v37];
          }
          else
          {
            if (v137 <= 0xF5)
            {
LABEL_243:
              unsigned int v136 = v45[v37];
              goto LABEL_248;
            }
            unsigned int v136 = *(unsigned __int16 *)&v45[v37];
          }
LABEL_248:
          unsigned int v138 = v136 - 10;
          uint64_t v439 = v18 + 8;
          size_t v445 = v26 + 1;
          if (v136 >= 0xA)
          {
            if (v37 <= 3) {
              uint64_t v139 = v37;
            }
            else {
              uint64_t v139 = 4;
            }
            switch(v139)
            {
              case 1:
                int v140 = *v45;
                goto LABEL_257;
              case 2:
                int v140 = *(unsigned __int16 *)v45;
                goto LABEL_257;
              case 3:
                int v140 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                goto LABEL_257;
              case 4:
                int v140 = *(_DWORD *)v45;
LABEL_257:
                if (v37 < 4) {
                  unsigned int v136 = (v140 | (v138 << (8 * v37))) + 10;
                }
                else {
                  unsigned int v136 = v140 + 10;
                }
                break;
              default:
                break;
            }
          }
          uint64_t v431 = ~v18;
          size_t v432 = v32 + ((v18 + 8) & ~v18);
          size_t __n = v27 + 1;
          uint64_t v437 = v21;
          uint64_t v438 = v30;
          uint64_t v435 = v51;
          uint64_t v436 = v23;
          int v141 = v31;
          uint64_t v434 = v53;
          switch(v136)
          {
            case 0u:
              unsigned int v142 = v45[v27];
              unsigned int v143 = v142 - 10;
              if (v142 < 0xA)
              {
                size_t v145 = v27 + 1;
              }
              else
              {
                if (v27 <= 3) {
                  uint64_t v144 = v27;
                }
                else {
                  uint64_t v144 = 4;
                }
                size_t v145 = v27 + 1;
                switch(v144)
                {
                  case 1:
                    int v146 = *v45;
                    goto LABEL_586;
                  case 2:
                    int v146 = *(unsigned __int16 *)v45;
                    goto LABEL_586;
                  case 3:
                    int v146 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                    goto LABEL_586;
                  case 4:
                    int v146 = *(_DWORD *)v45;
LABEL_586:
                    if (v27 < 4) {
                      unsigned int v142 = (v146 | (v143 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v142 = v146 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              uint64_t v430 = v18;
              uint64_t v306 = v27;
              switch(v142)
              {
                case 1u:
                case 8u:
                case 9u:
                  goto LABEL_598;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  goto LABEL_597;
                default:
                  goto LABEL_600;
              }
              goto LABEL_600;
            case 1u:
              unsigned int v147 = v45[v27];
              unsigned int v148 = v147 - 10;
              if (v147 < 0xA)
              {
                size_t v145 = v27 + 1;
              }
              else
              {
                if (v27 <= 3) {
                  uint64_t v149 = v27;
                }
                else {
                  uint64_t v149 = 4;
                }
                size_t v145 = v27 + 1;
                switch(v149)
                {
                  case 1:
                    int v150 = *v45;
                    goto LABEL_593;
                  case 2:
                    int v150 = *(unsigned __int16 *)v45;
                    goto LABEL_593;
                  case 3:
                    int v150 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                    goto LABEL_593;
                  case 4:
                    int v150 = *(_DWORD *)v45;
LABEL_593:
                    if (v27 < 4) {
                      unsigned int v147 = (v150 | (v148 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v147 = v150 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              uint64_t v430 = v18;
              uint64_t v306 = v27;
              switch(v147)
              {
                case 1u:
                case 8u:
                case 9u:
LABEL_598:

                  goto LABEL_599;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
LABEL_597:
                  (*(void (**)(unsigned __int8 *, uint64_t))(v443 + 8))(v45, v442);
LABEL_599:
                  size_t v145 = __n;
                  break;
                default:
                  break;
              }
LABEL_600:
              unint64_t v307 = (((unint64_t)v45 | 7) + v145) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v307 + 8) >= 0xFFFFFFFFuLL)
              {
                swift_bridgeObjectRelease();
                sub_1B90CBFF4(*(void **)(v307 + 16), *(void *)(v307 + 24), *(void *)(v307 + 32), *(void *)(v307 + 40), *(void *)(v307 + 48), *(void *)(v307 + 56), *(unsigned char *)(v307 + 64));
                int v308 = *(unsigned __int8 *)(v307 + 120);
                if (v308 != 255) {
                  sub_1B90CC01C(*(void **)(v307 + 72), *(void *)(v307 + 80), *(void *)(v307 + 88), *(void *)(v307 + 96), *(void *)(v307 + 104), *(void *)(v307 + 112), v308 & 1);
                }
              }

              uint64_t v27 = v306;
              uint64_t v20 = v430;
              uint64_t v21 = v437;
              uint64_t v30 = v438;
              uint64_t v51 = v435;
              uint64_t v23 = v436;
              int v31 = v141;
              uint64_t v53 = v434;
              goto LABEL_604;
            case 2u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v434;
              uint64_t v51 = v435;
              int v31 = v141;
              uint64_t v23 = v436;
              uint64_t v21 = v437;
              uint64_t v30 = v438;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              BOOL v153 = (id *)((unint64_t)&v45[v438] & v435);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
                  goto LABEL_472;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                  goto LABEL_276;
                default:
                  goto LABEL_604;
              }
              goto LABEL_604;
            case 3u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v434;
              uint64_t v51 = v435;
              int v31 = v141;
              uint64_t v23 = v436;
              uint64_t v21 = v437;
              uint64_t v30 = v438;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              BOOL v153 = (id *)((unint64_t)&v45[v438] & v435);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
                  goto LABEL_472;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                  goto LABEL_276;
                default:
                  goto LABEL_604;
              }
              goto LABEL_604;
            case 4u:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              uint64_t v53 = v434;
              uint64_t v51 = v435;
              int v31 = v141;
              uint64_t v23 = v436;
              uint64_t v21 = v437;
              uint64_t v30 = v438;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
              BOOL v153 = (id *)((unint64_t)&v45[v438] & v435);
              switch(*((unsigned char *)v153 + v151))
              {
                case 1:
                case 8:
                case 9:
LABEL_472:

                  goto LABEL_471;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
LABEL_276:
                  uint64_t v154 = *(void (**)(void))(v443 + 8);
                  goto LABEL_470;
                default:
                  goto LABEL_604;
              }
              goto LABEL_604;
            case 5u:
              id v155 = (id)*((void *)v45 + 2);
              goto LABEL_284;
            case 6u:
              id v155 = *(id *)v45;
LABEL_284:
              uint64_t v151 = v27;
              uint64_t v152 = v20;

              goto LABEL_471;
            case 7u:
              if (v31 < 0)
              {
                uint64_t v235 = (unint64_t)&v45[v18 + 8] & v431;
                uint64_t v236 = v18;
                uint64_t v237 = v27;
                int v157 = (*(uint64_t (**)(uint64_t))(v440 + 48))(v235);
                uint64_t v53 = v434;
                uint64_t v51 = v435;
                int v31 = v141;
                uint64_t v23 = v436;
                uint64_t v21 = v437;
                uint64_t v30 = v438;
                uint64_t v20 = v236;
                uint64_t v27 = v237;
              }
              else
              {
                id v156 = *(id *)v45;
                if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                  LODWORD(v156) = -1;
                }
                int v157 = v156 + 1;
              }
              if (!v157)
              {
                uint64_t v238 = v27;
                uint64_t v239 = v20;
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v440 + 8))((unint64_t)&v45[v239 + 8] & v431, v441);
                uint64_t v53 = v434;
                uint64_t v51 = v435;
                int v31 = v141;
                uint64_t v23 = v436;
                uint64_t v21 = v437;
                uint64_t v30 = v438;
                uint64_t v20 = v239;
                uint64_t v27 = v238;
              }
              unint64_t v240 = (((unint64_t)v45 | 7) + v432) & 0xFFFFFFFFFFFFFFF8;
              if (*(void *)(v240 + 8) >= 0xFFFFFFFFuLL)
              {
                uint64_t v241 = v27;
                uint64_t v242 = v34;
                uint64_t v243 = v20;
                swift_bridgeObjectRelease();

                uint64_t v53 = v434;
                uint64_t v51 = v435;
                int v31 = v141;
                uint64_t v23 = v436;
                uint64_t v21 = v437;
                uint64_t v30 = v438;
                uint64_t v20 = v243;
                uint64_t v34 = v242;
                uint64_t v27 = v241;
              }
              goto LABEL_604;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v234 = v45[v26];
                if (v234 < 3) {
                  goto LABEL_468;
                }
                unsigned int v160 = v234 - 2;
              }
              else
              {
                uint64_t v158 = v18;
                uint64_t v159 = v27;
                unsigned int v160 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v443 + 48))(v45, v34, v442);
                uint64_t v53 = v434;
                uint64_t v51 = v435;
                int v31 = v141;
                uint64_t v23 = v436;
                uint64_t v21 = v437;
                uint64_t v30 = v438;
                uint64_t v20 = v158;
                uint64_t v27 = v159;
              }
              if (v160) {
                goto LABEL_604;
              }
LABEL_468:
              uint64_t v154 = *(void (**)(void))(v443 + 8);
              uint64_t v152 = v20;
LABEL_469:
              uint64_t v151 = v27;
LABEL_470:
              v154();
LABEL_471:
              uint64_t v53 = v434;
              uint64_t v51 = v435;
              int v31 = v141;
              uint64_t v23 = v436;
              uint64_t v21 = v437;
              uint64_t v30 = v438;
              uint64_t v20 = v152;
              uint64_t v27 = v151;
LABEL_604:
              if (v37 > 3) {
                goto LABEL_605;
              }
              unsigned int v310 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v310 > 0xFFF5)
              {
                unsigned int v309 = *(_DWORD *)((char *)v46 + v37);
              }
              else if (v310 <= 0xF5)
              {
LABEL_605:
                unsigned int v309 = *((unsigned __int8 *)v46 + v37);
              }
              else
              {
                unsigned int v309 = *(unsigned __int16 *)((char *)v46 + v37);
              }
              unsigned int v311 = v309 - 10;
              char v38 = v446;
              if (v309 >= 0xA)
              {
                if (v37 <= 3) {
                  uint64_t v312 = v37;
                }
                else {
                  uint64_t v312 = 4;
                }
                switch(v312)
                {
                  case 1:
                    int v313 = *(unsigned __int8 *)v46;
                    goto LABEL_619;
                  case 2:
                    int v313 = *v46;
                    goto LABEL_619;
                  case 3:
                    int v313 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_619;
                  case 4:
                    int v313 = *(_DWORD *)v46;
LABEL_619:
                    if (v37 < 4) {
                      unsigned int v309 = (v313 | (v311 << (8 * v37))) + 10;
                    }
                    else {
                      unsigned int v309 = v313 + 10;
                    }
                    break;
                  default:
                    goto LABEL_622;
                }
              }
              break;
            case 9u:
              uint64_t v154 = *(void (**)(void))(v23 + 8);
              uint64_t v152 = v18;
              goto LABEL_469;
            default:
              goto LABEL_604;
          }
LABEL_622:
          switch(v309)
          {
            case 0u:
              unsigned int v314 = *((unsigned __int8 *)v46 + v27);
              unsigned int v315 = v314 - 10;
              if (v314 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v316 = v27;
                }
                else {
                  uint64_t v316 = 4;
                }
                switch(v316)
                {
                  case 1:
                    int v317 = *(unsigned __int8 *)v46;
                    goto LABEL_716;
                  case 2:
                    int v317 = *v46;
                    goto LABEL_716;
                  case 3:
                    int v317 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_716;
                  case 4:
                    int v317 = *(_DWORD *)v46;
LABEL_716:
                    if (v27 < 4) {
                      unsigned int v314 = (v317 | (v315 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v314 = v317 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v314)
              {
                case 1u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v343 = 1;
                  break;
                case 2u:
                  uint64_t v345 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v345;
                  char v343 = 2;
                  break;
                case 3u:
                  uint64_t v346 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v346;
                  char v343 = 3;
                  break;
                case 4u:
                  uint64_t v347 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v347;
                  char v343 = 4;
                  break;
                case 5u:
                  uint64_t v348 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v348;
                  char v343 = 5;
                  break;
                case 6u:
                  uint64_t v355 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v355;
                  char v343 = 6;
                  break;
                case 7u:
                  long long v349 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v349;
                  char v343 = 7;
                  break;
                case 8u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v343 = 8;
                  break;
                case 9u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v343 = 9;
                  break;
                default:
                  char v343 = 0;
                  *unint64_t v45 = *(unsigned char *)v46;
                  break;
              }
              v45[v27] = v343;
              unint64_t v356 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v357 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              long long v358 = *(_OWORD *)v357;
              long long v359 = *(_OWORD *)(v357 + 16);
              long long v360 = *(_OWORD *)(v357 + 48);
              *(_OWORD *)(v356 + 32) = *(_OWORD *)(v357 + 32);
              *(_OWORD *)(v356 + 48) = v360;
              *(_OWORD *)unint64_t v356 = v358;
              *(_OWORD *)(v356 + 16) = v359;
              long long v361 = *(_OWORD *)(v357 + 64);
              long long v362 = *(_OWORD *)(v357 + 80);
              long long v363 = *(_OWORD *)(v357 + 96);
              *(_OWORD *)(v356 + 106) = *(_OWORD *)(v357 + 106);
              *(_OWORD *)(v356 + 80) = v362;
              *(_OWORD *)(v356 + 96) = v363;
              *(_OWORD *)(v356 + 64) = v361;
              *(unsigned char *)(v356 + 122) = *(unsigned char *)(v357 + 122);
              *(unsigned char *)(v356 + 123) = *(unsigned char *)(v357 + 123);
              *(unsigned char *)(v356 + 124) = *(unsigned char *)(v357 + 124);
              *(unsigned char *)(v356 + 125) = *(unsigned char *)(v357 + 125);
              *(unsigned char *)(v356 + 126) = *(unsigned char *)(v357 + 126);
              *(void *)((v356 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v357 + 134) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_746;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 0;
              }
              else
              {
                if (v335 <= 0xF5)
                {
LABEL_746:
                  v45[v37] = 0;
                  break;
                }
                *(_WORD *)&v45[v37] = 0;
              }
              goto LABEL_765;
            case 1u:
              unsigned int v318 = *((unsigned __int8 *)v46 + v27);
              unsigned int v319 = v318 - 10;
              if (v318 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v320 = v27;
                }
                else {
                  uint64_t v320 = 4;
                }
                switch(v320)
                {
                  case 1:
                    int v321 = *(unsigned __int8 *)v46;
                    goto LABEL_724;
                  case 2:
                    int v321 = *v46;
                    goto LABEL_724;
                  case 3:
                    int v321 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_724;
                  case 4:
                    int v321 = *(_DWORD *)v46;
LABEL_724:
                    if (v27 < 4) {
                      unsigned int v318 = (v321 | (v319 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v318 = v321 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v318)
              {
                case 1u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v344 = 1;
                  break;
                case 2u:
                  uint64_t v350 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v350;
                  char v344 = 2;
                  break;
                case 3u:
                  uint64_t v351 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v351;
                  char v344 = 3;
                  break;
                case 4u:
                  uint64_t v352 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v352;
                  char v344 = 4;
                  break;
                case 5u:
                  uint64_t v353 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v353;
                  char v344 = 5;
                  break;
                case 6u:
                  uint64_t v364 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v27 = v364;
                  char v344 = 6;
                  break;
                case 7u:
                  long long v354 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v354;
                  char v344 = 7;
                  break;
                case 8u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v344 = 8;
                  break;
                case 9u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v344 = 9;
                  break;
                default:
                  char v344 = 0;
                  *unint64_t v45 = *(unsigned char *)v46;
                  break;
              }
              v45[v27] = v344;
              unint64_t v365 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v366 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              long long v367 = *(_OWORD *)v366;
              long long v368 = *(_OWORD *)(v366 + 16);
              long long v369 = *(_OWORD *)(v366 + 48);
              *(_OWORD *)(v365 + 32) = *(_OWORD *)(v366 + 32);
              *(_OWORD *)(v365 + 48) = v369;
              *(_OWORD *)unint64_t v365 = v367;
              *(_OWORD *)(v365 + 16) = v368;
              long long v370 = *(_OWORD *)(v366 + 64);
              long long v371 = *(_OWORD *)(v366 + 80);
              long long v372 = *(_OWORD *)(v366 + 96);
              *(_OWORD *)(v365 + 106) = *(_OWORD *)(v366 + 106);
              *(_OWORD *)(v365 + 80) = v371;
              *(_OWORD *)(v365 + 96) = v372;
              *(_OWORD *)(v365 + 64) = v370;
              *(unsigned char *)(v365 + 122) = *(unsigned char *)(v366 + 122);
              *(unsigned char *)(v365 + 123) = *(unsigned char *)(v366 + 123);
              *(unsigned char *)(v365 + 124) = *(unsigned char *)(v366 + 124);
              *(unsigned char *)(v365 + 125) = *(unsigned char *)(v366 + 125);
              *(unsigned char *)(v365 + 126) = *(unsigned char *)(v366 + 126);
              *(void *)((v365 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v366 + 134) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_754;
              }
              int v342 = 1;
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5) {
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_754:
                char v329 = 1;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 1;
              goto LABEL_765;
            case 2u:
              *(void *)unint64_t v45 = *(void *)v46;
              uint64_t v322 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              uint64_t v323 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v323[v27])
              {
                case 0:
                  unsigned char *v322 = *v323;
                  v322[v27] = 0;
                  break;
                case 1:
                  *(void *)uint64_t v322 = *(void *)v323;
                  v322[v27] = 1;
                  break;
                case 2:
                  uint64_t v412 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v322[v412] = 2;
                  break;
                case 3:
                  uint64_t v413 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v322[v413] = 3;
                  break;
                case 4:
                  uint64_t v414 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v322[v414] = 4;
                  break;
                case 5:
                  uint64_t v415 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v322[v415] = 5;
                  break;
                case 6:
                  uint64_t v416 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v322[v416] = 6;
                  break;
                case 7:
                  long long v417 = *(_OWORD *)v323;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)uint64_t v322 = v417;
                  v322[v27] = 7;
                  break;
                case 8:
                  *(void *)uint64_t v322 = *(void *)v323;
                  v322[v27] = 8;
                  break;
                case 9:
                  *(void *)uint64_t v322 = *(void *)v323;
                  v322[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v323, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_663;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 2;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_663:
                char v329 = 2;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 2;
              goto LABEL_765;
            case 3u:
              *(void *)unint64_t v45 = *(void *)v46;
              uint64_t v324 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              uint64_t v325 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v325[v27])
              {
                case 0:
                  *uint64_t v324 = *v325;
                  v324[v27] = 0;
                  break;
                case 1:
                  *(void *)uint64_t v324 = *(void *)v325;
                  v324[v27] = 1;
                  break;
                case 2:
                  uint64_t v418 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v324[v418] = 2;
                  break;
                case 3:
                  uint64_t v419 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v324[v419] = 3;
                  break;
                case 4:
                  uint64_t v420 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v324[v420] = 4;
                  break;
                case 5:
                  uint64_t v421 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v324[v421] = 5;
                  break;
                case 6:
                  uint64_t v422 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v324[v422] = 6;
                  break;
                case 7:
                  long long v423 = *(_OWORD *)v325;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)uint64_t v324 = v423;
                  v324[v27] = 7;
                  break;
                case 8:
                  *(void *)uint64_t v324 = *(void *)v325;
                  v324[v27] = 8;
                  break;
                case 9:
                  *(void *)uint64_t v324 = *(void *)v325;
                  v324[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v325, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_666;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 3;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_666:
                char v329 = 3;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 3;
              goto LABEL_765;
            case 4u:
              *(void *)unint64_t v45 = *(void *)v46;
              uint64_t v326 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              uint64_t v327 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v327[v27])
              {
                case 0:
                  unsigned char *v326 = *v327;
                  v326[v27] = 0;
                  break;
                case 1:
                  *(void *)uint64_t v326 = *(void *)v327;
                  v326[v27] = 1;
                  break;
                case 2:
                  uint64_t v424 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v326[v424] = 2;
                  break;
                case 3:
                  uint64_t v425 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v326[v425] = 3;
                  break;
                case 4:
                  uint64_t v426 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v326[v426] = 4;
                  break;
                case 5:
                  uint64_t v427 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v326[v427] = 5;
                  break;
                case 6:
                  uint64_t v428 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v326[v428] = 6;
                  break;
                case 7:
                  long long v429 = *(_OWORD *)v327;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)uint64_t v326 = v429;
                  v326[v27] = 7;
                  break;
                case 8:
                  *(void *)uint64_t v326 = *(void *)v327;
                  v326[v27] = 8;
                  break;
                case 9:
                  *(void *)uint64_t v326 = *(void *)v327;
                  v326[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v327, __n);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_669;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 4;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_669:
                char v329 = 4;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 4;
              goto LABEL_765;
            case 5u:
              long long v328 = *(_OWORD *)v46;
              *((void *)v45 + 2) = *((void *)v46 + 2);
              *(_OWORD *)unint64_t v45 = v328;
              if (v37 > 3) {
                goto LABEL_642;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 5;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_642:
                char v329 = 5;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 5;
              goto LABEL_765;
            case 6u:
              *(void *)unint64_t v45 = *(void *)v46;
              if (v37 > 3) {
                goto LABEL_658;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 6;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_658:
                char v329 = 6;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 6;
              goto LABEL_765;
            case 7u:
              if (v31 < 0)
              {
                uint64_t v330 = v439;
                uint64_t v338 = v20;
                int v332 = (*(uint64_t (**)(unint64_t))(v440 + 48))(((unint64_t)v46 + v439) & v431);
                uint64_t v20 = v338;
              }
              else
              {
                uint64_t v330 = v439;
                uint64_t v331 = *(void *)v46;
                if (*(void *)v46 >= 0xFFFFFFFFuLL) {
                  LODWORD(v331) = -1;
                }
                int v332 = v331 + 1;
              }
              if (v332)
              {
                memcpy(v45, v46, v432);
              }
              else
              {
                *(void *)unint64_t v45 = *(void *)v46;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))((unint64_t)&v45[v20 + 8] & v431, ((unint64_t)v46 + v330) & v431, v441);
              }
              unint64_t v339 = (((unint64_t)v46 | 7) + v432) & 0xFFFFFFFFFFFFFFF8;
              long long v340 = *(_OWORD *)v339;
              unint64_t v341 = (((unint64_t)v45 | 7) + v432) & 0xFFFFFFFFFFFFFFF8;
              *(void *)(v341 + 16) = *(void *)(v339 + 16);
              *(_OWORD *)unint64_t v341 = v340;
              if (v37 > 3) {
                goto LABEL_699;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 7;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_699:
                char v329 = 7;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 7;
              goto LABEL_765;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v337 = *((unsigned __int8 *)v46 + v26);
                if (v337 < 3) {
                  goto LABEL_689;
                }
                unsigned int v336 = v337 - 2;
              }
              else
              {
                unsigned int v336 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v443 + 48))(v46, v34, v442);
              }
              if (v336)
              {
                memcpy(v45, v46, v445);
                goto LABEL_690;
              }
LABEL_689:
              (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
              v45[v26] = *((unsigned char *)v46 + v26);
LABEL_690:
              *(void *)((((unint64_t)v45 | 7) + v445) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7) + v445) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_693;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 8;
                goto LABEL_764;
              }
              if (v335 <= 0xF5)
              {
LABEL_693:
                char v329 = 8;
                goto LABEL_755;
              }
              *(_WORD *)&v45[v37] = 8;
              goto LABEL_765;
            case 9u:
              *unint64_t v45 = *(unsigned char *)v46;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))((unint64_t)&v45[v35] & v53, ((unint64_t)v46 + v35) & v53, v21);
              if (v37 > 3) {
                goto LABEL_648;
              }
              unsigned int v335 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v335 > 0xFFF5)
              {
                int v342 = 9;
LABEL_764:
                *(_DWORD *)&v45[v37] = v342;
                goto LABEL_765;
              }
              if (v335 > 0xF5)
              {
                *(_WORD *)&v45[v37] = 9;
LABEL_765:
                BOOL v295 = v335 > 0xFFF5;
                uint64_t v374 = 2;
                if (v295) {
                  uint64_t v374 = 4;
                }
                goto LABEL_767;
              }
LABEL_648:
              char v329 = 9;
LABEL_755:
              v45[v37] = v329;
              break;
            default:
              if (v37 > 3) {
                goto LABEL_653;
              }
              unsigned int v333 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              uint64_t v334 = 2;
              if (v333 > 0xFFF5) {
                uint64_t v334 = 4;
              }
              if (v333 <= 0xF5) {
LABEL_653:
              }
                uint64_t v334 = 1;
              memcpy(v45, v46, v334 + v37);
              break;
          }
LABEL_756:
          if (v37 > 3) {
            goto LABEL_760;
          }
          unsigned int v373 = ((1 << (8 * v37)) + 1) >> (8 * v37);
          uint64_t v374 = 2;
          if (v373 > 0xFFF5) {
            uint64_t v374 = 4;
          }
          if (v373 <= 0xF5) {
LABEL_760:
          }
            uint64_t v374 = 1;
LABEL_767:
          uint64_t v375 = v374 + v37;
          unint64_t v376 = (unint64_t)&v45[v375];
          unint64_t v377 = (unint64_t)v46 + v375;
          *(unsigned char *)unint64_t v376 = *(unsigned char *)v377;
          unint64_t v378 = v376 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v379 = v377 & 0xFFFFFFFFFFFFFFF8;
          id v380 = *(void **)((v376 & 0xFFFFFFFFFFFFFFF8) + 8);
          *(void *)(v378 + 8) = *(void *)((v377 & 0xFFFFFFFFFFFFFFF8) + 8);

          unint64_t v381 = (v378 + 23) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v382 = (v379 + 23) & 0xFFFFFFFFFFFFFFF8;
          v383 = *(void **)v381;
          *(void *)unint64_t v381 = *(void *)v382;

          *(unsigned char *)(v381 + 8) = *(unsigned char *)(v382 + 8);
          unint64_t v384 = (v378 + 39) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v385 = (v379 + 39) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v386 = *(void *)v385;
          *(unsigned char *)(v384 + 8) = *(unsigned char *)(v385 + 8);
          *(void *)unint64_t v384 = v386;
          unint64_t v387 = (v378 + 55) & 0xFFFFFFFFFFFFFFF8;
          v388 = (void *)((v379 + 55) & 0xFFFFFFFFFFFFFFF8);
          *(void *)unint64_t v387 = *v388;
          v387 += 15;
          swift_bridgeObjectRelease();
          v389 = *(void **)(v387 & 0xFFFFFFFFFFFFFFF8);
          *(void *)(v387 & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);

          if (v37 <= 3) {
            goto LABEL_768;
          }
          goto LABEL_771;
        }
LABEL_118:
        char v85 = 8;
        goto LABEL_119;
      }
      int v77 = v78 + 10;
      if (v78 > 0xF5)
      {
        char v79 = 16;
LABEL_108:
        unsigned int v80 = (1 << v79) - v77;
        unsigned int v81 = 0x7FFFFFFF;
        if (v80 <= 0x7FFFFFFF) {
          int v82 = 0x7FFFFFFF;
        }
        else {
          int v82 = v80;
        }
        if ((v80 & 0x80000000) == 0) {
          unsigned int v81 = v82;
        }
        if (v37 > 3) {
          goto LABEL_114;
        }
        goto LABEL_116;
      }
    }
    else
    {
      int v77 = 11;
    }
    char v79 = 8;
    goto LABEL_108;
  }
  if (v37 > 3)
  {
    int v54 = 11;
LABEL_53:
    char v55 = 8;
    goto LABEL_54;
  }
  unsigned int v60 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v60 > 0xFFF5) {
    goto LABEL_69;
  }
  int v54 = v60 + 10;
  if (v60 <= 0xF5) {
    goto LABEL_53;
  }
  char v55 = 16;
LABEL_54:
  unsigned int v56 = (1 << v55) - v54;
  if ((v56 & 0x80000000) == 0)
  {
    if (v37 > 3) {
      goto LABEL_73;
    }
    goto LABEL_70;
  }
LABEL_69:
  unsigned int v56 = 0x7FFFFFFF;
  if (v37 > 3)
  {
LABEL_73:
    uint64_t v62 = 1;
    goto LABEL_74;
  }
LABEL_70:
  unsigned int v61 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  uint64_t v62 = 2;
  if (v61 > 0xFFF5) {
    uint64_t v62 = 4;
  }
  if (v61 <= 0xF5) {
    goto LABEL_73;
  }
LABEL_74:
  unsigned int v63 = v42 - v56;
  if (v42 <= v56) {
    goto LABEL_91;
  }
  uint64_t v64 = v62 + v37;
  char v65 = 8 * (v62 + v37);
  if (v64 > 3)
  {
LABEL_76:
    int v66 = v45[v64];
    if (!v45[v64]) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  unsigned int v67 = ((v63 + ~(-1 << v65)) >> v65) + 1;
  if (HIWORD(v67))
  {
    int v66 = *(_DWORD *)&v45[v64];
    if (!v66) {
      goto LABEL_91;
    }
LABEL_83:
    int v68 = (v66 - 1) << v65;
    if (v64 > 3) {
      int v68 = 0;
    }
    if (v64)
    {
      if (v64 > 3) {
        LODWORD(v64) = 4;
      }
      switch((int)v64)
      {
        case 2:
          LODWORD(v64) = *(unsigned __int16 *)v45;
          break;
        case 3:
          LODWORD(v64) = *(unsigned __int16 *)v45 | (v45[2] << 16);
          break;
        case 4:
          LODWORD(v64) = *(_DWORD *)v45;
          break;
        default:
          LODWORD(v64) = *v45;
          break;
      }
    }
    if (v56 + (v64 | v68) != -1) {
      goto LABEL_168;
    }
    goto LABEL_103;
  }
  if (v67 > 0xFF)
  {
    int v66 = *(unsigned __int16 *)&v45[v64];
    if (!*(_WORD *)&v45[v64]) {
      goto LABEL_91;
    }
    goto LABEL_83;
  }
  if (v67 >= 2) {
    goto LABEL_76;
  }
LABEL_91:
  if (!v56) {
    goto LABEL_103;
  }
  if (v37 <= 3)
  {
    unsigned int v75 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    if (v75 > 0xFFF5)
    {
      unsigned int v70 = *(_DWORD *)&v45[v37];
      unsigned int v71 = ~v70;
      goto LABEL_101;
    }
    int v73 = v75 + 10;
    if (v75 > 0xF5)
    {
      int v102 = *(unsigned __int16 *)&v45[v37];
      unsigned int v70 = v102 | 0xFFFF0000;
      unsigned int v71 = v102 ^ 0xFFFF;
      char v72 = 16;
    }
    else
    {
      int v76 = v45[v37];
      unsigned int v70 = v76 | 0xFFFFFF00;
      unsigned int v71 = v76 ^ 0xFF;
      char v72 = 8;
    }
  }
  else
  {
    int v69 = v45[v37];
    unsigned int v70 = v69 | 0xFFFFFF00;
    unsigned int v71 = v69 ^ 0xFF;
    char v72 = 8;
    int v73 = 11;
  }
  unsigned int v74 = (1 << v72) - v73;
  if ((v74 & 0x80000000) == 0)
  {
    if (v74 <= v71) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_101:
  if (v71 >= 0x7FFFFFFF) {
    goto LABEL_103;
  }
LABEL_102:
  if (!v70) {
    goto LABEL_103;
  }
LABEL_168:
  if (v37 > 3)
  {
    int v103 = 11;
    goto LABEL_172;
  }
  unsigned int v104 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v104 <= 0xFFF5)
  {
    int v103 = v104 + 10;
    if (v104 > 0xF5)
    {
      char v105 = 16;
LABEL_173:
      unsigned int v106 = (1 << v105) - v103;
      unsigned int v107 = 0x7FFFFFFF;
      if (v106 <= 0x7FFFFFFF) {
        int v108 = 0x7FFFFFFF;
      }
      else {
        int v108 = v106;
      }
      if ((v106 & 0x80000000) == 0) {
        unsigned int v107 = v108;
      }
      if (v37 > 3) {
        goto LABEL_179;
      }
      goto LABEL_181;
    }
LABEL_172:
    char v105 = 8;
    goto LABEL_173;
  }
  unsigned int v107 = 0x7FFFFFFF;
  if (v37 > 3)
  {
LABEL_179:
    int v109 = 11;
LABEL_183:
    char v111 = 8;
    goto LABEL_184;
  }
LABEL_181:
  unsigned int v110 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v110 > 0xFFF5) {
    goto LABEL_188;
  }
  int v109 = v110 + 10;
  if (v110 <= 0xF5) {
    goto LABEL_183;
  }
  char v111 = 16;
LABEL_184:
  int v112 = (1 << v111) - v109;
  if ((v112 & 0x80000000) == 0)
  {
    if (v112 == v107) {
      goto LABEL_186;
    }
LABEL_189:
    if (v37 > 3) {
      goto LABEL_193;
    }
    unsigned int v114 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v115 = 2;
    if (v114 > 0xFFF5) {
      uint64_t v115 = 4;
    }
    if (v114 <= 0xF5) {
LABEL_193:
    }
      uint64_t v115 = 1;
    unint64_t v116 = *(void *)((((unint64_t)v46 + v37 + v115) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v116 >= 0xFFFFFFFF) {
      LODWORD(v116) = -1;
    }
    if (v116 == -1) {
      goto LABEL_300;
    }
    goto LABEL_447;
  }
LABEL_188:
  if (v107 != 0x7FFFFFFF) {
    goto LABEL_189;
  }
LABEL_186:
  if (v37 > 3)
  {
    int v113 = 11;
LABEL_200:
    char v118 = 8;
    goto LABEL_201;
  }
  unsigned int v117 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v117 > 0xFFF5) {
    goto LABEL_204;
  }
  int v113 = v117 + 10;
  if (v117 <= 0xF5) {
    goto LABEL_200;
  }
  char v118 = 16;
LABEL_201:
  unsigned int v119 = (1 << v118) - v113;
  if ((v119 & 0x80000000) == 0)
  {
    if (v37 > 3) {
      goto LABEL_208;
    }
LABEL_205:
    unsigned int v120 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v121 = 2;
    if (v120 > 0xFFF5) {
      uint64_t v121 = 4;
    }
    if (v120 > 0xF5) {
      goto LABEL_209;
    }
    goto LABEL_208;
  }
LABEL_204:
  unsigned int v119 = 0x7FFFFFFF;
  if (v37 <= 3) {
    goto LABEL_205;
  }
LABEL_208:
  uint64_t v121 = 1;
LABEL_209:
  unsigned int v122 = v107 - v119;
  if (v107 <= v119) {
    goto LABEL_288;
  }
  uint64_t v123 = v121 + v37;
  char v124 = 8 * (v121 + v37);
  if (v123 > 3) {
    goto LABEL_211;
  }
  unsigned int v126 = ((v122 + ~(-1 << v124)) >> v124) + 1;
  if (HIWORD(v126))
  {
    int v125 = *(_DWORD *)((char *)v46 + v123);
    if (!v125) {
      goto LABEL_288;
    }
    goto LABEL_221;
  }
  if (v126 > 0xFF)
  {
    int v125 = *(unsigned __int16 *)((char *)v46 + v123);
    if (!*(unsigned __int16 *)((char *)v46 + v123)) {
      goto LABEL_288;
    }
    goto LABEL_221;
  }
  if (v126 >= 2)
  {
LABEL_211:
    int v125 = *((unsigned __int8 *)v46 + v123);
    if (!*((unsigned char *)v46 + v123)) {
      goto LABEL_288;
    }
LABEL_221:
    int v127 = (v125 - 1) << v124;
    if (v123 > 3) {
      int v127 = 0;
    }
    if (v123)
    {
      if (v123 > 3) {
        LODWORD(v123) = 4;
      }
      switch((int)v123)
      {
        case 2:
          LODWORD(v123) = *v46;
          break;
        case 3:
          LODWORD(v123) = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          break;
        case 4:
          LODWORD(v123) = *(_DWORD *)v46;
          break;
        default:
          LODWORD(v123) = *(unsigned __int8 *)v46;
          break;
      }
    }
    if (v119 + (v123 | v127) == -1) {
      goto LABEL_300;
    }
    goto LABEL_447;
  }
LABEL_288:
  if (!v119) {
    goto LABEL_300;
  }
  if (v37 <= 3)
  {
    unsigned int v167 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    if (v167 > 0xFFF5)
    {
      unsigned int v162 = *(_DWORD *)((char *)v46 + v37);
      unsigned int v163 = ~v162;
LABEL_298:
      if (v163 < 0x7FFFFFFF) {
        goto LABEL_299;
      }
      if (v37 > 3) {
        goto LABEL_303;
      }
LABEL_300:
      unsigned int v169 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v169 > 0xFFF5)
      {
        unsigned int v170 = *(_DWORD *)((char *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA) {
          goto LABEL_320;
        }
        goto LABEL_308;
      }
      if (v169 > 0xF5)
      {
        unsigned int v170 = *(unsigned __int16 *)((char *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA)
        {
LABEL_320:
          switch(v170)
          {
            case 0u:
              unsigned int v174 = *((unsigned __int8 *)v46 + v27);
              unsigned int v175 = v174 - 10;
              if (v174 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v176 = v27;
                }
                else {
                  uint64_t v176 = 4;
                }
                switch(v176)
                {
                  case 1:
                    int v177 = *(unsigned __int8 *)v46;
                    goto LABEL_497;
                  case 2:
                    int v177 = *v46;
                    goto LABEL_497;
                  case 3:
                    int v177 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_497;
                  case 4:
                    int v177 = *(_DWORD *)v46;
LABEL_497:
                    if (v27 < 4) {
                      unsigned int v174 = (v177 | (v175 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v174 = v177 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v174)
              {
                case 1u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v245 = 1;
                  break;
                case 2u:
                  uint64_t v255 = v27 + 1;
                  uint64_t v256 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v255;
                  uint64_t v27 = v256;
                  char v245 = 2;
                  break;
                case 3u:
                  uint64_t v257 = v27 + 1;
                  uint64_t v258 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v257;
                  uint64_t v27 = v258;
                  char v245 = 3;
                  break;
                case 4u:
                  uint64_t v259 = v27 + 1;
                  uint64_t v260 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v259;
                  uint64_t v27 = v260;
                  char v245 = 4;
                  break;
                case 5u:
                  uint64_t v261 = v27 + 1;
                  uint64_t v262 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v261;
                  uint64_t v27 = v262;
                  char v245 = 5;
                  break;
                case 6u:
                  uint64_t v263 = v27 + 1;
                  uint64_t v264 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v263;
                  uint64_t v27 = v264;
                  char v245 = 6;
                  break;
                case 7u:
                  long long v265 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v265;
                  char v245 = 7;
                  break;
                case 8u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v245 = 8;
                  break;
                case 9u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v245 = 9;
                  break;
                default:
                  char v245 = 0;
                  *unint64_t v45 = *(unsigned char *)v46;
                  break;
              }
              v45[v27] = v245;
              unint64_t v266 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v267 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              long long v268 = *(_OWORD *)v267;
              long long v269 = *(_OWORD *)(v267 + 16);
              long long v270 = *(_OWORD *)(v267 + 48);
              *(_OWORD *)(v266 + 32) = *(_OWORD *)(v267 + 32);
              *(_OWORD *)(v266 + 48) = v270;
              *(_OWORD *)unint64_t v266 = v268;
              *(_OWORD *)(v266 + 16) = v269;
              long long v271 = *(_OWORD *)(v267 + 64);
              long long v272 = *(_OWORD *)(v267 + 80);
              long long v273 = *(_OWORD *)(v267 + 96);
              *(_OWORD *)(v266 + 106) = *(_OWORD *)(v267 + 106);
              *(_OWORD *)(v266 + 80) = v272;
              *(_OWORD *)(v266 + 96) = v273;
              *(_OWORD *)(v266 + 64) = v271;
              *(unsigned char *)(v266 + 122) = *(unsigned char *)(v267 + 122);
              *(unsigned char *)(v266 + 123) = *(unsigned char *)(v267 + 123);
              *(unsigned char *)(v266 + 124) = *(unsigned char *)(v267 + 124);
              *(unsigned char *)(v266 + 125) = *(unsigned char *)(v267 + 125);
              *(unsigned char *)(v266 + 126) = *(unsigned char *)(v267 + 126);
              *(void *)((v266 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v267 + 134) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_555;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 0;
              }
              else
              {
                if (v191 <= 0xF5)
                {
LABEL_555:
                  v45[v37] = 0;
                  goto LABEL_572;
                }
                *(_WORD *)&v45[v37] = 0;
              }
              goto LABEL_578;
            case 1u:
              unsigned int v180 = *((unsigned __int8 *)v46 + v27);
              unsigned int v181 = v180 - 10;
              if (v180 >= 0xA)
              {
                if (v27 <= 3) {
                  uint64_t v182 = v27;
                }
                else {
                  uint64_t v182 = 4;
                }
                switch(v182)
                {
                  case 1:
                    int v183 = *(unsigned __int8 *)v46;
                    goto LABEL_505;
                  case 2:
                    int v183 = *v46;
                    goto LABEL_505;
                  case 3:
                    int v183 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
                    goto LABEL_505;
                  case 4:
                    int v183 = *(_DWORD *)v46;
LABEL_505:
                    if (v27 < 4) {
                      unsigned int v180 = (v183 | (v181 << (8 * v27))) + 10;
                    }
                    else {
                      unsigned int v180 = v183 + 10;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v180)
              {
                case 1u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v246 = 1;
                  break;
                case 2u:
                  uint64_t v274 = v27 + 1;
                  uint64_t v275 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v274;
                  uint64_t v27 = v275;
                  char v246 = 2;
                  break;
                case 3u:
                  uint64_t v276 = v27 + 1;
                  uint64_t v277 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v276;
                  uint64_t v27 = v277;
                  char v246 = 3;
                  break;
                case 4u:
                  uint64_t v278 = v27 + 1;
                  uint64_t v279 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v278;
                  uint64_t v27 = v279;
                  char v246 = 4;
                  break;
                case 5u:
                  uint64_t v280 = v27 + 1;
                  uint64_t v281 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v280;
                  uint64_t v27 = v281;
                  char v246 = 5;
                  break;
                case 6u:
                  uint64_t v282 = v27 + 1;
                  uint64_t v283 = v27;
                  (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
                  uint64_t v28 = v282;
                  uint64_t v27 = v283;
                  char v246 = 6;
                  break;
                case 7u:
                  long long v284 = *(_OWORD *)v46;
                  *(_OWORD *)(v45 + 9) = *(_OWORD *)((char *)v46 + 9);
                  *(_OWORD *)unint64_t v45 = v284;
                  char v246 = 7;
                  break;
                case 8u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v246 = 8;
                  break;
                case 9u:
                  *(void *)unint64_t v45 = *(void *)v46;
                  char v246 = 9;
                  break;
                default:
                  char v246 = 0;
                  *unint64_t v45 = *(unsigned char *)v46;
                  break;
              }
              v45[v27] = v246;
              unint64_t v285 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v286 = ((unint64_t)v46 + v27 + 8) & 0xFFFFFFFFFFFFFFF8;
              long long v287 = *(_OWORD *)v286;
              long long v288 = *(_OWORD *)(v286 + 16);
              long long v289 = *(_OWORD *)(v286 + 48);
              *(_OWORD *)(v285 + 32) = *(_OWORD *)(v286 + 32);
              *(_OWORD *)(v285 + 48) = v289;
              *(_OWORD *)unint64_t v285 = v287;
              *(_OWORD *)(v285 + 16) = v288;
              long long v290 = *(_OWORD *)(v286 + 64);
              long long v291 = *(_OWORD *)(v286 + 80);
              long long v292 = *(_OWORD *)(v286 + 96);
              *(_OWORD *)(v285 + 106) = *(_OWORD *)(v286 + 106);
              *(_OWORD *)(v285 + 80) = v291;
              *(_OWORD *)(v285 + 96) = v292;
              *(_OWORD *)(v285 + 64) = v290;
              *(unsigned char *)(v285 + 122) = *(unsigned char *)(v286 + 122);
              *(unsigned char *)(v285 + 123) = *(unsigned char *)(v286 + 123);
              *(unsigned char *)(v285 + 124) = *(unsigned char *)(v286 + 124);
              *(unsigned char *)(v285 + 125) = *(unsigned char *)(v286 + 125);
              *(unsigned char *)(v285 + 126) = *(unsigned char *)(v286 + 126);
              *(void *)((v285 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v286 + 134) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_570;
              }
              __int16 v244 = 1;
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 1;
                goto LABEL_578;
              }
              if (v191 > 0xF5) {
                goto LABEL_577;
              }
LABEL_570:
              char v192 = 1;
              goto LABEL_571;
            case 2u:
              *(void *)unint64_t v45 = *(void *)v46;
              uint64_t v184 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              long long v185 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v185[v27])
              {
                case 0:
                  unsigned char *v184 = *v185;
                  v184[v27] = 0;
                  break;
                case 1:
                  *(void *)uint64_t v184 = *(void *)v185;
                  v184[v27] = 1;
                  break;
                case 2:
                  uint64_t v394 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v184[v394] = 2;
                  break;
                case 3:
                  uint64_t v395 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v184[v395] = 3;
                  break;
                case 4:
                  uint64_t v396 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v184[v396] = 4;
                  break;
                case 5:
                  uint64_t v397 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v184[v397] = 5;
                  break;
                case 6:
                  uint64_t v398 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v184[v398] = 6;
                  break;
                case 7:
                  long long v399 = *(_OWORD *)v185;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)uint64_t v184 = v399;
                  v184[v27] = 7;
                  break;
                case 8:
                  *(void *)uint64_t v184 = *(void *)v185;
                  v184[v27] = 8;
                  break;
                case 9:
                  *(void *)uint64_t v184 = *(void *)v185;
                  v184[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v185, v27 + 1);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_419;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 2;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_419:
                char v192 = 2;
                goto LABEL_571;
              }
              __int16 v244 = 2;
              goto LABEL_577;
            case 3u:
              *(void *)unint64_t v45 = *(void *)v46;
              uint64_t v186 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              uint64_t v187 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v187[v27])
              {
                case 0:
                  unsigned char *v186 = *v187;
                  v186[v27] = 0;
                  break;
                case 1:
                  *(void *)uint64_t v186 = *(void *)v187;
                  v186[v27] = 1;
                  break;
                case 2:
                  uint64_t v400 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v186[v400] = 2;
                  break;
                case 3:
                  uint64_t v401 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v186[v401] = 3;
                  break;
                case 4:
                  uint64_t v402 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v186[v402] = 4;
                  break;
                case 5:
                  uint64_t v403 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v186[v403] = 5;
                  break;
                case 6:
                  uint64_t v404 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v186[v404] = 6;
                  break;
                case 7:
                  long long v405 = *(_OWORD *)v187;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)uint64_t v186 = v405;
                  v186[v27] = 7;
                  break;
                case 8:
                  *(void *)uint64_t v186 = *(void *)v187;
                  v186[v27] = 8;
                  break;
                case 9:
                  *(void *)uint64_t v186 = *(void *)v187;
                  v186[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v187, v27 + 1);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_424;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 3;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_424:
                char v192 = 3;
                goto LABEL_571;
              }
              __int16 v244 = 3;
              goto LABEL_577;
            case 4u:
              *(void *)unint64_t v45 = *(void *)v46;
              size_t v188 = (unsigned char *)((unint64_t)&v45[v30] & v51);
              uint64_t v189 = (unsigned char *)(((unint64_t)v46 + v30) & v51);
              switch(v189[v27])
              {
                case 0:
                  *size_t v188 = *v189;
                  v188[v27] = 0;
                  break;
                case 1:
                  *(void *)size_t v188 = *(void *)v189;
                  v188[v27] = 1;
                  break;
                case 2:
                  uint64_t v406 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v188[v406] = 2;
                  break;
                case 3:
                  uint64_t v407 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v188[v407] = 3;
                  break;
                case 4:
                  uint64_t v408 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v188[v408] = 4;
                  break;
                case 5:
                  uint64_t v409 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v188[v409] = 5;
                  break;
                case 6:
                  uint64_t v410 = v27;
                  (*(void (**)(unint64_t))(v443 + 32))((unint64_t)&v45[v30] & v51);
                  v188[v410] = 6;
                  break;
                case 7:
                  long long v411 = *(_OWORD *)v189;
                  *(_OWORD *)(((unint64_t)&v45[v30] & v51) + 9) = *(_OWORD *)((((unint64_t)v46 + v30) & v51)
                                                                                   + 9);
                  *(_OWORD *)size_t v188 = v411;
                  v188[v27] = 7;
                  break;
                case 8:
                  *(void *)size_t v188 = *(void *)v189;
                  v188[v27] = 8;
                  break;
                case 9:
                  *(void *)size_t v188 = *(void *)v189;
                  v188[v27] = 9;
                  break;
                default:
                  memcpy((void *)((unint64_t)&v45[v30] & v51), v189, v27 + 1);
                  break;
              }
              if (v37 > 3) {
                goto LABEL_429;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 4;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_429:
                char v192 = 4;
                goto LABEL_571;
              }
              __int16 v244 = 4;
              goto LABEL_577;
            case 5u:
              long long v190 = *(_OWORD *)v46;
              *((void *)v45 + 2) = *((void *)v46 + 2);
              *(_OWORD *)unint64_t v45 = v190;
              if (v37 > 3) {
                goto LABEL_348;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 5;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_348:
                char v192 = 5;
                goto LABEL_571;
              }
              __int16 v244 = 5;
              goto LABEL_577;
            case 6u:
              *(void *)unint64_t v45 = *(void *)v46;
              if (v37 > 3) {
                goto LABEL_352;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 6;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_352:
                char v192 = 6;
                goto LABEL_571;
              }
              __int16 v244 = 6;
              goto LABEL_577;
            case 7u:
              uint64_t v193 = ~v18;
              if (v31 < 0)
              {
                uint64_t v194 = v18 + 8;
                int v196 = (*(uint64_t (**)(unint64_t))(v440 + 48))(((unint64_t)v46 + v18 + 8) & v193);
                uint64_t v20 = v18;
              }
              else
              {
                uint64_t v194 = v18 + 8;
                uint64_t v195 = *(void *)v46;
                if (*(void *)v46 >= 0xFFFFFFFFuLL) {
                  LODWORD(v195) = -1;
                }
                int v196 = v195 + 1;
              }
              if (v196)
              {
                memcpy(v45, v46, v33);
              }
              else
              {
                *(void *)unint64_t v45 = *(void *)v46;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))((unint64_t)&v45[v20 + 8] & v193, ((unint64_t)v46 + v194) & v193, v441);
              }
              unint64_t v231 = (((unint64_t)v46 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
              long long v232 = *(_OWORD *)v231;
              unint64_t v233 = (((unint64_t)v45 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
              *(void *)(v233 + 16) = *(void *)(v231 + 16);
              *(_OWORD *)unint64_t v233 = v232;
              if (v37 > 3) {
                goto LABEL_462;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 7;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_462:
                char v192 = 7;
                goto LABEL_571;
              }
              __int16 v244 = 7;
              goto LABEL_577;
            case 8u:
              if (v34 < 0xFD)
              {
                unsigned int v227 = *((unsigned __int8 *)v46 + v26);
                if (v227 < 3) {
                  goto LABEL_434;
                }
                unsigned int v197 = v227 - 2;
              }
              else
              {
                unsigned int v197 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v443 + 48))(v46, v34, v442);
              }
              if (v197)
              {
                memcpy(v45, v46, v26 + 1);
                goto LABEL_435;
              }
LABEL_434:
              (*(void (**)(unsigned __int8 *, unsigned __int16 *, uint64_t))(v443 + 32))(v45, v46, v442);
              v45[v26] = *((unsigned char *)v46 + v26);
LABEL_435:
              *(void *)((((unint64_t)v45 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8);
              if (v37 > 3) {
                goto LABEL_438;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 8;
                goto LABEL_578;
              }
              if (v191 <= 0xF5)
              {
LABEL_438:
                char v192 = 8;
                goto LABEL_571;
              }
              __int16 v244 = 8;
              goto LABEL_577;
            case 9u:
              *unint64_t v45 = *(unsigned char *)v46;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))((unint64_t)&v45[v35] & v53, ((unint64_t)v46 + v35) & v53, v21);
              if (v37 > 3) {
                goto LABEL_362;
              }
              unsigned int v191 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              if (v191 > 0xFFF5)
              {
                *(_DWORD *)&v45[v37] = 9;
              }
              else
              {
                if (v191 <= 0xF5)
                {
LABEL_362:
                  char v192 = 9;
LABEL_571:
                  v45[v37] = v192;
LABEL_572:
                  if (v37 > 3) {
                    goto LABEL_576;
                  }
                  unsigned int v293 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                  uint64_t v294 = 2;
                  if (v293 > 0xFFF5) {
                    uint64_t v294 = 4;
                  }
                  if (v293 <= 0xF5) {
LABEL_576:
                  }
                    uint64_t v294 = 1;
LABEL_580:
                  uint64_t v296 = v294 + v37;
                  unint64_t v297 = (unint64_t)&v45[v296];
                  unint64_t v298 = (unint64_t)v46 + v296;
                  *(unsigned char *)unint64_t v297 = *(unsigned char *)v298;
                  v297 &= 0xFFFFFFFFFFFFFFF8;
                  v298 &= 0xFFFFFFFFFFFFFFF8;
                  *(void *)(v297 + 8) = *(void *)(v298 + 8);
                  unint64_t v299 = (v297 + 23) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v300 = (v298 + 23) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v299 = *(void *)v300;
                  *(unsigned char *)(v299 + 8) = *(unsigned char *)(v300 + 8);
                  unint64_t v301 = (v297 + 39) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v302 = (v298 + 39) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v303 = *(void *)v302;
                  *(unsigned char *)(v301 + 8) = *(unsigned char *)(v302 + 8);
                  *(void *)unint64_t v301 = v303;
                  long long v304 = (void *)((v297 + 55) & 0xFFFFFFFFFFFFFFF8);
                  long long v305 = (void *)((v298 + 55) & 0xFFFFFFFFFFFFFFF8);
                  *long long v304 = *v305;
                  *(void *)(((unint64_t)v304 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v305
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  if (v37 <= 3)
                  {
LABEL_768:
                    unsigned int v390 = ((1 << (8 * v37)) + 1) >> (8 * v37);
                    uint64_t v391 = 2;
                    if (v390 > 0xFFF5) {
                      uint64_t v391 = 4;
                    }
                    if (v390 > 0xF5) {
                      goto LABEL_772;
                    }
                  }
LABEL_771:
                  uint64_t v391 = 1;
LABEL_772:
                  unint64_t v392 = ((((((v391 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 8;
                  *(void *)((unint64_t)&v45[v392] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v46
                                                                                                + v392) & 0xFFFFFFFFFFFFFFF8);
                  return v38;
                }
                __int16 v244 = 9;
LABEL_577:
                *(_WORD *)&v45[v37] = v244;
              }
LABEL_578:
              BOOL v295 = v191 > 0xFFF5;
              uint64_t v294 = 2;
              if (v295) {
                uint64_t v294 = 4;
              }
              goto LABEL_580;
            default:
              if (v37 > 3) {
                goto LABEL_331;
              }
              unsigned int v178 = ((1 << (8 * v37)) + 1) >> (8 * v37);
              uint64_t v179 = 2;
              if (v178 > 0xFFF5) {
                uint64_t v179 = 4;
              }
              if (v178 <= 0xF5) {
LABEL_331:
              }
                uint64_t v179 = 1;
              memcpy(v45, v46, v179 + v37);
              goto LABEL_572;
          }
        }
      }
      else
      {
LABEL_303:
        unsigned int v170 = *((unsigned __int8 *)v46 + v37);
        unsigned int v171 = v170 - 10;
        if (v170 < 0xA) {
          goto LABEL_320;
        }
      }
LABEL_308:
      if (v37 <= 3) {
        uint64_t v172 = v37;
      }
      else {
        uint64_t v172 = 4;
      }
      switch(v172)
      {
        case 1:
          int v173 = *(unsigned __int8 *)v46;
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 2:
          int v173 = *v46;
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 3:
          int v173 = *v46 | (*((unsigned __int8 *)v46 + 2) << 16);
          if (v37 < 4) {
            goto LABEL_315;
          }
          goto LABEL_319;
        case 4:
          int v173 = *(_DWORD *)v46;
          if (v37 < 4) {
LABEL_315:
          }
            unsigned int v170 = (v173 | (v171 << (8 * v37))) + 10;
          else {
LABEL_319:
          }
            unsigned int v170 = v173 + 10;
          break;
        default:
          goto LABEL_320;
      }
      goto LABEL_320;
    }
    int v165 = v167 + 10;
    if (v167 > 0xF5)
    {
      int v199 = *(unsigned __int16 *)((char *)v46 + v37);
      unsigned int v162 = v199 | 0xFFFF0000;
      unsigned int v163 = v199 ^ 0xFFFF;
      char v164 = 16;
    }
    else
    {
      int v168 = *((unsigned __int8 *)v46 + v37);
      unsigned int v162 = v168 | 0xFFFFFF00;
      unsigned int v163 = v168 ^ 0xFF;
      char v164 = 8;
    }
  }
  else
  {
    int v161 = *((unsigned __int8 *)v46 + v37);
    unsigned int v162 = v161 | 0xFFFFFF00;
    unsigned int v163 = v161 ^ 0xFF;
    char v164 = 8;
    int v165 = 11;
  }
  unsigned int v166 = (1 << v164) - v165;
  if ((v166 & 0x80000000) != 0) {
    goto LABEL_298;
  }
  if (v166 <= v163) {
    goto LABEL_300;
  }
LABEL_299:
  if (!v162) {
    goto LABEL_300;
  }
LABEL_447:
  if (v37 <= 3)
  {
LABEL_538:
    unsigned int v253 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    uint64_t v254 = 2;
    if (v253 > 0xFFF5) {
      uint64_t v254 = 4;
    }
    if (v253 > 0xF5) {
      goto LABEL_542;
    }
  }
LABEL_541:
  uint64_t v254 = 1;
LABEL_542:
  memcpy(v45, v46, ((((((((v254 + v37) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v38;
}

uint64_t sub_1B921D60C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v109 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v109 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(sub_1B996A6F0() - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = 25;
  if (v9 > 0x19) {
    uint64_t v10 = *(void *)(v8 + 64);
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v12 = v11 | 7;
  uint64_t v13 = v10 + ((v11 + 15) & ~(v11 | 7));
  unint64_t v14 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v15 = *(void *)(sub_1B996BAD0() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = ((*(void *)(v15 + 64) + ((v16 + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v13 + 1 > v14) {
    unint64_t v18 = v13 + 1;
  }
  else {
    unint64_t v18 = v14;
  }
  if (v18 > v17) {
    unint64_t v17 = v18;
  }
  if (v17 <= (v9 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v19 = v17;
  }
  uint64_t v20 = *(void *)(sub_1B996D7B0() - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = ((v21 + 1) & ~v21) + *(void *)(v20 + 64);
  if (v19 > v22) {
    unint64_t v22 = v19;
  }
  if (v22 <= 0x18) {
    unint64_t v22 = 24;
  }
  char v23 = 8 * v22;
  if (v22 > 3)
  {
    int v24 = 11;
LABEL_20:
    char v25 = 8;
    goto LABEL_21;
  }
  unsigned int v29 = ((1 << v23) + 1) >> v23;
  if (v29 > 0xFFF5)
  {
LABEL_29:
    unsigned int v28 = 2147483646;
    goto LABEL_30;
  }
  int v24 = v29 + 10;
  if (v29 <= 0xF5) {
    goto LABEL_20;
  }
  char v25 = 16;
LABEL_21:
  unsigned int v26 = (1 << v25) - v24;
  if (v26 <= 0x7FFFFFFF) {
    int v27 = 0x7FFFFFFF;
  }
  else {
    int v27 = v26;
  }
  if ((v26 & 0x80000000) != 0) {
    goto LABEL_29;
  }
  unsigned int v28 = v27 - 1;
LABEL_30:
  if (v28 <= v7) {
    unsigned int v30 = v7;
  }
  else {
    unsigned int v30 = v28;
  }
  uint64_t v31 = *(void *)(v5 + 64);
  if (!v6) {
    ++v31;
  }
  if (v22 > 3) {
    goto LABEL_39;
  }
  unsigned int v32 = ((1 << v23) + 1) >> v23;
  uint64_t v33 = 2;
  if (v32 > 0xFFF5) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xF5) {
LABEL_39:
  }
    uint64_t v33 = 1;
  if (!a2) {
    return 0;
  }
  uint64_t v34 = v16 | v12 | v21;
  uint64_t v35 = v31 + v34;
  if (a2 > v30)
  {
    unint64_t v36 = (v35 & ~v34)
        + ((((((((v33 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    char v37 = 8 * v36;
    if (v36 > 3) {
      goto LABEL_43;
    }
    unsigned int v39 = ((a2 - v30 + ~(-1 << v37)) >> v37) + 1;
    if (HIWORD(v39))
    {
      int v38 = *(_DWORD *)((char *)a1 + v36);
      if (!v38) {
        goto LABEL_60;
      }
      goto LABEL_50;
    }
    if (v39 > 0xFF)
    {
      int v38 = *(unsigned __int16 *)((char *)a1 + v36);
      if (!*(unsigned __int16 *)((char *)a1 + v36)) {
        goto LABEL_60;
      }
      goto LABEL_50;
    }
    if (v39 >= 2)
    {
LABEL_43:
      int v38 = *((unsigned __int8 *)a1 + v36);
      if (!*((unsigned char *)a1 + v36)) {
        goto LABEL_60;
      }
LABEL_50:
      int v40 = (v38 - 1) << v37;
      if (v36 > 3) {
        int v40 = 0;
      }
      if (v36)
      {
        if (v36 <= 3) {
          int v41 = v36;
        }
        else {
          int v41 = 4;
        }
        switch(v41)
        {
          case 2:
            int v42 = *a1;
            break;
          case 3:
            int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a1;
            break;
          default:
            int v42 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v42 = 0;
      }
      return v30 + (v42 | v40) + 1;
    }
  }
LABEL_60:
  if (v22 > 3)
  {
    int v43 = 11;
LABEL_62:
    char v44 = 8;
    goto LABEL_63;
  }
  unsigned int v48 = ((1 << v23) + 1) >> v23;
  if (v48 > 0xFFF5)
  {
LABEL_71:
    unsigned int v47 = 2147483646;
    goto LABEL_72;
  }
  int v43 = v48 + 10;
  if (v48 <= 0xF5) {
    goto LABEL_62;
  }
  char v44 = 16;
LABEL_63:
  unsigned int v45 = (1 << v44) - v43;
  if (v45 <= 0x7FFFFFFF) {
    int v46 = 0x7FFFFFFF;
  }
  else {
    int v46 = v45;
  }
  if ((v45 & 0x80000000) != 0) {
    goto LABEL_71;
  }
  unsigned int v47 = v46 - 1;
LABEL_72:
  if (v47 <= v7) {
    unsigned int v49 = v7;
  }
  else {
    unsigned int v49 = v47;
  }
  if (v7 < v47)
  {
    uint64_t v50 = ~v34;
    unint64_t v51 = (unint64_t)a1 + v35;
    if (v22 <= 3)
    {
      unsigned int v59 = ((1 << v23) + 1) >> v23;
      if (v59 > 0xFFF5) {
        goto LABEL_91;
      }
      int v52 = v59 + 10;
      if (v59 > 0xF5)
      {
        char v53 = 16;
LABEL_79:
        unsigned int v54 = (1 << v53) - v52;
        if (v54 <= 0x7FFFFFFF) {
          int v55 = 0x7FFFFFFF;
        }
        else {
          int v55 = v54;
        }
        if ((v54 & 0x80000000) == 0)
        {
          unsigned int v56 = v55 - 1;
LABEL_92:
          unsigned int v60 = (unsigned __int16 *)(v51 & v50);
          if (v22 > 3) {
            goto LABEL_96;
          }
          unsigned int v61 = ((1 << v23) + 1) >> v23;
          uint64_t v62 = 2;
          if (v61 > 0xFFF5) {
            uint64_t v62 = 4;
          }
          if (v61 <= 0xF5) {
LABEL_96:
          }
            uint64_t v62 = 1;
          unsigned int v63 = v49 - v56;
          if (v49 > v56)
          {
            unint64_t v64 = ((((((((v62 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 8;
            uint64_t v65 = v64 & 0xFFFFFFF8;
            if ((v64 & 0xFFFFFFF8) != 0) {
              unsigned int v66 = 2;
            }
            else {
              unsigned int v66 = v63 + 1;
            }
            if (v66 >= 0x10000) {
              unsigned int v67 = 4;
            }
            else {
              unsigned int v67 = 2;
            }
            if (v66 < 0x100) {
              unsigned int v67 = 1;
            }
            if (v66 >= 2) {
              uint64_t v68 = v67;
            }
            else {
              uint64_t v68 = 0;
            }
            switch(v68)
            {
              case 1:
                int v69 = *((unsigned __int8 *)v60 + v64);
                if (!v69) {
                  break;
                }
                goto LABEL_117;
              case 2:
                int v69 = *(unsigned __int16 *)((char *)v60 + v64);
                if (v69) {
                  goto LABEL_117;
                }
                break;
              case 3:
                __break(1u);
                JUMPOUT(0x1B921DFBCLL);
              case 4:
                int v69 = *(_DWORD *)((char *)v60 + v64);
                if (!v69) {
                  break;
                }
LABEL_117:
                int v70 = v69 - 1;
                if (v65)
                {
                  int v70 = 0;
                  int v71 = *(_DWORD *)v60;
                }
                else
                {
                  int v71 = 0;
                }
                return v56 + (v71 | v70) + 1;
              default:
                break;
            }
          }
          if (v22 <= 3)
          {
            unsigned int v83 = ((1 << v23) + 1) >> v23;
            if (v83 > 0xFFF5)
            {
              unsigned int v75 = 0x7FFFFFFF;
              if (v22 > 3)
              {
LABEL_129:
                int v77 = 11;
                goto LABEL_130;
              }
LABEL_154:
              unsigned int v91 = ((1 << v23) + 1) >> v23;
              if (v91 > 0xFFF5) {
                goto LABEL_157;
              }
              int v77 = v91 + 10;
              if (v91 > 0xF5)
              {
                char v78 = 16;
LABEL_131:
                int v79 = (1 << v78) - v77;
                if ((v79 & 0x80000000) == 0)
                {
                  if (v79 == v75) {
                    goto LABEL_133;
                  }
                  goto LABEL_158;
                }
LABEL_157:
                if (v75 == 0x7FFFFFFF)
                {
LABEL_133:
                  if (v22 <= 3)
                  {
                    unsigned int v84 = ((1 << v23) + 1) >> v23;
                    if (v84 > 0xFFF5) {
                      goto LABEL_145;
                    }
                    int v80 = v84 + 10;
                    if (v84 > 0xF5)
                    {
                      char v81 = 16;
LABEL_136:
                      unsigned int v82 = (1 << v81) - v80;
                      if ((v82 & 0x80000000) == 0)
                      {
                        if (v22 > 3) {
                          goto LABEL_149;
                        }
LABEL_146:
                        unsigned int v85 = ((1 << v23) + 1) >> v23;
                        uint64_t v86 = 2;
                        if (v85 > 0xFFF5) {
                          uint64_t v86 = 4;
                        }
                        if (v85 > 0xF5)
                        {
LABEL_150:
                          unsigned int v87 = v75 - v82;
                          if (v75 <= v82) {
                            goto LABEL_183;
                          }
                          unint64_t v88 = v86 + v22;
                          char v89 = 8 * (v86 + v22);
                          if (v88 > 3)
                          {
LABEL_152:
                            int v90 = *((unsigned __int8 *)v60 + v88);
                            goto LABEL_174;
                          }
                          unsigned int v96 = ((v87 + ~(-1 << v89)) >> v89) + 1;
                          if (HIWORD(v96))
                          {
                            int v90 = *(_DWORD *)((char *)v60 + v88);
                          }
                          else
                          {
                            if (v96 <= 0xFF)
                            {
                              if (v96 < 2) {
                                goto LABEL_183;
                              }
                              goto LABEL_152;
                            }
                            int v90 = *(unsigned __int16 *)((char *)v60 + v88);
                          }
LABEL_174:
                          if (v90)
                          {
                            int v97 = (v90 - 1) << v89;
                            if (v88 > 3) {
                              int v97 = 0;
                            }
                            if (v88)
                            {
                              if (v88 <= 3) {
                                int v98 = v88;
                              }
                              else {
                                int v98 = 4;
                              }
                              switch(v98)
                              {
                                case 2:
                                  int v99 = *v60;
                                  break;
                                case 3:
                                  int v99 = *v60 | (*((unsigned __int8 *)v60 + 2) << 16);
                                  break;
                                case 4:
                                  int v99 = *(_DWORD *)v60;
                                  break;
                                default:
                                  int v99 = *(unsigned __int8 *)v60;
                                  break;
                              }
                            }
                            else
                            {
                              int v99 = 0;
                            }
                            unsigned int v95 = v82 + (v99 | v97) + 1;
                            goto LABEL_201;
                          }
LABEL_183:
                          if (!v82) {
                            return 0;
                          }
                          if (v22 <= 3)
                          {
                            unsigned int v106 = ((1 << v23) + 1) >> v23;
                            if (v106 > 0xFFF5)
                            {
                              unsigned int v101 = *(_DWORD *)((char *)v60 + v22);
                              unsigned int v102 = ~v101;
LABEL_192:
                              unsigned int v105 = 0x7FFFFFFF;
LABEL_193:
                              if (v105 > v102)
                              {
                                unsigned int v95 = -v101;
                                goto LABEL_201;
                              }
                              return 0;
                            }
                            int v104 = v106 + 10;
                            if (v106 > 0xF5)
                            {
                              int v108 = *(unsigned __int16 *)((char *)v60 + v22);
                              unsigned int v101 = v108 | 0xFFFF0000;
                              unsigned int v102 = v108 ^ 0xFFFF;
                              char v103 = 16;
                            }
                            else
                            {
                              int v107 = *((unsigned __int8 *)v60 + v22);
                              unsigned int v101 = v107 | 0xFFFFFF00;
                              unsigned int v102 = v107 ^ 0xFF;
                              char v103 = 8;
                            }
                          }
                          else
                          {
                            int v100 = *((unsigned __int8 *)v60 + v22);
                            unsigned int v101 = v100 | 0xFFFFFF00;
                            unsigned int v102 = v100 ^ 0xFF;
                            char v103 = 8;
                            int v104 = 11;
                          }
                          unsigned int v105 = (1 << v103) - v104;
                          if ((v105 & 0x80000000) == 0) {
                            goto LABEL_193;
                          }
                          goto LABEL_192;
                        }
LABEL_149:
                        uint64_t v86 = 1;
                        goto LABEL_150;
                      }
LABEL_145:
                      unsigned int v82 = 0x7FFFFFFF;
                      if (v22 > 3) {
                        goto LABEL_149;
                      }
                      goto LABEL_146;
                    }
                  }
                  else
                  {
                    int v80 = 11;
                  }
                  char v81 = 8;
                  goto LABEL_136;
                }
LABEL_158:
                if (v22 > 3) {
                  goto LABEL_162;
                }
                unsigned int v92 = ((1 << v23) + 1) >> v23;
                uint64_t v93 = 2;
                if (v92 > 0xFFF5) {
                  uint64_t v93 = 4;
                }
                if (v92 <= 0xF5) {
LABEL_162:
                }
                  uint64_t v93 = 1;
                unint64_t v94 = *(void *)((((unint64_t)v60 + v22 + v93) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v94 >= 0xFFFFFFFF) {
                  LODWORD(v94) = -1;
                }
                unsigned int v95 = v94 + 1;
LABEL_201:
                uint64_t result = v95 - 1;
                if (v95 > 1) {
                  return result;
                }
                return 0;
              }
LABEL_130:
              char v78 = 8;
              goto LABEL_131;
            }
            int v72 = v83 + 10;
            if (v83 > 0xF5)
            {
              char v73 = 16;
LABEL_123:
              unsigned int v74 = (1 << v73) - v72;
              unsigned int v75 = 0x7FFFFFFF;
              if (v74 <= 0x7FFFFFFF) {
                int v76 = 0x7FFFFFFF;
              }
              else {
                int v76 = v74;
              }
              if ((v74 & 0x80000000) == 0) {
                unsigned int v75 = v76;
              }
              if (v22 > 3) {
                goto LABEL_129;
              }
              goto LABEL_154;
            }
          }
          else
          {
            int v72 = 11;
          }
          char v73 = 8;
          goto LABEL_123;
        }
LABEL_91:
        unsigned int v56 = 2147483646;
        goto LABEL_92;
      }
    }
    else
    {
      int v52 = 11;
    }
    char v53 = 8;
    goto LABEL_79;
  }
  if (v6 < 2) {
    return 0;
  }
  unsigned int v57 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v109);
  if (v57 >= 2) {
    return v57 - 1;
  }
  else {
    return 0;
  }
}

void sub_1B921DFF0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v120 = *(void *)(a4 + 16);
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v7 = *(unsigned int *)(v121 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = *(void *)(sub_1B996A6F0() - 8);
  unint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = 25;
  if (v10 > 0x19) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v11 + ((v12 + 15) & ~(v12 | 7));
  unint64_t v15 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v16 = *(void *)(sub_1B996BAD0() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = ((*(void *)(v16 + 64) + ((v17 + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v14 + 1 > v15) {
    unint64_t v19 = v14 + 1;
  }
  else {
    unint64_t v19 = v15;
  }
  if (v19 > v18) {
    unint64_t v18 = v19;
  }
  if (v18 <= (v10 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v20 = v18;
  }
  uint64_t v21 = *(void *)(sub_1B996D7B0() - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = ((v22 + 1) & ~v22) + *(void *)(v21 + 64);
  if (v20 > v23) {
    unint64_t v23 = v20;
  }
  if (v23 <= 0x18) {
    unint64_t v23 = 24;
  }
  char v24 = 8 * v23;
  if (v23 > 3)
  {
    int v25 = 11;
    goto LABEL_20;
  }
  unsigned int v33 = ((1 << v24) + 1) >> v24;
  if (v33 <= 0xFFF5)
  {
    int v25 = v33 + 10;
    if (v33 > 0xF5)
    {
      char v29 = 16;
      unsigned int v26 = a2;
      int v27 = a1;
      uint64_t v28 = v121;
      goto LABEL_21;
    }
LABEL_20:
    unsigned int v26 = a2;
    int v27 = a1;
    uint64_t v28 = v121;
    char v29 = 8;
LABEL_21:
    unsigned int v30 = (1 << v29) - v25;
    if (v30 <= 0x7FFFFFFF) {
      int v31 = 0x7FFFFFFF;
    }
    else {
      int v31 = v30;
    }
    if ((v30 & 0x80000000) != 0) {
      unsigned int v32 = 2147483646;
    }
    else {
      unsigned int v32 = v31 - 1;
    }
    goto LABEL_31;
  }
  unsigned int v32 = 2147483646;
  unsigned int v26 = a2;
  int v27 = a1;
  uint64_t v28 = v121;
LABEL_31:
  if (v32 <= v8) {
    unsigned int v32 = v8;
  }
  if (v7) {
    size_t v34 = *(void *)(v28 + 64);
  }
  else {
    size_t v34 = *(void *)(v28 + 64) + 1;
  }
  uint64_t v35 = v17 | v13 | v22;
  size_t v36 = v34 + v35;
  if (v23 > 3) {
    goto LABEL_40;
  }
  unsigned int v37 = ((1 << v24) + 1) >> v24;
  uint64_t v38 = 2;
  if (v37 > 0xFFF5) {
    uint64_t v38 = 4;
  }
  if (v37 <= 0xF5) {
LABEL_40:
  }
    uint64_t v38 = 1;
  size_t v39 = ((v34 + v35) & ~v35)
      + ((((((((v38 + v23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (a3 <= v32)
  {
    int v40 = 0;
  }
  else if (v39 <= 3)
  {
    unsigned int v44 = ((a3 - v32 + ~(-1 << (8 * v39))) >> (8 * v39)) + 1;
    if (HIWORD(v44))
    {
      int v40 = 4;
    }
    else if (v44 >= 0x100)
    {
      int v40 = 2;
    }
    else
    {
      int v40 = v44 > 1;
    }
  }
  else
  {
    int v40 = 1;
  }
  if (v32 < v26)
  {
    unsigned int v41 = ~v32 + v26;
    if (v39 < 4)
    {
      int v42 = (v41 >> (8 * v39)) + 1;
      if (((v34 + v35) & ~v35)
         + ((((((((v38 + v23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != -8)
      {
        int v45 = v41 & ~(-1 << (8 * v39));
        bzero(v27, v39);
        if (v39 == 3)
        {
          *(_WORD *)int v27 = v45;
          v27[2] = BYTE2(v45);
        }
        else if (v39 == 2)
        {
          *(_WORD *)int v27 = v45;
        }
        else
        {
          *int v27 = v45;
        }
      }
    }
    else
    {
      bzero(v27, v39);
      *(_DWORD *)int v27 = v41;
      int v42 = 1;
    }
    switch(v40)
    {
      case 1:
        v27[v39] = v42;
        return;
      case 2:
        *(_WORD *)&v27[v39] = v42;
        return;
      case 3:
        goto LABEL_262;
      case 4:
        *(_DWORD *)&v27[v39] = v42;
        return;
      default:
        return;
    }
  }
  uint64_t v43 = ~v35;
  switch(v40)
  {
    case 1:
      v27[v39] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_61;
    case 2:
      *(_WORD *)&v27[v39] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_61;
    case 3:
LABEL_262:
      __break(1u);
      JUMPOUT(0x1B921ECDCLL);
    case 4:
      *(_DWORD *)&v27[v39] = 0;
      goto LABEL_60;
    default:
LABEL_60:
      if (!v26) {
        return;
      }
LABEL_61:
      if (v23 > 3)
      {
        int v46 = 11;
LABEL_63:
        char v47 = 8;
        goto LABEL_64;
      }
      unsigned int v51 = ((1 << v24) + 1) >> v24;
      if (v51 > 0xFFF5) {
        goto LABEL_72;
      }
      int v46 = v51 + 10;
      if (v51 <= 0xF5) {
        goto LABEL_63;
      }
      char v47 = 16;
LABEL_64:
      unsigned int v48 = (1 << v47) - v46;
      if (v48 <= 0x7FFFFFFF) {
        int v49 = 0x7FFFFFFF;
      }
      else {
        int v49 = v48;
      }
      if ((v48 & 0x80000000) == 0)
      {
        unsigned int v50 = v49 - 1;
        goto LABEL_73;
      }
LABEL_72:
      unsigned int v50 = 2147483646;
LABEL_73:
      if (v50 <= v8) {
        unsigned int v52 = v8;
      }
      else {
        unsigned int v52 = v50;
      }
      if (v8 < v50)
      {
        if (v23 <= 3)
        {
          unsigned int v61 = ((1 << v24) + 1) >> v24;
          if (v61 > 0xFFF5) {
            goto LABEL_101;
          }
          int v53 = v61 + 10;
          if (v61 > 0xF5)
          {
            char v54 = 16;
LABEL_80:
            unsigned int v55 = (1 << v54) - v53;
            if (v55 <= 0x7FFFFFFF) {
              int v56 = 0x7FFFFFFF;
            }
            else {
              int v56 = v55;
            }
            if ((v55 & 0x80000000) == 0)
            {
              unsigned int v57 = v56 - 1;
LABEL_102:
              unint64_t v62 = (unint64_t)&v27[v36];
              if (v23 > 3) {
                goto LABEL_106;
              }
              unsigned int v63 = ((1 << v24) + 1) >> v24;
              uint64_t v64 = 2;
              if (v63 > 0xFFF5) {
                uint64_t v64 = 4;
              }
              if (v63 <= 0xF5) {
LABEL_106:
              }
                uint64_t v64 = 1;
              int v27 = (unsigned char *)(v62 & v43);
              size_t v65 = ((((((((v64 + v23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 8;
              if (v52 <= v57)
              {
                int v68 = 0;
                int v69 = v26 - v57;
                if (v26 <= v57)
                {
LABEL_120:
                  switch(v68)
                  {
                    case 1:
                      v27[v65] = 0;
                      goto LABEL_142;
                    case 2:
                      *(_WORD *)&v27[v65] = 0;
                      goto LABEL_142;
                    case 3:
                      goto LABEL_262;
                    case 4:
                      *(_DWORD *)&v27[v65] = 0;
                      goto LABEL_142;
                    default:
LABEL_142:
                      if (v23 > 3)
                      {
                        int v73 = 11;
LABEL_144:
                        char v74 = 8;
                        goto LABEL_145;
                      }
                      unsigned int v78 = ((1 << v24) + 1) >> v24;
                      if (v78 > 0xFFF5)
                      {
                        unsigned int v76 = 0x7FFFFFFF;
                        goto LABEL_155;
                      }
                      int v73 = v78 + 10;
                      if (v78 <= 0xF5) {
                        goto LABEL_144;
                      }
                      char v74 = 16;
LABEL_145:
                      unsigned int v75 = (1 << v74) - v73;
                      unsigned int v76 = 0x7FFFFFFF;
                      if (v75 <= 0x7FFFFFFF) {
                        int v77 = 0x7FFFFFFF;
                      }
                      else {
                        int v77 = v75;
                      }
                      if ((v75 & 0x80000000) == 0) {
                        unsigned int v76 = v77;
                      }
LABEL_155:
                      unsigned int v79 = v26 + 1;
                      if (v23 > 3) {
                        goto LABEL_159;
                      }
                      unsigned int v80 = ((1 << v24) + 1) >> v24;
                      int v81 = 2;
                      if (v80 > 0xFFF5) {
                        int v81 = 4;
                      }
                      if (v80 <= 0xF5) {
LABEL_159:
                      }
                        int v81 = 1;
                      if (v79 > v76)
                      {
                        int v82 = ((((v81 + v23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15;
                        goto LABEL_184;
                      }
                      if (v26 == -1) {
                        return;
                      }
                      if (v23 <= 3)
                      {
                        unsigned int v87 = ((1 << v24) + 1) >> v24;
                        if (v87 > 0xFFF5)
                        {
                          unsigned int v76 = 0x7FFFFFFF;
                          goto LABEL_177;
                        }
                        int v83 = v87 + 10;
                        if (v87 > 0xF5)
                        {
                          char v84 = 16;
LABEL_166:
                          unsigned int v85 = (1 << v84) - v83;
                          unsigned int v76 = 0x7FFFFFFF;
                          if (v85 <= 0x7FFFFFFF) {
                            int v86 = 0x7FFFFFFF;
                          }
                          else {
                            int v86 = v85;
                          }
                          if ((v85 & 0x80000000) == 0) {
                            unsigned int v76 = v86;
                          }
LABEL_177:
                          if (v23 > 3) {
                            goto LABEL_181;
                          }
                          unsigned int v88 = ((1 << v24) + 1) >> v24;
                          int v89 = 2;
                          if (v88 > 0xFFF5) {
                            int v89 = 4;
                          }
                          if (v88 <= 0xF5) {
LABEL_181:
                          }
                            int v89 = 1;
                          if (v79 > v76)
                          {
                            int v82 = ((v89 + v23) & 0xFFFFFFF8) + 55;
LABEL_184:
                            unsigned int v90 = ((v82 & 0xFFFFFFF8) + 15) & 0xFFFFFFF8;
                            if (v90 != -8)
                            {
                              int v59 = v26 - v76;
                              bzero(v27, v90 + 8);
LABEL_186:
                              *(_DWORD *)int v27 = v59;
                            }
                            return;
                          }
                          if (v23 <= 3)
                          {
                            unsigned int v92 = ((1 << v24) + 1) >> v24;
                            if (v92 > 0xFFF5)
                            {
                              unsigned int v95 = 0x7FFFFFFF;
                              goto LABEL_199;
                            }
                            int v91 = v92 + 10;
                            if (v92 > 0xF5)
                            {
                              char v93 = 16;
LABEL_193:
                              unsigned int v94 = (1 << v93) - v91;
                              unsigned int v95 = 0x7FFFFFFF;
                              if (v94 <= 0x7FFFFFFF) {
                                int v96 = 0x7FFFFFFF;
                              }
                              else {
                                int v96 = v94;
                              }
                              if ((v94 & 0x80000000) == 0) {
                                unsigned int v95 = v96;
                              }
LABEL_199:
                              if (v23 <= 3)
                              {
                                unsigned int v98 = ((1 << v24) + 1) >> v24;
                                if (v98 > 0xFFF5)
                                {
LABEL_205:
                                  int v100 = 0x7FFFFFFF;
LABEL_206:
                                  if (v100 != v95)
                                  {
                                    if (v23 > 3) {
                                      goto LABEL_213;
                                    }
                                    unsigned int v102 = ((1 << v24) + 1) >> v24;
                                    uint64_t v103 = 2;
                                    if (v102 > 0xFFF5) {
                                      uint64_t v103 = 4;
                                    }
                                    if (v102 <= 0xF5) {
LABEL_213:
                                    }
                                      uint64_t v103 = 1;
                                    unint64_t v104 = (unint64_t)&v27[v23 + v103] & 0xFFFFFFFFFFFFFFF8;
                                    if ((v79 & 0x80000000) != 0) {
                                      *(void *)(v104 + 8) = v26 - 0x7FFFFFFF;
                                    }
                                    else {
                                      *(void *)(v104 + 8) = v26;
                                    }
                                    return;
                                  }
                                  if (v23 <= 3)
                                  {
                                    unsigned int v105 = ((1 << v24) + 1) >> v24;
                                    if (v105 > 0xFFF5)
                                    {
LABEL_220:
                                      unsigned int v107 = 0x7FFFFFFF;
LABEL_221:
                                      if (v23 > 3) {
                                        goto LABEL_225;
                                      }
                                      unsigned int v108 = ((1 << v24) + 1) >> v24;
                                      uint64_t v109 = 2;
                                      if (v108 > 0xFFF5) {
                                        uint64_t v109 = 4;
                                      }
                                      if (v108 <= 0xF5) {
LABEL_225:
                                      }
                                        uint64_t v109 = 1;
                                      size_t v110 = v109 + v23;
                                      BOOL v111 = v95 >= v107;
                                      unsigned int v112 = v95 - v107;
                                      if (v112 != 0 && v111)
                                      {
                                        if (v110 <= 3)
                                        {
                                          unsigned int v114 = ((v112 + ~(-1 << (8 * v110))) >> (8 * v110)) + 1;
                                          if (HIWORD(v114))
                                          {
                                            int v113 = 4;
                                          }
                                          else if (v114 >= 0x100)
                                          {
                                            int v113 = 2;
                                          }
                                          else
                                          {
                                            int v113 = v114 > 1;
                                          }
                                        }
                                        else
                                        {
                                          int v113 = 1;
                                        }
                                      }
                                      else
                                      {
                                        int v113 = 0;
                                      }
                                      if (v79 > v107)
                                      {
                                        unsigned int v115 = v26 - v107;
                                        if (v110 < 4)
                                        {
                                          int v116 = (v115 >> (8 * v110)) + 1;
                                          if (v110)
                                          {
                                            int v117 = v115 & ~(-1 << (8 * v110));
                                            bzero(v27, v110);
                                            if (v110 == 3)
                                            {
                                              *(_WORD *)int v27 = v117;
                                              v27[2] = BYTE2(v117);
                                            }
                                            else if (v110 == 2)
                                            {
                                              *(_WORD *)int v27 = v117;
                                            }
                                            else
                                            {
                                              *int v27 = v117;
                                            }
                                          }
                                        }
                                        else
                                        {
                                          bzero(v27, v110);
                                          *(_DWORD *)int v27 = v115;
                                          int v116 = 1;
                                        }
                                        switch(v113)
                                        {
                                          case 1:
                                            v27[v110] = v116;
                                            return;
                                          case 2:
                                            *(_WORD *)&v27[v110] = v116;
                                            return;
                                          case 3:
                                            goto LABEL_262;
                                          case 4:
                                            *(_DWORD *)&v27[v110] = v116;
                                            return;
                                          default:
                                            return;
                                        }
                                      }
                                      switch(v113)
                                      {
                                        case 1:
                                          v27[v110] = 0;
                                          goto LABEL_250;
                                        case 2:
                                          *(_WORD *)&v27[v110] = 0;
                                          goto LABEL_250;
                                        case 3:
                                          goto LABEL_262;
                                        case 4:
                                          *(_DWORD *)&v27[v110] = 0;
                                          goto LABEL_250;
                                        default:
LABEL_250:
                                          int v118 = ~v26;
                                          if (v23 > 3) {
                                            goto LABEL_253;
                                          }
                                          unsigned int v119 = ((1 << v24) + 1) >> v24;
                                          if (v119 > 0xFFF5)
                                          {
                                            *(_DWORD *)&v27[v23] = v118;
                                          }
                                          else if (v119 > 0xF5)
                                          {
                                            *(_WORD *)&v27[v23] = v118;
                                          }
                                          else
                                          {
LABEL_253:
                                            v27[v23] = v118;
                                          }
                                          break;
                                      }
                                      return;
                                    }
                                    int v101 = v105 + 10;
                                    if (v105 > 0xF5)
                                    {
                                      char v106 = 16;
LABEL_219:
                                      unsigned int v107 = (1 << v106) - v101;
                                      if ((v107 & 0x80000000) == 0) {
                                        goto LABEL_221;
                                      }
                                      goto LABEL_220;
                                    }
                                  }
                                  else
                                  {
                                    int v101 = 11;
                                  }
                                  char v106 = 8;
                                  goto LABEL_219;
                                }
                                int v97 = v98 + 10;
                                if (v98 > 0xF5)
                                {
                                  char v99 = 16;
LABEL_204:
                                  int v100 = (1 << v99) - v97;
                                  if ((v100 & 0x80000000) == 0) {
                                    goto LABEL_206;
                                  }
                                  goto LABEL_205;
                                }
                              }
                              else
                              {
                                int v97 = 11;
                              }
                              char v99 = 8;
                              goto LABEL_204;
                            }
                          }
                          else
                          {
                            int v91 = 11;
                          }
                          char v93 = 8;
                          goto LABEL_193;
                        }
                      }
                      else
                      {
                        int v83 = 11;
                      }
                      char v84 = 8;
                      goto LABEL_166;
                  }
                }
              }
              else
              {
                if (((((((((v64 + v23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
                  unsigned int v66 = v52 - v57 + 1;
                }
                else {
                  unsigned int v66 = 2;
                }
                if (v66 >= 0x10000) {
                  int v67 = 4;
                }
                else {
                  int v67 = 2;
                }
                if (v66 < 0x100) {
                  int v67 = 1;
                }
                if (v66 >= 2) {
                  int v68 = v67;
                }
                else {
                  int v68 = 0;
                }
                int v69 = v26 - v57;
                if (v26 <= v57) {
                  goto LABEL_120;
                }
              }
              if (((((((((v64 + v23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
                int v71 = v69;
              }
              else {
                int v71 = 1;
              }
              if (((((((((v64 + v23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
              {
                unsigned int v72 = ~v57 + v26;
                bzero(v27, v65);
                *(_DWORD *)int v27 = v72;
              }
              switch(v68)
              {
                case 1:
                  v27[v65] = v71;
                  return;
                case 2:
                  *(_WORD *)&v27[v65] = v71;
                  return;
                case 3:
                  goto LABEL_262;
                case 4:
                  *(_DWORD *)&v27[v65] = v71;
                  return;
                default:
                  return;
              }
            }
LABEL_101:
            unsigned int v57 = 2147483646;
            goto LABEL_102;
          }
        }
        else
        {
          int v53 = 11;
        }
        char v54 = 8;
        goto LABEL_80;
      }
      if (v8 >= v26)
      {
        int v70 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56);
        v70(v27, v26 + 1, v7, v120);
      }
      else
      {
        if (v34 <= 3) {
          int v58 = ~(-1 << (8 * v34));
        }
        else {
          int v58 = -1;
        }
        if (v34)
        {
          int v59 = v58 & (~v8 + v26);
          if (v34 <= 3) {
            int v60 = v34;
          }
          else {
            int v60 = 4;
          }
          bzero(v27, v34);
          switch(v60)
          {
            case 2:
              *(_WORD *)int v27 = v59;
              break;
            case 3:
              *(_WORD *)int v27 = v59;
              v27[2] = BYTE2(v59);
              break;
            case 4:
              goto LABEL_186;
            default:
              *int v27 = v59;
              break;
          }
        }
      }
      return;
  }
}

void sub_1B921ED64()
{
  if (!qword_1E9EFDD48[0])
  {
    type metadata accessor for TTRReminderCellTitleViewModel();
    unint64_t v0 = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
    if (!v1) {
      atomic_store(v0, qword_1E9EFDD48);
    }
  }
}

uint64_t sub_1B921EDBC()
{
  uint64_t result = sub_1B9970060();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B921EE98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v9 = *(void *)(v4 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  uint64_t v12 = v10 & 0xF8 | 7;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  if (v11) {
    unint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if ((v12 | v7) != 7
    || ((v10 | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || v14 + ((v8 + v12 + ((v7 + 1) & ~v7)) & ~v12) > 0x18)
  {
    uint64_t v17 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + (((v12 | v7) + 16) & ~(v12 | v7)));
    swift_retain();
    return v3;
  }
  uint64_t v30 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  size_t __n = v14;
  unint64_t v32 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v33 = *(void *)(a3 + 24);
  uint64_t v18 = ~v12;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v19 = (void *)(((unint64_t)a1 + v7 + 1) & ~v7);
  unint64_t v20 = (char *)(((unint64_t)a2 + v7 + 1) & ~v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
  {
    memcpy(v19, v20, v8);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v19, v20, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = &v20[v8];
  unint64_t v23 = (void *)(((unint64_t)v19 + v8 + v12) & v18);
  char v24 = (_DWORD *)((unint64_t)&v22[v12] & v18);
  if (!v11)
  {
    unint64_t v26 = v32;
    uint64_t v25 = v33;
    if (!*((unsigned char *)v24 + v32)) {
      goto LABEL_27;
    }
    int v27 = *((unsigned __int8 *)v24 + v32) - 1;
    int v28 = v32 & 0xFFFFFFF8;
    if ((v32 & 0xFFFFFFF8) != 0)
    {
      int v27 = 0;
      int v28 = *v24;
    }
    if ((v28 | v27) == 0xFFFFFFFF) {
      goto LABEL_27;
    }
LABEL_26:
    memcpy(v23, v24, __n);
    return v3;
  }
  uint64_t v25 = v33;
  unint64_t v26 = v32;
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v9 + 48))(v24, v11, v33)) {
    goto LABEL_26;
  }
LABEL_27:
  (*(void (**)(void *, _DWORD *, uint64_t))(v9 + 16))(v23, v24, v25);
  *(void *)(((unint64_t)v23 + v30) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + v30) & 0xFFFFFFFFFFFFFFF8);
  if (!v11) {
    *((unsigned char *)v23 + v26) = 0;
  }
  return v3;
}

uint64_t sub_1B921F168(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v5, v3);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unint64_t v10 = *(void *)(v4 + 64) + v5;
  if (!*(_DWORD *)(v4 + 84)) {
    ++v10;
  }
  uint64_t v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  uint64_t v11 = (_DWORD *)((v10 + v9) & ~v9);
  if (v8)
  {
    uint64_t v19 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(v11, v8, v6);
    uint64_t v7 = v19;
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  unint64_t v13 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!*((unsigned char *)v11 + v13)
    || ((uint64_t v14 = v13 & 0xFFFFFFF8, (v13 & 0xFFFFFFF8) != 0)
      ? (int v15 = 0)
      : (int v15 = *((unsigned __int8 *)v11 + v13) - 1),
        !v14 ? (int v16 = 0) : (int v16 = *v11),
        int v17 = v16 | v15,
        uint64_t result = (v17 + 1),
        v17 == -1))
  {
LABEL_17:
    uint64_t v18 = *(uint64_t (**)(_DWORD *, uint64_t))(v7 + 8);
    return v18(v11, v6);
  }
  return result;
}

unsigned char *sub_1B921F340(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (char *)((unint64_t)&a1[v7 + 1] & ~v7);
  uint64_t v9 = (char *)((unint64_t)&a2[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    int v10 = *(_DWORD *)(v6 + 84);
    uint64_t v11 = *(void *)(v6 + 64);
    if (v10) {
      size_t v12 = *(void *)(v6 + 64);
    }
    else {
      size_t v12 = v11 + 1;
    }
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v13 = v6 + 56;
    v14(v8, 0, 1, v5);
    int v10 = *(_DWORD *)(v13 + 28);
    uint64_t v11 = *(void *)(v13 + 8);
  }
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  if (v10) {
    uint64_t v17 = v11;
  }
  else {
    uint64_t v17 = v11 + 1;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  uint64_t v19 = *(unsigned int *)(v16 + 84);
  uint64_t v20 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  uint64_t v21 = v17 + v20;
  unint64_t v22 = (unint64_t)&v8[v21];
  unint64_t v23 = (unint64_t)&v9[v21];
  char v24 = (unsigned char *)(v22 & ~v20);
  uint64_t v25 = (_DWORD *)(v23 & ~v20);
  uint64_t v26 = *(void *)(v16 + 64) + 7;
  unint64_t v27 = v26 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v23 & ~v20, v19, v15))
    {
LABEL_21:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v18 + 16))(v24, v25, v15);
      *(void *)((unint64_t)&v24[v26] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v26) & 0xFFFFFFFFFFFFFFF8);
      if (!v19) {
        v24[v28] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)v25 + v28)) {
      goto LABEL_21;
    }
    int v29 = *((unsigned __int8 *)v25 + v28) - 1;
    int v30 = v28 & 0xFFFFFFF8;
    if ((v28 & 0xFFFFFFF8) != 0)
    {
      int v29 = 0;
      int v30 = *v25;
    }
    if ((v30 | v29) == 0xFFFFFFFF) {
      goto LABEL_21;
    }
  }
  if (v19) {
    size_t v31 = v27 + 8;
  }
  else {
    size_t v31 = v27 + 9;
  }
  memcpy(v24, v25, v31);
  return a1;
}

unsigned char *sub_1B921F5A0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (char *)((unint64_t)&a1[v7 + 1] & ~v7);
  uint64_t v9 = (char *)((unint64_t)&a2[v7 + 1] & ~v7);
  int v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v11 = v10(v8, 1, v5);
  int v12 = v10(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v9, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
      goto LABEL_12;
    }
    int v13 = *(_DWORD *)(v6 + 84);
    size_t v14 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 24))(v8, v9, v5);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v13 = *(_DWORD *)(v6 + 84);
    size_t v14 = *(void *)(v6 + 64);
  }
  if (v13) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v14 + 1;
  }
  memcpy(v8, v9, v15);
LABEL_12:
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = *(void *)(v17 - 8);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v16;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  uint64_t v22 = v16 + v21;
  unint64_t v23 = (unint64_t)&v8[v22];
  char v24 = (_DWORD *)((unint64_t)&v8[v22] & ~v21);
  uint64_t v25 = (_DWORD *)((unint64_t)&v9[v22] & ~v21);
  uint64_t v26 = *(void *)(v18 + 64);
  uint64_t v27 = v26 + 7;
  unint64_t v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v29 = v28 + 8;
  uint64_t v46 = v17;
  if (!v20)
  {
    if (*((unsigned char *)v24 + v29))
    {
      int v38 = *((unsigned __int8 *)v24 + v29) - 1;
      if (v28 == -8)
      {
        int v39 = 0;
      }
      else
      {
        int v38 = 0;
        int v39 = *v24;
      }
      if ((v39 | v38) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v25 + v29)) {
          goto LABEL_42;
        }
        int v40 = *((unsigned __int8 *)v25 + v29) - 1;
        if (v28 == -8)
        {
          int v41 = 0;
        }
        else
        {
          int v40 = 0;
          int v41 = *v25;
        }
        char v24 = (_DWORD *)(v23 & ~v21);
        if ((v41 | v40) == 0xFFFFFFFF) {
          goto LABEL_42;
        }
        goto LABEL_38;
      }
    }
    if (!*((unsigned char *)v25 + v29))
    {
LABEL_35:
      (*(void (**)(_DWORD *, _DWORD *))(v19 + 24))(v24, v25);
      *(void *)(((unint64_t)v24 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v27) & 0xFFFFFFFFFFFFFFF8);
      return v4;
    }
    int v42 = *((unsigned __int8 *)v25 + v29) - 1;
    if (v28 != -8) {
      int v42 = 0;
    }
    __dst = (_DWORD *)(v23 & ~v21);
    if (v28 == -8) {
      int v43 = 0;
    }
    else {
      int v43 = *v25;
    }
    int v37 = (v43 | v42) + 1;
LABEL_33:
    char v24 = __dst;
    if (v37)
    {
      (*(void (**)(_DWORD *, uint64_t))(v19 + 8))(__dst, v46);
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  uint64_t v30 = v26 + 7;
  size_t v31 = v4;
  unint64_t v32 = *(uint64_t (**)(_DWORD *, uint64_t))(v19 + 48);
  __dst = (_DWORD *)(v23 & ~v21);
  uint64_t v33 = v20;
  uint64_t v34 = v20;
  uint64_t v20 = v17;
  int v35 = v32(__dst, v33);
  uint64_t v36 = v20;
  LODWORD(v20) = v34;
  int v37 = ((uint64_t (*)(_DWORD *, uint64_t, uint64_t))v32)(v25, v34, v36);
  uint64_t v27 = v30;
  size_t v29 = v28 + 8;
  uint64_t v4 = v31;
  if (!v35) {
    goto LABEL_33;
  }
  char v24 = __dst;
  if (!v37)
  {
LABEL_42:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v19 + 16))(v24, v25, v46);
    *(void *)(((unint64_t)v24 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v27) & 0xFFFFFFFFFFFFFFF8);
    if (!v20) {
      *((unsigned char *)v24 + v29) = 0;
    }
    return v4;
  }
LABEL_38:
  if (v20) {
    size_t v44 = v29;
  }
  else {
    size_t v44 = v28 + 9;
  }
  memcpy(v24, v25, v44);
  return v4;
}

unsigned char *sub_1B921F990(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (char *)((unint64_t)&a1[v7 + 1] & ~v7);
  uint64_t v9 = (char *)((unint64_t)&a2[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    int v10 = *(_DWORD *)(v6 + 84);
    uint64_t v11 = *(void *)(v6 + 64);
    if (v10) {
      size_t v12 = *(void *)(v6 + 64);
    }
    else {
      size_t v12 = v11 + 1;
    }
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v9, v5);
    size_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v13 = v6 + 56;
    v14(v8, 0, 1, v5);
    int v10 = *(_DWORD *)(v13 + 28);
    uint64_t v11 = *(void *)(v13 + 8);
  }
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(v15 - 8);
  if (v10) {
    uint64_t v17 = v11;
  }
  else {
    uint64_t v17 = v11 + 1;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  uint64_t v19 = *(unsigned int *)(v16 + 84);
  uint64_t v20 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  uint64_t v21 = v17 + v20;
  unint64_t v22 = (unint64_t)&v8[v21];
  unint64_t v23 = (unint64_t)&v9[v21];
  char v24 = (unsigned char *)(v22 & ~v20);
  uint64_t v25 = (_DWORD *)(v23 & ~v20);
  uint64_t v26 = *(void *)(v16 + 64) + 7;
  unint64_t v27 = v26 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v23 & ~v20, v19, v15))
    {
LABEL_21:
      (*(void (**)(unsigned char *, _DWORD *, uint64_t))(v18 + 32))(v24, v25, v15);
      *(void *)((unint64_t)&v24[v26] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v26) & 0xFFFFFFFFFFFFFFF8);
      if (!v19) {
        v24[v28] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)v25 + v28)) {
      goto LABEL_21;
    }
    int v29 = *((unsigned __int8 *)v25 + v28) - 1;
    int v30 = v28 & 0xFFFFFFF8;
    if ((v28 & 0xFFFFFFF8) != 0)
    {
      int v29 = 0;
      int v30 = *v25;
    }
    if ((v30 | v29) == 0xFFFFFFFF) {
      goto LABEL_21;
    }
  }
  if (v19) {
    size_t v31 = v27 + 8;
  }
  else {
    size_t v31 = v27 + 9;
  }
  memcpy(v24, v25, v31);
  return a1;
}

unsigned char *sub_1B921FBF0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (char *)((unint64_t)&a1[v7 + 1] & ~v7);
  uint64_t v9 = (char *)((unint64_t)&a2[v7 + 1] & ~v7);
  int v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v11 = v10(v8, 1, v5);
  int v12 = v10(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v9, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
      goto LABEL_12;
    }
    int v13 = *(_DWORD *)(v6 + 84);
    size_t v14 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v8, v9, v5);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v13 = *(_DWORD *)(v6 + 84);
    size_t v14 = *(void *)(v6 + 64);
  }
  if (v13) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v14 + 1;
  }
  memcpy(v8, v9, v15);
LABEL_12:
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = *(void *)(v17 - 8);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v16;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  uint64_t v22 = v16 + v21;
  unint64_t v23 = (unint64_t)&v8[v22];
  char v24 = (_DWORD *)((unint64_t)&v8[v22] & ~v21);
  uint64_t v25 = (_DWORD *)((unint64_t)&v9[v22] & ~v21);
  uint64_t v26 = *(void *)(v18 + 64);
  uint64_t v27 = v26 + 7;
  unint64_t v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v29 = v28 + 8;
  uint64_t v46 = v17;
  if (!v20)
  {
    if (*((unsigned char *)v24 + v29))
    {
      int v38 = *((unsigned __int8 *)v24 + v29) - 1;
      if (v28 == -8)
      {
        int v39 = 0;
      }
      else
      {
        int v38 = 0;
        int v39 = *v24;
      }
      if ((v39 | v38) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)v25 + v29)) {
          goto LABEL_42;
        }
        int v40 = *((unsigned __int8 *)v25 + v29) - 1;
        if (v28 == -8)
        {
          int v41 = 0;
        }
        else
        {
          int v40 = 0;
          int v41 = *v25;
        }
        char v24 = (_DWORD *)(v23 & ~v21);
        if ((v41 | v40) == 0xFFFFFFFF) {
          goto LABEL_42;
        }
        goto LABEL_38;
      }
    }
    if (!*((unsigned char *)v25 + v29))
    {
LABEL_35:
      (*(void (**)(_DWORD *, _DWORD *))(v19 + 40))(v24, v25);
      *(void *)(((unint64_t)v24 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v27) & 0xFFFFFFFFFFFFFFF8);
      return v4;
    }
    int v42 = *((unsigned __int8 *)v25 + v29) - 1;
    if (v28 != -8) {
      int v42 = 0;
    }
    __dst = (_DWORD *)(v23 & ~v21);
    if (v28 == -8) {
      int v43 = 0;
    }
    else {
      int v43 = *v25;
    }
    int v37 = (v43 | v42) + 1;
LABEL_33:
    char v24 = __dst;
    if (v37)
    {
      (*(void (**)(_DWORD *, uint64_t))(v19 + 8))(__dst, v46);
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  uint64_t v30 = v26 + 7;
  size_t v31 = v4;
  unint64_t v32 = *(uint64_t (**)(_DWORD *, uint64_t))(v19 + 48);
  __dst = (_DWORD *)(v23 & ~v21);
  uint64_t v33 = v20;
  uint64_t v34 = v20;
  uint64_t v20 = v17;
  int v35 = v32(__dst, v33);
  uint64_t v36 = v20;
  LODWORD(v20) = v34;
  int v37 = ((uint64_t (*)(_DWORD *, uint64_t, uint64_t))v32)(v25, v34, v36);
  uint64_t v27 = v30;
  size_t v29 = v28 + 8;
  uint64_t v4 = v31;
  if (!v35) {
    goto LABEL_33;
  }
  char v24 = __dst;
  if (!v37)
  {
LABEL_42:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v19 + 32))(v24, v25, v46);
    *(void *)(((unint64_t)v24 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v25 + v27) & 0xFFFFFFFFFFFFFFF8);
    if (!v20) {
      *((unsigned char *)v24 + v29) = 0;
    }
    return v4;
  }
LABEL_38:
  if (v20) {
    size_t v44 = v29;
  }
  else {
    size_t v44 = v28 + 9;
  }
  memcpy(v24, v25, v44);
  return v4;
}

uint64_t sub_1B921FFE0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v6 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v6;
  }
  if (v11 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v14;
  }
  if (v9) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = 9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  int v17 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_37;
  }
  unint64_t v18 = ((*(void *)(*(void *)(v7 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + v15
      + ((v14 + v16 + ((v13 + 1) & ~v13)) & ~v16);
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v21 = ((v17 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      int v20 = *(_DWORD *)&a1[v18];
      if (!v20) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v21 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)&a1[v18];
      if (!*(_WORD *)&a1[v18]) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v21 < 2)
    {
LABEL_37:
      if (v11 <= 0xFE)
      {
        unsigned int v25 = *a1;
        BOOL v26 = v25 >= 2;
        int v27 = (v25 + 2147483646) & 0x7FFFFFFF;
        if (v26) {
          return (v27 + 1);
        }
        else {
          return 0;
        }
      }
      uint64_t v29 = (unint64_t)&a1[v13 + 1] & ~v13;
      if (v6 == v12)
      {
        if (v5 >= 2)
        {
          unsigned int v30 = (*(uint64_t (**)(uint64_t))(v4 + 48))(v29);
          goto LABEL_47;
        }
      }
      else if (v9 >= 2)
      {
        unsigned int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))((v29 + v14 + v16) & ~v16, v9, v7);
LABEL_47:
        if (v30 >= 2) {
          return v30 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v20 = a1[v18];
  if (!a1[v18]) {
    goto LABEL_37;
  }
LABEL_27:
  int v22 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v22 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v23 = v18;
    }
    else {
      int v23 = 4;
    }
    switch(v23)
    {
      case 2:
        int v24 = *(unsigned __int16 *)a1;
        break;
      case 3:
        int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        break;
      case 4:
        int v24 = *(_DWORD *)a1;
        break;
      default:
        int v24 = *a1;
        break;
    }
  }
  else
  {
    int v24 = 0;
  }
  return v12 + (v24 | v22) + 1;
}

void sub_1B922029C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = *(void *)(v7 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  unsigned int v15 = v13 - 1;
  if (!v13) {
    unsigned int v15 = 0;
  }
  if (v11 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v11;
  }
  if (v16 <= 0xFE) {
    unsigned int v17 = 254;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v10) {
    uint64_t v18 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v19 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  unint64_t v20 = (*(void *)(*(void *)(v7 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v21 = v20 + 8;
  size_t v22 = v20 + 9;
  if (v13) {
    size_t v22 = v21;
  }
  size_t v23 = ((v18 + v19 + ((v14 + 1) & ~v14)) & ~v19) + v22;
  BOOL v24 = a3 >= v17;
  unsigned int v25 = a3 - v17;
  if (v25 == 0 || !v24)
  {
LABEL_26:
    if (v17 < a2) {
      goto LABEL_27;
    }
    goto LABEL_34;
  }
  if (v23 > 3)
  {
    int v6 = 1;
    if (v17 < a2) {
      goto LABEL_27;
    }
    goto LABEL_34;
  }
  unsigned int v26 = ((v25 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
  if (!HIWORD(v26))
  {
    if (v26 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v26 > 1;
    }
    goto LABEL_26;
  }
  int v6 = 4;
  if (v17 < a2)
  {
LABEL_27:
    unsigned int v27 = ~v17 + a2;
    if (v23 < 4)
    {
      int v28 = (v27 >> (8 * v23)) + 1;
      if (v23)
      {
        bzero(a1, v23);
        *a1 = v27 & ~(-1 << (8 * v23));
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v27;
      int v28 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v23] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v28;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v23] = v28;
        return;
      default:
        return;
    }
  }
LABEL_34:
  switch(v6)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1B9220608);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (a2)
      {
LABEL_41:
        if (v16 > 0xFE)
        {
          unint64_t v30 = (unint64_t)&a1[v14 + 1] & ~v14;
          if (v11 == v17)
          {
            if (v10 >= 2)
            {
              uint64_t v31 = a2 + 1;
              unint64_t v32 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
              v32(v30, v31, v10, v8);
            }
          }
          else if (v13 >= 2)
          {
            uint64_t v29 = ~v19;
            uint64_t v33 = (_DWORD *)((v30 + v18 + v19) & ~v19);
            if (a2 + 1 <= v13)
            {
              if (a2 != -1)
              {
                int v35 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
                unint64_t v36 = (v30 + v18 + v19) & v29;
                uint64_t v37 = a2 + 1;
                v35(v36, v37);
              }
            }
            else if (v21)
            {
              unsigned int v34 = a2 - v13;
              bzero((void *)((v30 + v18 + v19) & v29), v21);
              _DWORD *v33 = v34;
            }
          }
        }
        else
        {
          *a1 = a2 + 1;
        }
      }
      return;
  }
}

void destroy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 32);
  id v8 = v4;
  id v9 = v5;
  if (v6)
  {
    uint64_t v10 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  unsigned int v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  id v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v12;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellCompletedButtonConfiguration()
{
  return &type metadata for TTRBoardReminderCellCompletedButtonConfiguration;
}

void *initializeBufferWithCopyOfBuffer for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for TTRBoardReminderCellLocationConfiguration(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(uint64_t a1, _OWORD *a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellLocationConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellLocationConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellLocationConfiguration()
{
  return &type metadata for TTRBoardReminderCellLocationConfiguration;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellURLConfiguration()
{
  return &type metadata for TTRBoardReminderCellURLConfiguration;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B996A580();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    id v12 = v10;
    id v13 = v11;
  }
  return a1;
}

void destroy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B996A580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t initializeWithCopy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996A580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  id v11 = v9;
  id v12 = v10;
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996A580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  id v12 = *(void **)(a1 + v11);
  id v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  return a1;
}

uint64_t initializeWithTake for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996A580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996A580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 24);
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B9220ED4);
}

uint64_t sub_1B9220ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996A580();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B9220FA8);
}

uint64_t sub_1B9220FA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1B996A580();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1B9221064()
{
  uint64_t result = sub_1B996A580();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellAssigneeConfiguration()
{
  return &type metadata for TTRBoardReminderCellAssigneeConfiguration;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwxx_0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

void *_s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwcp_0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  a1[2] = *(void *)(a2 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  id v8 = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    a1[3] = v6;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v7;
  }
  return a1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwta_0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  if (!*(void *)(a1 + 24))
  {
    if (v6)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSectionLite(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSectionLite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellAppLinkConfiguration()
{
  return &type metadata for TTRBoardReminderCellAppLinkConfiguration;
}

void destroy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  id v7 = v4;
  if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v6;
  id v7 = v6;

  uint64_t v8 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v5 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellShowSubtasksConfiguration()
{
  return &type metadata for TTRBoardReminderCellShowSubtasksConfiguration;
}

void destroy for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 24))
  {
    swift_release();
  }
}

void *initializeWithCopy for TTRBoardReminderCellSubtaskCountConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  uint64_t v7 = a2 + 3;
  uint64_t v6 = a2[3];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v8 = v5;
  if (v6)
  {
    uint64_t v9 = a2[4];
    a1[3] = v6;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v7;
  }
  return a1;
}

void *assignWithCopy for TTRBoardReminderCellSubtaskCountConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  uint64_t v7 = a2[3];
  if (!a1[3])
  {
    if (v7)
    {
      uint64_t v9 = a2[4];
      a1[3] = v7;
      a1[4] = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = a2[4];
  a1[3] = v7;
  a1[4] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellSubtaskCountConfiguration()
{
  return &type metadata for TTRBoardReminderCellSubtaskCountConfiguration;
}

uint64_t destroy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_release();
LABEL_8:
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellSuggestedSectionConfiguration()
{
  return &type metadata for TTRBoardReminderCellSuggestedSectionConfiguration;
}

void destroy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  id v7 = v4;
  if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonConfiguration()
{
  return &type metadata for TTRBoardReminderCellInfoButtonConfiguration;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B9222044);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1B922212CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonVisibility()
{
  return &type metadata for TTRBoardReminderCellInfoButtonVisibility;
}

unsigned char *storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B9222230);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonVisibility.Layout()
{
  return &type metadata for TTRBoardReminderCellInfoButtonVisibility.Layout;
}

void *TTRReminderLocationOptions.homeLocation.getter(void *a1)
{
  id v2 = a1;
  return a1;
}

void TTRReminderLocationOptions.homeLocation.setter(void *a1)
{
  *unint64_t v1 = a1;
}

uint64_t (*TTRReminderLocationOptions.homeLocation.modify())()
{
  return nullsub_1;
}

void *TTRReminderLocationOptions.workLocation.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void TTRReminderLocationOptions.workLocation.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*TTRReminderLocationOptions.workLocation.modify())()
{
  return nullsub_1;
}

uint64_t TTRReminderLocationOptions.canUseVehicleEvent.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t TTRReminderLocationOptions.canUseVehicleEvent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTRReminderLocationOptions.canUseVehicleEvent.modify())()
{
  return nullsub_1;
}

uint64_t TTRReminderLocationOptions.init()()
{
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  unsigned int v7 = *(void **)(a1 + 8);
  BOOL v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRDataViewMonitorEnvironmentInfo(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRDataViewMonitorEnvironmentInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderLocationOptions()
{
  return &type metadata for TTRReminderLocationOptions;
}

uint64_t TTRReminderCellHashtagSuggestion.label.getter(uint64_t a1)
{
  return a1;
}

uint64_t TTRReminderCellHashtagSuggestion.rangeToReplace.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t TTRReminderCellHashtagSuggestion.headerText.getter()
{
  return 0;
}

id TTRReminderCellHashtagSuggestion.valueText.getter()
{
  uint64_t v5 = sub_1B996EAB0();
  uint64_t v6 = v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v2 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithString_, v2, v5, v6);

  return v3;
}

uint64_t TTRReminderCellHashtagSuggestion.contact.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.iconImageInfo.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.secondaryValueText.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.images.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t TTRReminderCellHashtagSuggestion.requiresSeparator.getter()
{
  return 0;
}

BOOL static TTRReminderCellHashtagSuggestion.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6) {
    return a3 == a7 && a4 == a8;
  }
  char v12 = sub_1B9970BB0();
  BOOL result = 0;
  if (v12) {
    return a3 == a7 && a4 == a8;
  }
  return result;
}

uint64_t sub_1B9222714()
{
  return 0;
}

id sub_1B9222720()
{
  uint64_t v5 = sub_1B996EAB0();
  uint64_t v6 = v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B996EB60();
  swift_bridgeObjectRelease();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v2 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithString_, v2, v5, v6);

  return v3;
}

uint64_t sub_1B92227C8()
{
  return 0;
}

uint64_t sub_1B92227D0()
{
  return 0;
}

uint64_t static TTRReminderCellHashtagSuggestion.identitiesEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6) {
    return 1;
  }
  else {
    return sub_1B9970BB0();
  }
}

BOOL static TTRReminderCellHashtagSuggestion.contentsEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6) {
    return a3 == a7 && a4 == a8;
  }
  char v12 = sub_1B9970BB0();
  BOOL result = 0;
  if (v12) {
    return a3 == a7 && a4 == a8;
  }
  return result;
}

unint64_t sub_1B9222878(uint64_t a1)
{
  unint64_t result = sub_1B92228A0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B92228A0()
{
  unint64_t result = qword_1E9EFDDE0[0];
  if (!qword_1E9EFDDE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9EFDDE0);
  }
  return result;
}

uint64_t sub_1B92228F4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1B9970BB0();
  }
}

BOOL sub_1B9222924(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v4 && v3 == v5;
  }
  char v7 = sub_1B9970BB0();
  BOOL result = 0;
  if (v7) {
    return v2 == v4 && v3 == v5;
  }
  return result;
}

uint64_t initializeWithCopy for TTRReminderCellHashtagSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

void *assignWithCopy for TTRReminderCellHashtagSuggestion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TTRReminderCellHashtagSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderCellHashtagSuggestion()
{
  return &type metadata for TTRReminderCellHashtagSuggestion;
}

uint64_t static TTRIOptionMenuCellContentState.Option.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v7 = type metadata accessor for TTRIMenuItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v28[0] = (char *)v28 - v9;
  v28[1] = a3;
  long long v28[2] = a4;
  uint64_t v10 = type metadata accessor for TTRIOptionMenuCellContentState.Option();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v31 = (char *)v28 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v15 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  unsigned int v17 = (char *)v28 - v16;
  uint64_t v19 = (char *)v28 + *(int *)(v18 + 48) - v16;
  uint64_t v29 = v11;
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v20((char *)v28 - v16, v30, v10, v15);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v19, a2, v10);
  uint64_t v30 = v8;
  size_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v21(v17, 1, v7) == 1)
  {
    char v22 = 1;
    if (v21(v19, 1, v7) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v20)(v31, v17, v10);
    if (v21(v19, 1, v7) != 1)
    {
      uint64_t v23 = v30;
      uint64_t v24 = v28[0];
      (*(void (**)(void, char *, uint64_t))(v30 + 32))(v28[0], v19, v7);
      unsigned int v25 = v31;
      char v22 = static TTRIMenuItem.== infix(_:_:)();
      unsigned int v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v26(v24, v7);
      v26((uint64_t)v25, v7);
LABEL_8:
      uint64_t v14 = v29;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v7);
  }
  char v22 = 0;
  uint64_t v10 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v10);
  return v22 & 1;
}

uint64_t type metadata accessor for TTRIOptionMenuCellContentState.Option()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B9222DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static TTRIOptionMenuCellContentState.Option.__derived_enum_equals(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

id TTRIOptionMenuCellContentState.icon.getter()
{
  id v1 = *v0;
  sub_1B9222E38(*v0, v0[1], v0[2]);
  return v1;
}

id sub_1B9222E38(id result, void *a2, void *a3)
{
  if (result != (id)1)
  {
    uint64_t v4 = result;
    id v5 = a3;
    id v6 = v4;
    return a2;
  }
  return result;
}

void TTRIOptionMenuCellContentState.icon.setter(void *a1, void *a2, void *a3)
{
  sub_1B9222ED0(*v3, v3[1], v3[2]);
  void *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
}

void sub_1B9222ED0(void *a1, void *a2, void *a3)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t (*TTRIOptionMenuCellContentState.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIOptionMenuCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.menuOptions.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRIOptionMenuCellContentState.menuOptions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.menuOptions.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.selectedItem.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t TTRIOptionMenuCellContentState.selectedItem.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 48), a1);
}

uint64_t (*TTRIOptionMenuCellContentState.selectedItem.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.isSeparatorHidden.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t TTRIOptionMenuCellContentState.isSeparatorHidden.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.isSeparatorHidden.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.init(icon:title:ttriAccessibilitySubtitle:menuOptions:selectedItem:isSeparatorHidden:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, char a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  *((void *)a9 + 2) = a3;
  *((void *)a9 + 3) = a4;
  *((void *)a9 + 4) = a5;
  *((void *)a9 + 5) = a6;
  *((void *)a9 + 6) = a7;
  *((void *)a9 + 7) = a8;
  uint64_t v13 = type metadata accessor for TTRIOptionMenuCellContentState();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(&a9[*(int *)(v13 + 48)], a10, a12);
  a9[*(int *)(v13 + 52)] = a11;
  return result;
}

uint64_t type metadata accessor for TTRIOptionMenuCellContentState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TTRIOptionMenuCellContentState.subtitle.getter()
{
  type metadata accessor for TTRIOptionMenuCellContentState.Option();
  sub_1B996EFA0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_getWitnessTable();
  sub_1B996ED00();
  swift_bridgeObjectRelease();
  if (v2) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B9223304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v5 = type metadata accessor for TTRIMenuItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for TTRIOptionMenuCellContentState.Option();
  __n128 v13 = MEMORY[0x1F4188790](v12);
  __n128 v15 = (char *)&v26 - v14;
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))((char *)&v26 - v14, a1, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5);
  if (result == 1)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    int v28 = a3;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v15, v5);
    uint64_t v18 = &v11[*(int *)(v5 + 44)];
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *((void *)v18 + 1);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    if (v20)
    {
      uint64_t v27 = v19;
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t v21 = v8[1];
      uint64_t v27 = *v8;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    }
    char v22 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v22(v8, v5);
    type metadata accessor for TTRIOptionMenuCellContentState();
    char v23 = sub_1B996E990();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v11, v5);
    if (v23)
    {
      uint64_t v25 = v27;
      uint64_t v24 = v28;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      uint64_t v21 = 0;
      uint64_t v24 = v28;
    }
    *uint64_t v24 = v25;
    v24[1] = v21;
  }
  return result;
}

uint64_t sub_1B92235D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B9223304(a1, *(void *)(v2 + 32), a2);
}

uint64_t static TTRIOptionMenuCellContentState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 != 1)
  {
    if (v5 == (void *)1) {
      goto LABEL_39;
    }
    __n128 v13 = *(void **)(a1 + 8);
    uint64_t v12 = *(void **)(a1 + 16);
    uint64_t v14 = *(void **)(a2 + 8);
    __n128 v15 = *(void **)(a2 + 16);
    if (v4)
    {
      if (!v5) {
        goto LABEL_39;
      }
      int v40 = *(void **)(a2 + 8);
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BB0);
      sub_1B9222E38(v5, v14, v15);
      sub_1B9222E38(v4, v13, v12);
      uint64_t v16 = v15;
      id v17 = v5;
      uint64_t v18 = v12;
      uint64_t v19 = v13;
      id v20 = v4;
      char v21 = sub_1B996FC90();

      __n128 v13 = v19;
      char v22 = v40;
      if ((v21 & 1) == 0)
      {
        sub_1B9222ED0(v5, v40, v16);
        char v23 = v4;
        uint64_t v24 = v19;
        uint64_t v25 = v18;
        goto LABEL_38;
      }
    }
    else
    {
      if (v5) {
        goto LABEL_39;
      }
      sub_1B9222E38(0, v14, v15);
      sub_1B9222E38(0, v13, v12);
      char v22 = v14;
      uint64_t v18 = v12;
      uint64_t v16 = v15;
    }
    uint64_t v26 = v22;
    int v39 = v18;
    if (v13)
    {
      if (!v22)
      {
        uint64_t v31 = v5;
        unint64_t v32 = 0;
        goto LABEL_36;
      }
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
      id v27 = v26;
      int v28 = v13;
      id v29 = v13;
      char v30 = sub_1B996FC90();

      __n128 v13 = v28;
      if ((v30 & 1) == 0)
      {
        uint64_t v31 = v5;
        unint64_t v32 = v26;
LABEL_36:
        sub_1B9222ED0(v31, v32, v16);
        char v23 = v4;
        uint64_t v24 = v13;
        goto LABEL_37;
      }
    }
    else if (v22)
    {
      sub_1B9222ED0(v5, v22, v16);
      char v23 = v4;
      uint64_t v24 = 0;
LABEL_37:
      uint64_t v25 = v39;
      goto LABEL_38;
    }
    if (v39)
    {
      if (v16)
      {
        int v41 = v26;
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
        id v34 = v16;
        int v38 = v13;
        id v35 = v39;
        char v36 = sub_1B996FC90();

        sub_1B9222ED0(v5, v41, v16);
        sub_1B9222ED0(v4, v38, v39);
        if ((v36 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_3;
      }
      sub_1B9222ED0(v5, v26, 0);
      char v23 = v4;
      uint64_t v24 = v13;
      uint64_t v25 = v39;
    }
    else
    {
      if (!v16)
      {
        sub_1B9222ED0(v5, v26, 0);
        sub_1B9222ED0(v4, v13, 0);
        goto LABEL_3;
      }
      sub_1B9222ED0(v5, v26, v16);
      char v23 = v4;
      uint64_t v24 = v13;
      uint64_t v25 = 0;
    }
LABEL_38:
    sub_1B9222ED0(v23, v24, v25);
    goto LABEL_39;
  }
  if (v5 != (void *)1) {
    goto LABEL_39;
  }
LABEL_3:
  BOOL v6 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (v6 || (char v7 = sub_1B9970BB0(), v8 = 0, (v7 & 1) != 0))
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(a2 + 48);
    if (v9)
    {
      if (!v10) {
        goto LABEL_39;
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v9 != v10)
      {
        char v11 = sub_1B9970BB0();
        char v8 = 0;
        if ((v11 & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v10)
    {
      goto LABEL_39;
    }
    type metadata accessor for TTRIOptionMenuCellContentState.Option();
    swift_getWitnessTable();
    if (sub_1B996EFB0())
    {
      uint64_t v33 = type metadata accessor for TTRIOptionMenuCellContentState();
      if (sub_1B996E990())
      {
        char v8 = *(unsigned char *)(a1 + *(int *)(v33 + 52)) ^ *(unsigned char *)(a2 + *(int *)(v33 + 52)) ^ 1;
        return v8 & 1;
      }
    }
LABEL_39:
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1B92239F0(uint64_t a1, uint64_t a2)
{
  return static TTRIOptionMenuCellContentState.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t TTRIOptionMenuCellContent.action.getter()
{
  uint64_t v1 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8));
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1B90C3328(*v1);
  return v2;
}

uint64_t TTRIOptionMenuCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xF8));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1B90C337C(v6);
}

uint64_t (*TTRIOptionMenuCellContent.action.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t TTRIOptionMenuCellContent.stateChangeBlock.getter()
{
  uint64_t v1 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100));
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1B90C3328(*v1);
  return v2;
}

uint64_t TTRIOptionMenuCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x100));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1B90C337C(v6);
}

uint64_t (*TTRIOptionMenuCellContent.stateChangeBlock.modify())()
{
  return j__swift_endAccess;
}

id TTRIOptionMenuCellContent.__allocating_init(state:menuImageProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone(v4);
  id v9 = sub_1B9227AD8(a1, a2, a3);
  swift_unknownObjectRelease();
  uint64_t v10 = type metadata accessor for TTRIOptionMenuCellContentState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  return v9;
}

id TTRIOptionMenuCellContent.init(state:menuImageProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = sub_1B9227AD8(a1, a2, a3);
  swift_unknownObjectRelease();
  uint64_t v5 = type metadata accessor for TTRIOptionMenuCellContentState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t TTRIOptionMenuCellContent.selectionBehavior.getter()
{
  return 0;
}

uint64_t TTRIOptionMenuCellContent.willUnassignCell(_:)(void *a1)
{
  *(void *)((char *)a1 + *(void *)((*a1 & *MEMORY[0x1E4FBC8C8]) + 0x3A8) + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t TTRIOptionMenuCellContent.didAssignCell(_:)(void *a1)
{
  *(void *)((char *)a1 + *(void *)((*a1 & *MEMORY[0x1E4FBC8C8]) + 0x3A8) + 8) = &protocol witness table for TTRIOptionMenuCellContent<A>;
  return swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall TTRIOptionMenuCellContent.cellDidBecomeSelected()()
{
  uint64_t v1 = (void (**)(uint64_t))((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8));
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_1B90C337C((uint64_t)v2);
  }
}

uint64_t TTRIOptionMenuCellContent.updateCell(_:)(uint64_t a1)
{
  v5[2] = a1;
  uint64_t v1 = *(void **)(a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1B9227BC0;
  *(void *)(v2 + 24) = v5;
  aBlock[4] = sub_1B919966C;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_14;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performBatchUpdates_, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B9224070(void *a1, void *a2)
{
  uint64_t v4 = *MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x398);
  uint64_t v61 = sub_1B9970060();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  int v58 = (char *)&v46 - v6;
  uint64_t v60 = v5;
  uint64_t v55 = type metadata accessor for TTRIOptionMenuCellContentState();
  uint64_t v57 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  int v56 = (char *)&v46 - v7;
  uint64_t v8 = *(void *)((*a2 & v4) + 0x78);
  unint64_t v62 = a2;
  id v9 = (char *)a2 + v8;
  swift_beginAccess();
  char v11 = *(void **)v9;
  uint64_t v10 = (void *)*((void *)v9 + 1);
  uint64_t v12 = (void *)*((void *)v9 + 2);
  BOOL v13 = *(void *)v9 == 1;
  if (*(void *)v9 == 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *(void **)v9;
  }
  if (*(void *)v9 == 1) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *((void *)v9 + 1);
  }
  uint64_t v46 = v15;
  if (v13) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v12;
  }
  if (v13) {
    uint64_t v17 = 0x1FFFFFFFELL;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = (uint64_t)a1 + direct field offset for TTRIStaticTableViewStandardCell.icon;
  swift_beginAccess();
  sub_1B910DD48(v18, (uint64_t)v63);
  char v54 = *(void **)v18;
  int v53 = *(void **)(v18 + 8);
  unsigned int v52 = *(void **)(v18 + 16);
  unint64_t v51 = *(void *)(v18 + 24);
  uint64_t v50 = *(void *)(v18 + 32);
  uint64_t v49 = *(void *)(v18 + 40);
  uint64_t v48 = *(void *)(v18 + 48);
  uint64_t v47 = *(void *)(v18 + 56);
  unsigned __int8 v19 = *(unsigned char *)(v18 + 64);
  uint64_t v20 = v46;
  *(void *)uint64_t v18 = v14;
  *(void *)(v18 + 8) = v20;
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  uint64_t v21 = v55;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(unsigned char *)(v18 + 64) = 0;
  sub_1B9222E38(v11, v10, v12);
  sub_1B9222E38(v11, v10, v12);
  sub_1B910DEE0((uint64_t)v63, (void (*)(void, void, void, void, void, void, void, void, char))sub_1B910DDB0);
  sub_1B910DE4C(v54, v53, v52, v51, v50, v49, v48, v47, v19);
  sub_1B97E6828((uint64_t)v63);
  sub_1B9222ED0(v11, v10, v12);
  sub_1B910DEE0((uint64_t)v63, (void (*)(void, void, void, void, void, void, void, void, char))sub_1B910DE4C);
  char v22 = *(void **)((char *)a1 + qword_1E9F05FF8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v23 = v22;
  uint64_t v24 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setText_, v24);

  uint64_t v25 = v57;
  uint64_t v26 = v56;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v9, v21);
  uint64_t v27 = TTRIOptionMenuCellContentState.subtitle.getter();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v21);
  char v30 = (void *)((char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.subtitle);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  *char v30 = v27;
  v30[1] = v29;
  if (v29)
  {
    if (v32)
    {
      BOOL v33 = v27 == v31 && v32 == v29;
      if (v33 || (sub_1B9970BB0() & 1) != 0) {
        goto LABEL_23;
      }
    }
  }
  else if (!v32)
  {
    goto LABEL_24;
  }
  TTRIStaticTableViewStandardCell.updateSubtitle()();
LABEL_23:
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v34 = *((void *)v9 + 5);
  uint64_t v35 = *((void *)v9 + 6);
  char v36 = (void *)((char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.ttriAccessibilitySubtitle);
  swift_beginAccess();
  void *v36 = v34;
  v36[1] = v35;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v37 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B92246B4(v37);
  uint64_t v38 = v60;
  uint64_t v39 = *(void *)(v60 - 8);
  uint64_t v40 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v58, &v9[*(int *)(v21 + 48)], v60);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v38);
  sub_1B9227BD8(v40);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v40, v61);
  LODWORD(v39) = v9[*(int *)(v21 + 52)];
  int v41 = (char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.isSeparatorHidden;
  swift_beginAccess();
  int v42 = *v41;
  *int v41 = v39;
  if (v39 != v42) {
    objc_msgSend(*(id *)((char *)a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView), sel_invalidateIntrinsicContentSize);
  }
  uint64_t v43 = *(void *)((char *)v62 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v62) + 0x108) + 8);
  uint64_t v44 = swift_unknownObjectRetain();
  sub_1B9227D54(v44, v43);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B92246B4(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x3C0)) = a1;
  sub_1B9226BAC();

  return swift_bridgeObjectRelease();
}

void TTRIOptionMenuCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
}

void TTRIOptionMenuCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
}

uint64_t sub_1B9224788()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1B90C337C(*(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8)));
  sub_1B90C337C(*(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x100)));

  return swift_unknownObjectRelease();
}

uint64_t sub_1B9224830(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1B90C337C(*(void *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0xF8)));
  sub_1B90C337C(*(void *)((char *)a1 + *(void *)((*v2 & *a1) + 0x100)));

  return swift_unknownObjectRelease();
}

uint64_t TTRIOptionMenuCellContent.selected(item:)(uint64_t a1)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xE8);
  uint64_t v4 = type metadata accessor for TTRIOptionMenuCellContentState();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - v13;
  sub_1B90D7014(a1, (uint64_t)v26);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v10, 0, 1, v3);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v3);
    uint64_t v17 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
    swift_beginAccess();
    uint64_t v18 = v25;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v24(v6, v17, v4);
    (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&v6[*(int *)(v4 + 48)], v14, v3);
    sub_1B995E808((uint64_t)v6);
    unsigned __int8 v19 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v25 = v18 + 8;
    v19(v6, v4);
    uint64_t v20 = (void (**)(char *))((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x100));
    swift_beginAccess();
    uint64_t v21 = *v20;
    if (*v20)
    {
      swift_endAccess();
      v24(v6, v17, v4);
      swift_retain();
      v21(v6);
      sub_1B90C337C((uint64_t)v21);
      v19(v6, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v3);
      return swift_endAccess();
    }
  }
  else
  {
    v16(v10, 1, 1, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1B9224CF0(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = (void *)(*MEMORY[0x1E4FBC8C8] & *v1);
  uint64_t v4 = v3[115];
  uint64_t v115 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  int v77 = (char *)&v75 - v5;
  uint64_t v6 = sub_1B9970060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v108 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  unsigned int v92 = (char *)&v75 - v7;
  char v106 = *(char **)(v6 - 8);
  MEMORY[0x1F4188790](v8);
  int v97 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int v91 = (char *)&v75 - v11;
  uint64_t v12 = v3[116];
  uint64_t v113 = type metadata accessor for TTRIMenuItem();
  uint64_t v94 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  int v89 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v13;
  MEMORY[0x1F4188790](v14);
  unsigned int v114 = (char *)&v75 - v15;
  uint64_t v96 = v12;
  uint64_t v16 = (void *)type metadata accessor for TTRIOptionMenuCellContentState.Option();
  uint64_t v112 = *(v16 - 1);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v75 - v20;
  uint64_t v117 = 0;
  uint64_t v118 = MEMORY[0x1E4FBC860];
  uint64_t v22 = v3[118];
  unsigned int v98 = v1;
  uint64_t v23 = (void *)((char *)v1 + v22);
  swift_beginAccess();
  uint64_t v24 = *v23;
  char v93 = v16;
  unint64_t v104 = v18;
  uint64_t v103 = v21;
  if (v24)
  {
    uint64_t v25 = v23[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain();
    uint64_t v28 = ObjectType;
    uint64_t v21 = v103;
    uint64_t v29 = v25;
    uint64_t v18 = v104;
    v27(v28, v29);
    uint64_t v16 = v93;
    swift_unknownObjectRelease();
  }
  uint64_t v30 = *(void *)((char *)v98 + *(void *)((*v2 & *v98) + 0x3C0));
  uint64_t v31 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v32 = MEMORY[0x1BA9D7DA0](v31, v16);
  uint64_t v33 = v113;
  if (v32)
  {
    unsigned int v85 = (char *)v98 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v98) + 0x3B8);
    swift_beginAccess();
    uint64_t v34 = 0;
    size_t v110 = (void (**)(char *, char *, void *))(v112 + 32);
    BOOL v111 = (void (**)(char *, uint64_t *, void *))(v112 + 16);
    uint64_t v109 = (unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
    unsigned int v107 = (char **)(v94 + 32);
    unsigned int v102 = (void (**)(uint64_t *, char *, uint64_t))(v115 + 16);
    char v84 = (void (**)(char *, void, uint64_t, uint64_t))(v115 + 56);
    int v83 = (void (**)(char *, char *, uint64_t))(v106 + 16);
    int v82 = (uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
    unsigned int v76 = (void (**)(char *, char *, uint64_t))(v115 + 32);
    unsigned int v79 = (void (**)(char *, uint64_t))(v115 + 8);
    unsigned int v95 = (void (**)(char *, uint64_t))(v106 + 8);
    unsigned int v78 = (void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v81 = v94 + 16;
    unsigned int v80 = (void (**)(char *, uint64_t))(v94 + 8);
    unsigned int v88 = v23;
    uint64_t v108 = v4;
    uint64_t v87 = v6;
    uint64_t v86 = v30;
    while (1)
    {
      char v36 = sub_1B996EF20();
      sub_1B996EE90();
      if (v36)
      {
        (*(void (**)(char *, unint64_t, void *))(v112 + 16))(v21, v30+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(void *)(v112 + 72) * v34, v16);
        uint64_t v37 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t result = sub_1B9970550();
        if (v75 != 8)
        {
          __break(1u);
          return result;
        }
        v116[0] = result;
        (*v111)(v21, v116, v16);
        swift_unknownObjectRelease();
        uint64_t v37 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
      }
      uint64_t v115 = v37;
      (*v110)(v18, v21, v16);
      if ((*v109)(v18, 1, v33) != 1) {
        break;
      }
      if (v117)
      {
        sub_1B90BFD68(0, (unint64_t *)&unk_1E9F021E0);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B996FC10();
        MEMORY[0x1BA9D7C50]();
        if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B996EEB0();
        }
        sub_1B996EF30();
        sub_1B996EE70();
        uint64_t v18 = v104;
        uint64_t v21 = v103;
      }
      uint64_t v117 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v35 = v115;
      ++v34;
      if (v35 == MEMORY[0x1BA9D7DA0](v30, v16)) {
        goto LABEL_37;
      }
    }
    uint64_t v38 = v114;
    char v106 = *v107;
    ((void (*)(char *, char *, uint64_t))v106)(v114, v18, v33);
    uint64_t v39 = *v102;
    uint64_t v40 = v91;
    int v100 = &v38[*(int *)(v33 + 40)];
    int v101 = v39;
    ((void (*)(char *))v39)(v91);
    (*v84)(v40, 0, 1, v4);
    int v41 = v92;
    int v42 = &v92[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v43 = *v83;
    (*v83)(v92, v40, v6);
    v43(v42, v85, v6);
    uint64_t v44 = *v82;
    if ((*v82)(v41, 1, v4) == 1)
    {
      int v45 = *v95;
      (*v95)(v40, v6);
      int v46 = v44(v42, 1, v4);
      uint64_t v47 = v113;
      if (v46 == 1)
      {
        v45(v41, v6);
LABEL_21:
        uint64_t v105 = 1;
LABEL_23:
        sub_1B90BFD68(0, (unint64_t *)&qword_1E9F02200);
        unsigned int v52 = v114;
        int v53 = (void *)*((void *)v114 + 2);
        uint64_t v54 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v55 = v94;
        int v56 = v89;
        (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v89, v52, v47);
        unint64_t v57 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        int v58 = (void *)swift_allocObject();
        uint64_t v59 = v96;
        v58[2] = v108;
        v58[3] = v59;
        v58[4] = v54;
        ((void (*)(char *, char *, uint64_t))v106)((char *)v58 + v57, v56, v47);
        id v60 = v53;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v61 = (void *)sub_1B996FDC0();
        uint64_t v62 = v117;
        id v63 = v61;
        if (v62)
        {
          MEMORY[0x1BA9D7C50]();
          uint64_t v23 = v88;
          uint64_t v16 = v93;
          if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B996EEB0();
          }
        }
        else
        {
          MEMORY[0x1BA9D7C50]();
          uint64_t v23 = v88;
          uint64_t v16 = v93;
          if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B996EEB0();
          }
        }
        sub_1B996EF30();
        uint64_t v4 = v108;
        sub_1B996EE70();
        swift_beginAccess();
        if (*v23)
        {
          uint64_t v64 = v23[1];
          swift_endAccess();
          uint64_t v65 = swift_getObjectType();
          v116[3] = v4;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v116);
          v101(boxed_opaque_existential_0, v100, v4);
          int v67 = *(void (**)(uint64_t *, id, uint64_t, uint64_t))(v64 + 16);
          swift_unknownObjectRetain();
          v67(v116, v63, v65, v64);

          swift_unknownObjectRelease();
          uint64_t v33 = v113;
          (*v80)(v114, v113);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
        }
        else
        {
          uint64_t v33 = v113;
          (*v80)(v114, v113);
          swift_endAccess();
        }
        uint64_t v6 = v87;
        uint64_t v18 = v104;
        uint64_t v21 = v103;
        uint64_t v30 = v86;
        goto LABEL_6;
      }
    }
    else
    {
      v43(v97, v41, v6);
      if (v44(v42, 1, v4) != 1)
      {
        uint64_t v48 = v77;
        (*v76)(v77, v42, v4);
        char v49 = sub_1B996E990();
        uint64_t v50 = *v79;
        (*v79)(v48, v4);
        unint64_t v51 = *v95;
        (*v95)(v40, v6);
        v50(v97, v4);
        v51(v41, v6);
        uint64_t v47 = v113;
        if (v49) {
          goto LABEL_21;
        }
LABEL_22:
        uint64_t v105 = 0;
        goto LABEL_23;
      }
      (*v95)(v40, v6);
      (*v79)(v97, v4);
      uint64_t v47 = v113;
    }
    (*v78)(v41, TupleTypeMetadata2);
    goto LABEL_22;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)MEMORY[0x1E4FBC8C8];
  if (v117)
  {
    sub_1B90BFD68(0, (unint64_t *)&unk_1E9F021E0);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B996FC10();
    MEMORY[0x1BA9D7C50]();
    if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_44:
    }
      sub_1B996EEB0();
    sub_1B996EF30();
    sub_1B996EE70();
  }
  int v69 = v98;
  int v70 = *(void **)((char *)v98 + *(void *)((*v16 & *v98) + 0x3C8));
  sub_1B90BFD68(0, (unint64_t *)&unk_1E9F021E0);
  int v71 = (void *)sub_1B996FC10();
  objc_msgSend(v70, sel_setMenu_, v71);

  objc_msgSend(v70, sel_setChangesSelectionAsPrimaryAction_, 1);
  objc_msgSend(v69, sel__setPopupMenuButton_, v70);
  if (*v23)
  {
    uint64_t v72 = v23[1];
    uint64_t v73 = swift_getObjectType();
    char v74 = *(void (**)(void *, uint64_t, uint64_t))(v72 + 24);
    swift_unknownObjectRetain();
    v74(v70, v73, v72);
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id TTRIOptionMenuTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *TTRIOptionMenuTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  unsigned int v80 = a3;
  uint64_t v77 = a2;
  uint64_t v79 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v6 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC9D0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1B996FE60();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v70[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1B996FF50();
  MEMORY[0x1F4188790](v14 - 8);
  *(void *)&v3[*(void *)(v6 + 936) + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v4[*(void *)((*v5 & *(void *)v4) + 0x3B0)];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)(v6 + 920) - 8) + 56))(&v4[*(void *)((*v5 & *(void *)v4) + 0x3B8)], 1, 1, *(void *)(v6 + 920));
  uint64_t v16 = *(void *)((*v5 & *(void *)v3) + 0x3C0);
  type metadata accessor for TTRIOptionMenuCellContentState.Option();
  uint64_t v17 = v3;
  *(void *)&v3[v16] = sub_1B996EF00();
  type metadata accessor for TTRIOptionMenuTitlelessPopupButton();
  sub_1B996FF00();
  (*(void (**)(unsigned char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FB1248], v10);
  sub_1B996FE70();
  sub_1B996FE50();
  sub_1B996FE30();
  sub_1B996D7A0();
  uint64_t v18 = sub_1B996D790();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 0, 1, v18);
  sub_1B996FEC0();
  uint64_t v19 = (void *)sub_1B996FF60();
  id v20 = objc_msgSend(v19, sel_titleLabel);
  if (v20)
  {
    uint64_t v21 = v20;
    objc_msgSend(v20, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  objc_msgSend(v19, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v19, sel_setShowsMenuAsPrimaryAction_, 1);
  uint64_t v22 = self;
  id v23 = v19;
  id v24 = objc_msgSend(v22, sel_secondaryLabelColor);
  objc_msgSend(v23, sel_setTintColor_, v24);

  *(void *)&v17[*(void *)((*v5 & *(void *)v17) + 0x3C8)] = v23;
  id v25 = v23;

  id v73 = v22;
  if (v80)
  {
    uint64_t v26 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = 0;
  }
  v82.receiver = v17;
  v82.super_class = ObjectType;
  uint64_t v27 = (char *)objc_msgSendSuper2(&v82, sel_initWithStyle_reuseIdentifier_, v79, v26);

  uint64_t v28 = &v27[direct field offset for TTRIStaticTableViewStandardCell.extraAccessory];
  swift_beginAccess();
  uint64_t v29 = *(void **)v28;
  uint64_t v30 = *((void *)v28 + 1);
  uint64_t v31 = *((void *)v28 + 2);
  uint64_t v38 = *((void *)v28 + 3);
  uint64_t v32 = (void *)*((void *)v28 + 4);
  int v33 = v28[40];
  *(void *)uint64_t v28 = v25;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  unsigned char v28[40] = 1;
  id v34 = v25;
  uint64_t v35 = v27;
  id v36 = v34;
  char v74 = v35;
  sub_1B9227E18(v29, v30, v31, v38, v32, v33);
  uint64_t ObjectType = (objc_class *)v29;
  uint64_t v77 = v30;
  uint64_t v76 = v31;
  uint64_t v75 = v38;
  uint64_t v37 = v38;
  LODWORD(v38) = v33;
  unsigned int v80 = v32;
  sub_1B9227EAC(v29, v30, v31, v37, v32, v33);
  uint64_t v40 = *(void **)v28;
  uint64_t v39 = *((void *)v28 + 1);
  uint64_t v42 = *((void *)v28 + 2);
  uint64_t v41 = *((void *)v28 + 3);
  uint64_t v43 = (void *)*((void *)v28 + 4);
  int v44 = v28[40];
  if (v44 == 255)
  {
    if (v38 == 255) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  if (v38 == 255)
  {
LABEL_11:
    id v72 = v36;
    char v49 = ObjectType;
    LODWORD(v79) = v38;
    uint64_t v38 = v77;
    uint64_t v50 = v76;
    uint64_t v51 = v75;
    sub_1B9227E18(ObjectType, v77, v76, v75, v80, v79);
    sub_1B9227E18(v40, v39, v42, v41, v43, v44);
    sub_1B9227EAC(v40, v39, v42, v41, v43, v44);
    uint64_t v52 = v38;
    LOBYTE(v38) = v79;
    sub_1B9227EAC(v49, v52, v50, v51, v80, v79);
    goto LABEL_12;
  }
  id v72 = v36;
  int v45 = ObjectType;
  LODWORD(v79) = v38;
  uint64_t v38 = v77;
  *(void *)&long long v88 = ObjectType;
  *((void *)&v88 + 1) = v77;
  uint64_t v46 = v76;
  uint64_t v47 = v75;
  uint64_t v89 = v76;
  uint64_t v90 = v75;
  int v91 = v80;
  char v92 = v79;
  *(void *)&long long v83 = v40;
  *((void *)&v83 + 1) = v39;
  uint64_t v84 = v42;
  uint64_t v85 = v41;
  uint64_t v86 = v43;
  char v87 = v44;
  sub_1B9227E18(ObjectType, v77, v76, v75, v80, v79);
  sub_1B9227E18(v40, v39, v42, v41, v43, v44);
  int v71 = _s15RemindersUICore31TTRIStaticTableViewStandardCellC14ExtraAccessoryO2eeoiySbAE_AEtFZ_0(&v83, &v88);
  uint64_t v48 = v38;
  LOBYTE(v38) = v79;
  sub_1B9227EAC(v45, v48, v46, v47, v80, v79);
  sub_1B9227EAC(v40, v39, v42, v41, v43, v44);
  if (v71)
  {
    id v36 = v72;
    goto LABEL_14;
  }
LABEL_12:
  int v53 = v74;
  uint64_t v54 = *(void **)&v74[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v53;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_1B9227F74;
  *(void *)(v56 + 24) = v55;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v56;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_10;
  unint64_t v57 = _Block_copy(aBlock);
  id v58 = v53;
  swift_retain();
  swift_release();
  objc_msgSend(v54, sel_performBatchUpdates_, v57);
  _Block_release(v57);
  LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
  id v36 = v72;

  swift_release();
  swift_release();
  sub_1B9227EAC(ObjectType, v77, v76, v75, v80, v38);
  if ((v54 & 1) == 0) {
    goto LABEL_15;
  }
  __break(1u);
LABEL_14:
  int v53 = v74;

  sub_1B9227EAC(ObjectType, v77, v76, v75, v80, v38);
LABEL_15:

  uint64_t v59 = (NSString *)*MEMORY[0x1E4FB27D8];
  id v60 = (NSString *)*MEMORY[0x1E4FB27F0];
  uint64_t v61 = *MEMORY[0x1E4FB28C8];
  uint64_t v62 = v53;
  id v63 = sub_1B97D2C58(v61, v59, v60, 0, 1);
  uint64_t v64 = &v62[direct field offset for TTRIStaticTableViewStandardCell.subtitleFont];
  swift_beginAccess();
  uint64_t v65 = *(void **)v64;
  *(void *)uint64_t v64 = v63;
  id v66 = v63;

  int v67 = *(void **)&v62[qword_1E9F06018];
  if (v67) {
    objc_msgSend(v67, sel_setFont_, *(void *)v64);
  }

  int v68 = v62;
  TTRIStaticTableViewStandardCell.subtitleTextColor.setter(objc_msgSend(v73, sel_secondaryLabelColor));

  return v68;
}

char *sub_1B92266E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = sub_1B996E9F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return TTRIOptionMenuTableViewCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

void sub_1B9226734(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1B92291F0();
}

void sub_1B9226778()
{
  id v1 = objc_allocWithZone(v0);
  sub_1B92291F0();
}

uint64_t sub_1B92267C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v28 = a1;
  uint64_t v25 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v3 = v25;
  uint64_t v4 = *(void *)(v25 + 920);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  id v24 = (char *)&v23 - v6;
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)&v23 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = (char *)v2 + *(void *)(v3 + 952);
  swift_beginAccess();
  uint64_t v14 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v27 = v8;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v12, v13, v7);
  v15(v14, (char *)v28, v7);
  uint64_t v28 = v5;
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v16(v12, 1, v4) == 1)
  {
    if (v16(v14, 1, v4) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v7);
    }
  }
  else
  {
    v15(v29, v12, v7);
    if (v16(v14, 1, v4) != 1)
    {
      uint64_t v18 = v28;
      uint64_t v19 = v24;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v14, v4);
      id v20 = v29;
      char v21 = sub_1B996E990();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v19, v4);
      v22(v20, v4);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v7);
      if (v21) {
        return result;
      }
      return sub_1B9224CF0(result);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v4);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, TupleTypeMetadata2);
  return sub_1B9224CF0(result);
}

uint64_t sub_1B9226BAC()
{
  type metadata accessor for TTRIOptionMenuCellContentState.Option();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_getWitnessTable();
  char v0 = sub_1B996EFB0();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
  {
    return sub_1B9224CF0(result);
  }
  return result;
}

double TTRIOptionMenuTableViewCell.sideBySideTitleConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.6;
  *(_OWORD *)a1 = xmmword_1B997F870;
  *(_OWORD *)(a1 + 16) = xmmword_1B997F880;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t TTRIOptionMenuTableViewCell.extraAccessoryAlwaysPinnedToTrailingEdge.getter()
{
  return 1;
}

void sub_1B9226CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21[-1] - v9;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1BA9DB180](a2 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = a3 + *(int *)(type metadata accessor for TTRIMenuItem() + 40);
    uint64_t v14 = *(void *)(a4 - 8);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v15(v10, v13, a4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, a4);
    sub_1B9227BD8((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = (char *)v12 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v12) + 0x3A8);
    if (MEMORY[0x1BA9DB180](v16))
    {
      uint64_t v17 = *((void *)v16 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v21[3] = a4;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
      v15((char *)boxed_opaque_existential_0, v13, a4);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 8))(v21, ObjectType, v17);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
    UIAccessibilityPostNotification(*MEMORY[0x1E4FB2470], v12);
  }
}

uint64_t sub_1B9226F1C()
{
  return 1;
}

uint64_t TTRIOptionMenuTableViewCell.isAccessibilityElement.getter()
{
  return 1;
}

uint64_t (*TTRIOptionMenuTableViewCell.isAccessibilityElement.modify(unsigned char *a1))()
{
  *a1 = 1;
  return nullsub_1;
}

id sub_1B9226F5C(void *a1, uint64_t a2)
{
  return sub_1B92275C4(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityLabel.getter);
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityLabel.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + qword_1E9F05FF8), sel_text);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B996E9F0();

  return v3;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityLabel.modify(uint64_t *a1))()
{
  *a1 = TTRIOptionMenuTableViewCell.accessibilityLabel.getter();
  a1[1] = v2;
  return destroy for TTRAccountsListsViewModel.SmartList.DynamicGlyph;
}

id sub_1B922702C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter();

  if (v2)
  {
    uint64_t v3 = (void *)sub_1B996EE40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void *TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = TTRIOptionMenuTableViewCell.accessibilityLabel.getter();
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    uint64_t v2 = sub_1B91885B4(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      uint64_t v2 = sub_1B91885B4((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    uint64_t v9 = &v2[2 * v8];
    v9[4] = v5;
    v9[5] = v6;
    uint64_t v23 = v2;
  }
  id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                              + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8)), sel_titleLabel));
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_text);

    if (v12)
    {
      uint64_t v13 = sub_1B996E9F0();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1B91885B4(0, v2[2] + 1, 1, v2);
      }
      unint64_t v17 = v2[2];
      unint64_t v16 = v2[3];
      if (v17 >= v16 >> 1) {
        uint64_t v2 = sub_1B91885B4((void *)(v16 > 1), v17 + 1, 1, v2);
      }
      v2[2] = v17 + 1;
      uint64_t v18 = &v2[2 * v17];
      v18[4] = v13;
      void v18[5] = v15;
      uint64_t v23 = v2;
    }
  }
  v22.receiver = v0;
  v22.super_class = ObjectType;
  double result = objc_msgSendSuper2(&v22, sel_accessibilityUserInputLabels);
  if (result)
  {
    id v20 = result;
    uint64_t v21 = sub_1B996EE50();

    sub_1B9120848(v21);
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.modify(void *a1))()
{
  *a1 = TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter();
  return destroy for TTRReminderCellInlineHashtagVisibility;
}

id sub_1B92272D4(void *a1, uint64_t a2)
{
  return sub_1B92275C4(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityValue.getter);
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityValue.getter()
{
  id v1 = (void *)((char *)v0 + direct field offset for TTRIStaticTableViewStandardCell.ttriAccessibilitySubtitle);
  swift_beginAccess();
  uint64_t v2 = v1[1];
  if (v2
    || (id v1 = (void *)((char *)v0 + direct field offset for TTRIStaticTableViewStandardCell.subtitle),
        swift_beginAccess(),
        (uint64_t v2 = v1[1]) != 0))
  {
    uint64_t v3 = *v1;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v4 = sub_1B91885B4(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_1B91885B4((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    void v4[2] = v6 + 1;
    unint64_t v7 = &v4[2 * v6];
    v7[4] = v3;
    v7[5] = v2;
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v8 = *(void **)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8));
  if ((objc_msgSend(v8, sel_isHidden) & 1) == 0)
  {
    id v9 = objc_msgSend(v8, sel_titleLabel);
    if (v9)
    {
      id v10 = v9;
      id v11 = objc_msgSend(v9, sel_text);

      if (v11)
      {
        uint64_t v12 = sub_1B996E9F0();
        uint64_t v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1B91885B4(0, v4[2] + 1, 1, v4);
        }
        unint64_t v16 = v4[2];
        unint64_t v15 = v4[3];
        if (v16 >= v15 >> 1) {
          uint64_t v4 = sub_1B91885B4((void *)(v15 > 1), v16 + 1, 1, v4);
        }
        void v4[2] = v16 + 1;
        unint64_t v17 = &v4[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
      }
    }
  }
  if (qword_1EB9B6008 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B49C0);
  sub_1B910DCEC();
  uint64_t v18 = sub_1B996E910();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityValue.modify(uint64_t *a1))()
{
  *a1 = TTRIOptionMenuTableViewCell.accessibilityValue.getter();
  a1[1] = v2;
  return destroy for TTRAccountsListsViewModel.SmartList.DynamicGlyph;
}

id sub_1B92275AC(void *a1, uint64_t a2)
{
  return sub_1B92275C4(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityHint.getter);
}

id sub_1B92275C4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    unint64_t v7 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = 0;
  }

  return v7;
}

id TTRIOptionMenuTableViewCell.accessibilityHint.getter()
{
  id v1 = *(void **)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8));
  if (objc_msgSend(v1, sel_isHidden)) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_menu);

  if (v2)
  {
    if (qword_1E9EFAC40 != -1) {
      swift_once();
    }
    id v2 = (id)static TTRAccesibility.General.Hint.ShowContextMenu;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return v2;
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityHint.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityHint.modify(id *a1))()
{
  *a1 = TTRIOptionMenuTableViewCell.accessibilityHint.getter();
  a1[1] = v2;
  return destroy for TTRRemindersBoardCellInfoButtonStates;
}

double sub_1B922776C(void *a1)
{
  id v1 = a1;
  TTRIOptionMenuTableViewCell.accessibilityActivationPoint.getter();
  double v3 = v2;

  return v3;
}

id TTRIOptionMenuTableViewCell.accessibilityActivationPoint.getter()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3C8)), sel_accessibilityActivationPoint);
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityActivationPoint.modify(void *a1))(void)
{
  objc_msgSend(*(id *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x3C8)), sel_accessibilityActivationPoint);
  *a1 = v3;
  a1[1] = v4;
  return nullsub_1;
}

void sub_1B9227860()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1B90D88A0((uint64_t)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8));
  swift_unknownObjectRelease();
  double v2 = (char *)v0 + *(void *)((*v1 & *v0) + 0x3B8);
  uint64_t v3 = sub_1B9970060();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)((char *)v0 + *(void *)((*v1 & *v0) + 0x3C8));
}

void sub_1B922799C(void *a1)
{
  double v2 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1B90D88A0((uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x3A8));
  swift_unknownObjectRelease();
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x3B8);
  uint64_t v4 = sub_1B9970060();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)((char *)a1 + *(void *)((*v2 & *a1) + 0x3C8));
}

id sub_1B9227AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  unint64_t v7 = (void *)MEMORY[0x1E4FBC8C8];
  unint64_t v8 = (void *)((char *)v3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v3) + 0xF8));
  *unint64_t v8 = 0;
  v8[1] = 0;
  id v9 = (void *)((char *)v3 + *(void *)((*v7 & *v3) + 0x100));
  *id v9 = 0;
  v9[1] = 0;
  id v10 = (void *)((char *)v3 + *(void *)((*v7 & *v3) + 0x108));
  *id v10 = a2;
  v10[1] = a3;
  swift_getMetatypeMetadata();
  swift_unknownObjectRetain();
  uint64_t v11 = sub_1B996EA30();
  return sub_1B995E978(a1, 0, v11, v12);
}

uint64_t sub_1B9227BC0()
{
  return sub_1B9224070(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B9227BC8()
{
  return swift_deallocObject();
}

uint64_t sub_1B9227BD8(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = sub_1B9970060();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = &v10[-v6];
  unint64_t v8 = (char *)v1 + *(void *)(v3 + 952);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
  swift_endAccess();
  sub_1B92267C0((uint64_t)v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B9227D54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x3B0));
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_unknownObjectRetain();
  uint64_t v6 = swift_unknownObjectRelease();
  return sub_1B9224CF0(v6);
}

void sub_1B9227DE8()
{
}

id sub_1B9227E18(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 != -1) {
    return sub_1B9227E2C(result, a2, a3, a4, a5, a6);
  }
  return result;
}

id sub_1B9227E2C(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  switch(a6)
  {
    case 2:
      return (id)swift_unknownObjectRetain();
    case 1:
      return result;
    case 0:
      id v7 = a5;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      return (id)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return result;
}

void sub_1B9227EAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 != -1) {
    sub_1B9227EC0(a1, a2, a3, a4, a5, a6);
  }
}

void sub_1B9227EC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    if (a6 != 1)
    {
      if (a6) {
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = a5;
    }
  }
}

uint64_t sub_1B9227F3C()
{
  return swift_deallocObject();
}

uint64_t sub_1B9227F74()
{
  return sub_1B97E8DA8(*(void *)(v0 + 16));
}

uint64_t sub_1B9227F7C()
{
  return swift_deallocObject();
}

uint64_t sub_1B9227F8C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1B9228050(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || v8 + ((v7 + 64) & (unint64_t)~v7) + 1 > 0x18)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v11[(v7 & 0xF8 ^ 0x1F8) & (v7 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = ~v7;
    uint64_t v13 = *a2;
    LODWORD(v14) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v14 = *a2;
    }
    if ((int)v14 - 1 < 0)
    {
      unint64_t v15 = a2[1];
      unint64_t v16 = a2[2];
      *(void *)a1 = v13;
      *((void *)a1 + 1) = v15;
      *((void *)a1 + 2) = v16;
      unint64_t v17 = v13;
      uint64_t v18 = v15;
      uint64_t v19 = v16;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = a2[2];
    }
    id v20 = (void *)((unint64_t)(v4 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
    *id v20 = *v21;
    v20[1] = v21[1];
    objc_super v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *objc_super v22 = *v23;
    v22[1] = v23[1];
    id v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    *id v24 = *v25;
    uint64_t v26 = (char *)v25 + v7;
    uint64_t v27 = ((unint64_t)v24 + v7 + 8) & v12;
    uint64_t v28 = (unint64_t)(v26 + 8) & v12;
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v29(v27, v28, v5);
    *(unsigned char *)(v27 + v8) = *(unsigned char *)(v28 + v8);
  }
  return v4;
}

uint64_t sub_1B9228220(id *a1, uint64_t a2)
{
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    id v4 = *a1;
  }
  if ((int)v4 - 1 < 0)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = ((((((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + *(unsigned __int8 *)(v5 + 80)
      + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

void *sub_1B92282E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  LODWORD(v7) = -1;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    unint64_t v7 = *(void **)a2;
  }
  if ((int)v7 - 1 < 0)
  {
    uint64_t v8 = *(void **)(a2 + 8);
    id v9 = *(void **)(a2 + 16);
    *a1 = v6;
    a1[1] = v8;
    a1[2] = v9;
    id v10 = v6;
    id v11 = v8;
    id v12 = v9;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(void *)(a2 + 16);
  }
  uint64_t v13 = (void *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)((a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  unint64_t v15 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v15 = *v16;
  v15[1] = v16[1];
  unint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v17 = *v18;
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  uint64_t v22 = v20 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = ((unint64_t)v17 + v23 + 8) & ~v23;
  uint64_t v25 = ((unint64_t)v18 + v23 + 8) & ~v23;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v21(v24, v25, v19);
  *(unsigned char *)(*(void *)(v22 + 48) + v24) = *(unsigned char *)(*(void *)(v22 + 48) + v25);
  return a1;
}

void **sub_1B9228438(void **a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  LODWORD(v7) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v8) = -1;
  }
  else {
    uint64_t v8 = *a1;
  }
  int v9 = v8 - 1;
  id v10 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    unint64_t v7 = *(void **)a2;
  }
  int v11 = v7 - 1;
  if (v9 < 0)
  {
    if (v11 < 0)
    {
      *a1 = v10;
      id v30 = v10;

      uint64_t v31 = a1[1];
      uint64_t v32 = (void *)*((void *)a2 + 1);
      a1[1] = v32;
      id v33 = v32;

      id v34 = a1[2];
      uint64_t v35 = (void *)*((void *)a2 + 2);
      a1[2] = v35;
      id v36 = v35;

      goto LABEL_12;
    }

    goto LABEL_11;
  }
  if ((v11 & 0x80000000) == 0)
  {
LABEL_11:
    long long v17 = *a2;
    a1[2] = (void *)*((void *)a2 + 2);
    *(_OWORD *)a1 = v17;
    goto LABEL_12;
  }
  *a1 = v10;
  id v12 = (void *)*((void *)a2 + 1);
  a1[1] = v12;
  uint64_t v13 = (void *)*((void *)a2 + 2);
  a1[2] = v13;
  id v14 = v10;
  id v15 = v12;
  id v16 = v13;
LABEL_12:
  uint64_t v18 = (void *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = v24 + 24;
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = ((unint64_t)v22 + v26 + 8) & ~v26;
  uint64_t v28 = ((unint64_t)v23 + v26 + 8) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v24 + 24))(v27, v28);
  *(unsigned char *)(*(void *)(v25 + 40) + v27) = *(unsigned char *)(*(void *)(v25 + 40) + v28);
  return a1;
}

uint64_t sub_1B9228604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v4 = (_OWORD *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)((a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *id v4 = *v5;
  uint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v8 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v9 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  *(unsigned char *)(*(void *)(v11 + 32) + v13) = *(unsigned char *)(*(void *)(v11 + 32) + v14);
  return a1;
}

void **sub_1B92286D0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  LODWORD(v7) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    unint64_t v7 = *a1;
  }
  if ((int)v7 - 1 < 0)
  {
    LODWORD(v8) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v8 = *a2;
    }
    if ((int)v8 - 1 < 0)
    {
      *a1 = *a2;

      uint64_t v21 = a1[1];
      a1[1] = a2[1];

      uint64_t v22 = a1[2];
      a1[2] = a2[2];

      goto LABEL_9;
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
LABEL_9:
  int v9 = (void *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *int v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = ((unint64_t)v13 + v17 + 8) & ~v17;
  uint64_t v19 = ((unint64_t)v14 + v17 + 8) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v18, v19);
  *(unsigned char *)(*(void *)(v16 + 24) + v18) = *(unsigned char *)(*(void *)(v16 + 24) + v19);
  return a1;
}

uint64_t sub_1B9228854(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 64) & ~v6) + 1;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      unint64_t v15 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v16 = *(void *)(v15 + 8);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1B9228A10(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 64) & ~v9) + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 64) & ~v9) != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B9228C8CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        uint64_t v18 = (void *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
        if ((v7 & 0x80000000) != 0)
        {
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(((((((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *uint64_t v18 = a2 ^ 0x80000000;
          v18[1] = 0;
        }
        else
        {
          v18[1] = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1B9228CB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 - 1 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 24) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    unsigned int v11 = v9 + 2;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B9228E40);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return (v10 | v16) + v7;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0)
  {
    unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6);
  }
  else
  {
    unint64_t v17 = *(void *)(a1 + 8);
    if (v17 >= 0xFFFFFFFF) {
      LODWORD(v17) = -1;
    }
    unsigned int v18 = v17 + 1;
  }
  if (v18 >= 2) {
    return v18 - 1;
  }
  else {
    return 0;
  }
}

void sub_1B9228E54(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v9 = v8 - 1;
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 - 1 >= a3)
  {
    int v14 = 0;
    if (v9 >= a2)
    {
LABEL_16:
      switch(v14)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        case 3:
          goto LABEL_45;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_28;
        default:
LABEL_28:
          if (a2)
          {
LABEL_29:
            if (a2 + 1 <= v8)
            {
              if (a2 != -1)
              {
                if ((v7 & 0x80000000) != 0)
                {
                  unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
                  uint64_t v19 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
                  uint64_t v20 = a2 + 1;
                  v19(v18, v20);
                }
                else if (((a2 + 1) & 0x80000000) != 0)
                {
                  *(void *)a1 = a2 - 0x7FFFFFFF;
                  *((void *)a1 + 1) = 0;
                }
                else
                {
                  *((void *)a1 + 1) = a2;
                }
              }
            }
            else if (v11)
            {
              unsigned int v17 = a2 - v8;
              bzero(a1, v11);
              *(_DWORD *)a1 = v17;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8 + 2;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    if (v9 >= a2) {
      goto LABEL_16;
    }
  }
  unsigned int v15 = a2 - v8;
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15 + 1;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, v11);
    *(_DWORD *)a1 = v15;
  }
  switch(v14)
  {
    case 1:
      a1[v11] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v16;
      break;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x1B922908CLL);
    case 4:
      *(_DWORD *)&a1[v11] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1B92290B4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTRIOptionMenuCellContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B9229114()
{
  uint64_t result = sub_1B9970060();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIOptionMenuTableViewCell()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1B92291F0()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  *(void *)&v0[*(void *)(v2 + 0x3A8) + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v0[*(void *)((*v1 & *(void *)v0) + 0x3B0)];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)(v2 + 920) - 8) + 56))(&v0[*(void *)((*v1 & *(void *)v0) + 0x3B8)], 1, 1, *(void *)(v2 + 920));
  uint64_t v4 = *(void *)((*v1 & *(void *)v0) + 0x3C0);
  type metadata accessor for TTRIOptionMenuCellContentState.Option();
  *(void *)&v0[v4] = sub_1B996EF00();

  sub_1B99708A0();
  __break(1u);
}

uint64_t sub_1B9229368()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1B92293A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for TTRIMenuItem() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_release();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v2[12], v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1B92294B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(type metadata accessor for TTRIMenuItem() - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_1B9226CC0(a1, v5, v6, v3);
}

uint64_t TTRIButtonCellContentState.title.getter(uint64_t a1)
{
  return a1;
}

uint64_t TTRIButtonCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRIButtonCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t static TTRIButtonCellContentState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1B9970BB0();
  }
}

uint64_t TTRIButtonCellContent.action.getter()
{
  return sub_1B92296BC(&direct field offset for TTRIButtonCellContent.action, (void (*)(void, void))sub_1B90C3328);
}

uint64_t TTRIButtonCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B9229744(a1, a2, &direct field offset for TTRIButtonCellContent.action, (uint64_t (*)(uint64_t, uint64_t))sub_1B90C337C);
}

uint64_t (*TTRIButtonCellContent.action.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t TTRIButtonCellContent.stateChangeBlock.getter()
{
  return sub_1B92296BC(&direct field offset for TTRIButtonCellContent.stateChangeBlock, (void (*)(void, void))sub_1B90C3328);
}

uint64_t sub_1B92296BC(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t TTRIButtonCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B9229744(a1, a2, &direct field offset for TTRIButtonCellContent.stateChangeBlock, (uint64_t (*)(uint64_t, uint64_t))sub_1B90C337C);
}

uint64_t sub_1B9229744(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unsigned int v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *unsigned int v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*TTRIButtonCellContent.stateChangeBlock.modify())()
{
  return j__swift_endAccess;
}

id TTRIButtonCellContent.__allocating_init(state:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return TTRIButtonCellContent.init(state:)(a1, a2);
}

id TTRIButtonCellContent.init(state:)(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)((char *)v2 + direct field offset for TTRIButtonCellContent.action);
  *id v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)((char *)v2 + direct field offset for TTRIButtonCellContent.stateChangeBlock);
  *uint64_t v6 = 0;
  v6[1] = 0;
  unsigned int v7 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x68)) = 0;
  *(void *)((char *)v2 + *(void *)((*v7 & *v2) + 0x70) + 8) = 0;
  swift_unknownObjectWeakInit();
  *((unsigned char *)v2 + *(void *)((*v7 & *v2) + 0x90)) = 0;
  unsigned int v8 = (void *)((char *)v2 + *(void *)((*v7 & *v2) + 0x78));
  *unsigned int v8 = a1;
  v8[1] = a2;
  *(void *)((char *)v2 + *(void *)((*v7 & *v2) + 0x80)) = 0;
  uint64_t v9 = (void *)((char *)v2 + *(void *)((*v7 & *v2) + 0x88));
  *uint64_t v9 = 0x61426E6F74747542;
  v9[1] = 0xEF6C6C6543656764;
  v11.receiver = v2;
  v11.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFDFF8);
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t TTRIButtonCellContent.selectionBehavior.getter()
{
  return 3;
}

void TTRIButtonCellContent.updateCell(_:)(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button);
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v2 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_forState_, v2, 0);

  id v3 = objc_msgSend(v1, sel_titleLabel);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *MEMORY[0x1E4FB28C8];
    id v6 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, *MEMORY[0x1E4FB28C8], 0);
    if (v6)
    {
      unsigned int v7 = v6;
      id v8 = objc_msgSend(v6, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

      if (v8)
      {
        id v9 = objc_msgSend(self, sel_fontWithDescriptor_size_, v8, 0.0);
        if (v9) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      id v8 = 0;
    }
    id v9 = objc_msgSend(self, sel_preferredFontForTextStyle_, v5);
LABEL_8:

    objc_msgSend(v4, sel_setFont_, v9);
    objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
  }
}

id TTRIButtonCellContent.willUnassignCell(_:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button), sel_removeTarget_action_forControlEvents_, v1, sel_buttonAction_, 0x2000);
}

id TTRIButtonCellContent.didAssignCell(_:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button), sel_addTarget_action_forControlEvents_, v1, sel_buttonAction_, 0x2000);
}

uint64_t sub_1B9229BF8(char *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = a1;
    swift_unknownObjectRetain();
    sub_1B9970200();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v5 = a1;
  }
  id v6 = &a1[direct field offset for TTRIButtonCellContent.action];
  swift_beginAccess();
  unsigned int v7 = *(void (**)(uint64_t))v6;
  if (*(void *)v6)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_1B90C337C((uint64_t)v7);
  }

  return sub_1B922A57C((uint64_t)v10);
}

void TTRIButtonCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
}

void TTRIButtonCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
}

uint64_t sub_1B9229D10()
{
  sub_1B90C337C(*(void *)(v0 + direct field offset for TTRIButtonCellContent.action));
  uint64_t v1 = *(void *)(v0 + direct field offset for TTRIButtonCellContent.stateChangeBlock);

  return sub_1B90C337C(v1);
}

uint64_t sub_1B9229D5C(uint64_t a1)
{
  sub_1B90C337C(*(void *)(a1 + direct field offset for TTRIButtonCellContent.action));
  uint64_t v2 = *(void *)(a1 + direct field offset for TTRIButtonCellContent.stateChangeBlock);

  return sub_1B90C337C(v2);
}

void sub_1B9229DB0()
{
}

id TTRIButtonCellTableCell.button.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button);
}

id TTRIButtonCellTableCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void TTRIButtonCellTableCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = self;
  id v9 = v4;
  id v10 = objc_msgSend(v8, sel_buttonWithType_, 1);
  *(void *)&v9[OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button] = v10;
  id v11 = v10;
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (a3)
  {
    unsigned int v12 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v12 = 0;
  }
  v35.receiver = v9;
  v35.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v35, sel_initWithStyle_reuseIdentifier_, a1, v12);

  int v14 = (char *)v13;
  id v15 = objc_msgSend(v14, sel_contentView);
  uint64_t v16 = OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button;
  objc_msgSend(v15, sel_addSubview_, *(void *)&v14[OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button]);

  id v17 = objc_msgSend(*(id *)&v14[v16], sel_heightAnchor);
  id v18 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToConstant_, 52.0);

  id v19 = *(id *)&v14[v16];
  id v20 = objc_msgSend(v14, sel_contentView);
  unint64_t v21 = UIView.constraintsEqualTo(_:edges:)(v20, 15);

  uint64_t v22 = *(void **)&v14[v16];
  id v23 = objc_msgSend(v22, sel_titleLabel);
  if (v23)
  {
    uint64_t v24 = v23;
    unint64_t v25 = UIView.constraintsEqualTo(_:edges:)(v22, 5);
    sub_1B9120E44(v25);
  }
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1B9970930();
    if (!v26) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v26) {
      goto LABEL_15;
    }
  }
  type metadata accessor for UILayoutPriority(0);
  if (v26 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v27 = 0;
  do
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v28 = (id)MEMORY[0x1BA9D9380](v27, v21);
    }
    else {
      id v28 = *(id *)(v21 + 8 * v27 + 32);
    }
    uint64_t v29 = v28;
    ++v27;
    objc_msgSend(v18, sel_priority);
    sub_1B922A2EC();
    sub_1B996D320();
    LODWORD(v30) = v34;
    objc_msgSend(v29, sel_setPriority_, v30);
  }
  while (v26 != v27);
LABEL_15:
  swift_bridgeObjectRelease_n();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v31 = v18;
  MEMORY[0x1BA9D7C50]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B996EEB0();
  }
  uint64_t v32 = self;
  sub_1B996EF30();
  sub_1B996EE70();
  swift_bridgeObjectRelease();
  sub_1B922A344();
  id v33 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);
}

unint64_t sub_1B922A2EC()
{
  unint64_t result = qword_1EB9B1080;
  if (!qword_1EB9B1080)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B1080);
  }
  return result;
}

unint64_t sub_1B922A344()
{
  unint64_t result = qword_1EB9B1900;
  if (!qword_1EB9B1900)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9B1900);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TTRIButtonCellContentState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

void *assignWithCopy for TTRIButtonCellContentState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TTRIButtonCellContentState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersBoardCellInfoButtonStates(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersBoardCellInfoButtonStates(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIButtonCellContentState()
{
  return &type metadata for TTRIButtonCellContentState;
}

uint64_t type metadata accessor for TTRIButtonCellContent()
{
  uint64_t result = qword_1E9EFE008;
  if (!qword_1E9EFE008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B922A50C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B922A550()
{
  return type metadata accessor for TTRIButtonCellContent();
}

uint64_t type metadata accessor for TTRIButtonCellTableCell()
{
  return self;
}

uint64_t sub_1B922A57C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id TTRISliderCellContentState.icon.getter()
{
  id v1 = *v0;
  sub_1B9222E38(*v0, v0[1], v0[2]);
  return v1;
}

void TTRISliderCellContentState.icon.setter(void *a1, void *a2, void *a3)
{
  sub_1B9222ED0(*v3, v3[1], v3[2]);
  void *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
}

uint64_t (*TTRISliderCellContentState.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRISliderCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRISliderCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRISliderCellContentState.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TTRISliderCellContentState.subtitle.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.minimumValue.getter()
{
  return *(float *)(v0 + 56);
}

void TTRISliderCellContentState.minimumValue.setter(float a1)
{
  *(float *)(v1 + 56) = a1;
}

uint64_t (*TTRISliderCellContentState.minimumValue.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.maximumValue.getter()
{
  return *(float *)(v0 + 60);
}

void TTRISliderCellContentState.maximumValue.setter(float a1)
{
  *(float *)(v1 + 60) = a1;
}

uint64_t (*TTRISliderCellContentState.maximumValue.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.value.getter()
{
  return *(float *)(v0 + 64);
}

void TTRISliderCellContentState.value.setter(float a1)
{
  *(float *)(v1 + 64) = a1;
}

uint64_t (*TTRISliderCellContentState.value.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.init(icon:title:subtitle:minimumValue:maximumValue:value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  *(float *)(a8 + 56) = a9;
  *(float *)(a8 + 60) = a10;
  *(float *)(a8 + 64) = a11;
  return result;
}

BOOL sub_1B922A84C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  void v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  int v8 = *(_DWORD *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  int v10 = *(_DWORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s15RemindersUICore26TTRISliderCellContentStateV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
}

uint64_t TTRISliderCellContent.action.getter()
{
  return sub_1B922A964(&direct field offset for TTRISliderCellContent.action, (void (*)(void, void))sub_1B90C3328);
}

uint64_t TTRISliderCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B922A9EC(a1, a2, &direct field offset for TTRISliderCellContent.action, (uint64_t (*)(uint64_t, uint64_t))sub_1B90C337C);
}

uint64_t (*TTRISliderCellContent.action.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t TTRISliderCellContent.stateChangeBlock.getter()
{
  return sub_1B922A964(&direct field offset for TTRISliderCellContent.stateChangeBlock, (void (*)(void, void))sub_1B90C3328);
}

uint64_t sub_1B922A964(void *a1, void (*a2)(void, void))
{
  long long v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t TTRISliderCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B922A9EC(a1, a2, &direct field offset for TTRISliderCellContent.stateChangeBlock, (uint64_t (*)(uint64_t, uint64_t))sub_1B90C337C);
}

uint64_t sub_1B922A9EC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  int v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *int v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*TTRISliderCellContent.stateChangeBlock.modify())()
{
  return j__swift_endAccess;
}

id TTRISliderCellContent.__allocating_init(state:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return TTRISliderCellContent.init(state:)(a1);
}

id TTRISliderCellContent.init(state:)(uint64_t a1)
{
  id v3 = (void *)((char *)v1 + direct field offset for TTRISliderCellContent.action);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)((char *)v1 + direct field offset for TTRISliderCellContent.stateChangeBlock);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68)) = 0;
  *(void *)((char *)v1 + *(void *)((*v5 & *v1) + 0x70) + 8) = 0;
  swift_unknownObjectWeakInit();
  *((unsigned char *)v1 + *(void *)((*v5 & *v1) + 0x90)) = 0;
  id v6 = (char *)v1 + *(void *)((*v5 & *v1) + 0x78);
  *((_DWORD *)v6 + 16) = *(_DWORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v6 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v6 + 3) = v7;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)id v6 = *(_OWORD *)a1;
  *((_OWORD *)v6 + 1) = v8;
  *(void *)((char *)v1 + *(void *)((*v5 & *v1) + 0x80)) = 0;
  uint64_t v9 = (void *)((char *)v1 + *(void *)((*v5 & *v1) + 0x88));
  *uint64_t v9 = 0x6543726564696C53;
  v9[1] = 0xEA00000000006C6CLL;
  v11.receiver = v1;
  v11.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE028);
  return objc_msgSendSuper2(&v11, sel_init);
}

id TTRISliderCellContent.willUnassignCell(_:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + qword_1E9EFE030), sel_removeTarget_action_forControlEvents_, v1, 0, 4096);
}

id TTRISliderCellContent.didAssignCell(_:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + qword_1E9EFE030), sel_addTarget_action_forControlEvents_, v1, sel_sliderAction_, 4096);
}

uint64_t TTRISliderCellContent.updateCell(_:)(uint64_t a1)
{
  v5[2] = a1;
  uint64_t v1 = *(void **)(a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1B922BF48;
  *(void *)(v2 + 24) = v5;
  aBlock[4] = sub_1B919966C;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_15;
  id v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performBatchUpdates_, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

id sub_1B922ADDC(uint64_t a1, void *a2)
{
  id v3 = (char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x78);
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = (void *)*((void *)v3 + 1);
  id v6 = (void *)*((void *)v3 + 2);
  if (*(void *)v3 == 1) {
    long long v7 = 0;
  }
  else {
    long long v7 = *(void **)v3;
  }
  uint64_t v26 = v7;
  if (*(void *)v3 == 1) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *((void *)v3 + 1);
  }
  if (*(void *)v3 == 1) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *((void *)v3 + 2);
  }
  if (*(void *)v3 == 1) {
    uint64_t v10 = 0x1FFFFFFFELL;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = a1 + direct field offset for TTRIStaticTableViewStandardCell.icon;
  swift_beginAccess();
  sub_1B910DD48(v11, (uint64_t)v35);
  id v33 = *(void **)(v11 + 8);
  int v34 = *(void **)v11;
  unint64_t v31 = *(void *)(v11 + 24);
  uint64_t v32 = *(void **)(v11 + 16);
  uint64_t v29 = *(void *)(v11 + 40);
  uint64_t v30 = *(void *)(v11 + 32);
  uint64_t v27 = *(void *)(v11 + 56);
  uint64_t v28 = *(void *)(v11 + 48);
  unsigned __int8 v12 = *(unsigned char *)(v11 + 64);
  *(void *)uint64_t v11 = v26;
  *(void *)(v11 + 8) = v8;
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v10;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(unsigned char *)(v11 + 64) = 0;
  sub_1B9222E38(v4, v5, v6);
  sub_1B9222E38(v4, v5, v6);
  sub_1B910DEE0((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, char))sub_1B910DDB0);
  sub_1B910DE4C(v34, v33, v32, v31, v30, v29, v28, v27, v12);
  sub_1B97E6828((uint64_t)v35);
  sub_1B9222ED0(v4, v5, v6);
  sub_1B910DEE0((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, char))sub_1B910DE4C);
  id v13 = *(void **)(a1 + qword_1E9F05FF8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v14 = v13;
  id v15 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setText_, v15);

  uint64_t v16 = *((void *)v3 + 5);
  uint64_t v17 = *((void *)v3 + 6);
  id v18 = (uint64_t *)(a1 + direct field offset for TTRIStaticTableViewStandardCell.subtitle);
  swift_beginAccess();
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *id v18 = v16;
  v18[1] = v17;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v17)
  {
    if (v19 && (v16 == v20 && v17 == v19 || (sub_1B9970BB0() & 1) != 0)) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    TTRIStaticTableViewStandardCell.updateSubtitle()();
LABEL_21:
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *(void **)(a1 + qword_1E9EFE030);
  LODWORD(v21) = *((_DWORD *)v3 + 14);
  objc_msgSend(v22, sel_setMinimumValue_, v21);
  LODWORD(v23) = *((_DWORD *)v3 + 15);
  objc_msgSend(v22, sel_setMaximumValue_, v23);
  LODWORD(v24) = *((_DWORD *)v3 + 16);
  return objc_msgSend(v22, sel_setValue_, v24);
}

void sub_1B922B0A4(uint64_t a1)
{
  sub_1B90D7014(a1, (uint64_t)v16);
  sub_1B90BFD68(0, &qword_1E9EFE058);
  if (swift_dynamicCast())
  {
    uint64_t v2 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
    swift_beginAccess();
    id v3 = *(void **)v2;
    uint64_t v4 = (void *)*((void *)v2 + 1);
    uint64_t v5 = (void *)*((void *)v2 + 2);
    uint64_t v6 = *((void *)v2 + 3);
    uint64_t v8 = *((void *)v2 + 4);
    uint64_t v7 = *((void *)v2 + 5);
    uint64_t v9 = *((void *)v2 + 6);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v10 = *((void *)v2 + 7);
    sub_1B9222E38(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B9222E38(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B9222E38(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    objc_msgSend(v15, sel_value);
    v16[0] = v3;
    v16[1] = v4;
    v16[2] = v5;
    v16[3] = v6;
    v16[4] = v8;
    objc_super v16[5] = v7;
    void v16[6] = v9;
    v16[7] = v10;
    int v17 = v11;
    sub_1B9222E38(v3, v4, v5);
    sub_1B9222ED0(v3, v4, v5);
    uint64_t v12 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90);
    *((unsigned char *)v1 + v12) = 1;
    sub_1B9222E38(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B943359C((uint64_t)v16);
    *((unsigned char *)v1 + v12) = 0;
    sub_1B9222ED0(v3, v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v13 = (void (**)(void *))((char *)v1 + direct field offset for TTRISliderCellContent.stateChangeBlock);
    swift_beginAccess();
    id v14 = *v13;
    if (*v13)
    {
      sub_1B9222E38(v3, v4, v5);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B90C3328((uint64_t)v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B9222ED0(v3, v4, v5);
      v14(v16);
      sub_1B90C337C((uint64_t)v14);

      sub_1B9222ED0(v3, v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B9222ED0(v3, v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B9222ED0(v3, v4, v5);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1B9222ED0(v3, v4, v5);
    }
  }
}

uint64_t sub_1B922B3C8(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1B9970200();
  swift_unknownObjectRelease();
  sub_1B922B0A4((uint64_t)v4);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

void TTRISliderCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
}

void TTRISliderCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
}

uint64_t sub_1B922B48C()
{
  sub_1B90C337C(*(void *)(v0 + direct field offset for TTRISliderCellContent.action));
  uint64_t v1 = *(void *)(v0 + direct field offset for TTRISliderCellContent.stateChangeBlock);

  return sub_1B90C337C(v1);
}

uint64_t sub_1B922B4D8(uint64_t a1)
{
  sub_1B90C337C(*(void *)(a1 + direct field offset for TTRISliderCellContent.action));
  uint64_t v2 = *(void *)(a1 + direct field offset for TTRISliderCellContent.stateChangeBlock);

  return sub_1B90C337C(v2);
}

void sub_1B922B52C()
{
}

id TTRISliderTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *TTRISliderTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1C38]);
  uint64_t v9 = v4;
  id v10 = objc_msgSend(v8, sel_init);
  *(void *)&v9[qword_1E9EFE030] = v10;

  if (a3)
  {
    int v11 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v11 = 0;
  }
  v45.receiver = v9;
  v45.super_class = ObjectType;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v45, sel_initWithStyle_reuseIdentifier_, a1, v11);

  uint64_t v13 = qword_1E9EFE030;
  id v14 = *(void **)&v12[qword_1E9EFE030];
  id v15 = v12;
  id v16 = v14;
  objc_msgSend(v16, sel_sizeThatFits_, 150.0, 100.0);
  objc_msgSend(v16, sel_setLayoutSize_withContentPriority_);

  int v17 = *(void **)&v12[v13];
  id v18 = &v15[direct field offset for TTRIStaticTableViewStandardCell.extraAccessory];
  swift_beginAccess();
  uint64_t v19 = *(void **)v18;
  uint64_t v20 = *((void *)v18 + 1);
  uint64_t v21 = *((void *)v18 + 2);
  uint64_t v22 = *((void *)v18 + 3);
  double v23 = (void *)*((void *)v18 + 4);
  int v24 = v18[40];
  *(void *)id v18 = v17;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  v18[40] = 1;
  id v25 = v17;
  uint64_t v39 = v15;
  id v40 = v25;
  sub_1B9227E18(v19, v20, v21, v22, v23, v24);
  uint64_t v41 = v20;
  uint64_t v42 = v19;
  sub_1B9227EAC(v19, v20, v21, v22, v23, v24);
  uint64_t v27 = *(void **)v18;
  uint64_t v26 = *((void *)v18 + 1);
  uint64_t v28 = *((void *)v18 + 2);
  uint64_t v29 = *((void *)v18 + 3);
  uint64_t v30 = (void *)*((void *)v18 + 4);
  int v31 = v18[40];
  if (v31 == 255)
  {
    if (v24 == 255)
    {
LABEL_12:
      uint64_t v32 = v39;

      sub_1B9227EAC(v42, v41, v21, v22, v23, v24);
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  if (v24 == 255)
  {
LABEL_9:
    sub_1B9227E18(v42, v41, v21, v22, v23, v24);
    sub_1B9227E18(v27, v26, v28, v29, v30, v31);
    sub_1B9227EAC(v27, v26, v28, v29, v30, v31);
    sub_1B9227EAC(v42, v41, v21, v22, v23, v24);
    goto LABEL_10;
  }
  *(void *)&long long v51 = v42;
  *((void *)&v51 + 1) = v41;
  uint64_t v52 = v21;
  uint64_t v53 = v22;
  uint64_t v54 = v23;
  char v55 = v24;
  *(void *)&long long v46 = v27;
  *((void *)&v46 + 1) = v26;
  uint64_t v47 = v28;
  uint64_t v48 = v29;
  char v49 = v30;
  char v50 = v31;
  sub_1B9227E18(v42, v41, v21, v22, v23, v24);
  sub_1B9227E18(v27, v26, v28, v29, v30, v31);
  char v38 = _s15RemindersUICore31TTRIStaticTableViewStandardCellC14ExtraAccessoryO2eeoiySbAE_AEtFZ_0(&v46, &v51);
  sub_1B9227EAC(v42, v41, v21, v22, v23, v24);
  sub_1B9227EAC(v27, v26, v28, v29, v30, v31);
  if (v38) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v32 = v39;
  id v33 = *(void **)&v39[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v39;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1B9227F74;
  *(void *)(v35 + 24) = v34;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_12;
  id v36 = _Block_copy(aBlock);
  uint64_t v43 = v39;
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_performBatchUpdates_, v36);
  _Block_release(v36);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  sub_1B9227EAC(v42, v41, v21, v22, v23, v24);

  if (v33)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:

  return v32;
}

char *sub_1B922BAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = sub_1B996E9F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return TTRISliderTableViewCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

void sub_1B922BB24()
{
}

void sub_1B922BB80()
{
}

void sub_1B922BBDC()
{
}

void sub_1B922BBF0(uint64_t a1)
{
}

BOOL _s15RemindersUICore26TTRISliderCellContentStateV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 != 1)
  {
    if (v5 == (void *)1) {
      return 0;
    }
    uint64_t v12 = *(void **)(a1 + 8);
    uint64_t v13 = *(void **)(a1 + 16);
    id v15 = *(void **)(a2 + 8);
    id v14 = *(void **)(a2 + 16);
    if (v4)
    {
      if (!v5) {
        return 0;
      }
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BB0);
      sub_1B9222E38(v5, v15, v14);
      sub_1B9222E38(v4, v12, v13);
      uint64_t v37 = v12;
      id v16 = v13;
      id v17 = v5;
      id v18 = v4;
      char v19 = sub_1B996FC90();

      uint64_t v13 = v16;
      uint64_t v12 = v37;
      if ((v19 & 1) == 0)
      {
        uint64_t v20 = v5;
        uint64_t v21 = v15;
        uint64_t v22 = v14;
        goto LABEL_19;
      }
    }
    else
    {
      if (v5) {
        return 0;
      }
      sub_1B9222E38(0, *(void **)(a2 + 8), *(void **)(a2 + 16));
      sub_1B9222E38(0, v12, v13);
    }
    uint64_t v26 = v14;
    id v36 = v13;
    if (v12)
    {
      if (!v15)
      {
        uint64_t v30 = v5;
        int v31 = 0;
        uint64_t v32 = v14;
        goto LABEL_37;
      }
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
      id v27 = v15;
      id v28 = v12;
      char v29 = sub_1B996FC90();

      id v14 = v26;
      if ((v29 & 1) == 0)
      {
        uint64_t v30 = v5;
        int v31 = v15;
        uint64_t v32 = v26;
LABEL_37:
        sub_1B9222ED0(v30, v31, v32);
        double v23 = v4;
        int v24 = v12;
        goto LABEL_38;
      }
    }
    else if (v15)
    {
      sub_1B9222ED0(v5, v15, v14);
      double v23 = v4;
      int v24 = 0;
LABEL_38:
      id v25 = v36;
      goto LABEL_39;
    }
    uint64_t v13 = v36;
    if (!v36)
    {
      if (!v14)
      {
        sub_1B9222ED0(v5, v15, 0);
        sub_1B9222ED0(v4, v12, 0);
        goto LABEL_3;
      }
      sub_1B9222ED0(v5, v15, v14);
      double v23 = v4;
      int v24 = v12;
      id v25 = 0;
LABEL_39:
      sub_1B9222ED0(v23, v24, v25);
      return 0;
    }
    if (v14)
    {
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
      id v33 = v14;
      id v34 = v36;
      char v35 = sub_1B996FC90();

      sub_1B9222ED0(v5, v15, v14);
      sub_1B9222ED0(v4, v12, v36);
      if ((v35 & 1) == 0) {
        return 0;
      }
      goto LABEL_3;
    }
    uint64_t v20 = v5;
    uint64_t v21 = v15;
    uint64_t v22 = 0;
LABEL_19:
    sub_1B9222ED0(v20, v21, v22);
    double v23 = v4;
    int v24 = v12;
    id v25 = v13;
    goto LABEL_39;
  }
  if (v5 != (void *)1) {
    return 0;
  }
LABEL_3:
  BOOL v6 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (v6 || (char v7 = sub_1B9970BB0(), result = 0, (v7 & 1) != 0))
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(a2 + 48);
    if (v9)
    {
      if (v10)
      {
        if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v9 != v10)
        {
          char v11 = sub_1B9970BB0();
          BOOL result = 0;
          if ((v11 & 1) == 0) {
            return result;
          }
        }
        goto LABEL_27;
      }
    }
    else if (!v10)
    {
LABEL_27:
      if (*(float *)(a1 + 56) == *(float *)(a2 + 56) && *(float *)(a1 + 60) == *(float *)(a2 + 60)) {
        return *(float *)(a1 + 64) == *(float *)(a2 + 64);
      }
    }
    return 0;
  }
  return result;
}

id sub_1B922BF48()
{
  return sub_1B922ADDC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B922BF50()
{
  return swift_deallocObject();
}

uint64_t sub_1B922BF60()
{
  return swift_deallocObject();
}

uint64_t sub_1B922BF98()
{
  return swift_deallocObject();
}

uint64_t destroy for TTRISliderCellContentState(id *a1)
{
  if (*a1 != (id)1)
  {
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRISliderCellContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v5 = *(void **)(a2 + 8);
    BOOL v6 = *(void **)(a2 + 16);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    id v7 = v4;
    id v8 = v5;
    id v9 = v6;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRISliderCellContentState(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 == 1)
  {
    if (v5 == (void *)1)
    {
      long long v6 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      *(void *)a1 = v5;
      id v8 = (void *)*((void *)a2 + 1);
      *(void *)(a1 + 8) = v8;
      id v9 = (void *)*((void *)a2 + 2);
      *(void *)(a1 + 16) = v9;
      id v10 = v5;
      id v11 = v8;
      id v12 = v9;
    }
  }
  else if (v5 == (void *)1)
  {
    sub_1B922C1C8(a1);
    uint64_t v7 = *((void *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(void *)(a1 + 16) = v7;
  }
  else
  {
    *(void *)a1 = v5;
    id v13 = v5;

    id v14 = *(void **)(a1 + 8);
    id v15 = (void *)*((void *)a2 + 1);
    *(void *)(a1 + 8) = v15;
    id v16 = v15;

    id v17 = *(void **)(a1 + 16);
    id v18 = (void *)*((void *)a2 + 2);
    *(void *)(a1 + 16) = v18;
    id v19 = v18;
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  return a1;
}

uint64_t sub_1B922C1C8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy68_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TTRISliderCellContentState(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  if (*(void *)a1 != 1)
  {
    if (*(void *)a2 != 1)
    {
      *(void *)a1 = *(void *)a2;

      uint64_t v5 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);

      long long v6 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);

      goto LABEL_6;
    }
    sub_1B922C1C8(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRISliderCellContentState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 68)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISliderCellContentState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 68) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 68) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISliderCellContentState()
{
  return &type metadata for TTRISliderCellContentState;
}

uint64_t type metadata accessor for TTRISliderCellContent(uint64_t a1)
{
  return sub_1B90EAF08(a1, (uint64_t *)&unk_1E9EFE038);
}

uint64_t sub_1B922C3C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B922C404()
{
  return type metadata accessor for TTRISliderCellContent(0);
}

uint64_t type metadata accessor for TTRISliderTableViewCell(uint64_t a1)
{
  return sub_1B90EAF08(a1, (uint64_t *)&unk_1E9EFE048);
}

uint64_t sub_1B922C42C()
{
  return type metadata accessor for TTRISliderTableViewCell(0);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.regular.getter()
{
  uint64_t v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.shortened.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

void *TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.textColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.init(regular:shortened:textColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1B922C4D0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProviderC0G0V23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x1BA9DB180](v1);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1BA9DB180](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B90D7504;
}

void sub_1B922C660(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  uint64_t v6 = v4[2];
  uint64_t v5 = v4[3];
  uint64_t v7 = (void *)v4[4];
  BOOL v8 = *v4 == *a1 && v4[1] == a1[1];
  if (v8 || (sub_1B9970BB0() & 1) != 0)
  {
    uint64_t v9 = a1[3];
    if (v5)
    {
      if (!v9) {
        goto LABEL_20;
      }
      BOOL v10 = v6 == a1[2] && v5 == v9;
      if (!v10 && (sub_1B9970BB0() & 1) == 0) {
        goto LABEL_20;
      }
    }
    else if (v9)
    {
      goto LABEL_20;
    }
    id v11 = (void *)a1[4];
    if (v7)
    {
      if (v11)
      {
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        id v12 = v7;
        id v13 = v11;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        char v14 = sub_1B996FC90();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v14) {
          return;
        }
      }
    }
    else if (!v11)
    {
      return;
    }
  }
LABEL_20:
  if (v4[3]
    && (id v15 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label),
        objc_msgSend(v15, sel_numberOfLines)))
  {
    objc_msgSend(v15, sel_invalidateIntrinsicContentSize);
  }
  else
  {
    id v16 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    uint64_t v17 = *v4;
    uint64_t v18 = v4[1];
    id v19 = (void *)v4[4];
    id v20 = v19;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v21 = sub_1B922DD70(v17, v18, v19);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setAttributedText_, v21);
  }
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.text.getter@<X0>(void *a1@<X8>)
{
  long long v3 = (void *)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  id v8 = (id)v3[4];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();

  return v8;
}

id *TTRIStaticTableViewDisclosureTextAccessoryProvider.text.setter(long long *a1)
{
  long long v3 = (long long *)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  long long v5 = v3[1];
  long long v12 = *v3;
  long long v4 = v12;
  long long v13 = v5;
  char v14 = (void *)*((void *)v3 + 4);
  uint64_t v6 = v14;
  long long v7 = a1[1];
  long long *v3 = *a1;
  v3[1] = v7;
  *((void *)v3 + 4) = *((void *)a1 + 4);
  long long v15 = v4;
  sub_1B90BFE54((uint64_t)&v13, (uint64_t)v16, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)&v14, (uint64_t)v17, &qword_1E9F060C0);
  long long v11 = *a1;
  sub_1B90BFE54((uint64_t)(a1 + 1), (uint64_t)v10, &qword_1EB9A8D10);
  sub_1B90BFE54((uint64_t)(a1 + 2), (uint64_t)&v9, &qword_1E9F060C0);
  sub_1B90F15D4((uint64_t)&v15);
  sub_1B90F15D4((uint64_t)v16);
  sub_1B9182950(v17);
  sub_1B90F15D4((uint64_t)&v11);
  sub_1B90F15D4((uint64_t)v10);
  sub_1B9182950(&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B922C660(&v12);
  sub_1B91CD6CC((uint64_t)&v11);
  sub_1B91CD6CC((uint64_t)v10);
  sub_1B918297C(&v9);
  sub_1B91CD6CC((uint64_t)&v15);
  sub_1B91CD6CC((uint64_t)v16);
  return sub_1B918297C(v17);
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.text.modify(void *a1))(uint64_t **a1, char a2)
{
  long long v3 = malloc(0xF0uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  v3[28] = v1;
  v3[29] = v4;
  long long v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  uint64_t v7 = v5[2];
  uint64_t v8 = v5[3];
  id v9 = (void *)v5[4];
  void *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  id v10 = v9;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return sub_1B922CB08;
}

void sub_1B922CB08(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = (void *)(*a1)[4];
  uint64_t v8 = (long long *)((*a1)[28] + (*a1)[29]);
  long long v9 = *v8;
  long long v10 = v8[1];
  if (a2)
  {
    v2[14] = *((void *)v8 + 4);
    *((_OWORD *)v2 + 5) = v9;
    *((_OWORD *)v2 + 6) = v10;
    long long v15 = (void *)*((void *)v8 + 4);
    *(void *)uint64_t v8 = v3;
    *((void *)v8 + 1) = v4;
    *((void *)v8 + 2) = v5;
    *((void *)v8 + 3) = v6;
    *((void *)v8 + 4) = v7;
    *((_OWORD *)v2 + 10) = *((_OWORD *)v2 + 5);
    sub_1B90BFE54((uint64_t)(v2 + 12), (uint64_t)(v2 + 18), &qword_1EB9A8D10);
    sub_1B90BFE54((uint64_t)(v2 + 14), (uint64_t)(v2 + 26), &qword_1E9F060C0);
    id v11 = v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v12 = v11;
    sub_1B90F15D4((uint64_t)(v2 + 20));
    sub_1B90F15D4((uint64_t)(v2 + 18));
    sub_1B9182950((id *)v2 + 26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B922C660(v2 + 10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B91CD6CC((uint64_t)(v2 + 20));
    sub_1B91CD6CC((uint64_t)(v2 + 18));
    sub_1B918297C((id *)v2 + 26);
    long long v13 = (void *)v2[4];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[9] = *((void *)v8 + 4);
    *(_OWORD *)(v2 + 5) = v9;
    *(_OWORD *)(v2 + 7) = v10;
    id v16 = (void *)*((void *)v8 + 4);
    *(void *)uint64_t v8 = v3;
    *((void *)v8 + 1) = v4;
    *((void *)v8 + 2) = v5;
    *((void *)v8 + 3) = v6;
    *((void *)v8 + 4) = v7;
    *((_OWORD *)v2 + 11) = *(_OWORD *)(v2 + 5);
    sub_1B90BFE54((uint64_t)(v2 + 7), (uint64_t)(v2 + 24), &qword_1EB9A8D10);
    sub_1B90BFE54((uint64_t)(v2 + 9), (uint64_t)(v2 + 27), &qword_1E9F060C0);
    sub_1B90F15D4((uint64_t)(v2 + 22));
    sub_1B90F15D4((uint64_t)(v2 + 24));
    sub_1B9182950((id *)v2 + 27);
    id v14 = v7;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B922C660(v2 + 5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B91CD6CC((uint64_t)(v2 + 22));
    sub_1B91CD6CC((uint64_t)(v2 + 24));
    sub_1B918297C((id *)v2 + 27);
  }

  free(v2);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.getter()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon);
  swift_beginAccess();
  uint64_t v2 = *v1;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v2;
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2
                + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  long long v10 = (void *)v7[4];
  id v11 = v10;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v12 = sub_1B922DD70(v8, v9, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAttributedText_, v12);
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B922CF38;
}

void sub_1B922CF38(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    uint64_t v6 = (uint64_t *)(v4 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
    swift_beginAccess();
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    uint64_t v9 = (void *)v6[4];
    id v10 = v9;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v11 = sub_1B922DD70(v7, v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    objc_msgSend(v5, sel_setAttributedText_, v11);
  }
}

char *TTRIStaticTableViewDisclosureTextAccessoryProvider.__allocating_init(label:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TTRIStaticTableViewDisclosureTextAccessoryProvider.init(label:)(a1);
}

char *TTRIStaticTableViewDisclosureTextAccessoryProvider.init(label:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label] = a1;
  uint64_t v4 = v1;
  id v5 = a1;
  id v6 = objc_msgSend(v5, sel_text);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1B996E9F0();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  id v11 = objc_msgSend(v5, sel_textColor);
  id v12 = (uint64_t *)&v4[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text];
  *id v12 = v8;
  v12[1] = v10;
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = (uint64_t)v11;

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider();
  id v13 = objc_msgSendSuper2(&v23, sel_init);
  id v14 = self;
  long long v15 = (char *)v13;
  id v16 = objc_msgSend(v14, sel_defaultCenter);
  uint64_t v17 = *MEMORY[0x1E4FB24C0];
  id v18 = objc_msgSend(self, sel_mainQueue, (unsigned __int128)0, (unsigned __int128)0);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v20 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v17, (uint64_t)&v22, (uint64_t)v18, (uint64_t)sub_1B922E198, v19);

  swift_release();
  sub_1B922A57C((uint64_t)&v22);
  swift_release();
  *(void *)&v15[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityObserver] = v20;
  swift_release();
  return v15;
}

void sub_1B922D28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1BA9DB180](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(void **)(v3 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    id v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
    swift_beginAccess();
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    unint64_t v9 = (void *)v6[4];
    id v10 = v9;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v11 = sub_1B922DD70(v7, v8, v9);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAttributedText_, v11);
  }
}

BOOL TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.getter()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label), sel_numberOfLines) == 0;
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v1 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4CE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  uint64_t v3 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_font);
  if (v6)
  {
    id v7 = v6;
    *(void *)(inited + 64) = sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B1950);
    *(void *)(inited + 40) = v7;
    sub_1B90C48C8(inited);
    type metadata accessor for Key(0);
    sub_1B9109BA8();
    uint64_t v8 = (void *)sub_1B996E6D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_sizeWithAttributes_, v8);
  }
  else
  {
    __break(1u);
  }
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.updateTextBasedOnLabelWidth()()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  id result = (id)swift_beginAccess();
  if (v1[3])
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    id result = objc_msgSend(v3, sel_numberOfLines);
    if (result)
    {
      uint64_t v4 = v1[3];
      if (v4)
      {
        uint64_t v5 = v1[2];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        objc_msgSend(v3, sel_bounds);
        double v7 = v6;
        TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter();
        if ((sub_1B94DB1B0(v8, 0.0000000149011612, v7) & 1) != 0
          || (TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter(), v9 < v7))
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = *v1;
          uint64_t v4 = v1[1];
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        }
        id v10 = objc_msgSend(v3, sel_text);
        if (v10)
        {
          id v11 = v10;
          uint64_t v12 = sub_1B996E9F0();
          uint64_t v14 = v13;

          if (v5 == v12 && v4 == v14) {
            return (id)swift_bridgeObjectRelease_n();
          }
          char v16 = sub_1B9970BB0();
          swift_bridgeObjectRelease();
          if (v16) {
            return (id)swift_bridgeObjectRelease();
          }
        }
        uint64_t v17 = (void *)sub_1B996E9B0();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setText_, v17);

        uint64_t v18 = v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
        swift_beginAccess();
        id result = (id)MEMORY[0x1BA9DB180](v18);
        if (result)
        {
          uint64_t v19 = *(void *)(v18 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v0, ObjectType, v19);
          return (id)swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.init()()
{
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.view.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label));
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.isLabelLike.getter()
{
  return 1;
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.setter(char a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  objc_msgSend(v2, sel_setNumberOfLines_, (a1 & 1) == 0);
  uint64_t v3 = v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  swift_beginAccess();
  if (*(void *)(v3 + 24) && objc_msgSend(v2, sel_numberOfLines)) {
    uint64_t v4 = 2 * (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) != (id)1);
  }
  else {
    uint64_t v4 = 4;
  }
  return objc_msgSend(v2, sel_setTextAlignment_, v4);
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.modify(void *a1))(id **a1)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  v3[6] = v1;
  v3[7] = v4;
  *((unsigned char *)v3 + 64) = objc_msgSend(v4, sel_numberOfLines) == 0;
  return sub_1B922D9D4;
}

void sub_1B922D9D4(id **a1)
{
  uint64_t v1 = *a1;
  id v2 = (*a1)[6];
  objc_msgSend((*a1)[7], sel_setNumberOfLines_, ((_BYTE)(*a1)[8] & 1) == 0);
  uint64_t v3 = (uint64_t)v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  swift_beginAccess();
  if (*(void *)(v3 + 24) && objc_msgSend(v1[7], sel_numberOfLines)) {
    uint64_t v4 = 2 * (objc_msgSend(v1[7], sel_effectiveUserInterfaceLayoutDirection) != (id)1);
  }
  else {
    uint64_t v4 = 4;
  }
  objc_msgSend(v1[7], sel_setTextAlignment_, v4);

  free(v1);
}

id sub_1B922DAB0()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label));
}

BOOL sub_1B922DAC0()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label), sel_numberOfLines) == 0;
}

void (*sub_1B922DAF8(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.modify(v2);
  return sub_1B922DB50;
}

void sub_1B922DB50(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

CGSize __swiftcall TTRIStaticTableViewDisclosureTextAccessoryProvider.containerView(_:systemLayoutSizeFitting:forArrangedSubview:)(NUIContainerView *_, CGSize systemLayoutSizeFitting, UIView *forArrangedSubview)
{
  sub_1B922E1A0(forArrangedSubview);
  result.height = v4;
  result.width = v3;
  return result;
}

uint64_t _s15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProviderC0G0V23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1B9970BB0();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (char v10 = sub_1B9970BB0(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    id v11 = (void *)a1[4];
    uint64_t v12 = (void *)a2[4];
    if (v11)
    {
      if (v12)
      {
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
        id v13 = v12;
        id v14 = v11;
        char v15 = sub_1B996FC90();

        if (v15) {
          return 1;
        }
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

id sub_1B922DD70(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B4CE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
    double v6 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
    *(void *)(inited + 64) = sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FB0);
    *(void *)(inited + 40) = a3;
    id v7 = a3;
    id v8 = v6;
    sub_1B90C48C8(inited);
    id v9 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    char v10 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1B9109BA8();
    id v11 = (void *)sub_1B996E6D0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

    if (!UIAccessibilityShouldDifferentiateWithoutColor()) {
      return v12;
    }
  }
  else
  {
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v14 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v13, sel_initWithString_, v14);

    if (!UIAccessibilityShouldDifferentiateWithoutColor()) {
      return v12;
    }
  }
  uint64_t v15 = v3
      + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon;
  swift_beginAccess();
  if (*(void *)(v15 + 8))
  {
    char v16 = self;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    id v17 = objc_msgSend(v16, sel_configurationWithScale_, 1);
    uint64_t v18 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v18, v17);

    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_imageWithRenderingMode_, 1);

      if (v20)
      {
        if (a3)
        {
          id v21 = a3;
          id v22 = objc_msgSend(v20, sel_imageWithTintColor_, v21);
          id v23 = objc_msgSend(self, sel_textAttachmentWithImage_, v22);
        }
        else
        {
          id v23 = objc_msgSend(self, sel_textAttachmentWithImage_, v20);
        }
        sub_1B90BFD68(0, (unint64_t *)&qword_1E9EFE090);
        id v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v23);
        id v25 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v26 = (void *)sub_1B996E9B0();
        id v27 = objc_msgSend(v25, sel_initWithString_, v26);

        objc_msgSend(v24, sel_appendAttributedString_, v27);
        objc_msgSend(v24, sel_appendAttributedString_, v12);

        id v17 = v12;
        id v12 = v24;
      }
    }
  }
  return v12;
}

uint64_t type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider()
{
  return self;
}

uint64_t sub_1B922E160()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1B922E198(uint64_t a1)
{
  sub_1B922D28C(a1, v1);
}

void sub_1B922E1A0(void *a1)
{
  if (*(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label) == a1
    && (uint64_t v3 = v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text,
        swift_beginAccess(),
        *(void *)(v3 + 24))
    && objc_msgSend(a1, sel_numberOfLines))
  {
    TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter();
  }
  else if (qword_1EB9A7BF0 != -1)
  {
    swift_once();
  }
}

void destroy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  char v5 = (void *)a2[4];
  a1[4] = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  char v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  char v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for SectionsMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionsMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text()
{
  return &type metadata for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text;
}

uint64_t TTRIStaticTableViewBaseCell.isInsetGrouppedStyle.getter()
{
  return *(unsigned __int8 *)(v0 + qword_1E9EFE0A8);
}

uint64_t TTRIStaticTableViewBaseCell.isInsetGrouppedStyle.setter(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1E9EFE0A8) = result;
  return result;
}

id TTRIStaticTableViewBaseCell.containerView.getter()
{
  return *(id *)(v0 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
}

BOOL static TTRIStaticTableViewBaseCell.MinHeightType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t TTRIStaticTableViewBaseCell.MinHeightType.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t TTRIStaticTableViewBaseCell.MinHeightType.hashValue.getter()
{
  return sub_1B9970D60();
}

BOOL sub_1B922E528(char *a1, char *a2)
{
  return static TTRIStaticTableViewBaseCell.MinHeightType.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1B922E534()
{
  return TTRIStaticTableViewBaseCell.MinHeightType.hashValue.getter();
}

uint64_t sub_1B922E53C()
{
  return TTRIStaticTableViewBaseCell.MinHeightType.hash(into:)();
}

uint64_t sub_1B922E544()
{
  return sub_1B9970D60();
}

uint64_t TTRIStaticTableViewBaseCell.preferredSeparatorInsetType.getter()
{
  return 0;
}

uint64_t TTRIStaticTableViewBaseCell.preferredMinHeightForInsetGrouppedStyle.getter()
{
  return 0;
}

id TTRIStaticTableViewBaseCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id TTRIStaticTableViewBaseCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[qword_1E9EFE0A8] = 0;
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = v3;
  id v8 = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, sel_setEdgesPreservingSuperviewLayoutMargins_, 10);
  objc_msgSend(v8, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v8, sel_setLayoutMargins_, 7.0, 0.0, 7.0, 0.0);
  objc_msgSend(v8, sel_setAutoresizingMask_, 18);
  objc_msgSend(v8, sel_setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview_, 1);
  *(void *)&v7[direct field offset for TTRIStaticTableViewBaseCell.containerView] = v8;
  id v9 = v8;

  if (a3)
  {
    char v10 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  v26.receiver = v7;
  v26.super_class = (Class)type metadata accessor for TTRIStaticTableViewBaseCell();
  id v11 = objc_msgSendSuper2(&v26, sel_initWithStyle_reuseIdentifier_, a1, v10);

  id v12 = v11;
  objc_msgSend(v9, sel_setDelegate_, v12);
  id v13 = v9;
  id v14 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v14, sel_bounds);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  objc_msgSend(v13, sel_setFrame_, v16, v18, v20, v22);
  id v23 = objc_msgSend(v12, sel_contentView);
  id v24 = v13;
  objc_msgSend(v23, sel_addSubview_, v24);

  return v12;
}

id sub_1B922E878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = sub_1B996E9F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return TTRIStaticTableViewBaseCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

id TTRIStaticTableViewBaseCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1B922E90C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s15RemindersUICore27TTRIStaticTableViewBaseCellC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

void TTRIStaticTableViewBaseCell.__allocating_init(reuseIdentifier:)()
{
  id v1 = objc_allocWithZone(v0);
  _s15RemindersUICore27TTRIStaticTableViewBaseCellC15reuseIdentifierACyxGSgSSSg_tcfc_0();
}

CGSize __swiftcall TTRIStaticTableViewBaseCell.sizeThatFits(_:)(CGSize a1)
{
  double height = a1.height;
  double width = a1.width;
  id v4 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v4, sel_bounds);
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v25.origin.x = v6;
  v25.origin.y = v8;
  v25.size.double width = v10;
  v25.size.double height = v12;
  double v13 = CGRectGetWidth(v25);
  if (v13 >= width) {
    double v13 = width;
  }
  id v14 = objc_msgSend(*(id *)((char *)v1 + direct field offset for TTRIStaticTableViewBaseCell.containerView), sel_sizeThatFits_, v13, height);
  double v16 = v15;
  double v18 = v17;
  int v19 = *((unsigned __int8 *)v1 + qword_1E9EFE0A8);
  char v20 = (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70))(v14);
  double v21 = 48.0;
  if (v20 == 1) {
    double v21 = 104.0;
  }
  if (!v19) {
    double v21 = 44.0;
  }
  if (v21 > v18) {
    double v22 = v21;
  }
  else {
    double v22 = v18;
  }
  double v23 = v16;
  result.double height = v22;
  result.double width = v23;
  return result;
}

double sub_1B922EA94(void *a1, double a2, double a3)
{
  id v5 = a1;
  *(void *)&double v6 = *(_OWORD *)&TTRIStaticTableViewBaseCell.sizeThatFits(_:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));

  return v6;
}

Swift::Void __swiftcall TTRIStaticTableViewBaseCell.didMoveToSuperview()()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TTRIStaticTableViewBaseCell();
  objc_msgSendSuper2(&v7, sel_didMoveToSuperview);
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_superview);
  if (v2)
  {
    id v3 = v1;
    while (1)
    {
      id v4 = v3;
      id v3 = v2;
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();

      if (v5) {
        break;
      }
      id v2 = objc_msgSend(v3, sel_superview);
      if (!v2)
      {

        return;
      }
    }
    id v6 = objc_msgSend(v5, sel_style);

    *((unsigned char *)v1 + qword_1E9EFE0A8) = v6 == (id)2;
  }
  else
  {
  }
}

void sub_1B922EC04(void *a1)
{
  id v1 = a1;
  TTRIStaticTableViewBaseCell.didMoveToSuperview()();
}

Swift::Void __swiftcall TTRIStaticTableViewBaseCell.containerViewDidLayoutArrangedSubviews(_:)(NUIContainerView *a1)
{
  if (*(NUIContainerView **)((char *)v1 + direct field offset for TTRIStaticTableViewBaseCell.containerView) != a1) {
    return;
  }
  id v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68))();
  id v3 = v2;
  double v4 = 0.0;
  if (!v2)
  {
    double v6 = 1.79769313e308;
LABEL_7:
    double v7 = 0.0;
    double v5 = 0.0;
    goto LABEL_8;
  }
  if (v2 != (void *)1)
  {
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v1, sel_convertRect_fromCoordinateSpace_, v3);
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    objc_msgSend(v3, sel_effectiveAlignmentRectInsets);
    double v18 = UIEdgeInsetsInsetRect(v9, v11, v13, v15, v16, v17);
    CGFloat v20 = v19;
    CGFloat v22 = v21;
    CGFloat v28 = v23;
    objc_msgSend(v1, sel_bounds);
    _sSo23NSDirectionalEdgeInsetsV15RemindersUICoreE12forInsetting8toBecome15layoutDirectionABSo6CGRectV_AHSo021UIUserInterfaceLayoutK0VtcfC_0((unint64_t)objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection), v24, v25, v26, v27, v18, v20, v22, v28);
    goto LABEL_7;
  }
  double v5 = *MEMORY[0x1E4FB2848];
  double v6 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v7 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v4 = *(double *)(MEMORY[0x1E4FB2848] + 24);
LABEL_8:
  objc_msgSend(v1, sel_setSeparatorInset_, v5, v6, v7, v4);

  sub_1B917A8BC(v3);
}

void sub_1B922EE44(void *a1, uint64_t a2, void *a3)
{
  double v4 = a3;
  id v5 = a1;
  TTRIStaticTableViewBaseCell.containerViewDidLayoutArrangedSubviews(_:)(v4);
}

id TTRIStaticTableViewBaseCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIStaticTableViewBaseCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B922EF08(uint64_t a1)
{
}

uint64_t type metadata accessor for TTRIStaticTableViewBaseCell()
{
  return __swift_instantiateGenericMetadata();
}

void _s15RemindersUICore27TTRIStaticTableViewBaseCellC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  v0[qword_1E9EFE0A8] = 0;

  sub_1B99708A0();
  __break(1u);
}

void _s15RemindersUICore27TTRIStaticTableViewBaseCellC15reuseIdentifierACyxGSgSSSg_tcfc_0()
{
  v0[qword_1E9EFE0A8] = 0;

  sub_1B99708A0();
  __break(1u);
}

uint64_t sub_1B922F008()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for TTRIStaticTableCellSeparatorAnchor()
{
  return &type metadata for TTRIStaticTableCellSeparatorAnchor;
}

uint64_t sub_1B922F034()
{
  return swift_initClassMetadata2();
}

unsigned char *sub_1B922F080(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *CGSize result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B922F14CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *CGSize result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIStaticTableViewBaseCell.MinHeightType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B922F18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B996A260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  objc_msgSend(self, sel_systemFontOfSize_, 0.1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B91190B4();
  return sub_1B996A240();
}

uint64_t sub_1B922F264()
{
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ACC90);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B997AB90;
  uint64_t v1 = sub_1B996D780();
  uint64_t v2 = MEMORY[0x1E4FB1138];
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  sub_1B996FC30();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TTRIOptionMenuTitlelessPopupButton()
{
  return self;
}

void sub_1B922F528(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LODWORD(v4) = sub_1B996FB10() & 1;
  id v6 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v5) = sub_1B996FB10() & 1;

  if (v4 != v5)
  {
    id v7 = objc_msgSend(a1, sel_traitCollection);
    id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

    sub_1B996FB10();
    double v9 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    v10.receiver = a1;
    v10.super_class = (Class)type metadata accessor for TTRIOptionMenuTitlelessPopupButton();
    objc_msgSendSuper2(&v10, sel_setTitle_forState_, v9, 0);
  }
}

uint64_t sub_1B922F670()
{
  return 8;
}

uint64_t sub_1B922F67C()
{
  return swift_release();
}

uint64_t sub_1B922F684(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1B922F698(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t TTRParentAndChildIndexes.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1B996AB40();
  if (v7)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    double v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    uint64_t v15 = TupleTypeMetadata2;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = swift_getTupleTypeMetadata2();
    uint64_t v11 = *(int *)(v10 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v3, v9);
    *(void *)(a2 + v11) = v8;
    double v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v10;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t static TTRParentAndChildIndexes.grouped<A>(_:byParentProperty:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  int v70 = a2;
  uint64_t v6 = (uint64_t *)(v5 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for TTRParentAndChildIndexes();
  uint64_t v62 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (uint64_t)&v57 - v9;
  uint64_t v10 = v6[1];
  uint64_t v11 = a3;
  uint64_t v84 = *(uint64_t (**)@<X0>(uint64_t@<X8>))(v10 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v57 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  double v16 = (char *)&v57 - v15;
  MEMORY[0x1F4188790](v17);
  double v19 = (char *)&v57 - v18;
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v21);
  int v67 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v22;
  MEMORY[0x1F4188790](v23);
  objc_super v82 = (char *)&v57 - v24;
  TupleTypeMetadata2 = (void *)swift_getTupleTypeMetadata2();
  uint64_t v74 = sub_1B9970060();
  uint64_t v26 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v75 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  id v73 = (char *)&v57 - v29;
  uint64_t v85 = v8;
  uint64_t v86 = v11;
  uint64_t v30 = sub_1B996E6A0();
  uint64_t v76 = TupleTypeMetadata2;
  uint64_t v79 = (char *)(TupleTypeMetadata2 - 1);
  id v72 = (void (**)(void))(v26 + 32);
  uint64_t v31 = v10;
  uint64_t v32 = (void *)v30;
  uint64_t v66 = v20 + 32;
  unsigned int v78 = (void (**)(char *, char *, uint64_t))((char *)v84 + 16);
  uint64_t v65 = v20 + 16;
  id v60 = (void (**)(char *, uint64_t))((char *)v84 + 8);
  uint64_t v69 = v20;
  uint64_t v59 = (void (**)(char *, uint64_t))(v20 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  long long v83 = 0;
  uint64_t v84 = 0;
  id v33 = 0;
  uint64_t v71 = v31;
  uint64_t v64 = a1;
  uint64_t v63 = v7;
  uint64_t v61 = v19;
  while (1)
  {
    id v36 = v76;
    if (v33 == (char *)MEMORY[0x1BA9D7DA0](a1, v76))
    {
      TupleTypeMetadata2 = v32;
      uint64_t v37 = *(v36 - 1);
      (*(void (**)(char *, uint64_t, uint64_t, void *))(v37 + 56))(v75, 1, 1, v36);
    }
    else
    {
      char v38 = sub_1B996EF20();
      sub_1B996EE90();
      if (v38)
      {
        uint64_t v39 = *(v36 - 1);
        id v40 = v75;
        (*(void (**)(char *, unint64_t, void *))(v39 + 16))(v75, a1+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * (void)v33, v36);
        if (__OFADD__(v33++, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        TupleTypeMetadata2 = v33;
        uint64_t v54 = sub_1B9970550();
        uint64_t v39 = *(v36 - 1);
        if (*(void *)(v39 + 64) != 8) {
          goto LABEL_21;
        }
        char v87 = (void *)v54;
        id v40 = v75;
        (*(void (**)(char *, void **, void *))(v39 + 16))(v75, &v87, v36);
        swift_unknownObjectRelease();
        ++v33;
        if (__OFADD__(TupleTypeMetadata2, 1))
        {
LABEL_18:
          __break(1u);
LABEL_19:
          swift_bridgeObjectRelease();
          char v87 = TupleTypeMetadata2;
          sub_1B996E7A0();
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          swift_getWitnessTable();
          uint64_t v55 = sub_1B996EFC0();
          swift_bridgeObjectRelease();
          sub_1B90C337C((uint64_t)v84);
          return v55;
        }
      }
      TupleTypeMetadata2 = v32;
      uint64_t v37 = v39;
      (*(void (**)(char *, void, uint64_t, void *))(v39 + 56))(v40, 0, 1, v36);
      uint64_t v31 = v71;
    }
    uint64_t v42 = v73;
    (*v72)();
    if ((*(unsigned int (**)(char *, uint64_t, void *))(v37 + 48))(v42, 1, v36) == 1) {
      goto LABEL_19;
    }
    uint64_t v80 = *(void *)&v42[*((int *)v36 + 12)];
    uint64_t v81 = v33;
    uint64_t v43 = v69;
    int v44 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    objc_super v45 = v82;
    v44(v82, v42, v7);
    swift_getAtKeyPath();
    uint64_t v77 = *v78;
    v77(v16, v19, v31);
    long long v46 = v67;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v67, v45, v7);
    unint64_t v47 = (*(unsigned __int8 *)(v43 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v48 = (char *)swift_allocObject();
    *((void *)v48 + 2) = v7;
    *((void *)v48 + 3) = v31;
    uint64_t v49 = v86;
    *((void *)v48 + 4) = v86;
    v44(&v48[v47], v46, v7);
    sub_1B90C337C((uint64_t)v84);
    swift_isUniquelyReferenced_nonNull_native();
    char v87 = TupleTypeMetadata2;
    sub_1B92308F4((uint64_t)v16, v31, v49);
    if (__OFADD__(TupleTypeMetadata2[2], (v50 & 1) == 0)) {
      break;
    }
    char v51 = v50;
    sub_1B9970770();
    char v52 = sub_1B9970740();
    uint64_t v32 = v87;
    if (v52)
    {
      sub_1B92308F4((uint64_t)v16, v31, v86);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    if (v51)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    }
    else
    {
      uint64_t v34 = *((void *)v48 + 2);
      uint64_t v84 = (uint64_t (*)@<X0>(uint64_t@<X8>))*((void *)v48 + 3);
      uint64_t v35 = (uint64_t)&v48[(*(unsigned __int8 *)(*(void *)(v34 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v34 - 8) + 80)];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v31 = v71;
      sub_1B923049C(v35, v34, v58);
      v77(v57, v16, v31);
      sub_1B9970750();
    }
    a1 = v64;
    swift_bridgeObjectRelease();
    sub_1B996AB70();
    TupleTypeMetadata2 = *v60;
    (*v60)(v16, v31);
    double v19 = v61;
    ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v61, v31);
    uint64_t v7 = v63;
    (*v59)(v82, v63);
    long long v83 = v48;
    uint64_t v84 = sub_1B9230B60;
    id v33 = v81;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1B9970C70();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRParentAndChildIndexes()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TTRParentAndChildIndexes.parent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TTRParentAndChildIndexes.parent.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TTRParentAndChildIndexes.parent.modify())()
{
  return nullsub_1;
}

uint64_t TTRParentAndChildIndexes.childIndexes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1B996AC10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t TTRParentAndChildIndexes.childIndexes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1B996AC10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*TTRParentAndChildIndexes.childIndexes.modify())()
{
  return nullsub_1;
}

uint64_t sub_1B9230344()
{
  return sub_1B99702A0();
}

uint64_t TTRParentAndChildIndexes.init(parent:childIndexes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for TTRParentAndChildIndexes() + 28);
  uint64_t v7 = sub_1B996AC10();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_1B923049C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1B996AC10();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v12, a1, a2, v10);
  sub_1B9230344();
  return TTRParentAndChildIndexes.init(parent:childIndexes:)((uint64_t)v12, (uint64_t)v8, a2, a3);
}

uint64_t TTRParentAndChildIndexes.compactMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1B996AC10();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v4 + *(int *)(a3 + 28), v9, v11);
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = a4;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = v4;
  sub_1B920AF48((unint64_t *)&qword_1EB9B1AB8);
  uint64_t v14 = sub_1B996ED60();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  return v14;
}

uint64_t static TTRParentAndChildIndexes<A>.__derived_struct_equals(_:_:)()
{
  if (sub_1B996E990())
  {
    type metadata accessor for TTRParentAndChildIndexes();
    JUMPOUT(0x1BA9D3940);
  }
  return 0;
}

uint64_t sub_1B92307B4()
{
  return static TTRParentAndChildIndexes<A>.__derived_struct_equals(_:_:)();
}

uint64_t TTRParentAndChildIndexes<A>.hash(into:)()
{
  return sub_1B996E890();
}

uint64_t TTRParentAndChildIndexes<A>.hashValue.getter()
{
  return sub_1B9970D60();
}

uint64_t sub_1B9230890()
{
  return TTRParentAndChildIndexes<A>.hashValue.getter();
}

uint64_t sub_1B9230898()
{
  return TTRParentAndChildIndexes<A>.hash(into:)();
}

uint64_t sub_1B92308A0()
{
  return sub_1B9970D60();
}

unint64_t sub_1B92308F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B996E880();

  return sub_1B9230950(a1, v6, a2, a3);
}

unint64_t sub_1B9230950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a1;
  id v22[2] = a4;
  __n128 v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v4;
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v11 & ~v10;
  v22[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v10;
    double v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v15 = v16;
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v18 = (void (**)(char *, uint64_t))(v14 - 8);
    do
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v23 + 48) + v17 * v12, a3, v7);
      char v20 = sub_1B996E990();
      (*v18)(v9, a3);
      if (v20) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      uint64_t v14 = v19;
    }
    while (((*(void *)(v22[0] + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t sub_1B9230AD8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1B9230B60@<X0>(uint64_t a1@<X8>)
{
  return sub_1B923049C(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), a1);
}

uint64_t sub_1B9230BA4(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*(void *)(v1 + 48), *a1);
}

uint64_t sub_1B9230BDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B9230C24()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B996AC10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B9230CF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1B996AC10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(v8 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v8;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_1B9230E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1B996AC10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_1B9230F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1B996AC10();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B9230FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1B996AC10();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B9231058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1B996AC10();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B9231104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1B996AC10();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B92311B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1B996AC10();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(v8 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1B9231430(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_1B996AC10() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B9231730);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

unint64_t sub_1B9231758()
{
  unint64_t result = qword_1EB9B49E8;
  if (!qword_1EB9B49E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB9B49E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B49E8);
  }
  return result;
}

uint64_t static TTRLocalizableStrings.Common.dueDateAndRecurrenceFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.standard.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.groceries.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.smartList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.addAttachments.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagsChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.reminderNotesChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersBoard.hideSubtasksText(withCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersBoard.showSubtasksText(withCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersList.subtaskCountText(withCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B92321E4()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFE218);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFE218);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *TTRLocalizableStrings.Common.recurrenceImagePlaceholder.unsafeMutableAddressor()
{
  return &static TTRLocalizableStrings.Common.recurrenceImagePlaceholder;
}

unint64_t static TTRLocalizableStrings.Common.recurrenceImagePlaceholder.getter()
{
  return 0xD000000000000022;
}

uint64_t static TTRLocalizableStrings.Common.symbolRecurrenceFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.alertOKButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.alertDeleteButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.alertCancelButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.continueButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.saveButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.createButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.deleteButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.renameButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.editButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.doneButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.updateButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.settingsButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.completeButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.learnMoreButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.notNowButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.resetButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.recoverButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.moveButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.dotSeparator.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteReminderWithSubtasksConfirmationTitle(isDeletingMoreThanOneReminder:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteRecurringReminderAllFutureInstancesButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderConfirmationTitle(isUpdatingMoreThanOneReminder:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderThisInstanceButton(isUpdatingMoreThanOneReminder:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderAllFutureInstancesButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.resetGrocerySectionRulesMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.resetGrocerySectionRulesDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Alerts.recoverRecentlyDeletedReminderAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.noReminders.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.noItemsInGroceryList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.allRemindersCompleted.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.allCompleted.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.allItemsCompletedInGroceryList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.itemsInGroceryListDescription(listLayout:)(char a1)
{
  return sub_1B923C060(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.hideCompletedRemindersButtonText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.completedCountText(withCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersList.outdentRemindersText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a1 > 1)
    {
      if (qword_1EB9B6110 == -1) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
LABEL_14:
    swift_once();
    return sub_1B996A200();
  }
  if (a1 > 1)
  {
    if (qword_1EB9B6110 == -1)
    {
LABEL_7:
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v3 = swift_allocObject();
      uint64_t v4 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
      uint64_t v5 = MEMORY[0x1E4FBB5C8];
      *(void *)(v3 + 56) = v4;
      *(void *)(v3 + 64) = v5;
      *(void *)(v3 + 32) = a1;
      uint64_t v6 = sub_1B996E9C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (qword_1EB9B6110 != -1) {
    goto LABEL_14;
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.indentRemindersText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a1 > 1)
    {
      if (qword_1EB9B6110 == -1) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
LABEL_14:
    swift_once();
    return sub_1B996A200();
  }
  if (a1 > 1)
  {
    if (qword_1EB9B6110 == -1)
    {
LABEL_7:
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v3 = swift_allocObject();
      uint64_t v4 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
      uint64_t v5 = MEMORY[0x1E4FBB5C8];
      *(void *)(v3 + 56) = v4;
      *(void *)(v3 + 64) = v5;
      *(void *)(v3 + 32) = a1;
      uint64_t v6 = sub_1B996E9C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (qword_1EB9B6110 != -1) {
    goto LABEL_14;
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.reminderCellDescriptionComponentSeparator.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.markAsCompletedText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.markAsIncompleteText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerNoneText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerLowText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerMediumText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerHighText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.sectionPickerSectionLessTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.selectedHashtagCountText(count:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.ReminderDetail.notesFieldCharacterLimitReachedTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.notesFieldCharacterLimitReachedBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedDetailsMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Assignments.me.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForAllTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForUntagged.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListName(forSelectedLabelCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.anyIncludedFiltersOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.allIncludedFiltersOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.anyIncludedFiltersOptionShort.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.allIncludedFiltersOptionShort.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionAllTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionUntagged.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForOneTagFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForTwoTagsFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionWithMenuDescription(forLabelCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForTwoIncludedTagsFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForTwoExcludedTagsFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForOneIncludedAndOneExcludedTagFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forIncludedLabelCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forExcludedLabelCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forIncludedExcludedLabelCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.listNameForAllTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.failureTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.defaultListFailureDetails.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.defaultListInDifferentAccount.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.sharedListFailureDetails.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ScheduledList.pastDue.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ScheduledList.nextFiveDays.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.CompletedList.pastSevenDays.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.CompletedList.pastThirtyDays.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.CompletedList.completed(dateString:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.DateBucketHeaders.restOfMonth(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.DateBucketHeaders.restOfYear(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.TodayList.nearbySectionName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.TodayList.groupByTime.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.listName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.reminderTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.sectionName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 && a1 == 1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    return sub_1B996A200();
  }
  else
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
    uint64_t v6 = MEMORY[0x1E4FBB5C8];
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = v6;
    *(void *)(v4 + 32) = a1;
    uint64_t v7 = sub_1B996E9C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeletedReminderWithSubtasksConfirmationAlertMessage(isDeletingMoreThanOneReminder:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.UndoAction.addReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.recoverReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.editReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateFilter.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.completionChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.priorityChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.assigneeChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.customSmartListFilterChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.flaggedChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.dueDateChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.dueDateTimeChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.markOverdueToToday.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.notesChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.locationChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.addImage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.urlChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.removeEndRepeat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.endRepeatOccuencesCount.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateEndRepeatToDefaultDate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateEndRepeatDate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.earlyAlertChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.removeAttachments.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSiriSuggestedReminder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.addList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameGroup.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.reminderTitleChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.personChange.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveReminders.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveReminders(count:)(uint64_t a1)
{
  if (a1 == 1)
  {
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_6;
  }
  if (qword_1EB9B6110 != -1) {
LABEL_6:
  }
    swift_once();
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.toggleFilter.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeListType.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.pinList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.unpinList.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteSection.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeSection.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.editSections.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveSection.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.UndoAction.applySuggestion.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B923A1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B997ABC0;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1B90CCBAC();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = a3;
  *(void *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v11 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B923A378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B997ABC0;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1B90CCBAC();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  uint64_t v8 = MEMORY[0x1E4FBB5C8];
  *(void *)(v6 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = a3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v9 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6CommonO28defaultTitleForBlankReminder19effectiveParentListSSAA15TTRListProtocol_pSg_tFZ_0(uint64_t a1)
{
  sub_1B91D27A0(a1, (uint64_t)v9);
  uint64_t v1 = v10;
  if (!v10)
  {
    uint64_t v6 = (uint64_t *)&unk_1EB9B5F60;
    unint64_t v7 = v9;
LABEL_8:
    sub_1B90CCA68((uint64_t)v7, v6);
    goto LABEL_9;
  }
  uint64_t v2 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 104))(v12, v1, v2);
  uint64_t v3 = v13;
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    uint64_t v6 = (uint64_t *)&unk_1E9EFDA78;
    unint64_t v7 = v12;
    goto LABEL_8;
  }
  uint64_t v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  if (v5)
  {
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_11;
  }
LABEL_9:
  if (qword_1EB9B6110 != -1) {
LABEL_11:
  }
    swift_once();
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO25earlyAlertBeforeCountText5count12intervalUnitSSSi_So015REMDueDateDeltaN0VtFZ_0(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_1EB9B6110 != -1) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 1:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 3:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 4:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B996A200();
      break;
    default:
      if (qword_1E9EFA2D8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1B996D300();
      __swift_project_value_buffer(v3, (uint64_t)qword_1E9EFE218);
      uint64_t v4 = sub_1B996D2F0();
      os_log_type_t v5 = sub_1B996F650();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        sub_1B99700D0();
        _os_log_impl(&dword_1B90A0000, v4, v5, "Unknown REMDueDateDeltaUnit value: %ld", v6, 0xCu);
        MEMORY[0x1BA9DB030](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v7 + 16) = xmmword_1B997AB90;
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a1;
  uint64_t v10 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO19earlyAlertCountText5count12intervalUnitSSSi_So015REMDueDateDeltaM0VtFZ_0(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_1EB9B6110 != -1) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 1:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 3:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 4:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B996A200();
      break;
    default:
      if (qword_1E9EFA2D8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1B996D300();
      __swift_project_value_buffer(v3, (uint64_t)qword_1E9EFE218);
      uint64_t v4 = sub_1B996D2F0();
      os_log_type_t v5 = sub_1B996F650();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        sub_1B99700D0();
        _os_log_impl(&dword_1B90A0000, v4, v5, "Unknown REMDueDateDeltaUnit value: %ld", v6, 0xCu);
        MEMORY[0x1BA9DB030](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v7 + 16) = xmmword_1B997AB90;
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a1;
  uint64_t v10 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO16intervalUnitText5count0gH0SSSi_So015REMDueDateDeltaH0VtFZ_0(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_1EB9B6110 != -1) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 1:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 3:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 4:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B996A200();
      break;
    default:
      if (qword_1E9EFA2D8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1B996D300();
      __swift_project_value_buffer(v3, (uint64_t)qword_1E9EFE218);
      uint64_t v4 = sub_1B996D2F0();
      os_log_type_t v5 = sub_1B996F650();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        sub_1B99700D0();
        _os_log_impl(&dword_1B90A0000, v4, v5, "Unknown REMDueDateDelta value: %ld", v6, 0xCu);
        MEMORY[0x1BA9DB030](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v7 + 16) = xmmword_1B997AB90;
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a1;
  uint64_t v10 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO22intervalUnitBeforeText5count0gH0SSSi_So015REMDueDateDeltaH0VtFZ_0(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      if (qword_1EB9B6110 != -1) {
        goto LABEL_18;
      }
      goto LABEL_16;
    case 1:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 3:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 4:
      if (qword_1EB9B6110 == -1) {
        goto LABEL_16;
      }
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B996A200();
      break;
    default:
      if (qword_1E9EFA2D8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1B996D300();
      __swift_project_value_buffer(v3, (uint64_t)qword_1E9EFE218);
      uint64_t v4 = sub_1B996D2F0();
      os_log_type_t v5 = sub_1B996F650();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 134217984;
        sub_1B99700D0();
        _os_log_impl(&dword_1B90A0000, v4, v5, "Unknown REMDueDateDelta value: %ld", v6, 0xCu);
        MEMORY[0x1BA9DB030](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v7 + 16) = xmmword_1B997AB90;
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = a1;
  uint64_t v10 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO31deleteReminderConfirmationTitle021isDeletingMoreThanOneG0SSSb_tFZ_0(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO45deleteReminderWithSubtasksConfirmationMessage021isDeletingMoreThanOneG008includesah9CompletedI0SSSb_SbtFZ_0(char a1, char a2)
{
  if (a2)
  {
    if (a1)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO40deleteRecurringReminderConfirmationTitle021isDeletingMoreThanOneH0SSSb_tFZ_0(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO41deleteRecurringReminderThisInstanceButton021isDeletingMoreThanOneH0SSSb_tFZ_0(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B923C060(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14LocationPickerO16vehicleEventTextySSSo022REMAlarmVehicleTriggerH0VFZ_0(uint64_t result)
{
  if (result)
  {
    if (result == 2)
    {
      if (qword_1EB9B6110 == -1) {
        return sub_1B996A200();
      }
LABEL_14:
      swift_once();
      return sub_1B996A200();
    }
    if (result == 1)
    {
      if (qword_1EB9B6110 == -1) {
        return sub_1B996A200();
      }
      goto LABEL_14;
    }
    if (qword_1E9EFA2D8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    __swift_project_value_buffer(v1, (uint64_t)qword_1E9EFE218);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F640();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "unknown event", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO29ConvertToCustomSmartListAlertO9makeTitle11willFlattenSSSb_tFZ_0(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B923C534(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a3)
  {
    if (a4)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a4)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  uint64_t v5 = sub_1B996EAE0();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  uint64_t v8 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO29ConvertToCustomSmartListAlertO06legacyI14FailureDetailsSSvgZ_0()
{
  if (sub_1B996AF70())
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO17DateBucketHeadersO5month_4yearS2S_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B997ABC0;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1B90CCBAC();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = a3;
  *(void *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v11 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO17DateBucketHeadersO11restOfMonth_4yearS2S_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B997ABC0;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1B90CCBAC();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = a3;
  *(void *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v11 = sub_1B996EA00();
  swift_bridgeObjectRelease();
  return v11;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings()
{
  return &type metadata for TTRLocalizableStrings;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Common()
{
  return &type metadata for TTRLocalizableStrings.Common;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Alerts()
{
  return &type metadata for TTRLocalizableStrings.Alerts;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AccountsList()
{
  return &type metadata for TTRLocalizableStrings.AccountsList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersList()
{
  return &type metadata for TTRLocalizableStrings.RemindersList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersBoard()
{
  return &type metadata for TTRLocalizableStrings.RemindersBoard;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ReminderDetail()
{
  return &type metadata for TTRLocalizableStrings.ReminderDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.LocationPicker()
{
  return &type metadata for TTRLocalizableStrings.LocationPicker;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.UndoAction()
{
  return &type metadata for TTRLocalizableStrings.UndoAction;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Assignments()
{
  return &type metadata for TTRLocalizableStrings.Assignments;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Hashtags()
{
  return &type metadata for TTRLocalizableStrings.Hashtags;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ConvertToCustomSmartListAlert()
{
  return &type metadata for TTRLocalizableStrings.ConvertToCustomSmartListAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ScheduledList()
{
  return &type metadata for TTRLocalizableStrings.ScheduledList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.CompletedList()
{
  return &type metadata for TTRLocalizableStrings.CompletedList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.DateBucketHeaders()
{
  return &type metadata for TTRLocalizableStrings.DateBucketHeaders;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.TodayList()
{
  return &type metadata for TTRLocalizableStrings.TodayList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AppIntents()
{
  return &type metadata for TTRLocalizableStrings.AppIntents;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AppIntents.Default()
{
  return &type metadata for TTRLocalizableStrings.AppIntents.Default;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RecentlyDeletedList()
{
  return &type metadata for TTRLocalizableStrings.RecentlyDeletedList;
}

uint64_t sub_1B923CD9C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFE230);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFE230);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL static TTRIReminderDetailDueDateModifiedComponents.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRIReminderDetailDueDateModifiedComponents.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t TTRIReminderDetailDueDateModifiedComponents.hashValue.getter()
{
  return sub_1B9970D60();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateTitle:)(NSAttributedString updateTitle)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  Class isa = updateTitle.super.isa;
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](updateTitle.super.isa);
  uint64_t v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 0x7265646E696D6572;
  *(void *)(inited + 40) = 0xEA00000000004449;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  uint64_t v30 = v5;
  uint64_t v16 = v15;
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  swift_unknownObjectRelease();
  id v19 = objc_msgSend(v18, sel_objectID);

  *(void *)(inited + 72) = sub_1B923D3FC();
  *(void *)(inited + 48) = v19;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  unsigned int v20 = self;
  int v21 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  uint64_t v22 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v31, v4, v6);
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v30;
  *(void *)(v24 + 16) = v6;
  *(void *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v22, v6);
  Class v26 = isa;
  *(void *)(v24 + ((v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = isa;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1B9243950;
  *(void *)(v27 + 24) = v24;
  aBlock[4] = sub_1B919966C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_16;
  uint64_t v28 = _Block_copy(aBlock);
  uint64_t v29 = v26;
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_withActionName_block_, v21, v28);

  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v28) {
    __break(1u);
  }
}

unint64_t sub_1B923D3FC()
{
  unint64_t result = qword_1EB9B4A50;
  if (!qword_1EB9B4A50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9B4A50);
  }
  return result;
}

uint64_t sub_1B923D43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 112))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateCompleted:)(Swift::Bool updateCompleted)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](updateCompleted);
  uint64_t v6 = sub_1B996D300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  Swift::Bool v12 = updateCompleted;
  *(unsigned char *)(inited + 48) = updateCompleted;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v13 = self;
  uint64_t v14 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v4 + 16))((char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20[0], v2);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v20[1];
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(unsigned char *)(v16 + v15 + v5) = v12;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1B924397C;
  *(void *)(v18 + 24) = v16;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_13_0;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_withActionName_block_, v14, v19);

  _Block_release(v19);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v14) {
    __break(1u);
  }
}

uint64_t sub_1B923D930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 120))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updatePriorityLevel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  Swift::Bool v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  aBlock[0] = a1;
  type metadata accessor for REMReminderPriorityLevel(0);
  uint64_t v15 = sub_1B996EA30();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v16;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v17 = self;
  uint64_t v18 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v26;
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  *(void *)(v20 + ((v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1B9243A38;
  *(void *)(v22 + 24) = v20;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_23_0;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_withActionName_block_, v18, v23);

  _Block_release(v23);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v18) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B923DE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 128))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updateParentList:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  Swift::Bool v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t aBlock = a1;
  char v15 = a2 & 1;
  LOBYTE(v31) = v15;
  v28[0] = a1;
  uint64_t v16 = sub_1B996EA30();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v18 = self;
  uint64_t v19 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, id, uint64_t))(v7 + 16))((char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v28[1], a3);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v29;
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  unint64_t v23 = v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v23 = a1;
  *(unsigned char *)(v23 + 8) = v15;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1B9243AFC;
  *(void *)(v24 + 24) = v21;
  uint64_t v34 = sub_1B91E3A88;
  uint64_t v35 = v24;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1B97E6334;
  id v33 = &block_descriptor_33;
  uint64_t v25 = _Block_copy(&aBlock);
  id v26 = v28[0];
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_withActionName_block_, v19, v25);

  _Block_release(v25);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v19) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B923E388(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3 & 1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  uint64_t v8 = v7;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 104))(a2, v6, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updateAssignee:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  Swift::Bool v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  sub_1B9243B7C((uint64_t)a1, (uint64_t)aBlock);
  sub_1B9244AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B9139C6C);
  uint64_t v15 = sub_1B996EA30();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v16;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v17 = self;
  uint64_t v18 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v26;
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = v21;
  sub_1B9243B7C((uint64_t)a1, v20 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1B9243CD8;
  *(void *)(v22 + 24) = v20;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_43_0;
  unint64_t v23 = _Block_copy(aBlock);
  sub_1B9244AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B9139C6C);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_withActionName_block_, v18, v23);

  _Block_release(v23);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void *sub_1B923E900(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B9243B7C((uint64_t)a1, (uint64_t)v22);
  uint64_t v7 = (void *)v22[0];
  uint64_t v8 = (void *)v22[1];
  uint64_t v9 = (void *)v22[13];
  sub_1B9243B7C((uint64_t)a1, (uint64_t)v23);
  uint64_t v10 = v23[0];
  if (v23[0])
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
    id v11 = v9;
    id v12 = v7;
    id v13 = v8;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v21(a3, a4);
    uint64_t v15 = v14;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 232))(v10, ObjectType, v15);
    swift_unknownObjectRelease();
    return sub_1B9244AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B9139F00);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    uint64_t v19 = v18;
    uint64_t v20 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v19 + 224))(v20, v19);
    return (void *)swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateFlagged:)(Swift::Bool updateFlagged)
{
  uint64_t v4 = v3;
  uint64_t v25 = v2;
  uint64_t v5 = v1;
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](updateFlagged);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v15 = 1702195828;
  if (!updateFlagged) {
    uint64_t v15 = 0x65736C6166;
  }
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = 0xE400000000000000;
  if (!updateFlagged) {
    unint64_t v16 = 0xE500000000000000;
  }
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 56) = v16;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v17 = self;
  uint64_t v18 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v25;
  *(void *)(v20 + 16) = v5;
  *(void *)(v20 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(unsigned char *)(v20 + v19 + v8) = updateFlagged;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1B9243DBC;
  *(void *)(v22 + 24) = v20;
  aBlock[4] = sub_1B91E3A88;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_53;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_withActionName_block_, v18, v23);

  _Block_release(v23);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v18) {
    __break(1u);
  }
}

uint64_t sub_1B923EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 136))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateDueTimeOn:)(Swift::Bool updateDueTimeOn)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  BOOL v7 = updateDueTimeOn;
  uint64_t v126 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](updateDueTimeOn);
  uint64_t v124 = v8;
  int v125 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1B996A120();
  uint64_t v9 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v123 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v137 = (uint64_t)&v113 - v12;
  uint64_t v122 = v13;
  MEMORY[0x1F4188790](v14);
  unsigned int v136 = (char *)&v113 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EC0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v117 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1B996AC50();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v115 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  int v116 = (char *)&v113 - v20;
  uint64_t v129 = sub_1B996A6F0();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  int v127 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  MEMORY[0x1F4188790](v22 - 8);
  char v131 = (void **)((char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  unsigned int v119 = (char *)&v113 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v113 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v113 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v139 = (uint64_t)&v113 - v33;
  uint64_t v34 = sub_1B996D300();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = (char *)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v38 = __swift_project_value_buffer(v34, (uint64_t)qword_1E9EFE230);
  uint64_t v39 = *(void (**)(char *))(v35 + 16);
  uint64_t v121 = v38;
  v39(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  LODWORD(v132) = v7;
  uint64_t v41 = 1702195828;
  if (!v7) {
    uint64_t v41 = 0x65736C6166;
  }
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  unint64_t v42 = 0xE400000000000000;
  if (!v7) {
    unint64_t v42 = 0xE500000000000000;
  }
  *(void *)(inited + 48) = v41;
  *(void *)(inited + 56) = v42;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  uint64_t v43 = v5;
  int v44 = *(void (**)(uint64_t))(v5 + 16);
  id v133 = v4;
  uint64_t v134 = v43;
  v44(v6);
  uint64_t v46 = v45;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 16))(ObjectType, v46);
  swift_unknownObjectRelease();
  id v49 = objc_msgSend(v48, sel_dueDateComponents);

  uint64_t v135 = v6;
  if (v49)
  {
    sub_1B9969FA0();

    char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    char v51 = v31;
    uint64_t v52 = 0;
  }
  else
  {
    char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    char v51 = v31;
    uint64_t v52 = 1;
  }
  uint64_t v53 = v138;
  v50(v51, v52, 1, v138);
  uint64_t v54 = v139;
  sub_1B90BFE54((uint64_t)v31, v139, (uint64_t *)&unk_1EB9B1A60);
  sub_1B90CCA04(v54, (uint64_t)v28, (uint64_t *)&unk_1EB9B1A60);
  uint64_t v130 = v9;
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v56 = v55(v28, 1, v53);
  sub_1B90CCA68((uint64_t)v28, (uint64_t *)&unk_1EB9B1A60);
  if (v56 == 1)
  {
    ((void (*)(uint64_t, uint64_t))v44)(v135, v134);
    uint64_t v58 = v57;
    uint64_t v59 = swift_getObjectType();
    id v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_unknownObjectRelease();
    id v61 = objc_msgSend(v60, sel_displayDate);

    if (v61)
    {
      unsigned int v114 = v50;
      id v62 = objc_msgSend(v61, sel_date);
      uint64_t v63 = v127;
      sub_1B996A6B0();

      uint64_t v64 = sub_1B996A670();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v63, v129);
      id v65 = objc_msgSend(v61, sel_timeZone);
      uint64_t v113 = (void *)v64;
      if (v65)
      {
        uint64_t v66 = v65;
        int v67 = v115;
        sub_1B996AC30();

        uint64_t v68 = v118;
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
        uint64_t v70 = (uint64_t)v117;
        uint64_t v71 = v67;
        uint64_t v72 = v120;
        v69(v117, v71, v120);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v72);
        int v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v70, 1, v72);
        uint64_t v74 = (uint64_t)v119;
        if (v73 != 1)
        {
          uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))v69;
          uint64_t v76 = v116;
          v75(v116, v70, v72);
          uint64_t v77 = v76;
LABEL_17:
          unsigned int v78 = self;
          uint64_t v79 = v77;
          uint64_t v80 = (void *)sub_1B996AC20();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v79, v72);
          id v81 = objc_msgSend(v61, sel_isAllDay);
          objc_super v82 = v113;
          id v83 = objc_msgSend(v78, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v113, v80, v81);

          sub_1B9969FA0();
          uint64_t v84 = v139;
          sub_1B90CCA68(v139, (uint64_t *)&unk_1EB9B1A60);
          v114((char *)v74, 0, 1, v53);
          sub_1B90BFE54(v74, v84, (uint64_t *)&unk_1EB9B1A60);
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v68 = v118;
        uint64_t v70 = (uint64_t)v117;
        uint64_t v72 = v120;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v117, 1, 1, v120);
        uint64_t v74 = (uint64_t)v119;
      }
      uint64_t v77 = v116;
      _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
      sub_1B90CCA68(v70, &qword_1EB9B5EC0);
      goto LABEL_17;
    }
  }
LABEL_18:
  uint64_t v85 = (char *)v131;
  sub_1B90CCA04(v139, (uint64_t)v131, (uint64_t *)&unk_1EB9B1A60);
  int v86 = v55(v85, 1, v53);
  char v87 = v132;
  if (v86 == 1)
  {
    sub_1B90CCA68((uint64_t)v85, (uint64_t *)&unk_1EB9B1A60);
    long long v88 = sub_1B996D2F0();
    os_log_type_t v89 = sub_1B996F640();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl(&dword_1B90A0000, v88, v89, "Attempted to toggle dueTimeOn while not having a dueDate.", v90, 2u);
      MEMORY[0x1BA9DB030](v90, -1, -1);
    }

    sub_1B90CCA68(v139, (uint64_t *)&unk_1EB9B1A60);
  }
  else
  {
    uint64_t v91 = v130;
    uint64_t v92 = (uint64_t)v136;
    char v131 = *(void ***)(v130 + 32);
    ((void (*)(char *, char *, uint64_t))v131)(v136, v85, v53);
    if (v87)
    {
      type metadata accessor for TTRReminderEditor();
      char v93 = v127;
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      uint64_t v94 = v137;
      static TTRReminderEditor.defaultDueDateComponentsSettingToNextFullHour(dateComponents:now:)(v92, v137);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v93, v129);
    }
    else
    {
      unsigned int v95 = (void *)sub_1B9969F80();
      id v96 = objc_msgSend(v95, sel_rem_allDayDateComponents);

      uint64_t v94 = v137;
      sub_1B9969FA0();
    }
    id v97 = v133;
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    id v133 = self;
    uint64_t v132 = sub_1B996E9B0();
    swift_bridgeObjectRelease();
    uint64_t v98 = v126;
    char v99 = v125;
    id v100 = v97;
    uint64_t v101 = v135;
    (*(void (**)(char *, id, uint64_t))(v126 + 16))(v125, v100, v135);
    unsigned int v102 = v123;
    uint64_t v103 = v94;
    uint64_t v104 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v123, v103, v138);
    unint64_t v105 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
    unint64_t v106 = (v124 + *(unsigned __int8 *)(v91 + 80) + v105) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    uint64_t v107 = swift_allocObject();
    uint64_t v108 = v134;
    *(void *)(v107 + 16) = v101;
    *(void *)(v107 + 24) = v108;
    (*(void (**)(unint64_t, char *, uint64_t))(v98 + 32))(v107 + v105, v99, v101);
    ((void (*)(unint64_t, char *, uint64_t))v131)(v107 + v106, v102, v104);
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = sub_1B9243F94;
    *(void *)(v109 + 24) = v107;
    aBlock[4] = sub_1B91E3A88;
    aBlock[5] = v109;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B97E6334;
    void aBlock[3] = &block_descriptor_63;
    size_t v110 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    BOOL v111 = (void *)v132;
    objc_msgSend(v133, sel_withActionName_block_, v132, v110);
    _Block_release(v110);

    uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    v112(v137, v104);
    v112((uint64_t)v136, v104);
    sub_1B90CCA68(v139, (uint64_t *)&unk_1EB9B1A60);
    LOBYTE(v111) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v111) {
      __break(1u);
    }
  }
}

uint64_t sub_1B923FE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  __n128 v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 16))(a3, a4, v8);
  uint64_t v12 = v11;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = sub_1B996A120();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 144))(v10, ObjectType, v12);
  swift_unknownObjectRelease();
  return sub_1B90CCA68((uint64_t)v10, (uint64_t *)&unk_1EB9B1A60);
}

uint64_t TTRReminderDetailPresenterCapability.request(updateDueDateComponents:modifiedComponents:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v4 = a3;
  int v29 = a2;
  uint64_t v6 = *(unsigned __int8 **)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v33 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B1A60);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1B996D300();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1E9EFE230);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v32 = a1;
  sub_1B90CCA04(a1, (uint64_t)&v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&unk_1EB9B1A60);
  uint64_t v17 = sub_1B996EA30();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  if (v29)
  {
    if (qword_1EB9B6110 != -1) {
      goto LABEL_9;
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    goto LABEL_9;
  }
  while (1)
  {
    sub_1B996A200();
    uint64_t v19 = v32;
    uint64_t v20 = self;
    uint64_t v21 = sub_1B996E9B0();
    swift_bridgeObjectRelease();
    uint64_t v22 = v33;
    (*((void (**)(unsigned char *, uint64_t, uint64_t))v6 + 2))(v33, v31, v4);
    sub_1B90CCA04(v19, (uint64_t)v10, (uint64_t *)&unk_1EB9B1A60);
    unint64_t v23 = (v6[80] + 32) & ~(unint64_t)v6[80];
    unint64_t v24 = (v34 + v23 + *(unsigned __int8 *)(v30 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v35;
    *(void *)(v25 + 16) = v4;
    *(void *)(v25 + 24) = v26;
    (*((void (**)(unint64_t, unsigned char *, uint64_t))v6 + 4))(v25 + v23, v22, v4);
    sub_1B90BFE54((uint64_t)v10, v25 + v24, (uint64_t *)&unk_1EB9B1A60);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1B924409C;
    *(void *)(v4 + 24) = v25;
    aBlock[4] = sub_1B91E3A88;
    uint64_t v37 = (unsigned char *)v4;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B97E6334;
    void aBlock[3] = &block_descriptor_73;
    uint64_t v6 = (unsigned __int8 *)_Block_copy(aBlock);
    uint64_t v10 = v37;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_withActionName_block_, v21, v6);

    _Block_release(v6);
    LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v21 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_9:
    swift_once();
  }
  return result;
}

uint64_t sub_1B9240608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 144))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateNotes:)(NSAttributedString_optional updateNotes)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)&updateNotes.is_nil;
  Class isa = updateNotes.value.super.isa;
  uint64_t v6 = *(void *)(*(void *)&updateNotes.is_nil - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](updateNotes.value.super.isa);
  uint64_t v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B996D300();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 0x7265646E696D6572;
  *(void *)(inited + 40) = 0xEA00000000004449;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  uint64_t v29 = v4;
  uint64_t v15 = v14;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15);
  swift_unknownObjectRelease();
  id v18 = objc_msgSend(v17, sel_objectID);

  *(void *)(inited + 72) = sub_1B923D3FC();
  *(void *)(inited + 48) = v18;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v19 = self;
  uint64_t v20 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  uint64_t v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, v3, v5);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v29;
  *(void *)(v23 + 16) = v5;
  *(void *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v21, v5);
  Class v25 = isa;
  *(void *)(v23 + ((v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = isa;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1B92440D0;
  *(void *)(v26 + 24) = v23;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_83;
  uint64_t v27 = _Block_copy(aBlock);
  uint64_t v28 = v25;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_withActionName_block_, v20, v27);

  _Block_release(v27);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v27) {
    __break(1u);
  }
}

uint64_t sub_1B9240BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 216))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateURL:)(Swift::String_optional updateURL)
{
  uint64_t v71 = v1;
  uint64_t v72 = v2;
  object = updateURL.value._object;
  uint64_t countAndFlagsBits = (void *)updateURL.value._countAndFlagsBits;
  v74[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v69 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = (char *)&v64 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v64 - v14;
  uint64_t v16 = sub_1B996A580();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  int v67 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v66 = (char *)&v64 - v20;
  MEMORY[0x1F4188790](v21);
  id v65 = (char *)&v64 - v22;
  uint64_t v23 = sub_1B9969D60();
  uint64_t v24 = *(void *)(v23 - 8);
  __n128 v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!object) {
    goto LABEL_10;
  }
  uint64_t v68 = v3;
  v74[0] = countAndFlagsBits;
  v74[1] = object;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B9969C70();
  sub_1B90CB9AC();
  uint64_t v28 = sub_1B9970120();
  unint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  swift_bridgeObjectRelease();
  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v43 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v70, 1, 1, v16, v25);
    TTRReminderDetailPresenterCapability.request(updateURL:)(v43, v71, v72);
    sub_1B90CCA68(v43, &qword_1EB9B1A70);
    return;
  }
  uint64_t v32 = sub_1B996EB00();
  id v33 = objc_allocWithZone(MEMORY[0x1E4F28BE8]);
  v74[0] = 0;
  id v34 = objc_msgSend(v33, sel_initWithTypes_error_, 32, v74);
  if (!v34)
  {
    id v44 = v74[0];
    uint64_t v45 = (void *)sub_1B996A390();

    swift_willThrow();
    goto LABEL_12;
  }
  id v35 = v74[0];
  id v36 = v34;
  uint64_t v37 = (void *)sub_1B996E9B0();
  uint64_t v38 = (char *)objc_msgSend(v36, sel_firstMatchInString_options_range_, v37, 0, 0, v32);
  id v64 = v36;

  uint64_t v39 = v38;
  if (!v38)
  {
LABEL_12:
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v42(v15, 1, 1, v16);
    id v65 = 0;
    goto LABEL_16;
  }
  id v40 = objc_msgSend(v38, sel_URL);
  if (v40)
  {
    uint64_t v41 = v40;
    sub_1B996A520();

    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v42(v12, 0, 1, v16);
  }
  else
  {
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v42(v12, 1, 1, v16);
  }
  sub_1B90BFE54((uint64_t)v12, (uint64_t)v15, &qword_1EB9B1A70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    swift_bridgeObjectRelease();
    id v62 = v65;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v65, v15, v16);
    uint64_t v63 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v70, v62, v16);
    v42((char *)v63, 0, 1, v16);
    TTRReminderDetailPresenterCapability.request(updateURL:)(v63, v71, v72);

    sub_1B90CCA68(v63, &qword_1EB9B1A70);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v62, v16);
    return;
  }
  id v65 = v39;
LABEL_16:
  id v64 = v34;
  sub_1B90CCA68((uint64_t)v15, &qword_1EB9B1A70);
  uint64_t v46 = self;
  unint64_t v47 = (void *)sub_1B996E9B0();
  id v48 = objc_msgSend(v46, sel__lp_URLWithUserTypedString_relativeToURL_, v47, 0);

  if (v48)
  {
    id v49 = v67;
    sub_1B996A520();

    char v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v51 = (uint64_t)v69;
    v50(v69, v49, v16);
    v42((char *)v51, 0, 1, v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v51, 1, v16) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = v66;
      v50(v66, (char *)v51, v16);
      uint64_t v53 = (uint64_t)v70;
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v70, v52, v16);
      v42((char *)v53, 0, 1, v16);
      TTRReminderDetailPresenterCapability.request(updateURL:)(v53, v71, v72);

      sub_1B90CCA68(v53, &qword_1EB9B1A70);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v16);
      return;
    }
  }
  else
  {
    uint64_t v51 = (uint64_t)v69;
    v42(v69, 1, 1, v16);
  }
  sub_1B90CCA68(v51, &qword_1EB9B1A70);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_1B996D300();
  __swift_project_value_buffer(v54, (uint64_t)qword_1E9EFE230);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v55 = sub_1B996D2F0();
  os_log_type_t v56 = sub_1B996F620();
  BOOL v57 = os_log_type_enabled(v55, v56);
  id v58 = v64;
  if (v57)
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    id v60 = (void *)swift_slowAlloc();
    v74[0] = v60;
    *(_DWORD *)uint64_t v59 = 136315138;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v73 = sub_1B90D2A1C(v28, v30, (uint64_t *)v74);
    sub_1B99700D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B90A0000, v55, v56, "Discarding edits for invalid URL string: {url: %s}", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v60, -1, -1);
    MEMORY[0x1BA9DB030](v59, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v61 = v65;
  (*(void (**)(uint64_t))(v72 + 24))(v71);
}

uint64_t TTRReminderDetailPresenterCapability.request(updateURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = v6;
  unint64_t v47 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  uint64_t v42 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1B996D300();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v12, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v45 = a1;
  sub_1B90CCA04(a1, (uint64_t)v11, &qword_1EB9B1A70);
  uint64_t v18 = sub_1B996A580();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18) == 1)
  {
    sub_1B90CCA68((uint64_t)v11, &qword_1EB9B1A70);
    uint64_t v20 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v39 = v5;
    uint64_t v21 = v3;
    uint64_t v22 = sub_1B996A410();
    unint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
    uint64_t v20 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    if (v24)
    {
      *uint64_t v20 = v22;
      uint64_t v3 = v21;
      uint64_t v5 = v39;
      uint64_t v25 = v41;
      uint64_t v26 = v40;
      goto LABEL_9;
    }
    uint64_t v3 = v21;
    uint64_t v5 = v39;
  }
  uint64_t v25 = v41;
  uint64_t v26 = v40;
  *uint64_t v20 = 0;
  unint64_t v24 = 0xE000000000000000;
LABEL_9:
  *(void *)(inited + 56) = v24;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v27 = self;
  uint64_t v28 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  unint64_t v29 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v47, v44, v3);
  uint64_t v30 = v46;
  sub_1B90CCA04(v45, v46, &qword_1EB9B1A70);
  unint64_t v31 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v32 = (v26 + v31 + *(unsigned __int8 *)(v42 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v3;
  uint64_t v35 = v33;
  *(void *)(v33 + 16) = v34;
  *(void *)(v33 + 24) = v25;
  (*(void (**)(unint64_t, char *))(v5 + 32))(v33 + v31, v29);
  sub_1B90BFE54(v30, v35 + v32, &qword_1EB9B1A70);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1B92442B4;
  *(void *)(v36 + 24) = v35;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v36;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_93_0;
  uint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_withActionName_block_, v28, v37);

  _Block_release(v37);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v28) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B9241B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 328))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestRemoveEndRepeat()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  uint64_t v6 = *(void *)(v0 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  ((void (*)())MEMORY[0x1F4188790])();
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1B996D300();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E9EFE230);
  sub_1B90C4268(MEMORY[0x1E4FBC860]);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v9 = self;
  uint64_t v10 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1B92443D0;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_103;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_withActionName_block_, v10, v14);

  _Block_release(v14);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v10) {
    __break(1u);
  }
}

uint64_t sub_1B9241F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  __n128 v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v6);
  uint64_t v10 = v9;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 192))(v8, ObjectType, v10);
  swift_unknownObjectRelease();
  return sub_1B90CCA68((uint64_t)v8, &qword_1EB9B2BE0);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestEndRepeat(after:)(Swift::UInt after)
{
  uint64_t v4 = v3;
  uint64_t v23 = v2;
  uint64_t v5 = v1;
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](after);
  uint64_t v9 = sub_1B996D300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 0x7265746661;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB808];
  *(void *)(inited + 48) = after;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v15 = self;
  uint64_t v16 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v23;
  *((void *)v18 + 2) = v5;
  *((void *)v18 + 3) = v19;
  *((void *)v18 + 4) = after;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v18[v17], (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1B9244480;
  *(void *)(v20 + 24) = v18;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_113;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_withActionName_block_, v16, v21);

  _Block_release(v21);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v16) {
    __break(1u);
  }
}

uint64_t sub_1B92424F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v13 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v15 = v14;
  uint64_t ObjectType = swift_getObjectType();
  sub_1B92449F4((uint64_t)v13, (uint64_t)v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 192))(v9, ObjectType, v15);
  swift_unknownObjectRelease();
  sub_1B90CCA68((uint64_t)v9, &qword_1EB9B2BE0);
  return sub_1B9244A58((uint64_t)v13);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestEndRepeatOnDefaultDate()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  uint64_t v6 = *(void *)(v0 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  ((void (*)())MEMORY[0x1F4188790])();
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1B996D300();
  __swift_project_value_buffer(v8, (uint64_t)qword_1E9EFE230);
  sub_1B90C4268(MEMORY[0x1E4FBC860]);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v9 = self;
  uint64_t v10 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1B92444D8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_123;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_withActionName_block_, v10, v14);

  _Block_release(v14);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v10) {
    __break(1u);
  }
}

uint64_t sub_1B9242A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 200))(ObjectType, v4);

  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.requestEndRepeat(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v34 = a3;
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v32 = v5;
  uint64_t v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B996A6F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v29 = v8;
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B996D300();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9EFA2E0 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1E9EFE230);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9ADA40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  *(void *)(inited + 32) = 0x657461446E6FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v16 = sub_1B996A610();
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_1B90C4268(inited);
  sub_1B984E260();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  id v28 = self;
  uint64_t v18 = sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v19 = v33;
  uint64_t v20 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v33, v31, v30);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v22 = (v29 + *(unsigned __int8 *)(v4 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v34;
  *(void *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v21, v9, v6);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v19, v20);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1B9244654;
  *(void *)(v25 + 24) = v23;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_133;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v28, sel_withActionName_block_, v18, v26);

  _Block_release(v26);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v18) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B9243004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B2BE0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B996A6F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a1, v14);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v16 = v15;
  uint64_t ObjectType = swift_getObjectType();
  sub_1B92449F4((uint64_t)v13, (uint64_t)v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 192))(v9, ObjectType, v16);
  swift_unknownObjectRelease();
  sub_1B90CCA68((uint64_t)v9, &qword_1EB9B2BE0);
  return sub_1B9244A58((uint64_t)v13);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(addAttachments:)(Swift::OpaquePointer addAttachments)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  uint64_t v8 = *(void *)(v1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](addAttachments._rawValue);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(Swift::OpaquePointer *)(v13 + ((v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = addAttachments;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1B92447D4;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_143_0;
  uint64_t v15 = _Block_copy(aBlock);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_withActionName_block_, v11, v15);

  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

uint64_t sub_1B9243520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 304))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.requestRemove(attachment:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  *(void *)(v13 + ((v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1B9244800;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1B91E3A88;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B97E6334;
  void aBlock[3] = &block_descriptor_153;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_withActionName_block_, v11, v15);

  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B92438C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 312))(a2, ObjectType, v6);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B9243950()
{
  return sub_1B9244818((uint64_t (*)(unint64_t, void))sub_1B923D43C);
}

uint64_t sub_1B9243968()
{
  return swift_deallocObject();
}

uint64_t sub_1B924397C()
{
  return sub_1B9243DD4((uint64_t (*)(unint64_t, void))sub_1B923D930);
}

uint64_t sub_1B9243994()
{
  return swift_deallocObject();
}

uint64_t sub_1B92439A4()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1B9243A38()
{
  return sub_1B9244818((uint64_t (*)(unint64_t, void))sub_1B923DE50);
}

uint64_t sub_1B9243A50()
{
  return swift_deallocObject();
}

uint64_t sub_1B9243A60()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t sub_1B9243AFC()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  uint64_t v2 = v0 + ((*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1B923E388(v0 + v1, *(void *)v2, *(unsigned char *)(v2 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B9243B6C()
{
  return swift_deallocObject();
}

uint64_t sub_1B9243B7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B9243BD8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void **)(v0 + 32);
  if (v4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 144) & ~v3), v1);

  return swift_deallocObject();
}

void *sub_1B9243CD8()
{
  return sub_1B923E900(v0 + 4, (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2], v0[3]);
}

uint64_t sub_1B9243D1C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1B9243DBC()
{
  return sub_1B9243DD4((uint64_t (*)(unint64_t, void))sub_1B923EF28);
}

uint64_t sub_1B9243DD4(uint64_t (*a1)(unint64_t, void))
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 16) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(unsigned __int8 *)(v1 + v3 + *(void *)(v2 + 64)));
}

uint64_t sub_1B9243E3C()
{
  return swift_deallocObject();
}

uint64_t sub_1B9243E4C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_1B996A120();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1B9243F94()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = *(void *)(sub_1B996A120() - 8);
  uint64_t v6 = v0 + ((v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1B923FE78(v0 + v3, v6, v1, v2);
}

uint64_t sub_1B924406C()
{
  return swift_deallocObject();
}

uint64_t sub_1B924407C()
{
  return objectdestroy_65Tm((uint64_t *)&unk_1EB9B1A60, MEMORY[0x1E4F26F90]);
}

uint64_t sub_1B924409C()
{
  return sub_1B92442D4((uint64_t *)&unk_1EB9B1A60, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B9240608);
}

uint64_t sub_1B92440BC()
{
  return swift_deallocObject();
}

uint64_t sub_1B92440D0()
{
  return sub_1B9244818((uint64_t (*)(unint64_t, void))sub_1B9240BA4);
}

uint64_t sub_1B92440E8()
{
  return swift_deallocObject();
}

uint64_t sub_1B92440F8()
{
  return objectdestroy_65Tm(&qword_1EB9B1A70, MEMORY[0x1E4F276F0]);
}

uint64_t objectdestroy_65Tm(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v2 + v6, v4);
  uint64_t v10 = a2(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v2 + v9, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v2 + v9, v10);
  }

  return swift_deallocObject();
}

uint64_t sub_1B92442B4()
{
  return sub_1B92442D4(&qword_1EB9B1A70, (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1B9241B64);
}

uint64_t sub_1B92442D4(uint64_t *a1, uint64_t (*a2)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v8 = v2 + ((v6 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a2(v2 + v6, v8, v3, v4);
}

uint64_t sub_1B92443BC()
{
  return swift_deallocObject();
}

uint64_t sub_1B92443D0()
{
  return sub_1B92444F0((uint64_t (*)(unint64_t))sub_1B9241F68);
}

uint64_t sub_1B92443E8()
{
  return swift_deallocObject();
}

uint64_t sub_1B92443F8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1B9244480()
{
  return sub_1B92424F8(v0[4], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2], v0[3]);
}

uint64_t sub_1B92444C4()
{
  return swift_deallocObject();
}

uint64_t sub_1B92444D8()
{
  return sub_1B92444F0((uint64_t (*)(unint64_t))sub_1B9242A2C);
}

uint64_t sub_1B92444F0(uint64_t (*a1)(unint64_t))
{
  return a1(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1B9244538()
{
  return swift_deallocObject();
}

uint64_t sub_1B9244548()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1B996A6F0();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t sub_1B9244654()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(sub_1B996A6F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0
     + ((v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  return sub_1B9243004(v0 + v4, v5, v1, v2);
}

uint64_t sub_1B9244728()
{
  return swift_deallocObject();
}

uint64_t sub_1B9244738()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1B92447D4()
{
  return sub_1B9244818((uint64_t (*)(unint64_t, void))sub_1B9243520);
}

uint64_t sub_1B92447EC()
{
  return swift_deallocObject();
}

uint64_t sub_1B9244800()
{
  return sub_1B9244818((uint64_t (*)(unint64_t, void))sub_1B92438C4);
}

uint64_t sub_1B9244818(uint64_t (*a1)(unint64_t, void))
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 16) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1B9244888()
{
  return swift_deallocObject();
}

unint64_t sub_1B924489C()
{
  unint64_t result = qword_1E9EFE248[0];
  if (!qword_1E9EFE248[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9EFE248);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIReminderDetailDueDateModifiedComponents(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B92449BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIReminderDetailDueDateModifiedComponents()
{
  return &type metadata for TTRIReminderDetailDueDateModifiedComponents;
}

uint64_t sub_1B92449F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B9244A58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1B9244AB4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t REMSmartListType.title.getter()
{
  uint64_t v0 = sub_1B996E9F0();
  uint64_t v2 = v1;
  if (v0 == sub_1B996E9F0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
LABEL_50:
    swift_once();
    return sub_1B996A200();
  }
  char v5 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_15;
  }
  uint64_t v6 = sub_1B996E9F0();
  uint64_t v8 = v7;
  if (v6 == sub_1B996E9F0() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  char v11 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_18;
  }
  uint64_t v12 = sub_1B996E9F0();
  uint64_t v14 = v13;
  if (v12 == sub_1B996E9F0() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v17 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_21:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  uint64_t v18 = sub_1B996E9F0();
  uint64_t v20 = v19;
  if (v18 == sub_1B996E9F0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  char v22 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_27:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  uint64_t v23 = sub_1B996E9F0();
  uint64_t v25 = v24;
  if (v23 == sub_1B996E9F0() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_33;
  }
  char v27 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_33:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  uint64_t v28 = sub_1B996E9F0();
  uint64_t v30 = v29;
  if (v28 == sub_1B996E9F0() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_39;
  }
  char v32 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32)
  {
LABEL_39:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  uint64_t v33 = sub_1B996E9F0();
  uint64_t v35 = v34;
  if (v33 == sub_1B996E9F0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_46;
  }
  char v37 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_46:
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_50;
  }
  return 0;
}

uint64_t REMSmartListType.longTitle.getter()
{
  uint64_t v0 = sub_1B996E9F0();
  uint64_t v2 = v1;
  if (v0 == sub_1B996E9F0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return REMSmartListType.title.getter();
    }
  }
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t REMSmartListType.glyph.getter()
{
  uint64_t v0 = sub_1B996E9F0();
  uint64_t v2 = v1;
  if (v0 == sub_1B996E9F0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v5 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_15:
    if (qword_1EB9B5290 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Image.smartListToday;
    goto LABEL_18;
  }
  uint64_t v6 = sub_1B996E9F0();
  uint64_t v8 = v7;
  if (v6 == sub_1B996E9F0() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v11 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_21:
    if (qword_1EB9B52B8 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Image.smartListScheduled;
    goto LABEL_18;
  }
  uint64_t v12 = sub_1B996E9F0();
  uint64_t v14 = v13;
  if (v12 != sub_1B996E9F0() || v14 != v15)
  {
    char v20 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_25;
    }
    uint64_t v21 = sub_1B996E9F0();
    uint64_t v23 = v22;
    if (v21 == sub_1B996E9F0() && v23 == v24)
    {
      swift_bridgeObjectRelease_n();
LABEL_32:
      if (qword_1EB9B52A0 != -1) {
        swift_once();
      }
      id v16 = &static TTRCommonAsset.Image.smartListFlagged;
      goto LABEL_18;
    }
    char v25 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_32;
    }
    uint64_t v26 = sub_1B996E9F0();
    uint64_t v28 = v27;
    if (v26 == sub_1B996E9F0() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
LABEL_39:
      if (qword_1EB9ACE38 != -1) {
        swift_once();
      }
      id v16 = &static TTRCommonAsset.Image.smartListAssigned;
      goto LABEL_18;
    }
    char v30 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_39;
    }
    uint64_t v31 = sub_1B996E9F0();
    uint64_t v33 = v32;
    if (v31 == sub_1B996E9F0() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v35 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = sub_1B996E9F0();
      uint64_t v38 = v37;
      if (v36 == sub_1B996E9F0() && v38 == v39)
      {
        swift_bridgeObjectRelease_n();
LABEL_50:
        if (qword_1EB9ACE58 != -1) {
          swift_once();
        }
        id v16 = &static TTRCommonAsset.Image.smartListCompleted;
        goto LABEL_18;
      }
      char v40 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_50;
      }
    }
    return 0;
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  if (qword_1EB9B5280 != -1) {
    swift_once();
  }
  id v16 = &static TTRCommonAsset.Image.smartListAll;
LABEL_18:
  uint64_t v17 = *v16;
  id v18 = (id)*v16;
  return v17;
}

id REMSmartListType.color.getter()
{
  uint64_t v0 = sub_1B996E9F0();
  uint64_t v2 = v1;
  if (v0 == sub_1B996E9F0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v5 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_15:
    if (qword_1EB9ACE28 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Color.remindersColor6;
    goto LABEL_18;
  }
  uint64_t v6 = sub_1B996E9F0();
  uint64_t v8 = v7;
  if (v6 == sub_1B996E9F0() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v11 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_21:
    if (qword_1EB9ACE10 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Color.remindersColor1;
    goto LABEL_18;
  }
  uint64_t v12 = sub_1B996E9F0();
  uint64_t v14 = v13;
  if (v12 == sub_1B996E9F0() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:
    if (qword_1EB9ACE08 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Color.smartListAllColor;
    goto LABEL_18;
  }
  char v20 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_25;
  }
  uint64_t v21 = sub_1B996E9F0();
  uint64_t v23 = v22;
  if (v21 == sub_1B996E9F0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_32:
    if (qword_1EB9ACE18 != -1) {
      swift_once();
    }
    id v16 = &static TTRCommonAsset.Color.remindersColor2;
    goto LABEL_18;
  }
  char v25 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_32;
  }
  uint64_t v26 = sub_1B996E9F0();
  uint64_t v28 = v27;
  if (v26 == sub_1B996E9F0() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      uint64_t v31 = sub_1B996E9F0();
      uint64_t v33 = v32;
      if (v31 == sub_1B996E9F0() && v33 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v35 = sub_1B9970BB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          uint64_t v36 = sub_1B996E9F0();
          uint64_t v38 = v37;
          if (v36 == sub_1B996E9F0() && v38 == v39)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v40 = sub_1B9970BB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          if (qword_1EB9ACE30 != -1) {
            swift_once();
          }
          id v16 = &static TTRCommonAsset.Color.remindersColor12;
          goto LABEL_18;
        }
      }
      return objc_msgSend(self, sel_ttr_systemPurpleColor);
    }
  }
  if (qword_1EB9ACE20 != -1) {
    swift_once();
  }
  id v16 = &static TTRCommonAsset.Color.remindersColor4;
LABEL_18:
  uint64_t v17 = *v16;
  id v18 = (id)*v16;
  return (id)v17;
}

uint64_t REMSmartListType.navigationSpecifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B996E9F0();
  uint64_t v4 = v3;
  if (v2 == sub_1B996E9F0() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v7 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_15:
    uint64_t v18 = *MEMORY[0x1E4F95438];
    uint64_t v19 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a1, v18, v19);
    char v20 = (unsigned int *)MEMORY[0x1E4F954F8];
LABEL_16:
    uint64_t v21 = *v20;
    uint64_t v22 = sub_1B996B5D0();
    uint64_t v62 = *(void *)(v22 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 104))(a1, v21, v22);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v24 = a1;
    uint64_t v25 = 0;
    uint64_t v26 = v22;
    goto LABEL_17;
  }
  uint64_t v8 = sub_1B996E9F0();
  uint64_t v10 = v9;
  if (v8 == sub_1B996E9F0() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v13 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_21:
    uint64_t v28 = *MEMORY[0x1E4F95438];
    uint64_t v29 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(a1, v28, v29);
    char v20 = (unsigned int *)MEMORY[0x1E4F95548];
    goto LABEL_16;
  }
  uint64_t v14 = sub_1B996E9F0();
  uint64_t v16 = v15;
  if (v14 == sub_1B996E9F0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:
    uint64_t v31 = *MEMORY[0x1E4F95438];
    uint64_t v32 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(a1, v31, v32);
    char v20 = (unsigned int *)MEMORY[0x1E4F954B8];
    goto LABEL_16;
  }
  char v30 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_23;
  }
  uint64_t v33 = sub_1B996E9F0();
  uint64_t v35 = v34;
  if (v33 == sub_1B996E9F0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
LABEL_28:
    uint64_t v38 = *MEMORY[0x1E4F95438];
    uint64_t v39 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(a1, v38, v39);
    char v20 = (unsigned int *)MEMORY[0x1E4F95518];
    goto LABEL_16;
  }
  char v37 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_28;
  }
  uint64_t v40 = sub_1B996E9F0();
  uint64_t v42 = v41;
  if (v40 == sub_1B996E9F0() && v42 == v43)
  {
    swift_bridgeObjectRelease_n();
LABEL_33:
    uint64_t v45 = *MEMORY[0x1E4F95438];
    uint64_t v46 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(a1, v45, v46);
    char v20 = (unsigned int *)MEMORY[0x1E4F95530];
    goto LABEL_16;
  }
  char v44 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v44) {
    goto LABEL_33;
  }
  uint64_t v47 = sub_1B996E9F0();
  uint64_t v49 = v48;
  if (v47 == sub_1B996E9F0() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
LABEL_38:
    uint64_t v52 = *MEMORY[0x1E4F95438];
    uint64_t v53 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104))(a1, v52, v53);
    char v20 = (unsigned int *)MEMORY[0x1E4F954D0];
    goto LABEL_16;
  }
  char v51 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_38;
  }
  uint64_t v54 = sub_1B996E9F0();
  uint64_t v56 = v55;
  if (v54 == sub_1B996E9F0() && v56 == v57)
  {
    swift_bridgeObjectRelease_n();
LABEL_43:
    uint64_t v59 = *MEMORY[0x1E4F95438];
    uint64_t v60 = sub_1B996B560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(a1, v59, v60);
    char v20 = (unsigned int *)MEMORY[0x1E4F95540];
    goto LABEL_16;
  }
  char v58 = sub_1B9970BB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58) {
    goto LABEL_43;
  }
  uint64_t v61 = sub_1B996B5D0();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
  uint64_t v26 = v61;
  uint64_t v24 = a1;
  uint64_t v25 = 1;
LABEL_17:

  return v23(v24, v25, 1, v26);
}

uint64_t TTRTreeStorageWithHiddenChildren.wrappedTree.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t TTRTreeStorageWithHiddenChildren.itemIDsWithHiddenChildren.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRTreeStorageWithHiddenChildren.upstreamTree.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t TTRTreeStorageWithHiddenChildren.__allocating_init(upstreamTree:itemIDsWithHiddenChildren:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t TTRTreeStorageWithHiddenChildren.init(upstreamTree:itemIDsWithHiddenChildren:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t TTRTreeStorageWithHiddenChildren.numberOfChildren(of:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)(*(void *)(*(void *)v1 + 88) + 8) + 8);
  uint64_t v5 = *(void *)(*(void *)v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v26 = v5;
  uint64_t v27 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  uint64_t v28 = a1;
  v19(v10, a1, v7, v16);
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, AssociatedTypeWitness);
    uint64_t v21 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v18, v14, v12);
    swift_getAssociatedConformanceWitness();
    char v22 = sub_1B996F2F0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v12);
    if (v22) {
      return 0;
    }
  }
  uint64_t v29 = *(void *)(v2 + 16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v28, v26);
}

uint64_t TTRTreeStorageWithHiddenChildren.child(_:of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  uint64_t v6 = *(void *)(*(void *)(*(void *)(*(void *)v3 + 88) + 8) + 8);
  uint64_t v7 = *(void *)(*(void *)v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1B9970060();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  __n128 v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  uint64_t v31 = a2;
  v21(v12, a2, v9, v18);
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_5:
    uint64_t v32 = *(void *)(v4 + 16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v30, v31, v27);
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, AssociatedTypeWitness);
  uint64_t v23 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v20, v16, v14);
  swift_getAssociatedConformanceWitness();
  if ((sub_1B996F2F0() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v14);
    goto LABEL_5;
  }
  uint64_t result = sub_1B99708A0();
  __break(1u);
  return result;
}

uint64_t TTRTreeStorageWithHiddenChildren.item(withID:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v3 = *(void *)(*(void *)(*(void *)(*v2 + 88) + 8) + 8);
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)&v39 - v7;
  uint64_t v8 = sub_1B9970060();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v41 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v46 = v2;
  uint64_t v21 = v2[2];
  uint64_t v50 = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 40);
  uint64_t v23 = v48;
  uint64_t v48 = v4;
  v22(v23, v4, v3, v18);
  uint64_t v24 = v14;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v13, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    uint64_t v28 = v13;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v29(v20, v28, AssociatedTypeWitness);
    uint64_t v50 = v21;
    uint64_t v30 = v14;
    uint64_t v31 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 48))(v20, v48, v3);
    if (v25(v31, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t v32 = v14;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
    }
    else
    {
      uint64_t v33 = v41;
      v29(v41, v31, AssociatedTypeWitness);
      uint64_t v34 = v42;
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
      uint64_t v35 = v45;
      swift_getAssociatedConformanceWitness();
      char v36 = sub_1B996F2F0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v35);
      uint64_t v32 = v30;
      char v37 = *(void (**)(char *, uint64_t))(v30 + 8);
      v37(v33, AssociatedTypeWitness);
      if (v36)
      {
        v37(v20, AssociatedTypeWitness);
        uint64_t v26 = 1;
        uint64_t v27 = v49;
LABEL_8:
        uint64_t v24 = v32;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, AssociatedTypeWitness);
      }
    }
    uint64_t v27 = v49;
    v29(v49, v20, AssociatedTypeWitness);
    uint64_t v26 = 0;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  uint64_t v26 = 1;
  uint64_t v27 = v49;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, AssociatedTypeWitness);
}

uint64_t TTRTreeStorageWithHiddenChildren.parent(of:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v3 = *(void *)(*(void *)(*(void *)(*v2 + 88) + 8) + 8);
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v25 = (char *)&v24 - v7;
  uint64_t v8 = sub_1B9970060();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v31 = v2[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48))(v29, v4, v3, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v17(v16, v11, AssociatedTypeWitness);
    __n128 v18 = v25;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v19 = v28;
    swift_getAssociatedConformanceWitness();
    char v20 = sub_1B996F2F0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v19);
    if ((v20 & 1) == 0)
    {
      uint64_t v22 = v30;
      v17(v30, v16, AssociatedTypeWitness);
      uint64_t v21 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v22, v21, 1, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, AssociatedTypeWitness);
  }
  uint64_t v21 = 1;
  uint64_t v22 = v30;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v22, v21, 1, AssociatedTypeWitness);
}

uint64_t TTRTreeStorageWithHiddenChildren.isExpandSuppressed(_:)(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(*(void *)v1 + 88) + 8) + 16))(a1, *(void *)(*(void *)v1 + 80)) & 1;
}

uint64_t TTRTreeStorageWithHiddenChildren.convertFromImmediateUpstream(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_1B9970060();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v25, v7, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    swift_getAssociatedConformanceWitness();
    char v16 = sub_1B996F2F0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
    if (v16)
    {
      uint64_t v17 = type metadata accessor for TTRDerivedTreeLocation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v24, 1, 1, v17);
    }
  }
  uint64_t v19 = type metadata accessor for TTRDerivedTreeLocation();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v24, v25, v19);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v19);
}

uint64_t TTRTreeStorageWithHiddenChildren.convertToImmediateUpstream(_:for:)(uint64_t a1, int a2)
{
  LODWORD(v54) = a2;
  uint64_t v4 = *(void *)(*(void *)(*(void *)(*(void *)v2 + 88) + 8) + 8);
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = v5;
  uint64_t v52 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void (***)(char *, uint64_t))(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (char *)&v46 - v9;
  uint64_t v10 = sub_1B9970060();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v50 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for TTRDerivedTreeLocation();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v49 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v27 = *(void (**)(char *, uint64_t, __n128))(v21 + 16);
  uint64_t v60 = v28;
  v27((char *)&v46 - v25, a1, v24);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v53 = a1;
  uint64_t v59 = v10;
  v29(v15, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v59);
LABEL_7:
    uint64_t v36 = v60;
LABEL_8:
    sub_1B9970B30();
    swift_allocObject();
    uint64_t v37 = sub_1B996EE80();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v38, v26, v36);
    return sub_1B91F99B0(v37);
  }
  uint64_t v47 = v11;
  uint64_t v48 = v26;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, AssociatedTypeWitness);
  uint64_t v30 = v58;
  uint64_t v31 = v55;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v32 = v57;
  swift_getAssociatedConformanceWitness();
  char v33 = sub_1B996F2F0();
  v56[1](v31, v32);
  if ((v33 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
    uint64_t v26 = v48;
    goto LABEL_7;
  }
  uint64_t v57 = AssociatedConformanceWitness;
  if (v54)
  {
    uint64_t v36 = v60;
    uint64_t v39 = v48;
    if (*(void *)(v53 + *(int *)(v60 + 36)))
    {
      uint64_t v35 = sub_1B996EF00();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v39, v36);
      return v35;
    }
    uint64_t v61 = v30[2];
    char v58 = *(void **)(v16 + 16);
    uint64_t v41 = (uint64_t)v50;
    ((void (*)(char *, char *, uint64_t))v58)(v50, v19, AssociatedTypeWitness);
    uint64_t v42 = *(void (***)(char *, uint64_t))(v16 + 56);
    uint64_t v55 = (char *)(v16 + 56);
    uint64_t v56 = v42;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v42)(v41, 0, 1, AssociatedTypeWitness);
    uint64_t v43 = v52;
    uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 24);
    swift_unknownObjectRetain();
    uint64_t v44 = v54(v41, v51, v43);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v41, v59);
    swift_unknownObjectRelease();
    ((void (*)(uint64_t, char *, uint64_t))v58)(v41, v19, AssociatedTypeWitness);
    uint64_t v26 = v48;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v56)(v41, 0, 1, AssociatedTypeWitness);
    uint64_t v45 = v49;
    TTRDerivedTreeLocation.init(parent:index:)(v41, v44, AssociatedTypeWitness, v57, v49);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v36);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v26, v45, v36);
    goto LABEL_8;
  }
  uint64_t v34 = v60;
  uint64_t v35 = sub_1B996EF00();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v48, v34);
  return v35;
}

uint64_t TTRTreeStorageWithHiddenChildren.deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTRTreeStorageWithHiddenChildren.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B9248098()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B92480C8(uint64_t a1, char a2)
{
  return TTRTreeStorageWithHiddenChildren.convertToImmediateUpstream(_:for:)(a1, a2 & 1);
}

uint64_t sub_1B92480D4(uint64_t a1)
{
  return TTRTreeStorageWithHiddenChildren.numberOfChildren(of:)(a1);
}

uint64_t sub_1B92480F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.child(_:of:)(a1, a2, a3);
}

uint64_t sub_1B924811C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.item(withID:)(a1, a2);
}

uint64_t sub_1B9248140@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.parent(of:)(a1, a2);
}

uint64_t sub_1B9248164()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B9248180(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B92481BC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B92481F8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B924821C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTRTreeStorageWithHiddenChildren()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B9248284(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000001B99A2470;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6874695765766F6DLL;
      unint64_t v3 = 0xEE007473694C6E69;
      break;
    case 2:
      unint64_t v5 = 0x694C6F5465766F6DLL;
      unint64_t v3 = 0xEA00000000007473;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v3 = 0x80000001B99A24A0;
      break;
    case 4:
      unint64_t v5 = 0x754F746E65646E69;
      unint64_t v3 = 0xED0000746E656474;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001B99A2470;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE007473694C6E69;
      if (v5 == 0x6874695765766F6DLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA00000000007473;
      if (v5 != 0x694C6F5465766F6DLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xD00000000000001DLL;
      unint64_t v6 = 0x80000001B99A24A0;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xED0000746E656474;
      if (v5 != 0x754F746E65646E69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B9248484(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000074;
  unint64_t v3 = 0x6E65746E49707061;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E65746E49707061;
  unint64_t v6 = 0xE900000000000074;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x724F6C61756E616DLL;
      unint64_t v6 = 0xEE00676E69726564;
      break;
    case 2:
      unint64_t v6 = 0x80000001B99A2500;
      unint64_t v5 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v6 = 0x80000001B99A2520;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE00676E69726564;
      if (v5 == 0x724F6C61756E616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x80000001B99A2500;
      unint64_t v3 = 0xD000000000000017;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001B99A2520;
      if (v5 == 0xD00000000000001BLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B9248654(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7365746F6ELL;
    }
    else {
      uint64_t v3 = 0x7367617468736168;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7365746F6ELL;
      }
      else {
        uint64_t v6 = 0x7367617468736168;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x656C746974;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x656C746974)
  {
LABEL_21:
    char v8 = sub_1B9970BB0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B9248760(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E6967617373656DLL;
    }
    else {
      uint64_t v3 = 0x68535641446C6163;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000067;
    }
    else {
      unint64_t v4 = 0xED0000676E697261;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E6967617373656DLL;
      }
      else {
        uint64_t v6 = 0x68535641446C6163;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000067;
      }
      else {
        unint64_t v7 = 0xED0000676E697261;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x6E6F697461636F6CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x6E6F697461636F6CLL)
  {
LABEL_21:
    char v8 = sub_1B9970BB0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B924889C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7961646F74;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x776F72726F6D6F74;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x646E656B656577;
      break;
    case 4:
      uint64_t v5 = 0x57664F7472617473;
      unint64_t v3 = 0xEE007961646B6565;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6D6F74737563;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7961646F74) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x776F72726F6D6F74) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x646E656B656577) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x57664F7472617473;
      unint64_t v6 = 0xEE007961646B6565;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6D6F74737563) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B9248AA0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x795364756F6C4369;
  }
  else {
    uint64_t v3 = 0x5641446C6163;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000636ELL;
  }
  if (a2) {
    uint64_t v5 = 0x795364756F6C4369;
  }
  else {
    uint64_t v5 = 0x5641446C6163;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000636ELL;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B9248B48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED00006D65744964;
  unint64_t v3 = 0x6574656C706D6F63;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6574656C706D6F63;
  unint64_t v6 = 0xED00006D65744964;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001B99A2980;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v5 = 0x7367617468736168;
      unint64_t v6 = 0xEC0000006D657449;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      char v7 = "templateStatusItem";
      goto LABEL_8;
    case 4:
      unint64_t v5 = 0xD00000000000001FLL;
      char v7 = "publicTemplatePreviewStatusItem";
      goto LABEL_8;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x6D657449706974;
      break;
    case 6:
      unint64_t v5 = 0xD00000000000001DLL;
      char v7 = "recentlyDeletedDisclaimerItem";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001B99A2980;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v3 = 0x7367617468736168;
      unint64_t v2 = 0xEC0000006D657449;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000012;
      char v8 = "templateStatusItem";
      goto LABEL_16;
    case 4:
      unint64_t v3 = 0xD00000000000001FLL;
      char v8 = "publicTemplatePreviewStatusItem";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x6D657449706974;
      break;
    case 6:
      unint64_t v3 = 0xD00000000000001DLL;
      char v8 = "recentlyDeletedDisclaimerItem";
LABEL_16:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B9248D88(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7105633;
  }
  else {
    uint64_t v2 = 7958113;
  }
  if (a2) {
    uint64_t v3 = 7105633;
  }
  else {
    uint64_t v3 = 7958113;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B9248DFC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7265646E696D6572;
  }
  else {
    uint64_t v3 = 0x73746E756F636361;
  }
  if (v2) {
    unint64_t v4 = 0xEC0000007473694CLL;
  }
  else {
    unint64_t v4 = 0xED00007473694C73;
  }
  if (a2) {
    uint64_t v5 = 0x7265646E696D6572;
  }
  else {
    uint64_t v5 = 0x73746E756F636361;
  }
  if (a2) {
    unint64_t v6 = 0xED00007473694C73;
  }
  else {
    unint64_t v6 = 0xEC0000007473694CLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B9248EB8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C65636E6163;
  }
  else {
    uint64_t v3 = 0x65756E69746E6F63;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C65636E6163;
  }
  else {
    uint64_t v5 = 0x65756E69746E6F63;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B9248F5C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v3 = 1953720684;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v5 = 1953720684;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B9248FFC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x80000001B99A26B0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "tapped.QuickBarItem";
      goto LABEL_7;
    case 2:
      unint64_t v6 = "tapped.NLPSuggestion";
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "tapped.ShowCompletedAction";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD00000000000001ELL;
      unint64_t v6 = "tapped.NameAndAppearanceAction";
      goto LABEL_7;
    case 5:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "edited.CustomSmartList";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 6:
      unint64_t v5 = 0x482E646574696465;
      unint64_t v3 = 0xEF73676174687361;
      break;
    case 7:
      unint64_t v5 = 0x522E646574696465;
      unint64_t v3 = 0xEF7265646E696D65;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001B99A26B0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000013;
      char v8 = "tapped.QuickBarItem";
      goto LABEL_16;
    case 2:
      char v8 = "tapped.NLPSuggestion";
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xD00000000000001ALL;
      char v8 = "tapped.ShowCompletedAction";
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xD00000000000001ELL;
      char v8 = "tapped.NameAndAppearanceAction";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xD000000000000016;
      char v8 = "edited.CustomSmartList";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 6:
      unint64_t v2 = 0x482E646574696465;
      unint64_t v7 = 0xEF73676174687361;
      break;
    case 7:
      unint64_t v2 = 0x522E646574696465;
      unint64_t v7 = 0xEF7265646E696D65;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B9249240(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7105633;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 7105633;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7961646F74;
      break;
    case 2:
      unint64_t v5 = 0x656C756465686373;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x64656E6769737361;
      break;
    case 5:
      unint64_t v5 = 0x6E756F4669726973;
      unint64_t v3 = 0xEF737070416E4964;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x686372616573;
      break;
    case 7:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x646567676174;
      break;
    case 8:
      unint64_t v3 = 0x80000001B99A2690;
      unint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7961646F74) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x656C756465686373) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x64656767616C66) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x64656E6769737361) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEF737070416E4964;
      if (v5 != 0x6E756F4669726973) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x686372616573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x646567676174;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0x80000001B99A2690;
      if (v5 != 0xD000000000000014) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B924950C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000736E6F6974;
  uint64_t v3 = 0x6163696669746F6ELL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6163696669746F6ELL;
  unint64_t v6 = 0xED0000736E6F6974;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x73746361746E6F63;
      break;
    case 3:
      unint64_t v6 = 0x80000001B99A2430;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x6E6F697461636F6CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x73746361746E6F63;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001B99A2430;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B92496BC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x656E696665646E75;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656E696665646E75;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x656C6269736976;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6E6564646968;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6D6F74737563;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x656C6269736976) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6E6564646968;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x6D6F74737563) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B9249844(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7961646F74;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7961646F74;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656C756465686373;
      goto LABEL_8;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x64656E6769737361;
      break;
    case 5:
      uint64_t v5 = 0x6E756F4669726973;
      unint64_t v3 = 0xEF737070416E4964;
      break;
    case 6:
      uint64_t v5 = 0x6574656C706D6F63;
LABEL_8:
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v2 = 0x656C756465686373;
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7105633;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x64656E6769737361;
      break;
    case 5:
      uint64_t v2 = 0x6E756F4669726973;
      unint64_t v6 = 0xEF737070416E4964;
      break;
    case 6:
      uint64_t v2 = 0x6574656C706D6F63;
LABEL_16:
      unint64_t v6 = 0xE900000000000064;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1B9970BB0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B9249A6C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1EB9B0B28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B0B28);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL static TTRInlineRequestPresentationState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t TTRInlineRequestPresentationState.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t TTRInlineRequestPresentationState.hashValue.getter()
{
  return sub_1B9970D60();
}

unint64_t TTRPrivacyType.description.getter(char a1)
{
  unint64_t result = 0x6163696669746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0x73746361746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t TTRPrivacyType.rawValue.getter(char a1)
{
  unint64_t result = 0x6163696669746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0x73746361746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B9249D08()
{
  return sub_1B9624578();
}

uint64_t sub_1B9249D10()
{
  sub_1B996EAF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B9249DE4()
{
  return sub_1B9859CB0();
}

uint64_t sub_1B9249DEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15RemindersUICore14TTRPrivacyTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1B9249E1C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED0000736E6F6974;
  uint64_t v3 = 0x6163696669746F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6E6F697461636F6CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x73746361746E6F63;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001B99A2430;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B9249EC8(unsigned __int8 *a1, char *a2)
{
  return sub_1B924950C(*a1, *a2);
}

unint64_t sub_1B9249ED4()
{
  unint64_t result = 0x6163696669746F6ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0x73746361746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

RemindersUICore::TTRPrivacyAlertResponse_optional __swiftcall TTRPrivacyAlertResponse.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1B99709E0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = RemindersUICore_TTRPrivacyAlertResponse_cancel;
  }
  else {
    v2.value = RemindersUICore_TTRPrivacyAlertResponse_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t TTRPrivacyAlertResponse.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6C65636E6163;
  }
  else {
    return 0x65756E69746E6F63;
  }
}

uint64_t sub_1B9249FFC(char *a1, char *a2)
{
  return sub_1B9248EB8(*a1, *a2);
}

uint64_t sub_1B924A008()
{
  return sub_1B9970D60();
}

uint64_t sub_1B924A088()
{
  sub_1B996EAF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B924A0F4()
{
  return sub_1B9970D60();
}

uint64_t sub_1B924A170@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B99709E0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B924A1D0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65756E69746E6F63;
  if (*v1) {
    uint64_t v2 = 0x6C65636E6163;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

BOOL static TTRLocationAccessForRemindersInCalendarAction.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRLocationAccessForRemindersInCalendarAction.hash(into:)()
{
  return sub_1B9970D20();
}

uint64_t TTRLocationAccessForRemindersInCalendarAction.hashValue.getter()
{
  return sub_1B9970D60();
}

uint64_t TTRContactsAccessAlertFeature.description.getter(char a1)
{
  if (!a1) {
    return 0x6E6F697461636F6CLL;
  }
  if (a1 == 1) {
    return 0x6E6967617373656DLL;
  }
  return 0x68535641446C6163;
}

uint64_t TTRContactsAccessAlertFeature.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E6F697461636F6CLL;
  }
  if (a1 == 1) {
    return 0x6E6967617373656DLL;
  }
  return 0x68535641446C6163;
}

uint64_t static TTRContactsAccessAlertFeature.hasPreviouslyViewedAlert(for:userDefaults:)(char a1, uint64_t a2, uint64_t (**a3)(void, void))
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1B9256634(a1, a2, ObjectType, a3);
}

uint64_t static TTRContactsAccessAlertFeature.saveHasViewedAlert(for:userDefaults:)(char a1, uint64_t a2, uint64_t (**a3)(void, void, void))
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1B92566CC(a1, a2, ObjectType, a3);
}

uint64_t sub_1B924A410(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B9248760(*a1, *a2);
}

uint64_t sub_1B924A41C()
{
  return sub_1B9970D60();
}

uint64_t sub_1B924A4D0()
{
  sub_1B996EAF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B924A570()
{
  return sub_1B9970D60();
}

uint64_t sub_1B924A620@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15RemindersUICore29TTRContactsAccessAlertFeatureO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1B924A650(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE900000000000067;
  uint64_t v5 = 0x6E6967617373656DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x68535641446C6163;
    unint64_t v4 = 0xED0000676E697261;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F697461636F6CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B924A6C0()
{
  uint64_t v1 = 0x6E6967617373656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x68535641446C6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 72) = a1;
  sub_1B996F080();
  *(void *)(v4 + 40) = sub_1B996F070();
  uint64_t v6 = sub_1B996F010();
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 56) = v5;
  return MEMORY[0x1F4188298](sub_1B924A7CC, v6, v5);
}

uint64_t sub_1B924A7CC()
{
  char v1 = (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 32))();
  int v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *int v2 = v0;
  v2[1] = sub_1B924A88C;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 16);
  char v5 = *(unsigned char *)(v0 + 72);
  return sub_1B924AA0C(v5, v1 & 1, v4, v3);
}

uint64_t sub_1B924A88C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1B924A9AC, v3, v2);
}

uint64_t sub_1B924A9AC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B924AA0C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 105) = a2;
  *(unsigned char *)(v5 + 104) = a1;
  *(void *)(v5 + 48) = *(void *)(a3 - 8);
  *(void *)(v5 + 56) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B924AACC, 0, 0);
}

uint64_t sub_1B924AACC()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Notification] checking Notification Access", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];

  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  uint64_t v9 = v8;
  v0[9] = v7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v9 + 24) + **(int **)(v9 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B924ACB0;
  return v13(ObjectType, v9);
}

uint64_t sub_1B924ACB0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4188298](sub_1B924ADD0, 0, 0);
}

uint64_t sub_1B924ADD0()
{
  uint64_t v22 = v0;
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F660();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    unint64_t v6 = 0xEE0064656E696D72;
    uint64_t v7 = 0x6574654420746F4ELL;
    switch(v3)
    {
      case 0:
        break;
      case 1:
        unint64_t v6 = 0xE600000000000000;
        uint64_t v7 = 0x6465696E6544;
        break;
      case 2:
        unint64_t v6 = 0xEA00000000006465;
        uint64_t v7 = 0x7A69726F68747541;
        break;
      case 3:
        unint64_t v6 = 0xEB000000006C616ELL;
        uint64_t v7 = 0x6F697369766F7250;
        break;
      case 4:
        unint64_t v6 = 0xE90000000000006CLL;
        uint64_t v7 = 0x6172656D65687045;
        break;
      default:
        unint64_t v6 = 0xE700000000000000;
        uint64_t v7 = 0x6E776F6E6B6E55;
        break;
    }
    *(void *)(v0 + 16) = sub_1B90D2A1C(v7, v6, &v21);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Notification] current system authorization: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v5, -1, -1);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  uint64_t v8 = *(void *)(v0 + 88);
  if ((unint64_t)(v8 - 2) < 3)
  {
    uint64_t v9 = 0;
    goto LABEL_23;
  }
  if (v8 == 1)
  {
    uint64_t v9 = 1;
    goto LABEL_23;
  }
  if (v8)
  {
    uint64_t v12 = sub_1B996D2F0();
    os_log_type_t v13 = sub_1B996F650();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v9 = 2;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1B90A0000, v12, v13, "PrivacyChecker: [Notification] unknown notification authorization status", v14, 2u);
      MEMORY[0x1BA9DB030](v14, -1, -1);
    }
    else
    {

      uint64_t v9 = 2;
    }
LABEL_23:
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v20(v9);
  }
  int v10 = *(unsigned __int8 *)(v0 + 104);
  (*(void (**)(void, void, void))(*(void *)(v0 + 48) + 16))(*(void *)(v0 + 56), *(void *)(v0 + 40), *(void *)(v0 + 24));
  if (v10 == 2) {
    char v11 = sub_1B9253208(*(void *)(v0 + 24), *(void *)(v0 + 32));
  }
  else {
    char v11 = *(unsigned char *)(v0 + 104) & 1;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 24));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1B924B1A4;
  uint64_t v16 = *(void *)(v0 + 32);
  uint64_t v17 = *(void *)(v0 + 24);
  char v18 = *(unsigned char *)(v0 + 105);
  return sub_1B925352C(v11 & 1, v18, v17, v16);
}

uint64_t sub_1B924B1A4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t TTRPrivacyChecker.checkAndPromptLocationAccess()(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  sub_1B996F080();
  unsigned char v3[16] = sub_1B996F070();
  uint64_t v5 = sub_1B996F010();
  v3[17] = v5;
  v3[18] = v4;
  return MEMORY[0x1F4188298](sub_1B924B360, v5, v4);
}

uint64_t sub_1B924B360()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[19] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F620();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] checking Location Access and request if necessary", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[13];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[20] = v7;
  v0[21] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x350F000000000000;
  v7(v6, v5);
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v9 + 48) + **(int **)(v9 + 48));
  int v10 = (void *)swift_task_alloc();
  v0[22] = v10;
  *int v10 = v0;
  v10[1] = sub_1B924B558;
  return v12(v8, v9);
}

uint64_t sub_1B924B558()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x1F4188298](sub_1B924B678, v3, v2);
}

uint64_t sub_1B924B678()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[20];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[13];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v1(v3, v2);
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v4);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 80) + **(int **)(v5 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[23] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1B924B7B0;
  return v8(v4, v5);
}

uint64_t sub_1B924B7B0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 200) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  return MEMORY[0x1F4188298](sub_1B924B8D8, v4, v3);
}

uint64_t sub_1B924B8D8()
{
  uint64_t v17 = v0;
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F620();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = *(unsigned char *)(v0 + 200);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = TTRGeoLocationAuthorizationStatus.description.getter(v3);
    *(void *)(v0 + 96) = sub_1B90D2A1C(v6, v7, &v16);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] current location authorization status: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v5, -1, -1);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  int v8 = *(unsigned __int8 *)(v0 + 200);
  if (v8 == 2)
  {
    uint64_t v13 = 0;
  }
  else
  {
    if (v8 == 3 || (v8 & 1) == 0)
    {
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 112) + 64)
                                                              + **(int **)(*(void *)(v0 + 112) + 64));
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_1B924BB48;
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v11 = *(void *)(v0 + 104);
      return v15(1, v11, v10);
    }
    uint64_t v13 = 1;
  }
  swift_release();
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v14(v13);
}

uint64_t sub_1B924BB48(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 201) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  return MEMORY[0x1F4188298](sub_1B924BC70, v4, v3);
}

uint64_t sub_1B924BC70()
{
  int v1 = *(unsigned __int8 *)(v0 + 201);
  swift_release();
  if (v1 != 2)
  {
    if (*(unsigned char *)(v0 + 201))
    {
      char v2 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 112) + 40))(1, *(void *)(v0 + 104));
  }
LABEL_6:
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(0);
}

uint64_t TTRPrivacyChecker.checkLocationAccessForRemindersInCalendar()()
{
  uint64_t v1 = sub_1B996E640();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  sub_1B996F080();
  v0[6] = sub_1B996F070();
  uint64_t v3 = sub_1B996F010();
  v0[7] = v3;
  v0[8] = v2;
  return MEMORY[0x1F4188298](sub_1B924BE40, v3, v2);
}

uint64_t sub_1B924BE40()
{
  if (qword_1EB9B0DE8 != -1) {
    swift_once();
  }
  if (static TTRAuthorizationSource.isNonRemindersBundle == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    v0[9] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F620();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] checking Location Access for Reminders In Calendar", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    if (qword_1E9EFA8E8 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[4];
    uint64_t v5 = (uint64_t *)v0[5];
    uint64_t v7 = v0[3];
    uint64_t v9 = static TTRAuthorizationSource.onBehalfOfReminders;
    uint64_t v8 = unk_1E9F299C0;
    sub_1B90D894C();
    *uint64_t v5 = sub_1B996F860();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E4FBCBF0], v7);
    char v10 = sub_1B996E660();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
    if (v10)
    {
      uint64_t v11 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRGeoLocationService());
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v0[10] = sub_1B96679D0(v11, v9, v8);
      swift_bridgeObjectRelease();
      uint64_t v12 = (void *)swift_task_alloc();
      v0[11] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_1B924C1C0;
      return TTRGeoLocationService.locationAuthorizationStatus.getter();
    }
    __break(1u);
    goto LABEL_21;
  }
  swift_release();
  if (qword_1EB9B0E98 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v14 = sub_1B996D300();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB9B0B28);
  uint64_t v15 = sub_1B996D2F0();
  os_log_type_t v16 = sub_1B996F650();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1B90A0000, v15, v16, "PrivacyChecker: [Location] skipping checkLocationAccessForRemindersInCalendar because isNonRemindersBundle == false", v17, 2u);
    MEMORY[0x1BA9DB030](v17, -1, -1);
  }

  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(2);
}

uint64_t sub_1B924C1C0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return MEMORY[0x1F4188298](sub_1B9258550, v4, v3);
}

uint64_t sub_1B924C2E8(char a1)
{
  uint64_t v3 = sub_1B996B5D0();
  v1[2] = v3;
  v1[3] = *(void *)(v3 - 8);
  v1[4] = swift_task_alloc();
  uint64_t v4 = sub_1B996A580();
  v1[5] = v4;
  v1[6] = *(void *)(v4 - 8);
  v1[7] = swift_task_alloc();
  if (a1)
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v1[9] = v7;
    *uint64_t v7 = v1;
    v7[1] = sub_1B924C7D0;
    return TTRIPrivacyChecker.showPrivacyAlert(type:)(1);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v1[8] = v5;
    *uint64_t v5 = v1;
    v5[1] = sub_1B924C4A4;
    return TTRIPrivacyChecker.showLocationPrivacyAlertForRemindersInCalendar()();
  }
}

uint64_t sub_1B924C4A4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B924C5A4, 0, 0);
}

uint64_t sub_1B924C5A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 2)
  {
    if (v1)
    {
      char v2 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B996D300();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB9B0B28);
    uint64_t v4 = sub_1B996D2F0();
    os_log_type_t v5 = sub_1B996F620();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1B90A0000, v4, v5, "PrivacyChecker: [Location] requesting Location Access for Reminders In Calendar via url", v6, 2u);
      MEMORY[0x1BA9DB030](v6, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 16);

    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x1E4F954E0], v9);
    sub_1B996B5C0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    id v10 = objc_msgSend(self, sel_defaultWorkspace);
    if (v10)
    {
      uint64_t v11 = v10;
      LSApplicationWorkspace.open(universalLink:)(*(void *)(v0 + 56));
    }
    (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
  }
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1B924C7D0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 81) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B924C8D0, 0, 0);
}

uint64_t sub_1B924C8D0()
{
  int v1 = *(unsigned __int8 *)(v0 + 81);
  if (v1 != 2)
  {
    if (v1)
    {
      char v2 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    _s15RemindersUICore18TTRIPrivacyCheckerC15openSettingsApp3foryAA14TTRPrivacyTypeO_tF_0(1);
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t TTRPrivacyChecker.performActionForLocationAccessForRemindersInCalendar(_:)(char a1, uint64_t a2, uint64_t a3)
{
  void v4[3] = a3;
  void v4[4] = v3;
  void v4[2] = a2;
  uint64_t v8 = sub_1B996B5D0();
  v4[5] = v8;
  void v4[6] = *(void *)(v8 - 8);
  v4[7] = swift_task_alloc();
  uint64_t v9 = sub_1B996A580();
  v4[8] = v9;
  v4[9] = *(void *)(v9 - 8);
  v4[10] = swift_task_alloc();
  if (a1)
  {
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
    uint64_t v12 = (void *)swift_task_alloc();
    v4[12] = v12;
    *uint64_t v12 = v4;
    v12[1] = sub_1B924CF50;
    return v14(1, a2, a3);
  }
  else
  {
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
    id v10 = (void *)swift_task_alloc();
    v4[11] = v10;
    *id v10 = v4;
    v10[1] = sub_1B924CC24;
    return v13(a2, a3);
  }
}

uint64_t sub_1B924CC24(char a1)
{
  *(unsigned char *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B924CD24, 0, 0);
}

uint64_t sub_1B924CD24()
{
  int v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1 != 2)
  {
    if (v1)
    {
      char v2 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B996D300();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB9B0B28);
    uint64_t v4 = sub_1B996D2F0();
    os_log_type_t v5 = sub_1B996F620();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1B90A0000, v4, v5, "PrivacyChecker: [Location] requesting Location Access for Reminders In Calendar via url", v6, 2u);
      MEMORY[0x1BA9DB030](v6, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 48);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x1E4F954E0], v9);
    sub_1B996B5C0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    id v10 = objc_msgSend(self, sel_defaultWorkspace);
    if (v10)
    {
      uint64_t v11 = v10;
      LSApplicationWorkspace.open(universalLink:)(*(void *)(v0 + 80));
    }
    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
  }
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1B924CF50(char a1)
{
  *(unsigned char *)(*(void *)v1 + 105) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B924D050, 0, 0);
}

uint64_t sub_1B924D050()
{
  int v1 = *(unsigned __int8 *)(v0 + 105);
  if (v1 != 2)
  {
    if (v1)
    {
      char v2 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 24) + 40))(1, *(void *)(v0 + 16));
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1B924D134()
{
  v1[10] = v0;
  v1[11] = sub_1B996F080();
  v1[12] = sub_1B996F070();
  uint64_t v3 = sub_1B996F010();
  v1[13] = v3;
  v1[14] = v2;
  return MEMORY[0x1F4188298](sub_1B924D1D0, v3, v2);
}

uint64_t sub_1B924D1D0()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F620();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] checking Notification Access and request if necessary for Reminders In Calendar", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  v0[16] = sub_1B996F070();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9F00A50 + dword_1E9F00A50);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1B924D34C;
  return v7(2, 1);
}

uint64_t sub_1B924D34C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1B996F010();
  return MEMORY[0x1F4188298](sub_1B924D488, v1, v0);
}

uint64_t sub_1B924D488()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1B924D4EC, v1, v2);
}

uint64_t sub_1B924D4EC()
{
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F620();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] checking Location Access and request if necessary for Reminders In Calendar", v3, 2u);
    MEMORY[0x1BA9DB030](v3, -1, -1);
  }
  uint64_t v4 = v0[10];

  swift_beginAccess();
  sub_1B9101650(v4 + 32, (uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 80) + **(int **)(v6 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1B924D694;
  return v9(v5, v6);
}

uint64_t sub_1B924D694(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 160) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  return MEMORY[0x1F4188298](sub_1B924D7BC, v4, v3);
}

uint64_t sub_1B924D7BC()
{
  int v1 = *(unsigned __int8 *)(v0 + 160);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1 == 2)
  {
    uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1E9F00A58 + dword_1E9F00A58);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1B924D8AC;
    return v5();
  }
  else
  {
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1B924D8AC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x1F4188298](sub_1B924D9CC, v3, v2);
}

uint64_t sub_1B924D9CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TTRPrivacyChecker.checkAndPromptNotificationAndLocationAccessForRemindersInCalendar()(uint64_t a1, uint64_t a2)
{
  unsigned char v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_1B996F080();
  v3[10] = sub_1B996F070();
  uint64_t v5 = sub_1B996F010();
  v3[11] = v5;
  v3[12] = v4;
  return MEMORY[0x1F4188298](sub_1B924DAC8, v5, v4);
}

uint64_t sub_1B924DAC8()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F620();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] checking Notification Access and request if necessary for Reminders In Calendar", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1B924DC20;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[7];
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v7, v6);
}

uint64_t sub_1B924DC20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924DD40, v3, v2);
}

uint64_t sub_1B924DD40()
{
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F620();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] checking Location Access and request if necessary for Reminders In Calendar", v3, 2u);
    MEMORY[0x1BA9DB030](v3, -1, -1);
  }
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[7];

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 80) + **(int **)(v7 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1B924DEE4;
  return v10(v6, v7);
}

uint64_t sub_1B924DEE4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 136) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  return MEMORY[0x1F4188298](sub_1B924E00C, v4, v3);
}

uint64_t sub_1B924E00C()
{
  int v1 = *(unsigned __int8 *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1 == 2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 64) + 88)
                                                  + **(int **)(*(void *)(v0 + 64) + 88));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1B924E140;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 56);
    return v7(v4, v3);
  }
  else
  {
    swift_release();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1B924E140()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924E260, v3, v2);
}

uint64_t sub_1B924E260()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 32) = a2;
  *(unsigned char *)(v4 + 112) = a1;
  sub_1B996F080();
  *(void *)(v4 + 56) = sub_1B996F070();
  uint64_t v6 = sub_1B996F010();
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = v5;
  return MEMORY[0x1F4188298](sub_1B924E360, v6, v5);
}

uint64_t sub_1B924E360()
{
  uint64_t v36 = v0;
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F620();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 112);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v35 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v7 = 0xE900000000000067;
    uint64_t v8 = 0x6E6967617373656DLL;
    if (v4 != 1)
    {
      uint64_t v8 = 0x68535641446C6163;
      unint64_t v7 = 0xED0000676E697261;
    }
    if (v4) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0x6E6F697461636F6CLL;
    }
    if (v4) {
      unint64_t v10 = v7;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
    *(void *)(v0 + 24) = sub_1B90D2A1C(v9, v10, &v35);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Contacts] checking Contacts Access with alertFeature: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v6, -1, -1);
    MEMORY[0x1BA9DB030](v5, -1, -1);
  }

  id v11 = objc_msgSend(self, sel_authorizationStatusForEntityType_, 0);
  *(void *)(v0 + 80) = v11;
  uint64_t v12 = sub_1B996D2F0();
  os_log_type_t v13 = sub_1B996F620();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v35 = v15;
    if (v11 == (id)3) {
      uint64_t v16 = 1702195828;
    }
    else {
      uint64_t v16 = 0x65736C6166;
    }
    if (v11 == (id)3) {
      unint64_t v17 = 0xE400000000000000;
    }
    else {
      unint64_t v17 = 0xE500000000000000;
    }
    *(void *)(v0 + 16) = sub_1B90D2A1C(v16, v17, &v35);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v12, v13, "PrivacyChecker: [Contacts] hasContactsAccess: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v15, -1, -1);
    MEMORY[0x1BA9DB030](v14, -1, -1);
  }

  if (v11 == (id)3) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v0 + 32);
  int v19 = *(unsigned __int8 *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 24);
  *(void *)(v0 + 88) = v21;
  *(void *)(v0 + 96) = (v20 + 24) & 0xFFFFFFFFFFFFLL | 0xC9A7000000000000;
  v21(v18);
  uint64_t v23 = v22;
  if (v19)
  {
    uint64_t ObjectType = swift_getObjectType();
    char v25 = v19 == 1
        ? (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(ObjectType, v23)
        : (*(unint64_t (**)(uint64_t, uint64_t))(v23 + 56))(ObjectType, v23);
  }
  else
  {
    uint64_t v26 = swift_getObjectType();
    char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v26, v23);
  }
  char v27 = v25;
  swift_unknownObjectRelease();
  if (v27)
  {
LABEL_28:
    swift_release();
    uint64_t v28 = *(uint64_t (**)(BOOL))(v0 + 8);
    BOOL v29 = *(void *)(v0 + 80) == 3;
    return v28(v29);
  }
  else
  {
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 40) + 64)
                                                            + **(int **)(*(void *)(v0 + 40) + 64));
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_1B924E83C;
    uint64_t v32 = *(void *)(v0 + 40);
    uint64_t v33 = *(void *)(v0 + 32);
    return v34(2, v33, v32);
  }
}

uint64_t sub_1B924E83C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 113) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return MEMORY[0x1F4188298](sub_1B924E964, v4, v3);
}

uint64_t sub_1B924E964()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  int v4 = *(unsigned __int8 *)(v0 + 112);
  swift_release();
  v1(v3, v2);
  uint64_t v6 = v5;
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    if (v4 == 1) {
      v6[5](1, ObjectType, v6);
    }
    else {
      v6[8](1, ObjectType, v6);
    }
  }
  else
  {
    uint64_t v8 = swift_getObjectType();
    v6[2](1, v8, v6);
  }
  int v9 = *(unsigned __int8 *)(v0 + 113);
  swift_unknownObjectRelease();
  if (v9 != 2)
  {
    if (*(unsigned char *)(v0 + 113))
    {
      char v10 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 40) + 40))(2, *(void *)(v0 + 32));
  }
LABEL_11:
  id v11 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v12 = *(void *)(v0 + 80) == 3;
  return v11(v12);
}

uint64_t sub_1B924EB04(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  v2[4] = swift_task_alloc();
  v2[5] = sub_1B996F080();
  v2[6] = sub_1B996F070();
  uint64_t v4 = sub_1B996F010();
  v2[7] = v4;
  v2[8] = v3;
  return MEMORY[0x1F4188298](sub_1B924EBD0, v4, v3);
}

uint64_t sub_1B924EBD0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = (void *)v0[2];
  sub_1B996F0A0();
  uint64_t v4 = sub_1B996F0D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = 0;
  void v5[3] = 0;
  v5[4] = v2;
  v5[5] = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = MEMORY[0x1E4FBB390];
  uint64_t v8 = sub_1B9250140(v1, (uint64_t)&unk_1E9EFE418, (uint64_t)v5);
  v0[9] = v8;
  sub_1B90CCA68(v1, &qword_1EB9AD960);
  int v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *int v9 = v0;
  v9[1] = sub_1B924ED60;
  return MEMORY[0x1F4187DC0](v0 + 15, v8, v7);
}

uint64_t sub_1B924ED60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x1F4188298](sub_1B924EE80, v3, v2);
}

uint64_t sub_1B924EE80()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    *(void *)(v0 + 88) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F660();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] Detected existing location alarms - check and prompt for system notification access", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    *(void *)(v0 + 96) = sub_1B996F070();
    BOOL v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9F00A50 + dword_1E9F00A50);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1B924F110;
    return v12(2, 1);
  }
  else
  {
    swift_release();
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B996D300();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB9B0B28);
    uint64_t v8 = sub_1B996D2F0();
    os_log_type_t v9 = sub_1B996F660();
    if (os_log_type_enabled(v8, v9))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v10 = 0;
      _os_log_impl(&dword_1B90A0000, v8, v9, "PrivacyChecker: [Location] Did not detect any existing location alarms - do not prompt for system location permission", v10, 2u);
      MEMORY[0x1BA9DB030](v10, -1, -1);
    }
    swift_release();

    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1B924F110()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1B996F010();
  return MEMORY[0x1F4188298](sub_1B924F24C, v1, v0);
}

uint64_t sub_1B924F24C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return MEMORY[0x1F4188298](sub_1B924F2B0, v1, v2);
}

uint64_t sub_1B924F2B0()
{
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F660();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] Detected existing location alarms - prompt for system location access", v3, 2u);
    MEMORY[0x1BA9DB030](v3, -1, -1);
  }

  id v6 = (uint64_t (__cdecl *)())((char *)&dword_1E9F00A58 + dword_1E9F00A58);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B924F3CC;
  return v6();
}

uint64_t sub_1B924F3CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x1F4188298](sub_1B924F4EC, v3, v2);
}

uint64_t sub_1B924F4EC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TTRPrivacyChecker.checkAndPromptAccessForRemindersWithLocation(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = *(void *)(a2 - 8);
  void v4[6] = v5;
  v4[7] = *(void *)(v5 + 64);
  v4[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  v4[9] = swift_task_alloc();
  sub_1B996F080();
  v4[10] = sub_1B996F070();
  uint64_t v7 = sub_1B996F010();
  v4[11] = v7;
  v4[12] = v6;
  return MEMORY[0x1F4188298](sub_1B924F680, v7, v6);
}

uint64_t sub_1B924F680()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void **)(v0 + 16);
  long long v15 = *(_OWORD *)(v0 + 24);
  sub_1B996F0A0();
  uint64_t v7 = sub_1B996F0D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 0, 1, v7);
  (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v2, v5, v15);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(_OWORD *)(v9 + 32) = v15;
  (*(void (**)(unint64_t, uint64_t, void))(v3 + 32))(v9 + v8, v2, v15);
  *(void *)(v9 + ((v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  id v10 = v6;
  uint64_t v11 = MEMORY[0x1E4FBB390];
  uint64_t v12 = sub_1B9250140(v1, (uint64_t)&unk_1E9EFE318, v9);
  *(void *)(v0 + 104) = v12;
  sub_1B90CCA68(v1, &qword_1EB9AD960);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1B924F88C;
  return MEMORY[0x1F4187DC0](v0 + 144, v12, v11);
}

uint64_t sub_1B924F88C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924F9AC, v3, v2);
}

uint64_t sub_1B924F9AC()
{
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    *(void *)(v0 + 120) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F660();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] Detected existing location alarms - check and prompt for system notification access", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1B924FC1C;
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 24);
    return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v7, v6);
  }
  else
  {
    swift_release();
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B996D300();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB9B0B28);
    id v10 = sub_1B996D2F0();
    os_log_type_t v11 = sub_1B996F660();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1B90A0000, v10, v11, "PrivacyChecker: [Location] Did not detect any existing location alarms - do not prompt for system location permission", v12, 2u);
      MEMORY[0x1BA9DB030](v12, -1, -1);
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_1B924FC1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924FD3C, v3, v2);
}

uint64_t sub_1B924FD3C()
{
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F660();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] Detected existing location alarms - prompt for system location access", v3, 2u);
    MEMORY[0x1BA9DB030](v3, -1, -1);
  }
  uint64_t v9 = v0[4];

  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v9 + 88) + **(int **)(v9 + 88));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B924FEA4;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];
  return v8(v6, v5);
}

uint64_t sub_1B924FEA4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924FFC4, v3, v2);
}

uint64_t sub_1B924FFC4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B9250040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[4] = a6;
  v7[5] = a7;
  _OWORD v7[2] = a1;
  v7[3] = a5;
  return MEMORY[0x1F4188298](sub_1B9250064, 0, 0);
}

uint64_t sub_1B9250064()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = sub_1B9257E84(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), MEMORY[0x1E4F95A78]) & 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B92500EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B9250140(a1, a2, a3);
}

uint64_t sub_1B9250114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B9250140(a1, a2, a3);
}

uint64_t sub_1B9250140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B90CCA04(a1, (uint64_t)v8, &qword_1EB9AD960);
  uint64_t v9 = sub_1B996F0D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1B90CCA68((uint64_t)v8, &qword_1EB9AD960);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1B996F010();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B996F0C0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1B925032C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  v2[4] = swift_task_alloc();
  v2[5] = sub_1B996F080();
  v2[6] = sub_1B996F070();
  uint64_t v4 = sub_1B996F010();
  v2[7] = v4;
  v2[8] = v3;
  return MEMORY[0x1F4188298](sub_1B92503F8, v4, v3);
}

uint64_t sub_1B92503F8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = (void *)v0[2];
  sub_1B996F0A0();
  uint64_t v4 = sub_1B996F0D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = 0;
  void v5[3] = 0;
  v5[4] = v2;
  v5[5] = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = MEMORY[0x1E4FBB390];
  uint64_t v8 = sub_1B9250140(v1, (uint64_t)&unk_1E9EFE438, (uint64_t)v5);
  v0[9] = v8;
  sub_1B90CCA68(v1, &qword_1EB9AD960);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1B9250588;
  return MEMORY[0x1F4187DC0](v0 + 13, v8, v7);
}

uint64_t sub_1B9250588()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x1F4188298](sub_1B92506A8, v3, v2);
}

uint64_t sub_1B92506A8()
{
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F660();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Notification] Detected existing reminders with due date - prompt for system notification permission", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    *(void *)(v0 + 88) = sub_1B996F070();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9F00A50 + dword_1E9F00A50);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1B9250934;
    return v12(2, 1);
  }
  else
  {
    swift_release();
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B996D300();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB9B0B28);
    uint64_t v8 = sub_1B996D2F0();
    os_log_type_t v9 = sub_1B996F660();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1B90A0000, v8, v9, "PrivacyChecker: [Notification] Did not detect any existing reminders with due date - do not prompt for system notification permission", v10, 2u);
      MEMORY[0x1BA9DB030](v10, -1, -1);
    }
    swift_release();

    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1B9250934()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1B996F010();
  return MEMORY[0x1F4188298](sub_1B9250A70, v1, v0);
}

uint64_t sub_1B9250A70()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return MEMORY[0x1F4188298](sub_1B924F4EC, v1, v2);
}

uint64_t TTRPrivacyChecker.checkAndPromptAccessForRemindersWithDueDate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = *(void *)(a2 - 8);
  void v4[6] = v5;
  v4[7] = *(void *)(v5 + 64);
  v4[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  v4[9] = swift_task_alloc();
  sub_1B996F080();
  v4[10] = sub_1B996F070();
  uint64_t v7 = sub_1B996F010();
  v4[11] = v7;
  v4[12] = v6;
  return MEMORY[0x1F4188298](sub_1B9250BF4, v7, v6);
}

uint64_t sub_1B9250BF4()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void **)(v0 + 16);
  long long v15 = *(_OWORD *)(v0 + 24);
  sub_1B996F0A0();
  uint64_t v7 = sub_1B996F0D0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 0, 1, v7);
  (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v2, v5, v15);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(_OWORD *)(v9 + 32) = v15;
  (*(void (**)(unint64_t, uint64_t, void))(v3 + 32))(v9 + v8, v2, v15);
  *(void *)(v9 + ((v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  id v10 = v6;
  uint64_t v11 = MEMORY[0x1E4FBB390];
  uint64_t v12 = sub_1B9250140(v1, (uint64_t)&unk_1E9EFE330, v9);
  *(void *)(v0 + 104) = v12;
  sub_1B90CCA68(v1, &qword_1EB9AD960);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1B9250E00;
  return MEMORY[0x1F4187DC0](v0 + 128, v12, v11);
}

uint64_t sub_1B9250E00()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B9250F20, v3, v2);
}

uint64_t sub_1B9250F20()
{
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F660();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Notification] Detected existing reminders with due date - prompt for system notification permission", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1B925118C;
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 24);
    return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v7, v6);
  }
  else
  {
    swift_release();
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B996D300();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB9B0B28);
    id v10 = sub_1B996D2F0();
    os_log_type_t v11 = sub_1B996F660();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1B90A0000, v10, v11, "PrivacyChecker: [Notification] Did not detect any existing reminders with due date - do not prompt for system notification permission", v12, 2u);
      MEMORY[0x1BA9DB030](v12, -1, -1);
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_1B925118C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x1F4188298](sub_1B924FFC4, v3, v2);
}

uint64_t sub_1B92512AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[4] = a6;
  v7[5] = a7;
  _OWORD v7[2] = a1;
  v7[3] = a5;
  return MEMORY[0x1F4188298](sub_1B92512D0, 0, 0);
}

uint64_t sub_1B92512D0()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = sub_1B9257E84(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), MEMORY[0x1E4F95A70]) & 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B9251358(char a1)
{
  *(void *)(v2 + 40) = v1;
  *(unsigned char *)(v2 + 120) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  *(void *)(v2 + 48) = swift_task_alloc();
  *(void *)(v2 + 56) = swift_task_alloc();
  *(void *)(v2 + 64) = swift_task_alloc();
  sub_1B996F080();
  *(void *)(v2 + 72) = sub_1B996F070();
  uint64_t v4 = sub_1B996F010();
  *(void *)(v2 + 80) = v4;
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x1F4188298](sub_1B9251440, v4, v3);
}

uint64_t sub_1B9251440()
{
  if (*(unsigned char *)(v0 + 120))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1(0);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 40);
    swift_beginAccess();
    *(void *)(v0 + 96) = *(void *)(v3 + 72);
    uint64_t v4 = *(void *)(v3 + 80);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
    swift_unknownObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1B92515D8;
    return v7(ObjectType, v4);
  }
}

uint64_t sub_1B92515D8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  return MEMORY[0x1F4188298](sub_1B9251724, v4, v3);
}

uint64_t sub_1B9251724()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[5];
  swift_release();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 56);
  swift_unknownObjectRetain();
  v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if ((unint64_t)(v1 - 2) < 3)
  {
LABEL_5:
    sub_1B90CCA68(v0[8], &qword_1EB9B5EB0);
    uint64_t v14 = 0;
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    if (!v1)
    {
      uint64_t v7 = v0[7];
      uint64_t v6 = v0[8];
      uint64_t v8 = *(void *)(v0[5] + 80);
      uint64_t v9 = swift_getObjectType();
      id v10 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
      swift_unknownObjectRetain();
      v10(v9, v8);
      swift_unknownObjectRelease();
      uint64_t v11 = sub_1B996A6F0();
      char v12 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v7, 1, v11) != 1;
      sub_1B90CCA68(v7, &qword_1EB9B5EB0);
      char v13 = sub_1B9252040(v12, v6, 168, 0);
      sub_1B90CCA68(v6, &qword_1EB9B5EB0);
      uint64_t v14 = v13 & 1;
      goto LABEL_9;
    }
    goto LABEL_5;
  }
  uint64_t v15 = v0[8];
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v0[5] + 80);
  uint64_t v18 = swift_getObjectType();
  int v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
  swift_unknownObjectRetain();
  v19(v18, v17);
  swift_unknownObjectRelease();
  uint64_t v20 = sub_1B996A6F0();
  char v21 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v16, 1, v20) != 1;
  sub_1B90CCA68(v16, &qword_1EB9B5EB0);
  char v22 = sub_1B9252040(v21, v15, 4320, 0);
  sub_1B90CCA68(v15, &qword_1EB9B5EB0);
  if (v22) {
    uint64_t v14 = 2;
  }
  else {
    uint64_t v14 = 0;
  }
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
  return v23(v14);
}

uint64_t TTRPrivacyChecker.inlineRequestPresentationState(for:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 128) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  *(void *)(v4 + 40) = swift_task_alloc();
  *(void *)(v4 + 48) = swift_task_alloc();
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_1B996F080();
  *(void *)(v4 + 64) = sub_1B996F070();
  uint64_t v6 = sub_1B996F010();
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v5;
  return MEMORY[0x1F4188298](sub_1B9251AC0, v6, v5);
}

uint64_t sub_1B9251AC0()
{
  if (*(unsigned char *)(v0 + 128))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1(0);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 16);
    *(void *)(v0 + 88) = v5;
    *(void *)(v0 + 96) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0x6FE1000000000000;
    uint64_t v6 = v5(v3);
    uint64_t v8 = v7;
    *(void *)(v0 + 104) = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 24) + **(int **)(v8 + 24));
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v10;
    *id v10 = v0;
    v10[1] = sub_1B9251C4C;
    return v11(ObjectType, v8);
  }
}

uint64_t sub_1B9251C4C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return MEMORY[0x1F4188298](sub_1B9251D98, v4, v3);
}

uint64_t sub_1B9251D98()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[2];
  swift_release();
  v2(v4, v3);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 56))(ObjectType, v6);
  swift_unknownObjectRelease();
  if ((unint64_t)(v1 - 2) < 3)
  {
LABEL_5:
    sub_1B90CCA68(v0[7], &qword_1EB9B5EB0);
    uint64_t v16 = 0;
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    if (!v1)
    {
      uint64_t v9 = v0[6];
      uint64_t v8 = v0[7];
      ((void (*)(void, void))v0[11])(v0[2], v0[3]);
      uint64_t v11 = v10;
      uint64_t v12 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v12, v11);
      swift_unknownObjectRelease();
      uint64_t v13 = sub_1B996A6F0();
      char v14 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v9, 1, v13) != 1;
      sub_1B90CCA68(v9, &qword_1EB9B5EB0);
      char v15 = sub_1B9252040(v14, v8, 168, 0);
      sub_1B90CCA68(v8, &qword_1EB9B5EB0);
      uint64_t v16 = v15 & 1;
      goto LABEL_9;
    }
    goto LABEL_5;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = v0[5];
  ((void (*)(void, void))v0[11])(v0[2], v0[3]);
  uint64_t v20 = v19;
  uint64_t v21 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
  swift_unknownObjectRelease();
  uint64_t v22 = sub_1B996A6F0();
  char v23 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v18, 1, v22) != 1;
  sub_1B90CCA68(v18, &qword_1EB9B5EB0);
  char v24 = sub_1B9252040(v23, v17, 4320, 0);
  sub_1B90CCA68(v17, &qword_1EB9B5EB0);
  if (v24) {
    uint64_t v16 = 2;
  }
  else {
    uint64_t v16 = 0;
  }
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
  return v25(v16);
}

uint64_t sub_1B9252040(char a1, uint64_t a2, uint64_t a3, int a4)
{
  int v44 = a4;
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v5 = sub_1B996AAD0();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B996A120();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B996A6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  if (a1)
  {
    uint64_t v21 = (char *)&v39 - v20;
    uint64_t v39 = v11;
    uint64_t v40 = v9;
    uint64_t v41 = v8;
    uint64_t v42 = v5;
    sub_1B90CCA04(v46, (uint64_t)v14, &qword_1EB9B5EB0);
    uint64_t v22 = v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1B90CCA68((uint64_t)v14, &qword_1EB9B5EB0);
      char v23 = 1;
    }
    else
    {
      char v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      uint64_t v25 = v21;
      v24(v21, v14, v15);
      uint64_t v26 = v7;
      _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AE318);
      uint64_t v27 = sub_1B996AAB0();
      uint64_t v28 = *(void *)(v27 - 8);
      unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1B997AB90;
      (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x1E4F27C10], v27);
      sub_1B912DF60(v30);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      uint64_t v31 = v39;
      sub_1B996A970();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
      v32(v18, v15);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v42);
      uint64_t v33 = sub_1B9969FF0();
      char v35 = v34;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
      v32(v25, v15);
      BOOL v37 = (v44 & 1) == 0 && v33 >= v45;
      char v23 = v35 | v37;
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

Swift::Void __swiftcall TTRPrivacyChecker.dismissInlineRequest(for:)(RemindersUICore::TTRPrivacyType a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  int v5 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 16))(v4, v3, v7);
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType();
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    uint64_t v13 = sub_1B996A6F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 0, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 64))(v9, ObjectType, v11);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B92525BC(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v2 = sub_1B9970930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    unint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1B99705D0();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1BA9D9380](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      __n128 v7 = v6;
      ++v5;
      id v8 = objc_msgSend(v6, sel_capabilities);

      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    while (v2 != v5);
    unint64_t v3 = v9;
  }
  sub_1B9252898(v3);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(Swift::OpaquePointer a1)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  if ((unint64_t)a1._rawValue >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v7 = sub_1B9970930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B99705D0();
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v13 = v3;
    uint64_t v9 = 0;
    do
    {
      if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1BA9D9380](v9, a1._rawValue);
      }
      else {
        id v10 = *((id *)a1._rawValue + v9 + 4);
      }
      uint64_t v11 = v10;
      ++v9;
      id v12 = objc_msgSend(v10, sel_capabilities, v13);

      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    while (v7 != v9);
    uint64_t v8 = v14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 168))(v8, v5, v4);

  swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t vars8;

  uint64_t v3 = v2;
  uint64_t v4 = v1;
  if (!((unint64_t)a1._rawValue >> 62))
  {
    id v6 = *(void *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_17:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  id v6 = sub_1B9970930();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  id v12 = v4;
  uint64_t v7 = 4;
  while (1)
  {
    if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0) {
      uint64_t v8 = (id)MEMORY[0x1BA9D9380](v7 - 4, a1._rawValue);
    }
    else {
      uint64_t v8 = *((id *)a1._rawValue + v7);
    }
    uint64_t v9 = v8;
    uint64_t v4 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    id v10 = objc_msgSend(v8, sel_supportsDeletionByTTL);

    if (v10) {
      break;
    }
    ++v7;
    if (v4 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v3 + 176);

  v11(v12, v3);
}

uint64_t sub_1B9252898(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    return swift_bridgeObjectRelease();
  }
LABEL_17:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v2 = sub_1B9970930();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v3 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x1BA9D9380](v3 - 4, a1);
    }
    else {
      id v4 = *(id *)(a1 + 8 * v3);
    }
    uint64_t v5 = v4;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    unsigned int v7 = objc_msgSend(v4, sel_supportsDeletionByTTL);

    if (v7) {
      break;
    }
    ++v3;
    if (v6 == v2) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();

  return sub_1B9252B20();
}

uint64_t sub_1B9252B20()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 80);
  swift_unknownObjectRetain();
  LOBYTE(v5) = v7(ObjectType, v5);
  uint64_t result = swift_unknownObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B996D300();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB9B0B28);
    id v10 = sub_1B996D2F0();
    os_log_type_t v11 = sub_1B996F620();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl(&dword_1B90A0000, v10, v11, "Did show reminder delete privacy warning", v12, 2u);
      MEMORY[0x1BA9DB030](v12, -1, -1);
    }

    uint64_t v13 = *(void *)(v1 + 96);
    uint64_t v14 = swift_getObjectType();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 88);
    swift_unknownObjectRetain();
    v15(1, v14, v13);
    swift_unknownObjectRelease();
    uint64_t v16 = sub_1B996F0D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    sub_1B996F080();
    swift_retain();
    uint64_t v17 = sub_1B996F070();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v19 = MEMORY[0x1E4FBCFD8];
    v18[2] = v17;
    v18[3] = v19;
    v18[4] = v1;
    sub_1B91147FC((uint64_t)v4, (uint64_t)&unk_1E9EFE3B0, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  uint64_t v6 = *(void *)(v0 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  ((void (*)())MEMORY[0x1F4188790])();
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  __n128 v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 24);
  v12(v5, v4, v10);
  uint64_t v14 = v13;
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 80))(ObjectType, v14);
  swift_unknownObjectRelease();
  if ((v14 & 1) == 0)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1B996D300();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB9B0B28);
    uint64_t v17 = sub_1B996D2F0();
    os_log_type_t v18 = sub_1B996F620();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v20 = v19;
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1B90A0000, v17, v18, "Did show reminder delete privacy warning", v19, 2u);
      uint64_t v21 = v20;
      uint64_t v8 = v31;
      MEMORY[0x1BA9DB030](v21, -1, -1);
    }

    ((void (*)(uint64_t, uint64_t))v12)(v5, v4);
    uint64_t v23 = v22;
    uint64_t v24 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 88))(1, v24, v23);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_1B996F0D0();
    uint64_t v26 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v32, 1, 1, v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
    sub_1B996F080();
    uint64_t v27 = sub_1B996F070();
    unint64_t v28 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v29 = (char *)swift_allocObject();
    uint64_t v30 = MEMORY[0x1E4FBCFD8];
    *((void *)v29 + 2) = v27;
    *((void *)v29 + 3) = v30;
    *((void *)v29 + 4) = v5;
    *((void *)v29 + 5) = v4;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v29[v28], v8, v5);
    sub_1B91147FC(v26, (uint64_t)&unk_1E9EFE348, (uint64_t)v29);
    swift_release();
  }
}

uint64_t sub_1B92530E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = sub_1B996F080();
  v6[3] = sub_1B996F070();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 64) + **(int **)(a6 + 64));
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1B91141F0;
  return v11(3, a5, a6);
}

BOOL sub_1B9253208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  __n128 v10 = (char *)&v26 - v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v8);
  uint64_t v12 = v11;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1B996A6F0();
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v10, 1, v14);
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1B996D300();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB9B0B28);
  sub_1B90CCA04((uint64_t)v10, (uint64_t)v6, &qword_1EB9B5EB0);
  uint64_t v17 = sub_1B996D2F0();
  os_log_type_t v18 = sub_1B996F620();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1B996F000();
    uint64_t v28 = sub_1B90D2A1C(v20, v21, &v29);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v22 = sub_1B9970030();
    uint64_t v28 = sub_1B90D2A1C(v22, v23, &v29);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    sub_1B90CCA68((uint64_t)v6, &qword_1EB9B5EB0);
    _os_log_impl(&dword_1B90A0000, v17, v18, "PrivacyChecker: [Notification] shouldRequestPermission: %s, lastViewedNotificationsPermissionWarmingSheetDate: %s", (uint8_t *)v19, 0x16u);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v24, -1, -1);
    MEMORY[0x1BA9DB030](v19, -1, -1);
  }
  else
  {
    sub_1B90CCA68((uint64_t)v6, &qword_1EB9B5EB0);
  }

  sub_1B90CCA68((uint64_t)v10, &qword_1EB9B5EB0);
  return v15 == 1;
}

uint64_t sub_1B925352C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 186) = a2;
  *(unsigned char *)(v5 + 185) = a1;
  uint64_t v6 = *(void *)(a3 - 8);
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 + 64);
  *(void *)(v5 + 64) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD960);
  *(void *)(v5 + 72) = swift_task_alloc();
  uint64_t v7 = sub_1B996A6F0();
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 - 8);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = sub_1B996F080();
  *(void *)(v5 + 112) = sub_1B996F070();
  uint64_t v9 = sub_1B996F010();
  *(void *)(v5 + 120) = v9;
  *(void *)(v5 + 128) = v8;
  return MEMORY[0x1F4188298](sub_1B92536B4, v9, v8);
}

uint64_t sub_1B92536B4()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  *(void *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Notification] Requesting user authorization", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }
  int v5 = *(unsigned __int8 *)(v0 + 185);

  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 144) = v6;
  *(unsigned char *)(v6 + 16) = 0;
  if (v5 == 1)
  {
    uint64_t v7 = sub_1B996D2F0();
    os_log_type_t v8 = sub_1B996F660();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1B90A0000, v7, v8, "PrivacyChecker [Notifications] Presenting warming sheet", v9, 2u);
      MEMORY[0x1BA9DB030](v9, -1, -1);
    }
    uint64_t v32 = *(void *)(v0 + 32);

    uint64_t v31 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v32 + 48) + **(int **)(v32 + 48));
    __n128 v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    *__n128 v10 = v0;
    v10[1] = sub_1B9253B2C;
    uint64_t v11 = *(void *)(v0 + 32);
    uint64_t v12 = *(void *)(v0 + 24);
    return v31(0, 1, v12, v11);
  }
  else if (*(unsigned char *)(v0 + 186) == 1)
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1B92547C4;
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 32);
    uint64_t v17 = *(void *)(v0 + 40);
    uint64_t v18 = *(void *)(v0 + 24);
    return sub_1B9254DF8(v17, v15, v18, v16);
  }
  else
  {
    uint64_t v19 = v6;
    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 48);
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v24 = *(void *)(v0 + 40);
    long long v33 = *(_OWORD *)(v0 + 24);
    swift_release();
    uint64_t v25 = sub_1B996F0D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 1, 1, v25);
    (*(void (**)(uint64_t, uint64_t, void))(v22 + 16))(v21, v24, v33);
    swift_retain();
    uint64_t v26 = sub_1B996F070();
    unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = MEMORY[0x1E4FBCFD8];
    *(void *)(v28 + 16) = v26;
    *(void *)(v28 + 24) = v29;
    *(_OWORD *)(v28 + 32) = v33;
    (*(void (**)(unint64_t, uint64_t, void))(v22 + 32))(v28 + v27, v21, v33);
    *(void *)(v28 + ((v23 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
    sub_1B9114828(v20, (uint64_t)&unk_1E9EFE398, v28);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v30(2);
  }
}

uint64_t sub_1B9253B2C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 187) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  return MEMORY[0x1F4188298](sub_1B9253C54, v4, v3);
}

uint64_t sub_1B9253C54()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  sub_1B9254CE4(v6, v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v7 = sub_1B996D2F0();
  os_log_type_t v8 = sub_1B996F660();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = *(unsigned char *)(v0 + 187);
    __n128 v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)__n128 v10 = 136315138;
    uint64_t v44 = v11;
    *(unsigned char *)(v0 + 184) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE3A0);
    uint64_t v12 = sub_1B9970030();
    *(void *)(v0 + 16) = sub_1B90D2A1C(v12, v13, &v44);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v7, v8, "PrivacyChecker: [Notification] Warming Sheet - user selected: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v11, -1, -1);
    MEMORY[0x1BA9DB030](v10, -1, -1);
  }

  if ((*(uint64_t (**)(void))(*(void *)(v0 + 32) + 32))())
  {
    *(unsigned char *)(*(void *)(v0 + 144) + 16) = 1;
    int v14 = *(unsigned __int8 *)(v0 + 187);
    if (v14 == 2)
    {
LABEL_5:
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_1B9254618;
      uint64_t v16 = *(void *)(v0 + 144);
      uint64_t v18 = *(void *)(v0 + 32);
      uint64_t v17 = *(void *)(v0 + 40);
      uint64_t v19 = *(void *)(v0 + 24);
      return sub_1B9254984(v16, v17, v19, v18);
    }
    if (v14)
    {
      char v24 = sub_1B9970BB0();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (*(unsigned char *)(v0 + 186) == 1)
    {
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_1B92547C4;
      uint64_t v26 = *(void *)(v0 + 144);
      uint64_t v27 = *(void *)(v0 + 32);
      uint64_t v28 = *(void *)(v0 + 40);
      uint64_t v29 = *(void *)(v0 + 24);
      return sub_1B9254DF8(v28, v26, v29, v27);
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 144);
      uint64_t v32 = *(void *)(v0 + 64);
      uint64_t v31 = *(void *)(v0 + 72);
      uint64_t v33 = *(void *)(v0 + 48);
      uint64_t v34 = *(void *)(v0 + 56);
      uint64_t v35 = *(void *)(v0 + 40);
      long long v43 = *(_OWORD *)(v0 + 24);
      swift_release();
      uint64_t v36 = sub_1B996F0D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v31, 1, 1, v36);
      (*(void (**)(uint64_t, uint64_t, void))(v33 + 16))(v32, v35, v43);
      swift_retain();
      uint64_t v37 = sub_1B996F070();
      unint64_t v38 = (*(unsigned __int8 *)(v33 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v39 = swift_allocObject();
      uint64_t v40 = MEMORY[0x1E4FBCFD8];
      *(void *)(v39 + 16) = v37;
      *(void *)(v39 + 24) = v40;
      *(_OWORD *)(v39 + 32) = v43;
      (*(void (**)(unint64_t, uint64_t, void))(v33 + 32))(v39 + v38, v32, v43);
      *(void *)(v39 + ((v34 + v38 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
      sub_1B9114828(v31, (uint64_t)&unk_1E9EFE398, v39);
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v41(2);
    }
  }
  else
  {
    uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 32) + 56)
                                                            + **(int **)(*(void *)(v0 + 32) + 56));
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1B92541CC;
    uint64_t v22 = *(void *)(v0 + 32);
    uint64_t v23 = *(void *)(v0 + 24);
    return v42(1, v23, v22);
  }
}

uint64_t sub_1B92541CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x1F4188298](sub_1B92542EC, v3, v2);
}

uint64_t sub_1B92542EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 187);
  if (v1 == 2)
  {
LABEL_2:
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1B9254618;
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 24);
    return sub_1B9254984(v3, v4, v6, v5);
  }
  if (v1)
  {
    char v8 = sub_1B9970BB0();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_2;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v0 + 186) == 1)
  {
    char v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *char v9 = v0;
    v9[1] = sub_1B92547C4;
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v11 = *(void *)(v0 + 32);
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 24);
    return sub_1B9254DF8(v12, v10, v13, v11);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 40);
    long long v26 = *(_OWORD *)(v0 + 24);
    swift_release();
    uint64_t v20 = sub_1B996F0D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
    (*(void (**)(uint64_t, uint64_t, void))(v17 + 16))(v16, v19, v26);
    swift_retain();
    uint64_t v21 = sub_1B996F070();
    unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBCFD8];
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v24;
    *(_OWORD *)(v23 + 32) = v26;
    (*(void (**)(unint64_t, uint64_t, void))(v17 + 32))(v23 + v22, v16, v26);
    *(void *)(v23 + ((v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
    sub_1B9114828(v15, (uint64_t)&unk_1E9EFE398, v23);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v25(2);
  }
}

uint64_t sub_1B9254618()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x1F4188298](sub_1B9254738, v3, v2);
}

uint64_t sub_1B9254738()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(2);
}

uint64_t sub_1B92547C4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 188) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  return MEMORY[0x1F4188298](sub_1B92548EC, v4, v3);
}

uint64_t sub_1B92548EC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 188);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1B9254984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  void v4[6] = a2;
  sub_1B996F080();
  v4[9] = sub_1B996F070();
  uint64_t v6 = sub_1B996F010();
  v4[10] = v6;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1B9254A20, v6, v5);
}

uint64_t sub_1B9254A20()
{
  uint64_t v1 = v0[5];
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[8] + 56) + **(int **)(v0[8] + 56));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1B9254B64;
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    return v7(1, v3, v4);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1B9254B64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return MEMORY[0x1F4188298](sub_1B9254C84, v3, v2);
}

uint64_t sub_1B9254C84()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B9254CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  __n128 v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v6);
  uint64_t v10 = v9;
  uint64_t ObjectType = swift_getObjectType();
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  uint64_t v12 = sub_1B996A6F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 40))(v8, ObjectType, v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B9254DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  sub_1B996F080();
  v4[12] = sub_1B996F070();
  uint64_t v6 = sub_1B996F010();
  v4[13] = v6;
  v4[14] = v5;
  return MEMORY[0x1F4188298](sub_1B9254E94, v6, v5);
}

uint64_t sub_1B9254E94()
{
  if (qword_1EB9B0E98 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker [Notifications] Presenting system TCC", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];

  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  v0[16] = v7;
  v0[17] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0x6FE1000000000000;
  uint64_t v8 = v7(v6, v5);
  uint64_t v10 = v9;
  v0[18] = v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v10 + 88) + **(int **)(v10 + 88));
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B9255084;
  return v14(ObjectType, v10);
}

uint64_t sub_1B9255084(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[13];
    uint64_t v6 = v4[14];
    uint64_t v7 = sub_1B9255564;
  }
  else
  {
    swift_unknownObjectRelease();
    v4[21] = a1;
    uint64_t v5 = v4[13];
    uint64_t v6 = v4[14];
    uint64_t v7 = sub_1B92551B4;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_1B92551B4()
{
  uint64_t v19 = v0;
  char v1 = sub_1B9747814(*(void *)(v0 + 168));
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v18 = v5;
    if (v1) {
      uint64_t v6 = 1702195828;
    }
    else {
      uint64_t v6 = 0x65736C6166;
    }
    if (v1) {
      unint64_t v7 = 0xE400000000000000;
    }
    else {
      unint64_t v7 = 0xE500000000000000;
    }
    *(void *)(v0 + 56) = sub_1B90D2A1C(v6, v7, &v18);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Notification] requestAuthorization grantedAccess: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v5, -1, -1);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  if (v1)
  {
    char v8 = 0;
  }
  else
  {
    (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 80), *(void *)(v0 + 88));
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 80))(ObjectType, v10);
    swift_unknownObjectRelease();
    char v8 = 1;
  }
  *(unsigned char *)(v0 + 184) = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B92553E0;
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 72);
  return sub_1B9254984(v16, v15, v13, v14);
}

uint64_t sub_1B92553E0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x1F4188298](sub_1B9255500, v3, v2);
}

uint64_t sub_1B9255500()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 184);
  return v1(v2);
}

uint64_t sub_1B9255564()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  swift_unknownObjectRelease();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1B996D2F0();
  os_log_type_t v5 = sub_1B996F640();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 160);
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_1B9970C80();
    *(void *)(v0 + 48) = sub_1B90D2A1C(v9, v10, &v18);
    sub_1B99700D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B90A0000, v4, v5, "PrivacyChecker: [Notification] requestAuthorization error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v8, -1, -1);
    MEMORY[0x1BA9DB030](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 160);
  }
  *(unsigned char *)(v0 + 184) = 2;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B92553E0;
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 72);
  return sub_1B9254984(v16, v15, v13, v14);
}

uint64_t sub_1B9255794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[2] = a1;
  v7[3] = sub_1B996F080();
  _OWORD v7[4] = sub_1B996F070();
  uint64_t v12 = (void *)swift_task_alloc();
  v7[5] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1B925586C;
  return sub_1B9254DF8(a4, a5, a6, a7);
}

uint64_t sub_1B925586C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_1B996F010();
  return MEMORY[0x1F4188298](sub_1B92559B0, v3, v2);
}

uint64_t sub_1B92559B0()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_1B9255A1C()
{
  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForLocation);
}

id sub_1B9255A40(char a1)
{
  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForLocation_, a1 & 1);
}

id (*sub_1B9255A54(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForLocation);
  return sub_1B9255AA8;
}

id sub_1B9255AA8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForLocation_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B9255AC0()
{
  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForMessaging);
}

id sub_1B9255AE4(char a1)
{
  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForMessaging_, a1 & 1);
}

id (*sub_1B9255AF8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForMessaging);
  return sub_1B9255B4C;
}

id sub_1B9255B4C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForMessaging_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B9255B64()
{
  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForCalDAVSharing);
}

id sub_1B9255B88(char a1)
{
  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForCalDAVSharing_, a1 & 1);
}

id (*sub_1B9255B9C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForCalDAVSharing);
  return sub_1B9255BF0;
}

id sub_1B9255BF0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForCalDAVSharing_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B9255C08()
{
  return objc_msgSend(v0, sel_didShowReminderDeletePrivacyWarning);
}

id sub_1B9255C2C(char a1)
{
  return objc_msgSend(v1, sel_setDidShowReminderDeletePrivacyWarning_, a1 & 1);
}

id (*sub_1B9255C40(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_didShowReminderDeletePrivacyWarning);
  return sub_1B9255C94;
}

id sub_1B9255C94(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setDidShowReminderDeletePrivacyWarning_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1B9255CAC(char a1)
{
  v1[2] = sub_1B996F080();
  v1[3] = sub_1B996F070();
  uint64_t v5 = (uint64_t (*)(char, char))((char *)&dword_1E9F00A50 + dword_1E9F00A50);
  uint64_t v3 = (void *)swift_task_alloc();
  v1[4] = v3;
  void *v3 = v1;
  v3[1] = sub_1B91141F0;
  return v5(a1, 1);
}

uint64_t sub_1B9255D80()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E9F00A58 + dword_1E9F00A58);
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *char v1 = v0;
  v1[1] = sub_1B9258540;
  return v3();
}

uint64_t sub_1B9255E24(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9EFE428 + dword_1E9EFE428);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B9117078;
  return v5(a1);
}

uint64_t sub_1B9255ED4(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9EFE408 + dword_1E9EFE408);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B9117078;
  return v5(a1);
}

uint64_t sub_1B9255F84()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E9EFE3F8 + dword_1E9EFE3F8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B9162EB8;
  return v3();
}

uint64_t sub_1B9256024(char a1)
{
  uint64_t v2 = a1 & 1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9EFE3E8 + dword_1E9EFE3E8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B9117078;
  return v5(v2);
}

uint64_t sub_1B92560D4()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E9EFE3D8 + dword_1E9EFE3D8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B9117078;
  return v3();
}

uint64_t sub_1B9256178(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9F00E78 + dword_1E9F00E78);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B9162EB8;
  return v5(a1);
}

uint64_t sub_1B9256228(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1E9EFE3C0 + dword_1E9EFE3C0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1B9258540;
  return v5(a1);
}

void sub_1B92562D8(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5EB0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v2)
  {
    uint64_t v6 = *v1;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 80);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    uint64_t v9 = sub_1B996A6F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 64))(v5, ObjectType, v7);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B92563F4(unint64_t a1)
{
  return sub_1B92525BC(a1);
}

uint64_t sub_1B9256418(unint64_t a1)
{
  return sub_1B9252898(a1);
}

uint64_t sub_1B925643C()
{
  return sub_1B9252B20();
}

uint64_t sub_1B9256460(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B925653C;
  return v6(a1);
}

uint64_t sub_1B925653C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1B9256634(char a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(void, void))
{
  if (a1)
  {
    if (a1 == 1) {
      char v4 = a4[4](a3, a4);
    }
    else {
      char v4 = a4[7](a3, a4);
    }
  }
  else
  {
    char v4 = a4[1](a3, a4);
  }
  return v4 & 1;
}

uint64_t sub_1B92566CC(char a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(void, void, void))
{
  if (!a1) {
    return a4[2](1, a3, a4);
  }
  if (a1 == 1) {
    return a4[5](1, a3, a4);
  }
  return a4[8](1, a3, a4);
}

uint64_t sub_1B925676C()
{
  v0[2] = sub_1B996F080();
  v0[3] = sub_1B996F070();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B9115050;
  return TTRIPrivacyChecker.showPrivacyAlert(type:)(3);
}

uint64_t sub_1B9256820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1B9256840, 0, 0);
}

uint64_t sub_1B9256840()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = sub_1B92580BC(*(void **)(v0 + 24), MEMORY[0x1E4F95A70]) & 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1B92568C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1B92568E4, 0, 0);
}

uint64_t sub_1B92568E4()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  *uint64_t v1 = sub_1B92580BC(*(void **)(v0 + 24), MEMORY[0x1E4F95A78]) & 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t _s15RemindersUICore14TTRPrivacyTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1B99709E0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t _s15RemindersUICore29TTRContactsAccessAlertFeatureO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1B99709E0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B9256A04(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1
                 + ((*(void *)(*(void *)(v7 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(_OWORD *)(v5 + 32) = v7;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 8) = sub_1B9117078;
  return MEMORY[0x1F4188298](sub_1B9250064, 0, 0);
}

uint64_t sub_1B9256B2C(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1
                 + ((*(void *)(*(void *)(v7 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(_OWORD *)(v5 + 32) = v7;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 8) = sub_1B9117078;
  return MEMORY[0x1F4188298](sub_1B92512D0, 0, 0);
}

uint64_t sub_1B9256C50()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1B9256D14(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1B9117078;
  return sub_1B92530E8(a1, v6, v7, v8, v4, v5);
}

unint64_t sub_1B9256E14()
{
  unint64_t result = qword_1E9EFE350;
  if (!qword_1E9EFE350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE350);
  }
  return result;
}

unint64_t sub_1B9256E6C()
{
  unint64_t result = qword_1E9EFE358;
  if (!qword_1E9EFE358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE358);
  }
  return result;
}

unint64_t sub_1B9256EC4()
{
  unint64_t result = qword_1E9EFE360;
  if (!qword_1E9EFE360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE360);
  }
  return result;
}

unint64_t sub_1B9256F1C()
{
  unint64_t result = qword_1E9EFE368;
  if (!qword_1E9EFE368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE368);
  }
  return result;
}

unint64_t sub_1B9256F74()
{
  unint64_t result = qword_1E9EFE370;
  if (!qword_1E9EFE370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9EFE370);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRInlineRequestPresentationState()
{
  return &type metadata for TTRInlineRequestPresentationState;
}

unsigned char *storeEnumTagSinglePayload for TTRPrivacyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B92570A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRPrivacyType()
{
  return &type metadata for TTRPrivacyType;
}

ValueMetadata *type metadata accessor for TTRPrivacyAlertResponse()
{
  return &type metadata for TTRPrivacyAlertResponse;
}

unsigned char *_s15RemindersUICore23TTRPrivacyAlertResponseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B92571C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRLocationAccessForRemindersInCalendarAction()
{
  return &type metadata for TTRLocationAccessForRemindersInCalendarAction;
}

ValueMetadata *type metadata accessor for TTRContactsAccessAlertFeature()
{
  return &type metadata for TTRContactsAccessAlertFeature;
}

uint64_t sub_1B925720C()
{
  return swift_deallocObject();
}

uint64_t sub_1B925721C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B92572FC(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1B9117078;
  return sub_1B9255794(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_1B925742C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B925746C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B9117078;
  uint64_t v2 = (uint64_t (__cdecl *)())((char *)&dword_1E9EFE3A8 + dword_1E9EFE3A8);
  return v2();
}

uint64_t sub_1B9257534()
{
  uint64_t v1 = sub_1B996E640();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  sub_1B996F080();
  v0[6] = sub_1B996F070();
  uint64_t v3 = sub_1B996F010();
  v0[7] = v3;
  v0[8] = v2;
  return MEMORY[0x1F4188298](sub_1B9257624, v3, v2);
}

uint64_t sub_1B9257624()
{
  if (qword_1EB9B0DE8 != -1) {
    swift_once();
  }
  if (static TTRAuthorizationSource.isNonRemindersBundle == 1)
  {
    if (qword_1EB9B0E98 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1B996D300();
    v0[9] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B28);
    uint64_t v2 = sub_1B996D2F0();
    os_log_type_t v3 = sub_1B996F620();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1B90A0000, v2, v3, "PrivacyChecker: [Location] checking Location Access for Reminders In Calendar", v4, 2u);
      MEMORY[0x1BA9DB030](v4, -1, -1);
    }

    if (qword_1E9EFA8E8 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[4];
    uint64_t v5 = (uint64_t *)v0[5];
    uint64_t v7 = v0[3];
    uint64_t v9 = static TTRAuthorizationSource.onBehalfOfReminders;
    uint64_t v8 = unk_1E9F299C0;
    sub_1B90D894C();
    *uint64_t v5 = sub_1B996F860();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E4FBCBF0], v7);
    char v10 = sub_1B996E660();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
    if (v10)
    {
      uint64_t v11 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRGeoLocationService());
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v0[10] = sub_1B96679D0(v11, v9, v8);
      swift_bridgeObjectRelease();
      uint64_t v12 = (void *)swift_task_alloc();
      v0[11] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_1B92579A4;
      return TTRGeoLocationService.locationAuthorizationStatus.getter();
    }
    __break(1u);
    goto LABEL_21;
  }
  swift_release();
  if (qword_1EB9B0E98 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v14 = sub_1B996D300();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB9B0B28);
  uint64_t v15 = sub_1B996D2F0();
  os_log_type_t v16 = sub_1B996F650();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1B90A0000, v15, v16, "PrivacyChecker: [Location] skipping checkLocationAccessForRemindersInCalendar because isNonRemindersBundle == false", v17, 2u);
    MEMORY[0x1BA9DB030](v17, -1, -1);
  }

  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(2);
}

uint64_t sub_1B92579A4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return MEMORY[0x1F4188298](sub_1B9257ACC, v4, v3);
}

uint64_t sub_1B9257ACC()
{
  uint64_t v14 = v0;
  swift_release();
  uint64_t v1 = sub_1B996D2F0();
  os_log_type_t v2 = sub_1B996F620();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void **)(v0 + 80);
    char v4 = *(unsigned char *)(v0 + 96);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = TTRGeoLocationAuthorizationStatus.description.getter(v4);
    *(void *)(v0 + 16) = sub_1B90D2A1C(v7, v8, &v13);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v1, v2, "PrivacyChecker: [Location] current location authorization status for Reminders: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v6, -1, -1);
    MEMORY[0x1BA9DB030](v5, -1, -1);
  }
  else
  {
  }
  int v9 = *(unsigned __int8 *)(v0 + 96);
  if (v9 == 2)
  {
    uint64_t v10 = 0;
  }
  else if (v9 != 3 && (v9 & 1) != 0)
  {
    uint64_t v10 = 2;
  }
  else
  {
    uint64_t v10 = 1;
  }
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v10);
}

uint64_t sub_1B9257C98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1B9117078;
  int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9EFE410 + dword_1E9EFE410);
  return v9(a1, v4, v5, v6, v7);
}

uint64_t objectdestroy_89Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B9257DB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1B9116A30;
  int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9EFE430 + dword_1E9EFE430);
  return v9(a1, v4, v5, v6, v7);
}

uint64_t sub_1B9257E84(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_1B996C970();
  id v6 = objc_msgSend(a1, sel_nonUserInteractiveStore);
  LOBYTE(a1) = a4();

  return a1 & 1;
}

uint64_t sub_1B92580BC(void *a1, uint64_t (*a2)(void))
{
  sub_1B996C970();
  id v4 = objc_msgSend(a1, sel_nonUserInteractiveStore);
  LOBYTE(a1) = a2();

  return a1 & 1;
}

uint64_t sub_1B92582F4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B925832C(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B9116A30;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9EFE458 + dword_1E9EFE458);
  return v6(a1, v4);
}

unsigned char *_s15RemindersUICore33TTRInlineRequestPresentationStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B92584B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRPrivacyCheckerNotificationAccess()
{
  return &type metadata for TTRPrivacyCheckerNotificationAccess;
}

unint64_t sub_1B92584EC()
{
  unint64_t result = qword_1E9EFE468;
  if (!qword_1E9EFE468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE468);
  }
  return result;
}

id TTRICurrentTextInputModeObserver.currentTextInputMode.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInputModeController);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_currentInputMode);

  return v2;
}

uint64_t TTRICurrentTextInputModeObserver.currentTextInputModePublisher.getter()
{
  return swift_retain();
}

void *TTRICurrentTextInputModeObserver.__allocating_init()()
{
  id v0 = (void *)swift_allocObject();
  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9A8CD0);
  swift_allocObject();
  v0[4] = sub_1B996DA40();
  sub_1B92586D4();
  v0[2] = sub_1B996DBB0();
  return v0;
}

void *TTRICurrentTextInputModeObserver.init()()
{
  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9A8CD0);
  swift_allocObject();
  v0[4] = sub_1B996DA40();
  sub_1B92586D4();
  v0[2] = sub_1B996DBB0();
  return v0;
}

unint64_t sub_1B92586D4()
{
  unint64_t result = qword_1EB9A8CC0;
  if (!qword_1EB9A8CC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB9A8CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9A8CC0);
  }
  return result;
}

uint64_t TTRICurrentTextInputModeObserver.deinit()
{
  *(void *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.stopObserving()()
{
  *(void *)(v0 + 24) = 0;
  swift_release();
}

uint64_t TTRICurrentTextInputModeObserver.__deallocating_deinit()
{
  *(void *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.startObserving()()
{
  if (!*(void *)(v0 + 24))
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(self, sel_defaultCenter);
    uint64_t v3 = *MEMORY[0x1E4FB3028];
    id v4 = objc_msgSend(self, sel_mainQueue, (unsigned __int128)0, (unsigned __int128)0);
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v6 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v3, (uint64_t)&v7, (uint64_t)v4, (uint64_t)sub_1B92589E0, v5);

    swift_release();
    sub_1B922A57C((uint64_t)&v7);
    swift_release();
    *(void *)(v1 + 24) = v6;
    swift_release();
  }
}

uint64_t sub_1B92588EC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1B9258924()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = objc_msgSend(self, sel_sharedInputModeController);
    if (v0)
    {
      uint64_t v1 = v0;
      id v2 = objc_msgSend(v0, sel_currentInputMode);
    }
    else
    {
      id v2 = 0;
    }
    sub_1B996DA30();
    swift_release();
  }
}

void sub_1B92589E0()
{
}

uint64_t type metadata accessor for TTRICurrentTextInputModeObserver()
{
  return self;
}

uint64_t sub_1B9258A0C()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFE470);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFE470);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void NSDirectionalEdgeInsets.resolved(for:)(unint64_t a1)
{
  uint64_t v2 = sub_1B996D300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 1)
  {
    uint64_t v7 = v4;
    if (qword_1E9EFA2F0 != -1) {
      swift_once();
    }
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9EFE470);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v9);
    sub_1B984DFDC((uint64_t)"unknown layout direction", 24, 2);
    __break(1u);
  }
}

void _sSo23NSDirectionalEdgeInsetsV15RemindersUICoreE12forInsetting8toBecome15layoutDirectionABSo6CGRectV_AHSo021UIUserInterfaceLayoutK0VtcfC_0(unint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  CGFloat v26 = a9;
  uint64_t v18 = sub_1B996D300();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31.origin.x = a6;
  v31.origin.y = a7;
  v31.size.double width = a8;
  v31.size.double height = a9;
  CGFloat MinY = CGRectGetMinY(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.double width = a4;
  v32.size.double height = a5;
  CGFloat v29 = CGRectGetMinY(v32);
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.double width = a4;
  v33.size.double height = a5;
  CGFloat MaxY = CGRectGetMaxY(v33);
  v34.origin.x = a6;
  v34.origin.y = a7;
  v34.size.double width = a8;
  v34.size.double height = a9;
  CGFloat v27 = CGRectGetMaxY(v34);
  v35.origin.x = a6;
  v35.origin.y = a7;
  v35.size.double width = a8;
  v35.size.double height = a9;
  double MinX = CGRectGetMinX(v35);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.double width = a4;
  v36.size.double height = a5;
  double v25 = MinX - CGRectGetMinX(v36);
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.double width = a4;
  v37.size.double height = a5;
  CGRectGetMaxX(v37);
  v38.origin.x = a6;
  v38.origin.y = a7;
  v38.size.double width = a8;
  v38.size.double height = v26;
  CGRectGetMaxX(v38);
  if (a1 > 1)
  {
    if (qword_1E9EFA2F0 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v18, (uint64_t)qword_1E9EFE470);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v23, v18);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1B90C4268(MEMORY[0x1E4FBC860]);
    sub_1B90C4268(v24);
    sub_1B984DFDC((uint64_t)"unknown layout direction", 24, 2);
    __break(1u);
  }
}

id sub_1B9258EC8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v40 = a1;
  uint64_t v42 = sub_1B996BC40();
  uint64_t v18 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v43 = v19;
  if (!(v19 >> 62))
  {
    uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    int v41 = a2;
    if (v22) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    return sub_1B925A804(v40, v41, a3, a4, a5, a6, v26, 0, a8, a9, a10);
  }
  uint64_t v22 = sub_1B9970930();
  int v41 = a2;
  if (!v22) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v39 = a3;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  id result = (id)sub_1B90E4184(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    CGRect v34 = a8;
    uint64_t v35 = a4;
    uint64_t v36 = a5;
    uint64_t v37 = a6;
    uint64_t v38 = v11;
    uint64_t v24 = 0;
    unint64_t v25 = v43;
    uint64_t v26 = v44;
    unint64_t v27 = v43 & 0xC000000000000001;
    do
    {
      if (v27) {
        id v28 = (id)MEMORY[0x1BA9D9380](v24, v25);
      }
      else {
        id v28 = *(id *)(v25 + 8 * v24 + 32);
      }
      CGFloat v29 = v28;
      id v30 = objc_msgSend(v28, sel_remObjectID);
      sub_1B996F580();

      objc_msgSend(v29, sel_isCompleted);
      sub_1B996BC10();

      uint64_t v44 = v26;
      unint64_t v32 = *(void *)(v26 + 16);
      unint64_t v31 = *(void *)(v26 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1B90E4184(v31 > 1, v32 + 1, 1);
        uint64_t v26 = v44;
      }
      ++v24;
      *(void *)(v26 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v32, v21, v42);
      unint64_t v25 = v43;
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    a6 = v37;
    a4 = v35;
    a5 = v36;
    a8 = v34;
    a3 = v39;
    return sub_1B925A804(v40, v41, a3, a4, a5, a6, v26, 0, a8, a9, a10);
  }
  __break(1u);
  return result;
}

id sub_1B9259184(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v12 = v11;
  uint64_t v40 = a3;
  int v39 = a2;
  uint64_t v38 = a1;
  uint64_t v42 = sub_1B996BC40();
  uint64_t v18 = *(void *)(v42 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v42);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v34 - v22;
  if (!(a7 >> 62))
  {
    uint64_t v24 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v41 = a4;
    if (v24) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    return sub_1B925A804(v38, v39, v40, v41, a5, a6, v26, a8, a9, a10, a11);
  }
  uint64_t v24 = sub_1B9970930();
  uint64_t v41 = a4;
  if (!v24) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v37 = a5;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  id result = (id)sub_1B90E4184(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = a6;
    uint64_t v35 = a8;
    uint64_t v36 = v12;
    uint64_t v26 = v43;
    if ((a7 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        MEMORY[0x1BA9D9380](i, a7);
        sub_1B996F580();
        sub_1B996BC10();
        swift_unknownObjectRelease();
        uint64_t v43 = v26;
        unint64_t v29 = *(void *)(v26 + 16);
        unint64_t v28 = *(void *)(v26 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1B90E4184(v28 > 1, v29 + 1, 1);
          uint64_t v26 = v43;
        }
        *(void *)(v26 + 16) = v29 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v29, v23, v42);
      }
    }
    else
    {
      for (uint64_t j = 0; j != v24; ++j)
      {
        id v31 = *(id *)(a7 + 8 * j + 32);
        sub_1B996F580();
        sub_1B996BC10();

        uint64_t v43 = v26;
        unint64_t v33 = *(void *)(v26 + 16);
        unint64_t v32 = *(void *)(v26 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1B90E4184(v32 > 1, v33 + 1, 1);
          uint64_t v26 = v43;
        }
        *(void *)(v26 + 16) = v33 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v33, v21, v42);
      }
    }
    swift_bridgeObjectRelease();
    a8 = v35;
    a6 = v34;
    a5 = v37;
    return sub_1B925A804(v38, v39, v40, v41, a5, a6, v26, a8, a9, a10, a11);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B92594B0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v73 = a1;
  uint64_t v74 = a5;
  v68[2] = a3;
  v68[3] = a4;
  int v72 = a2;
  uint64_t v9 = sub_1B996A6F0();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC2A0);
  uint64_t v11 = MEMORY[0x1F4188790](v82);
  uint64_t v80 = (uint64_t)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v81 = (void **)((char *)v68 - v14);
  MEMORY[0x1F4188790](v13);
  id v83 = (void **)((char *)v68 - v16);
  uint64_t v17 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v85 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v18 = a7[2];
  if (v18)
  {
    uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v21 = (uint64_t)a7 + v20;
    uint64_t v22 = *(void *)(v15 + 72);
    uint64_t v79 = v20;
    uint64_t v77 = v22 + v20;
    uint64_t v76 = v19 | 7;
    v68[0] = a7;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    long long v75 = xmmword_1B997AB90;
    uint64_t v78 = v22;
    while (1)
    {
      uint64_t v24 = a6;
      unint64_t v25 = v83;
      sub_1B90CCA04(v21, (uint64_t)v83, &qword_1E9EFC2A0);
      uint64_t v26 = *(int *)(v82 + 48);
      unint64_t v27 = (char *)v81 + v26;
      unint64_t v28 = (char *)v25 + v26;
      unint64_t v29 = *v25;
      char *v81 = *v25;
      uint64_t v30 = sub_1B996BC40();
      uint64_t v31 = *(void *)(v30 - 8);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v27, v28, v30);
      unint64_t v32 = *(void (**)(char *, uint64_t))(v31 + 8);
      id v33 = v29;
      v32(v27, v30);
      unint64_t v35 = sub_1B90CFC34((uint64_t)v33);
      uint64_t v36 = v17[2];
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37)) {
        break;
      }
      char v39 = v34;
      if (v17[3] < v38)
      {
        sub_1B916BC20(v38, 1);
        uint64_t v17 = v85;
        unint64_t v40 = sub_1B90CFC34((uint64_t)v33);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_25;
        }
        unint64_t v35 = v40;
      }
      if (v39)
      {

        uint64_t v42 = v17[7];
        sub_1B90BFE54((uint64_t)v83, v80, &qword_1E9EFC2A0);
        unint64_t v43 = *(void *)(v42 + 8 * v35);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v42 + 8 * v35) = v43;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v43 = sub_1B9188A78(0, *(void *)(v43 + 16) + 1, 1, v43);
          *(void *)(v42 + 8 * v35) = v43;
        }
        unint64_t v46 = *(void *)(v43 + 16);
        unint64_t v45 = *(void *)(v43 + 24);
        if (v46 >= v45 >> 1)
        {
          unint64_t v43 = sub_1B9188A78(v45 > 1, v46 + 1, 1, v43);
          *(void *)(v42 + 8 * v35) = v43;
        }
        a6 = v24;
        *(void *)(v43 + 16) = v46 + 1;
        uint64_t v23 = v78;
        sub_1B90BFE54(v80, v43 + v79 + v46 * v78, &qword_1E9EFC2A0);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC298);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = v75;
        sub_1B90BFE54((uint64_t)v83, v47 + v79, &qword_1E9EFC2A0);
        v17[(v35 >> 6) + 8] |= 1 << v35;
        uint64_t v48 = 8 * v35;
        *(void *)(v17[6] + v48) = v33;
        *(void *)(v17[7] + v48) = v47;
        uint64_t v49 = v17[2];
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (v50) {
          goto LABEL_24;
        }
        id v17[2] = v51;
        a6 = v24;
        uint64_t v23 = v78;
      }
      v21 += v23;
      if (!--v18)
      {
        a7 = (void *)v68[0];
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
    uint64_t result = sub_1B9970C70();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v52 = sub_1B925C988((uint64_t)v17);
    swift_release();
    uint64_t v85 = a7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE4A0);
    sub_1B996B250();
    sub_1B925DC74();
    sub_1B9101480();
    uint64_t v53 = sub_1B996ED10();
    swift_bridgeObjectRelease();
    uint64_t v85 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v84 = sub_1B90C4A0C(MEMORY[0x1E4FBC860]);
    uint64_t v54 = v74;
    uint64_t v55 = *(void *)(v74 + 16);
    if (v55)
    {
      uint64_t v56 = *(void *)(sub_1B996BC40() - 8);
      uint64_t v57 = v54 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
      uint64_t v58 = *(void *)(v56 + 72);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v59 = v73;
      do
      {
        sub_1B925BB80(v57, a6, v53, &v85, (uint64_t)v52, (uint64_t *)&v84);
        v57 += v58;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v59 = v73;
    }
    swift_bridgeObjectRelease();
    swift_release();
    id v60 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v61 = (void *)sub_1B996E9B0();
    swift_bridgeObjectRelease();
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v62 = (void *)sub_1B996EE40();
    swift_bridgeObjectRelease();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B49F0);
    sub_1B90BFDA4();
    uint64_t v63 = (void *)sub_1B996E6D0();
    swift_bridgeObjectRelease();
    id v64 = v69;
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    id v65 = (void *)sub_1B996A670();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v71);
    id v66 = objc_msgSend(v60, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v59, (__int16)v72, v61, v62, v63, 0, v65);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v66;
  }
  return result;
}

uint64_t sub_1B9259BE8(void *a1, int a2, uint64_t a3, uint64_t a4, void (**a5)(char *, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v93 = a6;
  uint64_t v104 = a5;
  uint64_t v95 = a4;
  uint64_t v94 = a3;
  uint64_t v10 = sub_1B996A6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE490);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v103 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1B996BC40();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unsigned int v119 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unsigned int v102 = (char *)&v92 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v92 - v22;
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC290);
  uint64_t v24 = *(void *)(v113 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v113);
  BOOL v111 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v112 = (uint64_t)&v92 - v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE498);
  uint64_t v28 = MEMORY[0x1F4188790](a7);
  uint64_t v109 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v108 = (uint64_t)&v92 - v31;
  uint64_t v32 = MEMORY[0x1E4FBC870];
  uint64_t v122 = (char *)MEMORY[0x1E4FBC870];
  unint64_t v33 = *(void *)(v30 + 16);
  uint64_t v101 = v30;
  uint64_t v110 = v17;
  uint64_t v105 = v24;
  unint64_t v114 = v33;
  uint64_t v98 = a1;
  int v97 = a2;
  uint64_t v96 = v10;
  uint64_t v100 = v11;
  char v99 = v13;
  if (v33)
  {
    uint64_t v107 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                    + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)));
    uint64_t v34 = v17;
    unint64_t v35 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v36 = (void (**)(char *, uint64_t))(v34 + 8);
    unint64_t v106 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v24 + 72);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v37 = 0;
    uint64_t v38 = v112;
    uint64_t v39 = v113;
    do
    {
      unint64_t v115 = v37;
      sub_1B90CCA04((uint64_t)v107 + (void)v106 * v37, v38, &qword_1E9EFC290);
      char v41 = (char *)*(int *)(v39 + 48);
      uint64_t v42 = (void (**)(char *, char *, uint64_t))*(int *)(v39 + 64);
      unint64_t v43 = *v35;
      uint64_t v44 = v111;
      (*v35)(v111, v38, v16);
      uint64_t v117 = v42;
      uint64_t v118 = v41;
      *(void *)&v41[(void)v44] = *(void *)&v41[v38];
      *(void (**)(char *, char *, uint64_t))((char *)v42 + (void)v44) = *(void (**)(char *, char *, uint64_t))((char *)v42 + v38);
      int v116 = (void (**)(void, uint64_t))sub_1B996BC20();
      uint64_t v45 = v39;
      unint64_t v46 = *v36;
      (*v36)(v44, v16);
      sub_1B91A5748(&v121, v116);

      uint64_t v47 = *(int *)(v45 + 48);
      uint64_t v48 = *(int *)(v45 + 64);
      v43(v44, v38, v16);
      *(void *)&v44[v47] = *(void *)&v118[v38];
      uint64_t v49 = *(char **)((char *)v117 + v38);
      *(void *)&v44[v48] = v49;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v46(v44, v16);
      uint64_t v50 = *((void *)v49 + 2);
      if (v50)
      {
        unint64_t v51 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        uint64_t v118 = v49;
        uint64_t v52 = &v49[v51];
        uint64_t v53 = *(void *)(v110 + 72);
        do
        {
          v43(v23, (uint64_t)v52, v16);
          uint64_t v54 = (void *)sub_1B996BC20();
          sub_1B91A5748(&v121, v54);

          v46(v23, v16);
          v52 += v53;
          --v50;
        }
        while (v50);
      }
      swift_bridgeObjectRelease();
      uint64_t v39 = v113;
      unint64_t v40 = v114;
      uint64_t v38 = v112;
      unint64_t v37 = v115 + 1;
      sub_1B90CCA68(v112, &qword_1E9EFC290);
    }
    while (v37 != v40);
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v122;
    uint64_t v17 = v110;
    uint64_t v55 = v102;
    uint64_t v24 = v105;
  }
  else
  {
    uint64_t v55 = v102;
    uint64_t v39 = v113;
  }
  uint64_t v56 = (uint64_t)v109;
  unint64_t v57 = v114;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v118 = (char *)sub_1B925D1C8((uint64_t)v104, v32);
  uint64_t v92 = 0;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  unint64_t v59 = 0;
  uint64_t v122 = v118;
  unint64_t v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v107 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v104 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  int v116 = (void (**)(void, uint64_t))(v17 + 8);
  uint64_t v117 = (void (**)(char *, char *, uint64_t))(v17 + 16);
  if (v57) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v60 = 1;
  for (unint64_t i = v57; ; unint64_t i = v59 + 1)
  {
    (*v107)(v56, v60, 1, v39);
    uint64_t v62 = v108;
    sub_1B90BFE54(v56, v108, &qword_1E9EFE498);
    if ((*v106)(v62, 1, v39) == 1)
    {
      swift_bridgeObjectRelease();
      id v121 = (id)MEMORY[0x1E4FBC860];
      unint64_t v120 = sub_1B90C4A0C(MEMORY[0x1E4FBC860]);
      uint64_t v78 = *((void *)v122 + 2);
      if (v78)
      {
        uint64_t v79 = (uint64_t)&v122[(*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        uint64_t v80 = *(void *)(v17 + 72);
        uint64_t v81 = v93;
        do
        {
          sub_1B925C39C(v79, v81, &v121, &v120);
          v79 += v80;
          --v78;
        }
        while (v78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v82 = v98;
      __int16 v83 = v97;
      uint64_t v84 = v96;
      id v85 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      int v86 = (void *)sub_1B996E9B0();
      swift_bridgeObjectRelease();
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      char v87 = (void *)sub_1B996EE40();
      swift_bridgeObjectRelease();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B49F0);
      sub_1B90BFDA4();
      long long v88 = (void *)sub_1B996E6D0();
      swift_bridgeObjectRelease();
      os_log_type_t v89 = v99;
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      uint64_t v90 = (void *)sub_1B996A670();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v89, v84);
      id v91 = objc_msgSend(v85, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v82, v83, v86, v87, v88, 0, v90);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v91;
    }
    unint64_t v115 = i;
    uint64_t v118 = *(char **)(v62 + *(int *)(v39 + 48));
    uint64_t v63 = *(char **)(v62 + *(int *)(v39 + 64));
    (*v104)(v55, v62, v16);
    uint64_t v64 = (uint64_t)v122;
    uint64_t v65 = *((void *)v122 + 2);
    if (v65)
    {
      BOOL v111 = v63;
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
      uint64_t v66 = v17;
      unint64_t v67 = v64 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v68 = *(void *)(v66 + 72);
      uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
      uint64_t v112 = v64;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      uint64_t v70 = 0;
      while (1)
      {
        uint64_t v71 = v119;
        v69(v119, v67, v16);
        int v72 = (void *)sub_1B996BC20();
        char v73 = sub_1B996FC90();

        (*v116)(v71, v16);
        if (v73) {
          break;
        }
        ++v70;
        v67 += v68;
        if (v65 == v70)
        {
          swift_bridgeObjectRelease();
          uint64_t v64 = (uint64_t)v122;
          uint64_t v74 = *((void *)v122 + 2);
          goto LABEL_24;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v74 = v70 + 1;
      if (__OFADD__(v70, 1)) {
        goto LABEL_39;
      }
      uint64_t v64 = (uint64_t)v122;
LABEL_24:
      uint64_t v17 = v110;
      uint64_t v55 = v102;
      uint64_t v39 = v113;
    }
    else
    {
      uint64_t v74 = 0;
    }
    sub_1B996BC20();
    sub_1B996BBE0();
    uint64_t result = sub_1B996BC10();
    if (*(void *)(v64 + 16) < v74) {
      break;
    }
    if (v74 < 0) {
      goto LABEL_36;
    }
    uint64_t v75 = (uint64_t)v103;
    uint64_t v76 = v119;
    (*v117)(v103, v119, v16);
    sub_1B9947B44(v74, v74, v75);

    uint64_t v77 = (uint64_t (*)(char *, uint64_t))*v116;
    (*v116)(v76, v16);
    uint64_t result = v77(v55, v16);
    uint64_t v24 = v105;
    uint64_t v56 = (uint64_t)v109;
    unint64_t v57 = v114;
    unint64_t v59 = v115;
    if (v115 == v114) {
      goto LABEL_11;
    }
LABEL_12:
    if ((v59 & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    if (v59 >= *(void *)(v101 + 16)) {
      goto LABEL_38;
    }
    sub_1B90CCA04(v101+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v59, v56, &qword_1E9EFC290);
    uint64_t v60 = 0;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

unint64_t REMManualOrdering.ChangeReason.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874695765766F6DLL;
      break;
    case 2:
      unint64_t result = 0x694C6F5465766F6DLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0x754F746E65646E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B925A784(unsigned __int8 *a1, char *a2)
{
  return sub_1B9248284(*a1, *a2);
}

uint64_t sub_1B925A790()
{
  return sub_1B962486C();
}

uint64_t sub_1B925A798()
{
  return sub_1B98595DC();
}

uint64_t sub_1B925A7A0()
{
  return sub_1B985A230();
}

uint64_t sub_1B925A7A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo17REMManualOrderingC15RemindersUICoreE12ChangeReasonO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1B925A7D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = REMManualOrdering.ChangeReason.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_1B925A804(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v57 = a4;
  uint64_t v55 = a3;
  int v61 = a2;
  uint64_t v62 = a1;
  uint64_t v15 = a10;
  uint64_t v16 = sub_1B996A6F0();
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v60 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v58 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1B996BC40();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a7 + 16);
  uint64_t v64 = a5;
  uint64_t v65 = a6;
  uint64_t v63 = a8;
  uint64_t v54 = v19;
  uint64_t v56 = a7;
  if (v22)
  {
    uint64_t v53 = a10;
    unint64_t v69 = MEMORY[0x1E4FBC860];
    sub_1B99705D0();
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    uint64_t v23 = v19 + 16;
    uint64_t v66 = v24;
    unint64_t v25 = a7 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
    uint64_t v26 = *(void *)(v23 + 56);
    do
    {
      v66(v21, v25, v18);
      sub_1B996BC20();
      (*(void (**)(char *, uint64_t))(v23 - 8))(v21, v18);
      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
      v25 += v26;
      --v22;
    }
    while (v22);
    unint64_t v27 = v69;
    uint64_t v15 = v53;
    a5 = v64;
    a6 = v65;
  }
  else
  {
    unint64_t v27 = MEMORY[0x1E4FBC860];
  }
  uint64_t v28 = a11;
  uint64_t v29 = a9;
  if (v27 >> 62)
  {
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v30 = sub_1B99708C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B9970BC0();
    sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
    unint64_t v30 = v27;
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = (void (*)(char *, unint64_t, uint64_t))sub_1B90F6A44(v30);
  swift_bridgeObjectRelease();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  unint64_t v31 = sub_1B925D5D8(v56, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v69 = MEMORY[0x1E4FBC860];
  unint64_t v68 = sub_1B90C4A0C(MEMORY[0x1E4FBC860]);
  char v67 = 0;
  if (v15 < 0)
  {
    sub_1B910009C(a9, v15);
    id v39 = a11;
    sub_1B9100394(a9, v15);

    uint64_t v33 = *(void *)(a5 + 16);
    if (!v33) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  if (v15 == 2 && !a9)
  {
    sub_1B925DC28(0, v15, a11);
    unint64_t v32 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B9120800(v32);
    char v67 = 1;
  }
  uint64_t v33 = *(void *)(a5 + 16);
  if (v33)
  {
LABEL_13:
    uint64_t v34 = a5 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    uint64_t v35 = v15;
    uint64_t v36 = *(void *)(v54 + 72);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v37 = v65;
    uint64_t v38 = (uint64_t)v66;
    do
    {
      sub_1B925AE10(v34, &v67, a9, v35, a11, &v69, v31, v37, v38, (uint64_t *)&v68);
      v34 += v36;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    uint64_t v15 = v35;
    uint64_t v28 = a11;
    uint64_t v29 = a9;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 < 0)
  {
    sub_1B910009C(v29, v15);
    id v41 = v28;
    sub_1B9100394(v29, v15);
    swift_bridgeObjectRelease();

    unint64_t v40 = v28;
  }
  else
  {
    unint64_t v40 = v28;
    if (v15 == 2 && v29 == (void *)1)
    {
      sub_1B910009C((id)1, 2u);
      sub_1B9120800(v31);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v42 = v15;
  id v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v44 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v45 = (void *)sub_1B996EE40();
  swift_bridgeObjectRelease();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B49F0);
  sub_1B90BFDA4();
  unint64_t v46 = (void *)sub_1B996E6D0();
  swift_bridgeObjectRelease();
  uint64_t v47 = v58;
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  uint64_t v48 = (void *)sub_1B996A670();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v60);
  uint64_t v49 = v62;
  uint64_t v50 = v63;
  id v51 = objc_msgSend(v43, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v62, (__int16)v61, v44, v45, v46, v63, v48);
  sub_1B925DBDC(v29, v42, v40);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1B925AE10(uint64_t a1, unsigned char *a2, void *a3, uint64_t a4, void *a5, void *a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v107 = a8;
  unint64_t v115 = a7;
  uint64_t v122 = a6;
  uint64_t v110 = a1;
  uint64_t v127 = a9;
  uint64_t v14 = sub_1B996BC40();
  uint64_t v15 = *(char **)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v99[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = &v99[-v20];
  char v22 = *a2;
  uint64_t v116 = v19;
  uint64_t v124 = v15;
  if ((v22 & 1) == 0)
  {
    if (a4 < 0)
    {
      sub_1B910009C(a3, a4);
      id v26 = a5;
      sub_1B9100394(a3, a4);
    }
    else if (!(_BYTE)a4)
    {
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
      sub_1B910009C(a3, 0);
      uint64_t v23 = (void *)sub_1B996BC20();
      char v24 = sub_1B996FC90();

      if (v24)
      {
        unint64_t v25 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B9120800(v25);
        sub_1B925DBDC(a3, a4, a5);
        *a2 = 1;
      }
      else
      {
        sub_1B925DBDC(a3, a4, a5);
      }
      uint64_t v14 = v116;
      uint64_t v15 = v124;
    }
  }
  uint64_t v123 = a5;
  uint64_t v27 = v110;
  char v28 = sub_1B996BBE0();
  int v125 = (void (*)(unsigned char *, uint64_t, uint64_t))*((void *)v15 + 2);
  uint64_t v126 = v15 + 16;
  v125(v21, v27, v14);
  if (v28)
  {
    uint64_t v29 = (void *)sub_1B996BC20();
    char v30 = sub_1B913F66C(v29, v107);

    uint64_t v105 = (void (*)(unsigned char *, uint64_t))*((void *)v15 + 1);
    v105(v21, v14);
    if ((v30 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v105 = (void (*)(unsigned char *, uint64_t))*((void *)v15 + 1);
    v105(v21, v14);
  }
  unint64_t v31 = (void *)sub_1B996BC20();
  char v32 = sub_1B913F66C(v31, v127);

  if ((v32 & 1) == 0)
  {
    sub_1B996BC20();
    uint64_t v33 = v122;
    MEMORY[0x1BA9D7C50]();
    if (*(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B996EEB0();
    }
    sub_1B996EF30();
    sub_1B996EE70();
  }
LABEL_17:
  char v34 = *a2;
  unint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v112 = a2;
  if (v34)
  {
    uint64_t v36 = v124;
    if (a4 < 0)
    {
      uint64_t v37 = v123;
      goto LABEL_25;
    }
LABEL_33:
    a3 = 0;
    unint64_t v129 = v35;
    a4 = 255;
    int v45 = 1;
    goto LABEL_34;
  }
  uint64_t v36 = v124;
  if ((a4 & 0x8000000000000000) == 0)
  {
    if (a4 == 1)
    {
      sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
      sub_1B910009C(a3, 1u);
      uint64_t v38 = (void *)sub_1B996BC20();
      char v39 = sub_1B996FC90();

      if (v39)
      {
        unint64_t v40 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B9120800(v40);
        sub_1B925DBDC(a3, a4, v123);
        id v41 = v112;
        *uint64_t v112 = 1;
        a2 = v41;
      }
      else
      {
        sub_1B925DBDC(a3, a4, v123);
        a2 = v112;
      }
      goto LABEL_32;
    }
    goto LABEL_33;
  }
  sub_1B910009C(a3, a4);
  uint64_t v37 = v123;
  sub_1B9100394(a3, a4);

LABEL_25:
  sub_1B910009C(a3, a4);
  id v42 = v37;
  id v43 = (void *)sub_1B996BC20();
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
  char v44 = sub_1B996FC90();

  if ((v44 & 1) == 0)
  {
    sub_1B9100394(a3, a4);
LABEL_32:
    uint64_t v36 = v124;
    goto LABEL_33;
  }
  unint64_t v129 = v35;
  uint64_t v36 = v124;
  if ((_BYTE)a4 == 0xFF)
  {
    int v45 = 1;
    a4 = 255;
  }
  else
  {
    int v45 = 0;
    if (a4 == 2 && !a3)
    {
      unint64_t v46 = v115;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      a4 = 2;
      sub_1B910172C(0, 2u);
      unint64_t v47 = v46;
      a2 = v112;
      sub_1B9120800(v47);
      int v45 = 0;
    }
  }
LABEL_34:
  uint64_t v48 = sub_1B996BC30();
  if (v48)
  {
    int v100 = v45;
    uint64_t v101 = v48;
    uint64_t v123 = *(void **)(v48 + 16);
    if (v123)
    {
      uint64_t v49 = 0;
      uint64_t v122 = (void *)(v101 + ((v36[80] + 32) & ~(unint64_t)v36[80]));
      uint64_t v50 = *((void *)v36 + 9);
      unint64_t v120 = v36 + 8;
      uint64_t v121 = v50;
      unint64_t v113 = v107 & 0xC000000000000001;
      uint64_t v51 = v107 & 0xFFFFFFFFFFFFFF8;
      if (v107 < 0) {
        uint64_t v51 = v107;
      }
      uint64_t v106 = v51;
      uint64_t v114 = v107 + 56;
      uint64_t v52 = v127 & 0xFFFFFFFFFFFFFF8;
      if (v127 < 0) {
        uint64_t v52 = v127;
      }
      uint64_t v111 = v52;
      unint64_t v117 = v127 & 0xC000000000000001;
      uint64_t v118 = v127 + 56;
      uint64_t v104 = (void (*)(void, void))v105;
      uint64_t v103 = (void (*)(void, void))v105;
      unsigned int v102 = (void (*)(void, void))v105;
      uint64_t v124 = (char *)v105;
      uint64_t v108 = a3;
      uint64_t v109 = a4;
      unsigned int v119 = v18;
      do
      {
        uint64_t v53 = (char *)v122 + v121 * (void)v49;
        if (!(_BYTE)a4 && !*a2)
        {
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
          sub_1B910009C(a3, 0);
          uint64_t v54 = (void *)sub_1B996BC20();
          char v55 = sub_1B996FC90();

          if (v55)
          {
            unint64_t v56 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B9120800(v56);
            sub_1B9101740(a3, 0);
            *a2 = 1;
          }
          else
          {
            sub_1B9101740(a3, 0);
          }
          uint64_t v18 = v119;
        }
        char v57 = sub_1B996BBE0();
        v125(v18, (uint64_t)v53, v14);
        if (v57)
        {
          uint64_t v58 = (void *)sub_1B996BC20();
          uint64_t v59 = v58;
          if (v113)
          {
            char v60 = sub_1B99703A0();

            ((void (*)(unsigned char *, uint64_t))v124)(v18, v14);
            if ((v60 & 1) == 0) {
              goto LABEL_84;
            }
            goto LABEL_69;
          }
          uint64_t v61 = v107;
          if (!*(void *)(v107 + 16))
          {

            uint64_t v18 = v119;
            uint64_t v74 = (void (*)(void, void))v105;
            v105(v119, v14);
            uint64_t v104 = v74;
            uint64_t v103 = v74;
            unsigned int v102 = v74;
            uint64_t v124 = (char *)v74;
            goto LABEL_84;
          }
          uint64_t v62 = sub_1B996FC80();
          uint64_t v63 = -1 << *(unsigned char *)(v61 + 32);
          unint64_t v64 = v62 & ~v63;
          if (((*(void *)(v114 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0)
          {

            uint64_t v18 = v119;
            char v73 = (void (*)(void, void))v105;
            v105(v119, v14);
            uint64_t v104 = v73;
            goto LABEL_64;
          }
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
          id v65 = *(id *)(*(void *)(v61 + 48) + 8 * v64);
          char v66 = sub_1B996FC90();

          a4 = (uint64_t)v105;
          char v67 = (void (*)(void, void))v105;
          if ((v66 & 1) == 0)
          {
            uint64_t v68 = ~v63;
            unint64_t v69 = (v64 + 1) & v68;
            if (((*(void *)(v114 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            {

              uint64_t v18 = v119;
              uint64_t v14 = v116;
              char v73 = v104;
              v104(v119, v116);
LABEL_64:
              uint64_t v103 = v73;
              unsigned int v102 = v73;
LABEL_65:
              uint64_t v124 = (char *)v73;
              a3 = v108;
              LOBYTE(a4) = v109;
              a2 = v112;
              goto LABEL_84;
            }
            uint64_t v70 = v107;
            while (1)
            {
              id v71 = *(id *)(*(void *)(v70 + 48) + 8 * v69);
              char v72 = sub_1B996FC90();

              if (v72) {
                break;
              }
              unint64_t v69 = (v69 + 1) & v68;
              if (((*(void *)(v114 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
              {

                uint64_t v18 = v119;
                uint64_t v14 = v116;
                char v73 = v102;
                v102(v119, v116);
                goto LABEL_65;
              }
            }
            char v67 = v103;
            a4 = (uint64_t)v104;
          }

          uint64_t v104 = (void (*)(void, void))a4;
          uint64_t v103 = v67;
          uint64_t v124 = (char *)v67;
          unsigned int v102 = v67;
          a3 = v108;
          LOBYTE(a4) = v109;
          a2 = v112;
          uint64_t v14 = v116;
          uint64_t v18 = v119;
        }
        ((void (*)(unsigned char *, uint64_t))v124)(v18, v14);
LABEL_69:
        uint64_t v75 = (void *)sub_1B996BC20();
        if (v117)
        {
          char v76 = sub_1B99703A0();

          if ((v76 & 1) == 0) {
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(void *)(v127 + 16)) {
            goto LABEL_80;
          }
          uint64_t v77 = v127;
          uint64_t v78 = sub_1B996FC80();
          uint64_t v79 = -1 << *(unsigned char *)(v77 + 32);
          unint64_t v80 = v78 & ~v79;
          if (((*(void *)(v118 + ((v80 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v80) & 1) == 0) {
            goto LABEL_80;
          }
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
          id v81 = *(id *)(*(void *)(v127 + 48) + 8 * v80);
          char v82 = sub_1B996FC90();

          if ((v82 & 1) == 0)
          {
            uint64_t v83 = ~v79;
            for (unint64_t i = v80 + 1; ; unint64_t i = v85 + 1)
            {
              uint64_t v85 = i & v83;
              if (((*(void *)(v118 + (((i & v83) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v83)) & 1) == 0) {
                break;
              }
              id v86 = *(id *)(*(void *)(v127 + 48) + 8 * v85);
              char v87 = sub_1B996FC90();

              if (v87) {
                goto LABEL_75;
              }
            }
LABEL_80:

            a3 = v108;
            LOBYTE(a4) = v109;
            a2 = v112;
            uint64_t v18 = v119;
LABEL_81:
            sub_1B996BC20();
            MEMORY[0x1BA9D7C50]();
            if (*(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B996EEB0();
            }
            sub_1B996EF30();
            sub_1B996EE70();
            uint64_t v14 = v116;
            goto LABEL_84;
          }
LABEL_75:

          a3 = v108;
          LOBYTE(a4) = v109;
          a2 = v112;
          uint64_t v14 = v116;
          uint64_t v18 = v119;
        }
LABEL_84:
        if (a4 == 1 && !*a2)
        {
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
          sub_1B910009C(a3, 1u);
          long long v88 = (void *)sub_1B996BC20();
          char v89 = sub_1B996FC90();

          if (v89)
          {
            unint64_t v90 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B9120800(v90);
            sub_1B9101740(a3, 1u);
            *a2 = 1;
          }
          else
          {
            sub_1B9101740(a3, 1u);
          }
        }
        uint64_t v49 = (char *)v49 + 1;
      }
      while (v49 != v123);
    }
    swift_bridgeObjectRelease();
    LOBYTE(v45) = v100;
  }
  if ((v45 & 1) == 0 && a4 == 2 && a3 == (void *)1)
  {
    unint64_t v91 = v115;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B910172C((id)1, 2u);
    sub_1B9120800(v91);
  }
  uint64_t v92 = v129;
  if (v129 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v97 = sub_1B9970930();
    swift_bridgeObjectRelease();
    if (v97) {
      goto LABEL_95;
    }
LABEL_98:
    uint64_t v96 = a3;
    goto LABEL_99;
  }
  if (!*(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_98;
  }
LABEL_95:
  uint64_t v93 = a3;
  uint64_t v94 = (void *)sub_1B996BC20();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v128 = *a10;
  *a10 = 0x8000000000000000;
  sub_1B90D4E48(v92, v94, isUniquelyReferenced_nonNull_native);
  *a10 = v128;

  swift_bridgeObjectRelease();
  uint64_t v96 = v93;
LABEL_99:
  sub_1B9101740(v96, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B925BA60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC2A0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(int *)(v5 + 56);
  uint64_t v9 = (char *)v7 + v8;
  uint64_t v10 = (char *)a1 + v8;
  *uint64_t v7 = *a1;
  uint64_t v11 = sub_1B996BC40();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  *a2 = sub_1B996BC20();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v11);
}

uint64_t sub_1B925BB80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v75 = a6;
  uint64_t v77 = a5;
  uint64_t v99 = a3;
  uint64_t v10 = sub_1B996BC40();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v74 - v15;
  char v17 = sub_1B996BBE0();
  uint64_t v18 = *(void (**)(void, void, void))(v11 + 16);
  uint64_t v82 = a1;
  id v86 = (void (*)(char *, unint64_t, uint64_t))v18;
  uint64_t v87 = v11 + 16;
  v18(v16, a1, v10);
  if (v17)
  {
    uint64_t v19 = (void *)sub_1B996BC20();
    char v20 = sub_1B913F66C(v19, a2);

    id v81 = *(void (**)(char *, uint64_t))(v11 + 8);
    v81(v16, v10);
    if ((v20 & 1) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    id v81 = *(void (**)(char *, uint64_t))(v11 + 8);
    v81(v16, v10);
  }
  uint64_t v21 = (void *)sub_1B996BC20();
  char v22 = sub_1B913F8D0(v21, v99);

  if ((v22 & 1) == 0)
  {
    sub_1B996BC20();
    MEMORY[0x1BA9D7C50]();
    if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B996EEB0();
    }
    sub_1B996EF30();
    sub_1B996EE70();
  }
LABEL_9:
  unint64_t v101 = MEMORY[0x1E4FBC860];
  uint64_t v23 = sub_1B996BC30();
  if (v23)
  {
    uint64_t v74 = v6;
    uint64_t v76 = v23;
    char v24 = v86;
    uint64_t v97 = *(void *)(v23 + 16);
    if (v97)
    {
      uint64_t v25 = 0;
      unint64_t v96 = v76 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v26 = *(void *)(v11 + 72);
      uint64_t v94 = v11 + 8;
      uint64_t v95 = v26;
      uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8;
      if (a2 < 0) {
        uint64_t v27 = a2;
      }
      uint64_t v83 = v27;
      unint64_t v89 = a2 & 0xC000000000000001;
      uint64_t v90 = a2 + 56;
      uint64_t v28 = v99 & 0xFFFFFFFFFFFFFF8;
      if (v99 < 0) {
        uint64_t v28 = v99;
      }
      uint64_t v88 = v28;
      unint64_t v91 = v99 & 0xC000000000000001;
      uint64_t v92 = v99 + 56;
      unint64_t v80 = v81;
      uint64_t v79 = v81;
      uint64_t v78 = v81;
      uint64_t v98 = v81;
      uint64_t v84 = v14;
      uint64_t v85 = v10;
      uint64_t v93 = a2;
      do
      {
        unint64_t v30 = v96 + v95 * v25;
        char v31 = sub_1B996BBE0();
        v24(v14, v30, v10);
        if (v31)
        {
          char v32 = (void *)sub_1B996BC20();
          uint64_t v33 = v32;
          if (v89)
          {
            char v34 = sub_1B99703A0();

            v98(v14, v10);
            if ((v34 & 1) == 0) {
              goto LABEL_18;
            }
            goto LABEL_36;
          }
          if (!*(void *)(a2 + 16))
          {

LABEL_17:
            uint64_t v29 = v81;
            v81(v14, v10);
            unint64_t v80 = v29;
            uint64_t v79 = v29;
            uint64_t v78 = v29;
            uint64_t v98 = v29;
            goto LABEL_18;
          }
          uint64_t v35 = sub_1B996FC80();
          uint64_t v36 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v37 = v35 & ~v36;
          if (((*(void *)(v90 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          {

            uint64_t v14 = v84;
            uint64_t v10 = v85;
            goto LABEL_17;
          }
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
          id v38 = *(id *)(*(void *)(a2 + 48) + 8 * v37);
          char v39 = sub_1B996FC90();

          unint64_t v40 = v81;
          id v41 = v81;
          if ((v39 & 1) == 0)
          {
            uint64_t v42 = ~v36;
            unint64_t v43 = (v37 + 1) & v42;
            if (((*(void *)(v90 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
            {

              uint64_t v14 = v84;
              uint64_t v10 = v85;
              unint64_t v46 = (void (*)(void, void))v80;
              v80(v84, v85);
              uint64_t v79 = (void (*)(char *, uint64_t))v46;
              uint64_t v78 = (void (*)(char *, uint64_t))v46;
LABEL_32:
              uint64_t v98 = (void (*)(char *, uint64_t))v46;
LABEL_53:
              char v24 = v86;
              goto LABEL_18;
            }
            while (1)
            {
              id v44 = *(id *)(*(void *)(a2 + 48) + 8 * v43);
              char v45 = sub_1B996FC90();

              if (v45) {
                break;
              }
              unint64_t v43 = (v43 + 1) & v42;
              if (((*(void *)(v90 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
              {

                uint64_t v14 = v84;
                uint64_t v10 = v85;
                unint64_t v46 = (void (*)(void, void))v78;
                v78(v84, v85);
                goto LABEL_32;
              }
            }
            id v41 = v79;
            unint64_t v40 = v80;
          }
          unint64_t v47 = (void (*)(void, void))v41;

          unint64_t v80 = v40;
          uint64_t v79 = (void (*)(char *, uint64_t))v47;
          uint64_t v98 = (void (*)(char *, uint64_t))v47;
          uint64_t v78 = (void (*)(char *, uint64_t))v47;
          uint64_t v14 = v84;
          uint64_t v10 = v85;
          char v24 = v86;
        }
        v98(v14, v10);
LABEL_36:
        uint64_t v48 = (void *)sub_1B996BC20();
        if (!v91)
        {
          if (!*(void *)(v99 + 16)) {
            goto LABEL_47;
          }
          uint64_t v50 = v99;
          uint64_t v51 = sub_1B996FC80();
          uint64_t v52 = -1 << *(unsigned char *)(v50 + 32);
          unint64_t v53 = v51 & ~v52;
          if (((*(void *)(v92 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
            goto LABEL_47;
          }
          sub_1B996B250();
          id v54 = *(id *)(*(void *)(v99 + 48) + 8 * v53);
          char v55 = sub_1B996FC90();

          if ((v55 & 1) == 0)
          {
            uint64_t v56 = ~v52;
            for (unint64_t i = v53 + 1; ; unint64_t i = v58 + 1)
            {
              uint64_t v58 = i & v56;
              if (((*(void *)(v92 + (((i & v56) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v56)) & 1) == 0) {
                break;
              }
              id v59 = *(id *)(*(void *)(v99 + 48) + 8 * v58);
              char v60 = sub_1B996FC90();

              a2 = v93;
              if (v60)
              {

                goto LABEL_52;
              }
            }
LABEL_47:

            a2 = v93;
            uint64_t v14 = v84;
            uint64_t v10 = v85;
            char v24 = v86;
LABEL_48:
            sub_1B996BC20();
            MEMORY[0x1BA9D7C50]();
            if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B996EEB0();
            }
            sub_1B996EF30();
            sub_1B996EE70();
            goto LABEL_18;
          }

          a2 = v93;
LABEL_52:
          uint64_t v14 = v84;
          uint64_t v10 = v85;
          goto LABEL_53;
        }
        char v49 = sub_1B99703A0();

        if ((v49 & 1) == 0) {
          goto LABEL_48;
        }
LABEL_18:
        ++v25;
      }
      while (v25 != v97);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = sub_1B996BC20();
  uint64_t v62 = (void *)v61;
  uint64_t v63 = v77;
  if (*(void *)(v77 + 16) && (unint64_t v64 = sub_1B90CFC34(v61), (v65 & 1) != 0))
  {
    uint64_t v66 = *(void *)(*(void *)(v63 + 56) + 8 * v64);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();

    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v67 = sub_1B925D5D8(v66, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B9120800(v67);
  }
  else
  {
  }
  uint64_t v68 = v101;
  if (v101 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v73 = sub_1B9970930();
    swift_bridgeObjectRelease();
    if (!v73) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_61;
  }
  if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_61:
    unint64_t v69 = (void *)sub_1B996BC20();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v70 = v75;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v100 = *v70;
    *uint64_t v70 = 0x8000000000000000;
    sub_1B90D4E48(v68, v69, isUniquelyReferenced_nonNull_native);
    *uint64_t v70 = v100;

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B925C39C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_1B996BC40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v46 - v13;
  char v15 = sub_1B996BBE0();
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v63 = v9 + 16;
  v62(v14, a1, v8);
  uint64_t v57 = a2;
  uint64_t v52 = v8;
  if (v15)
  {
    uint64_t v16 = (void *)sub_1B996BC20();
    char v17 = sub_1B913F66C(v16, a2);

    unint64_t v53 = *(void (**)(char *, uint64_t))(v9 + 8);
    v53(v14, v8);
    if ((v17 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v53 = *(void (**)(char *, uint64_t))(v9 + 8);
    v53(v14, v8);
  }
  sub_1B996BC20();
  MEMORY[0x1BA9D7C50]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B996EEB0();
  }
  sub_1B996EF30();
  sub_1B996EE70();
LABEL_8:
  unint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v65 = MEMORY[0x1E4FBC860];
  uint64_t v19 = sub_1B996BC30();
  if (v19)
  {
    uint64_t v61 = *(void *)(v19 + 16);
    if (v61)
    {
      v46[1] = v19;
      unint64_t v47 = a4;
      uint64_t v20 = 0;
      unint64_t v60 = v19 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v21 = *(void *)(v9 + 72);
      uint64_t v58 = v9 + 8;
      uint64_t v59 = v21;
      uint64_t v22 = v57;
      uint64_t v23 = v57 & 0xFFFFFFFFFFFFFF8;
      if (v57 < 0) {
        uint64_t v23 = v57;
      }
      uint64_t v54 = v23;
      unint64_t v55 = v57 & 0xC000000000000001;
      uint64_t v56 = v57 + 56;
      uint64_t v25 = v52;
      char v24 = v53;
      uint64_t v50 = v53;
      uint64_t v51 = v53;
      char v49 = v53;
      uint64_t v48 = a1;
      while (1)
      {
        unint64_t v26 = v60 + v59 * v20;
        char v27 = sub_1B996BBE0();
        v62(v12, v26, v25);
        if ((v27 & 1) == 0) {
          goto LABEL_31;
        }
        uint64_t v28 = (void *)sub_1B996BC20();
        uint64_t v29 = v28;
        if (v55)
        {
          char v30 = sub_1B99703A0();

          v24(v12, v25);
          if (v30) {
            goto LABEL_32;
          }
        }
        else if (*(void *)(v22 + 16))
        {
          uint64_t v31 = sub_1B996FC80();
          uint64_t v32 = -1 << *(unsigned char *)(v22 + 32);
          unint64_t v33 = v31 & ~v32;
          if ((*(void *)(v56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
          {
            sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
            id v34 = *(id *)(*(void *)(v22 + 48) + 8 * v33);
            char v35 = sub_1B996FC90();

            uint64_t v36 = v53;
            char v24 = v53;
            if (v35) {
              goto LABEL_30;
            }
            uint64_t v37 = ~v32;
            unint64_t v38 = (v33 + 1) & v37;
            if ((*(void *)(v56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
            {
              uint64_t v22 = v57;
              while (1)
              {
                id v39 = *(id *)(*(void *)(v22 + 48) + 8 * v38);
                char v40 = sub_1B996FC90();

                if (v40) {
                  break;
                }
                unint64_t v38 = (v38 + 1) & v37;
                uint64_t v22 = v57;
                if (((*(void *)(v56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
                {

                  uint64_t v25 = v52;
                  char v24 = v49;
                  v49(v12, v52);
                  goto LABEL_14;
                }
              }
              char v24 = v50;
              uint64_t v36 = v51;
LABEL_30:
              id v41 = v36;

              uint64_t v50 = v24;
              uint64_t v51 = v41;
              char v49 = v24;
              uint64_t v22 = v57;
              uint64_t v25 = v52;
LABEL_31:
              v24(v12, v25);
LABEL_32:
              sub_1B996BC20();
              MEMORY[0x1BA9D7C50]();
              if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1B996EEB0();
              }
              sub_1B996EF30();
              sub_1B996EE70();
              goto LABEL_14;
            }

            char v24 = v51;
            uint64_t v25 = v52;
            v51(v12, v52);
            char v49 = v24;
            uint64_t v50 = v24;
            uint64_t v22 = v57;
          }
          else
          {

            uint64_t v25 = v52;
            char v24 = v53;
            v53(v12, v52);
            uint64_t v50 = v24;
            uint64_t v51 = v24;
            char v49 = v24;
          }
        }
        else
        {

          char v24 = v53;
          v53(v12, v25);
          uint64_t v50 = v24;
          uint64_t v51 = v24;
          char v49 = v24;
        }
LABEL_14:
        if (++v20 == v61)
        {
          swift_bridgeObjectRelease();
          unint64_t v18 = v65;
          a4 = v47;
          if (v65 >> 62) {
            goto LABEL_36;
          }
LABEL_40:
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_41;
          }
          return swift_bridgeObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (!(v18 >> 62)) {
    goto LABEL_40;
  }
LABEL_36:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v42 = sub_1B9970930();
  swift_bridgeObjectRelease();
  if (v42)
  {
LABEL_41:
    unint64_t v43 = (void *)sub_1B996BC20();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *a4;
    *a4 = 0x8000000000000000;
    sub_1B90D4E48(v18, v43, isUniquelyReferenced_nonNull_native);
    *a4 = v64;

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *sub_1B925C988(uint64_t a1)
{
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFC2A0);
  uint64_t v45 = *(void *)(v60 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v43 - v4;
  uint64_t v6 = sub_1B996BC40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE4B0);
  unint64_t result = (void *)sub_1B9970960();
  uint64_t v11 = result;
  uint64_t v49 = a1;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v46 = a1 + 64;
  char v13 = *(unsigned char *)(a1 + 32);
  int64_t v14 = 0;
  uint64_t v15 = 1 << v13;
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  uint64_t v56 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v57 = v9;
  uint64_t v58 = v7;
  char v17 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  unint64_t v18 = v16 & v12;
  int64_t v47 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v48 = (char *)(result + 8);
  id v44 = result;
  if ((v16 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v14 << 6))
  {
    unint64_t v55 = i;
    uint64_t v24 = *(void *)(v49 + 56);
    uint64_t v25 = *(void **)(*(void *)(v49 + 48) + 8 * i);
    uint64_t v54 = 8 * i;
    uint64_t v26 = *(void *)(v24 + 8 * i);
    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      unint64_t v52 = v18;
      int64_t v53 = v14;
      uint64_t v62 = MEMORY[0x1E4FBC860];
      uint64_t v51 = v25;
      uint64_t v28 = v26;
      id v29 = v25;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B90E4184(0, v27, 0);
      uint64_t v30 = *(unsigned __int8 *)(v45 + 80);
      uint64_t v50 = v28;
      uint64_t v31 = v28 + ((v30 + 32) & ~v30);
      uint64_t v61 = *(void *)(v45 + 72);
      do
      {
        sub_1B90CCA04(v31, (uint64_t)v5, &qword_1E9EFC2A0);
        uint64_t v32 = *(int *)(v60 + 48);
        unint64_t v33 = &v59[v32];
        (*v56)(&v59[v32], &v5[v32], v6);
        id v34 = *v17;
        (*v17)(v9, v33, v6);
        sub_1B90CCA68((uint64_t)v5, &qword_1E9EFC2A0);
        uint64_t v35 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B90E4184(0, *(void *)(v35 + 16) + 1, 1);
          uint64_t v35 = v62;
        }
        unint64_t v37 = *(void *)(v35 + 16);
        unint64_t v36 = *(void *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1B90E4184(v36 > 1, v37 + 1, 1);
          uint64_t v35 = v62;
        }
        *(void *)(v35 + 16) = v37 + 1;
        uint64_t v9 = v57;
        v34((char *)(v35+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v37), v57, v6);
        uint64_t v62 = v35;
        v31 += v61;
        --v27;
      }
      while (v27);
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v11 = v44;
      unint64_t v18 = v52;
      int64_t v14 = v53;
      unint64_t v38 = v51;
    }
    else
    {
      unint64_t v38 = v25;
      unint64_t result = v25;
      uint64_t v35 = MEMORY[0x1E4FBC860];
    }
    *(void *)&v48[(v55 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v55;
    uint64_t v39 = v54;
    *(void *)(v11[6] + v54) = v38;
    *(void *)(v11[7] + v39) = v35;
    uint64_t v40 = v11[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    _OWORD v11[2] = v42;
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_33;
    }
    if (v21 >= v47) {
      return v11;
    }
    unint64_t v22 = *(void *)(v46 + 8 * v21);
    ++v14;
    if (!v22)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v47) {
        return v11;
      }
      unint64_t v22 = *(void *)(v46 + 8 * v14);
      if (!v22)
      {
        int64_t v14 = v21 + 2;
        if (v21 + 2 >= v47) {
          return v11;
        }
        unint64_t v22 = *(void *)(v46 + 8 * v14);
        if (!v22) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v18 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v47) {
    return v11;
  }
  unint64_t v22 = *(void *)(v46 + 8 * v23);
  if (v22)
  {
    int64_t v14 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v14 >= v47) {
      return v11;
    }
    unint64_t v22 = *(void *)(v46 + 8 * v14);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1B925CE54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B996BC40();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  BOOL v41 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v31 - v9;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v38 = *(void *)(a1 + 16);
  if (v38)
  {
    v31[0] = v2;
    uint64_t v12 = 0;
    int64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v33 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v36 = a1 + v33;
    unint64_t v37 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    uint64_t v42 = a2;
    uint64_t v43 = v15;
    uint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v16 = a2;
    }
    uint64_t v34 = v16;
    unint64_t v35 = a2 & 0xC000000000000001;
    v31[1] = v13;
    uint64_t v32 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v39 = a2 + 56;
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    while (1)
    {
      v37(v10, v36 + v43 * v12, v5);
      char v17 = (void *)sub_1B996BC20();
      if (v35)
      {
        char v18 = sub_1B99703A0();

        if ((v18 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        if (!*(void *)(a2 + 16)) {
          goto LABEL_18;
        }
        uint64_t v19 = sub_1B996FC80();
        uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v21 = v19 & ~v20;
        if (((*(void *)(v39 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_18;
        }
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
        id v22 = *(id *)(*(void *)(a2 + 48) + 8 * v21);
        char v23 = sub_1B996FC90();

        if ((v23 & 1) == 0)
        {
          uint64_t v24 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v24;
            if (((*(void *)(v39 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            id v25 = *(id *)(*(void *)(v42 + 48) + 8 * v21);
            char v26 = sub_1B996FC90();

            if (v26) {
              goto LABEL_5;
            }
          }
LABEL_18:

LABEL_19:
          int64_t v27 = *v40;
          (*v40)(v41, v10, v5);
          uint64_t v28 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B90E4184(0, *(void *)(v28 + 16) + 1, 1);
            uint64_t v28 = v44;
          }
          unint64_t v30 = *(void *)(v28 + 16);
          unint64_t v29 = *(void *)(v28 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_1B90E4184(v29 > 1, v30 + 1, 1);
            uint64_t v28 = v44;
          }
          *(void *)(v28 + 16) = v30 + 1;
          v27((char *)(v28 + v33 + v30 * v43), v41, v5);
          uint64_t v44 = v28;
          a2 = v42;
          goto LABEL_7;
        }
LABEL_5:

        a2 = v42;
      }
      (*v32)(v10, v5);
LABEL_7:
      if (++v12 == v38) {
        return v44;
      }
    }
  }
  return result;
}

unint64_t sub_1B925D1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_1B996BC40();
  uint64_t v6 = MEMORY[0x1F4188790](v50);
  uint64_t v49 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v40 = (char *)&v37 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v37 - v11;
  uint64_t v45 = *(void *)(a1 + 16);
  if (!v45) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v37 = a1;
  uint64_t v38 = (v12 + 32) & ~v12;
  uint64_t v44 = a1 + v38;
  unint64_t v43 = a2 & 0xC000000000000001;
  uint64_t v51 = *(void *)(v10 + 72);
  uint64_t v13 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v13 = a2;
  }
  uint64_t v41 = v13;
  uint64_t v46 = a2 + 56;
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v47 = a2;
  do
  {
    uint64_t v16 = (void *)sub_1B996BC20();
    if (v43)
    {
      char v17 = sub_1B99703A0();

      if (v17) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v42 = v3;
      if (v18)
      {
        uint64_t v19 = sub_1B996FC80();
        uint64_t v20 = a2;
        uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v22 = v19 & ~v21;
        if ((*(void *)(v46 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
          id v23 = *(id *)(*(void *)(v20 + 48) + 8 * v22);
          char v24 = sub_1B996FC90();

          if (v24)
          {
LABEL_5:

            uint64_t v3 = v42;
            a2 = v47;
            goto LABEL_6;
          }
          uint64_t v25 = ~v21;
          while (1)
          {
            unint64_t v22 = (v22 + 1) & v25;
            if (((*(void *)(v46 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
              break;
            }
            id v26 = *(id *)(*(void *)(v47 + 48) + 8 * v22);
            char v27 = sub_1B996FC90();

            if (v27) {
              goto LABEL_5;
            }
          }
        }
      }

      uint64_t v3 = v42;
      a2 = v47;
    }
    uint64_t v28 = sub_1B996BC30();
    if (v28)
    {
      uint64_t v29 = v28;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B925CE54(v29, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B996BC20();
    sub_1B996BBE0();
    unint64_t v30 = v40;
    sub_1B996BC10();
    uint64_t v31 = *v48;
    uint64_t v32 = v39;
    uint64_t v33 = v50;
    (*v48)(v39, v30, v50);
    v31(v49, v32, v33);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_1B9188B9C(0, *(void *)(v15 + 16) + 1, 1, v15);
    }
    unint64_t v35 = *(void *)(v15 + 16);
    unint64_t v34 = *(void *)(v15 + 24);
    if (v35 >= v34 >> 1) {
      unint64_t v15 = sub_1B9188B9C(v34 > 1, v35 + 1, 1, v15);
    }
    *(void *)(v15 + 16) = v35 + 1;
    v31((char *)(v15 + v38 + v35 * v51), v49, v50);
LABEL_6:
    ++v14;
  }
  while (v14 != v45);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B925D5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = sub_1B996BC40();
  MEMORY[0x1F4188790](v29);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    v27[0] = a1;
    v27[1] = v2;
    uint64_t v37 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v10 = *(void *)(v5 + 72);
    unint64_t v35 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v36 = v10;
    uint64_t v11 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v12 = a2;
    }
    uint64_t v30 = v12;
    unint64_t v33 = a2 & 0xC000000000000001;
    uint64_t v34 = a2 + 56;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v13 = 0;
    uint64_t v14 = v29;
    uint64_t v32 = a2;
    uint64_t v28 = v9;
    while (1)
    {
      uint64_t v15 = v37 + v36 * v13;
      char v16 = sub_1B996BBE0();
      (*v35)(v7, v15, v14);
      if ((v16 & 1) == 0) {
        goto LABEL_15;
      }
      char v17 = (void *)sub_1B996BC20();
      uint64_t v18 = v17;
      if (v33)
      {
        char v19 = sub_1B99703A0();

        (*v11)(v7, v14);
        if (v19) {
          goto LABEL_16;
        }
      }
      else if (*(void *)(a2 + 16))
      {
        unint64_t v20 = sub_1B996FC80() & ~(-1 << *(unsigned char *)(a2 + 32));
        if (((*(void *)(v34 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        {

          (*v11)(v7, v14);
LABEL_25:
          uint64_t v9 = v28;
          goto LABEL_6;
        }
        uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
        sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4A50);
        id v21 = *(id *)(*(void *)(a2 + 48) + 8 * v20);
        char v22 = sub_1B996FC90();

        if (v22) {
          goto LABEL_14;
        }
        uint64_t v31 = ~v31;
        unint64_t v24 = (v20 + 1) & v31;
        if ((*(void *)(v34 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
        {
          a2 = v32;
          while (1)
          {
            id v25 = *(id *)(*(void *)(a2 + 48) + 8 * v24);
            char v26 = sub_1B996FC90();

            if (v26) {
              break;
            }
            a2 = v32;
            unint64_t v24 = (v24 + 1) & v31;
            if (((*(void *)(v34 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
            {

              uint64_t v14 = v29;
              (*v11)(v7, v29);
              goto LABEL_25;
            }
          }
LABEL_14:

          a2 = v32;
          uint64_t v9 = v28;
          uint64_t v14 = v29;
LABEL_15:
          (*v11)(v7, v14);
LABEL_16:
          uint64_t v23 = sub_1B996BC20();
          MEMORY[0x1BA9D7C50](v23);
          if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B996EEB0();
          }
          sub_1B996EF30();
          sub_1B996EE70();
          goto LABEL_6;
        }

        uint64_t v14 = v29;
        (*v11)(v7, v29);
        a2 = v32;
        uint64_t v9 = v28;
      }
      else
      {

        (*v11)(v7, v14);
      }
LABEL_6:
      if (++v13 == v9)
      {
        swift_bridgeObjectRelease();
        return v38;
      }
    }
  }
  return result;
}

uint64_t _sSo17REMManualOrderingC15RemindersUICoreE12ChangeReasonO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1B99709E0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B925D9F4()
{
  unint64_t result = qword_1E9EFE488;
  if (!qword_1E9EFE488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE488);
  }
  return result;
}

uint64_t _s12ChangeReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12ChangeReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B925DBA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMManualOrdering.ChangeReason()
{
  return &type metadata for REMManualOrdering.ChangeReason;
}

void sub_1B925DBDC(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    sub_1B9100394(a1, a2);
  }
  else
  {
    sub_1B9100394(a1, a2);
  }
}

id sub_1B925DC28(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    sub_1B910009C(a1, a2);
    return a3;
  }
  else
  {
    return sub_1B910009C(a1, a2);
  }
}

unint64_t sub_1B925DC74()
{
  unint64_t result = qword_1E9EFE4A8;
  if (!qword_1E9EFE4A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9EFE4A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE4A8);
  }
  return result;
}

uint64_t TTRUserActivityMetadata.name.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static TTRUserActivityMetadata.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (sub_1B996FC90())
  {
    if (a3)
    {
      if (a6 && (a2 == a5 && a3 == a6 || (sub_1B9970BB0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B925DDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
  if (sub_1B996FC90())
  {
    if (v3)
    {
      if (v5 && (v2 == v4 && v3 == v5 || (sub_1B9970BB0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t TTRUserActivityMetadataInterator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5DC8);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B996F860();
  sub_1B996B020();
  sub_1B996B010();
  swift_allocObject();
  swift_weakInit();
  *(void *)(v0 + 16) = sub_1B996BA20();
  swift_release();
  return v0;
}

uint64_t TTRUserActivityMetadataInterator.init()()
{
  *(void *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5DC8);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B996F860();
  sub_1B996B020();
  sub_1B996B010();
  swift_allocObject();
  swift_weakInit();
  *(void *)(v0 + 16) = sub_1B996BA20();
  swift_release();
  return v0;
}

uint64_t sub_1B925E04C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1B925E084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3 = *(double *)(a1 + 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v4 = (uint64_t)sub_1B925E7BC(v3);
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    char v10 = v9;
    uint64_t result = swift_release();
    char v12 = v10 & 1;
  }
  else
  {
    sub_1B925E970();
    uint64_t result = swift_allocError();
    uint64_t v4 = result;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    *uint64_t v13 = 0;
    char v12 = 1;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = v12;
  return result;
}

uint64_t sub_1B925E15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B925E084(a1, a2);
}

void *TTRUserActivityMetadataInterator.metadata(for:viewScale:)(void *result)
{
  if (*(void *)(v1 + 16))
  {
    id v2 = result;
    swift_retain();
    sub_1B996BA00();

    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *TTRUserActivityMetadataInterator.syncMetadata(for:viewScale:)(void *result)
{
  if (*(void *)(v1 + 16))
  {
    id v2 = result;
    swift_retain();
    sub_1B996B9F0();

    swift_release();
    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B925E23C(void *a1)
{
  sub_1B9970D10();
  id v2 = a1;
  sub_1B996FCA0();

  sub_1B9970D50();
  return sub_1B9970D60();
}

uint64_t sub_1B925E2AC()
{
  return sub_1B925E23C(*v0);
}

uint64_t sub_1B925E2B8()
{
  id v1 = *v0;
  sub_1B996FCA0();

  return sub_1B9970D50();
}

uint64_t sub_1B925E308()
{
  id v1 = *v0;
  sub_1B9970D10();
  id v2 = v1;
  sub_1B996FCA0();

  sub_1B9970D50();
  return sub_1B9970D60();
}

id sub_1B925E36C@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *a1 = *(void *)v1;
  a1[1] = v3;
  return v2;
}

uint64_t sub_1B925E380(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a2 + 8);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B4BC0);
  return sub_1B996FC90() & (v2 == v3);
}

uint64_t TTRUserActivityMetadataInterator.deinit()
{
  swift_release();
  return v0;
}

uint64_t TTRUserActivityMetadataInterator.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_1B925E444(void *result)
{
  if (*(void *)(v1 + 16))
  {
    id v2 = result;
    swift_retain();
    sub_1B996BA00();

    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1B925E4B0(void *result)
{
  if (*(void *)(v1 + 16))
  {
    id v2 = result;
    swift_retain();
    sub_1B996B9F0();

    swift_release();
    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for TTRRemindersListViewModel.AppLink(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s15RemindersUICore25TTRRemindersListViewModelC7AppLinkVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListViewModel.AppLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRRemindersListViewModel.AppLink(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadata()
{
  return &type metadata for TTRUserActivityMetadata;
}

uint64_t type metadata accessor for TTRUserActivityMetadataInterator()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for TTRUserActivityMetadataInterator.OperationParams(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRUserActivityMetadataInterator.OperationParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TTRUserActivityMetadataInterator.OperationParams(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadataInterator.OperationParams()
{
  return &type metadata for TTRUserActivityMetadataInterator.OperationParams;
}

uint64_t sub_1B925E748()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B925E768()
{
  unint64_t result = qword_1EB9B5810;
  if (!qword_1EB9B5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B5810);
  }
  return result;
}

id sub_1B925E7BC(double a1)
{
  uint64_t v2 = sub_1B996B9E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E4F95670], v2, v4);
  uint64_t v7 = sub_1B996F710();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_scale_orientation_, v7, 0, a1);
  }
  else
  {
    sub_1B90BFD68(0, &qword_1E9EFE4C0);
    uint64_t v8 = (void *)sub_1B996F700();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_scale_orientation_, v8, 0, a1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

unint64_t sub_1B925E970()
{
  unint64_t result = qword_1E9EFE4B8;
  if (!qword_1E9EFE4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE4B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRUserActivityMetadataInterator.MetadataFetchingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B925EA90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadataInterator.MetadataFetchingError()
{
  return &type metadata for TTRUserActivityMetadataInterator.MetadataFetchingError;
}

unint64_t sub_1B925EACC()
{
  unint64_t result = qword_1EB9B5808;
  if (!qword_1EB9B5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9B5808);
  }
  return result;
}

unint64_t sub_1B925EB24()
{
  unint64_t result = qword_1E9EFE4C8;
  if (!qword_1E9EFE4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE4C8);
  }
  return result;
}

uint64_t TTRRemindersListInteractorSectionsCapability.__allocating_init(committer:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1B9101700(a1, v2 + 32);
  return v2;
}

id TTRRemindersListInteractorSectionsCapabilityTarget.objectID.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_objectID);

  return v1;
}

uint64_t TTRRemindersListInteractorSectionsCapability.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1BA9DB180](v0 + 16);
}

uint64_t TTRRemindersListInteractorSectionsCapability.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRRemindersListInteractorSectionsCapability.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9DB180](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B91A3644;
}

uint64_t TTRRemindersListInteractorSectionsCapability.init(committer:)(long long *a1)
{
  *(void *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1B9101700(a1, v1 + 32);
  return v1;
}

void *TTRRemindersListInteractorSectionsCapability.addNewSection(displayName:to:sectionID:)(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  void (*v10)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *result;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *i;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  long long aBlock;
  long long v69;
  uint64_t (*v70)(uint64_t);
  void *v71;
  long long v72;
  long long v73;
  uint64_t v74;
  void *v75;

  uint64_t v75 = 0;
  if (!a4)
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v5 + 16))
    {
      char v12 = *(void *)(v5 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 8);
      uint64_t v15 = a3;
      v14(&aBlock, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v12);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v70 = 0;
      uint64_t aBlock = 0u;
      unint64_t v69 = 0u;
      uint64_t v36 = a3;
    }
    uint64_t v37 = a5;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B96ECA68(a3, (uint64_t)&aBlock, 0, 0, (uint64_t)a5, a1, a2, &v75);

    swift_bridgeObjectRelease();
    sub_1B90D97EC((uint64_t)&aBlock);

    return v75;
  }
  if (a4 == 1)
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v5 + 16))
    {
      uint64_t v8 = *(void *)(v5 + 24);
      uint64_t v9 = swift_getObjectType();
      char v10 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 8);
      uint64_t v11 = a3;
      v10(&v72, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v9, v8);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v74 = 0;
      char v72 = 0u;
      uint64_t v73 = 0u;
      unint64_t v20 = a3;
    }
    id v21 = a5;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    char v22 = objc_msgSend(a3, sel_store);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B997C200;
    *(void *)(v23 + 32) = a3;
    *(void *)&uint64_t aBlock = v23;
    sub_1B996EE70();
    unint64_t v24 = aBlock;
    id v25 = objc_allocWithZone(MEMORY[0x1E4F94C58]);
    char v26 = a3;
    char v27 = objc_msgSend(v25, sel_initWithStore_, v22);
    objc_msgSend(v27, sel_setSaveIsNoopIfNoChangedKeys_, 1);
    if ((unint64_t)aBlock >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      unint64_t result = (void *)sub_1B9970930();
      uint64_t v28 = (uint64_t)result;
      if (result) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = (void *)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v28)
      {
LABEL_12:
        uint64_t v64 = v26;
        if (v28 >= 1)
        {
          uint64_t v30 = 0;
          do
          {
            if ((v24 & 0xC000000000000001) != 0) {
              uint64_t v31 = (id)MEMORY[0x1BA9D9380](v30, v24);
            }
            else {
              uint64_t v31 = *(id *)(v24 + 8 * v30 + 32);
            }
            uint64_t v32 = v31;
            ++v30;
            sub_1B90D8A70((uint64_t)&v72, (uint64_t)&aBlock);
            unint64_t v33 = objc_msgSend(v27, sel_updateSmartList_, v32);

            type metadata accessor for TTRSmartListEditor();
            uint64_t v34 = swift_allocObject();
            *(void *)(v34 + 16) = v33;
            sub_1B90D8B78((uint64_t)&aBlock, v34 + 24);
            *(unsigned char *)(v34 + 64) = 0;
            unint64_t v35 = TTRSmartListEditor.addNewSection(with:displayName:)((uint64_t)a5);
            swift_release();
          }
          while (v28 != v30);
          swift_bridgeObjectRelease();
          uint64_t v75 = 0;
          char v26 = v64;
          goto LABEL_39;
        }
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_39:
    sub_1B90D894C();
    uint64_t v57 = (void *)sub_1B996F860();
    uint64_t v58 = (void *)swift_allocObject();
    v58[3] = 0;
    v58[4] = 0;
    v58[2] = v24;
    uint64_t v70 = sub_1B926186C;
    id v71 = v58;
    *(void *)&uint64_t aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&unint64_t v69 = sub_1B9140964;
    *((void *)&v69 + 1) = &block_descriptor_6_1;
    uint64_t v59 = _Block_copy(&aBlock);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    objc_msgSend(v27, sel_saveWithQueue_completion_, v57, v59);
    _Block_release(v59);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B90D97EC((uint64_t)&v72);
    return v75;
  }
  swift_beginAccess();
  if (MEMORY[0x1BA9DB180](v5 + 16))
  {
    char v16 = *(void *)(v5 + 24);
    char v17 = swift_getObjectType();
    uint64_t v18 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v16 + 8);
    char v19 = a3;
    v18(&v72, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v17, v16);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v74 = 0;
    char v72 = 0u;
    uint64_t v73 = 0u;
    uint64_t v38 = a3;
  }
  uint64_t v39 = a5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v40 = objc_msgSend(a3, sel_store);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1B997C200;
  *(void *)(v41 + 32) = a3;
  *(void *)&uint64_t aBlock = v41;
  sub_1B996EE70();
  uint64_t v42 = aBlock;
  unint64_t v43 = objc_allocWithZone(MEMORY[0x1E4F94C58]);
  uint64_t v44 = a3;
  uint64_t v45 = objc_msgSend(v43, sel_initWithStore_, v40);
  objc_msgSend(v45, sel_setSaveIsNoopIfNoChangedKeys_, 1);
  if ((unint64_t)aBlock >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t result = (void *)sub_1B9970930();
    uint64_t v46 = (uint64_t)result;
    if (result) {
      goto LABEL_24;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v46 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = (void *)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (!v46) {
    goto LABEL_41;
  }
LABEL_24:
  uint64_t v63 = v44;
  unint64_t v65 = v40;
  uint64_t v47 = v46 - 1;
  if (v46 < 1) {
    goto LABEL_45;
  }
  uint64_t v48 = 0;
  for (unint64_t i = 0; ; unint64_t i = v51)
  {
    unint64_t v52 = (v42 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1BA9D9380](v48, v42)
        : *(id *)(v42 + 8 * v48 + 32);
    int64_t v53 = v52;
    sub_1B90D8A70((uint64_t)&v72, (uint64_t)&aBlock);
    uint64_t v54 = objc_msgSend(v45, sel_updateTemplate_, v53);

    type metadata accessor for TTRTemplateEditor();
    unint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v54;
    sub_1B90D8B78((uint64_t)&aBlock, v55 + 24);
    *(unsigned char *)(v55 + 64) = 0;
    uint64_t v56 = TTRTemplateEditor.addNewSection(with:displayName:)((uint64_t)a5);
    if (!v56) {
      break;
    }
    uint64_t v50 = v56;
    uint64_t v51 = objc_msgSend(v56, sel_objectID);
    swift_release();

    if (v47 == v48)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v51;
      goto LABEL_36;
    }
LABEL_27:
    ++v48;
  }
  swift_release();

  if (v47 != v48)
  {
    uint64_t v51 = 0;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  uint64_t v75 = 0;
LABEL_36:
  uint64_t v40 = v65;
  uint64_t v44 = v63;
LABEL_42:
  sub_1B90D894C();
  uint64_t v60 = (void *)sub_1B996F860();
  uint64_t v61 = (void *)swift_allocObject();
  void v61[3] = 0;
  v61[4] = 0;
  v61[2] = v42;
  uint64_t v70 = sub_1B926186C;
  id v71 = v61;
  *(void *)&uint64_t aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&unint64_t v69 = sub_1B9140964;
  *((void *)&v69 + 1) = &block_descriptor_17;
  uint64_t v62 = _Block_copy(&aBlock);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_release();
  objc_msgSend(v45, sel_saveWithQueue_completion_, v60, v62);
  _Block_release(v62);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B90D97EC((uint64_t)&v72);
  return v75;
}

void TTRRemindersListInteractorSectionsCapability.delete(_:option:)(void *a1, unsigned __int8 a2, void *a3)
{
  swift_beginAccess();
  if (!MEMORY[0x1BA9DB180](v3 + 16))
  {
    memset(v70, 0, 40);
    int v9 = a2;
    if (a2) {
      goto LABEL_3;
    }
LABEL_7:
    if (a3)
    {
      id v21 = a1;
      id v22 = a3;
      id v23 = objc_msgSend(v21, sel_list);
      sub_1B90D8A70((uint64_t)v70, (uint64_t)&v63);
      sub_1B90D8A70((uint64_t)&v63, (uint64_t)v69);
      id v24 = v22;
      id v25 = v23;
      id v26 = objc_msgSend(v24, sel_updateList_, v25);
      sub_1B90D8A70((uint64_t)v69, (uint64_t)v62);
      if (qword_1EB9B5330 != -1) {
        swift_once();
      }
      id v27 = (id)static TTRUserDefaults.appUserDefaults;

      sub_1B90D97EC((uint64_t)v69);
      type metadata accessor for TTRListEditor();
      uint64_t v28 = swift_allocObject();
      uint64_t v60 = type metadata accessor for TTRUserDefaults();
      uint64_t v61 = &protocol witness table for TTRUserDefaults;
      *(void *)&long long v59 = v27;
      *(unsigned char *)(v28 + 64) = 0;
      *(void *)(v28 + 16) = v26;
      sub_1B90D8B78((uint64_t)v62, v28 + 24);
      swift_beginAccess();
      *(unsigned char *)(v28 + 64) = 0;
      sub_1B9101700(&v59, v28 + 72);
      sub_1B90D97EC((uint64_t)&v63);

      TTRListEditor.deleteSection(_:)(v21);
      swift_release();

      goto LABEL_13;
    }
    id v49 = a1;
    id v50 = objc_msgSend(v49, sel_list);
    uint64_t v51 = (void *)MEMORY[0x1F4188790](v50);
    id v58 = v49;
    sub_1B96EA9E4(v51, (uint64_t)v70, 0, 0, (void (*)(uint64_t))sub_1B92618DC);

    sub_1B90D97EC((uint64_t)v70);
    return;
  }
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v70, v3, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v7);
  swift_unknownObjectRelease();
  int v9 = a2;
  if (!a2) {
    goto LABEL_7;
  }
LABEL_3:
  if (v9 == 1)
  {
    if (a3)
    {
      id v10 = a1;
      id v11 = a3;
      id v12 = objc_msgSend(v10, sel_smartList);
      sub_1B90D8A70((uint64_t)v70, (uint64_t)&v63);
      sub_1B90D8A70((uint64_t)&v63, (uint64_t)v69);
      id v13 = objc_msgSend(v11, sel_updateSmartList_, v12);
      type metadata accessor for TTRSmartListEditor();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      sub_1B90D8B78((uint64_t)v69, v14 + 24);
      *(unsigned char *)(v14 + 64) = 0;
      sub_1B90D97EC((uint64_t)&v63);

      id v15 = objc_msgSend(*(id *)(v14 + 16), sel_saveRequest);
      id v16 = objc_msgSend(v15, sel_updateSmartListSection_, v10);

      objc_msgSend(v16, sel_removeFromSmartList);
      id v17 = objc_msgSend(v10, sel_objectID);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      id v19 = v17;
      uint64_t v20 = sub_1B9483390();
      sub_1B9124250(v20, (uint64_t)sub_1B92618C8, v18);

      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
LABEL_13:
      sub_1B90D97EC((uint64_t)v70);
      return;
    }
    id v39 = a1;
    id v40 = objc_msgSend(v39, sel_smartList);
    id v58 = v39;
    id v41 = objc_msgSend((id)MEMORY[0x1F4188790](v40), sel_store);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B997C200;
    *(void *)(v42 + 32) = v40;
    unint64_t v63 = v42;
    sub_1B996EE70();
    unint64_t v43 = v63;
    id v44 = v40;
    uint64_t v45 = (void *)sub_1B96EAD88(v43, (uint64_t)v41, 0, (uint64_t)v70, 0, (void (*)(uint64_t))sub_1B92618D0, (uint64_t)v57);
    sub_1B90D894C();
    uint64_t v46 = (void *)sub_1B996F860();
    uint64_t v47 = (void *)swift_allocObject();
    v47[3] = 0;
    v47[4] = 0;
    v47[2] = v43;
    unint64_t v67 = sub_1B9261A3C;
    uint64_t v68 = v47;
    unint64_t v63 = MEMORY[0x1E4F143A8];
    uint64_t v64 = 1107296256;
    uint64_t v48 = &block_descriptor_26;
  }
  else
  {
    if (a3)
    {
      id v29 = a1;
      id v30 = a3;
      id v31 = objc_msgSend(v29, sel_parentTemplate);
      sub_1B90D8A70((uint64_t)v70, (uint64_t)&v63);
      sub_1B90D8A70((uint64_t)&v63, (uint64_t)v69);
      id v32 = objc_msgSend(v30, sel_updateTemplate_, v31);
      type metadata accessor for TTRTemplateEditor();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      sub_1B90D8B78((uint64_t)v69, v33 + 24);
      *(unsigned char *)(v33 + 64) = 0;
      sub_1B90D97EC((uint64_t)&v63);

      id v34 = objc_msgSend(*(id *)(v33 + 16), sel_saveRequest);
      id v35 = objc_msgSend(v34, sel_updateTemplateSection_, v29);

      objc_msgSend(v35, sel_removeFromParentTemplate);
      id v36 = objc_msgSend(v29, sel_objectID);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v36;
      id v38 = v36;
      sub_1B90D9010((uint64_t)sub_1B926187C, v37);

      swift_release();
      swift_release();

      goto LABEL_13;
    }
    id v39 = a1;
    id v52 = objc_msgSend(v39, sel_parentTemplate);
    id v58 = v39;
    id v41 = objc_msgSend((id)MEMORY[0x1F4188790](v52), sel_store);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1B997C200;
    *(void *)(v53 + 32) = v52;
    unint64_t v63 = v53;
    sub_1B996EE70();
    unint64_t v54 = v63;
    id v44 = v52;
    uint64_t v45 = (void *)sub_1B96EADC4(v54, (uint64_t)v41, 0, (uint64_t)v70, 0, sub_1B9261884, (uint64_t)v57);
    sub_1B90D894C();
    uint64_t v46 = (void *)sub_1B996F860();
    unint64_t v55 = (void *)swift_allocObject();
    v55[3] = 0;
    v55[4] = 0;
    void v55[2] = v54;
    unint64_t v67 = sub_1B9261A3C;
    uint64_t v68 = v55;
    unint64_t v63 = MEMORY[0x1E4F143A8];
    uint64_t v64 = 1107296256;
    uint64_t v48 = &block_descriptor_16;
  }
  unint64_t v65 = sub_1B9140964;
  uint64_t v66 = v48;
  uint64_t v56 = _Block_copy(&v63);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_release();
  objc_msgSend(v45, sel_saveWithQueue_completion_, v46, v56);
  _Block_release(v56);

  swift_bridgeObjectRelease();
  sub_1B90D97EC((uint64_t)v70);
}

uint64_t sub_1B925FE60(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(*(id *)(a1 + 16), sel_saveRequest);
  id v4 = objc_msgSend(v3, sel_updateSmartListSection_, a2);

  objc_msgSend(v4, sel_removeFromSmartList);
  id v5 = objc_msgSend(a2, sel_objectID);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  id v7 = v5;
  uint64_t v8 = sub_1B9483390();
  sub_1B9124250(v8, (uint64_t)sub_1B9261A34, v6);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1B925FF68(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(*(id *)(a1 + 16), sel_saveRequest);
  id v4 = objc_msgSend(v3, sel_updateTemplateSection_, a2);

  objc_msgSend(v4, sel_removeFromParentTemplate);
  id v5 = objc_msgSend(a2, sel_objectID);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  id v7 = v5;
  sub_1B90D9010((uint64_t)sub_1B9261A38, v6);
  swift_release();
}

void TTRRemindersListInteractorSectionsCapability.addReminders(with:toExistingSection:in:initialSectionIDByReminderID:option:)(Swift::OpaquePointer a1, void *a2, void *a3, char a4, uint64_t a5, void *a6)
{
  void (*v12)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void (*v36)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void (*v48)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  unsigned __int8 v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  void *v91;
  void *v92;
  unsigned char v93[16];
  void *rawValue;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void *v99;
  uint64_t ObjectType;
  long long v101;
  uint64_t v102;
  _UNKNOWN **v103;
  unsigned char v104[40];
  long long aBlock;
  long long v106;
  uint64_t (*v107)(uint64_t);
  void *v108;
  long long v109;
  long long v110;
  uint64_t v111;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a6)
      {
        swift_beginAccess();
        if (MEMORY[0x1BA9DB180](v6 + 16))
        {
          uint64_t v98 = *(void *)(v6 + 24);
          uint64_t ObjectType = swift_getObjectType();
          id v12 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v98 + 8);
          id v13 = a5;
          uint64_t v14 = a3;
          id v15 = a6;
          id v16 = v14;
          a5 = v13;
          id v17 = v15;
          v12(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v98);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v107 = 0;
          uint64_t aBlock = 0u;
          uint64_t v106 = 0u;
          uint64_t v51 = a3;
          id v52 = a6;
          uint64_t v53 = v51;
          unint64_t v54 = v52;
        }
        sub_1B90D8A70((uint64_t)&aBlock, (uint64_t)&v109);
        unint64_t v55 = a3;
        uint64_t v56 = objc_msgSend(a6, sel_updateSmartList_, v55);

        type metadata accessor for TTRSmartListEditor();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v56;
        sub_1B90D8B78((uint64_t)&v109, v57 + 24);
        *(unsigned char *)(v57 + 64) = 0;
        sub_1B90D97EC((uint64_t)&aBlock);

        id v58 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        long long v59 = sub_1B90F6A44(v58);
        swift_bridgeObjectRelease();
        TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v59, a2, a5);
LABEL_29:

        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v6 + 16))
      {
        uint64_t v33 = *(void *)(v6 + 24);
        id v34 = swift_getObjectType();
        id v35 = a2;
        id v36 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v33 + 8);
        uint64_t v37 = a3;
        v36(&v109, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v34, v33);
        a2 = v35;
        id v38 = (id)swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v111 = 0;
        uint64_t v109 = 0u;
        uint64_t v110 = 0u;
        id v38 = a3;
      }
      rawValue = a1._rawValue;
      uint64_t v95 = a2;
      unint64_t v96 = a5;
      id v81 = objc_msgSend(a3, sel_store, MEMORY[0x1F4188790](v38).n128_f64[0]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
      uint64_t v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = xmmword_1B997C200;
      *(void *)(v82 + 32) = a3;
      *(void *)&uint64_t aBlock = v82;
      sub_1B996EE70();
      uint64_t v83 = aBlock;
      uint64_t v84 = a3;
      uint64_t v85 = (void *)sub_1B96EAD88(v83, (uint64_t)v81, 0, (uint64_t)&v109, 0, (void (*)(uint64_t))sub_1B9261940, (uint64_t)v93);
      sub_1B90D894C();
      id v86 = (void *)sub_1B996F860();
      uint64_t v87 = (void *)swift_allocObject();
      v87[3] = 0;
      v87[4] = 0;
      v87[2] = v83;
      uint64_t v107 = sub_1B9261A3C;
      uint64_t v108 = v87;
      *(void *)&uint64_t aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v88 = &block_descriptor_40_0;
    }
    else
    {
      if (a6)
      {
        swift_beginAccess();
        if (MEMORY[0x1BA9DB180](v6 + 16))
        {
          uint64_t v98 = *(void *)(v6 + 24);
          uint64_t ObjectType = swift_getObjectType();
          id v27 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v98 + 8);
          uint64_t v28 = a5;
          id v29 = a3;
          id v30 = a6;
          id v31 = v29;
          a5 = v28;
          id v32 = v30;
          v27(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v98);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v107 = 0;
          uint64_t aBlock = 0u;
          uint64_t v106 = 0u;
          uint64_t v73 = a3;
          uint64_t v74 = a6;
          uint64_t v75 = v73;
          uint64_t v76 = v74;
        }
        sub_1B90D8A70((uint64_t)&aBlock, (uint64_t)&v109);
        unint64_t v55 = a3;
        uint64_t v77 = objc_msgSend(a6, sel_updateTemplate_, v55);

        type metadata accessor for TTRTemplateEditor();
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = v77;
        sub_1B90D8B78((uint64_t)&v109, v78 + 24);
        *(unsigned char *)(v78 + 64) = 0;
        sub_1B90D97EC((uint64_t)&aBlock);

        uint64_t v79 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        unint64_t v80 = sub_1B90F6A44(v79);
        swift_bridgeObjectRelease();
        TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v80, a2, a5);
        goto LABEL_29;
      }
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v6 + 16))
      {
        uint64_t v45 = *(void *)(v6 + 24);
        uint64_t v46 = swift_getObjectType();
        uint64_t v47 = a2;
        uint64_t v48 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v45 + 8);
        id v49 = a3;
        v48(&v109, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v46, v45);
        a2 = v47;
        id v50 = (id)swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v111 = 0;
        uint64_t v109 = 0u;
        uint64_t v110 = 0u;
        id v50 = a3;
      }
      rawValue = a1._rawValue;
      uint64_t v95 = a2;
      unint64_t v96 = a5;
      id v81 = objc_msgSend(a3, sel_store, MEMORY[0x1F4188790](v50).n128_f64[0]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
      unint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = xmmword_1B997C200;
      *(void *)(v89 + 32) = a3;
      *(void *)&uint64_t aBlock = v89;
      sub_1B996EE70();
      uint64_t v90 = aBlock;
      uint64_t v84 = a3;
      uint64_t v85 = (void *)sub_1B96EADC4(v90, (uint64_t)v81, 0, (uint64_t)&v109, 0, (void (*)(uint64_t))sub_1B9261908, (uint64_t)v93);
      sub_1B90D894C();
      id v86 = (void *)sub_1B996F860();
      unint64_t v91 = (void *)swift_allocObject();
      void v91[3] = 0;
      v91[4] = 0;
      v91[2] = v90;
      uint64_t v107 = sub_1B9261A3C;
      uint64_t v108 = v91;
      *(void *)&uint64_t aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v88 = &block_descriptor_33_0;
    }
    *(void *)&uint64_t v106 = sub_1B9140964;
    *((void *)&v106 + 1) = v88;
    uint64_t v92 = _Block_copy(&aBlock);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    objc_msgSend(v85, sel_saveWithQueue_completion_, v86, v92);
    _Block_release(v92);

    swift_bridgeObjectRelease();
    sub_1B90D97EC((uint64_t)&v109);
  }
  else if (a6)
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v6 + 16))
    {
      uint64_t v99 = a2;
      uint64_t v18 = *(void *)(v6 + 24);
      uint64_t ObjectType = a5;
      id v19 = swift_getObjectType();
      uint64_t v98 = *(void *)(v18 + 8);
      uint64_t v20 = a1._rawValue;
      id v21 = a3;
      id v22 = a6;
      id v23 = v21;
      a1._rawValue = v20;
      id v24 = v22;
      id v25 = v19;
      a5 = ObjectType;
      id v26 = v18;
      a2 = v99;
      ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))v98)(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v25, v26);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v107 = 0;
      uint64_t aBlock = 0u;
      uint64_t v106 = 0u;
      uint64_t v60 = a3;
      uint64_t v61 = a6;
      uint64_t v62 = v60;
      unint64_t v63 = v61;
    }
    sub_1B90D8A70((uint64_t)&aBlock, (uint64_t)&v109);
    uint64_t v64 = a3;
    unint64_t v65 = objc_msgSend(a6, sel_updateList_, v64);
    sub_1B90D8A70((uint64_t)&v109, (uint64_t)v104);
    if (qword_1EB9B5330 != -1) {
      swift_once();
    }
    uint64_t v66 = (id)static TTRUserDefaults.appUserDefaults;

    sub_1B90D97EC((uint64_t)&v109);
    type metadata accessor for TTRListEditor();
    unint64_t v67 = swift_allocObject();
    unsigned int v102 = type metadata accessor for TTRUserDefaults();
    uint64_t v103 = &protocol witness table for TTRUserDefaults;
    *(void *)&unint64_t v101 = v66;
    *(unsigned char *)(v67 + 64) = 0;
    *(void *)(v67 + 16) = v65;
    sub_1B90D8B78((uint64_t)v104, v67 + 24);
    swift_beginAccess();
    *(unsigned char *)(v67 + 64) = 0;
    sub_1B9101700(&v101, v67 + 72);
    sub_1B90D97EC((uint64_t)&aBlock);

    uint64_t v68 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    unint64_t v69 = sub_1B90F6A44(v68);
    swift_bridgeObjectRelease();
    TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v69, a2, a5);
    swift_bridgeObjectRelease();
    uint64_t v70 = objc_msgSend(v64, sel_groceryContext);
    if (v70)
    {
      id v71 = v70;
      char v72 = objc_msgSend(v70, sel_shouldCategorizeGroceryItems);

      if (v72) {
        TTRListEditor.categorizeGroceryItems(withReminderIDs:)(a1);
      }
    }

    swift_release();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v6 + 16))
    {
      id v39 = *(void *)(v6 + 24);
      id v40 = swift_getObjectType();
      id v41 = a5;
      uint64_t v42 = *(void (**)(long long *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v39 + 8);
      unint64_t v43 = a3;
      v42(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v40, v39);
      a5 = v41;
      id v44 = (id)swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v107 = 0;
      uint64_t aBlock = 0u;
      uint64_t v106 = 0u;
      id v44 = a3;
    }
    MEMORY[0x1F4188790](v44);
    rawValue = a1._rawValue;
    uint64_t v95 = a2;
    unint64_t v96 = a5;
    uint64_t v97 = a3;
    sub_1B96EA9E4(a3, (uint64_t)&aBlock, 0, 0, sub_1B9261978);
    sub_1B90D97EC((uint64_t)&aBlock);
  }
}

uint64_t _s15RemindersUICore44TTRRemindersListInteractorSectionsCapabilityC3add_17toExistingSection2in07initialK14IDByReminderID6optionySaySo11REMReminderCG_AA010TTRSectionP0OAA0cdefG6TargetOSDySo09REMObjectP0CAMGSgAA16TTREditingOptionOtF_0(unint64_t a1, void *a2, void *a3, char a4, uint64_t a5, void *a6)
{
  if (a1 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    uint64_t v12 = sub_1B9970930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v13 = (void *)MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    uint64_t result = sub_1B99705D0();
    if (v12 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x1BA9D9380](v15, a1);
      }
      else {
        id v16 = *(id *)(a1 + 8 * v15 + 32);
      }
      id v17 = v16;
      ++v15;
      id v18 = objc_msgSend(v16, sel_objectID);

      sub_1B99705A0();
      sub_1B99705E0();
      sub_1B99705F0();
      sub_1B99705B0();
    }
    while (v12 != v15);
    id v13 = v20;
  }
  v19._rawValue = v13;
  TTRRemindersListInteractorSectionsCapability.addReminders(with:toExistingSection:in:initialSectionIDByReminderID:option:)(v19, a2, a3, a4, a5, a6);

  return swift_bridgeObjectRelease();
}

void TTRRemindersListInteractorSectionsCapability.updateOrderingOfSections(withSectionIDsOrdering:in:initialSectionIDsOrdering:option:)(Swift::OpaquePointer a1, void *a2, char a3, void *a4, void *a5)
{
  void (*v12)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t);
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t);
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *rawValue;
  void *v78;
  void *v79;
  void *v80;
  long long v81;
  uint64_t v82;
  _UNKNOWN **v83;
  unsigned char v84[40];
  unsigned char v85[40];
  long long v86;
  long long v87;
  uint64_t v88;
  Swift::OpaquePointer_optional v89;
  Swift::OpaquePointer_optional v90;
  Swift::OpaquePointer_optional v91;

  if (a3)
  {
    if (a3 == 1)
    {
      if (a5)
      {
        swift_beginAccess();
        if (MEMORY[0x1BA9DB180](v5 + 2))
        {
          uint64_t v10 = v5[3];
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v78 = a4;
          uint64_t v12 = *(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v10 + 8);
          id v13 = a2;
          uint64_t v14 = a5;
          uint64_t v15 = v13;
          id v16 = v14;
          v12(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v10);
          a4 = v78;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v88 = 0;
          id v86 = 0u;
          uint64_t v87 = 0u;
          uint64_t v51 = a2;
          id v52 = a5;
          uint64_t v53 = v51;
          unint64_t v54 = v52;
        }
        sub_1B90D8A70((uint64_t)&v86, (uint64_t)v85);
        unint64_t v55 = a2;
        uint64_t v56 = objc_msgSend(a5, sel_updateSmartList_, v55);

        type metadata accessor for TTRSmartListEditor();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v56;
        sub_1B90D8B78((uint64_t)v85, v57 + 24);
        *(unsigned char *)(v57 + 64) = 0;
        sub_1B90D97EC((uint64_t)&v86);

        v89.value._rawValue = a4;
        TTRSmartListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v89);
LABEL_26:

LABEL_27:
        swift_release();

        return;
      }
      id v32 = v5[8];
      __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B997C200;
      *(void *)(v33 + 32) = a2;
      *(void *)&id v86 = v33;
      sub_1B996EE70();
      id v34 = v86;
      id v35 = a2;
      id v36 = objc_msgSend(v35, sel_store);
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v5 + 2))
      {
        uint64_t v37 = v5[3];
        id v38 = swift_getObjectType();
        (*(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v37 + 8))(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v38, v37);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v88 = 0;
        id v86 = 0u;
        uint64_t v87 = 0u;
      }
      id v71 = type metadata accessor for TTRSmartListEditor();
      uint64_t v74 = MEMORY[0x1F4188790](v71);
      (*(void (**)(uint64_t, uint64_t, id, long long *, uint64_t (*)(uint64_t)))(v32 + 8))(v74, v34, v36, &v86, sub_1B926199C);
    }
    else
    {
      if (a5)
      {
        swift_beginAccess();
        if (MEMORY[0x1BA9DB180](v5 + 2))
        {
          id v25 = v5[3];
          id v26 = swift_getObjectType();
          unint64_t v80 = a4;
          id v27 = *(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v25 + 8);
          uint64_t v28 = a2;
          id v29 = a5;
          id v30 = v28;
          id v31 = v29;
          v27(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v26, v25);
          a4 = v80;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v88 = 0;
          id v86 = 0u;
          uint64_t v87 = 0u;
          unint64_t v65 = a2;
          uint64_t v66 = a5;
          unint64_t v67 = v65;
          uint64_t v68 = v66;
        }
        sub_1B90D8A70((uint64_t)&v86, (uint64_t)v85);
        unint64_t v55 = a2;
        unint64_t v69 = objc_msgSend(a5, sel_updateTemplate_, v55);

        type metadata accessor for TTRTemplateEditor();
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = v69;
        sub_1B90D8B78((uint64_t)v85, v70 + 24);
        *(unsigned char *)(v70 + 64) = 0;
        sub_1B90D97EC((uint64_t)&v86);

        v91.value._rawValue = a4;
        TTRTemplateEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v91);
        goto LABEL_26;
      }
      uint64_t v46 = v5[8];
      __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1B997C200;
      *(void *)(v47 + 32) = a2;
      *(void *)&id v86 = v47;
      sub_1B996EE70();
      uint64_t v48 = v86;
      id v35 = a2;
      id v36 = objc_msgSend(v35, sel_store);
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v5 + 2))
      {
        id v49 = v5[3];
        id v50 = swift_getObjectType();
        (*(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v49 + 8))(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v50, v49);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v88 = 0;
        id v86 = 0u;
        uint64_t v87 = 0u;
      }
      uint64_t v73 = type metadata accessor for TTRTemplateEditor();
      uint64_t v76 = MEMORY[0x1F4188790](v73);
      (*(void (**)(uint64_t, uint64_t, id, long long *, uint64_t (*)(uint64_t)))(v46 + 8))(v76, v48, v36, &v86, sub_1B9261984);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    if (a5)
    {
      swift_beginAccess();
      if (MEMORY[0x1BA9DB180](v5 + 2))
      {
        rawValue = a1._rawValue;
        id v17 = v5[3];
        id v18 = swift_getObjectType();
        uint64_t v79 = a4;
        Swift::OpaquePointer v19 = *(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v17 + 8);
        uint64_t v20 = a2;
        id v21 = a5;
        id v22 = v20;
        id v23 = v21;
        id v24 = v17;
        a1._rawValue = rawValue;
        v19(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v18, v24);
        a4 = v79;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v88 = 0;
        id v86 = 0u;
        uint64_t v87 = 0u;
        id v58 = a2;
        long long v59 = a5;
        uint64_t v60 = v58;
        uint64_t v61 = v59;
      }
      sub_1B90D8A70((uint64_t)&v86, (uint64_t)v85);
      unint64_t v55 = a2;
      uint64_t v62 = objc_msgSend(a5, sel_updateList_, v55);
      sub_1B90D8A70((uint64_t)v85, (uint64_t)v84);
      if (qword_1EB9B5330 != -1) {
        swift_once();
      }
      unint64_t v63 = (id)static TTRUserDefaults.appUserDefaults;

      sub_1B90D97EC((uint64_t)v85);
      type metadata accessor for TTRListEditor();
      uint64_t v64 = swift_allocObject();
      uint64_t v83 = &protocol witness table for TTRUserDefaults;
      uint64_t v82 = type metadata accessor for TTRUserDefaults();
      *(void *)&id v81 = v63;
      *(unsigned char *)(v64 + 64) = 0;
      *(void *)(v64 + 16) = v62;
      sub_1B90D8B78((uint64_t)v84, v64 + 24);
      swift_beginAccess();
      *(unsigned char *)(v64 + 64) = 0;
      sub_1B9101700(&v81, v64 + 72);
      sub_1B90D97EC((uint64_t)&v86);

      v90.value._rawValue = a4;
      TTRListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v90);

      goto LABEL_27;
    }
    id v39 = v5[8];
    __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
    id v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1B997C200;
    *(void *)(v40 + 32) = a2;
    *(void *)&id v86 = v40;
    sub_1B996EE70();
    id v41 = v86;
    uint64_t v42 = a2;
    unint64_t v43 = objc_msgSend(v42, sel_store);
    swift_beginAccess();
    if (MEMORY[0x1BA9DB180](v5 + 2))
    {
      id v44 = v5[3];
      uint64_t v45 = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, void *, _UNKNOWN **, uint64_t, uint64_t))(v44 + 8))(&v86, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v45, v44);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v88 = 0;
      id v86 = 0u;
      uint64_t v87 = 0u;
    }
    char v72 = type metadata accessor for TTRListEditor();
    uint64_t v75 = MEMORY[0x1F4188790](v72);
    (*(void (**)(uint64_t, uint64_t, id, long long *, uint64_t (*)(uint64_t)))(v39 + 8))(v75, v41, v43, &v86, sub_1B92619B4);

    swift_bridgeObjectRelease();
  }
  sub_1B90D97EC((uint64_t)&v86);
}

void sub_1B92616B4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5)
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v9 = sub_1B90F6A44(a2);
  swift_bridgeObjectRelease();
  TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v9, a3, a4);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a5, sel_groceryContext);
  if (v10)
  {
    id v11 = v10;
    unsigned int v12 = objc_msgSend(v10, sel_shouldCategorizeGroceryItems);

    if (v12) {
      TTRListEditor.categorizeGroceryItems(withReminderIDs:)((Swift::OpaquePointer)a2);
    }
  }
}

uint64_t sub_1B9261768(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v9 = sub_1B90F6A44(a2);
  swift_bridgeObjectRelease();
  a5(v9, a3, a4);

  return swift_bridgeObjectRelease();
}

uint64_t TTRRemindersListInteractorSectionsCapability.deinit()
{
  sub_1B90D88A0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t TTRRemindersListInteractorSectionsCapability.__deallocating_deinit()
{
  sub_1B90D88A0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1B926186C(uint64_t a1)
{
  return sub_1B916A20C(a1, v1[2], v1[3], v1[4]);
}

void sub_1B926187C(uint64_t a1)
{
  sub_1B963AF4C(a1, *(void **)(v1 + 16));
}

void sub_1B9261884(uint64_t a1)
{
  sub_1B925FF68(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B9261890()
{
  return swift_deallocObject();
}

id sub_1B92618C8(uint64_t a1)
{
  return sub_1B9485510(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B92618D0(uint64_t a1)
{
  return sub_1B925FE60(a1, *(void **)(v1 + 16));
}

void sub_1B92618DC()
{
  TTRListEditor.deleteSection(_:)(*(void **)(v0 + 16));
}

uint64_t sub_1B9261908(uint64_t a1)
{
  return sub_1B9261768(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (void (*)(uint64_t, uint64_t, uint64_t))TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:));
}

uint64_t sub_1B9261940(uint64_t a1)
{
  return sub_1B9261768(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (void (*)(uint64_t, uint64_t, uint64_t))TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:));
}

void sub_1B9261978(uint64_t a1)
{
  sub_1B92616B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1B9261984(uint64_t a1)
{
  return sub_1B92619CC(a1, (uint64_t (*)(void, void))TTRTemplateEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B926199C(uint64_t a1)
{
  return sub_1B92619CC(a1, (uint64_t (*)(void, void))TTRSmartListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B92619B4(uint64_t a1)
{
  return sub_1B92619CC(a1, (uint64_t (*)(void, void))TTRListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B92619CC(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)(v2 + 16), *(void *)(v2 + 24));
}

ValueMetadata *type metadata accessor for TTRRemindersListInteractorSectionsCapabilityTarget()
{
  return &type metadata for TTRRemindersListInteractorSectionsCapabilityTarget;
}

uint64_t type metadata accessor for TTRRemindersListInteractorSectionsCapability()
{
  return self;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.resultsPublisher.getter()
{
  return sub_1B996DBB0();
}

unint64_t sub_1B9261ABC()
{
  unint64_t result = qword_1E9EFE4D0;
  if (!qword_1E9EFE4D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9EFB090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE4D0);
  }
  return result;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFB090);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1B996DA40();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFB090);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1B996DA40();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.search(title:listScope:)()
{
  return sub_1B9261C08(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E4FBC860]);
}

uint64_t sub_1B9261C08(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.syncHandleAutoCompleteReminders(_:for:imagesByReminderObjectID:reminderAndList:)()
{
  return 0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.deinit()
{
  swift_release();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B9261C88()
{
  return sub_1B996DBB0();
}

uint64_t sub_1B9261CDC()
{
  return 0;
}

uint64_t type metadata accessor for TTRReminderTitleAttributesNoOpInteractor()
{
  return self;
}

uint64_t sub_1B9261D14()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1EB9B1288);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B1288);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t TTRAppDelegateUtils.TriggerSyncReason.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0x7669746341707061;
  uint64_t v3 = 0x7463616544707061;
  if (a2 != 2) {
    uint64_t v3 = a1;
  }
  if (a2 != 1) {
    uint64_t v2 = v3;
  }
  if (a2) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x636E75614C707061;
  }
  sub_1B9261E84(a1, a2);
  return v4;
}

uint64_t sub_1B9261E84(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return result;
}

uint64_t sub_1B9261E98()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x7669746341707061;
  uint64_t v3 = 0x7463616544707061;
  if (v1 != 2) {
    uint64_t v3 = *v0;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x636E75614C707061;
  }
  sub_1B9261E84(*v0, v1);
  return v4;
}

void static TTRAppDelegateUtils.triggerSync(store:reason:)(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3)
  {
    if (qword_1EB9B1258 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1B996D300();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB9B1288);
    sub_1B9261E84(a2, a3);
    sub_1B9261E84(a2, a3);
    id v7 = sub_1B996D2F0();
    os_log_type_t v8 = sub_1B996F660();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      aBlock[0] = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      unint64_t v11 = 0xEF6E6F6974617669;
      uint64_t v12 = 0x7463616544707061;
      if (a3 != 2)
      {
        uint64_t v12 = a2;
        unint64_t v11 = a3;
      }
      if (a3 == 1) {
        uint64_t v13 = 0x7669746341707061;
      }
      else {
        uint64_t v13 = v12;
      }
      if (a3 == 1) {
        unint64_t v14 = 0xED00006E6F697461;
      }
      else {
        unint64_t v14 = v11;
      }
      sub_1B9261E84(a2, a3);
      sub_1B90D2A1C(v13, v14, aBlock);
      sub_1B99700D0();
      swift_bridgeObjectRelease();
      sub_1B9262994(a2, a3);
      sub_1B9262994(a2, a3);
      _os_log_impl(&dword_1B90A0000, v7, v8, "AppDelegate: trigger throttled sync {reason: %s}", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v10, -1, -1);
      MEMORY[0x1BA9DB030](v9, -1, -1);
    }
    else
    {
      sub_1B9262994(a2, a3);
      sub_1B9262994(a2, a3);
    }

    uint64_t v24 = *MEMORY[0x1E4F95070];
    aBlock[4] = (uint64_t)sub_1B926246C;
    void aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B9140964;
    void aBlock[3] = (uint64_t)&block_descriptor_18;
    id v25 = _Block_copy(aBlock);
    objc_msgSend(a1, sel_triggerThrottledSyncWithReason_discretionary_completion_, v24, 0, v25);
    _Block_release(v25);
  }
  else
  {
    if (qword_1EB9B1258 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1B996D300();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB9B1288);
    id v16 = sub_1B996D2F0();
    os_log_type_t v17 = sub_1B996F660();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      sub_1B90D2A1C(0x636E75614C707061, 0xEB00000000646568, aBlock);
      sub_1B99700D0();
      _os_log_impl(&dword_1B90A0000, v16, v17, "AppDelegate: trigger account update and sync {reason: %s}", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v19, -1, -1);
      MEMORY[0x1BA9DB030](v18, -1, -1);
    }

    id v20 = objc_msgSend(a1, sel_nonUserInteractiveStore);
    if (qword_1EB9B1280 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B996E5D0();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB9B1260);
    sub_1B90D894C();
    id v23 = (void *)sub_1B996F860();
    sub_1B92629A8(v22, (uint64_t)v23, v20);
  }
}

uint64_t sub_1B92623DC()
{
  uint64_t v0 = sub_1B996E5D0();
  __swift_allocate_value_buffer(v0, qword_1EB9B1260);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EB9B1260) = 2;
  unint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

void sub_1B926246C(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_1EB9B1258 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B996D300();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB9B1288);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_1B996D2F0();
    os_log_type_t v6 = sub_1B996F640();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v13 = v8;
      *(_DWORD *)id v7 = 136315138;
      id v9 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B5FD0);
      uint64_t v10 = sub_1B996EA30();
      sub_1B90D2A1C(v10, v11, &v13);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, oslog, v6, "AppDelegate: sync failed {error: %s}", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v8, -1, -1);
      MEMORY[0x1BA9DB030](v7, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1B926267C(void *a1)
{
  v3[4] = sub_1B9262728;
  v3[5] = 0;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 1107296256;
  v3[2] = sub_1B926290C;
  v3[3] = &block_descriptor_6_2;
  id v2 = _Block_copy(v3);
  objc_msgSend(a1, sel_updateAccountsAndSync_completion_, 1, v2);
  _Block_release(v2);
}

void sub_1B9262728(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    if (qword_1EB9B1258 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B996D300();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB9B1288);
    id v5 = a3;
    id v6 = a3;
    oslog = sub_1B996D2F0();
    os_log_type_t v7 = sub_1B996F640();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = sub_1B9970050();
      sub_1B90D2A1C(v10, v11, &v13);
      sub_1B99700D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B90A0000, oslog, v7, "Unable to update cloud accounts %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9DB030](v9, -1, -1);
      MEMORY[0x1BA9DB030](v8, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1B926290C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  os_log_type_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_1B9262994(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B92629A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v32 = a2;
  uint64_t v3 = sub_1B996E5E0();
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B996E610();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B996E5D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B996E630();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  sub_1B996E620();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  sub_1B92FB2E0((uint64_t)v12);
  MEMORY[0x1BA9D7470](v16);
  id v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v28;
  *(void *)(v21 + 16) = v28;
  aBlock[4] = sub_1B9263018;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B90D81AC;
  void aBlock[3] = &block_descriptor_3_1;
  id v23 = _Block_copy(aBlock);
  id v24 = v22;
  sub_1B996E600();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1B90D866C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5F80);
  sub_1B90D86C4();
  sub_1B99702A0();
  MEMORY[0x1BA9D8620](v19, v8, v5, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  v20(v19, v13);
  return swift_release();
}

ValueMetadata *type metadata accessor for TTRAppDelegateUtils()
{
  return &type metadata for TTRAppDelegateUtils;
}

unint64_t destroy for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s15RemindersUICore19TTRAppDelegateUtilsO17TriggerSyncReasonOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return a1;
}

void *assignWithCopy for TTRAppDelegateUtils.TriggerSyncReason(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRAppDelegateUtils.TriggerSyncReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

void *sub_1B9262FB0(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAppDelegateUtils.TriggerSyncReason()
{
  return &type metadata for TTRAppDelegateUtils.TriggerSyncReason;
}

uint64_t sub_1B9262FE0()
{
  return swift_deallocObject();
}

void sub_1B9263018()
{
  sub_1B926267C(*(void **)(v0 + 16));
}

uint64_t sub_1B9263028(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = v3;
  *(void *)(v4 + 48) = a1;
  *(double *)(v4 + 40) = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0F80);
  *(void *)(v4 + 72) = v5;
  *(void *)(v4 + 80) = *(void *)(v5 - 8);
  *(void *)(v4 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4AD0);
  *(void *)(v4 + 96) = swift_task_alloc();
  uint64_t v6 = sub_1B996E5F0();
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 112) = *(void *)(v6 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B4BD0);
  *(void *)(v4 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0FE0);
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v7 = sub_1B9970010();
  *(void *)(v4 + 144) = v7;
  *(void *)(v4 + 152) = *(void *)(v7 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B0FC8);
  *(void *)(v4 + 168) = v8;
  *(void *)(v4 + 176) = *(void *)(v8 - 8);
  *(void *)(v4 + 184) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0F70);
  *(void *)(v4 + 192) = v9;
  *(void *)(v4 + 200) = *(void *)(v9 - 8);
  *(void *)(v4 + 208) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0F90);
  *(void *)(v4 + 216) = v10;
  *(void *)(v4 + 224) = *(void *)(v10 - 8);
  *(void *)(v4 + 232) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0F60);
  *(void *)(v4 + 240) = v11;
  *(void *)(v4 + 248) = *(void *)(v11 - 8);
  *(void *)(v4 + 256) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B92633BC, 0, 0);
}

uint64_t sub_1B92633BC()
{
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v28 = *(void *)(v0 + 224);
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 48);
  uint64_t v25 = *(void *)(v0 + 56);
  sub_1B996DAB0();
  sub_1B9970000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v4, 1, 1, v2);
  *(void *)(v0 + 16) = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v6 = sub_1B996FFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1B90BFD68(0, &qword_1EB9B4BF0);
  sub_1B90C3338(&qword_1EB9B0FC0, (uint64_t *)&unk_1EB9B0FC8);
  sub_1B91B714C((unint64_t *)&qword_1EB9B4BE0, &qword_1EB9B4BF0);
  sub_1B996DC60();
  sub_1B90CCA68(v5, (uint64_t *)&unk_1EB9B4BD0);

  sub_1B90CCA68(v4, &qword_1EB9B0FE0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v2);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v15);
  sub_1B90BFD68(0, (unint64_t *)&qword_1EB9B5FA0);
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E4FBCB48], v18);
  uint64_t v7 = sub_1B996F890();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v18);
  *(void *)(v0 + 24) = v7;
  uint64_t v8 = sub_1B996F810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v20, 1, 1, v8);
  sub_1B90C3338(&qword_1EB9B0F68, &qword_1EB9B0F70);
  sub_1B91B714C((unint64_t *)&qword_1EB9B4AE0, (unint64_t *)&qword_1EB9B5FA0);
  sub_1B996DD00();
  sub_1B90CCA68(v20, (uint64_t *)&unk_1EB9B4AD0);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v21);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v24;
  *(void *)(v9 + 24) = v25;
  type metadata accessor for CLAuthorizationStatus(0);
  sub_1B90C3338(&qword_1EB9B0F88, &qword_1EB9B0F90);
  swift_retain();
  sub_1B996DC20();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v26);
  *(void *)(v0 + 32) = *(void *)(v27 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0F20);
  sub_1B90C3338((unint64_t *)&unk_1EB9B0B40, &qword_1EB9B0F20);
  sub_1B90C3338(&qword_1EB9B0F58, &qword_1EB9B0F60);
  sub_1B996DC70();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v10;
  uint64_t v11 = sub_1B90C3338(&qword_1EB9B0F78, &qword_1EB9B0F80);
  *uint64_t v10 = v0;
  v10[1] = sub_1B92639B0;
  uint64_t v12 = *(void *)(v0 + 72);
  return MEMORY[0x1F4149318](v0 + 272, v12, v11);
}

uint64_t sub_1B92639B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1B9263B08, 0, 0);
}

uint64_t sub_1B9263B08()
{
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
  unsigned int v3 = *(_DWORD *)(v0 + 272);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(v3);
}

uint64_t sub_1B9263C14(int a1)
{
  if (qword_1EB9B0E88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B996D300();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB9B0B10);
  unsigned int v3 = sub_1B996D2F0();
  os_log_type_t v4 = sub_1B996F660();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_1B996FA70();
    sub_1B90D2A1C(v7, v8, &v10);
    sub_1B99700D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B90A0000, v3, v4, "TTRLocationAuthorizationTracker: authorization status changed {status: %s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9DB030](v6, -1, -1);
    MEMORY[0x1BA9DB030](v5, -1, -1);
  }

  LODWORD(v10) = a1;
  sub_1B996CBD0();
  LODWORD(v10) = a1;
  return sub_1B996DA30();
}

uint64_t sub_1B9263DBC()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1EB9B0B10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B0B10);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1B9263E84@<X0>(uint64_t (*a1)(void)@<X1>, _DWORD *a2@<X8>)
{
  if (qword_1EB9B0E88 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B996D300();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB9B0B10);
  uint64_t v5 = sub_1B996D2F0();
  os_log_type_t v6 = sub_1B996F640();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B90A0000, v5, v6, "TTRLocationAuthorizationTracker: force checking CLAuthorizationStatus", v7, 2u);
    MEMORY[0x1BA9DB030](v7, -1, -1);
  }

  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1B9263F80()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1B9263FA0, 0, 0);
}

uint64_t sub_1B9263FA0()
{
  if (qword_1EB9B0E88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B996D300();
  v0[4] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB9B0B10);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "TTRLocationAuthorizationTracker: awaiting authorization status change", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }
  uint64_t v5 = v0[3];

  v0[2] = *(void *)(v5 + 24);
  os_log_type_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B0B60);
  uint64_t v8 = sub_1B90C3338(&qword_1E9EFE4E8, &qword_1EB9B0B60);
  *os_log_type_t v6 = v0;
  v6[1] = sub_1B9264154;
  return MEMORY[0x1F4149318](v0 + 6, v7, v8);
}

uint64_t sub_1B9264154()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B9264250, 0, 0);
}

uint64_t sub_1B9264250()
{
  uint64_t v1 = *(unsigned int *)(v0 + 48);
  uint64_t v2 = sub_1B996D2F0();
  os_log_type_t v3 = sub_1B996F660();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1B90A0000, v2, v3, "TTRLocationAuthorizationTracker: finish awaiting authorization status change", v4, 2u);
    MEMORY[0x1BA9DB030](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v1);
}

uint64_t sub_1B9264328()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRLocationAuthorizationTracker()
{
  return self;
}

uint64_t sub_1B926438C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B92643C4@<X0>(_DWORD *a1@<X8>)
{
  return sub_1B9263E84(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1B92643CC()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFE4F8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFE4F8);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static TTRLocalizableStrings.showButtonTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.hideButtonTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.GroupDetail.includedListsCountText(withCount:)(uint64_t a1)
{
  return sub_1B9265494(a1);
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.cancelButtonTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.openRemindersButtonTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.notificationAccessTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.contactsAccessTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.deleteReminderPrivacyWarningTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.deleteReminderPrivacyWarningMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingMessage.getter()
{
  if (sub_1B996AF70())
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.locationAuthOpenReminderTitleForRemindersInCalendar.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.locationAuthOpenReminderMessageForRemindersInCalendar.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.singleItemTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)(uint64_t a1)
{
  return sub_1B9265494(a1);
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsSubtitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  if (a2)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = a1;
  uint64_t v6 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Common.imagesCountText(withCount:)(uint64_t a1)
{
  return sub_1B9265494(a1);
}

uint64_t sub_1B9265494(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Common.recurrenceFormat.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.pinText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.unpinText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.pinListText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.unpinListText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.showListInfoText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteCompletedRemindersConfirmationText(withCount:isForGroceries:supportRecentlyDeletedList:)(uint64_t a1, char a2, char a3)
{
  if (a3)
  {
    if (a2)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a2)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a1;
  uint64_t v7 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertTitleForDeletingSections(isDeletingMoreThanOneSection:currentLayout:)(char a1, char a2)
{
  if (a2)
  {
    if (a1)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertMessageForDeletingSections(isDeletingMoreThanOneSection:hasCompletedReminders:currentLayout:)(char a1, char a2, char a3)
{
  if (a3)
  {
    if (a1)
    {
      if (a2)
      {
        if (qword_1EB9B6110 != -1) {
          swift_once();
        }
      }
      else if (qword_1EB9B6110 != -1)
      {
        swift_once();
      }
    }
    else if (a2)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a1)
  {
    if (a2)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
    }
    else if (qword_1EB9B6110 != -1)
    {
      swift_once();
    }
  }
  else if (a2)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.newSectionPlaceholder(listLayout:)(char a1)
{
  return sub_1B9270358(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.existingSectionPlaceholder(listLayout:)(char a1)
{
  return sub_1B92704D0(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.moveToSectionFormat()()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.delete.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.showDetails.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.flag.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.unflag.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.indent.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.outdent.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToTomorrow.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToThisWeekend.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToNextWeekend.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.setCustomDateAndTime.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.move.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.allTagsText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.untagMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.removeTagMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.convertToTagMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(uint64_t a1)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v2 + 16) = xmmword_1B997AB90;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 <= 0) {
    int v5 = a3 > 0;
  }
  else {
    int v5 = 2 * (a3 > 0);
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B9270658((uint64_t)v41);
  sub_1B91829F8(v41, (uint64_t)&v42);
  if (v45)
  {
    if (v45 == 1)
    {
      long long v6 = v42;
      uint64_t v8 = v43;
      uint64_t v7 = v44;
      if (v5)
      {
        if (v5 == 1)
        {
          if (qword_1EB9B6110 != -1) {
            swift_once();
          }
          sub_1B996A200();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B997ABA0;
          uint64_t v10 = MEMORY[0x1E4FBB1A0];
          *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v11 = sub_1B90CCBAC();
          *(_OWORD *)(v9 + 32) = v6;
          *(void *)(v9 + 96) = v10;
          *(void *)(v9 + 104) = v11;
          *(void *)(v9 + 64) = v11;
          *(void *)(v9 + 72) = v8;
          uint64_t v12 = MEMORY[0x1E4FBB550];
          *(void *)(v9 + 80) = v7;
          uint64_t v13 = MEMORY[0x1E4FBB5C8];
LABEL_21:
          *(void *)(v9 + 136) = v12;
          *(void *)(v9 + 144) = v13;
          *(void *)(v9 + 112) = a3;
          goto LABEL_42;
        }
        if (qword_1EB9B6110 != -1) {
          swift_once();
        }
        sub_1B996A200();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1B997C1F0;
        uint64_t v26 = MEMORY[0x1E4FBB1A0];
        *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v27 = sub_1B90CCBAC();
        *(_OWORD *)(v25 + 32) = v6;
        *(void *)(v25 + 96) = v26;
        *(void *)(v25 + 104) = v27;
        *(void *)(v25 + 64) = v27;
        *(void *)(v25 + 72) = v8;
        *(void *)(v25 + 80) = v7;
        uint64_t v28 = MEMORY[0x1E4FBB550];
        uint64_t v29 = MEMORY[0x1E4FBB5C8];
        goto LABEL_41;
      }
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1B997ABA0;
      uint64_t v21 = MEMORY[0x1E4FBB1A0];
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v22 = sub_1B90CCBAC();
      *(_OWORD *)(v20 + 32) = v6;
      *(void *)(v20 + 96) = v21;
      *(void *)(v20 + 104) = v22;
      *(void *)(v20 + 64) = v22;
      *(void *)(v20 + 72) = v8;
      uint64_t v23 = MEMORY[0x1E4FBB550];
      *(void *)(v20 + 80) = v7;
      uint64_t v24 = MEMORY[0x1E4FBB5C8];
    }
    else
    {
      long long v17 = v42;
      uint64_t v18 = v43;
      if (v5)
      {
        if (v5 == 1)
        {
          if (qword_1EB9B6110 != -1) {
            swift_once();
          }
          sub_1B996A200();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B997ABA0;
          *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v19 = sub_1B90CCBAC();
          *(_OWORD *)(v9 + 32) = v17;
          uint64_t v12 = MEMORY[0x1E4FBB550];
          uint64_t v13 = MEMORY[0x1E4FBB5C8];
          *(void *)(v9 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v9 + 104) = v13;
          *(void *)(v9 + 64) = v19;
          *(void *)(v9 + 72) = v18;
          goto LABEL_21;
        }
        if (qword_1EB9B6110 != -1) {
          swift_once();
        }
        sub_1B996A200();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1B997C1F0;
        *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v38 = sub_1B90CCBAC();
        *(_OWORD *)(v25 + 32) = v17;
        uint64_t v28 = MEMORY[0x1E4FBB550];
        uint64_t v29 = MEMORY[0x1E4FBB5C8];
        *(void *)(v25 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v25 + 104) = v29;
        *(void *)(v25 + 64) = v38;
        *(void *)(v25 + 72) = v18;
LABEL_41:
        *(void *)(v25 + 136) = v28;
        *(void *)(v25 + 144) = v29;
        *(void *)(v25 + 112) = a2;
        *(void *)(v25 + 176) = v28;
        *(void *)(v25 + 184) = v29;
        *(void *)(v25 + 152) = a3;
        goto LABEL_42;
      }
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1B997ABA0;
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v37 = sub_1B90CCBAC();
      *(_OWORD *)(v20 + 32) = v17;
      uint64_t v23 = MEMORY[0x1E4FBB550];
      uint64_t v24 = MEMORY[0x1E4FBB5C8];
      *(void *)(v20 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v20 + 104) = v24;
      *(void *)(v20 + 64) = v37;
      *(void *)(v20 + 72) = v18;
    }
    *(void *)(v20 + 136) = v23;
    *(void *)(v20 + 144) = v24;
    *(void *)(v20 + 112) = a2;
    goto LABEL_42;
  }
  long long v46 = v42;
  if (v5)
  {
    if (v5 == 1)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B997ABC0;
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = sub_1B90CCBAC();
      *(_OWORD *)(v14 + 32) = v46;
      uint64_t v16 = MEMORY[0x1E4FBB5C8];
      *(void *)(v14 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 64) = v15;
      *(void *)(v14 + 72) = a3;
    }
    else
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B997ABA0;
      *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v34 = sub_1B90CCBAC();
      *(_OWORD *)(v33 + 32) = v46;
      uint64_t v35 = MEMORY[0x1E4FBB550];
      uint64_t v36 = MEMORY[0x1E4FBB5C8];
      *(void *)(v33 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v33 + 104) = v36;
      *(void *)(v33 + 64) = v34;
      *(void *)(v33 + 72) = a2;
      *(void *)(v33 + 136) = v35;
      *(void *)(v33 + 144) = v36;
      *(void *)(v33 + 112) = a3;
    }
  }
  else
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1B997ABC0;
    *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v31 = sub_1B90CCBAC();
    *(_OWORD *)(v30 + 32) = v46;
    uint64_t v32 = MEMORY[0x1E4FBB5C8];
    *(void *)(v30 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v30 + 104) = v32;
    *(void *)(v30 + 64) = v31;
    *(void *)(v30 + 72) = a2;
  }
LABEL_42:
  uint64_t v39 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 <= 0) {
    int v6 = a4 > 0;
  }
  else {
    int v6 = 2 * (a4 > 0);
  }
  uint64_t v7 = sub_1B996EAA0();
  uint64_t v9 = v8;
  if (v6)
  {
    if (v6 == 1)
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1B997ABC0;
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v11 = sub_1B90CCBAC();
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v9;
      uint64_t v12 = MEMORY[0x1E4FBB5C8];
      *(void *)(v10 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v10 + 104) = v12;
      *(void *)(v10 + 64) = v11;
      *(void *)(v10 + 72) = a4;
    }
    else
    {
      if (qword_1EB9B6110 != -1) {
        swift_once();
      }
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1B997ABA0;
      *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v17 = sub_1B90CCBAC();
      *(void *)(v16 + 32) = v7;
      *(void *)(v16 + 40) = v9;
      uint64_t v18 = MEMORY[0x1E4FBB550];
      uint64_t v19 = MEMORY[0x1E4FBB5C8];
      *(void *)(v16 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v16 + 104) = v19;
      *(void *)(v16 + 64) = v17;
      *(void *)(v16 + 72) = a3;
      *(void *)(v16 + 136) = v18;
      *(void *)(v16 + 144) = v19;
      *(void *)(v16 + 112) = a4;
    }
  }
  else
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1B997ABC0;
    *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v14 = sub_1B90CCBAC();
    *(void *)(v13 + 32) = v7;
    *(void *)(v13 + 40) = v9;
    uint64_t v15 = MEMORY[0x1E4FBB5C8];
    *(void *)(v13 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v13 + 104) = v15;
    *(void *)(v13 + 64) = v14;
    *(void *)(v13 + 72) = a3;
  }
  uint64_t v20 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1 && (sub_1B90EC3C4(a1), v2))
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
    uint64_t v10 = sub_1B996EAB0();
    uint64_t v11 = v4;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B996EB60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v3 + 64) = sub_1B90CCBAC();
    *(void *)(v3 + 32) = v10;
    *(void *)(v3 + 40) = v11;
    uint64_t v5 = sub_1B996EA00();
  }
  else
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
    sub_1B996A200();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1B997AB90;
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = MEMORY[0x1E4FBB5C8];
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = v7;
    uint64_t v5 = sub_1B996E9C0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a5 < 1)
  {
    if (a6 > 0)
    {
      if (qword_1EB9B6110 == -1) {
        goto LABEL_9;
      }
      goto LABEL_10;
    }
  }
  else if (a6 > 0)
  {
    if (qword_1EB9B6110 == -1) {
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  if (qword_1EB9B6110 != -1) {
LABEL_10:
  }
    swift_once();
LABEL_9:
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B997ABC0;
  uint64_t v7 = sub_1B996EAA0();
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1B90CCBAC();
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  uint64_t v12 = sub_1B996EAA0();
  *(void *)(v6 + 96) = v10;
  *(void *)(v6 + 104) = v11;
  *(void *)(v6 + 72) = v12;
  *(void *)(v6 + 80) = v13;
  uint64_t v14 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)(uint64_t a1)
{
  if (a1 == 1)
  {
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_6;
  }
  if (qword_1EB9B6110 != -1) {
LABEL_6:
  }
    swift_once();
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)(uint64_t a1, void *a2)
{
  if (a2[2] != 1)
  {
    if (a1 == 1)
    {
      if (qword_1EB9B6110 == -1) {
        goto LABEL_11;
      }
    }
    else if (qword_1EB9B6110 == -1)
    {
LABEL_11:
      sub_1B996A200();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1B997AB90;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B49C0);
      sub_1B90C3338((unint64_t *)&qword_1EB9B49D0, (uint64_t *)&unk_1EB9B49C0);
      uint64_t v7 = sub_1B996E910();
      uint64_t v9 = v8;
      *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v6 + 64) = sub_1B90CCBAC();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v9;
      uint64_t v5 = sub_1B996E9C0();
      goto LABEL_12;
    }
    swift_once();
    goto LABEL_11;
  }
  if (a1 == 1)
  {
    if (qword_1EB9B6110 == -1) {
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  if (qword_1EB9B6110 != -1) {
LABEL_13:
  }
    swift_once();
LABEL_9:
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 64) = sub_1B90CCBAC();
  uint64_t v4 = a2[5];
  *(void *)(v3 + 32) = a2[4];
  *(void *)(v3 + 40) = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996E9C0();
LABEL_12:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    if (a1 == 1)
    {
      if (qword_1EB9B6110 == -1) {
        return sub_1B996A200();
      }
    }
    else if (qword_1EB9B6110 == -1)
    {
      return sub_1B996A200();
    }
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    if (qword_1EB9B6110 == -1) {
      return sub_1B996A200();
    }
    goto LABEL_12;
  }
  if (qword_1EB9B6110 != -1) {
LABEL_12:
  }
    swift_once();
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.savingDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.namePlaceholderText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.includeText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedReminders.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1A70);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v20 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B996A1A0();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B996A1B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B996A1D0();
  MEMORY[0x1F4188790](v11 - 8);
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v12 + 16) = xmmword_1B997AB90;
  uint64_t v14 = MEMORY[0x1E4FBB5C8];
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 32) = a1;
  sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B91CD790();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F27300], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F272E8], v19);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B996A1C0();
  uint64_t v15 = sub_1B996A580();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v20, 1, 1, v15);
  uint64_t v16 = sub_1B996F9B0();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t static TTRLocalizableStrings.Templates.templatesListTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.noTemplates.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.editTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateAlertTitle(templateName:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateWithPublicLinkAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.shareTemplate.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.updateLink.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.manageLink.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.sendLink.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.stopSharing.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.shareTemplateViewTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.updateLinkViewTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.dateAndTimeLinkOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.dateAndTimeLinkOptionDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.tagsLinkOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.tagsLinkOptionDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.locationsLinkOption.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.locationsLinkOptionDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.showPreview.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.title.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTime.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeLocations.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTimeAndTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTimeAndLocations.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeTagsAndLocations.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeThreeAttributes.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.templatePreview.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingErrorAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingRetryLaterErrorAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertStopSharingButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.copyIcloudLink.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.addListFromPublicTemplateButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertMessage.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotSupportedAlertTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCreating.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdating.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.othersColumnTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.addSectionActionText(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)(char a1)
{
  return sub_1B9270080(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)(char a1)
{
  return sub_1B9270210(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.moveToSectionText(withSelectedRemindersCount:listLayout:)(uint64_t a1, char a2)
{
  if (a2)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = a1;
  uint64_t v6 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.moveToSectionText(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelectionText(withSelectedRemindersCount:listLayout:)(uint64_t a1, char a2)
{
  if (a2)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v3 + 16) = xmmword_1B997AB90;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = a1;
  uint64_t v6 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)(char a1)
{
  return sub_1B926FF38(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

id static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1B996A200();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE510);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997AB90;
  uint64_t v4 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v5 = qword_1EB9B5E18;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  *(void *)(inited + 40) = sub_1B96B5668(4);
  unint64_t v7 = sub_1B90C5330(inited);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B997AB90;
  *(void *)(v8 + 32) = v6;
  id v9 = v6;
  *(void *)(v8 + 40) = sub_1B96B5668(5);
  unint64_t v10 = sub_1B90C5330(v8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B90DDA64(v10);
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v12 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1B9109BA8();
  uint64_t v13 = (void *)sub_1B996E6D0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_initWithString_attributes_, v12, v13, 0x80000001B99B3E60);

  uint64_t v15 = sub_1B90DDA64(v7);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B997C200;
  *(void *)(v16 + 32) = v14;
  unint64_t v20 = v16;
  sub_1B996EE70();
  id v17 = v14;
  id inserted = _sSo18NSAttributedStringC15RemindersUICoreE09formattedB06format0F10Attributes25attributedStringsToInsertABSS_SDySo0aB3KeyaypGSayABGtFZ_0(v0, v2, v15, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return inserted;
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertTitle(listLayout:)(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertMessage(name:listLayout:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B997AB90;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1B90CCBAC();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v6 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertRestoreButton.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.TodayList.overdueSectionName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.TodayList.allDaySectionName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.TodayList.timedRemindersSectionName.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.TodayList.timedRemindersSectionDescription.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartLists.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.filteringTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.filteringTagsBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsSummary.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.whyTags.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsCreating.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.usingTagsBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsAdding.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsBrowser.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsTap.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.LearnMore.smartListsBody.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.sharedListSummaryForShareSheet.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter()
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Toolbar.moveItemsString(withCount:)(uint64_t a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t static TTRLocalizableStrings.Toolbar.deleteItemsString(withCount:)(uint64_t a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B926FF38(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B9270080(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B9270210(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B9270358(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B92704D0(char a1)
{
  if (a1)
  {
    if (qword_1EB9B6110 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB9B6110 != -1)
  {
    swift_once();
  }
  return sub_1B996A200();
}

uint64_t sub_1B9270658@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE518);
  sub_1B90C3338(&qword_1E9EFE520, &qword_1E9EFE518);
  uint64_t v2 = sub_1B996C6F0();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 != 2)
  {
    uint64_t v4 = v3 - 1;
    if (v3 == 1)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1B996EAA0();
      unint64_t v7 = v6;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = 0;
      uint64_t v9 = 0;
      char v10 = 0;
    }
    else if (v3 < 3)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = 0;
      uint64_t v4 = 0;
      uint64_t v9 = 0;
      char v10 = 0;
      unint64_t v7 = 0xE000000000000000;
    }
    else
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1B996EAA0();
      unint64_t v7 = v13;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = 0;
      char v10 = 2;
    }
    goto LABEL_9;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996EAA0();
  unint64_t v7 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16) >= 2uLL)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1B996EAA0();
    uint64_t v9 = v12;
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 1;
LABEL_9:
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO21linkCreatedStatusText4dateS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO21linkUpdatedStatusText4dateS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B997AB90;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1B90CCBAC();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  uint64_t v5 = sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

id _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO31linkExpiresStatusAttributedText4date14baseAttributes07expiresjM0So18NSAttributedStringCSS_SDySo0oP3KeyaypGANtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB9B6110 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B996A200();
  uint64_t v8 = v7;
  sub_1B996A200();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B5FC0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B997AB90;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1B90CCBAC();
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B996E9C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  unint64_t v11 = (void *)sub_1B996E9B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1B9109BA8();
  uint64_t v12 = (void *)sub_1B996E6D0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initWithString_attributes_, v11, v12, 0x80000001B99B55A0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9ADA50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B997C200;
  *(void *)(inited + 32) = v13;
  unint64_t v18 = inited;
  sub_1B996EE70();
  id v15 = v13;
  id inserted = _sSo18NSAttributedStringC15RemindersUICoreE09formattedB06format0F10Attributes25attributedStringsToInsertABSS_SDySo0aB3KeyaypGSayABGtFZ_0(v6, v8, a3, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return inserted;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.GroupDetail()
{
  return &type metadata for TTRLocalizableStrings.GroupDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Templates()
{
  return &type metadata for TTRLocalizableStrings.Templates;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sections()
{
  return &type metadata for TTRLocalizableStrings.Sections;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.LearnMore()
{
  return &type metadata for TTRLocalizableStrings.LearnMore;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Toolbar()
{
  return &type metadata for TTRLocalizableStrings.Toolbar;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.PrivacyAlert()
{
  return &type metadata for TTRLocalizableStrings.PrivacyAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ReminderNoteEditingStyles()
{
  return &type metadata for TTRLocalizableStrings.ReminderNoteEditingStyles;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sharing()
{
  return &type metadata for TTRLocalizableStrings.Sharing;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AutoCategorization()
{
  return &type metadata for TTRLocalizableStrings.AutoCategorization;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersList.SwipeActions()
{
  return &type metadata for TTRLocalizableStrings.RemindersList.SwipeActions;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert()
{
  return &type metadata for TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sharing.Notifications()
{
  return &type metadata for TTRLocalizableStrings.Sharing.Notifications;
}

uint64_t sub_1B9270E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }

  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t _s25HashtagNamesStringVariantOwxx(uint64_t a1)
{
  return sub_1B9270EFC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1B9270EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s25HashtagNamesStringVariantOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B9270E80(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s25HashtagNamesStringVariantOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B9270E80(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B9270EFC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s25HashtagNamesStringVariantOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1B9270EFC(v4, v6, v5, v7, v9);
  return a1;
}

ValueMetadata *_s25HashtagNamesStringVariantOMa()
{
  return &_s25HashtagNamesStringVariantON;
}

uint64_t sub_1B9271098()
{
  uint64_t v0 = sub_1B996D300();
  __swift_allocate_value_buffer(v0, qword_1E9EFE528);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9EFE528);
  if (qword_1EB9B6020 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB9B9EF0);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t TTRSpotlightReminderView.priority.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t TTRSpotlightReminderView.flagged.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t TTRSpotlightReminderView.hasAttachment.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t TTRSpotlightReminderView.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRSpotlightReminderView.hashtags.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRSpotlightReminderView.locationType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRSpotlightReminderView(0);
  return sub_1B90CCA04(v1 + *(int *)(v3 + 40), a1, &qword_1E9EFE5E0);
}

uint64_t type metadata accessor for TTRSpotlightReminderView(uint64_t a1)
{
  return sub_1B90EAF08(a1, (uint64_t *)&unk_1E9EFE6B8);
}

uint64_t TTRSpotlightReminderView.reminderID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRSpotlightReminderView(0);
  return sub_1B90CCA04(v1 + *(int *)(v3 + 44), a1, &qword_1EB9B1AA8);
}

void TTRSpotlightReminderView.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE5E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1AA8);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE5E8);
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TTRSpotlightReminderView(0);
  MEMORY[0x1F4188790](v28);
  id v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v14 = swift_getKeyPath();
  v14[8] = 0;
  uint64_t v15 = a1[3];
  unint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1B9271848();
  sub_1B9970DB0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    sub_1B927189C(*(id *)v14, v14[8]);
  }
  else
  {
    uint64_t v16 = v10;
    sub_1B996A770();
    char v36 = 6;
    sub_1B92718A8(&qword_1E9EFE5F8, MEMORY[0x1E4F27990]);
    uint64_t v17 = v26;
    sub_1B9970A20();
    uint64_t v18 = v28;
    sub_1B90BFE54((uint64_t)v9, (uint64_t)&v14[*(int *)(v28 + 44)], &qword_1EB9B1AA8);
    sub_1B996C650();
    char v35 = 5;
    sub_1B92718A8(&qword_1E9EFE600, MEMORY[0x1E4F95940]);
    sub_1B9970A20();
    sub_1B90BFE54((uint64_t)v6, (uint64_t)&v14[*(int *)(v18 + 40)], &qword_1E9EFE5E0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB9B49C0);
    char v34 = 4;
    sub_1B9271C80(&qword_1E9EFE608, (uint64_t *)&unk_1EB9B49C0);
    sub_1B9970A20();
    *((void *)v14 + 6) = v29;
    char v33 = 3;
    *((void *)v14 + 4) = sub_1B99709F0();
    *((void *)v14 + 5) = v19;
    char v32 = 2;
    v14[25] = sub_1B9970A00() & 1;
    char v31 = 1;
    v14[24] = sub_1B9970A00() & 1;
    char v30 = 0;
    uint64_t v20 = sub_1B9970A10();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v17);
    if (v22) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = v20;
    }
    *((void *)v14 + 2) = v23;
    sub_1B927B0E0((uint64_t)v14, v25, type metadata accessor for TTRSpotlightReminderView);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    sub_1B927B148((uint64_t)v14, type metadata accessor for TTRSpotlightReminderView);
  }
}

unint64_t sub_1B9271848()
{
  unint64_t result = qword_1E9EFE5F0;
  if (!qword_1E9EFE5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE5F0);
  }
  return result;
}

void sub_1B927189C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_1B92718A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TTRSpotlightReminderView.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE610);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B9271848();
  sub_1B9970DC0();
  LOBYTE(v12) = 0;
  sub_1B9970AC0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1B9970AA0();
    LOBYTE(v12) = 2;
    sub_1B9970AA0();
    long long v12 = *(_OWORD *)(v3 + 32);
    char v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9A8D10);
    sub_1B9271C80(&qword_1E9EFE618, &qword_1EB9A8D10);
    sub_1B9970AD0();
    *(void *)&long long v12 = *(void *)(v3 + 48);
    char v11 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9AD948);
    sub_1B9271BE0();
    sub_1B9970AD0();
    type metadata accessor for TTRSpotlightReminderView(0);
    LOBYTE(v12) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9EFE5E0);
    sub_1B9271CE0();
    sub_1B9970AD0();
    LOBYTE(v12) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB9B1AA8);
    sub_1B9271D84();
    sub_1B9970AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B9271BE0()
{
  unint64_t result = qword_1E9EFE620;
  if (!qword_1E9EFE620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB9AD948);
    sub_1B9271C80(&qword_1E9EFE628, (uint64_t *)&unk_1EB9B49C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9EFE620);
  }
  return result;
}