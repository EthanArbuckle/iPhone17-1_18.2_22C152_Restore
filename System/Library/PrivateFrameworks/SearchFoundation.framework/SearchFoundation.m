id _SFPBTimeZoneHandwrittenTranslator(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t vars8;

  v1 = (void *)MEMORY[0x1E4F1CAF0];
  v2 = [a1 identifier];
  v3 = [v1 timeZoneWithName:v2];

  return v3;
}

uint64_t _SFPBDateHandwrittenTranslator(void *a1)
{
  v1 = (void *)MEMORY[0x1E4F1C9C8];
  [a1 secondsSince1970];
  return objc_msgSend(v1, "dateWithTimeIntervalSince1970:");
}

id _SFPBURLHandwrittenTranslator(void *a1)
{
  if (a1)
  {
    v1 = (void *)MEMORY[0x1E4F1CB10];
    v2 = [a1 address];
    v3 = [v1 URLWithString:v2];
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

double _SFPBPointSizeHandwrittenTranslator(void *a1)
{
  id v1 = a1;
  v2 = [v1 width];
  [v2 doubleValue];
  double v4 = v3;
  v5 = [v1 height];

  [v5 doubleValue];
  return v4;
}

id _SFPBStringDictionaryHandwrittenTranslator(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = v1;
  if (v1 && [v1 keyValuesCount])
  {
    double v3 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v2, "keyValuesCount"));
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    double v4 = objc_msgSend(v2, "keyValues", 0);
    uint64_t v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v17;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          v9 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          uint64_t v10 = [v9 key];
          if (v10)
          {
            v11 = (void *)v10;
            v12 = [v9 value];

            if (v12)
            {
              v13 = [v9 value];
              v14 = [v9 key];
              [v3 setObject:v13 forKeyedSubscript:v14];
            }
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v6);
    }
  }
  else
  {
    double v3 = 0;
  }

  return v3;
}

SFCardSection *_SFPBCardSectionHandwrittenTranslator(void *a1)
{
  id v1 = a1;
  v2 = [[SFCardSection alloc] initWithProtobuf:v1];

  return v2;
}

SFWeatherTopic *_SFPBTopicHandwrittenTranslator(void *a1)
{
  id v1 = a1;
  v2 = [v1 query];
  int v3 = [v1 type];
  switch(v3)
  {
    case 1:
      v11 = [SFFlightTopic alloc];
      v12 = (void *)MEMORY[0x1E4F1C9C8];
      uint64_t v7 = [v1 flight];
      v9 = objc_msgSend(v12, "dateWithTimeIntervalSince1970:", (double)(unint64_t)-[SFLatLng timestamp](v7, "timestamp"));
      v13 = [v1 identifier];
      uint64_t v14 = [(SFFlightTopic *)v11 initWithQuery:v2 date:v9 identifier:v13];
LABEL_7:
      uint64_t v10 = (SFWeatherTopic *)v14;

      goto LABEL_8;
    case 8:
      v15 = [SFSportsTopic alloc];
      uint64_t v7 = [v1 sports];
      v9 = [(SFLatLng *)v7 requested_entity_type];
      v13 = [v1 identifier];
      uint64_t v14 = [(SFSportsTopic *)v15 initWithQuery:v2 requestedEntityType:v9 identifier:v13];
      goto LABEL_7;
    case 3:
      double v4 = [SFLatLng alloc];
      uint64_t v5 = [v1 weather];
      uint64_t v6 = [v5 location];
      uint64_t v7 = [(SFLatLng *)v4 initWithProtobuf:v6];

      v8 = [SFWeatherTopic alloc];
      v9 = [v1 identifier];
      uint64_t v10 = [(SFWeatherTopic *)v8 initWithQuery:v2 location:v7 identifier:v9];
LABEL_8:

      goto LABEL_10;
  }
  uint64_t v16 = [v1 type];
  long long v17 = [SFQueryTopic alloc];
  uint64_t v7 = [v1 identifier];
  uint64_t v10 = [(SFQueryTopic *)v17 initWithType:v16 query:v2 identifier:v7];
LABEL_10:

  return v10;
}

void sub_1A0C8D6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t __PARLogHandleForCategory_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.parsec", "Default");
  id v1 = (void *)PARLogHandleForCategory_logHandles_0;
  PARLogHandleForCategory_logHandles_0 = (uint64_t)v0;

  os_log_t v2 = os_log_create("com.apple.parsec", "SearchFoundation");
  int v3 = (void *)PARLogHandleForCategory_logHandles_1;
  PARLogHandleForCategory_logHandles_1 = (uint64_t)v2;

  os_log_t v4 = os_log_create("com.apple.parsec", "CoreParsec");
  uint64_t v5 = (void *)PARLogHandleForCategory_logHandles_2;
  PARLogHandleForCategory_logHandles_2 = (uint64_t)v4;

  os_log_t v6 = os_log_create("com.apple.parsec", "Bag");
  uint64_t v7 = (void *)PARLogHandleForCategory_logHandles_3;
  PARLogHandleForCategory_logHandles_3 = (uint64_t)v6;

  os_log_t v8 = os_log_create("com.apple.parsec", "VisualCAT");
  v9 = (void *)PARLogHandleForCategory_logHandles_4;
  PARLogHandleForCategory_logHandles_4 = (uint64_t)v8;

  PARLogHandleForCategory_logHandles_5 = (uint64_t)os_log_create("com.apple.parsec", "Internal Settings");
  return MEMORY[0x1F41817F8]();
}

uint64_t __PARLogHandleForCategory_block_invoke_32577()
{
  os_log_t v0 = os_log_create("com.apple.parsec", "Default");
  id v1 = (void *)PARLogHandleForCategory_logHandles_0_32579;
  PARLogHandleForCategory_logHandles_0_32579 = (uint64_t)v0;

  os_log_t v2 = os_log_create("com.apple.parsec", "SearchFoundation");
  int v3 = (void *)PARLogHandleForCategory_logHandles_1_32573;
  PARLogHandleForCategory_logHandles_1_32573 = (uint64_t)v2;

  os_log_t v4 = os_log_create("com.apple.parsec", "CoreParsec");
  uint64_t v5 = (void *)PARLogHandleForCategory_logHandles_2_32581;
  PARLogHandleForCategory_logHandles_2_32581 = (uint64_t)v4;

  os_log_t v6 = os_log_create("com.apple.parsec", "Bag");
  uint64_t v7 = (void *)PARLogHandleForCategory_logHandles_3_32582;
  PARLogHandleForCategory_logHandles_3_32582 = (uint64_t)v6;

  os_log_t v8 = os_log_create("com.apple.parsec", "VisualCAT");
  v9 = (void *)PARLogHandleForCategory_logHandles_4_32583;
  PARLogHandleForCategory_logHandles_4_32583 = (uint64_t)v8;

  PARLogHandleForCategory_logHandles_5_32584 = (uint64_t)os_log_create("com.apple.parsec", "Internal Settings");
  return MEMORY[0x1F41817F8]();
}

void __checkValidParsecHost_block_invoke()
{
  os_log_t v0 = SecTaskCreateFromSelf((CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
  if (v0)
  {
    id v1 = v0;
    uint32_t v2 = SecTaskGetCodeSignStatus(v0) & 0x4000001;
    checkValidParsecHost_isValidHost = v2 == 67108865;
    if (v2 != 67108865)
    {
      if (MGGetBoolAnswer())
      {
        CFTypeRef v3 = SecTaskCopyValueForEntitlement(v1, @"com.apple.private.parsec.default-client", 0);
        if (v3)
        {
          os_log_t v4 = (void *)v3;
          CFTypeID v5 = CFGetTypeID(v3);
          if (v5 == CFStringGetTypeID())
          {
            uint64_t v6 = [v4 length];
            CFRelease(v4);
            if (v6) {
              checkValidParsecHost_isValidHost = 1;
            }
          }
          else
          {
            CFRelease(v4);
          }
        }
      }
    }
    CFRelease(v1);
  }
}

void SFFeedbackListenerRegister(void *a1)
{
  id v1 = a1;
  uint32_t v2 = getDispatchQueue();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFFeedbackListenerRegister_block_invoke;
  block[3] = &unk_1E5A2E788;
  block[4] = v1;
  dispatch_async(v2, block);
}

id getDispatchQueue()
{
  if (getDispatchQueue_onceToken != -1) {
    dispatch_once(&getDispatchQueue_onceToken, &__block_literal_global_35025);
  }
  os_log_t v0 = (void *)getDispatchQueue_queue;
  return v0;
}

void __SFFeedbackListenerRegister_block_invoke(uint64_t a1)
{
  getWeakListeners();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint32_t v2 = [[WeakListener alloc] initWithListener:*(void *)(a1 + 32)];
  [v3 addObject:v2];
}

id getWeakListeners()
{
  os_log_t v0 = (void *)getWeakListeners_listeners;
  if (!getWeakListeners_listeners)
  {
    uint64_t v1 = [MEMORY[0x1E4F1CA48] array];
    uint32_t v2 = (void *)getWeakListeners_listeners;
    getWeakListeners_listeners = v1;

    os_log_t v0 = (void *)getWeakListeners_listeners;
  }
  return v0;
}

void __getDispatchQueue_block_invoke()
{
  uint32_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("SFFeedbackQueue", v2);
  uint64_t v1 = (void *)getDispatchQueue_queue;
  getDispatchQueue_queue = (uint64_t)v0;
}

void SFFeedbackListenerUnregister(uint64_t a1)
{
  uint32_t v2 = getDispatchQueue();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFFeedbackListenerUnregister_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
  block[4] = a1;
  dispatch_sync(v2, block);
}

void __SFFeedbackListenerUnregister_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint32_t v2 = getWeakListeners();
  id v3 = [MEMORY[0x1E4F1CA48] array];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "strongListener", (void)v12);
        v11 = (void *)v10;
        if (v10)
        {
          if (v10 == *(void *)(a1 + 32))
          {
            [v3 addObject:v9];

            goto LABEL_12;
          }
        }
        else
        {
          [v3 addObject:v9];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }
LABEL_12:

  [v4 removeObjectsInArray:v3];
}

void SFFeedbackNotify(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = getDispatchQueue();
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    v5[2] = __SFFeedbackNotify_block_invoke;
    v5[3] = &unk_1E5A2E678;
    v5[4] = v3;
    v5[5] = a2;
    dispatch_async(v4, v5);
  }
}

void __SFFeedbackNotify_block_invoke(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint32_t v2 = getWeakListeners();
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v15;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v15 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = [*(id *)(*((void *)&v14 + 1) + 8 * v6) strongListener];
        os_log_t v8 = v7;
        if (v7)
        {
          uint64_t v10 = *(void **)(a1 + 32);
          uint64_t v9 = *(void *)(a1 + 40);
          id v11 = v7;
          id v12 = v10;
          if (objc_opt_respondsToSelector())
          {
            [v11 reportFeedback:v12 queryId:v9];
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
            {
              [v11 searchViewDidAppear:v12];
            }
            else
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
              {
                [v11 searchViewDidDisappear:v12];
              }
              else
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                {
                  [v11 cardViewDidAppear:v12];
                }
                else
                {
                  objc_opt_class();
                  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                  {
                    [v11 cardViewDidDisappear:v12];
                  }
                  else
                  {
                    objc_opt_class();
                    if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                    {
                      [v11 didStartSearch:v12];
                    }
                    else
                    {
                      objc_opt_class();
                      if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                      {
                        [v11 didEndSearch:v12];
                      }
                      else
                      {
                        objc_opt_class();
                        if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                        {
                          [v11 didRankSections:v12];
                        }
                        else
                        {
                          objc_opt_class();
                          if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                          {
                            [v11 didEngageResult:v12];
                          }
                          else
                          {
                            objc_opt_class();
                            if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                            {
                              [v11 didGradeResultRelevancy:v12];
                            }
                            else
                            {
                              objc_opt_class();
                              if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                              {
                                [v11 didEngageSuggestion:v12];
                              }
                              else
                              {
                                objc_opt_class();
                                if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                                {
                                  [v11 didEngageCardSection:v12];
                                }
                                else
                                {
                                  objc_opt_class();
                                  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                                  {
                                    [v11 didErrorOccur:v12];
                                  }
                                  else
                                  {
                                    objc_opt_class();
                                    if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
                                    {
                                      [v11 sendCustomFeedback:v12];
                                    }
                                    else
                                    {
                                      objc_opt_class();
                                      if ((objc_opt_isKindOfClass() & 1) != 0
                                        && (objc_opt_respondsToSelector() & 1) != 0)
                                      {
                                        [v11 resultsDidBecomeVisible:v12];
                                      }
                                      else
                                      {
                                        objc_opt_class();
                                        if ((objc_opt_isKindOfClass() & 1) != 0
                                          && (objc_opt_respondsToSelector() & 1) != 0)
                                        {
                                          [v11 suggestionsDidBecomeVisible:v12];
                                        }
                                        else
                                        {
                                          objc_opt_class();
                                          if ((objc_opt_isKindOfClass() & 1) != 0
                                            && (objc_opt_respondsToSelector() & 1) != 0)
                                          {
                                            [v11 didReceiveResultsAfterTimeout:v12];
                                          }
                                          else
                                          {
                                            objc_opt_class();
                                            if ((objc_opt_isKindOfClass() & 1) != 0
                                              && (objc_opt_respondsToSelector() & 1) != 0)
                                            {
                                              [v11 didAppendLateSections:v12];
                                            }
                                            else
                                            {
                                              objc_opt_class();
                                              if ((objc_opt_isKindOfClass() & 1) != 0
                                                && (objc_opt_respondsToSelector() & 1) != 0)
                                              {
                                                [v11 didClearInput:v12];
                                              }
                                              else
                                              {
                                                objc_opt_class();
                                                if ((objc_opt_isKindOfClass() & 1) != 0
                                                  && (objc_opt_respondsToSelector() & 1) != 0)
                                                {
                                                  [v11 didEngageSection:v12];
                                                }
                                                else
                                                {
                                                  objc_opt_class();
                                                  if ((objc_opt_isKindOfClass() & 1) != 0
                                                    && (objc_opt_respondsToSelector() & 1) != 0)
                                                  {
                                                    [v11 sectionHeaderDidBecomeVisible:v12];
                                                  }
                                                  else
                                                  {
                                                    objc_opt_class();
                                                    if ((objc_opt_isKindOfClass() & 1) != 0
                                                      && (objc_opt_respondsToSelector() & 1) != 0)
                                                    {
                                                      [v11 didGoToSite:v12];
                                                    }
                                                    else
                                                    {
                                                      objc_opt_class();
                                                      if ((objc_opt_isKindOfClass() & 1) != 0
                                                        && (objc_opt_respondsToSelector() & 1) != 0)
                                                      {
                                                        [v11 didGoToSearch:v12];
                                                      }
                                                      else
                                                      {
                                                        objc_opt_class();
                                                        if ((objc_opt_isKindOfClass() & 1) != 0
                                                          && (objc_opt_respondsToSelector() & 1) != 0)
                                                        {
                                                          [v11 didGradeLookupHintRelevancy:v12];
                                                        }
                                                        else
                                                        {
                                                          objc_opt_class();
                                                          if (objc_opt_isKindOfClass())
                                                          {
                                                            if (objc_opt_respondsToSelector())
                                                            {
                                                              [v11 didSubmitUserReportFeedback:v12];
                                                            }
                                                            else if (objc_opt_respondsToSelector())
                                                            {
                                                              [v11 didReportUserResponseFeedback:v12];
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t v13 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
      uint64_t v4 = v13;
    }
    while (v13);
  }
}

#error "1A0D0CAA4: too big function (funcsize=0)"

uint64_t __PARLogHandleForCategory_block_invoke_65851()
{
  os_log_t v0 = os_log_create("com.apple.parsec", "Default");
  uint64_t v1 = (void *)PARLogHandleForCategory_logHandles_0_65852;
  PARLogHandleForCategory_logHandles_0_65852 = (uint64_t)v0;

  os_log_t v2 = os_log_create("com.apple.parsec", "SearchFoundation");
  uint64_t v3 = (void *)PARLogHandleForCategory_logHandles_1_65849;
  PARLogHandleForCategory_logHandles_1_65849 = (uint64_t)v2;

  os_log_t v4 = os_log_create("com.apple.parsec", "CoreParsec");
  uint64_t v5 = (void *)PARLogHandleForCategory_logHandles_2_65854;
  PARLogHandleForCategory_logHandles_2_65854 = (uint64_t)v4;

  os_log_t v6 = os_log_create("com.apple.parsec", "Bag");
  uint64_t v7 = (void *)PARLogHandleForCategory_logHandles_3_65855;
  PARLogHandleForCategory_logHandles_3_65855 = (uint64_t)v6;

  os_log_t v8 = os_log_create("com.apple.parsec", "VisualCAT");
  uint64_t v9 = (void *)PARLogHandleForCategory_logHandles_4_65857;
  PARLogHandleForCategory_logHandles_4_65857 = (uint64_t)v8;

  PARLogHandleForCategory_logHandles_5_65858 = (uint64_t)os_log_create("com.apple.parsec", "Internal Settings");
  return MEMORY[0x1F41817F8]();
}

void SFResourceLoaderRegister(void *a1)
{
  id v1 = a1;
  os_log_t v2 = getDispatchQueue_65862();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFResourceLoaderRegister_block_invoke;
  block[3] = &unk_1E5A2E788;
  block[4] = v1;
  dispatch_async(v2, block);
}

id getDispatchQueue_65862()
{
  if (getDispatchQueue_onceToken_65863 != -1) {
    dispatch_once(&getDispatchQueue_onceToken_65863, &__block_literal_global_65864);
  }
  os_log_t v0 = (void *)getDispatchQueue_queue_65865;
  return v0;
}

void __SFResourceLoaderRegister_block_invoke(uint64_t a1)
{
}

void _SFResourceLoaderRegisterInternal(void *a1)
{
  id v1 = a1;
  getWeakLoaders();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  os_log_t v2 = [[WeakLoader alloc] initWithLoader:v1];

  [v3 addObject:v2];
}

id getWeakLoaders()
{
  os_log_t v0 = (void *)getWeakLoaders_loaders;
  if (!getWeakLoaders_loaders)
  {
    uint64_t v1 = [MEMORY[0x1E4F1CA48] array];
    os_log_t v2 = (void *)getWeakLoaders_loaders;
    getWeakLoaders_loaders = v1;

    os_log_t v0 = (void *)getWeakLoaders_loaders;
  }
  return v0;
}

void __getDispatchQueue_block_invoke_65868()
{
  os_log_t v0 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("SFResourceLoaderQueue", v0);
  os_log_t v2 = (void *)getDispatchQueue_queue_65865;
  getDispatchQueue_queue_65865 = (uint64_t)v1;

  id v3 = getDispatchQueue_queue_65865;
  dispatch_async(v3, &__block_literal_global_106);
}

void __getDispatchQueue_block_invoke_2()
{
  if (checkValidParsecHost_once != -1) {
    dispatch_once(&checkValidParsecHost_once, &__block_literal_global_33334);
  }
  if (checkValidParsecHost_isValidHost)
  {
    if (CoreParsecLibraryCore())
    {
      uint64_t v7 = 0;
      os_log_t v8 = &v7;
      uint64_t v9 = 0x2050000000;
      os_log_t v0 = (void *)getPARSessionClass_softClass;
      uint64_t v10 = getPARSessionClass_softClass;
      if (!getPARSessionClass_softClass)
      {
        v6[0] = MEMORY[0x1E4F143A8];
        v6[1] = 3221225472;
        v6[2] = __getPARSessionClass_block_invoke;
        v6[3] = &unk_1E5A2E890;
        v6[4] = &v7;
        __getPARSessionClass_block_invoke((uint64_t)v6);
        os_log_t v0 = (void *)v8[3];
      }
      id v1 = v0;
      _Block_object_dispose(&v7, 8);
      os_log_t v2 = [v1 sharedSession];
      _SFResourceLoaderRegisterInternal(v2);
    }
  }
  else
  {
    if (PARLogHandleForCategory_onceToken_65848 != -1) {
      dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
    }
    id v3 = PARLogHandleForCategory_logHandles_1_65849;
    if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v6[0]) = 0;
      _os_log_error_impl(&dword_1A0C02000, v3, OS_LOG_TYPE_ERROR, "Loaders skipped on host check", (uint8_t *)v6, 2u);
    }
  }
  os_log_t v4 = objc_alloc_init(ImageFileLoader);
  uint64_t v5 = (void *)initLoaders_imageFileLoader;
  initLoaders_imageFileLoader = (uint64_t)v4;

  _SFResourceLoaderRegisterInternal((void *)initLoaders_imageFileLoader);
}

void sub_1A0DA66B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CoreParsecLibraryCore()
{
  if (!CoreParsecLibraryCore_frameworkLibrary) {
    CoreParsecLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return CoreParsecLibraryCore_frameworkLibrary;
}

Class __getPARSessionClass_block_invoke(uint64_t a1)
{
  if (!CoreParsecLibraryCore())
  {
    id v3 = (void *)abort_report_np();
    free(v3);
  }
  Class result = objc_getClass("PARSession");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getPARSessionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)__CoreParsecLibraryCore_block_invoke();
  }
  return result;
}

uint64_t __CoreParsecLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreParsecLibraryCore_frameworkLibrary = result;
  return result;
}

void SFResourceLoaderUnregister(uint64_t a1)
{
  os_log_t v2 = getDispatchQueue_65862();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFResourceLoaderUnregister_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0lu32l8;
  block[4] = a1;
  dispatch_async(v2, block);
}

void __SFResourceLoaderUnregister_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  os_log_t v2 = getWeakLoaders();
  id v3 = [MEMORY[0x1E4F1CA48] array];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "strongloader", (void)v12);
        id v11 = (void *)v10;
        if (v10)
        {
          if (v10 == *(void *)(a1 + 32))
          {
            [v3 addObject:v9];

            goto LABEL_12;
          }
        }
        else
        {
          [v3 addObject:v9];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }
LABEL_12:

  [v4 removeObjectsInArray:v3];
}

void SFResourceLoaderLoadImage(void *a1, void *a2)
{
}

void SFResourceLoaderLoadImageWithContext(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  os_log_t v8 = getDispatchQueue_65862();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFResourceLoaderLoadImageWithContext_block_invoke;
  block[3] = &unk_1E5A2E810;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = v5;
  dispatch_async(v8, block);
}

void __SFResourceLoaderLoadImageWithContext_block_invoke(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  getWeakLoaders();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * i), "strongloader", (void)v16);
        if ([v7 conformsToProtocol:&unk_1EF442790])
        {
          os_log_t v8 = [v7 imageLoader];
          if ([v8 canLoadImage:a1[4] context:a1[5]])
          {
            [v8 loadImage:a1[4] context:a1[5] completionHandler:a1[6]];
            if (PARLogHandleForCategory_onceToken_65848 != -1) {
              dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
            }
            id v14 = PARLogHandleForCategory_logHandles_1_65849;
            if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_DEBUG))
            {
              id v15 = (void *)a1[4];
              *(_DWORD *)buf = 138412546;
              v23 = v15;
              __int16 v24 = 2112;
              v25 = v8;
              _os_log_debug_impl(&dword_1A0C02000, v14, OS_LOG_TYPE_DEBUG, "image %@ loaded by %@", buf, 0x16u);
            }

LABEL_25:
            long long v12 = v2;
            goto LABEL_26;
          }
        }
        else if ((objc_opt_respondsToSelector() & 1) != 0 {
               && ([v7 loadImage:a1[4] withContext:a1[5] completionHandler:a1[6]] & 1) != 0
        }
               || (objc_opt_respondsToSelector() & 1) != 0
               && ([v7 loadImage:a1[4] withCompletionHandler:a1[6]] & 1) != 0)
        {
          goto LABEL_25;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v9 = (void *)MEMORY[0x1E4F28C58];
  v20[0] = *MEMORY[0x1E4F28228];
  v20[1] = @"SFResourceLoaderFailedResourceKey";
  uint64_t v10 = a1[4];
  v21[0] = @"SFResourceLoaders are not available.";
  v21[1] = v10;
  id v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v21 forKeys:v20 count:2];
  long long v12 = [v9 errorWithDomain:@"SFResourceLoaderErrorDomain" code:1000 userInfo:v11];

  if (PARLogHandleForCategory_onceToken_65848 != -1) {
    dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
  }
  id v13 = PARLogHandleForCategory_logHandles_1_65849;
  if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v23 = v12;
    _os_log_error_impl(&dword_1A0C02000, v13, OS_LOG_TYPE_ERROR, "SFResourceLoaderLoadImage error: %@", buf, 0xCu);
  }
  (*(void (**)(void))(a1[6] + 16))();
LABEL_26:
}

void SFResourceLoaderLoadCard(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  uint64_t v5 = [v3 cardSections];
  if ([v5 count]
    && ([v5 firstObject],
        id v6 = objc_claimAutoreleasedReturnValue(),
        objc_opt_class(),
        char isKindOfClass = objc_opt_isKindOfClass(),
        v6,
        (isKindOfClass & 1) == 0))
  {
    v4[2](v4, v3, 0);
  }
  else
  {
    os_log_t v8 = getDispatchQueue_65862();
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __SFResourceLoaderLoadCard_block_invoke;
    v9[3] = &unk_1E5A2E7E8;
    id v10 = v3;
    id v11 = v4;
    dispatch_async(v8, v9);
  }
}

void __SFResourceLoaderLoadCard_block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  getWeakLoaders();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * i), "strongloader", (void)v16);
        if ([v7 conformsToProtocol:&unk_1EF442790])
        {
          os_log_t v8 = [v7 cardLoader];
          if ([v8 canLoadCard:*(void *)(a1 + 32)])
          {
            [v8 loadCard:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 40)];
            if (PARLogHandleForCategory_onceToken_65848 != -1) {
              dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
            }
            id v14 = PARLogHandleForCategory_logHandles_1_65849;
            if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_DEBUG))
            {
              id v15 = *(void **)(a1 + 32);
              *(_DWORD *)buf = 138412546;
              v23 = v15;
              __int16 v24 = 2112;
              v25 = v8;
              _os_log_debug_impl(&dword_1A0C02000, v14, OS_LOG_TYPE_DEBUG, "card %@ loaded by %@", buf, 0x16u);
            }

LABEL_23:
            long long v12 = v2;
            goto LABEL_24;
          }
        }
        else if ((objc_opt_respondsToSelector() & 1) != 0 {
               && ([v7 loadCard:*(void *)(a1 + 32) withCompletionHandler:*(void *)(a1 + 40)] & 1) != 0)
        }
        {
          goto LABEL_23;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v9 = (void *)MEMORY[0x1E4F28C58];
  v20[0] = *MEMORY[0x1E4F28228];
  v20[1] = @"SFResourceLoaderFailedResourceKey";
  uint64_t v10 = *(void *)(a1 + 32);
  v21[0] = @"SFResourceLoaders are not available.";
  v21[1] = v10;
  id v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v21 forKeys:v20 count:2];
  long long v12 = [v9 errorWithDomain:@"SFResourceLoaderErrorDomain" code:1000 userInfo:v11];

  if (PARLogHandleForCategory_onceToken_65848 != -1) {
    dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
  }
  id v13 = PARLogHandleForCategory_logHandles_1_65849;
  if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v23 = v12;
    _os_log_error_impl(&dword_1A0C02000, v13, OS_LOG_TYPE_ERROR, "SFResourceLoaderLoadCard error: %@", buf, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_24:
}

void SFResourceLoaderLoadMoreResults(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = getDispatchQueue_65862();
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __SFResourceLoaderLoadMoreResults_block_invoke;
  v8[3] = &unk_1E5A2E7E8;
  id v9 = v3;
  id v10 = v4;
  id v6 = v4;
  id v7 = v3;
  dispatch_sync(v5, v8);
}

void __SFResourceLoaderLoadMoreResults_block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  getWeakLoaders();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * i), "strongloader", (void)v16);
        if ([v7 conformsToProtocol:&unk_1EF442790])
        {
          os_log_t v8 = [v7 moreResultsLoader];
          if ([v8 canLoadMoreResults:*(void *)(a1 + 32)])
          {
            [v8 loadMoreResults:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 40)];
            if (PARLogHandleForCategory_onceToken_65848 != -1) {
              dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
            }
            id v14 = PARLogHandleForCategory_logHandles_1_65849;
            if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_DEBUG))
            {
              id v15 = *(void **)(a1 + 32);
              *(_DWORD *)buf = 138412546;
              v23 = v15;
              __int16 v24 = 2112;
              v25 = v8;
              _os_log_debug_impl(&dword_1A0C02000, v14, OS_LOG_TYPE_DEBUG, "more results %@ loaded by %@", buf, 0x16u);
            }

LABEL_23:
            long long v12 = v2;
            goto LABEL_24;
          }
        }
        else if ((objc_opt_respondsToSelector() & 1) != 0 {
               && ([v7 loadMoreResults:*(void *)(a1 + 32) withCompletionHandler:*(void *)(a1 + 40)] & 1) != 0)
        }
        {
          goto LABEL_23;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v26 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v9 = (void *)MEMORY[0x1E4F28C58];
  v20[0] = *MEMORY[0x1E4F28228];
  v20[1] = @"SFResourceLoaderFailedResourceKey";
  uint64_t v10 = *(void *)(a1 + 32);
  v21[0] = @"SFResourceLoaders are not available.";
  v21[1] = v10;
  id v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v21 forKeys:v20 count:2];
  long long v12 = [v9 errorWithDomain:@"SFResourceLoaderErrorDomain" code:1000 userInfo:v11];

  if (PARLogHandleForCategory_onceToken_65848 != -1) {
    dispatch_once(&PARLogHandleForCategory_onceToken_65848, &__block_literal_global_114);
  }
  id v13 = PARLogHandleForCategory_logHandles_1_65849;
  if (os_log_type_enabled((os_log_t)PARLogHandleForCategory_logHandles_1_65849, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v23 = v12;
    _os_log_error_impl(&dword_1A0C02000, v13, OS_LOG_TYPE_ERROR, "SFResourceLoaderLoadMoreResults error: %@", buf, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_24:
}

uint64_t _SFPBReferentialCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        long long v18 = PBReaderReadString();
        [a1 setReferenceIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCommandValueReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v18 = objc_alloc_init(_SFPBReferentialCommand);
        if (!PBReaderPlaceMark() || (_SFPBReferentialCommandReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setReferentialCommand:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAbstractCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        v26 = objc_alloc_init(_SFPBCommandValue);
        if (!PBReaderPlaceMark() || (_SFPBCommandValueReadFrom(v26, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v26, 0, 0);
      }
      else if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_36:
        [a1 setType:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBUserActivityInfoReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_38:
        [a1 setValueType:v25];
        goto LABEL_39;
      case 2u:
        PBReaderReadString();
        uint64_t v27 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setKey:v27];
        goto LABEL_33;
      case 3u:
        PBReaderReadString();
        uint64_t v27 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setStringValue:v27];
        goto LABEL_33;
      case 4u:
        uint64_t v27 = objc_alloc_init(_SFPBURL);
        if PBReaderPlaceMark() && (_SFPBURLReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUrlValue:", v27, 0, 0);
LABEL_33:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBURLReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setAddress:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBUserActivityDataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        char v18 = (_SFPBUserActivityInfo *)objc_claimAutoreleasedReturnValue();
        [a1 setActivityType:v18];
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_SFPBUserActivityInfo);
    if (!PBReaderPlaceMark() || !_SFPBUserActivityInfoReadFrom(v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addUserInfo:", v18, 0, 0);
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPunchoutReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v18];
        goto LABEL_32;
      case 2u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setBundleIdentifier:v18];
        goto LABEL_32;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setLabel:v18];
        goto LABEL_32;
      case 4u:
        char v18 = objc_alloc_init(_SFPBURL);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        if (!PBReaderPlaceMark() || !_SFPBURLReadFrom(v18, a2)) {
          goto LABEL_69;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addUrls:", v18, 0, 0);
        }
        goto LABEL_32;
      case 5u:
        char v18 = objc_alloc_init(_SFPBUserActivityData);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        if (PBReaderPlaceMark() && _SFPBUserActivityDataReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setUserActivityData:v18];
LABEL_32:

LABEL_33:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_69:

        return 0;
      case 6u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setActionTarget:v18];
        goto LABEL_32;
      case 7u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_59:
        [a1 setIsRunnableInBackground:v22 != 0];
        goto LABEL_33;
      case 8u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_63:
        [a1 setHasClip:v29 != 0];
        goto LABEL_33;
      case 9u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_67:
        objc_msgSend(a1, "setForceOpenInBrowser:", v36 != 0, v41, v42);
        goto LABEL_33;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_33;
    }
  }
}

uint64_t _SFPBGraphicalFloatReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setDoubleValue:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBDefaultPunchoutAppIconImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        PBReaderReadString();
        uint64_t v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setCoreSpotlightIdentifier:v19];
        goto LABEL_26;
      }
      if (v18 == 1)
      {
        uint64_t v19 = objc_alloc_init(_SFPBPunchout);
        if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v19, 0, 0);
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    uint64_t v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setFileProviderIdentifier:v19];
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBShortcutsImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setLnPropertyIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBClockImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (1)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
            break;
          }
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0) {
            goto LABEL_50;
          }
          v27 += 7;
          BOOL v15 = v28++ >= 9;
          if (v15)
          {
            uint64_t v34 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v34 = *(unsigned char *)(a2 + *v5) ? 0 : v29;
LABEL_53:
        [a1 setHour:v34];
      }
      else if (v18 == 2)
      {
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (1)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
          *(void *)(a2 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_55;
          }
          v35 += 7;
          BOOL v15 = v36++ >= 9;
          if (v15)
          {
            uint64_t v42 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v42 = *(unsigned char *)(a2 + *v5) ? 0 : v37;
LABEL_58:
        [a1 setMinute:v42];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_48:
        [a1 setSecond:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBQuickLookThumbnailImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        PBReaderReadString();
        char v19 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setCoreSpotlightIdentifier:v19];
        goto LABEL_26;
      }
      if (v18 == 1)
      {
        char v19 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFilePath:", v19, 0, 0);
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
    [a1 setFileProviderIdentifier:v19];
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBPersonReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          [a1 setPersonIdentifier:v18];
          goto LABEL_29;
        case 2u:
          unint64_t v18 = PBReaderReadString();
          [a1 setContactIdentifier:v18];
          goto LABEL_29;
        case 3u:
          unint64_t v18 = PBReaderReadString();
          [a1 setDisplayName:v18];
          goto LABEL_29;
        case 4u:
          unint64_t v18 = PBReaderReadString();
          if (v18) {
            [a1 addPhoneNumbers:v18];
          }
          goto LABEL_29;
        case 5u:
          unint64_t v18 = PBReaderReadString();
          if (v18) {
            [a1 addEmailAddresses:v18];
          }
          goto LABEL_29;
        case 6u:
          unint64_t v18 = PBReaderReadString();
          [a1 setPhotosIdentifier:v18];
LABEL_29:

          goto LABEL_30;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_30:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPhotosLibraryImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPerson *)objc_claimAutoreleasedReturnValue();
        [a1 setPhotoIdentifier:v18];
        goto LABEL_34;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_38:
        [a1 setIsSyndicated:v22 != 0];
        goto LABEL_39;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        if (PBReaderPlaceMark() && _SFPBPersonReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addPeopleInPhoto:", v18, 0, 0);
          }
LABEL_34:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPerson *)objc_claimAutoreleasedReturnValue();
        [a1 setApplicationBundleIdentifier:v18];
        goto LABEL_34;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBSymbolImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          [a1 setSymbolName:v18];

          continue;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_60:
          [a1 setPunchThroughBackground:v22 != 0];
          continue;
        case 3u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_65:
          [a1 setBackgroundColor:v34];
          continue;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (v15)
                {
                  uint64_t v42 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v37;
          }
LABEL_70:
          [a1 setPrimaryColor:v42];
          continue;
        case 5u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
          else {
            uint64_t v50 = v45;
          }
LABEL_75:
          [a1 setSecondaryColor:v50];
          continue;
        case 6u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v54 = *v3;
        uint64_t v55 = *(void *)(a2 + v54);
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)(a2 + *v4)) {
          break;
        }
        char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
        *(void *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0) {
          goto LABEL_77;
        }
        v51 += 7;
        BOOL v15 = v52++ >= 9;
        if (v15)
        {
          uint64_t v58 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      uint64_t v58 = *(unsigned char *)(a2 + *v5) ? 0 : v53;
LABEL_80:
      [a1 setFillStyle:v58];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBDateReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setSecondsSince1970:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCalendarImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDate:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMediaArtworkImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          [a1 setPersistentID:v18];
          goto LABEL_31;
        case 2u:
          unint64_t v18 = PBReaderReadString();
          [a1 setSpotlightIdentifier:v18];
          goto LABEL_31;
        case 3u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          break;
        case 4u:
          unint64_t v18 = PBReaderReadString();
          [a1 setUniversalLibraryID:v18];
LABEL_31:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_33;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      uint64_t v27 = *(unsigned char *)(a2 + *v5) ? 0 : v22;
LABEL_36:
      [a1 setMediaEntityType:v27];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAppIconImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setBundleIdentifier:v26];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        [a1 setIconType:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBLocalImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        [a1 setLocalImageType:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMonogramImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setMonogramLetters:v26];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        [a1 setMonogramStyle:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBContactImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 2)
      {
        char v26 = PBReaderReadString();
        if (v26) {
          [a1 addContactIdentifiers:v26];
        }
      }
      else
      {
        if (v18 != 4)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_35;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_37:
            [a1 setThreeDTouchEnabled:v21 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = PBReaderReadString();
        [a1 setAppIconBadgeBundleIdentifier:v26];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBURLImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrlValue:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBURL);
    if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setDarkUrlValue:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBPointSizeReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWidth:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
    if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setHeight:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadData();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setImageData:v18];
        goto LABEL_112;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_118:
        [a1 setIsTemplate:v21 != 0];
        goto LABEL_113;
      case 3u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_122:
        [a1 setShouldCropToCircle:v28 != 0];
        goto LABEL_113;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCornerRadius:", v18, 0, 0);
        goto LABEL_112;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setScale:", v18, 0, 0);
        goto LABEL_112;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBPointSize);
        if (!PBReaderPlaceMark() || !_SFPBPointSizeReadFrom(v18, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSize:", v18, 0, 0);
        goto LABEL_112;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setContentType:v18];
        goto LABEL_112;
      case 8u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setKeyColor:v18];
        goto LABEL_112;
      case 9u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v18];
        goto LABEL_112;
      case 0xAu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v40 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v40 = 0;
        }
        else {
          uint64_t v40 = v35;
        }
LABEL_127:
        [a1 setSource:v40];
        goto LABEL_113;
      case 0xBu:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_132:
        [a1 setCornerRoundingStyle:v48];
        goto LABEL_113;
      case 0xCu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setAccessibilityLabel:v18];
        goto LABEL_112;
      case 0xDu:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBadgingImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x33u:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        while (2)
        {
          uint64_t v53 = *v3;
          uint64_t v54 = *(void *)(a2 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
            *(void *)(a2 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v15 = v51++ >= 9;
              if (v15)
              {
                uint64_t v57 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v57 = 0;
        }
        else {
          uint64_t v57 = v52;
        }
LABEL_137:
        [a1 setType:v57];
        goto LABEL_113;
      case 0x34u:
        unint64_t v18 = objc_alloc_init(_SFPBURLImage);
        if (!PBReaderPlaceMark() || !_SFPBURLImageReadFrom(v18, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrlImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x35u:
        unint64_t v18 = objc_alloc_init(_SFPBContactImage);
        if (!PBReaderPlaceMark() || (_SFPBContactImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x36u:
        unint64_t v18 = objc_alloc_init(_SFPBMonogramImage);
        if (!PBReaderPlaceMark() || (_SFPBMonogramImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMonogramImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x37u:
        unint64_t v18 = objc_alloc_init(_SFPBLocalImage);
        if (!PBReaderPlaceMark() || (_SFPBLocalImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocalImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x38u:
        unint64_t v18 = objc_alloc_init(_SFPBAppIconImage);
        if (!PBReaderPlaceMark() || (_SFPBAppIconImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppIconImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x39u:
        unint64_t v18 = objc_alloc_init(_SFPBMediaArtworkImage);
        if (!PBReaderPlaceMark() || (_SFPBMediaArtworkImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaArtworkImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Au:
        unint64_t v18 = objc_alloc_init(_SFPBCalendarImage);
        if (!PBReaderPlaceMark() || (_SFPBCalendarImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCalendarImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Bu:
        unint64_t v18 = objc_alloc_init(_SFPBSymbolImage);
        if (!PBReaderPlaceMark() || (_SFPBSymbolImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSymbolImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Cu:
        unint64_t v18 = objc_alloc_init(_SFPBPhotosLibraryImage);
        if (!PBReaderPlaceMark() || (_SFPBPhotosLibraryImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPhotosLibraryImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Du:
        unint64_t v18 = objc_alloc_init(_SFPBQuickLookThumbnailImage);
        if (!PBReaderPlaceMark() || !_SFPBQuickLookThumbnailImageReadFrom(v18, a2)) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setQuickLookThumbnailImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Eu:
        unint64_t v18 = objc_alloc_init(_SFPBClockImage);
        if (!PBReaderPlaceMark() || (_SFPBClockImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setClockImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x3Fu:
        unint64_t v18 = objc_alloc_init(_SFPBShortcutsImage);
        if (!PBReaderPlaceMark() || (_SFPBShortcutsImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_139;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShortcutsImage:", v18, 0, 0);
        goto LABEL_112;
      case 0x40u:
        unint64_t v18 = objc_alloc_init(_SFPBDefaultPunchoutAppIconImage);
        if (PBReaderPlaceMark() && _SFPBDefaultPunchoutAppIconImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDefaultPunchoutAppIconImage:", v18, 0, 0);
LABEL_112:

LABEL_113:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_139:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_113;
    }
  }
}

uint64_t _SFPBLatLngReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          double v24 = *(double *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v24 = 0.0;
        }
        [a1 setLng:v24];
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setLat:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBActionItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setLabel:v18];
        goto LABEL_91;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setLabelForLocalMedia:v18];
        goto LABEL_91;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_111:
        [a1 setIsOverlay:v22 != 0];
        goto LABEL_92;
      case 4u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addStoreIdentifiers:v18];
        }
        goto LABEL_91;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_115:
        [a1 setRequiresLocalMedia:v29 != 0];
        goto LABEL_92;
      case 6u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setLocalMediaIdentifier:v18];
        goto LABEL_91;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v18, 0, 0);
        goto LABEL_91;
      case 8u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setApplicationBundleIdentifier:v18];
        goto LABEL_91;
      case 9u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setContactIdentifier:v18];
        goto LABEL_91;
      case 0xAu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPhoneNumber:v18];
        goto LABEL_91;
      case 0xBu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setEmail:v18];
        goto LABEL_91;
      case 0xCu:
        PBReaderReadData();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setMapsData:v18];
        goto LABEL_91;
      case 0xDu:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLatitude:", v18, 0, 0);
        goto LABEL_91;
      case 0xEu:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLongitude:", v18, 0, 0);
        goto LABEL_91;
      case 0xFu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setProvider:v18];
        goto LABEL_91;
      case 0x10u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setOfferType:v18];
        goto LABEL_91;
      case 0x11u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_91;
      case 0x12u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setLabelITunes:v18];
        goto LABEL_91;
      case 0x13u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_119:
        [a1 setIsITunes:v36 != 0];
        goto LABEL_92;
      case 0x14u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIcon:", v18, 0, 0);
        goto LABEL_91;
      case 0x15u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBaseIcon:", v18, 0, 0);
        goto LABEL_91;
      case 0x16u:
        unint64_t v18 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v18, 0, 0);
        goto LABEL_91;
      case 0x17u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setMessageIdentifier:v18];
        goto LABEL_91;
      case 0x18u:
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMessageURL:", v18, 0, 0);
        goto LABEL_91;
      case 0x19u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPersistentID:v18];
        goto LABEL_91;
      case 0x1Au:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_124:
        [a1 setMediaEntityType:v48];
        goto LABEL_92;
      case 0x1Bu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setUniversalLibraryID:v18];
        goto LABEL_91;
      case 0x1Cu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setInteractionContentType:v18];
        goto LABEL_91;
      case 0x1Du:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if PBReaderPlaceMark() && (_SFPBPunchoutReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCustomDirectionsPunchout:", v18, 0, 0);
LABEL_91:

LABEL_92:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_135:

        return 0;
      case 0x1Eu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_128:
        [a1 setShouldSearchDirectionsAlongCurrentRoute:v51 != 0];
        goto LABEL_92;
      case 0x1Fu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                uint64_t v63 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
        else {
          uint64_t v63 = v58;
        }
LABEL_133:
        [a1 setDirectionsMode:v63];
        goto LABEL_92;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_92;
    }
  }
}

uint64_t _SFPBWeatherColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v19 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setCondition:v19];
        goto LABEL_28;
      case 2u:
        uint64_t v19 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v19, 0, 0);
        goto LABEL_28;
      case 3u:
        uint64_t v19 = objc_alloc_init(_SFPBDate);
        if PBReaderPlaceMark() && (_SFPBDateReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDate:", v19, 0, 0);
LABEL_28:

LABEL_49:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_51:

        return 0;
      case 4u:
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
        {
          double v23 = *(double *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v23 = 0.0;
        }
        [a1 setCloudCover:v23];
        goto LABEL_49;
      case 5u:
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
        {
          double v26 = *(double *)(*(void *)(a2 + *v7) + v25);
          *(void *)(a2 + v24) = v25 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v26 = 0.0;
        }
        [a1 setCloudCoverLowAltPct:v26];
        goto LABEL_49;
      case 6u:
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)(a2 + *v4))
        {
          double v29 = *(double *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v29 = 0.0;
        }
        [a1 setCloudCoverMidAltPct:v29];
        goto LABEL_49;
      case 7u:
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
        {
          double v32 = *(double *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v32 = 0.0;
        }
        [a1 setCloudCoverHighAltPct:v32];
        goto LABEL_49;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_49;
    }
  }
}

uint64_t _SFPBGradientColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        double v26 = objc_alloc_init(_SFPBColor);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (!PBReaderPlaceMark() || !_SFPBColorReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addColors:", v26, 0, 0);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_38:
        objc_msgSend(a1, "setGradientType:", v25, v28, v29);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRedComponent:", v18, 0, 0);
        goto LABEL_59;
      case 2u:
        char v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGreenComponent:", v18, 0, 0);
        goto LABEL_59;
      case 3u:
        char v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBlueComponent:", v18, 0, 0);
        goto LABEL_59;
      case 4u:
        char v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAlphaComponent:", v18, 0, 0);
        goto LABEL_59;
      case 5u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_66:
        [a1 setColorTintStyle:v26];
        goto LABEL_60;
      case 6u:
        char v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDarkModeColor:", v18, 0, 0);
LABEL_59:

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            char v18 = objc_alloc_init(_SFPBCalendarColor);
            if (!PBReaderPlaceMark() || (_SFPBCalendarColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_68;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setCalendarColor:", v18, 0, 0);
            goto LABEL_59;
          case '4':
            char v18 = objc_alloc_init(_SFPBAppColor);
            if (!PBReaderPlaceMark() || (_SFPBAppColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_68;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setAppColor:", v18, 0, 0);
            goto LABEL_59;
          case '5':
            char v18 = objc_alloc_init(_SFPBImageDerivedColor);
            if (!PBReaderPlaceMark() || (_SFPBImageDerivedColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_68;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setImageDerivedColor:", v18, 0, 0);
            goto LABEL_59;
          case '6':
            char v18 = objc_alloc_init(_SFPBGradientColor);
            if (!PBReaderPlaceMark() || (_SFPBGradientColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_68;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setGradientColor:", v18, 0, 0);
            goto LABEL_59;
          case '7':
            char v18 = objc_alloc_init(_SFPBWeatherColor);
            if (!PBReaderPlaceMark() || (_SFPBWeatherColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_68;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setWeatherColor:", v18, 0, 0);
            goto LABEL_59;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_60;
            }
            break;
        }
        return result;
    }
  }
}

uint64_t _SFPBCalendarColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setEventIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAppColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setApplicationBundleIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBImageDerivedColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBActivityIndicatorCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_59;
      case 2u:
        PBReaderReadString();
        char v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_59;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_59;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_67:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_60;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_71:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_60;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_75:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_60;
      case 7u:
        PBReaderReadString();
        char v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_59;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_80:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_60;
      case 9u:
        char v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_59:

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((v10 >> 3) == 51)
        {
          PBReaderReadString();
          char v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setText:v18];
          goto LABEL_59;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

uint64_t _SFPBAddToPhotosLibraryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTimeZoneReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBAirportReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setCode:v18];
        goto LABEL_36;
      case 2u:
        char v18 = objc_alloc_init(_SFPBTimeZone);
        if (!PBReaderPlaceMark() || (_SFPBTimeZoneReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTimezone:", v18, 0, 0);
        goto LABEL_36;
      case 3u:
        char v18 = objc_alloc_init(_SFPBLatLng);
        if PBReaderPlaceMark() && (_SFPBLatLngReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLocation:", v18, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      case 4u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setCity:v18];
        goto LABEL_36;
      case 5u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setStreet:v18];
        goto LABEL_36;
      case 6u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setDistrict:v18];
        goto LABEL_36;
      case 7u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setState:v18];
        goto LABEL_36;
      case 8u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setPostalCode:v18];
        goto LABEL_36;
      case 9u:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setCountryCode:v18];
        goto LABEL_36;
      case 0xAu:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setCountry:v18];
        goto LABEL_36;
      case 0xBu:
        PBReaderReadString();
        char v18 = (_SFPBTimeZone *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v18];
        goto LABEL_36;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t _SFPBFlightLegReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_71;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_71:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_74:
        [a1 setStatus:v25];
        goto LABEL_68;
      case 2u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDeparturePublishedTime:", v27, 0, 0);
        goto LABEL_67;
      case 3u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDepartureActualTime:", v27, 0, 0);
        goto LABEL_67;
      case 4u:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setDepartureTerminal:v27];
        goto LABEL_67;
      case 5u:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setDepartureGate:v27];
        goto LABEL_67;
      case 6u:
        unsigned int v27 = objc_alloc_init(_SFPBAirport);
        if (!PBReaderPlaceMark() || !_SFPBAirportReadFrom(v27, a2)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDepartureAirport:", v27, 0, 0);
        goto LABEL_67;
      case 7u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setArrivalPublishedTime:", v27, 0, 0);
        goto LABEL_67;
      case 8u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setArrivalActualTime:", v27, 0, 0);
        goto LABEL_67;
      case 9u:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setArrivalTerminal:v27];
        goto LABEL_67;
      case 0xAu:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setArrivalGate:v27];
        goto LABEL_67;
      case 0xBu:
        unsigned int v27 = objc_alloc_init(_SFPBAirport);
        if (!PBReaderPlaceMark() || !_SFPBAirportReadFrom(v27, a2)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setArrivalAirport:", v27, 0, 0);
        goto LABEL_67;
      case 0xCu:
        unsigned int v27 = objc_alloc_init(_SFPBAirport);
        if (!PBReaderPlaceMark() || !_SFPBAirportReadFrom(v27, a2)) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDivertedAirport:", v27, 0, 0);
        goto LABEL_67;
      case 0xDu:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v27];
        goto LABEL_67;
      case 0xEu:
        PBReaderReadString();
        unsigned int v27 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setBaggageClaim:v27];
        goto LABEL_67;
      case 0xFu:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDepartureGateClosedTime:", v27, 0, 0);
        goto LABEL_67;
      case 0x10u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDepartureRunwayTime:", v27, 0, 0);
        goto LABEL_67;
      case 0x11u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setArrivalRunwayTime:", v27, 0, 0);
        goto LABEL_67;
      case 0x12u:
        unsigned int v27 = objc_alloc_init(_SFPBDate);
        if PBReaderPlaceMark() && (_SFPBDateReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setArrivalGateTime:", v27, 0, 0);
LABEL_67:

LABEL_68:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_76:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_68;
    }
  }
}

BOOL _SFPBFlightReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setFlightID:v18];
        goto LABEL_33;
      case 2u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setCarrierCode:v18];
        goto LABEL_33;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setCarrierName:v18];
        goto LABEL_33;
      case 4u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setFlightNumber:v18];
        goto LABEL_33;
      case 5u:
        char v18 = objc_alloc_init(_SFPBFlightLeg);
        if (PBReaderPlaceMark() && _SFPBFlightLegReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addLegs:", v18, 0, 0);
          }
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setOperatorCarrierCode:v18];
        goto LABEL_33;
      case 7u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setOperatorFlightNumber:v18];
        goto LABEL_33;
      case 8u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setCarrierPhoneNumber:v18];
        goto LABEL_33;
      case 9u:
        PBReaderReadString();
        char v18 = (_SFPBFlightLeg *)objc_claimAutoreleasedReturnValue();
        [a1 setCarrierWebsite:v18];
        goto LABEL_33;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t _SFPBApiResultsReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (1)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
            break;
          }
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0) {
            goto LABEL_48;
          }
          v27 += 7;
          BOOL v15 = v28++ >= 9;
          if (v15)
          {
            uint64_t v34 = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v29;
        }
LABEL_51:
        objc_msgSend(a1, "setStatus:", v34, v37, v38);
      }
      else if (v18 == 100)
      {
        uint64_t v35 = objc_alloc_init(_SFPBFlight);
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        if (!PBReaderPlaceMark() || !_SFPBFlightReadFrom(v35, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v35) {
          objc_msgSend(a1, "addFlights:", v35, 0, 0);
        }
      }
      else if (v18 == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_43;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_46:
        objc_msgSend(a1, "setResultType:", v26, v37, v38);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAppAutoShortcutsItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setBundleIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAppAutoShortcutsButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v26 = objc_alloc_init(_SFPBAppAutoShortcutsItem);
        if (!PBReaderPlaceMark() || (_SFPBAppAutoShortcutsItemReadFrom(v26, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppAutoShortcutsItem:", v26, 0, 0);
      }
      else if ((v10 >> 3) == 100)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_36:
        [a1 setUniqueId:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBAppEntityAnnotationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setTypeIdentifer:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = PBReaderReadString();
    [a1 setEntityIdentifer:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAppIconCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_61;
      case 2u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_61;
      case 3u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_61;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_69:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_62;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_73:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_62;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_77:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_62;
      case 7u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_61;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_82:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_62;
      case 9u:
        unsigned int v19 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
LABEL_61:

LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_84:

        return 0;
      default:
        if (v18 == 51)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setTitle:v19];
          goto LABEL_61;
        }
        if (v18 == 52)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setApplicationBundleIdentifier:v19];
          goto LABEL_61;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_62;
    }
  }
}

uint64_t _SFPBAppLinkReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_28;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppPunchout:", v18, 0, 0);
        goto LABEL_28;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setImage:", v18, 0, 0);
LABEL_28:

LABEL_41:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_40:
        [a1 setImageAlign:v27];
        goto LABEL_41;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

uint64_t _SFPBAppLinkCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            unsigned int v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_67;
          case 2:
            PBReaderReadString();
            unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_67;
          case 3:
            PBReaderReadString();
            unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_67;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_75:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_68;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_79:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_68;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_83:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_68;
          case 7:
            PBReaderReadString();
            unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_67;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            unsigned int v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_67;
          default:
            goto LABEL_70;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_85;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_88:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_68;
      }
      if (v18 == 51) {
        break;
      }
      if (v18 == 52)
      {
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v19];
        goto LABEL_67;
      }
      if (v18 == 101)
      {
        unsigned int v19 = objc_alloc_init(_SFPBAppLink);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBAppLinkReadFrom(v19, a2))
        {
LABEL_90:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addAppLinks:", v19, 0, 0);
        }
        goto LABEL_67;
      }
LABEL_70:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_68:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_67:

    goto LABEL_68;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBArchiveViewCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_59;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_59;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_59;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_67:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_60;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_71:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_60;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_75:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_60;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_59;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_80:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_60;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_59:

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((v10 >> 3) == 51)
        {
          PBReaderReadData();
          unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setArchive:v18];
          goto LABEL_59;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

uint64_t _SFPBFormattedTextReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBText);
        if (!PBReaderPlaceMark() || (_SFPBTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_76;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText:", v18, 0, 0);
        goto LABEL_27;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setGlyph:", v18, 0, 0);
LABEL_27:

LABEL_74:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_76:

        return 0;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_59:
        [a1 setIsEmphasized:v22 != 0];
        goto LABEL_74;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_63:
        [a1 setIsBold:v29 != 0];
        goto LABEL_74;
      case 5u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v41 = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v41 = 0;
        }
        else {
          uint64_t v41 = v36;
        }
LABEL_68:
        [a1 setTextColor:v41];
        goto LABEL_74;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v49 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v49 = 0;
        }
        else {
          uint64_t v49 = v44;
        }
LABEL_73:
        [a1 setEncapsulationStyle:v49];
        goto LABEL_74;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_74;
    }
  }
}

uint64_t _SFPBTextReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setText:v26];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        [a1 setMaxLines:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRichTextReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBText);
        if (!PBReaderPlaceMark() || (_SFPBTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText:", v18, 0, 0);
        goto LABEL_36;
      case 2u:
        char v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStarRating:", v18, 0, 0);
        goto LABEL_36;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setContentAdvisory:v18];
        goto LABEL_36;
      case 4u:
        char v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || !_SFPBImageReadFrom(v18, a2)) {
          goto LABEL_40;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addIcons:", v18, 0, 0);
        }
        goto LABEL_36;
      case 5u:
        char v18 = objc_alloc_init(_SFPBFormattedText);
        if (PBReaderPlaceMark() && _SFPBFormattedTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addFormattedTextPieces:", v18, 0, 0);
          }
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t _SFPBCommandReferenceReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = PBReaderReadString();
        [a1 setReferenceIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSportsDetailReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        objc_msgSend(a1, "setRequested_entity_type:", v18);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBWeatherDetailsReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBFlightDetailsReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        [a1 setTimestamp:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTopicReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBFlightDetails *)objc_claimAutoreleasedReturnValue();
        [a1 setQuery:v18];
        goto LABEL_39;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_46:
        [a1 setType:v26];
        goto LABEL_40;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBFlightDetails *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v18];
        goto LABEL_39;
      case 0xAu:
        char v18 = objc_alloc_init(_SFPBFlightDetails);
        if (!PBReaderPlaceMark() || (_SFPBFlightDetailsReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlight:", v18, 0, 0);
        goto LABEL_39;
      case 0xBu:
        char v18 = objc_alloc_init(_SFPBWeatherDetails);
        if (!PBReaderPlaceMark() || (_SFPBWeatherDetailsReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWeather:", v18, 0, 0);
        goto LABEL_39;
      case 0xCu:
        char v18 = objc_alloc_init(_SFPBSportsDetail);
        if PBReaderPlaceMark() && (_SFPBSportsDetailReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSports:", v18, 0, 0);
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_40;
    }
  }
}

uint64_t _SFPBExecuteToolCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setToolIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBFlightCheckinCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_31:
        [a1 setPlaceHolderProperty:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRequestProductPageCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = PBReaderReadString();
        [a1 setDistributorBundleIdentifier:v27];
      }
      else if (v18 == 2)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4)) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
          *(void *)(a2 + v31) = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_44;
          }
          v28 += 7;
          BOOL v15 = v29++ >= 9;
          if (v15)
          {
            uint64_t v35 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
        uint64_t v35 = *(unsigned char *)(a2 + *v5) ? 0 : v30;
LABEL_47:
        [a1 setItemIdentifier:v35];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_39;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_42:
        [a1 setVersionIdentifier:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSportsItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v26 = PBReaderReadString();
        [a1 setIdentifier:v26];
      }
      else if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        [a1 setType:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBUpdateSportsFollowingStatusCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(_SFPBSportsItem);
        if (!PBReaderPlaceMark() || (_SFPBSportsItemReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSportsItem:", v25, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        [a1 setFollow:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBManageReservationCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_31:
        [a1 setPlaceHolderProperty:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBReminderReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        unsigned int v19 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDueDate:", v19, 0, 0);
        goto LABEL_26;
      }
      if (v18 == 1)
      {
        PBReaderReadString();
        unsigned int v19 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v19];
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unsigned int v19 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
    [a1 setNotes:v19];
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCreateReminderCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBReminder);
        if (!PBReaderPlaceMark() || !_SFPBReminderReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setReminder:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBStructuredLocationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + *v4))
        {
          double v23 = *(double *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v23 = 0.0;
        }
        [a1 setRadius:v23];
      }
      else
      {
        if (v19 == 2)
        {
          uint64_t v20 = objc_alloc_init(_SFPBLatLng);
          if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v20, a2) & 1) == 0)
          {

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setGeoLocation:", v20, 0, 0);
        }
        else
        {
          if (v19 != 1)
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          PBReaderReadString();
          uint64_t v20 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
          [a1 setTitle:v20];
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCalendarEventReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_51;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartDate:", v18, 0, 0);
        goto LABEL_51;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBDate);
        if (!PBReaderPlaceMark() || (_SFPBDateReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndDate:", v18, 0, 0);
        goto LABEL_51;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_57:
        [a1 setIsAllDay:v22 != 0];
        goto LABEL_52;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBStructuredLocation);
        if (!PBReaderPlaceMark() || (_SFPBStructuredLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v18, 0, 0);
        goto LABEL_51;
      case 6u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setNotes:v18];
        goto LABEL_51;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBTimeZone);
        if (!PBReaderPlaceMark() || (_SFPBTimeZoneReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartTimeZone:", v18, 0, 0);
        goto LABEL_51;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBTimeZone);
        if (!PBReaderPlaceMark() || (_SFPBTimeZoneReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndTimeZone:", v18, 0, 0);
        goto LABEL_51;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBStructuredLocation);
        if (!PBReaderPlaceMark() || (_SFPBStructuredLocationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEndLocation:", v18, 0, 0);
        goto LABEL_51;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if PBReaderPlaceMark() && (_SFPBURLReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUrl:", v18, 0, 0);
LABEL_51:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_59:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_52;
    }
  }
}

uint64_t _SFPBCreateCalendarEventCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBCalendarEvent);
        if (!PBReaderPlaceMark() || (_SFPBCalendarEventReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEvent:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCreateContactCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v25 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v25, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        [a1 setAddToExistingContact:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBClearProactiveCategoryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_43;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        uint64_t v33 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_46:
        [a1 setCategory:v33];
      }
      else if (v18 == 3)
      {
        char v34 = PBReaderReadString();
        [a1 setProactiveIdentifier:v34];
      }
      else if (v18 == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_39;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_41:
        [a1 setShouldClearWholeSection:v21 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBCATModelReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        char v19 = PBReaderReadString();
        [a1 setBundleIdentifier:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        char v19 = PBReaderReadString();
        [a1 setCatIdentifier:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = PBReaderReadData();
    [a1 setParams:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBShowWrapperResponseViewCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBCATModel);
        if (!PBReaderPlaceMark() || !_SFPBCATModelReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCatModel:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRejectPeopleInPhotoCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addRejectedPeople:", v18, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBPhotosLibraryImage);
    if (!PBReaderPlaceMark() || (_SFPBPhotosLibraryImageReadFrom(v18, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setPhotosLibraryImage:", v18, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBViewEmailCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_31:
        [a1 setPlaceHolderProperty:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBSportsSubscriptionRequestItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setSportIdentifier:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setCanonicalIdentifier:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v19 = PBReaderReadString();
    [a1 setLeagueIdentifier:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBDomainSubscriptionRequestItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBSportsSubscriptionRequestItem);
        if (!PBReaderPlaceMark() || !_SFPBSportsSubscriptionRequestItemReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSportsSubscriptionRequestItem:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBCloudChannelsRequestItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setPushTopic:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setChannelIdentifier:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v19 = PBReaderReadString();
    [a1 setSubscribedEntityIdentifier:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBSubscribeForUpdatesCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBCloudChannelsRequestItem);
        if (!PBReaderPlaceMark() || !_SFPBCloudChannelsRequestItemReadFrom(v18, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCloudChannelsRequestItem:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBDomainSubscriptionRequestItem);
    if (!PBReaderPlaceMark() || (_SFPBDomainSubscriptionRequestItemReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setDomainSubscriptionRequestItem:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBExpandInlineCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_31:
        [a1 setPlaceHolderProperty:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPerformContactActionCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_49;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        uint64_t v33 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_52:
        [a1 setContactActionType:v33];
      }
      else if (v18 == 2)
      {
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (1)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_54;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v36 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_56:
        [a1 setDidDisplayHandleOptions:v36 != 0];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_47:
        [a1 setDidSelectFromOptionsMenu:v21 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMediaMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setMediaName:v18];
        goto LABEL_39;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_46:
        objc_msgSend(a1, "setMediaType:", v27, v28, v29);
        goto LABEL_40;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setArtistName:v18];
        goto LABEL_39;
      case 4u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setAlbumName:v18];
        goto LABEL_39;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (PBReaderPlaceMark() && _SFPBPunchoutReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addMediaPunchouts:", v18, 0, 0);
          }
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addBundleIdentifiersToExclude:v18];
        }
        goto LABEL_39;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setDisambiguationTitle:v18];
        goto LABEL_39;
      case 8u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setMediaIdentifier:v18];
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_40;
    }
  }
}

BOOL _SFPBOpenMediaCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBMediaMetadata);
        if (!PBReaderPlaceMark() || (_SFPBMediaMetadataReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaMetadata:", v18, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v18 = (_SFPBMediaMetadata *)objc_claimAutoreleasedReturnValue();
    [a1 setClientSelectedBundleIdentifier:v18];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAudioDataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v19 = PBReaderReadData();
          [a1 setAudioBuffer:v19];
          goto LABEL_23;
        case 2u:
          char v19 = PBReaderReadString();
          [a1 setFormatID:v19];
LABEL_23:

          continue;
        case 3u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          while (2)
          {
            uint64_t v24 = *v3;
            uint64_t v25 = *(void *)(a2 + v24);
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if (v27 < 0)
              {
                v21 += 7;
                BOOL v15 = v22++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_80;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
          else {
            uint64_t v28 = v23;
          }
LABEL_80:
          [a1 setFormatFlags:v28];
          continue;
        case 4u:
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
          {
            double v31 = *(double *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + v16) = 1;
            double v31 = 0.0;
          }
          [a1 setSampleRate:v31];
          continue;
        case 5u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (2)
          {
            uint64_t v35 = *v3;
            uint64_t v36 = *(void *)(a2 + v35);
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v37;
              v34 |= (unint64_t)(v38 & 0x7F) << v32;
              if (v38 < 0)
              {
                v32 += 7;
                BOOL v15 = v33++ >= 9;
                if (v15)
                {
                  uint64_t v39 = 0;
                  goto LABEL_85;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
          else {
            uint64_t v39 = v34;
          }
LABEL_85:
          [a1 setBitsPerChannel:v39];
          continue;
        case 6u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          while (2)
          {
            uint64_t v43 = *v3;
            uint64_t v44 = *(void *)(a2 + v43);
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
              *(void *)(a2 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                BOOL v15 = v41++ >= 9;
                if (v15)
                {
                  uint64_t v47 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
          else {
            uint64_t v47 = v42;
          }
LABEL_90:
          [a1 setBytesPerFrame:v47];
          continue;
        case 7u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (2)
          {
            uint64_t v51 = *v3;
            uint64_t v52 = *(void *)(a2 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                BOOL v15 = v49++ >= 9;
                if (v15)
                {
                  uint64_t v55 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v55 = 0;
          }
          else {
            uint64_t v55 = v50;
          }
LABEL_95:
          [a1 setChannelsPerFrame:v55];
          continue;
        case 8u:
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          while (2)
          {
            uint64_t v59 = *v3;
            uint64_t v60 = *(void *)(a2 + v59);
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v61;
              v58 |= (unint64_t)(v62 & 0x7F) << v56;
              if (v62 < 0)
              {
                v56 += 7;
                BOOL v15 = v57++ >= 9;
                if (v15)
                {
                  uint64_t v63 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v63 = 0;
          }
          else {
            uint64_t v63 = v58;
          }
LABEL_100:
          [a1 setBytesPerPacket:v63];
          continue;
        case 9u:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          while (2)
          {
            uint64_t v67 = *v3;
            uint64_t v68 = *(void *)(a2 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
              *(void *)(a2 + v67) = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                BOOL v15 = v65++ >= 9;
                if (v15)
                {
                  uint64_t v71 = 0;
                  goto LABEL_105;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v71 = 0;
          }
          else {
            uint64_t v71 = v66;
          }
LABEL_105:
          [a1 setFramesPerPacket:v71];
          continue;
        case 0xAu:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v75 = *v3;
        uint64_t v76 = *(void *)(a2 + v75);
        unint64_t v77 = v76 + 1;
        if (v76 == -1 || v77 > *(void *)(a2 + *v4)) {
          break;
        }
        char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
        *(void *)(a2 + v75) = v77;
        v74 |= (unint64_t)(v78 & 0x7F) << v72;
        if ((v78 & 0x80) == 0) {
          goto LABEL_107;
        }
        v72 += 7;
        BOOL v15 = v73++ >= 9;
        if (v15)
        {
          uint64_t v79 = 0;
          goto LABEL_110;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_107:
      uint64_t v79 = *(unsigned char *)(a2 + *v5) ? 0 : v74;
LABEL_110:
      [a1 setReserved:v79];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPlayMediaCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBMediaMetadata);
        if (!PBReaderPlaceMark() || (_SFPBMediaMetadataReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaMetadata:", v18, 0, 0);
        goto LABEL_41;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_46;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_46:
        [a1 setPlaybackLocation:v27];
        goto LABEL_51;
      case 3u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_50;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_50:
        [a1 setShouldPause:v30 != 0];
        goto LABEL_51;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBAudioData);
        if PBReaderPlaceMark() && (_SFPBAudioDataReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setAudioData:", v18, 0, 0);
LABEL_41:

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_53:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

uint64_t _SFPBSceneReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_42;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v33 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_45:
        [a1 setSceneIdentifier:v33];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_37;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_40:
        [a1 setSceneType:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBShowPhotosOneUpViewCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBPhotosLibraryImage);
        if (!PBReaderPlaceMark() || (_SFPBPhotosLibraryImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPhotosLibraryImage:", v18, 0, 0);
        goto LABEL_38;
      case 2u:
        char v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMatchedPerson:", v18, 0, 0);
        goto LABEL_38;
      case 3u:
        char v18 = objc_alloc_init(_SFPBScene);
        if (!PBReaderPlaceMark() || !_SFPBSceneReadFrom(v18, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addMatchedScenes:", v18, 0, 0);
        }
        goto LABEL_38;
      case 4u:
        char v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2)) {
          goto LABEL_42;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addMatchedPeople:", v18, 0, 0);
        }
        goto LABEL_38;
      case 5u:
        char v18 = objc_alloc_init(_SFPBPunchout);
        if PBReaderPlaceMark() && (_SFPBPunchoutReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotoFilePunchout:", v18, 0, 0);
LABEL_38:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_42:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBWatchListItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = PBReaderReadString();
          [a1 setWatchListIdentifier:v18];
          goto LABEL_31;
        case 2u:
          char v18 = PBReaderReadString();
          [a1 setSeasonEpisodeTextFormat:v18];
          goto LABEL_31;
        case 3u:
          char v18 = PBReaderReadString();
          [a1 setContinueInTextFormat:v18];
          goto LABEL_31;
        case 4u:
          char v18 = PBReaderReadString();
          [a1 setOpenButtonTitle:v18];
          goto LABEL_31;
        case 5u:
          char v18 = PBReaderReadString();
          [a1 setInstallButtonTitle:v18];
          goto LABEL_31;
        case 6u:
          char v18 = PBReaderReadString();
          [a1 setPurchaseOfferTextFormat:v18];
          goto LABEL_31;
        case 7u:
          char v18 = PBReaderReadString();
          [a1 setInUpNextText:v18];
          goto LABEL_31;
        case 8u:
          char v18 = PBReaderReadString();
          [a1 setAddToUpNextText:v18];
          goto LABEL_31;
        case 9u:
          char v18 = PBReaderReadString();
          [a1 setAddedToUpNextText:v18];
          goto LABEL_31;
        case 0xAu:
          char v18 = PBReaderReadString();
          [a1 setWatchLiveTextFormat:v18];
LABEL_31:

          continue;
        case 0xBu:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_51;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_51:
          [a1 setIsMediaContainer:v22 != 0];
          continue;
        case 0xCu:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v32;
        v29 |= (unint64_t)(v33 & 0x7F) << v27;
        if ((v33 & 0x80) == 0) {
          goto LABEL_53;
        }
        v27 += 7;
        BOOL v15 = v28++ >= 9;
        if (v15)
        {
          uint64_t v34 = 0;
          goto LABEL_56;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
      uint64_t v34 = *(unsigned char *)(a2 + *v5) ? 0 : v29;
LABEL_56:
      [a1 setType:v34];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBToggleWatchListStatusCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v25 = objc_alloc_init(_SFPBWatchListItem);
        if (!PBReaderPlaceMark() || (_SFPBWatchListItemReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWatchListItem:", v25, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        [a1 setShouldAddToWatchList:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBContactCopyItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_SFPBURL);
    if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setContactFileLocation:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBImageCopyItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBCoreSpotlightCopyItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = PBReaderReadString();
          if (v18) {
            [a1 addDataProviderTypeIdentifiers:v18];
          }
          goto LABEL_27;
        case 2u:
          char v18 = PBReaderReadString();
          if (v18) {
            [a1 addFileProviderTypeIdentifiers:v18];
          }
          goto LABEL_27;
        case 3u:
          char v18 = PBReaderReadString();
          [a1 setApplicationBundleIdentifier:v18];
          goto LABEL_27;
        case 4u:
          char v18 = PBReaderReadString();
          [a1 setCoreSpotlightIdentifier:v18];
LABEL_27:

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_28:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTextCopyItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setCopyableString:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBCopyItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBTextCopyItem);
        if (!PBReaderPlaceMark() || (_SFPBTextCopyItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTextCopyItem:", v18, 0, 0);
        goto LABEL_33;
      case 2u:
        char v18 = objc_alloc_init(_SFPBCoreSpotlightCopyItem);
        if (!PBReaderPlaceMark() || !_SFPBCoreSpotlightCopyItemReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpotlightCopyItem:", v18, 0, 0);
        goto LABEL_33;
      case 3u:
        char v18 = objc_alloc_init(_SFPBImageCopyItem);
        if (!PBReaderPlaceMark() || (_SFPBImageCopyItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImageCopyItem:", v18, 0, 0);
        goto LABEL_33;
      case 4u:
        char v18 = objc_alloc_init(_SFPBContactCopyItem);
        if (PBReaderPlaceMark() && _SFPBContactCopyItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setContactCopyItem:", v18, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t _SFPBCopyCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBCopyItem);
        if (!PBReaderPlaceMark() || !_SFPBCopyItemReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCopyableItem:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBCoreSpotlightShareItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setApplicationBundleIdentifier:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        unsigned int v19 = PBReaderReadString();
        [a1 setShareProviderTypeIdentifier:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v19 = PBReaderReadString();
    [a1 setCoreSpotlightIdentifier:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBURLShareItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrlValue:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBShareItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBURLShareItem);
        if (!PBReaderPlaceMark() || (_SFPBURLShareItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrlShareItem:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBCoreSpotlightShareItem);
    if (!PBReaderPlaceMark() || !_SFPBCoreSpotlightShareItemReadFrom(v18, a2))
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSpotlightShareItem:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBShareCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBShareItem);
        if (!PBReaderPlaceMark() || !_SFPBShareItemReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShareItem:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCardSearchMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_39;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_41:
          [a1 setIsServerEntity:v20 != 0];
          continue;
        case 2u:
          char v26 = PBReaderReadString();
          [a1 setSearchQuery:v26];
          goto LABEL_30;
        case 3u:
          char v26 = PBReaderReadString();
          [a1 setViewConfigName:v26];
LABEL_30:

          continue;
        case 4u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v32;
        v29 |= (unint64_t)(v33 & 0x7F) << v27;
        if ((v33 & 0x80) == 0) {
          goto LABEL_43;
        }
        v27 += 7;
        BOOL v15 = v28++ >= 9;
        if (v15)
        {
          uint64_t v29 = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_45:
      [a1 setIsFederatedDomainSearch:v29 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBEntitySearchMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = PBReaderReadString();
          [a1 setEntitySearchQuery:v18];
          goto LABEL_25;
        case 2u:
          char v18 = PBReaderReadString();
          [a1 setTokenQuery:v18];
          goto LABEL_25;
        case 3u:
          char v18 = PBReaderReadString();
          [a1 setEntityIdentifier:v18];
          goto LABEL_25;
        case 4u:
          char v18 = PBReaderReadString();
          [a1 setViewConfigName:v18];
LABEL_25:

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_26:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCardMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v25 = PBReaderReadString();
        [a1 setQueryToSearchAcrossAllDomains:v25];
      }
      else if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_33:
        [a1 setIsServerEntity:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBDrillDownMetadataReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setCardIdentifier:v19];
        goto LABEL_42;
      case 2u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
        if (v19) {
          [a1 addCardDomains:v19];
        }
        goto LABEL_42;
      case 3u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setQtype:v19];
        goto LABEL_42;
      case 4u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
        if (v19) {
          [a1 addCardIdentifiers:v19];
        }
        goto LABEL_42;
      case 5u:
        unsigned int v19 = objc_alloc_init(_SFPBCardMetadata);
        if (!PBReaderPlaceMark() || (_SFPBCardMetadataReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardOnlyMetadata:", v19, 0, 0);
        goto LABEL_42;
      case 6u:
        unsigned int v19 = objc_alloc_init(_SFPBEntitySearchMetadata);
        if (!PBReaderPlaceMark() || !_SFPBEntitySearchMetadataReadFrom(v19, a2)) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntitySearchOnlyMetadata:", v19, 0, 0);
        goto LABEL_42;
      case 7u:
        unsigned int v19 = objc_alloc_init(_SFPBCardSearchMetadata);
        if (!PBReaderPlaceMark() || (_SFPBCardSearchMetadataReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_49;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCardSearchMetadata:", v19, 0, 0);
        goto LABEL_42;
      case 8u:
        unsigned int v19 = objc_alloc_init(_SFPBEntitySearchMetadata);
        if (PBReaderPlaceMark() && _SFPBEntitySearchMetadataReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEntitySearchMetadata:", v19, 0, 0);
LABEL_42:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_49:

        return 0;
      case 9u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
        [a1 setViewConfigName:v19];
        goto LABEL_42;
      default:
        if (v18 == 100)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setDebugParams:v19];
          goto LABEL_42;
        }
        if (v18 == 101)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBCardMetadata *)objc_claimAutoreleasedReturnValue();
          [a1 setParams:v19];
          goto LABEL_42;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_43;
    }
  }
}

uint64_t _SFPBPerformEntityQueryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBSymbolImage *)objc_claimAutoreleasedReturnValue();
        [a1 setSearchString:v18];
        goto LABEL_46;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBSymbolImage *)objc_claimAutoreleasedReturnValue();
        [a1 setTokenString:v18];
        goto LABEL_46;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBSymbolImage);
        if (!PBReaderPlaceMark() || (_SFPBSymbolImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSymbolImage:", v18, 0, 0);
        goto LABEL_46;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_53:
        [a1 setEntityType:v27];
        goto LABEL_47;
      case 5u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBSymbolImage *)objc_claimAutoreleasedReturnValue();
        [a1 setEntityIdentifier:v18];
        goto LABEL_46;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEntityBackgroundColor:", v18, 0, 0);
        goto LABEL_46;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBDrillDownMetadata);
        if (!PBReaderPlaceMark() || !_SFPBDrillDownMetadataReadFrom(v18, a2)) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetadata:", v18, 0, 0);
        goto LABEL_46;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBDrillDownMetadata);
        if (!PBReaderPlaceMark() || !_SFPBDrillDownMetadataReadFrom(v18, a2)) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDrilldownMetadata:", v18, 0, 0);
        goto LABEL_46;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTokenImage:", v18, 0, 0);
LABEL_46:

LABEL_47:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

uint64_t _SFPBShowScreenTimeRequestSheetCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setRequestIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBShowPurchaseRequestSheetCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setRequestIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPerformPersonEntityQueryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBToggleAudioCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          [a1 setLocalMediaIdentifier:v18];
          goto LABEL_31;
        case 2u:
          unint64_t v18 = PBReaderReadString();
          [a1 setPersistentIdentifier:v18];
          goto LABEL_31;
        case 3u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          break;
        case 4u:
          unint64_t v18 = PBReaderReadString();
          [a1 setUniversalLibraryIdentifier:v18];
LABEL_31:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_33;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      uint64_t v27 = *(unsigned char *)(a2 + *v5) ? 0 : v22;
LABEL_36:
      [a1 setMediaEntityType:v27];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBBeginMapsRoutingCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = objc_alloc_init(_SFPBLatLng);
          if PBReaderPlaceMark() && (_SFPBLatLngReadFrom(v18, a2))
          {
            PBReaderRecallMark();
            objc_msgSend(a1, "setLocation:", v18, 0, 0);
            goto LABEL_33;
          }

          return 0;
        case 2u:
          PBReaderReadData();
          unint64_t v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
          [a1 setMapsData:v18];
          goto LABEL_33;
        case 3u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_44;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_44:
          [a1 setShouldSearchDirectionsAlongCurrentRoute:v22 != 0];
          continue;
        case 4u:
          PBReaderReadString();
          unint64_t v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
          [a1 setName:v18];
LABEL_33:

          continue;
        case 5u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
        *(void *)(a2 + v30) = v32;
        v29 |= (unint64_t)(v33 & 0x7F) << v27;
        if ((v33 & 0x80) == 0) {
          goto LABEL_46;
        }
        v27 += 7;
        BOOL v15 = v28++ >= 9;
        if (v15)
        {
          uint64_t v34 = 0;
          goto LABEL_49;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
      uint64_t v34 = *(unsigned char *)(a2 + *v5) ? 0 : v29;
LABEL_49:
      [a1 setDirectionsMode:v34];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBEmailCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setEmail:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCallCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setPhoneNumber:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPlayVideoCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrl:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBOpenCalculationCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setInput:v26];
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_34;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_36:
            [a1 setShouldOpenCurrencyConversionProvider:v21 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = PBReaderReadString();
        [a1 setOutput:v26];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPerformContactQueryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setContactIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBInvokeSiriCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setUtteranceText:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSearchWebCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setSearchString:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBUpdateSearchQueryCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setSearchString:v26];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        [a1 setQuerySource:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSearchInAppCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = PBReaderReadString();
        [a1 setSearchString:v27];
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_34;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_37;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v26 = 0;
            }
            else {
              uint64_t v26 = v21;
            }
LABEL_37:
            [a1 setSearchInAppType:v26];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v27 = PBReaderReadString();
        [a1 setApplicationBundleIdentifier:v27];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPerformIntentCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          [a1 setIntentMessageName:v18];
          goto LABEL_32;
        case 2u:
          unint64_t v18 = PBReaderReadString();
          [a1 setApplicationBundleIdentifier:v18];
          goto LABEL_32;
        case 3u:
          unint64_t v18 = PBReaderReadData();
          [a1 setIntentMessageData:v18];
          goto LABEL_32;
        case 4u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          break;
        case 5u:
          unint64_t v18 = PBReaderReadString();
          [a1 setBiomeStreamIdentifier:v18];
LABEL_32:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_34;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v22 = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v22 = 0;
      }
LABEL_36:
      [a1 setIsRunnableWorkflow:v22 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBOpenCoreSpotlightItemCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        char v19 = PBReaderReadString();
        [a1 setApplicationBundleIdentifier:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        char v19 = PBReaderReadString();
        [a1 setCoreSpotlightIdentifier:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = PBReaderReadString();
    [a1 setActionIdentifier:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBIndexedUserActivityCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setUserActivityRequiredString:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = PBReaderReadString();
    [a1 setApplicationBundleIdentifier:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRunVoiceShortcutCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setVoiceShortcutIdentifier:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = PBReaderReadString();
    [a1 setApplicationBundleIdentifier:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBLaunchAppCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setApplicationBundleIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBUserReportRequestReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setAffordanceText:v18];
        goto LABEL_41;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_41;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setDismissText:v18];
        goto LABEL_41;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_50;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addUserReportOptions:", v18, 0, 0);
        }
        goto LABEL_41;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_48:
        objc_msgSend(a1, "setReportType:", v27, v28, v29);
        goto LABEL_42;
      case 6u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setReportOptionsSectionTitle:v18];
        goto LABEL_41;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setDisclaimerText:v18];
        goto LABEL_41;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if PBReaderPlaceMark() && (_SFPBPunchoutReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDisclaimerLearnMorePunchout:", v18, 0, 0);
LABEL_41:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_50:

        return 0;
      case 9u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setAttachmentSectionTitle:v18];
        goto LABEL_41;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t _SFPBRequestUserReportCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBUserReportRequest);
        if (!PBReaderPlaceMark() || (_SFPBUserReportRequestReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserReportRequest:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRequestAppClipInstallCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrl:", v18, 0, 0);
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    unint64_t v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
    [a1 setApplicationBundleIdentifier:v18];
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBOpenWebClipCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setClipIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBOpenAppClipCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setClipIdentifier:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBOpenFileProviderItemCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setCoreSpotlightIdentifier:v26];
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_34;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_36:
            [a1 setShouldRevealFile:v21 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = PBReaderReadString();
        [a1 setFileProviderIdentifier:v26];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBOpenPunchoutCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBShowAppStoreSheetCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setStoreIdentifier:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = PBReaderReadString();
    [a1 setApplicationBundleIdentifier:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBNamedProtobufMessageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadData();
        [a1 setProtobufMessageData:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = PBReaderReadString();
    [a1 setProtobufMessageName:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBButtonItemAppearanceReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_53;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_56:
        [a1 setStyle:v25];
        goto LABEL_71;
      case 2u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v29;
        }
LABEL_61:
        [a1 setRole:v34];
        goto LABEL_71;
      case 3u:
        uint64_t v35 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v35, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTintColor:", v35, 0, 0);

LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v38;
        }
LABEL_66:
        [a1 setRenderingMode:v43];
        goto LABEL_71;
      case 5u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_70:
        [a1 setPreferNoFallbackImage:v46 != 0];
        goto LABEL_71;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_71;
    }
  }
}

uint64_t _SFPBStoreButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) > 2)
      {
        if (v18 == 3)
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (1)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
              break;
            }
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0) {
              goto LABEL_57;
            }
            v35 += 7;
            BOOL v15 = v36++ >= 9;
            if (v15)
            {
              uint64_t v42 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v37;
          }
LABEL_60:
          [a1 setIdentifierType:v42];
        }
        else
        {
          if (v18 != 100)
          {
LABEL_45:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (1)
          {
            uint64_t v29 = *v3;
            uint64_t v30 = *(void *)(a2 + v29);
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_52;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v33 = 0;
              goto LABEL_55;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
          else {
            uint64_t v33 = v28;
          }
LABEL_55:
          [a1 setUniqueId:v33];
        }
      }
      else if (v18 == 1)
      {
        uint64_t v34 = PBReaderReadString();
        [a1 setIdentifier:v34];
      }
      else
      {
        if (v18 != 2) {
          goto LABEL_45;
        }
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_48;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_50;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_50:
        [a1 setShouldOpenAppAfterInstallCompletes:v21 != 0];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBToggleButtonConfigurationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setUntoggledTitle:v18];
        goto LABEL_29;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setToggledTitle:v18];
        goto LABEL_29;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_33;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUntoggledImage:", v18, 0, 0);
        goto LABEL_29;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setToggledImage:", v18, 0, 0);
LABEL_29:

LABEL_30:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_33:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_30;
    }
  }
}

uint64_t _SFPBPlayAudioButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v18 == 3)
      {
        char v19 = objc_alloc_init(_SFPBAudioData);
        if (!PBReaderPlaceMark() || (_SFPBAudioDataReadFrom(v19, a2) & 1) == 0)
        {
LABEL_49:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioData:", v19, 0, 0);
LABEL_39:

        goto LABEL_47;
      }
      if (v18 != 100)
      {
LABEL_40:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_43;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v22;
      }
LABEL_46:
      [a1 setUniqueId:v27];
LABEL_47:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v18 == 1)
    {
      char v19 = objc_alloc_init(_SFPBMediaMetadata);
      if (!PBReaderPlaceMark() || (_SFPBMediaMetadataReadFrom(v19, a2) & 1) == 0) {
        goto LABEL_49;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setMediaMetadata:", v19, 0, 0);
    }
    else
    {
      if (v18 != 2) {
        goto LABEL_40;
      }
      char v19 = objc_alloc_init(_SFPBToggleButtonConfiguration);
      if (!PBReaderPlaceMark() || !_SFPBToggleButtonConfigurationReadFrom(v19, a2)) {
        goto LABEL_49;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setToggleButtonConfiguration:", v19, 0, 0);
    }
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPlayWatchListItemButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v18 == 3)
      {
        char v19 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0)
        {
LABEL_47:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v19, 0, 0);
LABEL_37:

        goto LABEL_45;
      }
      if (v18 != 100)
      {
LABEL_38:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_41;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_44;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v22;
      }
LABEL_44:
      [a1 setUniqueId:v27];
LABEL_45:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v18 == 1)
    {
      char v19 = objc_alloc_init(_SFPBWatchListItem);
      if (!PBReaderPlaceMark() || (_SFPBWatchListItemReadFrom(v19, a2) & 1) == 0) {
        goto LABEL_47;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setWatchListItem:", v19, 0, 0);
    }
    else
    {
      if (v18 != 2) {
        goto LABEL_38;
      }
      PBReaderReadString();
      char v19 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
      [a1 setTitle:v19];
    }
    goto LABEL_37;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSportsFollowButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v18 == 3)
      {
        PBReaderReadString();
        char v19 = (_SFPBSportsItem *)objc_claimAutoreleasedReturnValue();
        [a1 setFallbackTitle:v19];
LABEL_37:

        goto LABEL_45;
      }
      if (v18 != 100)
      {
LABEL_38:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_41;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_44;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v22;
      }
LABEL_44:
      [a1 setUniqueId:v27];
LABEL_45:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v18 == 1)
    {
      char v19 = objc_alloc_init(_SFPBSportsItem);
      if (!PBReaderPlaceMark() || (_SFPBSportsItemReadFrom(v19, a2) & 1) == 0)
      {
LABEL_47:

        return 0;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setSportsItem:", v19, 0, 0);
    }
    else
    {
      if (v18 != 2) {
        goto LABEL_38;
      }
      char v19 = objc_alloc_init(_SFPBToggleButtonConfiguration);
      if (!PBReaderPlaceMark() || !_SFPBToggleButtonConfigurationReadFrom(v19, a2)) {
        goto LABEL_47;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setToggleButtonConfiguration:", v19, 0, 0);
    }
    goto LABEL_37;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBWatchListButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v27 = objc_alloc_init(_SFPBWatchListItem);
        if (!PBReaderPlaceMark() || (_SFPBWatchListItemReadFrom(v27, a2) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWatchListItem:", v27, 0, 0);
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 100)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_38;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v26 = 0;
            }
            else {
              uint64_t v26 = v21;
            }
LABEL_41:
            [a1 setUniqueId:v26];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v27 = objc_alloc_init(_SFPBToggleButtonConfiguration);
        if (!PBReaderPlaceMark() || !_SFPBToggleButtonConfigurationReadFrom(v27, a2)) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setToggleButtonConfiguration:", v27, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCoreSpotlightButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v18 == 3)
      {
        char v19 = PBReaderReadString();
        [a1 setCoreSpotlightIdentifier:v19];
LABEL_34:

        goto LABEL_42;
      }
      if (v18 != 100)
      {
LABEL_35:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_38;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_41;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v22;
      }
LABEL_41:
      [a1 setUniqueId:v27];
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v18 == 1)
    {
      char v19 = PBReaderReadString();
      if (v19) {
        [a1 addActionItemTypes:v19];
      }
    }
    else
    {
      if (v18 != 2) {
        goto LABEL_35;
      }
      char v19 = PBReaderReadString();
      [a1 setApplicationBundleIdentifier:v19];
    }
    goto LABEL_34;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBContactButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) > 2)
      {
        if (v18 == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            uint64_t v31 = *v3;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v4)) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_50;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v35 = 0;
              goto LABEL_53;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v35 = 0;
          }
          else {
            uint64_t v35 = v30;
          }
LABEL_53:
          [a1 addActionTypesToShow:v35];
        }
        else
        {
          if (v18 != 100)
          {
LABEL_42:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_45;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              uint64_t v27 = 0;
              goto LABEL_48;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_48:
          [a1 setUniqueId:v27];
        }
      }
      else
      {
        if (v18 == 1)
        {
          PBReaderReadString();
          char v19 = (_SFPBPerson *)objc_claimAutoreleasedReturnValue();
          [a1 setContactIdentifier:v19];
        }
        else
        {
          if (v18 != 2) {
            goto LABEL_42;
          }
          char v19 = objc_alloc_init(_SFPBPerson);
          if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v19, a2))
          {

            return 0;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setPerson:", v19, 0, 0);
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCommandButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
        goto LABEL_40;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_40;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBCommand);
        if (!PBReaderPlaceMark() || !_SFPBCommandReadFrom(v18, a2)) {
          goto LABEL_59;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommand:", v18, 0, 0);
        goto LABEL_40;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        if (PBReaderPlaceMark() && _SFPBButtonItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addPreviewButtonItems:", v18, 0, 0);
          }
LABEL_40:

LABEL_57:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_59:

        return 0;
      case 5u:
      case 6u:
        goto LABEL_30;
      case 7u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_51:
        [a1 setIsDestructive:v30 != 0];
        goto LABEL_57;
      default:
        if ((v10 >> 3) == 100)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_53;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v26 = 0;
              goto LABEL_56;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_56:
          objc_msgSend(a1, "setUniqueId:", v26, v35, v36);
        }
        else
        {
LABEL_30:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        goto LABEL_57;
    }
  }
}

BOOL _SFPBCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBShowContactCardCommand);
        if (!PBReaderPlaceMark() || (_SFPBShowContactCardCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowContactCardCommand:", v18, 0, 0);
        goto LABEL_182;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBShowSFCardCommand);
        if (!PBReaderPlaceMark() || (_SFPBShowSFCardCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowSFCardCommand:", v18, 0, 0);
        goto LABEL_182;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBShowAppStoreSheetCommand);
        if (!PBReaderPlaceMark() || !_SFPBShowAppStoreSheetCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowAppStoreSheetCommand:", v18, 0, 0);
        goto LABEL_182;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenPunchoutCommand);
        if (!PBReaderPlaceMark() || (_SFPBOpenPunchoutCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenPunchoutCommand:", v18, 0, 0);
        goto LABEL_182;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenFileProviderItemCommand);
        if (!PBReaderPlaceMark() || (_SFPBOpenFileProviderItemCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenFileProviderItemCommand:", v18, 0, 0);
        goto LABEL_182;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenAppClipCommand);
        if (!PBReaderPlaceMark() || (_SFPBOpenAppClipCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenAppClipCommand:", v18, 0, 0);
        goto LABEL_182;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenWebClipCommand);
        if (!PBReaderPlaceMark() || (_SFPBOpenWebClipCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenWebClipCommand:", v18, 0, 0);
        goto LABEL_182;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRequestAppClipInstallCommand);
        if (!PBReaderPlaceMark() || !_SFPBRequestAppClipInstallCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestAppClipInstallCommand:", v18, 0, 0);
        goto LABEL_182;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRequestUserReportCommand);
        if (!PBReaderPlaceMark() || (_SFPBRequestUserReportCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestUserReportCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBLaunchAppCommand);
        if (!PBReaderPlaceMark() || (_SFPBLaunchAppCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLaunchAppCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xBu:
        unint64_t v18 = objc_alloc_init(_SFPBRunVoiceShortcutCommand);
        if (!PBReaderPlaceMark() || !_SFPBRunVoiceShortcutCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRunVoiceShortcutCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xCu:
        unint64_t v18 = objc_alloc_init(_SFPBIndexedUserActivityCommand);
        if (!PBReaderPlaceMark() || !_SFPBIndexedUserActivityCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIndexedUserActivityCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xDu:
        unint64_t v18 = objc_alloc_init(_SFPBOpenCoreSpotlightItemCommand);
        if (!PBReaderPlaceMark() || !_SFPBOpenCoreSpotlightItemCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenCoreSpotlightItemCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xEu:
        unint64_t v18 = objc_alloc_init(_SFPBPerformIntentCommand);
        if (!PBReaderPlaceMark() || (_SFPBPerformIntentCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerformIntentCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0xFu:
        unint64_t v18 = objc_alloc_init(_SFPBSearchInAppCommand);
        if (!PBReaderPlaceMark() || (_SFPBSearchInAppCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchInAppCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x10u:
        unint64_t v18 = objc_alloc_init(_SFPBUpdateSearchQueryCommand);
        if (!PBReaderPlaceMark() || (_SFPBUpdateSearchQueryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUpdateSearchQueryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x11u:
        unint64_t v18 = objc_alloc_init(_SFPBSearchWebCommand);
        if (!PBReaderPlaceMark() || (_SFPBSearchWebCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSearchWebCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x12u:
        unint64_t v18 = objc_alloc_init(_SFPBInvokeSiriCommand);
        if (!PBReaderPlaceMark() || (_SFPBInvokeSiriCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInvokeSiriCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x13u:
        unint64_t v18 = objc_alloc_init(_SFPBPerformContactQueryCommand);
        if (!PBReaderPlaceMark() || (_SFPBPerformContactQueryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerformContactQueryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x14u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenCalculationCommand);
        if (!PBReaderPlaceMark() || (_SFPBOpenCalculationCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenCalculationCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x15u:
        unint64_t v18 = objc_alloc_init(_SFPBPlayVideoCommand);
        if (!PBReaderPlaceMark() || (_SFPBPlayVideoCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayVideoCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x16u:
        unint64_t v18 = objc_alloc_init(_SFPBCallCommand);
        if (!PBReaderPlaceMark() || (_SFPBCallCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCallCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x17u:
        unint64_t v18 = objc_alloc_init(_SFPBEmailCommand);
        if (!PBReaderPlaceMark() || (_SFPBEmailCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setEmailCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x18u:
        unint64_t v18 = objc_alloc_init(_SFPBBeginMapsRoutingCommand);
        if (!PBReaderPlaceMark() || (_SFPBBeginMapsRoutingCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBeginMapsRoutingCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x19u:
        unint64_t v18 = objc_alloc_init(_SFPBToggleAudioCommand);
        if (!PBReaderPlaceMark() || (_SFPBToggleAudioCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setToggleAudioCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Au:
        unint64_t v18 = objc_alloc_init(_SFPBPerformPersonEntityQueryCommand);
        if (!PBReaderPlaceMark() || (_SFPBPerformPersonEntityQueryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerformPersonEntityQueryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Bu:
        unint64_t v18 = objc_alloc_init(_SFPBShowPurchaseRequestSheetCommand);
        if (!PBReaderPlaceMark() || (_SFPBShowPurchaseRequestSheetCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowPurchaseRequestSheetCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Cu:
        unint64_t v18 = objc_alloc_init(_SFPBShowScreenTimeRequestSheetCommand);
        if (!PBReaderPlaceMark() || (_SFPBShowScreenTimeRequestSheetCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowScreenTimeRequestSheetCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Du:
        unint64_t v18 = objc_alloc_init(_SFPBPerformEntityQueryCommand);
        if (!PBReaderPlaceMark() || (_SFPBPerformEntityQueryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerformEntityQueryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Eu:
        unint64_t v18 = objc_alloc_init(_SFPBShareCommand);
        if (!PBReaderPlaceMark() || (_SFPBShareCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShareCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x1Fu:
        unint64_t v18 = objc_alloc_init(_SFPBCopyCommand);
        if (!PBReaderPlaceMark() || (_SFPBCopyCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCopyCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x20u:
        unint64_t v18 = objc_alloc_init(_SFPBToggleWatchListStatusCommand);
        if (!PBReaderPlaceMark() || (_SFPBToggleWatchListStatusCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setToggleWatchListStatusCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x21u:
        unint64_t v18 = objc_alloc_init(_SFPBShowPhotosOneUpViewCommand);
        if (!PBReaderPlaceMark() || !_SFPBShowPhotosOneUpViewCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowPhotosOneUpViewCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x22u:
        unint64_t v18 = objc_alloc_init(_SFPBPlayMediaCommand);
        if (!PBReaderPlaceMark() || (_SFPBPlayMediaCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayMediaCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x23u:
        unint64_t v18 = objc_alloc_init(_SFPBOpenMediaCommand);
        if (!PBReaderPlaceMark() || !_SFPBOpenMediaCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOpenMediaCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x24u:
        unint64_t v18 = objc_alloc_init(_SFPBAddToPhotosLibraryCommand);
        if (!PBReaderPlaceMark() || (_SFPBAddToPhotosLibraryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAddToPhotosLibraryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x25u:
        unint64_t v18 = objc_alloc_init(_SFPBPerformContactActionCommand);
        if (!PBReaderPlaceMark() || (_SFPBPerformContactActionCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerformContactActionCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x26u:
        unint64_t v18 = objc_alloc_init(_SFPBExpandInlineCommand);
        if (!PBReaderPlaceMark() || (_SFPBExpandInlineCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExpandInlineCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x27u:
        unint64_t v18 = objc_alloc_init(_SFPBSubscribeForUpdatesCommand);
        if (!PBReaderPlaceMark() || !_SFPBSubscribeForUpdatesCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSubscribeForUpdatesCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x28u:
        unint64_t v18 = objc_alloc_init(_SFPBViewEmailCommand);
        if (!PBReaderPlaceMark() || (_SFPBViewEmailCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setViewEmailCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x29u:
        unint64_t v18 = objc_alloc_init(_SFPBRejectPeopleInPhotoCommand);
        if (!PBReaderPlaceMark() || !_SFPBRejectPeopleInPhotoCommandReadFrom(v18, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRejectPeopleInPhotoCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Au:
        unint64_t v18 = objc_alloc_init(_SFPBShowWrapperResponseViewCommand);
        if (!PBReaderPlaceMark() || (_SFPBShowWrapperResponseViewCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShowWrapperResponseViewCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Bu:
        unint64_t v18 = objc_alloc_init(_SFPBClearProactiveCategoryCommand);
        if (!PBReaderPlaceMark() || (_SFPBClearProactiveCategoryCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setClearProactiveCategoryCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Cu:
        unint64_t v18 = objc_alloc_init(_SFPBCreateContactCommand);
        if (!PBReaderPlaceMark() || (_SFPBCreateContactCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreateContactCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Du:
        unint64_t v18 = objc_alloc_init(_SFPBCreateCalendarEventCommand);
        if (!PBReaderPlaceMark() || (_SFPBCreateCalendarEventCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreateCalendarEventCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Eu:
        unint64_t v18 = objc_alloc_init(_SFPBCreateReminderCommand);
        if (!PBReaderPlaceMark() || (_SFPBCreateReminderCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCreateReminderCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x2Fu:
        unint64_t v18 = objc_alloc_init(_SFPBManageReservationCommand);
        if (!PBReaderPlaceMark() || (_SFPBManageReservationCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setManageReservationCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x30u:
        unint64_t v18 = objc_alloc_init(_SFPBUpdateSportsFollowingStatusCommand);
        if (!PBReaderPlaceMark() || (_SFPBUpdateSportsFollowingStatusCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUpdateSportsFollowingStatusCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x31u:
        unint64_t v18 = objc_alloc_init(_SFPBRequestProductPageCommand);
        if (!PBReaderPlaceMark() || (_SFPBRequestProductPageCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRequestProductPageCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x32u:
        unint64_t v18 = objc_alloc_init(_SFPBFlightCheckinCommand);
        if (!PBReaderPlaceMark() || (_SFPBFlightCheckinCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlightCheckinCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x33u:
        unint64_t v18 = objc_alloc_init(_SFPBExecuteToolCommand);
        if (!PBReaderPlaceMark() || (_SFPBExecuteToolCommandReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setExecuteToolCommand:", v18, 0, 0);
        goto LABEL_182;
      case 0x64u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBShowContactCardCommand *)objc_claimAutoreleasedReturnValue();
        [a1 setCommandDetail:v18];
        goto LABEL_182;
      case 0x65u:
        unint64_t v18 = objc_alloc_init(_SFPBTopic);
        if (!PBReaderPlaceMark() || (_SFPBTopicReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNormalizedTopic:", v18, 0, 0);
        goto LABEL_182;
      case 0x66u:
        PBReaderReadData();
        unint64_t v18 = (_SFPBShowContactCardCommand *)objc_claimAutoreleasedReturnValue();
        [a1 setBackendData:v18];
        goto LABEL_182;
      case 0x67u:
        unint64_t v18 = objc_alloc_init(_SFPBCommandReference);
        if PBReaderPlaceMark() && (_SFPBCommandReferenceReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCommandReference:", v18, 0, 0);
LABEL_182:

LABEL_183:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_186:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_183;
    }
  }
}

uint64_t _SFPBButtonItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBCommandButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBCommandButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommandButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBContactButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBContactButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContactButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBCoreSpotlightButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBCoreSpotlightButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoreSpotlightButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBWatchListButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBWatchListButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWatchListButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBAppAutoShortcutsButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBAppAutoShortcutsButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppActionsButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBSportsFollowButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBSportsFollowButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSportsFollowButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBPlayWatchListItemButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBPlayWatchListItemButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayWatchListItemButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBPlayAudioButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBPlayAudioButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayAudioButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBStoreButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBStoreButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStoreButtonItem:", v18, 0, 0);
        goto LABEL_57;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItemAppearance);
        if PBReaderPlaceMark() && (_SFPBButtonItemAppearanceReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setButtonAppearance:", v18, 0, 0);
LABEL_57:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      default:
        if ((v10 >> 3) == 100)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_63;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v26 = 0;
              goto LABEL_66;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_66:
          [a1 setUniqueId:v26];
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        goto LABEL_58;
    }
  }
}

uint64_t _SFPBShowContactCardCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v25 = PBReaderReadString();
        [a1 setContactIdentifier:v25];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_33:
        [a1 setIsSuggestedContact:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBShowSFCardCommandReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBCard);
        if (!PBReaderPlaceMark() || (_SFPBCardReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCard:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCardReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_89;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_96:
        objc_msgSend(a1, "setType:", v27, v51, v52);
        goto LABEL_90;
      case 3u:
        char v18 = objc_alloc_init(_SFPBCardSection);
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        if (!PBReaderPlaceMark() || !_SFPBCardSectionReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addCardSections:", v18, 0, 0);
        }
        goto LABEL_89;
      case 4u:
        PBReaderReadData();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentMessageData:v18];
        goto LABEL_89;
      case 5u:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentMessageName:v18];
        goto LABEL_89;
      case 6u:
        PBReaderReadData();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentResponseMessageData:v18];
        goto LABEL_89;
      case 7u:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setIntentResponseMessageName:v18];
        goto LABEL_89;
      case 8u:
        char v18 = objc_alloc_init(_SFPBAbstractCommand);
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        if (!PBReaderPlaceMark() || !_SFPBAbstractCommandReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addDismissalCommands:", v18, 0, 0);
        }
        goto LABEL_89;
      case 9u:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setCardId:v18];
        goto LABEL_89;
      case 0xAu:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setContextReferenceIdentifier:v18];
        goto LABEL_89;
      case 0xBu:
        char v18 = objc_alloc_init(_SFPBURL);
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        [a1 setUrlValue:v18];
        goto LABEL_89;
      case 0xCu:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_101:
        objc_msgSend(a1, "setSource:", v35, v51, v52);
        goto LABEL_90;
      case 0xDu:
        PBReaderReadData();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setEntityIdentifier:v18];
        goto LABEL_89;
      case 0xEu:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setResultIdentifier:v18];
        goto LABEL_89;
      case 0xFu:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v38;
        }
LABEL_106:
        objc_msgSend(a1, "setQueryId:", v43, v51, v52);
        goto LABEL_90;
      case 0x10u:
        PBReaderReadString();
        char v18 = (_SFPBCardSection *)objc_claimAutoreleasedReturnValue();
        [a1 setFbr:v18];
        goto LABEL_89;
      case 0x11u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_110:
        objc_msgSend(a1, "setFlexibleSectionOrder:", v46 != 0, v51, v52);
        goto LABEL_90;
      case 0x12u:
        char v18 = objc_alloc_init(_SFPBNamedProtobufMessage);
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        if (!PBReaderPlaceMark() || !_SFPBNamedProtobufMessageReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addEntityProtobufMessages:", v18, 0, 0);
        }
        goto LABEL_89;
      case 0x13u:
        char v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitleImage:", v18, 0, 0);
        goto LABEL_89;
      case 0x14u:
        char v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_89;
      case 0x15u:
        char v18 = objc_alloc_init(_SFPBDrillDownMetadata);
        if (!PBReaderPlaceMark() || !_SFPBDrillDownMetadataReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetadata:", v18, 0, 0);
        goto LABEL_89;
      case 0x16u:
        char v18 = objc_alloc_init(_SFPBDrillDownMetadata);
        if (!PBReaderPlaceMark() || !_SFPBDrillDownMetadataReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDrilldownMetadata:", v18, 0, 0);
        goto LABEL_89;
      case 0x17u:
        char v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundImage:", v18, 0, 0);
LABEL_89:

LABEL_90:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_112:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_90;
    }
  }
}

uint64_t _SFPBCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_152;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_155;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_152:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_155:
        objc_msgSend(a1, "setType:", v25, v94, v95);
        goto LABEL_142;
      case 2u:
        char v26 = objc_alloc_init(_SFPBCardSectionValue);
        if (!PBReaderPlaceMark() || !_SFPBCardSectionValueReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setValue:", v26, 0, 0);
        goto LABEL_141;
      case 3u:
        char v26 = objc_alloc_init(_SFPBCard);
        if (!PBReaderPlaceMark() || (_SFPBCardReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNextCard:", v26, 0, 0);
        goto LABEL_141;
      case 4u:
        char v26 = objc_alloc_init(_SFPBAbstractCommand);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBAbstractCommandReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addCommands:", v26, 0, 0);
        }
        goto LABEL_141;
      case 5u:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        if (v26) {
          [a1 addParameterKeyPaths:v26];
        }
        goto LABEL_141;
      case 6u:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setCardSectionId:v26];
        goto LABEL_141;
      case 7u:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setResultIdentifier:v26];
        goto LABEL_141;
      case 8u:
        char v26 = objc_alloc_init(_SFPBUserReportRequest);
        if (!PBReaderPlaceMark() || (_SFPBUserReportRequestReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUserReportRequest:", v26, 0, 0);
        goto LABEL_141;
      case 9u:
        char v26 = objc_alloc_init(_SFPBCommand);
        if (!PBReaderPlaceMark() || (_SFPBCommandReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommand:", v26, 0, 0);
        goto LABEL_141;
      case 0xAu:
        char v26 = objc_alloc_init(_SFPBCommand);
        if (!PBReaderPlaceMark() || (_SFPBCommandReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPreviewCommand:", v26, 0, 0);
        goto LABEL_141;
      case 0xBu:
        char v26 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addPreviewButtonItems:", v26, 0, 0);
        }
        goto LABEL_141;
      case 0xDu:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setCardSectionDetail:v26];
        goto LABEL_141;
      case 0xEu:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setPreviewButtonItemsTitle:v26];
        goto LABEL_141;
      case 0xFu:
        char v26 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v26, 0, 0);
        goto LABEL_141;
      case 0x10u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_159:
        [a1 setShouldHideInAmbientMode:v30 != 0];
        goto LABEL_142;
      case 0x11u:
        char v26 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addLeadingSwipeButtonItems:", v26, 0, 0);
        }
        goto LABEL_141;
      case 0x12u:
        char v26 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addTrailingSwipeButtonItems:", v26, 0, 0);
        }
        goto LABEL_141;
      case 0x13u:
        char v26 = objc_alloc_init(_SFPBPunchout);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addPunchoutOptions:", v26, 0, 0);
        }
        goto LABEL_141;
      case 0x14u:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v26];
        goto LABEL_141;
      case 0x15u:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v26];
        goto LABEL_141;
      case 0x16u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_163:
        [a1 setCanBeHidden:v37 != 0];
        goto LABEL_142;
      case 0x17u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_167:
        [a1 setHasTopPadding:v44 != 0];
        goto LABEL_142;
      case 0x18u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_171:
        [a1 setHasBottomPadding:v51 != 0];
        goto LABEL_142;
      case 0x19u:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                uint64_t v63 = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
        else {
          uint64_t v63 = v58;
        }
LABEL_176:
        objc_msgSend(a1, "setSeparatorStyle:", v63, v94, v95);
        goto LABEL_142;
      case 0x1Au:
        char v26 = objc_alloc_init(_SFPBCommand);
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        if (!PBReaderPlaceMark() || !_SFPBCommandReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addReferencedCommands:", v26, 0, 0);
        }
        goto LABEL_141;
      case 0x1Bu:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        while (2)
        {
          uint64_t v67 = *v3;
          uint64_t v68 = *(void *)(a2 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
            *(void *)(a2 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v15 = v65++ >= 9;
              if (v15)
              {
                uint64_t v66 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v66 = 0;
        }
LABEL_180:
        [a1 setForceEnable3DTouch:v66 != 0];
        goto LABEL_142;
      case 0x1Cu:
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        while (2)
        {
          uint64_t v74 = *v3;
          uint64_t v75 = *(void *)(a2 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v75);
            *(void *)(a2 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v15 = v72++ >= 9;
              if (v15)
              {
                uint64_t v73 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v73 = 0;
        }
LABEL_184:
        [a1 setShouldShowInSmartDialog:v73 != 0];
        goto LABEL_142;
      case 0x1Du:
        char v26 = objc_alloc_init(_SFPBAppEntityAnnotation);
        if (!PBReaderPlaceMark() || !_SFPBAppEntityAnnotationReadFrom(v26, a2)) {
          goto LABEL_196;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppEntityAnnotation:", v26, 0, 0);
        goto LABEL_141;
      case 0x1Eu:
        PBReaderReadString();
        char v26 = (_SFPBCardSectionValue *)objc_claimAutoreleasedReturnValue();
        [a1 setEmphasisSubjectId:v26];
        goto LABEL_141;
      case 0x1Fu:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        while (2)
        {
          uint64_t v81 = *v3;
          uint64_t v82 = *(void *)(a2 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
            *(void *)(a2 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v15 = v79++ >= 9;
              if (v15)
              {
                uint64_t v85 = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v85 = 0;
        }
        else {
          uint64_t v85 = v80;
        }
LABEL_189:
        objc_msgSend(a1, "setIncreasedContrastMode:", v85, v94, v95);
        goto LABEL_142;
      case 0x20u:
        char v26 = objc_alloc_init(_SFPBCommand);
        if PBReaderPlaceMark() && (_SFPBCommandReadFrom(v26, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSecondaryCommand:", v26, 0, 0);
LABEL_141:

LABEL_142:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_196:

        return 0;
      case 0x21u:
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        while (2)
        {
          uint64_t v89 = *v3;
          uint64_t v90 = *(void *)(a2 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(a2 + *v7) + v90);
            *(void *)(a2 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v15 = v87++ >= 9;
              if (v15)
              {
                uint64_t v93 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v93 = 0;
        }
        else {
          uint64_t v93 = v88;
        }
LABEL_194:
        objc_msgSend(a1, "setRequiredLevelOfDetail:", v93, v94, v95);
        goto LABEL_142;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_142;
    }
  }
}

BOOL _SFPBCardSectionValueReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v19 = objc_alloc_init(_SFPBAppLinkCardSection);
        if (!PBReaderPlaceMark() || (_SFPBAppLinkCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppLinkCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 2u:
        unsigned int v19 = objc_alloc_init(_SFPBDescriptionCardSection);
        if (!PBReaderPlaceMark() || (_SFPBDescriptionCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDescriptionCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 3u:
        unsigned int v19 = objc_alloc_init(_SFPBKeyValueDataCardSection);
        if (!PBReaderPlaceMark() || (_SFPBKeyValueDataCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setKeyValueDataCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 4u:
        unsigned int v19 = objc_alloc_init(_SFPBMapCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMapCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMapCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 5u:
        unsigned int v19 = objc_alloc_init(_SFPBMediaInfoCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMediaInfoCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaInfoCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 6u:
        unsigned int v19 = objc_alloc_init(_SFPBMediaPlayerCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMediaPlayerCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaPlayerCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 7u:
        unsigned int v19 = objc_alloc_init(_SFPBNowPlayingCardSection);
        if (!PBReaderPlaceMark() || (_SFPBNowPlayingCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNowPlayingCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 8u:
        unsigned int v19 = objc_alloc_init(_SFPBRichTitleCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRichTitleCardSectionReadFrom(v19, a2, v20) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRichTitleCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 9u:
        unsigned int v19 = objc_alloc_init(_SFPBRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xAu:
        unsigned int v19 = objc_alloc_init(_SFPBScoreboardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBScoreboardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setScoreboardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xBu:
        unsigned int v19 = objc_alloc_init(_SFPBSocialMediaPostCardSection);
        if (!PBReaderPlaceMark() || (_SFPBSocialMediaPostCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSocialMediaPostCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCu:
        unsigned int v19 = objc_alloc_init(_SFPBStockChartCardSection);
        if (!PBReaderPlaceMark() || (_SFPBStockChartCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStockChartCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDu:
        unsigned int v19 = objc_alloc_init(_SFPBTableHeaderRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBTableHeaderRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTableHeaderRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEu:
        unsigned int v19 = objc_alloc_init(_SFPBTableRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBTableRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTableRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xFu:
        unsigned int v19 = objc_alloc_init(_SFPBTextColumnsCardSection);
        if (!PBReaderPlaceMark() || (_SFPBTextColumnsCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTextColumnsCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x10u:
        unsigned int v19 = objc_alloc_init(_SFPBTitleCardSection);
        if (!PBReaderPlaceMark() || (_SFPBTitleCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitleCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x11u:
        unsigned int v19 = objc_alloc_init(_SFPBTrackListCardSection);
        if (!PBReaderPlaceMark() || (_SFPBTrackListCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrackListCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x12u:
        unsigned int v19 = objc_alloc_init(_SFPBAudioPlaybackCardSection);
        if (!PBReaderPlaceMark() || (_SFPBAudioPlaybackCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAudioPlaybackCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x13u:
        unsigned int v19 = objc_alloc_init(_SFPBFlightCardSection);
        if (!PBReaderPlaceMark() || (_SFPBFlightCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFlightCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x14u:
        unsigned int v19 = objc_alloc_init(_SFPBActivityIndicatorCardSection);
        if (!PBReaderPlaceMark() || (_SFPBActivityIndicatorCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActivityIndicatorCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x15u:
        unsigned int v19 = objc_alloc_init(_SFPBWebCardSection);
        if (!PBReaderPlaceMark() || (_SFPBWebCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWebCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x16u:
        unsigned int v19 = objc_alloc_init(_SFPBMessageCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMessageCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMessageCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x17u:
        unsigned int v19 = objc_alloc_init(_SFPBDetailedRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBDetailedRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDetailedRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x18u:
        unsigned int v19 = objc_alloc_init(_SFPBImagesCardSection);
        if (!PBReaderPlaceMark() || (_SFPBImagesCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImagesCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x19u:
        unsigned int v19 = objc_alloc_init(_SFPBSuggestionCardSection);
        if (!PBReaderPlaceMark() || (_SFPBSuggestionCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSuggestionCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Au:
        unsigned int v19 = objc_alloc_init(_SFPBSelectableGridCardSection);
        if (!PBReaderPlaceMark() || (_SFPBSelectableGridCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSelectableGridCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Bu:
        unsigned int v19 = objc_alloc_init(_SFPBSectionHeaderCardSection);
        if (!PBReaderPlaceMark() || (_SFPBSectionHeaderCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSectionHeaderCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Cu:
        unsigned int v19 = objc_alloc_init(_SFPBMetaInfoCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMetaInfoCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMetaInfoCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Du:
        unsigned int v19 = objc_alloc_init(_SFPBWatchListCardSection);
        if (!PBReaderPlaceMark() || (_SFPBWatchListCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWatchListCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Eu:
        unsigned int v19 = objc_alloc_init(_SFPBMapsDetailedRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMapsDetailedRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMapsDetailedRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x1Fu:
        unsigned int v19 = objc_alloc_init(_SFPBButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x20u:
        unsigned int v19 = objc_alloc_init(_SFPBHorizontalButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBHorizontalButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHorizontalButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x21u:
        unsigned int v19 = objc_alloc_init(_SFPBVerticalLayoutCardSection);
        if (!PBReaderPlaceMark() || (_SFPBVerticalLayoutCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setVerticalLayoutCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x22u:
        unsigned int v19 = objc_alloc_init(_SFPBProductCardSection);
        if (!PBReaderPlaceMark() || (_SFPBProductCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setProductCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x23u:
        unsigned int v19 = objc_alloc_init(_SFPBHorizontalScrollCardSection);
        if (!PBReaderPlaceMark() || (_SFPBHorizontalScrollCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHorizontalScrollCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x24u:
        unsigned int v19 = objc_alloc_init(_SFPBMediaRemoteControlCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMediaRemoteControlCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaRemoteControlCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x25u:
        unsigned int v19 = objc_alloc_init(_SFPBMapPlaceCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMapPlaceCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMapPlaceCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x26u:
        unsigned int v19 = objc_alloc_init(_SFPBCompactRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBCompactRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCompactRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x27u:
        unsigned int v19 = objc_alloc_init(_SFPBWorldMapCardSection);
        if (!PBReaderPlaceMark() || (_SFPBWorldMapCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWorldMapCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x28u:
        unsigned int v19 = objc_alloc_init(_SFPBAttributionFooterCardSection);
        if (!PBReaderPlaceMark() || (_SFPBAttributionFooterCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAttributionFooterCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x29u:
        unsigned int v19 = objc_alloc_init(_SFPBGridCardSection);
        if (!PBReaderPlaceMark() || (_SFPBGridCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setGridCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Au:
        unsigned int v19 = objc_alloc_init(_SFPBPersonHeaderCardSection);
        if (!PBReaderPlaceMark() || (_SFPBPersonHeaderCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPersonHeaderCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Bu:
        unsigned int v19 = objc_alloc_init(_SFPBColorBarCardSection);
        if (!PBReaderPlaceMark() || !_SFPBColorBarCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setColorBarCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Cu:
        unsigned int v19 = objc_alloc_init(_SFPBSplitCardSection);
        if (!PBReaderPlaceMark() || !_SFPBSplitCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSplitCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Du:
        unsigned int v19 = objc_alloc_init(_SFPBLinkPresentationCardSection);
        if (!PBReaderPlaceMark() || (_SFPBLinkPresentationCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLinkPresentationCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Eu:
        unsigned int v19 = objc_alloc_init(_SFPBFindMyCardSection);
        if (!PBReaderPlaceMark() || (_SFPBFindMyCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFindMyCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x2Fu:
        unsigned int v19 = objc_alloc_init(_SFPBHeroCardSection);
        if (!PBReaderPlaceMark() || (_SFPBHeroCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHeroCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x30u:
        unsigned int v19 = objc_alloc_init(_SFPBNewsCardSection);
        if (!PBReaderPlaceMark() || (_SFPBNewsCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNewsCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x31u:
        unsigned int v19 = objc_alloc_init(_SFPBMiniCardSection);
        if (!PBReaderPlaceMark() || (_SFPBMiniCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMiniCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x32u:
        unsigned int v19 = objc_alloc_init(_SFPBInfoCardSection);
        if (!PBReaderPlaceMark() || (_SFPBInfoCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInfoCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x33u:
        unsigned int v19 = objc_alloc_init(_SFPBCollectionCardSection);
        if (!PBReaderPlaceMark() || (_SFPBCollectionCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCollectionCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x34u:
        unsigned int v19 = objc_alloc_init(_SFPBCombinedCardSection);
        if (!PBReaderPlaceMark() || (_SFPBCombinedCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCombinedCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x35u:
        unsigned int v19 = objc_alloc_init(_SFPBResponseWrapperCardSection);
        if (!PBReaderPlaceMark() || !_SFPBResponseWrapperCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setResponseWrapperCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x36u:
        unsigned int v19 = objc_alloc_init(_SFPBListenToCardSection);
        if (!PBReaderPlaceMark() || (_SFPBListenToCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setListenToCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x37u:
        unsigned int v19 = objc_alloc_init(_SFPBWatchNowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBWatchNowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setWatchNowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x38u:
        unsigned int v19 = objc_alloc_init(_SFPBStrokeAnimationCardSection);
        if (!PBReaderPlaceMark() || (_SFPBStrokeAnimationCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setStrokeAnimationCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x39u:
        unsigned int v19 = objc_alloc_init(_SFPBButtonListCardSection);
        if (!PBReaderPlaceMark() || (_SFPBButtonListCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButtonListCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x3Au:
        unsigned int v19 = objc_alloc_init(_SFPBCommandRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBCommandRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommandRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x3Bu:
        unsigned int v19 = objc_alloc_init(_SFPBLeadingTrailingCardSection);
        if (!PBReaderPlaceMark() || (_SFPBLeadingTrailingCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLeadingTrailingCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x3Cu:
        unsigned int v19 = objc_alloc_init(_SFPBHeroTitleCardSection);
        if (!PBReaderPlaceMark() || (_SFPBHeroTitleCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setHeroTitleCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x3Du:
        unsigned int v19 = objc_alloc_init(_SFPBArchiveViewCardSection);
        if (!PBReaderPlaceMark() || (_SFPBArchiveViewCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setArchiveViewCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x3Eu:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
      case 0x46u:
      case 0x47u:
      case 0x48u:
      case 0x49u:
      case 0x4Au:
      case 0x4Bu:
      case 0x4Cu:
      case 0x4Du:
      case 0x4Eu:
      case 0x4Fu:
      case 0x50u:
      case 0x51u:
      case 0x52u:
      case 0x53u:
      case 0x54u:
      case 0x55u:
      case 0x56u:
      case 0x57u:
      case 0x58u:
      case 0x59u:
      case 0x5Bu:
      case 0x5Cu:
      case 0x5Du:
      case 0x5Eu:
      case 0x5Fu:
      case 0x60u:
      case 0x61u:
      case 0x62u:
      case 0x63u:
      case 0x64u:
      case 0x65u:
      case 0x66u:
      case 0x67u:
      case 0x68u:
      case 0x69u:
      case 0x6Au:
      case 0x6Bu:
      case 0x6Cu:
      case 0x6Du:
      case 0x6Eu:
      case 0x6Fu:
      case 0x70u:
      case 0x71u:
      case 0x72u:
      case 0x73u:
      case 0x74u:
      case 0x75u:
      case 0x76u:
      case 0x77u:
      case 0x78u:
      case 0x79u:
      case 0x7Au:
      case 0x7Bu:
      case 0x7Cu:
      case 0x7Du:
      case 0x7Eu:
      case 0x7Fu:
      case 0x80u:
      case 0x81u:
      case 0x82u:
      case 0x83u:
      case 0x84u:
      case 0x85u:
      case 0x86u:
      case 0x87u:
      case 0x88u:
      case 0x89u:
      case 0x8Au:
      case 0x8Bu:
      case 0x8Cu:
      case 0x8Du:
      case 0x8Eu:
      case 0x8Fu:
      case 0x90u:
      case 0x91u:
      case 0x92u:
      case 0x93u:
      case 0x94u:
      case 0x95u:
      case 0x96u:
      case 0x97u:
      case 0x98u:
      case 0x99u:
      case 0x9Au:
      case 0x9Bu:
      case 0x9Cu:
      case 0x9Du:
      case 0x9Eu:
      case 0x9Fu:
      case 0xA0u:
      case 0xA1u:
      case 0xA2u:
      case 0xA3u:
      case 0xA4u:
      case 0xA5u:
      case 0xA6u:
      case 0xA7u:
      case 0xA8u:
      case 0xA9u:
      case 0xAAu:
      case 0xABu:
      case 0xACu:
      case 0xADu:
      case 0xAEu:
      case 0xAFu:
      case 0xB0u:
      case 0xB1u:
      case 0xB2u:
      case 0xB3u:
      case 0xB4u:
      case 0xB5u:
      case 0xB6u:
      case 0xB7u:
      case 0xB8u:
      case 0xB9u:
      case 0xBAu:
      case 0xBBu:
      case 0xBCu:
      case 0xBDu:
      case 0xBEu:
      case 0xBFu:
      case 0xC0u:
      case 0xC1u:
      case 0xC2u:
      case 0xC3u:
      case 0xC4u:
      case 0xC5u:
      case 0xC6u:
      case 0xC7u:
        goto LABEL_27;
      case 0x3Fu:
        unsigned int v19 = objc_alloc_init(_SFPBAppIconCardSection);
        if (!PBReaderPlaceMark() || (_SFPBAppIconCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAppIconCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x40u:
        unsigned int v19 = objc_alloc_init(_SFPBLargeTitleDetailedRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBLargeTitleDetailedRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLargeTitleDetailedRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0x5Au:
        unsigned int v19 = objc_alloc_init(_SFPBSafariTableOfContentsCardSection);
        if (!PBReaderPlaceMark() || (_SFPBSafariTableOfContentsCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSafariTableOfContentsCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xC8u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemShortNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemShortNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemShortNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xC9u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemTextCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemTextCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemTextCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCAu:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSummaryItemStandardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCBu:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemShortNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemShortNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemShortNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCCu:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemStandardCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemStandardCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCDu:
        unsigned int v19 = objc_alloc_init(_SFPBRFLongItemStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFLongItemStandardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfLongItemStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCEu:
        unsigned int v19 = objc_alloc_init(_SFPBRFPrimaryHeaderRichCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFPrimaryHeaderRichCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfPrimaryHeaderRichCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xCFu:
        unsigned int v19 = objc_alloc_init(_SFPBRFPrimaryHeaderStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFPrimaryHeaderStandardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfPrimaryHeaderStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD0u:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceFootnoteCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceFootnoteCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceFootnoteCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD1u:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceRichCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceRichCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceRichCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD2u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemRichCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSimpleItemRichCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemRichCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD3u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemStandardCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSimpleItemStandardCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD4u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemAlignedTextCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemAlignedTextCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemAlignedTextCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD5u:
        unsigned int v19 = objc_alloc_init(_SFPBRFExpandableStandardCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFExpandableStandardCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfExpandableStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD6u:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFFactItemButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD7u:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemHeroNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemHeroNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemHeroNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD8u:
        unsigned int v19 = objc_alloc_init(_SFPBRFPrimaryHeaderMarqueeCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFPrimaryHeaderMarqueeCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfPrimaryHeaderMarqueeCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xD9u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemDetailedTextCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemDetailedTextCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemDetailedTextCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDAu:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemPlayerCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSimpleItemPlayerCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemPlayerCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDBu:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemPairCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemPairCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemPairCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDCu:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemPairNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemPairNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemPairNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDDu:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemShortHeroNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemShortHeroNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemShortHeroNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDEu:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemDetailedNumberCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemDetailedNumberCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemDetailedNumberCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xDFu:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemHeroButtonCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemHeroButtonCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemHeroButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE0u:
        unsigned int v19 = objc_alloc_init(_SFPBRFFactItemImageRightCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFFactItemImageRightCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfFactItemImageRightCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE1u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemSwitchV2CardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSummaryItemSwitchV2CardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemSwitchV2CardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE2u:
        unsigned int v19 = objc_alloc_init(_SFPBRFTableHeaderCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFTableHeaderCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfTableHeaderCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE3u:
        unsigned int v19 = objc_alloc_init(_SFPBRFTableRowCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFTableRowCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfTableRowCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE4u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemVisualElementCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSimpleItemVisualElementCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemVisualElementCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE5u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemPlayerCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemPlayerCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemPlayerCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE6u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemImageRightCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSummaryItemImageRightCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemImageRightCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE7u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSummaryItemButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSummaryItemButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSummaryItemButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE8u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemReverseRichCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSimpleItemReverseRichCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemReverseRichCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xE9u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSimpleItemRichSearchResultCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFSimpleItemRichSearchResultCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSimpleItemRichSearchResultCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEAu:
        unsigned int v19 = objc_alloc_init(_SFPBRFPrimaryHeaderStackedImageCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFPrimaryHeaderStackedImageCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfPrimaryHeaderStackedImageCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEBu:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceItemLogoCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceItemLogoCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceItemLogoCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xECu:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceItemButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceItemButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceItemButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEDu:
        unsigned int v19 = objc_alloc_init(_SFPBRFButtonCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFButtonCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEEu:
        unsigned int v19 = objc_alloc_init(_SFPBRFBinaryButtonCardSection);
        if (!PBReaderPlaceMark() || !_SFPBRFBinaryButtonCardSectionReadFrom(v19, a2)) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfBinaryButtonCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xEFu:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceCenteredCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceCenteredCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceCenteredCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xF0u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSecondaryHeaderStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSecondaryHeaderStandardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSecondaryHeaderStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xF1u:
        unsigned int v19 = objc_alloc_init(_SFPBRFSecondaryHeaderEmphasizedCardSection);
        if (!PBReaderPlaceMark()
          || (_SFPBRFSecondaryHeaderEmphasizedCardSectionReadFrom(v19, a2) & 1) == 0)
        {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfSecondaryHeaderEmphasizedCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xF2u:
        unsigned int v19 = objc_alloc_init(_SFPBRFMapCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFMapCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfMapCardSection:", v19, 0, 0);
        goto LABEL_353;
      case 0xF3u:
        unsigned int v19 = objc_alloc_init(_SFPBRFReferenceStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFReferenceStandardCardSectionReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_357;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRfReferenceStandardCardSection:", v19, 0, 0);
        goto LABEL_353;
      default:
        if (v18 != 744)
        {
          if (v18 != 745)
          {
LABEL_27:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              return 0;
            }
            goto LABEL_354;
          }
          unsigned int v19 = objc_alloc_init(_SFPBRFDisambiguationTitleCardSection);
          if (!PBReaderPlaceMark() || !_SFPBRFDisambiguationTitleCardSectionReadFrom(v19, a2)) {
            goto LABEL_357;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setRfDisambiguationTitleCardSection:", v19, 0, 0);
LABEL_353:

LABEL_354:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unsigned int v19 = objc_alloc_init(_SFPBRFMultiButtonCardSection);
        if PBReaderPlaceMark() && (_SFPBRFMultiButtonCardSectionReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRfMultiButtonCardSection:", v19, 0, 0);
          goto LABEL_353;
        }
LABEL_357:

        return 0;
    }
  }
}

uint64_t _SFPBDescriptionCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    if ((int)(v10 >> 3) > 100)
    {
      switch((int)v18)
      {
        case 'e':
          unsigned int v19 = objc_alloc_init(_SFPBText);
          if (!PBReaderPlaceMark() || (_SFPBTextReadFrom(v19, a2) & 1) == 0) {
            goto LABEL_186;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setDescriptionText:", v19, 0, 0);
          goto LABEL_130;
        case 'f':
          PBReaderReadString();
          unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
          [a1 setExpandText:v19];
          goto LABEL_130;
        case 'g':
          unsigned int v19 = objc_alloc_init(_SFPBImage);
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0) {
            goto LABEL_186;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setImage:", v19, 0, 0);
          goto LABEL_130;
        case 'h':
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_138;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_138:
          [a1 setTitleNoWrap:v22 != 0];
          goto LABEL_131;
        case 'i':
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_143;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_143:
          objc_msgSend(a1, "setTitleWeight:", v34, v104, v105);
          goto LABEL_131;
        case 'j':
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (v15)
                {
                  uint64_t v42 = 0;
                  goto LABEL_148;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v37;
          }
LABEL_148:
          objc_msgSend(a1, "setDescriptionSize:", v42, v104, v105);
          goto LABEL_131;
        case 'k':
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_153;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
          else {
            uint64_t v50 = v45;
          }
LABEL_153:
          objc_msgSend(a1, "setDescriptionWeight:", v50, v104, v105);
          goto LABEL_131;
        case 'l':
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v15 = v52++ >= 9;
                if (v15)
                {
                  uint64_t v53 = 0;
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_157:
          [a1 setDescriptionExpand:v53 != 0];
          goto LABEL_131;
        case 'm':
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          while (2)
          {
            uint64_t v61 = *v3;
            uint64_t v62 = *(void *)(a2 + v61);
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                BOOL v15 = v59++ >= 9;
                if (v15)
                {
                  uint64_t v65 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v65 = 0;
          }
          else {
            uint64_t v65 = v60;
          }
LABEL_162:
          objc_msgSend(a1, "setImageAlign:", v65, v104, v105);
          goto LABEL_131;
        case 'n':
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          break;
        case 'o':
          PBReaderReadString();
          unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
          [a1 setAttributionText:v19];
          goto LABEL_130;
        case 'p':
          unsigned int v19 = objc_alloc_init(_SFPBURL);
          if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v19, a2) & 1) == 0) {
            goto LABEL_186;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setAttributionURL:", v19, 0, 0);
          goto LABEL_130;
        case 'q':
          unsigned int v19 = objc_alloc_init(_SFPBImage);
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0) {
            goto LABEL_186;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setAttributionGlyph:", v19, 0, 0);
          goto LABEL_130;
        case 'r':
          unsigned int v19 = objc_alloc_init(_SFPBRichText);
          uint64_t v104 = 0;
          uint64_t v105 = 0;
          if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v19, a2)) {
            goto LABEL_186;
          }
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addRichDescriptions:", v19, 0, 0);
          }
          goto LABEL_130;
        default:
          goto LABEL_133;
      }
      while (1)
      {
        uint64_t v69 = *v3;
        uint64_t v70 = *(void *)(a2 + v69);
        unint64_t v71 = v70 + 1;
        if (v70 == -1 || v71 > *(void *)(a2 + *v4)) {
          break;
        }
        char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
        *(void *)(a2 + v69) = v71;
        v68 |= (unint64_t)(v72 & 0x7F) << v66;
        if ((v72 & 0x80) == 0) {
          goto LABEL_164;
        }
        v66 += 7;
        BOOL v15 = v67++ >= 9;
        if (v15)
        {
          uint64_t v73 = 0;
          goto LABEL_167;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_164:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v73 = 0;
      }
      else {
        uint64_t v73 = v68;
      }
LABEL_167:
      objc_msgSend(a1, "setTextAlign:", v73, v104, v105);
      goto LABEL_131;
    }
    switch((int)v18)
    {
      case 1:
        unsigned int v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v104 = 0;
        uint64_t v105 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_130;
      case 2:
        PBReaderReadString();
        unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_130;
      case 3:
        PBReaderReadString();
        unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_130;
      case 4:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        while (2)
        {
          uint64_t v77 = *v3;
          uint64_t v78 = *(void *)(a2 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v15 = v75++ >= 9;
              if (v15)
              {
                uint64_t v76 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v76 = 0;
        }
LABEL_171:
        [a1 setCanBeHidden:v76 != 0];
        goto LABEL_131;
      case 5:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        while (2)
        {
          uint64_t v84 = *v3;
          uint64_t v85 = *(void *)(a2 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(a2 + *v7) + v85);
            *(void *)(a2 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v15 = v82++ >= 9;
              if (v15)
              {
                uint64_t v83 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v83 = 0;
        }
LABEL_175:
        [a1 setHasTopPadding:v83 != 0];
        goto LABEL_131;
      case 6:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        while (2)
        {
          uint64_t v91 = *v3;
          uint64_t v92 = *(void *)(a2 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
            *(void *)(a2 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v15 = v89++ >= 9;
              if (v15)
              {
                uint64_t v90 = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v90 = 0;
        }
LABEL_179:
        [a1 setHasBottomPadding:v90 != 0];
        goto LABEL_131;
      case 7:
        PBReaderReadString();
        unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_130;
      case 8:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        while (2)
        {
          uint64_t v98 = *v3;
          uint64_t v99 = *(void *)(a2 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(a2 + *v7) + v99);
            *(void *)(a2 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v15 = v96++ >= 9;
              if (v15)
              {
                uint64_t v102 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v102 = 0;
        }
        else {
          uint64_t v102 = v97;
        }
LABEL_184:
        objc_msgSend(a1, "setSeparatorStyle:", v102, v104, v105);
        goto LABEL_131;
      case 9:
        unsigned int v19 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
LABEL_130:

LABEL_131:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_186:

        return 0;
      default:
        if (v18 == 51)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
          [a1 setTitle:v19];
          goto LABEL_130;
        }
        if (v18 == 52)
        {
          PBReaderReadString();
          unsigned int v19 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
          [a1 setSubtitle:v19];
          goto LABEL_130;
        }
LABEL_133:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_131;
    }
  }
}

uint64_t _SFPBKeyValueDataCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        unsigned int v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_66;
      case 2u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_66;
      case 3u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_66;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_74:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_67;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_78:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_67;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_82:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_67;
      case 7u:
        PBReaderReadString();
        unsigned int v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_66;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_87:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_67;
      case 9u:
        unsigned int v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_66;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            unsigned int v19 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_89;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setAccessoryImage:", v19, 0, 0);
            goto LABEL_66;
          }
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_67:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unsigned int v19 = objc_alloc_init(_SFPBKeyValueTuple);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (PBReaderPlaceMark() && _SFPBKeyValueTupleReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addData:", v19, 0, 0);
          }
LABEL_66:

          goto LABEL_67;
        }
LABEL_89:

        return 0;
    }
  }
}

uint64_t _SFPBMapCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    unsigned int v17 = v10 & 7;
    if (v16)
    {
      BOOL v18 = 1;
      BOOL v19 = 0;
    }
    else
    {
      BOOL v18 = v17 == 4;
      BOOL v19 = v17 > 4;
    }
    if (v18) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    if (!v19)
    {
      switch((v10 >> 3))
      {
        case 1u:
          char v20 = objc_alloc_init(_SFPBPunchout);
          uint64_t v74 = 0;
          uint64_t v75 = 0;
          if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v20, a2)) {
            goto LABEL_133;
          }
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addPunchoutOptions:", v20, 0, 0);
          }
          goto LABEL_98;
        case 2u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerTitle:v20];
          goto LABEL_98;
        case 3u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerDismissText:v20];
          goto LABEL_98;
        case 4u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v3;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v15 = v46++ >= 9;
                if (v15)
                {
                  uint64_t v47 = 0;
                  goto LABEL_118;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_118:
          [a1 setCanBeHidden:v47 != 0];
          goto LABEL_99;
        case 5u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (2)
          {
            uint64_t v55 = *v3;
            uint64_t v56 = *(void *)(a2 + v55);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v57;
              v54 |= (unint64_t)(v58 & 0x7F) << v52;
              if (v58 < 0)
              {
                v52 += 7;
                BOOL v15 = v53++ >= 9;
                if (v15)
                {
                  uint64_t v54 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v54 = 0;
          }
LABEL_122:
          [a1 setHasTopPadding:v54 != 0];
          goto LABEL_99;
        case 6u:
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          while (2)
          {
            uint64_t v62 = *v3;
            uint64_t v63 = *(void *)(a2 + v62);
            unint64_t v64 = v63 + 1;
            if (v63 == -1 || v64 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
              *(void *)(a2 + v62) = v64;
              v61 |= (unint64_t)(v65 & 0x7F) << v59;
              if (v65 < 0)
              {
                v59 += 7;
                BOOL v15 = v60++ >= 9;
                if (v15)
                {
                  uint64_t v61 = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v61 = 0;
          }
LABEL_126:
          [a1 setHasBottomPadding:v61 != 0];
          goto LABEL_99;
        case 7u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setType:v20];
          goto LABEL_98;
        case 8u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          break;
        case 9u:
          char v20 = objc_alloc_init(_SFPBColor);
          if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_133;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v20, 0, 0);
          goto LABEL_98;
        default:
          JUMPOUT(0);
      }
      while (1)
      {
        uint64_t v69 = *v3;
        uint64_t v70 = *(void *)(a2 + v69);
        unint64_t v71 = v70 + 1;
        if (v70 == -1 || v71 > *(void *)(a2 + *v4)) {
          break;
        }
        char v72 = *(unsigned char *)(*(void *)(a2 + *v7) + v70);
        *(void *)(a2 + v69) = v71;
        v68 |= (unint64_t)(v72 & 0x7F) << v66;
        if ((v72 & 0x80) == 0) {
          goto LABEL_128;
        }
        v66 += 7;
        BOOL v15 = v67++ >= 9;
        if (v15)
        {
          uint64_t v73 = 0;
          goto LABEL_131;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_128:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v73 = 0;
      }
      else {
        uint64_t v73 = v68;
      }
LABEL_131:
      objc_msgSend(a1, "setSeparatorStyle:", v73, v74, v75);
      goto LABEL_99;
    }
    switch((v10 >> 3))
    {
      case '3':
        char v20 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v20, 0, 0);
        goto LABEL_98;
      case '4':
        char v20 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPinColor:", v20, 0, 0);
        goto LABEL_98;
      case '5':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setFootnoteLabel:v20];
        goto LABEL_98;
      case '6':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setFootnote:v20];
        goto LABEL_98;
      case '7':
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
LABEL_104:
        [a1 setInteractive:v24 != 0];
        goto LABEL_99;
      case '8':
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v31;
        }
LABEL_109:
        objc_msgSend(a1, "setSizeFormat:", v36, v74, v75);
        goto LABEL_99;
      case '9':
        char v20 = objc_alloc_init(_SFPBMapRegion);
        if (!PBReaderPlaceMark() || (_SFPBMapRegionReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBoundingMapRegion:", v20, 0, 0);
        goto LABEL_98;
      case ':':
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v15 = v38++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v39;
        }
LABEL_114:
        objc_msgSend(a1, "setPinBehavior:", v44, v74, v75);
        goto LABEL_99;
      case ';':
        char v20 = objc_alloc_init(_SFPBPin);
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        if (PBReaderPlaceMark() && _SFPBPinReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addPins:", v20, 0, 0);
          }
LABEL_98:

LABEL_99:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_133:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_99;
    }
  }
}

uint64_t _SFPBMediaInfoCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '3':
        BOOL v18 = objc_alloc_init(_SFPBMediaItem);
        if (!PBReaderPlaceMark() || !_SFPBMediaItemReadFrom(v18, a2)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMediaItem:", v18, 0, 0);
        goto LABEL_95;
      case '4':
        BOOL v18 = objc_alloc_init(_SFPBMediaDetail);
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        if (!PBReaderPlaceMark() || !_SFPBMediaDetailReadFrom(v18, a2)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addDetails:", v18, 0, 0);
        }
        goto LABEL_95;
      case '5':
        BOOL v18 = objc_alloc_init(_SFPBActionItem);
        if (!PBReaderPlaceMark() || (_SFPBActionItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlayAction:", v18, 0, 0);
        goto LABEL_95;
      case '6':
        BOOL v18 = objc_alloc_init(_SFPBMediaOffer);
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        if (!PBReaderPlaceMark() || !_SFPBMediaOfferReadFrom(v18, a2)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addOffers:", v18, 0, 0);
        }
        goto LABEL_95;
      case '7':
        PBReaderReadString();
        BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
        [a1 setWatchListIdentifier:v18];
        goto LABEL_95;
      case '8':
        PBReaderReadString();
        BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
        [a1 setWatchListButtonLabel:v18];
        goto LABEL_95;
      case '9':
        PBReaderReadString();
        BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
        [a1 setWatchListContinuationText:v18];
        goto LABEL_95;
      case ':':
        PBReaderReadString();
        BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
        [a1 setWatchListConfirmationText:v18];
        goto LABEL_95;
      case ';':
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_101:
        [a1 setIsMediaContainer:v21 != 0];
        goto LABEL_96;
      case '<':
        BOOL v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSpecialOfferButtonLabel:", v18, 0, 0);
LABEL_95:

LABEL_96:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_125:

        return 0;
      case '=':
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v33 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v28;
        }
LABEL_106:
        objc_msgSend(a1, "setWatchListItemType:", v33, v64, v65);
        goto LABEL_96;
      default:
        switch((v10 >> 3))
        {
          case 1u:
            BOOL v18 = objc_alloc_init(_SFPBPunchout);
            uint64_t v64 = 0;
            uint64_t v65 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
              goto LABEL_125;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
            }
            goto LABEL_95;
          case 2u:
            PBReaderReadString();
            BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v18];
            goto LABEL_95;
          case 3u:
            PBReaderReadString();
            BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v18];
            goto LABEL_95;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (2)
            {
              uint64_t v38 = *v3;
              uint64_t v39 = *(void *)(a2 + v38);
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
                *(void *)(a2 + v38) = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  BOOL v15 = v36++ >= 9;
                  if (v15)
                  {
                    uint64_t v37 = 0;
                    goto LABEL_110;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v37 = 0;
            }
LABEL_110:
            [a1 setCanBeHidden:v37 != 0];
            goto LABEL_96;
          case 5u:
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (2)
            {
              uint64_t v45 = *v3;
              uint64_t v46 = *(void *)(a2 + v45);
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
                *(void *)(a2 + v45) = v47;
                v44 |= (unint64_t)(v48 & 0x7F) << v42;
                if (v48 < 0)
                {
                  v42 += 7;
                  BOOL v15 = v43++ >= 9;
                  if (v15)
                  {
                    uint64_t v44 = 0;
                    goto LABEL_114;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v44 = 0;
            }
LABEL_114:
            [a1 setHasTopPadding:v44 != 0];
            goto LABEL_96;
          case 6u:
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            while (2)
            {
              uint64_t v52 = *v3;
              uint64_t v53 = *(void *)(a2 + v52);
              unint64_t v54 = v53 + 1;
              if (v53 == -1 || v54 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
                *(void *)(a2 + v52) = v54;
                v51 |= (unint64_t)(v55 & 0x7F) << v49;
                if (v55 < 0)
                {
                  v49 += 7;
                  BOOL v15 = v50++ >= 9;
                  if (v15)
                  {
                    uint64_t v51 = 0;
                    goto LABEL_118;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v51 = 0;
            }
LABEL_118:
            [a1 setHasBottomPadding:v51 != 0];
            goto LABEL_96;
          case 7u:
            PBReaderReadString();
            BOOL v18 = (_SFPBMediaItem *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v18];
            goto LABEL_95;
          case 8u:
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            break;
          case 9u:
            BOOL v18 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_125;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
            goto LABEL_95;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_96;
            }
            return result;
        }
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                uint64_t v63 = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v63 = 0;
        }
        else {
          uint64_t v63 = v58;
        }
LABEL_123:
        objc_msgSend(a1, "setSeparatorStyle:", v63, v64, v65);
        goto LABEL_96;
    }
  }
}

uint64_t _SFPBMediaPlayerCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_67;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_67;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_67;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_75:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_68;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_79:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_68;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_83:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_68;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_67;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_67;
          default:
            goto LABEL_70;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_85;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_88:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_68;
      }
      if (v18 == 51) {
        break;
      }
      if (v18 == 52)
      {
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v19];
        goto LABEL_67;
      }
      if (v18 == 53)
      {
        char v19 = objc_alloc_init(_SFPBMediaItem);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBMediaItemReadFrom(v19, a2))
        {
LABEL_90:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addMediaItems:", v19, 0, 0);
        }
        goto LABEL_67;
      }
LABEL_70:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_68:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_67:

    goto LABEL_68;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBNowPlayingCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_67;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_67;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_67;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_75:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_68;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_79:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_68;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_83:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_68;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_67;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_67;
          default:
            goto LABEL_70;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_85;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_88:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_68;
      }
      if (v18 == 51) {
        break;
      }
      if (v18 == 52)
      {
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v19];
        goto LABEL_67;
      }
      if (v18 == 101)
      {
        char v19 = objc_alloc_init(_SFPBMediaItem);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBMediaItemReadFrom(v19, a2))
        {
LABEL_90:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addMovies:", v19, 0, 0);
        }
        goto LABEL_67;
      }
LABEL_70:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_68:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_67:

    goto LABEL_68;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRichTitleCardSectionReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) > 100)
    {
      switch((int)v20)
      {
        case 101:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setContentAdvisory:v21];
          goto LABEL_178;
        case 102:
          unsigned int v21 = objc_alloc_init(_SFPBImage);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v21, a2) & 1) == 0) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          [a1 setTitleImage:v21];
          goto LABEL_178;
        case 103:
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (2)
          {
            uint64_t v25 = *v4;
            uint64_t v26 = *(void *)(a2 + v25);
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v28 = *(unsigned char *)(*(void *)(a2 + *v8) + v26);
              *(void *)(a2 + v25) = v27;
              v24 |= (unint64_t)(v28 & 0x7F) << v22;
              if (v28 < 0)
              {
                v22 += 7;
                BOOL v16 = v23++ >= 9;
                if (v16)
                {
                  uint64_t v24 = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v24 = 0;
          }
LABEL_186:
          [a1 setIsCentered:v24 != 0];
          goto LABEL_179;
        case 104:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setDescriptionText:v21];
          goto LABEL_178;
        case 105:
          uint64_t v29 = *v4;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
            *(void *)(a2 + v29) = v30 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setRating:", a3, v136, v137);
          goto LABEL_179;
        case 106:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setRatingText:v21];
          goto LABEL_178;
        case 107:
          unsigned int v21 = objc_alloc_init(_SFPBImage);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v21, a2) & 1) == 0) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          [a1 setReviewGlyph:v21];
          goto LABEL_178;
        case 108:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setReviewText:v21];
          goto LABEL_178;
        case 109:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v4;
            uint64_t v35 = *(void *)(a2 + v34);
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
              *(void *)(a2 + v34) = v36;
              v33 |= (unint64_t)(v37 & 0x7F) << v31;
              if (v37 < 0)
              {
                v31 += 7;
                BOOL v16 = v32++ >= 9;
                if (v16)
                {
                  uint64_t v33 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v33 = 0;
          }
LABEL_190:
          [a1 setReviewNewLine:v33 != 0];
          goto LABEL_179;
        case 110:
          unsigned int v21 = objc_alloc_init(_SFPBImage);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || !_SFPBImageReadFrom(v21, a2)) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          if (v21) {
            objc_msgSend(a1, "addMoreGlyphs:", v21, 0, 0);
          }
          goto LABEL_178;
        case 111:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setAuxiliaryTopText:v21];
          goto LABEL_178;
        case 112:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setAuxiliaryMiddleText:v21];
          goto LABEL_178;
        case 113:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setAuxiliaryBottomText:v21];
          goto LABEL_178;
        case 114:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v4;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v8) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v16 = v39++ >= 9;
                if (v16)
                {
                  uint64_t v45 = 0;
                  goto LABEL_195;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v40;
          }
LABEL_195:
          objc_msgSend(a1, "setAuxiliaryBottomTextColor:", v45, v136, v137);
          goto LABEL_179;
        case 115:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v4;
            uint64_t v50 = *(void *)(a2 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v8) + v50);
              *(void *)(a2 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                BOOL v16 = v47++ >= 9;
                if (v16)
                {
                  uint64_t v53 = 0;
                  goto LABEL_200;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v53 = 0;
          }
          else {
            uint64_t v53 = v48;
          }
LABEL_200:
          objc_msgSend(a1, "setAuxiliaryAlignment:", v53, v136, v137);
          goto LABEL_179;
        case 116:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          while (2)
          {
            uint64_t v57 = *v4;
            uint64_t v58 = *(void *)(a2 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v60 = *(unsigned char *)(*(void *)(a2 + *v8) + v58);
              *(void *)(a2 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v16 = v55++ >= 9;
                if (v16)
                {
                  uint64_t v56 = 0;
                  goto LABEL_204;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v56 = 0;
          }
LABEL_204:
          [a1 setHideVerticalDivider:v56 != 0];
          goto LABEL_179;
        case 117:
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v63 = 0;
          while (2)
          {
            uint64_t v64 = *v4;
            uint64_t v65 = *(void *)(a2 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v8) + v65);
              *(void *)(a2 + v64) = v66;
              v63 |= (unint64_t)(v67 & 0x7F) << v61;
              if (v67 < 0)
              {
                v61 += 7;
                BOOL v16 = v62++ >= 9;
                if (v16)
                {
                  uint64_t v68 = 0;
                  goto LABEL_209;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v68 = 0;
          }
          else {
            uint64_t v68 = v63;
          }
LABEL_209:
          objc_msgSend(a1, "setTitleAlign:", v68, v136, v137);
          goto LABEL_179;
        case 118:
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v71 = 0;
          while (2)
          {
            uint64_t v72 = *v4;
            uint64_t v73 = *(void *)(a2 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v75 = *(unsigned char *)(*(void *)(a2 + *v8) + v73);
              *(void *)(a2 + v72) = v74;
              v71 |= (unint64_t)(v75 & 0x7F) << v69;
              if (v75 < 0)
              {
                v69 += 7;
                BOOL v16 = v70++ >= 9;
                if (v16)
                {
                  uint64_t v76 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v76 = 0;
          }
          else {
            uint64_t v76 = v71;
          }
LABEL_214:
          objc_msgSend(a1, "setTitleWeight:", v76, v136, v137);
          goto LABEL_179;
        case 119:
          char v77 = 0;
          unsigned int v78 = 0;
          uint64_t v79 = 0;
          while (2)
          {
            uint64_t v80 = *v4;
            uint64_t v81 = *(void *)(a2 + v80);
            unint64_t v82 = v81 + 1;
            if (v81 == -1 || v82 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v83 = *(unsigned char *)(*(void *)(a2 + *v8) + v81);
              *(void *)(a2 + v80) = v82;
              v79 |= (unint64_t)(v83 & 0x7F) << v77;
              if (v83 < 0)
              {
                v77 += 7;
                BOOL v16 = v78++ >= 9;
                if (v16)
                {
                  uint64_t v79 = 0;
                  goto LABEL_218;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v79 = 0;
          }
LABEL_218:
          [a1 setTitleNoWrap:v79 != 0];
          goto LABEL_179;
        case 120:
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v86 = 0;
          while (2)
          {
            uint64_t v87 = *v4;
            uint64_t v88 = *(void *)(a2 + v87);
            unint64_t v89 = v88 + 1;
            if (v88 == -1 || v89 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v90 = *(unsigned char *)(*(void *)(a2 + *v8) + v88);
              *(void *)(a2 + v87) = v89;
              v86 |= (unint64_t)(v90 & 0x7F) << v84;
              if (v90 < 0)
              {
                v84 += 7;
                BOOL v16 = v85++ >= 9;
                if (v16)
                {
                  uint64_t v86 = 0;
                  goto LABEL_222;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v86 = 0;
          }
LABEL_222:
          [a1 setThumbnailCropCircle:v86 != 0];
          goto LABEL_179;
        case 121:
          unsigned int v21 = objc_alloc_init(_SFPBImage);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v21, a2) & 1) == 0) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          [a1 setImageOverlay:v21];
          goto LABEL_178;
        case 122:
          unsigned int v21 = objc_alloc_init(_SFPBActionItem);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || (_SFPBActionItemReadFrom(v21, a2) & 1) == 0) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          [a1 setPlayAction:v21];
          goto LABEL_178;
        case 123:
          char v91 = 0;
          unsigned int v92 = 0;
          uint64_t v93 = 0;
          while (2)
          {
            uint64_t v94 = *v4;
            uint64_t v95 = *(void *)(a2 + v94);
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v97 = *(unsigned char *)(*(void *)(a2 + *v8) + v95);
              *(void *)(a2 + v94) = v96;
              v93 |= (unint64_t)(v97 & 0x7F) << v91;
              if (v97 < 0)
              {
                v91 += 7;
                BOOL v16 = v92++ >= 9;
                if (v16)
                {
                  uint64_t v98 = 0;
                  goto LABEL_227;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v98 = 0;
          }
          else {
            uint64_t v98 = v93;
          }
LABEL_227:
          objc_msgSend(a1, "setPlayActionAlign:", v98, v136, v137);
          goto LABEL_179;
        case 124:
          unsigned int v21 = objc_alloc_init(_SFPBMediaOffer);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || !_SFPBMediaOfferReadFrom(v21, a2)) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          if (v21) {
            objc_msgSend(a1, "addOffers:", v21, 0, 0);
          }
          goto LABEL_178;
        case 125:
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setFootnote:v21];
          goto LABEL_178;
        case 126:
          unsigned int v21 = objc_alloc_init(_SFPBRichText);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v21, a2)) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          [a1 setRichSubtitle:v21];
          goto LABEL_178;
        case 127:
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v101 = 0;
          break;
        case 128:
          unsigned int v21 = objc_alloc_init(_SFPBButtonItem);
          uint64_t v136 = 0;
          uint64_t v137 = 0;
          if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v21, a2)) {
            goto LABEL_252;
          }
          PBReaderRecallMark();
          if (v21) {
            objc_msgSend(a1, "addButtonItems:", v21, 0, 0);
          }
          goto LABEL_178;
        default:
          goto LABEL_181;
      }
      while (1)
      {
        uint64_t v102 = *v4;
        uint64_t v103 = *(void *)(a2 + v102);
        unint64_t v104 = v103 + 1;
        if (v103 == -1 || v104 > *(void *)(a2 + *v5)) {
          break;
        }
        char v105 = *(unsigned char *)(*(void *)(a2 + *v8) + v103);
        *(void *)(a2 + v102) = v104;
        v101 |= (unint64_t)(v105 & 0x7F) << v99;
        if ((v105 & 0x80) == 0) {
          goto LABEL_229;
        }
        v99 += 7;
        BOOL v16 = v100++ >= 9;
        if (v16)
        {
          uint64_t v101 = 0;
          goto LABEL_231;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_229:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v101 = 0;
      }
LABEL_231:
      [a1 setSubtitleIsEmphasized:v101 != 0];
      goto LABEL_179;
    }
    switch((int)v20)
    {
      case 1:
        unsigned int v21 = objc_alloc_init(_SFPBPunchout);
        uint64_t v136 = 0;
        uint64_t v137 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v21, a2)) {
          goto LABEL_252;
        }
        PBReaderRecallMark();
        if (v21) {
          objc_msgSend(a1, "addPunchoutOptions:", v21, 0, 0);
        }
        goto LABEL_178;
      case 2:
        PBReaderReadString();
        unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v21];
        goto LABEL_178;
      case 3:
        PBReaderReadString();
        unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v21];
        goto LABEL_178;
      case 4:
        char v106 = 0;
        unsigned int v107 = 0;
        uint64_t v108 = 0;
        while (2)
        {
          uint64_t v109 = *v4;
          uint64_t v110 = *(void *)(a2 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(a2 + *v8) + v110);
            *(void *)(a2 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if (v112 < 0)
            {
              v106 += 7;
              BOOL v16 = v107++ >= 9;
              if (v16)
              {
                uint64_t v108 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v108 = 0;
        }
LABEL_235:
        [a1 setCanBeHidden:v108 != 0];
        goto LABEL_179;
      case 5:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v115 = 0;
        while (2)
        {
          uint64_t v116 = *v4;
          uint64_t v117 = *(void *)(a2 + v116);
          unint64_t v118 = v117 + 1;
          if (v117 == -1 || v118 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v119 = *(unsigned char *)(*(void *)(a2 + *v8) + v117);
            *(void *)(a2 + v116) = v118;
            v115 |= (unint64_t)(v119 & 0x7F) << v113;
            if (v119 < 0)
            {
              v113 += 7;
              BOOL v16 = v114++ >= 9;
              if (v16)
              {
                uint64_t v115 = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v115 = 0;
        }
LABEL_239:
        [a1 setHasTopPadding:v115 != 0];
        goto LABEL_179;
      case 6:
        char v120 = 0;
        unsigned int v121 = 0;
        uint64_t v122 = 0;
        while (2)
        {
          uint64_t v123 = *v4;
          uint64_t v124 = *(void *)(a2 + v123);
          unint64_t v125 = v124 + 1;
          if (v124 == -1 || v125 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v126 = *(unsigned char *)(*(void *)(a2 + *v8) + v124);
            *(void *)(a2 + v123) = v125;
            v122 |= (unint64_t)(v126 & 0x7F) << v120;
            if (v126 < 0)
            {
              v120 += 7;
              BOOL v16 = v121++ >= 9;
              if (v16)
              {
                uint64_t v122 = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v122 = 0;
        }
LABEL_243:
        [a1 setHasBottomPadding:v122 != 0];
        goto LABEL_179;
      case 7:
        PBReaderReadString();
        unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v21];
        goto LABEL_178;
      case 8:
        char v127 = 0;
        unsigned int v128 = 0;
        uint64_t v129 = 0;
        while (2)
        {
          uint64_t v130 = *v4;
          uint64_t v131 = *(void *)(a2 + v130);
          unint64_t v132 = v131 + 1;
          if (v131 == -1 || v132 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v133 = *(unsigned char *)(*(void *)(a2 + *v8) + v131);
            *(void *)(a2 + v130) = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if (v133 < 0)
            {
              v127 += 7;
              BOOL v16 = v128++ >= 9;
              if (v16)
              {
                uint64_t v134 = 0;
                goto LABEL_248;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v134 = 0;
        }
        else {
          uint64_t v134 = v129;
        }
LABEL_248:
        objc_msgSend(a1, "setSeparatorStyle:", v134, v136, v137);
        goto LABEL_179;
      case 9:
        unsigned int v21 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v21, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v21, 0, 0);
LABEL_178:

LABEL_179:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_252:

        return 0;
      default:
        if (v20 == 51)
        {
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setTitle:v21];
          goto LABEL_178;
        }
        if (v20 == 52)
        {
          PBReaderReadString();
          unsigned int v21 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setSubtitle:v21];
          goto LABEL_178;
        }
LABEL_181:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_179;
    }
  }
}

uint64_t _SFPBRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '3':
        int v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
        goto LABEL_122;
      case '4':
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_128:
        [a1 setImageIsRightAligned:v22 != 0];
        goto LABEL_123;
      case '5':
        int v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLeadingText:", v18, 0, 0);
        goto LABEL_122;
      case '6':
        int v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrailingText:", v18, 0, 0);
        goto LABEL_122;
      case '7':
      case '8':
LABEL_27:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_123;
      case '9':
        int v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAttributionImage:", v18, 0, 0);
        goto LABEL_122;
      case ':':
        PBReaderReadString();
        int v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setKey:v18];
        goto LABEL_122;
      case ';':
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_132:
        [a1 setKeyNoWrap:v29 != 0];
        goto LABEL_123;
      case '<':
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v41 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v41 = 0;
        }
        else {
          uint64_t v41 = v36;
        }
LABEL_137:
        objc_msgSend(a1, "setKeyWeight:", v41, v93, v94);
        goto LABEL_123;
      case '=':
        PBReaderReadString();
        int v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setValue:v18];
        goto LABEL_122;
      case '>':
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_141:
        [a1 setValueNoWrap:v44 != 0];
        goto LABEL_123;
      case '?':
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_146:
        objc_msgSend(a1, "setValueWeight:", v56, v93, v94);
        goto LABEL_123;
      case '@':
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        while (2)
        {
          uint64_t v60 = *v3;
          uint64_t v61 = *(void *)(a2 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v15 = v58++ >= 9;
              if (v15)
              {
                uint64_t v59 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v59 = 0;
        }
LABEL_150:
        [a1 setCardPaddingBottom:v59 != 0];
        goto LABEL_123;
      case 'A':
        int v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_169;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLeadingSubtitle:", v18, 0, 0);
        goto LABEL_122;
      case 'B':
        int v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrailingSubtitle:", v18, 0, 0);
LABEL_122:

LABEL_123:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_169:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case 1u:
            int v18 = objc_alloc_init(_SFPBPunchout);
            uint64_t v93 = 0;
            uint64_t v94 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
              goto LABEL_169;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
            }
            goto LABEL_122;
          case 2u:
            PBReaderReadString();
            int v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v18];
            goto LABEL_122;
          case 3u:
            PBReaderReadString();
            int v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v18];
            goto LABEL_122;
          case 4u:
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            while (2)
            {
              uint64_t v67 = *v3;
              uint64_t v68 = *(void *)(a2 + v67);
              unint64_t v69 = v68 + 1;
              if (v68 == -1 || v69 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v70 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
                *(void *)(a2 + v67) = v69;
                v66 |= (unint64_t)(v70 & 0x7F) << v64;
                if (v70 < 0)
                {
                  v64 += 7;
                  BOOL v15 = v65++ >= 9;
                  if (v15)
                  {
                    uint64_t v66 = 0;
                    goto LABEL_154;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v66 = 0;
            }
LABEL_154:
            [a1 setCanBeHidden:v66 != 0];
            goto LABEL_123;
          case 5u:
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            while (2)
            {
              uint64_t v74 = *v3;
              uint64_t v75 = *(void *)(a2 + v74);
              unint64_t v76 = v75 + 1;
              if (v75 == -1 || v76 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v75);
                *(void *)(a2 + v74) = v76;
                v73 |= (unint64_t)(v77 & 0x7F) << v71;
                if (v77 < 0)
                {
                  v71 += 7;
                  BOOL v15 = v72++ >= 9;
                  if (v15)
                  {
                    uint64_t v73 = 0;
                    goto LABEL_158;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v73 = 0;
            }
LABEL_158:
            [a1 setHasTopPadding:v73 != 0];
            goto LABEL_123;
          case 6u:
            char v78 = 0;
            unsigned int v79 = 0;
            uint64_t v80 = 0;
            while (2)
            {
              uint64_t v81 = *v3;
              uint64_t v82 = *(void *)(a2 + v81);
              unint64_t v83 = v82 + 1;
              if (v82 == -1 || v83 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v84 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
                *(void *)(a2 + v81) = v83;
                v80 |= (unint64_t)(v84 & 0x7F) << v78;
                if (v84 < 0)
                {
                  v78 += 7;
                  BOOL v15 = v79++ >= 9;
                  if (v15)
                  {
                    uint64_t v80 = 0;
                    goto LABEL_162;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v80 = 0;
            }
LABEL_162:
            [a1 setHasBottomPadding:v80 != 0];
            goto LABEL_123;
          case 7u:
            PBReaderReadString();
            int v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v18];
            goto LABEL_122;
          case 8u:
            char v85 = 0;
            unsigned int v86 = 0;
            uint64_t v87 = 0;
            break;
          case 9u:
            int v18 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_169;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
            goto LABEL_122;
          default:
            goto LABEL_27;
        }
        while (2)
        {
          uint64_t v88 = *v3;
          uint64_t v89 = *(void *)(a2 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(a2 + *v7) + v89);
            *(void *)(a2 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v15 = v86++ >= 9;
              if (v15)
              {
                uint64_t v92 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v92 = 0;
        }
        else {
          uint64_t v92 = v87;
        }
LABEL_167:
        objc_msgSend(a1, "setSeparatorStyle:", v92, v93, v94);
        goto LABEL_123;
    }
  }
}

uint64_t _SFPBScoreboardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    if ((int)(v10 >> 3) <= 50)
    {
      switch((int)v18)
      {
        case 1:
          char v19 = objc_alloc_init(_SFPBPunchout);
          uint64_t v50 = 0;
          uint64_t v51 = 0;
          if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
          }
          goto LABEL_71;
        case 2:
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerTitle:v19];
          goto LABEL_71;
        case 3:
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerDismissText:v19];
          goto LABEL_71;
        case 4:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_79:
          [a1 setCanBeHidden:v22 != 0];
          goto LABEL_72;
        case 5:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v29 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_83:
          [a1 setHasTopPadding:v29 != 0];
          goto LABEL_72;
        case 6:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          while (2)
          {
            uint64_t v37 = *v3;
            uint64_t v38 = *(void *)(a2 + v37);
            unint64_t v39 = v38 + 1;
            if (v38 == -1 || v39 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v39;
              v36 |= (unint64_t)(v40 & 0x7F) << v34;
              if (v40 < 0)
              {
                v34 += 7;
                BOOL v15 = v35++ >= 9;
                if (v15)
                {
                  uint64_t v36 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v36 = 0;
          }
LABEL_87:
          [a1 setHasBottomPadding:v36 != 0];
          goto LABEL_72;
        case 7:
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setType:v19];
          goto LABEL_71;
        case 8:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          break;
        case 9:
          char v19 = objc_alloc_init(_SFPBColor);
          if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
          goto LABEL_71;
        default:
          goto LABEL_74;
      }
      while (1)
      {
        uint64_t v44 = *v3;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
        *(void *)(a2 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0) {
          goto LABEL_89;
        }
        v41 += 7;
        BOOL v15 = v42++ >= 9;
        if (v15)
        {
          uint64_t v48 = 0;
          goto LABEL_92;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_89:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v48 = 0;
      }
      else {
        uint64_t v48 = v43;
      }
LABEL_92:
      objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
      goto LABEL_72;
    }
    switch((int)v18)
    {
      case 'e':
        char v19 = objc_alloc_init(_SFPBSportsTeam);
        if (!PBReaderPlaceMark() || (_SFPBSportsTeamReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTeam1:", v19, 0, 0);
        goto LABEL_71;
      case 'f':
        char v19 = objc_alloc_init(_SFPBSportsTeam);
        if PBReaderPlaceMark() && (_SFPBSportsTeamReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTeam2:", v19, 0, 0);
LABEL_71:

LABEL_72:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_94:

        return 0;
      case 'g':
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setAccessibilityDescription:v19];
        goto LABEL_71;
      case 'h':
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setEventStatus:v19];
        goto LABEL_71;
      default:
        if (v18 == 51)
        {
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setTitle:v19];
          goto LABEL_71;
        }
        if (v18 == 52)
        {
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setSubtitle:v19];
          goto LABEL_71;
        }
LABEL_74:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_72;
    }
  }
}

uint64_t _SFPBSocialMediaPostCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    unsigned int v17 = v10 & 7;
    if (v16)
    {
      BOOL v18 = 1;
      BOOL v19 = 0;
    }
    else
    {
      BOOL v18 = v17 == 4;
      BOOL v19 = v17 > 4;
    }
    if (v18) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    if (!v19)
    {
      switch((v10 >> 3))
      {
        case '3':
          PBReaderReadString();
          char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setName:v20];
          goto LABEL_92;
        case '4':
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v15 = v52++ >= 9;
                if (v15)
                {
                  uint64_t v53 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_115:
          [a1 setNameNoWrap:v53 != 0];
          goto LABEL_93;
        case '5':
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          break;
        case '6':
          PBReaderReadString();
          char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setHandle:v20];
          goto LABEL_92;
        case '7':
          char v20 = objc_alloc_init(_SFPBImage);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          [a1 setVerifiedGlyph:v20];
          goto LABEL_92;
        case '8':
          char v20 = objc_alloc_init(_SFPBImage);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          [a1 setProfilePicture:v20];
          goto LABEL_92;
        case '9':
          char v20 = objc_alloc_init(_SFPBRichText);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v20, a2)) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          [a1 setPost:v20];
          goto LABEL_92;
        case ':':
          char v20 = objc_alloc_init(_SFPBImage);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          [a1 setPicture:v20];
          goto LABEL_92;
        case ';':
          PBReaderReadString();
          char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setTimestamp:v20];
          goto LABEL_92;
        case '<':
          PBReaderReadString();
          char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
          [a1 setFootnote:v20];
          goto LABEL_92;
        default:
          JUMPOUT(0);
      }
      while (1)
      {
        uint64_t v61 = *v3;
        uint64_t v62 = *(void *)(a2 + v61);
        unint64_t v63 = v62 + 1;
        if (v62 == -1 || v63 > *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
        *(void *)(a2 + v61) = v63;
        v60 |= (unint64_t)(v64 & 0x7F) << v58;
        if ((v64 & 0x80) == 0) {
          goto LABEL_117;
        }
        v58 += 7;
        BOOL v15 = v59++ >= 9;
        if (v15)
        {
          uint64_t v65 = 0;
          goto LABEL_120;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_117:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v65 = 0;
      }
      else {
        uint64_t v65 = v60;
      }
LABEL_120:
      objc_msgSend(a1, "setNameMaxLines:", v65, v66, v67);
      goto LABEL_93;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v20 = objc_alloc_init(_SFPBPunchout);
        uint64_t v66 = 0;
        uint64_t v67 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v20, a2)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addPunchoutOptions:", v20, 0, 0);
        }
        goto LABEL_92;
      case 2u:
        PBReaderReadString();
        char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v20];
        goto LABEL_92;
      case 3u:
        PBReaderReadString();
        char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v20];
        goto LABEL_92;
      case 4u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
LABEL_98:
        [a1 setCanBeHidden:v24 != 0];
        goto LABEL_93;
      case 5u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_102:
        [a1 setHasTopPadding:v31 != 0];
        goto LABEL_93;
      case 6u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_106:
        [a1 setHasBottomPadding:v38 != 0];
        goto LABEL_93;
      case 7u:
        PBReaderReadString();
        char v20 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v20];
        goto LABEL_92;
      case 8u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v15 = v44++ >= 9;
              if (v15)
              {
                uint64_t v50 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
        else {
          uint64_t v50 = v45;
        }
LABEL_111:
        objc_msgSend(a1, "setSeparatorStyle:", v50, v66, v67);
        goto LABEL_93;
      case 9u:
        char v20 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v20, 0, 0);
LABEL_92:

LABEL_93:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_122:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_93;
    }
  }
}

uint64_t _SFPBStockChartCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        BOOL v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_63;
      case 2u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_63;
      case 3u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_63;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_71:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_64;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_75:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_64;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_79:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_64;
      case 7u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_63;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_84:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_64;
      case 9u:
        BOOL v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_63;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            PBReaderReadData();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setChartData:v19];
LABEL_63:

            goto LABEL_64;
          }
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        BOOL v19 = objc_alloc_init(_SFPBURL);
        if PBReaderPlaceMark() && (_SFPBURLReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThirdPartyContentURL:", v19, 0, 0);
          goto LABEL_63;
        }
LABEL_86:

        return 0;
    }
  }
}

uint64_t _SFPBTableHeaderRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    unsigned int v17 = v10 & 7;
    if (v16)
    {
      BOOL v18 = 1;
      BOOL v19 = 0;
    }
    else
    {
      BOOL v18 = v17 == 4;
      BOOL v19 = v17 > 4;
    }
    if (v18) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    if (!v19)
    {
      switch((v10 >> 3))
      {
        case 1u:
          char v20 = objc_alloc_init(_SFPBPunchout);
          uint64_t v80 = 0;
          uint64_t v81 = 0;
          if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v20, a2)) {
            goto LABEL_137;
          }
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addPunchoutOptions:", v20, 0, 0);
          }
          goto LABEL_99;
        case 2u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerTitle:v20];
          goto LABEL_99;
        case 3u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerDismissText:v20];
          goto LABEL_99;
        case 4u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v15 = v52++ >= 9;
                if (v15)
                {
                  uint64_t v53 = 0;
                  goto LABEL_122;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_122:
          [a1 setCanBeHidden:v53 != 0];
          goto LABEL_100;
        case 5u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          while (2)
          {
            uint64_t v61 = *v3;
            uint64_t v62 = *(void *)(a2 + v61);
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                BOOL v15 = v59++ >= 9;
                if (v15)
                {
                  uint64_t v60 = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v60 = 0;
          }
LABEL_126:
          [a1 setHasTopPadding:v60 != 0];
          goto LABEL_100;
        case 6u:
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0;
          while (2)
          {
            uint64_t v68 = *v3;
            uint64_t v69 = *(void *)(a2 + v68);
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
              *(void *)(a2 + v68) = v70;
              v67 |= (unint64_t)(v71 & 0x7F) << v65;
              if (v71 < 0)
              {
                v65 += 7;
                BOOL v15 = v66++ >= 9;
                if (v15)
                {
                  uint64_t v67 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v67 = 0;
          }
LABEL_130:
          [a1 setHasBottomPadding:v67 != 0];
          goto LABEL_100;
        case 7u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setType:v20];
          goto LABEL_99;
        case 8u:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          break;
        case 9u:
          char v20 = objc_alloc_init(_SFPBColor);
          uint64_t v80 = 0;
          uint64_t v81 = 0;
          if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_137;
          }
          PBReaderRecallMark();
          [a1 setBackgroundColor:v20];
          goto LABEL_99;
        default:
          JUMPOUT(0);
      }
      while (1)
      {
        uint64_t v75 = *v3;
        uint64_t v76 = *(void *)(a2 + v75);
        unint64_t v77 = v76 + 1;
        if (v76 == -1 || v77 > *(void *)(a2 + *v4)) {
          break;
        }
        char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
        *(void *)(a2 + v75) = v77;
        v74 |= (unint64_t)(v78 & 0x7F) << v72;
        if ((v78 & 0x80) == 0) {
          goto LABEL_132;
        }
        v72 += 7;
        BOOL v15 = v73++ >= 9;
        if (v15)
        {
          uint64_t v79 = 0;
          goto LABEL_135;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_132:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v79 = 0;
      }
      else {
        uint64_t v79 = v74;
      }
LABEL_135:
      objc_msgSend(a1, "setSeparatorStyle:", v79, v80, v81);
      goto LABEL_100;
    }
    switch((v10 >> 3))
    {
      case '3':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTableIdentifier:v20];
        goto LABEL_99;
      case '4':
        char v20 = objc_alloc_init(_SFPBTableAlignmentSchema);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (!PBReaderPlaceMark() || !_SFPBTableAlignmentSchemaReadFrom(v20, a2)) {
          goto LABEL_137;
        }
        PBReaderRecallMark();
        [a1 setAlignmentSchema:v20];
        goto LABEL_99;
      case '5':
        char v20 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (PBReaderPlaceMark() && _SFPBFormattedTextReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addData:", v20, 0, 0);
          }
LABEL_99:

LABEL_100:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_137:

        return 0;
      case '6':
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
LABEL_105:
        [a1 setIsSubHeader:v24 != 0];
        goto LABEL_100;
      case '7':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTabGroupIdentifier:v20];
        goto LABEL_99;
      case '8':
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_109:
        [a1 setReducedRowHeight:v31 != 0];
        goto LABEL_100;
      case '9':
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v38;
        }
LABEL_114:
        objc_msgSend(a1, "setVerticalAlign:", v43, v80, v81);
        goto LABEL_100;
      case ':':
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_118:
        objc_msgSend(a1, "setAlignRowsToHeader:", v46 != 0, v80, v81);
        goto LABEL_100;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_100;
    }
  }
}

uint64_t _SFPBTableRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    unsigned int v17 = v10 & 7;
    if (v16)
    {
      BOOL v18 = 1;
      BOOL v19 = 0;
    }
    else
    {
      BOOL v18 = v17 == 4;
      BOOL v19 = v17 > 4;
    }
    if (v18) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    if (!v19)
    {
      switch((v10 >> 3))
      {
        case 1u:
          char v20 = objc_alloc_init(_SFPBPunchout);
          uint64_t v80 = 0;
          uint64_t v81 = 0;
          if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v20, a2)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addPunchoutOptions:", v20, 0, 0);
          }
          goto LABEL_103;
        case 2u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerTitle:v20];
          goto LABEL_103;
        case 3u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerDismissText:v20];
          goto LABEL_103;
        case 4u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v15 = v52++ >= 9;
                if (v15)
                {
                  uint64_t v53 = 0;
                  goto LABEL_126;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_126:
          [a1 setCanBeHidden:v53 != 0];
          goto LABEL_104;
        case 5u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          while (2)
          {
            uint64_t v61 = *v3;
            uint64_t v62 = *(void *)(a2 + v61);
            unint64_t v63 = v62 + 1;
            if (v62 == -1 || v63 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                BOOL v15 = v59++ >= 9;
                if (v15)
                {
                  uint64_t v60 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v60 = 0;
          }
LABEL_130:
          [a1 setHasTopPadding:v60 != 0];
          goto LABEL_104;
        case 6u:
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0;
          while (2)
          {
            uint64_t v68 = *v3;
            uint64_t v69 = *(void *)(a2 + v68);
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v7) + v69);
              *(void *)(a2 + v68) = v70;
              v67 |= (unint64_t)(v71 & 0x7F) << v65;
              if (v71 < 0)
              {
                v65 += 7;
                BOOL v15 = v66++ >= 9;
                if (v15)
                {
                  uint64_t v67 = 0;
                  goto LABEL_134;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v67 = 0;
          }
LABEL_134:
          [a1 setHasBottomPadding:v67 != 0];
          goto LABEL_104;
        case 7u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setType:v20];
          goto LABEL_103;
        case 8u:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          break;
        case 9u:
          char v20 = objc_alloc_init(_SFPBColor);
          uint64_t v80 = 0;
          uint64_t v81 = 0;
          if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          [a1 setBackgroundColor:v20];
          goto LABEL_103;
        default:
          JUMPOUT(0);
      }
      while (1)
      {
        uint64_t v75 = *v3;
        uint64_t v76 = *(void *)(a2 + v75);
        unint64_t v77 = v76 + 1;
        if (v76 == -1 || v77 > *(void *)(a2 + *v4)) {
          break;
        }
        char v78 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
        *(void *)(a2 + v75) = v77;
        v74 |= (unint64_t)(v78 & 0x7F) << v72;
        if ((v78 & 0x80) == 0) {
          goto LABEL_136;
        }
        v72 += 7;
        BOOL v15 = v73++ >= 9;
        if (v15)
        {
          uint64_t v79 = 0;
          goto LABEL_139;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_136:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v79 = 0;
      }
      else {
        uint64_t v79 = v74;
      }
LABEL_139:
      objc_msgSend(a1, "setSeparatorStyle:", v79, v80, v81);
      goto LABEL_104;
    }
    switch((v10 >> 3))
    {
      case '2':
        char v20 = objc_alloc_init(_SFPBRichText);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v20, a2)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        if (v20) {
          objc_msgSend(a1, "addRichData:", v20, 0, 0);
        }
        goto LABEL_103;
      case '3':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTableIdentifier:v20];
        goto LABEL_103;
      case '4':
        char v20 = objc_alloc_init(_SFPBTableAlignmentSchema);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (!PBReaderPlaceMark() || !_SFPBTableAlignmentSchemaReadFrom(v20, a2)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        [a1 setAlignmentSchema:v20];
        goto LABEL_103;
      case '5':
        char v20 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        if (PBReaderPlaceMark() && _SFPBFormattedTextReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addData:", v20, 0, 0);
          }
LABEL_103:

LABEL_104:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_141:

        return 0;
      case '6':
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
LABEL_109:
        [a1 setIsSubHeader:v24 != 0];
        goto LABEL_104;
      case '7':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTabGroupIdentifier:v20];
        goto LABEL_103;
      case '8':
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v31 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_113:
        [a1 setReducedRowHeight:v31 != 0];
        goto LABEL_104;
      case '9':
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
        else {
          uint64_t v43 = v38;
        }
LABEL_118:
        objc_msgSend(a1, "setVerticalAlign:", v43, v80, v81);
        goto LABEL_104;
      case ':':
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        while (2)
        {
          uint64_t v47 = *v3;
          uint64_t v48 = *(void *)(a2 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v15 = v45++ >= 9;
              if (v15)
              {
                uint64_t v46 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_122:
        objc_msgSend(a1, "setAlignRowsToHeader:", v46 != 0, v80, v81);
        goto LABEL_104;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_104;
    }
  }
}

uint64_t _SFPBTextColumnsCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            BOOL v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v58 = 0;
            uint64_t v59 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_73;
          case 2:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_73;
          case 3:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_73;
          case 4:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (2)
            {
              uint64_t v31 = *v3;
              uint64_t v32 = *(void *)(a2 + v31);
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
                *(void *)(a2 + v31) = v33;
                v30 |= (unint64_t)(v34 & 0x7F) << v28;
                if (v34 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    uint64_t v30 = 0;
                    goto LABEL_86;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v30 = 0;
            }
LABEL_86:
            [a1 setCanBeHidden:v30 != 0];
            goto LABEL_74;
          case 5:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (2)
            {
              uint64_t v38 = *v3;
              uint64_t v39 = *(void *)(a2 + v38);
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
                *(void *)(a2 + v38) = v40;
                v37 |= (unint64_t)(v41 & 0x7F) << v35;
                if (v41 < 0)
                {
                  v35 += 7;
                  BOOL v15 = v36++ >= 9;
                  if (v15)
                  {
                    uint64_t v37 = 0;
                    goto LABEL_90;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v37 = 0;
            }
LABEL_90:
            [a1 setHasTopPadding:v37 != 0];
            goto LABEL_74;
          case 6:
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (2)
            {
              uint64_t v45 = *v3;
              uint64_t v46 = *(void *)(a2 + v45);
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
                *(void *)(a2 + v45) = v47;
                v44 |= (unint64_t)(v48 & 0x7F) << v42;
                if (v48 < 0)
                {
                  v42 += 7;
                  BOOL v15 = v43++ >= 9;
                  if (v15)
                  {
                    uint64_t v44 = 0;
                    goto LABEL_94;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v44 = 0;
            }
LABEL_94:
            [a1 setHasBottomPadding:v44 != 0];
            goto LABEL_74;
          case 7:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_73;
          case 8:
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            break;
          case 9:
            BOOL v19 = objc_alloc_init(_SFPBColor);
            uint64_t v58 = 0;
            uint64_t v59 = 0;
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            [a1 setBackgroundColor:v19];
            goto LABEL_73;
          default:
            goto LABEL_76;
        }
        while (1)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4)) {
            break;
          }
          char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
          *(void *)(a2 + v52) = v54;
          v51 |= (unint64_t)(v55 & 0x7F) << v49;
          if ((v55 & 0x80) == 0) {
            goto LABEL_96;
          }
          v49 += 7;
          BOOL v15 = v50++ >= 9;
          if (v15)
          {
            uint64_t v56 = 0;
            goto LABEL_99;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_96:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_99:
        objc_msgSend(a1, "setSeparatorStyle:", v56, v58, v59);
        goto LABEL_74;
      }
      if (v18 == 51) {
        break;
      }
      if (v18 == 53)
      {
        BOOL v19 = objc_alloc_init(_SFPBTextColumn);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || !_SFPBTextColumnReadFrom(v19, a2))
        {
LABEL_101:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addColumns:", v19, 0, 0);
        }
        goto LABEL_73;
      }
      if (v18 == 52)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_79;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v27 = 0;
            goto LABEL_82;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_82:
        objc_msgSend(a1, "setTitleWeight:", v27, v58, v59);
      }
      else
      {
LABEL_76:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
LABEL_74:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_73:

    goto LABEL_74;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTitleCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    if ((int)(v10 >> 3) <= 50) {
      break;
    }
    switch(v18)
    {
      case '3':
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v19];
        goto LABEL_70;
      case '4':
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v19];
        goto LABEL_70;
      case '5':
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_76;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v22 = 0;
            goto LABEL_78;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_78:
        objc_msgSend(a1, "setIsCentered:", v22 != 0, v57, v58);
        break;
      default:
LABEL_73:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        break;
    }
LABEL_71:
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
  }
  switch((int)v18)
  {
    case 1:
      BOOL v19 = objc_alloc_init(_SFPBPunchout);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
        goto LABEL_97;
      }
      PBReaderRecallMark();
      if (v19) {
        objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
      }
      goto LABEL_70;
    case 2:
      PBReaderReadString();
      BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerTitle:v19];
      goto LABEL_70;
    case 3:
      PBReaderReadString();
      BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerDismissText:v19];
      goto LABEL_70;
    case 4:
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v29 = 0;
      while (2)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if (v33 < 0)
          {
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              uint64_t v29 = 0;
              goto LABEL_82;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_82:
      [a1 setCanBeHidden:v29 != 0];
      goto LABEL_71;
    case 5:
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v36 = 0;
      while (2)
      {
        uint64_t v37 = *v3;
        uint64_t v38 = *(void *)(a2 + v37);
        unint64_t v39 = v38 + 1;
        if (v38 == -1 || v39 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if (v40 < 0)
          {
            v34 += 7;
            BOOL v15 = v35++ >= 9;
            if (v15)
            {
              uint64_t v36 = 0;
              goto LABEL_86;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v36 = 0;
      }
LABEL_86:
      [a1 setHasTopPadding:v36 != 0];
      goto LABEL_71;
    case 6:
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      while (2)
      {
        uint64_t v44 = *v3;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if (v47 < 0)
          {
            v41 += 7;
            BOOL v15 = v42++ >= 9;
            if (v15)
            {
              uint64_t v43 = 0;
              goto LABEL_90;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v43 = 0;
      }
LABEL_90:
      [a1 setHasBottomPadding:v43 != 0];
      goto LABEL_71;
    case 7:
      PBReaderReadString();
      BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setType:v19];
      goto LABEL_70;
    case 8:
      char v48 = 0;
      unsigned int v49 = 0;
      uint64_t v50 = 0;
      while (2)
      {
        uint64_t v51 = *v3;
        uint64_t v52 = *(void *)(a2 + v51);
        unint64_t v53 = v52 + 1;
        if (v52 == -1 || v53 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
          *(void *)(a2 + v51) = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if (v54 < 0)
          {
            v48 += 7;
            BOOL v15 = v49++ >= 9;
            if (v15)
            {
              uint64_t v55 = 0;
              goto LABEL_95;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v55 = 0;
      }
      else {
        uint64_t v55 = v50;
      }
LABEL_95:
      objc_msgSend(a1, "setSeparatorStyle:", v55, v57, v58);
      goto LABEL_71;
    case 9:
      BOOL v19 = objc_alloc_init(_SFPBColor);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
      {
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
LABEL_70:

        goto LABEL_71;
      }
LABEL_97:

      return 0;
    default:
      goto LABEL_73;
  }
}

uint64_t _SFPBTrackListCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            BOOL v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_67;
          case 2:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_67;
          case 3:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_67;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_75:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_68;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_79:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_68;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_83:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_68;
          case 7:
            PBReaderReadString();
            BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_67;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            BOOL v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_67;
          default:
            goto LABEL_70;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_85;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_88:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_68;
      }
      if (v18 == 51) {
        break;
      }
      if (v18 == 52)
      {
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setSubtitle:v19];
        goto LABEL_67;
      }
      if (v18 == 101)
      {
        BOOL v19 = objc_alloc_init(_SFPBTrack);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBTrackReadFrom(v19, a2))
        {
LABEL_90:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addTracks:", v19, 0, 0);
        }
        goto LABEL_67;
      }
LABEL_70:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_68:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_67:

    goto LABEL_68;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBAudioPlaybackCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_87;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_87;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_87;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_98:
        [a1 setCanBeHidden:v29 != 0];
        goto LABEL_88;
      case 5u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_102:
        [a1 setHasTopPadding:v36 != 0];
        goto LABEL_88;
      case 6u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_106:
        [a1 setHasBottomPadding:v43 != 0];
        goto LABEL_88;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_87;
      case 8u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        while (2)
        {
          uint64_t v51 = *v3;
          uint64_t v52 = *(void *)(a2 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                uint64_t v55 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
        else {
          uint64_t v55 = v50;
        }
LABEL_111:
        objc_msgSend(a1, "setSeparatorStyle:", v55, v57, v58);
        goto LABEL_88;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_87:

LABEL_88:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_113:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '=':
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            break;
          case '>':
            unint64_t v18 = objc_alloc_init(_SFPBAbstractCommand);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBAbstractCommandReadFrom(v18, a2)) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addPlayCommands:", v18, 0, 0);
            }
            goto LABEL_87;
          case '?':
            unint64_t v18 = objc_alloc_init(_SFPBAbstractCommand);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBAbstractCommandReadFrom(v18, a2)) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addStopCommands:", v18, 0, 0);
            }
            goto LABEL_87;
          case '@':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setDetailText:", v18, 0, 0);
            goto LABEL_87;
          case 'A':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTitle:", v18, 0, 0);
            goto LABEL_87;
          case 'B':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setSubtitle:", v18, 0, 0);
            goto LABEL_87;
          case 'C':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_113;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
            goto LABEL_87;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_88;
            }
            return result;
        }
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_94:
        objc_msgSend(a1, "setState:", v26, v57, v58);
        goto LABEL_88;
    }
  }
}

uint64_t _SFPBFlightCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_69;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_69;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_69;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_82:
        [a1 setCanBeHidden:v30 != 0];
        goto LABEL_70;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_86:
        [a1 setHasTopPadding:v37 != 0];
        goto LABEL_70;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_90:
        [a1 setHasBottomPadding:v44 != 0];
        goto LABEL_70;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_69;
      case 8u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_95:
        objc_msgSend(a1, "setSeparatorStyle:", v56, v58, v59);
        goto LABEL_70;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
        goto LABEL_69;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_75;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_78;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_75:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v27 = 0;
            }
            else {
              uint64_t v27 = v22;
            }
LABEL_78:
            objc_msgSend(a1, "setSelectedLegIndex:", v27, v58, v59);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
LABEL_70:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBFlight);
        if (PBReaderPlaceMark() && _SFPBFlightReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFlight:", v19, 0, 0);
LABEL_69:

          goto LABEL_70;
        }
LABEL_97:

        return 0;
    }
  }
}

uint64_t _SFPBWebCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_59;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_59;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_59;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_67:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_60;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_71:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_60;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_75:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_60;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_59;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_80:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_60;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_59:

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((v10 >> 3) == 51)
        {
          PBReaderReadString();
          unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setHtmlString:v18];
          goto LABEL_59;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

uint64_t _SFPBMessageCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v65 = 0;
        uint64_t v66 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_81;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_81;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_81;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_87:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_82;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_91:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_82;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_95:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_82;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_81;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_100:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v65, v66);
        goto LABEL_82;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v65 = 0;
        uint64_t v66 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_81:

LABEL_82:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_112:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            PBReaderReadString();
            unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setMessageText:v18];
            goto LABEL_81;
          case '4':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            while (2)
            {
              uint64_t v52 = *v3;
              uint64_t v53 = *(void *)(a2 + v52);
              unint64_t v54 = v53 + 1;
              if (v53 == -1 || v54 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
                *(void *)(a2 + v52) = v54;
                v51 |= (unint64_t)(v55 & 0x7F) << v49;
                if (v55 < 0)
                {
                  v49 += 7;
                  BOOL v15 = v50++ >= 9;
                  if (v15)
                  {
                    uint64_t v56 = 0;
                    goto LABEL_105;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v56 = 0;
            }
            else {
              uint64_t v56 = v51;
            }
LABEL_105:
            objc_msgSend(a1, "setMessageStatus:", v56, v65, v66);
            goto LABEL_82;
          case '5':
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            break;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBURL);
            if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_112;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setAudioMessageURL:", v18, 0, 0);
            goto LABEL_81;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBMessageAttachment);
            if (!PBReaderPlaceMark() || (_SFPBMessageAttachmentReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_112;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setMessageAttachment:", v18, 0, 0);
            goto LABEL_81;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_82;
            }
            return result;
        }
        while (2)
        {
          uint64_t v60 = *v3;
          uint64_t v61 = *(void *)(a2 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v61);
            *(void *)(a2 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v15 = v58++ >= 9;
              if (v15)
              {
                uint64_t v64 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v64 = 0;
        }
        else {
          uint64_t v64 = v59;
        }
LABEL_110:
        objc_msgSend(a1, "setMessageServiceType:", v64, v65, v66);
        goto LABEL_82;
    }
  }
}

uint64_t _SFPBDetailedRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_140;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_140;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_140;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_146:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_141;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_150:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_141;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_154:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_141;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_140;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_159:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v77, v78);
        goto LABEL_141;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v18];
        goto LABEL_140;
      case 0x33u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setThumbnail:v18];
        goto LABEL_140;
      case 0x34u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_163:
        [a1 setPreventThumbnailImageScaling:v51 != 0];
        goto LABEL_141;
      case 0x35u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setTitle:v18];
        goto LABEL_140;
      case 0x36u:
        unint64_t v18 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBFormattedTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setSecondaryTitle:v18];
        goto LABEL_140;
      case 0x37u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setSecondaryTitleImage:v18];
        goto LABEL_140;
      case 0x38u:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                uint64_t v58 = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
LABEL_167:
        [a1 setIsSecondaryTitleDetached:v58 != 0];
        goto LABEL_141;
      case 0x39u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addDescriptions:", v18, 0, 0);
        }
        goto LABEL_140;
      case 0x3Au:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setFootnote:v18];
        goto LABEL_140;
      case 0x3Bu:
        unint64_t v18 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBFormattedTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setTrailingTopText:v18];
        goto LABEL_140;
      case 0x3Cu:
        unint64_t v18 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBFormattedTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setTrailingMiddleText:v18];
        goto LABEL_140;
      case 0x3Du:
        unint64_t v18 = objc_alloc_init(_SFPBFormattedText);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBFormattedTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setTrailingBottomText:v18];
        goto LABEL_140;
      case 0x3Eu:
        unint64_t v18 = objc_alloc_init(_SFPBActionItem);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBActionItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setAction:v18];
        goto LABEL_140;
      case 0x3Fu:
        unint64_t v18 = objc_alloc_init(_SFPBButton);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBButtonReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setButton:v18];
        goto LABEL_140;
      case 0x40u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        while (2)
        {
          uint64_t v66 = *v3;
          uint64_t v67 = *(void *)(a2 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v67);
            *(void *)(a2 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v15 = v64++ >= 9;
              if (v15)
              {
                uint64_t v65 = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v65 = 0;
        }
LABEL_171:
        [a1 setShouldUseCompactDisplay:v65 != 0];
        goto LABEL_141;
      case 0x41u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addButtonItems:", v18, 0, 0);
        }
        goto LABEL_140;
      case 0x42u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        [a1 setTrailingThumbnail:v18];
        goto LABEL_140;
      case 0x43u:
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v72 = 0;
        while (2)
        {
          uint64_t v73 = *v3;
          uint64_t v74 = *(void *)(a2 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(a2 + *v7) + v74);
            *(void *)(a2 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v15 = v71++ >= 9;
              if (v15)
              {
                uint64_t v72 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v72 = 0;
        }
LABEL_175:
        objc_msgSend(a1, "setButtonItemsAreTrailing:", v72 != 0, v77, v78);
        goto LABEL_141;
      case 0x44u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTopText:", v18, 0, 0);
        goto LABEL_140;
      case 0x45u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRichTrailingTopText:", v18, 0, 0);
        goto LABEL_140;
      case 0x46u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRichTrailingMiddleText:", v18, 0, 0);
        goto LABEL_140;
      case 0x47u:
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setRichTrailingBottomText:", v18, 0, 0);
LABEL_140:

LABEL_141:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_177:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_141;
    }
  }
}

uint64_t _SFPBImagesCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_70;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_70;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_70;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_82:
        [a1 setCanBeHidden:v29 != 0];
        goto LABEL_71;
      case 5u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_86:
        [a1 setHasTopPadding:v36 != 0];
        goto LABEL_71;
      case 6u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v43 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v43 = 0;
        }
LABEL_90:
        [a1 setHasBottomPadding:v43 != 0];
        goto LABEL_71;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_70;
      case 8u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        while (2)
        {
          uint64_t v51 = *v3;
          uint64_t v52 = *(void *)(a2 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
            *(void *)(a2 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v15 = v49++ >= 9;
              if (v15)
              {
                uint64_t v55 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
        else {
          uint64_t v55 = v50;
        }
LABEL_95:
        objc_msgSend(a1, "setSeparatorStyle:", v55, v57, v58);
        goto LABEL_71;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
        goto LABEL_70;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_76;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_78;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_78:
            objc_msgSend(a1, "setBorderless:", v22 != 0, v57, v58);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBImage);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (PBReaderPlaceMark() && _SFPBImageReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addImages:", v19, 0, 0);
          }
LABEL_70:

          goto LABEL_71;
        }
LABEL_97:

        return 0;
    }
  }
}

uint64_t _SFPBSuggestionCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    unsigned int v17 = v10 & 7;
    if (v16)
    {
      BOOL v18 = 1;
      BOOL v19 = 0;
    }
    else
    {
      BOOL v18 = v17 == 4;
      BOOL v19 = v17 > 4;
    }
    if (v18) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    if (!v19)
    {
      switch((v10 >> 3))
      {
        case 1u:
          char v20 = objc_alloc_init(_SFPBPunchout);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v20, a2)) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          if (v20) {
            objc_msgSend(a1, "addPunchoutOptions:", v20, 0, 0);
          }
          goto LABEL_92;
        case 2u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerTitle:v20];
          goto LABEL_92;
        case 3u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPunchoutPickerDismissText:v20];
          goto LABEL_92;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v3;
            uint64_t v41 = *(void *)(a2 + v40);
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v15 = v38++ >= 9;
                if (v15)
                {
                  uint64_t v39 = 0;
                  goto LABEL_107;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_107:
          [a1 setCanBeHidden:v39 != 0];
          goto LABEL_93;
        case 5u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v46 = 0;
          while (2)
          {
            uint64_t v47 = *v3;
            uint64_t v48 = *(void *)(a2 + v47);
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
              *(void *)(a2 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                BOOL v15 = v45++ >= 9;
                if (v15)
                {
                  uint64_t v46 = 0;
                  goto LABEL_111;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v46 = 0;
          }
LABEL_111:
          [a1 setHasTopPadding:v46 != 0];
          goto LABEL_93;
        case 6u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (2)
          {
            uint64_t v54 = *v3;
            uint64_t v55 = *(void *)(a2 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                BOOL v15 = v52++ >= 9;
                if (v15)
                {
                  uint64_t v53 = 0;
                  goto LABEL_115;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_115:
          [a1 setHasBottomPadding:v53 != 0];
          goto LABEL_93;
        case 7u:
          PBReaderReadString();
          char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setType:v20];
          goto LABEL_92;
        case 8u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          break;
        case 9u:
          char v20 = objc_alloc_init(_SFPBColor);
          if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v20, a2) & 1) == 0) {
            goto LABEL_122;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v20, 0, 0);
          goto LABEL_92;
        default:
          JUMPOUT(0);
      }
      while (1)
      {
        uint64_t v61 = *v3;
        uint64_t v62 = *(void *)(a2 + v61);
        unint64_t v63 = v62 + 1;
        if (v62 == -1 || v63 > *(void *)(a2 + *v4)) {
          break;
        }
        char v64 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
        *(void *)(a2 + v61) = v63;
        v60 |= (unint64_t)(v64 & 0x7F) << v58;
        if ((v64 & 0x80) == 0) {
          goto LABEL_117;
        }
        v58 += 7;
        BOOL v15 = v59++ >= 9;
        if (v15)
        {
          uint64_t v65 = 0;
          goto LABEL_120;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_117:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v65 = 0;
      }
      else {
        uint64_t v65 = v60;
      }
LABEL_120:
      objc_msgSend(a1, "setSeparatorStyle:", v65, v66, v67);
      goto LABEL_93;
    }
    switch((v10 >> 3))
    {
      case '3':
        char v20 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v20, a2)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSuggestionText:", v20, 0, 0);
        goto LABEL_92;
      case '4':
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v3;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v15 = v23++ >= 9;
              if (v15)
              {
                uint64_t v24 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v24 = 0;
        }
LABEL_98:
        [a1 setIsContact:v24 != 0];
        goto LABEL_93;
      case '5':
        PBReaderReadString();
        char v20 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setScopedSearchSectionBundleIdentifier:v20];
        goto LABEL_92;
      case '6':
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (2)
        {
          uint64_t v32 = *v3;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v34;
            v31 |= (unint64_t)(v35 & 0x7F) << v29;
            if (v35 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
        else {
          uint64_t v36 = v31;
        }
LABEL_103:
        objc_msgSend(a1, "setSuggestionType:", v36, v66, v67);
        goto LABEL_93;
      case '7':
        char v20 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v20, a2)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setDetailText:", v20, 0, 0);
        goto LABEL_92;
      case '8':
        char v20 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v20, 0, 0);
        goto LABEL_92;
      case '9':
        char v20 = objc_alloc_init(_SFPBFormattedText);
        if (!PBReaderPlaceMark() || (_SFPBFormattedTextReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTrailingMiddleText:", v20, 0, 0);
        goto LABEL_92;
      case ':':
        char v20 = objc_alloc_init(_SFPBFormattedText);
        if PBReaderPlaceMark() && (_SFPBFormattedTextReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTrailingBottomText:", v20, 0, 0);
LABEL_92:

LABEL_93:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_122:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_93;
    }
  }
}

uint64_t _SFPBSelectableGridCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        BOOL v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_70;
      case 2u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_70;
      case 3u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_70;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_83:
        [a1 setCanBeHidden:v30 != 0];
        goto LABEL_71;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_87:
        [a1 setHasTopPadding:v37 != 0];
        goto LABEL_71;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_91:
        [a1 setHasBottomPadding:v44 != 0];
        goto LABEL_71;
      case 7u:
        PBReaderReadString();
        BOOL v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_70;
      case 8u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_96:
        objc_msgSend(a1, "setSeparatorStyle:", v56, v58, v59);
        goto LABEL_71;
      case 9u:
        BOOL v19 = objc_alloc_init(_SFPBColor);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
        goto LABEL_70;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_76;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_79;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v27 = 0;
            }
            else {
              uint64_t v27 = v22;
            }
LABEL_79:
            objc_msgSend(a1, "setInitialSelectedIndex:", v27, v58, v59);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        BOOL v19 = objc_alloc_init(_SFPBTitleSubtitleTuple);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (PBReaderPlaceMark() && _SFPBTitleSubtitleTupleReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addEntries:", v19, 0, 0);
          }
LABEL_70:

          goto LABEL_71;
        }
LABEL_98:

        return 0;
    }
  }
}

uint64_t _SFPBSectionHeaderCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_61;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_61;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_61;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_69:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_62;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_73:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_62;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_77:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_62;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_61;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_82:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_62;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_61;
      default:
        if ((v10 >> 3) != 51)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText:", v18, 0, 0);
LABEL_61:

          goto LABEL_62;
        }
LABEL_84:

        return 0;
    }
  }
}

uint64_t _SFPBMetaInfoCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_76;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_76;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_76;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_86:
        [a1 setCanBeHidden:v28 != 0];
        goto LABEL_77;
      case 5u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_90:
        [a1 setHasTopPadding:v35 != 0];
        goto LABEL_77;
      case 6u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v42 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v42 = 0;
        }
LABEL_94:
        [a1 setHasBottomPadding:v42 != 0];
        goto LABEL_77;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_76;
      case 8u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v3;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                uint64_t v54 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v49;
        }
LABEL_99:
        objc_msgSend(a1, "setSeparatorStyle:", v54, v56, v57);
        goto LABEL_77;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_76:

LABEL_77:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_101:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            break;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBURL);
            if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setContentURL:", v18, 0, 0);
            goto LABEL_76;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBURL);
            if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setHostPageURL:", v18, 0, 0);
            goto LABEL_76;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBadge:", v18, 0, 0);
            goto LABEL_76;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_77;
            }
            return result;
        }
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_82:
        objc_msgSend(a1, "setTrending:", v21 != 0, v56, v57);
        goto LABEL_77;
    }
  }
}

uint64_t _SFPBWatchListCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_61;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_61;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_61;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_69:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_62;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_73:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_62;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_77:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_62;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_61;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_82:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_62;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_61;
      default:
        if ((v10 >> 3) != 51)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unint64_t v18 = objc_alloc_init(_SFPBWatchListItem);
        if PBReaderPlaceMark() && (_SFPBWatchListItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setWatchListItem:", v18, 0, 0);
LABEL_61:

          goto LABEL_62;
        }
LABEL_84:

        return 0;
    }
  }
}

uint64_t _SFPBMapsDetailedRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_61;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_61;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_61;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_69:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_62;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_73:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_62;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_77:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_62;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_61;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_82:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_62;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
LABEL_61:

LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_84:

        return 0;
      default:
        if (v18 == 51)
        {
          PBReaderReadData();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setMapsData:v19];
          goto LABEL_61;
        }
        if (v18 == 52)
        {
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setPinText:v19];
          goto LABEL_61;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_62;
    }
  }
}

uint64_t _SFPBButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_65;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_65;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_65;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_73:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_66;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_77:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_66;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_81:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_66;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_65;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_86:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_66;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_65;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v19 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_88;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setThumbnail:", v19, 0, 0);
            goto LABEL_65;
          }
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTitle:", v19, 0, 0);
LABEL_65:

          goto LABEL_66;
        }
LABEL_88:

        return 0;
    }
  }
}

uint64_t _SFPBHorizontalButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_62;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_62;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_62;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_70:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_63;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_74:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_63;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_78:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_63;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_62;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_83:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_63;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_62;
      default:
        if ((v10 >> 3) != 51)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unint64_t v18 = objc_alloc_init(_SFPBCardSection);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (PBReaderPlaceMark() && _SFPBCardSectionReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addButtonCardSections:", v18, 0, 0);
          }
LABEL_62:

          goto LABEL_63;
        }
LABEL_85:

        return 0;
    }
  }
}

uint64_t _SFPBVerticalLayoutCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_115;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_79;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_79;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_79;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_92:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_80;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_96:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_80;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_100:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_80;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_79;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_105:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v63, v64);
        goto LABEL_80;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_79:

LABEL_80:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_115:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            uint64_t v63 = 0;
            uint64_t v64 = 0;
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_115;
            }
            PBReaderRecallMark();
            [a1 setThumbnail:v18];
            goto LABEL_79;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v63 = 0;
            uint64_t v64 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_115;
            }
            PBReaderRecallMark();
            [a1 setTitle:v18];
            goto LABEL_79;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v63 = 0;
            uint64_t v64 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_115;
            }
            PBReaderRecallMark();
            [a1 setFootnote:v18];
            goto LABEL_79;
          case '6':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            while (2)
            {
              uint64_t v52 = *v3;
              uint64_t v53 = *(void *)(a2 + v52);
              unint64_t v54 = v53 + 1;
              if (v53 == -1 || v54 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
                *(void *)(a2 + v52) = v54;
                v51 |= (unint64_t)(v55 & 0x7F) << v49;
                if (v55 < 0)
                {
                  v49 += 7;
                  BOOL v15 = v50++ >= 9;
                  if (v15)
                  {
                    uint64_t v51 = 0;
                    goto LABEL_109;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v51 = 0;
            }
LABEL_109:
            [a1 setContentsLeading:v51 != 0];
            goto LABEL_80;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v63 = 0;
            uint64_t v64 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_115;
            }
            PBReaderRecallMark();
            [a1 setThumbnailOverlayText:v18];
            goto LABEL_79;
          case '8':
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            break;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_80;
            }
            return result;
        }
        while (2)
        {
          uint64_t v59 = *v3;
          uint64_t v60 = *(void *)(a2 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v15 = v57++ >= 9;
              if (v15)
              {
                uint64_t v58 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
LABEL_113:
        objc_msgSend(a1, "setUseAppIconMetrics:", v58 != 0, v63, v64);
        goto LABEL_80;
    }
  }
}

uint64_t _SFPBProductCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_59;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_59;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_59;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_67:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_60;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_71:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_60;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_75:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_60;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_59;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_80:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_60;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_59:

LABEL_60:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      default:
        if ((v10 >> 3) == 1000)
        {
          PBReaderReadData();
          unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setProductJSON:v18];
          goto LABEL_59;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

uint64_t _SFPBHorizontalScrollCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_70;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_70;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_70;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_83:
        [a1 setCanBeHidden:v30 != 0];
        goto LABEL_71;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_87:
        [a1 setHasTopPadding:v37 != 0];
        goto LABEL_71;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_91:
        [a1 setHasBottomPadding:v44 != 0];
        goto LABEL_71;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_70;
      case 8u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_96:
        objc_msgSend(a1, "setSeparatorStyle:", v56, v58, v59);
        goto LABEL_71;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
        goto LABEL_70;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_76;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_79;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v27 = 0;
            }
            else {
              uint64_t v27 = v22;
            }
LABEL_79:
            objc_msgSend(a1, "setNumberOfRows:", v27, v58, v59);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBCardSection);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (PBReaderPlaceMark() && _SFPBCardSectionReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addCardSections:", v19, 0, 0);
          }
LABEL_70:

          goto LABEL_71;
        }
LABEL_98:

        return 0;
    }
  }
}

uint64_t _SFPBMediaRemoteControlCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    if ((int)(v10 >> 3) <= 50) {
      break;
    }
    switch(v18)
    {
      case '3':
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPlaybackRouteUniqueIdentifier:v19];
        goto LABEL_70;
      case '5':
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPlaybackBundleIdentifier:v19];
        goto LABEL_70;
      case '4':
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_76;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v22 = 0;
            goto LABEL_78;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_78:
        objc_msgSend(a1, "setPlaybackRouteUniqueIdentifierIsEncrypted:", v22 != 0, v57, v58);
        break;
      default:
LABEL_73:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        break;
    }
LABEL_71:
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
  }
  switch((int)v18)
  {
    case 1:
      char v19 = objc_alloc_init(_SFPBPunchout);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
        goto LABEL_97;
      }
      PBReaderRecallMark();
      if (v19) {
        objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
      }
      goto LABEL_70;
    case 2:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerTitle:v19];
      goto LABEL_70;
    case 3:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerDismissText:v19];
      goto LABEL_70;
    case 4:
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v29 = 0;
      while (2)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if (v33 < 0)
          {
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              uint64_t v29 = 0;
              goto LABEL_82;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_82:
      [a1 setCanBeHidden:v29 != 0];
      goto LABEL_71;
    case 5:
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v36 = 0;
      while (2)
      {
        uint64_t v37 = *v3;
        uint64_t v38 = *(void *)(a2 + v37);
        unint64_t v39 = v38 + 1;
        if (v38 == -1 || v39 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if (v40 < 0)
          {
            v34 += 7;
            BOOL v15 = v35++ >= 9;
            if (v15)
            {
              uint64_t v36 = 0;
              goto LABEL_86;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v36 = 0;
      }
LABEL_86:
      [a1 setHasTopPadding:v36 != 0];
      goto LABEL_71;
    case 6:
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      while (2)
      {
        uint64_t v44 = *v3;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if (v47 < 0)
          {
            v41 += 7;
            BOOL v15 = v42++ >= 9;
            if (v15)
            {
              uint64_t v43 = 0;
              goto LABEL_90;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v43 = 0;
      }
LABEL_90:
      [a1 setHasBottomPadding:v43 != 0];
      goto LABEL_71;
    case 7:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setType:v19];
      goto LABEL_70;
    case 8:
      char v48 = 0;
      unsigned int v49 = 0;
      uint64_t v50 = 0;
      while (2)
      {
        uint64_t v51 = *v3;
        uint64_t v52 = *(void *)(a2 + v51);
        unint64_t v53 = v52 + 1;
        if (v52 == -1 || v53 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
          *(void *)(a2 + v51) = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if (v54 < 0)
          {
            v48 += 7;
            BOOL v15 = v49++ >= 9;
            if (v15)
            {
              uint64_t v55 = 0;
              goto LABEL_95;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v55 = 0;
      }
      else {
        uint64_t v55 = v50;
      }
LABEL_95:
      objc_msgSend(a1, "setSeparatorStyle:", v55, v57, v58);
      goto LABEL_71;
    case 9:
      char v19 = objc_alloc_init(_SFPBColor);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
      {
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
LABEL_70:

        goto LABEL_71;
      }
LABEL_97:

      return 0;
    default:
      goto LABEL_73;
  }
}

uint64_t _SFPBMapPlaceCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    if ((int)(v10 >> 3) <= 50) {
      break;
    }
    switch(v18)
    {
      case '3':
        PBReaderReadData();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setMapsData:v19];
        goto LABEL_70;
      case '5':
        PBReaderReadData();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setDetourInfoData:v19];
        goto LABEL_70;
      case '4':
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_76;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            uint64_t v22 = 0;
            goto LABEL_78;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_78:
        objc_msgSend(a1, "setShouldSearchDirectionsAlongCurrentRoute:", v22 != 0, v57, v58);
        break;
      default:
LABEL_73:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        break;
    }
LABEL_71:
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
  }
  switch((int)v18)
  {
    case 1:
      char v19 = objc_alloc_init(_SFPBPunchout);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
        goto LABEL_97;
      }
      PBReaderRecallMark();
      if (v19) {
        objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
      }
      goto LABEL_70;
    case 2:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerTitle:v19];
      goto LABEL_70;
    case 3:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setPunchoutPickerDismissText:v19];
      goto LABEL_70;
    case 4:
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v29 = 0;
      while (2)
      {
        uint64_t v30 = *v3;
        uint64_t v31 = *(void *)(a2 + v30);
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if (v33 < 0)
          {
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              uint64_t v29 = 0;
              goto LABEL_82;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v29 = 0;
      }
LABEL_82:
      [a1 setCanBeHidden:v29 != 0];
      goto LABEL_71;
    case 5:
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v36 = 0;
      while (2)
      {
        uint64_t v37 = *v3;
        uint64_t v38 = *(void *)(a2 + v37);
        unint64_t v39 = v38 + 1;
        if (v38 == -1 || v39 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if (v40 < 0)
          {
            v34 += 7;
            BOOL v15 = v35++ >= 9;
            if (v15)
            {
              uint64_t v36 = 0;
              goto LABEL_86;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v36 = 0;
      }
LABEL_86:
      [a1 setHasTopPadding:v36 != 0];
      goto LABEL_71;
    case 6:
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      while (2)
      {
        uint64_t v44 = *v3;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if (v47 < 0)
          {
            v41 += 7;
            BOOL v15 = v42++ >= 9;
            if (v15)
            {
              uint64_t v43 = 0;
              goto LABEL_90;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v43 = 0;
      }
LABEL_90:
      [a1 setHasBottomPadding:v43 != 0];
      goto LABEL_71;
    case 7:
      PBReaderReadString();
      char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
      [a1 setType:v19];
      goto LABEL_70;
    case 8:
      char v48 = 0;
      unsigned int v49 = 0;
      uint64_t v50 = 0;
      while (2)
      {
        uint64_t v51 = *v3;
        uint64_t v52 = *(void *)(a2 + v51);
        unint64_t v53 = v52 + 1;
        if (v52 == -1 || v53 > *(void *)(a2 + *v4))
        {
          *(unsigned char *)(a2 + *v5) = 1;
        }
        else
        {
          char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
          *(void *)(a2 + v51) = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if (v54 < 0)
          {
            v48 += 7;
            BOOL v15 = v49++ >= 9;
            if (v15)
            {
              uint64_t v55 = 0;
              goto LABEL_95;
            }
            continue;
          }
        }
        break;
      }
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v55 = 0;
      }
      else {
        uint64_t v55 = v50;
      }
LABEL_95:
      objc_msgSend(a1, "setSeparatorStyle:", v55, v57, v58);
      goto LABEL_71;
    case 9:
      char v19 = objc_alloc_init(_SFPBColor);
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if PBReaderPlaceMark() && (_SFPBColorReadFrom(v19, a2))
      {
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
LABEL_70:

        goto LABEL_71;
      }
LABEL_97:

      return 0;
    default:
      goto LABEL_73;
  }
}

uint64_t _SFPBCompactRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_76;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_76;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_76;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_82:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_77;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_86:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_77;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_90:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_77;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_76;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_95:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v56, v57);
        goto LABEL_77;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_76:

LABEL_77:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_101:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            [a1 setTitle:v18];
            goto LABEL_76;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            [a1 setSubtitle:v18];
            goto LABEL_76;
          case '5':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            break;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_101;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setImage:", v18, 0, 0);
            goto LABEL_76;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_77;
            }
            return result;
        }
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_99:
        objc_msgSend(a1, "setIsSubtitleDetatched:", v51 != 0, v56, v57);
        goto LABEL_77;
    }
  }
}

uint64_t _SFPBWorldMapCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_63;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_63;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_63;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_71:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_64;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_75:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_64;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_79:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_64;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_63;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_84:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_64;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_63;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setHighlightedTimeZoneName:v19];
LABEL_63:

            goto LABEL_64;
          }
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBLatLng);
        if PBReaderPlaceMark() && (_SFPBLatLngReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPinLocation:", v19, 0, 0);
          goto LABEL_63;
        }
LABEL_86:

        return 0;
    }
  }
}

uint64_t _SFPBAttributionFooterCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_75;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_75;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_75;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_81:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_76;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_85:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_76;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_89:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_76;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_75;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_94:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_76;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_75:

LABEL_76:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_96:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setLeadingAttribution:", v18, 0, 0);
            goto LABEL_75;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBPunchout);
            if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setLeadingAttributionPunchout:", v18, 0, 0);
            goto LABEL_75;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTrailingAttribution:", v18, 0, 0);
            goto LABEL_75;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBPunchout);
            if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTrailingAttributionPunchout:", v18, 0, 0);
            goto LABEL_75;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBCommand);
            if (!PBReaderPlaceMark() || (_SFPBCommandReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTrailingAttributionCommand:", v18, 0, 0);
            goto LABEL_75;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_76;
            }
            break;
        }
        return result;
    }
  }
}

uint64_t _SFPBGridCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_62;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_62;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_62;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_70:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_63;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_74:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_63;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_78:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_63;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_62;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_83:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_63;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_62;
      default:
        if ((v10 >> 3) != 51)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unint64_t v18 = objc_alloc_init(_SFPBCardSection);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (PBReaderPlaceMark() && _SFPBCardSectionReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addCardSections:", v18, 0, 0);
          }
LABEL_62:

          goto LABEL_63;
        }
LABEL_85:

        return 0;
    }
  }
}

uint64_t _SFPBPersonHeaderCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 51)
      {
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBColorBarCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '3':
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBarColor:", v18, 0, 0);
        goto LABEL_33;
      case '4':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTopText:", v18, 0, 0);
        goto LABEL_33;
      case '5':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v18, 0, 0);
        goto LABEL_33;
      case '6':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setSubtitle:", v18, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

BOOL _SFPBSplitCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '3':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTopTitle:", v18, 0, 0);
        goto LABEL_37;
      case '4':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSecondaryTopTitle:", v18, 0, 0);
        goto LABEL_37;
      case '5':
        PBReaderReadString();
        unint64_t v18 = (_SFPBRichText *)objc_claimAutoreleasedReturnValue();
        [a1 setListPrefix:v18];
        goto LABEL_37;
      case '6':
        PBReaderReadString();
        unint64_t v18 = (_SFPBRichText *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addListItems:v18];
        }
        goto LABEL_37;
      case '7':
        PBReaderReadString();
        unint64_t v18 = (_SFPBRichText *)objc_claimAutoreleasedReturnValue();
        [a1 setListMoreString:v18];
        goto LABEL_37;
      case '8':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBottomTitle:", v18, 0, 0);
        goto LABEL_37;
      case '9':
        unint64_t v18 = objc_alloc_init(_SFPBRichText);
        if (PBReaderPlaceMark() && _SFPBRichTextReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBody:", v18, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_38;
    }
  }
}

uint64_t _SFPBLinkPresentationCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '3':
        PBReaderReadString();
        unint64_t v18 = (_SFPBPerson *)objc_claimAutoreleasedReturnValue();
        [a1 setCoreSpotlightIdentifier:v18];
        goto LABEL_27;
      case '4':
        PBReaderReadString();
        unint64_t v18 = (_SFPBPerson *)objc_claimAutoreleasedReturnValue();
        [a1 setUrl:v18];
        goto LABEL_27;
      case '5':
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        if (PBReaderPlaceMark() && _SFPBPersonReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addPeopleToBadge:", v18, 0, 0);
          }
LABEL_27:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case '6':
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_38:
        objc_msgSend(a1, "setIsHighlighted:", v22 != 0, v27, v28);
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBFindMyCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 51)
      {
        unint64_t v18 = objc_alloc_init(_SFPBPerson);
        if (!PBReaderPlaceMark() || !_SFPBPersonReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPerson:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBHeroCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_73;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_73;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_73;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_86:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_74;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_90:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_74;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_94:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_74;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_73;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_99:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v57, v58);
        goto LABEL_74;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_73:

LABEL_74:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_106:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_106;
            }
            PBReaderRecallMark();
            [a1 setTitle:v18];
            goto LABEL_73;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_106;
            }
            PBReaderRecallMark();
            [a1 setSubtitle:v18];
            goto LABEL_73;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v18, a2)) {
              goto LABEL_106;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addButtonItems:", v18, 0, 0);
            }
            goto LABEL_73;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_106;
            }
            PBReaderRecallMark();
            [a1 setImage:v18];
            goto LABEL_73;
          case '7':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            break;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_74;
            }
            return result;
        }
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_104:
        objc_msgSend(a1, "setImageAlign:", v56, v57, v58);
        goto LABEL_74;
    }
  }
}

uint64_t _SFPBNewsCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_75;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_75;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_75;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_88:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_76;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_92:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_76;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_96:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_76;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_75;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_101:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v56, v57);
        goto LABEL_76;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_75:

LABEL_76:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_107:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_107;
            }
            PBReaderRecallMark();
            [a1 setTitle:v18];
            goto LABEL_75;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_107;
            }
            PBReaderRecallMark();
            [a1 setSubtitle:v18];
            goto LABEL_75;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_107;
            }
            PBReaderRecallMark();
            [a1 setThumbnail:v18];
            goto LABEL_75;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_107;
            }
            PBReaderRecallMark();
            [a1 setProviderImage:v18];
            goto LABEL_75;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v56 = 0;
            uint64_t v57 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_107;
            }
            PBReaderRecallMark();
            [a1 setProviderTitle:v18];
            goto LABEL_75;
          case '8':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            break;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_76;
            }
            return result;
        }
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v51 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v51 = 0;
        }
LABEL_105:
        objc_msgSend(a1, "setOverlayTextInImage:", v51 != 0, v56, v57);
        goto LABEL_76;
    }
  }
}

uint64_t _SFPBMiniCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_93;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_70;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_70;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_70;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_78;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_78:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_71;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_82;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_82:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_71;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_86;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_86:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_71;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_70;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_93;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_70;
          default:
            goto LABEL_73;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_88;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_91;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_88:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_91:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_71;
      }
      if (v18 == 51)
      {
        char v19 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v19, a2))
        {
LABEL_93:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v19, 0, 0);
        goto LABEL_70;
      }
      if (v18 == 52) {
        break;
      }
      if (v18 == 53)
      {
        char v19 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v19, 0, 0);
LABEL_70:

        goto LABEL_71;
      }
LABEL_73:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_71:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_SFPBRichText);
    if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v19, a2)) {
      goto LABEL_93;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSubtitle:", v19, 0, 0);
    goto LABEL_70;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBInfoCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_70;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_70;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_70;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_83:
        [a1 setCanBeHidden:v30 != 0];
        goto LABEL_71;
      case 5u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (2)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
            *(void *)(a2 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if (v41 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                uint64_t v37 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v37 = 0;
        }
LABEL_87:
        [a1 setHasTopPadding:v37 != 0];
        goto LABEL_71;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        while (2)
        {
          uint64_t v45 = *v3;
          uint64_t v46 = *(void *)(a2 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v15 = v43++ >= 9;
              if (v15)
              {
                uint64_t v44 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_91:
        [a1 setHasBottomPadding:v44 != 0];
        goto LABEL_71;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_70;
      case 8u:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_96:
        objc_msgSend(a1, "setSeparatorStyle:", v56, v58, v59);
        goto LABEL_71;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        [a1 setBackgroundColor:v19];
        goto LABEL_70;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (1)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_76;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_79;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_76:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v27 = 0;
            }
            else {
              uint64_t v27 = v22;
            }
LABEL_79:
            objc_msgSend(a1, "setInitiallyVisibleTuples:", v27, v58, v59);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBInfoTuple);
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        if (PBReaderPlaceMark() && _SFPBInfoTupleReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          if (v19) {
            objc_msgSend(a1, "addInfoTuples:", v19, 0, 0);
          }
LABEL_70:

          goto LABEL_71;
        }
LABEL_98:

        return 0;
    }
  }
}

uint64_t _SFPBCollectionCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_76;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_76;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_76;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_82:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_77;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_86:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_77;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_90:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_77;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_76;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_95:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_77;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_76:

LABEL_77:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_97:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBCardSection);
            uint64_t v49 = 0;
            uint64_t v50 = 0;
            if (!PBReaderPlaceMark() || !_SFPBCardSectionReadFrom(v18, a2)) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addCardSections:", v18, 0, 0);
            }
            goto LABEL_76;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTitle:", v18, 0, 0);
            goto LABEL_76;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBCommandButtonItem);
            if (!PBReaderPlaceMark() || (_SFPBCommandButtonItemReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setButtonItem:", v18, 0, 0);
            goto LABEL_76;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBCollectionStyle);
            if (!PBReaderPlaceMark() || (_SFPBCollectionStyleReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setCollectionStyle:", v18, 0, 0);
            goto LABEL_76;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBCommandButtonItem);
            if (!PBReaderPlaceMark() || (_SFPBCommandButtonItemReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTitleButtonItem:", v18, 0, 0);
            goto LABEL_76;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_77;
            }
            break;
        }
        return result;
    }
  }
}

uint64_t _SFPBCombinedCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_62;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_62;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_62;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_70:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_63;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_74:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_63;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_78:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_63;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_62;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_83:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_63;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_85;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
        goto LABEL_62;
      default:
        if ((v10 >> 3) != 51)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        unint64_t v18 = objc_alloc_init(_SFPBCardSection);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (PBReaderPlaceMark() && _SFPBCardSectionReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addCardSections:", v18, 0, 0);
          }
LABEL_62:

          goto LABEL_63;
        }
LABEL_85:

        return 0;
    }
  }
}

BOOL _SFPBResponseWrapperCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBCATModel);
        if (!PBReaderPlaceMark() || !_SFPBCATModelReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCatModel:", v18, 0, 0);
        goto LABEL_32;
      case 2u:
        PBReaderReadData();
        unint64_t v18 = (_SFPBCATModel *)objc_claimAutoreleasedReturnValue();
        [a1 setVisualCATOutput:v18];
        goto LABEL_32;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBPatternModel);
        if (!PBReaderPlaceMark() || !_SFPBPatternModelReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPattern_model:", v18, 0, 0);
        goto LABEL_32;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBPatternModel);
        if (PBReaderPlaceMark() && _SFPBPatternModelReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addPattern_models:", v18, 0, 0);
          }
LABEL_32:

LABEL_33:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_33;
    }
  }
}

uint64_t _SFPBListenToCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_65;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_65;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_65;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_73:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_66;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_77:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_66;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_81:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_66;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_65;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_86:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_66;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_65;
      default:
        if (v18 != 51)
        {
          if (v18 == 52)
          {
            char v19 = objc_alloc_init(_SFPBCardSection);
            if (!PBReaderPlaceMark() || (_SFPBCardSectionReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_88;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setFallbackCardSection:", v19, 0, 0);
            goto LABEL_65;
          }
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_66:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBMediaMetadata);
        if PBReaderPlaceMark() && (_SFPBMediaMetadataReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setMediaMetadata:", v19, 0, 0);
LABEL_65:

          goto LABEL_66;
        }
LABEL_88:

        return 0;
    }
  }
}

uint64_t _SFPBWatchNowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    unint64_t v18 = v10 >> 3;
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = objc_alloc_init(_SFPBPunchout);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
        }
        goto LABEL_63;
      case 2u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v19];
        goto LABEL_63;
      case 3u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v19];
        goto LABEL_63;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_71:
        [a1 setCanBeHidden:v22 != 0];
        goto LABEL_64;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_75:
        [a1 setHasTopPadding:v29 != 0];
        goto LABEL_64;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v36 |= (unint64_t)(v40 & 0x7F) << v34;
            if (v40 < 0)
            {
              v34 += 7;
              BOOL v15 = v35++ >= 9;
              if (v15)
              {
                uint64_t v36 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_79:
        [a1 setHasBottomPadding:v36 != 0];
        goto LABEL_64;
      case 7u:
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v19];
        goto LABEL_63;
      case 8u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v15 = v42++ >= 9;
              if (v15)
              {
                uint64_t v48 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_84:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_64;
      case 9u:
        char v19 = objc_alloc_init(_SFPBColor);
        if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_86;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
        goto LABEL_63;
      default:
        if (v18 == 51)
        {
          PBReaderReadString();
          char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
          [a1 setSectionTitle:v19];
          goto LABEL_63;
        }
        if (v18 != 52)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
LABEL_64:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
        char v19 = objc_alloc_init(_SFPBWatchListItem);
        if PBReaderPlaceMark() && (_SFPBWatchListItemReadFrom(v19, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setWatchListItem:", v19, 0, 0);
LABEL_63:

          goto LABEL_64;
        }
LABEL_86:

        return 0;
    }
  }
}

uint64_t _SFPBStrokeAnimationCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_67;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_67;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_67;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_73:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_68;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_77:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_68;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_81:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_68;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_67;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_86:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_68;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_67:

LABEL_68:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_88:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            PBReaderReadString();
            unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setStrokeAnimationRepresentation:v18];
            goto LABEL_67;
          case '4':
            PBReaderReadString();
            unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            if (v18) {
              [a1 addStrokeNames:v18];
            }
            goto LABEL_67;
          case '5':
            PBReaderReadString();
            unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            if (v18) {
              [a1 addCharacters:v18];
            }
            goto LABEL_67;
          case '6':
            PBReaderReadString();
            unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            if (v18) {
              [a1 addPronunciations:v18];
            }
            goto LABEL_67;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_68;
            }
            break;
        }
        return result;
    }
  }
}

uint64_t _SFPBButtonListCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 49)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_67;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_67;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_67;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_75:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_68;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_79:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_68;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_83:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_68;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_67;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_67;
          default:
            goto LABEL_70;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_85;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_88:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_68;
      }
      if (v18 == 50) {
        break;
      }
      if (v18 == 51)
      {
        char v19 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v19, a2))
        {
LABEL_90:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addButtons:", v19, 0, 0);
        }
        goto LABEL_67;
      }
      if (v18 == 52)
      {
        PBReaderReadString();
        char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setShowMoreButtonTitle:v19];
LABEL_67:

        goto LABEL_68;
      }
LABEL_70:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_68:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
    [a1 setSectionTitle:v19];
    goto LABEL_67;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCommandRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_75;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_75;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_75;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_81:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_76;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_85:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_76;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_89:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_76;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_75;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_94:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v49, v50);
        goto LABEL_76;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackgroundColor:", v18, 0, 0);
LABEL_75:

LABEL_76:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_96:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setImage:", v18, 0, 0);
            goto LABEL_75;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBImage);
            if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setToggledImage:", v18, 0, 0);
            goto LABEL_75;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setTitle:", v18, 0, 0);
            goto LABEL_75;
          case '6':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setToggledTitle:", v18, 0, 0);
            goto LABEL_75;
          case '7':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_96;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setSubtitle:", v18, 0, 0);
            goto LABEL_75;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_76;
            }
            break;
        }
        return result;
    }
  }
}

uint64_t _SFPBLeadingTrailingCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_95;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_72;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_72;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_72;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_80:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_73;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_84;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_84:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_73;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_88;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_88:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_73;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_72;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_95;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_72;
          default:
            goto LABEL_75;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_90;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_93;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_90:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_93:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_73;
      }
      if (v18 == 51)
      {
        char v19 = objc_alloc_init(_SFPBCardSection);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBCardSectionReadFrom(v19, a2))
        {
LABEL_95:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addLeadingCardSections:", v19, 0, 0);
        }
        goto LABEL_72;
      }
      if (v18 == 52) {
        break;
      }
      if (v18 == 53)
      {
        char v19 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLeadingToTrailingRatio:", v19, 0, 0);
LABEL_72:

        goto LABEL_73;
      }
LABEL_75:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_73:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_SFPBCardSection);
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    if (!PBReaderPlaceMark() || !_SFPBCardSectionReadFrom(v19, a2)) {
      goto LABEL_95;
    }
    PBReaderRecallMark();
    if (v19) {
      objc_msgSend(a1, "addTrailingCardSections:", v19, 0, 0);
    }
    goto LABEL_72;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBHeroTitleCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v18, a2)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPunchoutOptions:", v18, 0, 0);
        }
        goto LABEL_70;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerTitle:v18];
        goto LABEL_70;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setPunchoutPickerDismissText:v18];
        goto LABEL_70;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (2)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if (v25 < 0)
            {
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_83:
        [a1 setCanBeHidden:v21 != 0];
        goto LABEL_71;
      case 5u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (2)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if (v32 < 0)
            {
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v28 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_87:
        [a1 setHasTopPadding:v28 != 0];
        goto LABEL_71;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
LABEL_91:
        [a1 setHasBottomPadding:v35 != 0];
        goto LABEL_71;
      case 7u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
        [a1 setType:v18];
        goto LABEL_70;
      case 8u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_96:
        objc_msgSend(a1, "setSeparatorStyle:", v47, v57, v58);
        goto LABEL_71;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBColor);
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          [a1 setBackgroundColor:v18];
LABEL_70:

LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_103:

        return 0;
      default:
        switch((v10 >> 3))
        {
          case '3':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_103;
            }
            PBReaderRecallMark();
            [a1 setTitle:v18];
            goto LABEL_70;
          case '4':
            unint64_t v18 = objc_alloc_init(_SFPBRichText);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v18, a2)) {
              goto LABEL_103;
            }
            PBReaderRecallMark();
            [a1 setSubtitle:v18];
            goto LABEL_70;
          case '5':
            unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
            uint64_t v57 = 0;
            uint64_t v58 = 0;
            if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v18, a2)) {
              goto LABEL_103;
            }
            PBReaderRecallMark();
            if (v18) {
              objc_msgSend(a1, "addButtonItems:", v18, 0, 0);
            }
            goto LABEL_70;
          case '6':
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            break;
          default:
            uint64_t result = PBReaderSkipValueWithTag();
            if (result) {
              goto LABEL_71;
            }
            return result;
        }
        while (2)
        {
          uint64_t v52 = *v3;
          uint64_t v53 = *(void *)(a2 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v15 = v50++ >= 9;
              if (v15)
              {
                uint64_t v56 = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v56 = 0;
        }
        else {
          uint64_t v56 = v51;
        }
LABEL_101:
        objc_msgSend(a1, "setMaxVisibleButtonItems:", v56, v57, v58);
        goto LABEL_71;
    }
  }
}

uint64_t _SFPBLargeTitleDetailedRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 50)
      {
        switch((int)v18)
        {
          case 1:
            char v19 = objc_alloc_init(_SFPBPunchout);
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            if (!PBReaderPlaceMark() || !_SFPBPunchoutReadFrom(v19, a2)) {
              goto LABEL_94;
            }
            PBReaderRecallMark();
            if (v19) {
              objc_msgSend(a1, "addPunchoutOptions:", v19, 0, 0);
            }
            goto LABEL_71;
          case 2:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerTitle:v19];
            goto LABEL_71;
          case 3:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setPunchoutPickerDismissText:v19];
            goto LABEL_71;
          case 4:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            while (2)
            {
              uint64_t v23 = *v3;
              uint64_t v24 = *(void *)(a2 + v23);
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
                *(void *)(a2 + v23) = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v22 = 0;
            }
LABEL_79:
            [a1 setCanBeHidden:v22 != 0];
            goto LABEL_72;
          case 5:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              uint64_t v30 = *v3;
              uint64_t v31 = *(void *)(a2 + v30);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v29 = 0;
            }
LABEL_83:
            [a1 setHasTopPadding:v29 != 0];
            goto LABEL_72;
          case 6:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            while (2)
            {
              uint64_t v37 = *v3;
              uint64_t v38 = *(void *)(a2 + v37);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + *v4))
              {
                *(unsigned char *)(a2 + *v5) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
                *(void *)(a2 + v37) = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_87;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v36 = 0;
            }
LABEL_87:
            [a1 setHasBottomPadding:v36 != 0];
            goto LABEL_72;
          case 7:
            PBReaderReadString();
            char v19 = (_SFPBPunchout *)objc_claimAutoreleasedReturnValue();
            [a1 setType:v19];
            goto LABEL_71;
          case 8:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            break;
          case 9:
            char v19 = objc_alloc_init(_SFPBColor);
            if (!PBReaderPlaceMark() || (_SFPBColorReadFrom(v19, a2) & 1) == 0) {
              goto LABEL_94;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "setBackgroundColor:", v19, 0, 0);
            goto LABEL_71;
          default:
            goto LABEL_74;
        }
        while (1)
        {
          uint64_t v44 = *v3;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v4)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_89;
          }
          v41 += 7;
          BOOL v15 = v42++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_92;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_89:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_92:
        objc_msgSend(a1, "setSeparatorStyle:", v48, v50, v51);
        goto LABEL_72;
      }
      if (v18 == 51)
      {
        char v19 = objc_alloc_init(_SFPBRichText);
        if (!PBReaderPlaceMark() || !_SFPBRichTextReadFrom(v19, a2))
        {
LABEL_94:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v19, 0, 0);
        goto LABEL_71;
      }
      if (v18 == 52) {
        break;
      }
      if (v18 == 53)
      {
        char v19 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v19, a2)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addTrailingButtonItems:", v19, 0, 0);
        }
LABEL_71:

        goto LABEL_72;
      }
LABEL_74:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_72:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_SFPBButtonItem);
    if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v19, a2) & 1) == 0) {
      goto LABEL_94;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSubtitleButtonItem:", v19, 0, 0);
    goto LABEL_71;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSafariTableOfContentsCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_42;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_45:
        objc_msgSend(a1, "setTableOfContentsType:", v25, v36, v37);
        goto LABEL_51;
      case 2u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_50;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v29;
        }
LABEL_50:
        objc_msgSend(a1, "setTableOfContentsSource:", v34, v36, v37);
        goto LABEL_51;
      case 3u:
        unsigned int v35 = objc_alloc_init(_SFPBSafariTableOfContentsItem);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (PBReaderPlaceMark() && _SFPBSafariTableOfContentsItemReadFrom(v35, a2))
        {
          PBReaderRecallMark();
          if (v35) {
            objc_msgSend(a1, "addTableOfContentsItems:", v35, 0, 0);
          }
LABEL_40:

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        unsigned int v35 = (_SFPBSafariTableOfContentsItem *)objc_claimAutoreleasedReturnValue();
        [a1 setAlgorithmVersion:v35];
        goto LABEL_40;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

BOOL _SFPBRFSummaryItemShortNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v18, 0, 0);
        goto LABEL_47;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_47;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_47;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_47;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_4:", v18, 0, 0);
        }
        goto LABEL_47;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_47;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_47;
      case 8u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_47:

LABEL_48:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_51:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_48;
    }
  }
}

BOOL _SFPBRFSummaryItemTextCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_37;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_37;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_37;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_37;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_5:", v18, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_38;
    }
  }
}

uint64_t _SFPBRFSummaryItemStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_38;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_38;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_38;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_38;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_38:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_53:

        return 0;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_51:
        objc_msgSend(a1, "setSuppress_text_2_if_text_1_exceeds_a_single_line:", v22 != 0);
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

BOOL _SFPBRFFactItemShortNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v18, 0, 0);
        goto LABEL_44;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_44;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_44;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_44;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnit:", v18, 0, 0);
        goto LABEL_44;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_44;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_44:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
    }
  }
}

BOOL _SFPBRFFactItemStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_44;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_44;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_44;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_4:", v18, 0, 0);
        }
        goto LABEL_44;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_5:", v18, 0, 0);
        }
        goto LABEL_44;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
        goto LABEL_44;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail2:", v18, 0, 0);
LABEL_44:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
    }
  }
}

uint64_t _SFPBRFLongItemStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v26, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v26, 0, 0);
      }
      else if (v18 == 2)
      {
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (1)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
            break;
          }
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0) {
            goto LABEL_45;
          }
          v27 += 7;
          BOOL v15 = v28++ >= 9;
          if (v15)
          {
            uint64_t v29 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_47:
        objc_msgSend(a1, "setIs_quote:", v29 != 0);
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_41;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_43:
        objc_msgSend(a1, "setHas_background_platter:", v21 != 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFPrimaryHeaderRichCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_36;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_36;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_36;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_36;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_36:

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_51:

        return 0;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_49:
        [a1 setAddTint:v22 != 0];
        goto LABEL_37;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_37;
    }
  }
}

uint64_t _SFPBRFPrimaryHeaderStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_30;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_30;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_3:", v18, 0, 0);
LABEL_30:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_41:
        [a1 setAddTint:v22 != 0];
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t _SFPBRFReferenceFootnoteCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_33;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_33;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_33;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_4:", v18, 0, 0);
LABEL_33:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_44:
        [a1 setAddTint:v22 != 0];
        goto LABEL_45;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t _SFPBRFReferenceRichCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_30;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_30;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_30:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_41:
        [a1 setAddTint:v22 != 0];
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

BOOL _SFPBRFSimpleItemRichCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_50;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_50;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_50;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_50;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_5:", v18, 0, 0);
        }
        goto LABEL_50;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_50;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_7:", v18, 0, 0);
        goto LABEL_50;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_8:", v18, 0, 0);
        goto LABEL_50;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_50:

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_54:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_51;
    }
  }
}

BOOL _SFPBRFSimpleItemStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_41;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_41;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_41;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_4:", v18, 0, 0);
        }
        goto LABEL_41;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_41;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_6:", v18, 0, 0);
LABEL_41:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_42;
    }
  }
}

BOOL _SFPBRFSummaryItemAlignedTextCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_44;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_44;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_44;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_44;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_44;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_6:", v18, 0, 0);
        }
        goto LABEL_44;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_44:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
    }
  }
}

BOOL _SFPBRFExpandableStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFSummaryItemStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFSummaryItemStandardCardSectionReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSummary_item_standard_card_section:", v18, 0, 0);
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBRFExpandingComponentContent);
    if (!PBReaderPlaceMark() || !_SFPBRFExpandingComponentContentReadFrom(v18, a2))
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addExpanding_component_content:", v18, 0, 0);
    }
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFFactItemButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_52;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_1:", v18, 0, 0);
        goto LABEL_52;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_2:", v18, 0, 0);
        goto LABEL_52;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_3:", v18, 0, 0);
        goto LABEL_52;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_52;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_52;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_4:", v18, 0, 0);
        }
        goto LABEL_52;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_52;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_67;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
        goto LABEL_52;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail2:", v18, 0, 0);
LABEL_52:

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_67:

        return 0;
      case 0xBu:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_65:
        [a1 setButtonItemsAreBottom:v22 != 0];
        goto LABEL_53;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

BOOL _SFPBRFFactItemHeroNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v18, 0, 0);
        goto LABEL_41;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnit:", v18, 0, 0);
        goto LABEL_41;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_41;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_41;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_41;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_5:", v18, 0, 0);
LABEL_41:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_42;
    }
  }
}

uint64_t _SFPBRFPrimaryHeaderMarqueeCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_30;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_30;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_30:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_44:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_41:
        [a1 setAddTint:v22 != 0];
        goto LABEL_42;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

BOOL _SFPBRFSummaryItemDetailedTextCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_42;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_42;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_42;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_42;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_42;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_42;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_42:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_43;
    }
  }
}

BOOL _SFPBRFSimpleItemPlayerCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_37;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_37;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_37;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_37;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if PBReaderPlaceMark() && (_SFPBButtonItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPlayer:", v18, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_38;
    }
  }
}

BOOL _SFPBRFSummaryItemPairCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_51;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_51;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_51;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail_1:", v18, 0, 0);
        goto LABEL_51;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail_2:", v18, 0, 0);
        goto LABEL_51;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_51;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_5:", v18, 0, 0);
        goto LABEL_51;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_51;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_7:", v18, 0, 0);
        goto LABEL_51;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_8:", v18, 0, 0);
LABEL_51:

LABEL_52:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_52;
    }
  }
}

BOOL _SFPBRFSummaryItemPairNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber_1:", v18, 0, 0);
        goto LABEL_64;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber_2:", v18, 0, 0);
        goto LABEL_64;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_64;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_64;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_64;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_64;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_5:", v18, 0, 0);
        }
        goto LABEL_64;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail_1:", v18, 0, 0);
        goto LABEL_64;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail_2:", v18, 0, 0);
        goto LABEL_64;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_64;
      case 0xBu:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_7:", v18, 0, 0);
        goto LABEL_64;
      case 0xCu:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_1:", v18, 0, 0);
        goto LABEL_64;
      case 0xDu:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_68;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_8:", v18, 0, 0);
        goto LABEL_64;
      case 0xEu:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_9:", v18, 0, 0);
LABEL_64:

LABEL_65:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_68:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_65;
    }
  }
}

BOOL _SFPBRFFactItemShortHeroNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v18, 0, 0);
        goto LABEL_44;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_44;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_44;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_44;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnit:", v18, 0, 0);
        goto LABEL_44;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_48;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_44;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_44:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_48:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
    }
  }
}

BOOL _SFPBRFFactItemDetailedNumberCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v18, 0, 0);
        goto LABEL_39;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_39;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_39;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_39;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
        goto LABEL_39;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_4:", v18, 0, 0);
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
    }
  }
}

BOOL _SFPBRFFactItemHeroButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v19 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v19, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton:", v19, 0, 0);
        goto LABEL_30;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        char v19 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v19, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_SFPBRFTextProperty);
    if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setText_1:", v19, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFFactItemImageRightCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v19 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v19, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v19, 0, 0);
        goto LABEL_30;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        char v19 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_35;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setNumber:", v19, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v19 = objc_alloc_init(_SFPBRFTextProperty);
    if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
      goto LABEL_35;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setText_1:", v19, 0, 0);
    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFSummaryItemSwitchV2CardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_47;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_49:
        objc_msgSend(a1, "setIs_on:", v20 != 0);
        goto LABEL_44;
      case 2u:
        char v26 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v26, 0, 0);
        goto LABEL_43;
      case 3u:
        char v26 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v26, 0, 0);
        goto LABEL_43;
      case 4u:
        char v26 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v26, 0, 0);
        goto LABEL_43;
      case 5u:
        char v26 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_51;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v26, 0, 0);
        goto LABEL_43;
      case 6u:
        char v26 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v26, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v26, 0, 0);
LABEL_43:

LABEL_44:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_51:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
    }
  }
}

uint64_t _SFPBRFTableHeaderCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTableColumnDefinition);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFTableColumnDefinitionReadFrom(v18, a2)) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addColumns:", v18, 0, 0);
        }
        goto LABEL_33;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTableCell);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFTableCellReadFrom(v18, a2)) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addCells:", v18, 0, 0);
        }
        goto LABEL_33;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTableCell);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (PBReaderPlaceMark() && _SFPBRFTableCellReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addCompact_cells:", v18, 0, 0);
          }
LABEL_33:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_60:

        return 0;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_52:
        objc_msgSend(a1, "setShould_repeat_header_in_flow_layout:", v27, v36, v37);
        goto LABEL_58;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_57:
        objc_msgSend(a1, "setVertical_alignment:", v35, v36, v37);
        goto LABEL_58;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

uint64_t _SFPBRFTableRowCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTableCell);
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFTableCellReadFrom(v18, a2)) {
          goto LABEL_55;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addCells:", v18, 0, 0);
        }
        goto LABEL_43;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_48:
        objc_msgSend(a1, "setVertical_alignment:", v27, v35, v36);
        goto LABEL_53;
      case 3u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v30 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_52:
        objc_msgSend(a1, "setScale_to_fit:", v30 != 0, v35, v36);
        goto LABEL_53;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTableCell);
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        if (PBReaderPlaceMark() && _SFPBRFTableCellReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addCompact_cells:", v18, 0, 0);
          }
LABEL_43:

LABEL_53:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_55:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

uint64_t _SFPBRFSimpleItemVisualElementCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
        goto LABEL_33;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_33;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_60;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_33;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFootnote:", v18, 0, 0);
LABEL_33:

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_60:

        return 0;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_52:
        objc_msgSend(a1, "setHorizontal_alignment:", v27);
        goto LABEL_58;
      case 6u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_57;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_57:
        objc_msgSend(a1, "setAttribution_style:", v35);
        goto LABEL_58;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

BOOL _SFPBRFSummaryItemPlayerCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_39;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_39;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_39;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_39;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
        goto LABEL_39;
      case 6u:
        char v18 = objc_alloc_init(_SFPBButtonItem);
        if PBReaderPlaceMark() && (_SFPBButtonItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPlayer:", v18, 0, 0);
LABEL_39:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
    }
  }
}

BOOL _SFPBRFSummaryItemImageRightCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_41;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_41;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_41;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_41;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail_1:", v18, 0, 0);
        goto LABEL_41;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail_2:", v18, 0, 0);
LABEL_41:

LABEL_42:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_42;
    }
  }
}

uint64_t _SFPBRFSummaryItemButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_47;
      case 2u:
        char v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_1:", v18, 0, 0);
        goto LABEL_47;
      case 3u:
        char v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_2:", v18, 0, 0);
        goto LABEL_47;
      case 4u:
        char v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_3:", v18, 0, 0);
        goto LABEL_47;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_2:", v18, 0, 0);
        }
        goto LABEL_47;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_47;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_62;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_47;
      case 8u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_47:

LABEL_48:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_62:

        return 0;
      case 9u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_60:
        [a1 setButtonItemsAreTrailing:v22 != 0];
        goto LABEL_48;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_48;
    }
  }
}

BOOL _SFPBRFSimpleItemReverseRichCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_37;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_37;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_37;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_41;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_37;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_41:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_38;
    }
  }
}

BOOL _SFPBRFSimpleItemRichSearchResultCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_50;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_50;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_3:", v18, 0, 0);
        }
        goto LABEL_50;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_4:", v18, 0, 0);
        goto LABEL_50;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFTextPropertyReadFrom(v18, a2)) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addText_5:", v18, 0, 0);
        }
        goto LABEL_50;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_6:", v18, 0, 0);
        goto LABEL_50;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_7:", v18, 0, 0);
        goto LABEL_50;
      case 8u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_54;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_8:", v18, 0, 0);
        goto LABEL_50;
      case 9u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
LABEL_50:

LABEL_51:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_54:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_51;
    }
  }
}

BOOL _SFPBRFPrimaryHeaderStackedImageCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        unsigned int v19 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || !_SFPBRFVisualPropertyReadFrom(v19, a2))
        {
LABEL_36:

          return 0;
        }
        PBReaderRecallMark();
        if (v19) {
          objc_msgSend(a1, "addImages:", v19, 0, 0);
        }
        goto LABEL_31;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        unsigned int v19 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v19, 0, 0);
LABEL_31:

        goto LABEL_33;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_33:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v19 = objc_alloc_init(_SFPBRFTextProperty);
    if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0) {
      goto LABEL_36;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setText_2:", v19, 0, 0);
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFReferenceItemLogoCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFReferenceItemButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton_1:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setButton:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFBinaryButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPrimary_button:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
    if (!PBReaderPlaceMark() || (_SFPBButtonItemReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSecondary_button:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFReferenceCenteredCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
        goto LABEL_33;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_2:", v18, 0, 0);
        goto LABEL_33;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_3:", v18, 0, 0);
        goto LABEL_33;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setText_4:", v18, 0, 0);
LABEL_33:

LABEL_45:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_44:
        objc_msgSend(a1, "setAdd_tint:", v22 != 0);
        goto LABEL_45;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t _SFPBRFSecondaryHeaderStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFSecondaryHeaderEmphasizedCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFMapCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_52;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_55;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_52:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v21;
        }
LABEL_55:
        objc_msgSend(a1, "setSizeFormat:", v26, v39, v40);
        goto LABEL_62;
      case 2u:
        char v28 = objc_alloc_init(_SFPBRFMapMarker);
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFMapMarkerReadFrom(v28, a2)) {
          goto LABEL_64;
        }
        PBReaderRecallMark();
        if (v28) {
          objc_msgSend(a1, "addMarkers:", v28, 0, 0);
        }
        goto LABEL_40;
      case 3u:
        char v28 = objc_alloc_init(_SFPBRFMapAnnotation);
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFMapAnnotationReadFrom(v28, a2)) {
          goto LABEL_64;
        }
        PBReaderRecallMark();
        if (v28) {
          objc_msgSend(a1, "addAnnotations:", v28, 0, 0);
        }
        goto LABEL_40;
      case 4u:
        char v28 = objc_alloc_init(_SFPBLatLng);
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        if (PBReaderPlaceMark() && _SFPBLatLngReadFrom(v28, a2))
        {
          PBReaderRecallMark();
          if (v28) {
            objc_msgSend(a1, "addPolyline:", v28, 0, 0);
          }
LABEL_40:

LABEL_62:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_64:

        return 0;
      case 5u:
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
        {
          double v31 = *(double *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v31 = 0.0;
        }
        objc_msgSend(a1, "setCameraDistance:", v31, v39, v40);
        goto LABEL_62;
      case 6u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        while (2)
        {
          uint64_t v35 = *v3;
          uint64_t v36 = *(void *)(a2 + v35);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v37;
            v34 |= (unint64_t)(v38 & 0x7F) << v32;
            if (v38 < 0)
            {
              v32 += 7;
              BOOL v15 = v33++ >= 9;
              if (v15)
              {
                uint64_t v34 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_59:
        objc_msgSend(a1, "setShowsUserLocation:", v34 != 0, v39, v40);
        goto LABEL_62;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_62;
    }
  }
}

uint64_t _SFPBRFReferenceStandardCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v25 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v25, 0, 0);
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        [a1 setAddTint:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFMultiButtonCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v26 = objc_alloc_init(_SFPBButtonItem);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (!PBReaderPlaceMark() || !_SFPBButtonItemReadFrom(v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addButtons:", v26, 0, 0);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_38:
        objc_msgSend(a1, "setLayoutType:", v25, v28, v29);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFDisambiguationTitleCardSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_1:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_SFPBRFVisualProperty);
    if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFTextPropertyReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(_SFPBRFTextElement);
        if (!PBReaderPlaceMark() || !_SFPBRFTextElementReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v25) {
          objc_msgSend(a1, "addText_elements:", v25, 0, 0);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_37:
        objc_msgSend(a1, "setIs_safe_for_logging:", v20 != 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFVisualPropertyReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v25 = objc_alloc_init(_SFPBRFVisualElement);
        if (!PBReaderPlaceMark() || !_SFPBRFVisualElementReadFrom(v25, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v25) {
          objc_msgSend(a1, "addVisual_elements:", v25, 0, 0);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_35;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_37:
        objc_msgSend(a1, "setIs_safe_for_logging:", v20 != 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFVisualElementReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBRFImageElement);
        if (!PBReaderPlaceMark() || (_SFPBRFImageElementReadFrom(v18, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage_element:", v18, 0, 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFImageElementReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBRFImageSource);
        if (!PBReaderPlaceMark() || !_SFPBRFImageSourceReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addSources:", v18, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFImageSourceReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFUrlImage);
        if (!PBReaderPlaceMark() || (_SFPBRFUrlImageReadFrom(v18, a2, v19) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrl:", v18, 0, 0);
        goto LABEL_42;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFSymbolImage);
        if (!PBReaderPlaceMark() || (_SFPBRFSymbolImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSymbol:", v18, 0, 0);
        goto LABEL_42;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFAppIconImage);
        if (!PBReaderPlaceMark() || (_SFPBRFAppIconImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setApp_icon:", v18, 0, 0);
        goto LABEL_42;
      case 4u:
        char v18 = objc_alloc_init(_SFPBRFAvatarImage);
        if (!PBReaderPlaceMark() || (_SFPBRFAvatarImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAvatar:", v18, 0, 0);
        goto LABEL_42;
      case 5u:
        char v18 = objc_alloc_init(_SFPBRFMonogramImage);
        if (!PBReaderPlaceMark() || (_SFPBRFMonogramImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMonogram:", v18, 0, 0);
        goto LABEL_42;
      case 6u:
        char v18 = objc_alloc_init(_SFPBRFBadgedImage);
        if (!PBReaderPlaceMark() || !_SFPBRFBadgedImageReadFrom(v18, a2)) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBadged_image:", v18, 0, 0);
        goto LABEL_42;
      case 7u:
        char v18 = objc_alloc_init(_SFPBRFDefaultBrowserAppIconImage);
        if PBReaderPlaceMark() && (_SFPBRFDefaultBrowserAppIconImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setDefault_browser_app_icon:", v18, 0, 0);
LABEL_42:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_57:

        return 0;
      case 8u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v23 = 0;
        }
LABEL_55:
        objc_msgSend(a1, "setDo_not_show_loading_placeholder:", v23 != 0);
        goto LABEL_43;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

uint64_t _SFPBRFUrlImageReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        PBReaderReadString();
        uint64_t v20 = (_SFPBRFSymbolImage *)objc_claimAutoreleasedReturnValue();
        [a1 setUrl:v20];
        goto LABEL_53;
      case 2u:
        PBReaderReadString();
        uint64_t v20 = (_SFPBRFSymbolImage *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setDark_mode_url:", v20);
        goto LABEL_53;
      case 3u:
        uint64_t v20 = objc_alloc_init(_SFPBRFSymbolImage);
        if (!PBReaderPlaceMark() || (_SFPBRFSymbolImageReadFrom(v20, a2) & 1) == 0) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSymbol_placeholder_image:", v20, 0, 0);
        goto LABEL_53;
      case 4u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        while (2)
        {
          uint64_t v25 = *v4;
          uint64_t v26 = *(void *)(a2 + v25);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v8) + v26);
            *(void *)(a2 + v25) = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if (v28 < 0)
            {
              v22 += 7;
              BOOL v16 = v23++ >= 9;
              if (v16)
              {
                uint64_t v29 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v29 = 0;
        }
        else {
          uint64_t v29 = v24;
        }
LABEL_70:
        objc_msgSend(a1, "setImage_style:", v29);
        goto LABEL_54;
      case 5u:
        uint64_t v20 = objc_alloc_init(_SFPBRFAspectRatio);
        if (!PBReaderPlaceMark() || (_SFPBRFAspectRatioReadFrom(v20, a2, v30) & 1) == 0) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAspect_ratio:", v20, 0, 0);
        goto LABEL_53;
      case 6u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        while (2)
        {
          uint64_t v34 = *v4;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
            *(void *)(a2 + v34) = v36;
            v33 |= (unint64_t)(v37 & 0x7F) << v31;
            if (v37 < 0)
            {
              v31 += 7;
              BOOL v16 = v32++ >= 9;
              if (v16)
              {
                uint64_t v38 = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v38 = 0;
        }
        else {
          uint64_t v38 = v33;
        }
LABEL_75:
        objc_msgSend(a1, "setSizing_mode:", v38);
        goto LABEL_54;
      case 7u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        while (2)
        {
          uint64_t v42 = *v4;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v8) + v43);
            *(void *)(a2 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v16 = v40++ >= 9;
              if (v16)
              {
                uint64_t v46 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v46 = 0;
        }
        else {
          uint64_t v46 = v41;
        }
LABEL_80:
        objc_msgSend(a1, "setImage_rendering_mode:", v46);
        goto LABEL_54;
      case 8u:
        uint64_t v20 = objc_alloc_init(_SFPBRFColor);
        if PBReaderPlaceMark() && (_SFPBRFColorReadFrom(v20, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackground_color:", v20, 0, 0);
LABEL_53:

LABEL_54:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }
LABEL_89:

        return 0;
      case 9u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        while (2)
        {
          uint64_t v50 = *v4;
          uint64_t v51 = *(void *)(a2 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
            *(void *)(a2 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v16 = v48++ >= 9;
              if (v16)
              {
                uint64_t v54 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v49;
        }
LABEL_85:
        objc_msgSend(a1, "setCorner_rounding_mode:", v54);
        goto LABEL_54;
      case 0xAu:
        uint64_t v55 = *v4;
        unint64_t v56 = *(void *)(a2 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFFBLL && v56 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v56);
          *(void *)(a2 + v55) = v56 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setInset_padding:", a3);
        goto LABEL_54;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_54;
    }
  }
}

uint64_t _SFPBRFSymbolImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        int v18 = (_SFPBRFColor *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v18];
        goto LABEL_45;
      case 2u:
        int v18 = objc_alloc_init(_SFPBRFColor);
        if (!PBReaderPlaceMark() || (_SFPBRFColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPrimary_color:", v18, 0, 0);
        goto LABEL_45;
      case 3u:
        int v18 = objc_alloc_init(_SFPBRFColor);
        if (!PBReaderPlaceMark() || (_SFPBRFColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSecondary_color:", v18, 0, 0);
        goto LABEL_45;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_71:
        objc_msgSend(a1, "setImage_style:", v27);
        goto LABEL_91;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_76:
        objc_msgSend(a1, "setSymbol_rendering_mode:", v35);
        goto LABEL_91;
      case 6u:
        int v18 = objc_alloc_init(_SFPBRFColor);
        if PBReaderPlaceMark() && (_SFPBRFColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setBackground_color:", v18, 0, 0);
LABEL_45:

LABEL_91:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_93:

        return 0;
      case 7u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_80:
        objc_msgSend(a1, "setPunches_through_background:", v38 != 0);
        goto LABEL_91;
      case 8u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        while (2)
        {
          uint64_t v46 = *v3;
          uint64_t v47 = *(void *)(a2 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
            *(void *)(a2 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v15 = v44++ >= 9;
              if (v15)
              {
                uint64_t v50 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v50 = 0;
        }
        else {
          uint64_t v50 = v45;
        }
LABEL_85:
        [a1 setVibrancy:v50];
        goto LABEL_91;
      case 9u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        while (2)
        {
          uint64_t v54 = *v3;
          uint64_t v55 = *(void *)(a2 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
            *(void *)(a2 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v15 = v52++ >= 9;
              if (v15)
              {
                uint64_t v58 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
        else {
          uint64_t v58 = v53;
        }
LABEL_90:
        objc_msgSend(a1, "setCorner_rounding_mode:", v58);
        goto LABEL_91;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_91;
    }
  }
}

uint64_t _SFPBRFAppIconImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        objc_msgSend(a1, "setApplication_bundle_identifier:", v26);
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        objc_msgSend(a1, "setImage_style:", v25);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFAvatarImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        if (v26) {
          objc_msgSend(a1, "addContact_ids:", v26);
        }
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_36:
        objc_msgSend(a1, "setImage_style:", v25);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFMonogramImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setLetters:v26];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_34;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_34:
        objc_msgSend(a1, "setImage_style:", v25);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFBadgedImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBRFImageSource);
        if (!PBReaderPlaceMark() || (_SFPBRFImageSourceReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = objc_alloc_init(_SFPBRFImageSource);
    if (!PBReaderPlaceMark() || (_SFPBRFImageSourceReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setBadge:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFDefaultBrowserAppIconImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        objc_msgSend(a1, "setImage_style:", v25);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFColorReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v27 = objc_alloc_init(_SFPBRFRGBValue);
        if (!PBReaderPlaceMark() || (_SFPBRFRGBValueReadFrom(v27, a2, v28) & 1) == 0)
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setRgb_value:", v27, 0, 0);
      }
      else
      {
        if (v18 != 3)
        {
          if (v18 == 2)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_38;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v26 = 0;
            }
            else {
              uint64_t v26 = v21;
            }
LABEL_41:
            [a1 setName:v26];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v27 = objc_alloc_init(_SFPBRFOptionalFloat);
        if (!PBReaderPlaceMark() || (_SFPBRFOptionalFloatReadFrom(v27, a2, v29) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAlpha:", v27, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFRGBValueReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        uint64_t v23 = *v4;
        unint64_t v24 = *(void *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v24 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setBlue:a3];
      }
      else if (v20 == 2)
      {
        uint64_t v25 = *v4;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setGreen:a3];
      }
      else if (v20 == 1)
      {
        uint64_t v21 = *v4;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v22);
          *(void *)(a2 + v21) = v22 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setRed:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBRFOptionalFloatReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setValue:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBRFAspectRatioReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 2)
      {
        uint64_t v22 = *v4;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v23 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setHeight:a3];
      }
      else if ((v11 >> 3) == 1)
      {
        uint64_t v20 = *v4;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setWidth:a3];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBRFTextElementReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v27 = objc_alloc_init(_SFPBRFFormattedText);
        uint64_t v29 = 0;
        uint64_t v30 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFFormattedTextReadFrom(v27, a2))
        {
LABEL_45:

          return 0;
        }
        PBReaderRecallMark();
        if (v27) {
          objc_msgSend(a1, "addFormatted_text:", v27, 0, 0);
        }
      }
      else
      {
        if (v18 != 3)
        {
          if (v18 == 2)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_39;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_42;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v26 = 0;
            }
            else {
              uint64_t v26 = v21;
            }
LABEL_42:
            objc_msgSend(a1, "setLine_limit:", v26, v29, v30);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        uint64_t v27 = objc_alloc_init(_SFPBRFShowMoreOnTap);
        if (!PBReaderPlaceMark() || (_SFPBRFShowMoreOnTapReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setShow_more_on_tap:", v27, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFFormattedTextReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBRFImageElement *)objc_claimAutoreleasedReturnValue();
        [a1 setText:v18];
        goto LABEL_60;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFImageElement);
        if (!PBReaderPlaceMark() || (_SFPBRFImageElementReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setInline_image_element:", v18, 0, 0);
        goto LABEL_60;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBRFColor);
        if (!PBReaderPlaceMark() || (_SFPBRFColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setColor:", v18, 0, 0);
        goto LABEL_60;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBRFOptionalBool);
        if (!PBReaderPlaceMark() || (_SFPBRFOptionalBoolReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIs_italic:", v18, 0, 0);
        goto LABEL_60;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBRFOptionalBool);
        if (!PBReaderPlaceMark() || (_SFPBRFOptionalBoolReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIs_bold:", v18, 0, 0);
        goto LABEL_60;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextEncapsulation);
        if (!PBReaderPlaceMark() || (_SFPBRFTextEncapsulationReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText_encapsulation:", v18, 0, 0);
        goto LABEL_60;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBRFOptionalBool);
        if (!PBReaderPlaceMark() || (_SFPBRFOptionalBoolReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIs_highlighted:", v18, 0, 0);
        goto LABEL_60;
      case 8u:
        unint64_t v18 = objc_alloc_init(_SFPBRFColor);
        if (!PBReaderPlaceMark() || (_SFPBRFColorReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setBackground_color:", v18, 0, 0);
        goto LABEL_60;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBRFAttribution);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFAttributionReadFrom(v18, a2)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addAttributions:", v18, 0, 0);
        }
        goto LABEL_60;
      case 0xAu:
        unint64_t v18 = objc_alloc_init(_SFPBRFHighlightedSubstring);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        if (!PBReaderPlaceMark() || !_SFPBRFHighlightedSubstringReadFrom(v18, a2)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addHighlighted_substrings:", v18, 0, 0);
        }
        goto LABEL_60;
      case 0xBu:
        unint64_t v18 = objc_alloc_init(_SFPBRFFont);
        if (!PBReaderPlaceMark() || (_SFPBRFFontReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setFont:", v18, 0, 0);
        goto LABEL_60;
      case 0xCu:
        unint64_t v18 = objc_alloc_init(_SFPBRFOptionalBool);
        if (!PBReaderPlaceMark() || (_SFPBRFOptionalBoolReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIs_underlined:", v18, 0, 0);
        goto LABEL_60;
      case 0xDu:
        unint64_t v18 = objc_alloc_init(_SFPBRFEngageable);
        if (PBReaderPlaceMark() && _SFPBRFEngageableReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setEngageable:", v18, 0, 0);
LABEL_60:

LABEL_61:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_88:

        return 0;
      case 0xEu:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_81:
        objc_msgSend(a1, "setWeight:", v27, v36, v37);
        goto LABEL_61;
      case 0xFu:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_86:
        objc_msgSend(a1, "setDesign:", v35, v36, v37);
        goto LABEL_61;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_61;
    }
  }
}

uint64_t _SFPBRFShowMoreOnTapReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setAffordanceLabel:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFOptionalBoolReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v20 = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_31:
        [a1 setValue:v20 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFTextEncapsulationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        [a1 setStyle:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFAttributionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setTitle:", v18, 0, 0);
        goto LABEL_43;
      case 2u:
        char v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSubtitle:", v18, 0, 0);
        goto LABEL_43;
      case 3u:
        char v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
        goto LABEL_43;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_50;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_50:
        [a1 setIndex:v27];
        goto LABEL_44;
      case 5u:
        char v18 = objc_alloc_init(_SFPBCommandReference);
        if PBReaderPlaceMark() && (_SFPBCommandReferenceReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setCommandReference:", v18, 0, 0);
LABEL_43:

LABEL_44:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_52:

        return 0;
      case 6u:
        PBReaderReadString();
        char v18 = (_SFPBRFTextProperty *)objc_claimAutoreleasedReturnValue();
        [a1 setLocale:v18];
        goto LABEL_43;
      case 7u:
        PBReaderReadString();
        char v18 = (_SFPBRFTextProperty *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setLocalized_index:", v18);
        goto LABEL_43;
      case 8u:
        PBReaderReadString();
        char v18 = (_SFPBRFTextProperty *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setLocalized_separator:", v18);
        goto LABEL_43;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
    }
  }
}

uint64_t _SFPBRFHighlightedSubstringReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setSubstring:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFFontReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_45;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v28;
        }
LABEL_48:
        [a1 setName:v33];
      }
      else if (v18 == 2)
      {
        char v34 = objc_alloc_init(_SFPBRFFont_RFSystemFont);
        if (!PBReaderPlaceMark() || (_SFPBRFFont_RFSystemFontReadFrom(v34, a2, v35) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSystem:", v34, 0, 0);
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_41;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_43:
        [a1 setApplySmallCaps:v21 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFEngageableReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBCommandReference);
        if (!PBReaderPlaceMark() || (_SFPBCommandReferenceReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommand_reference:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBRFPreviewList);
    if (!PBReaderPlaceMark() || (_SFPBRFPreviewListReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setPreview_list:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFPreviewListReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFPreview);
        if (!PBReaderPlaceMark() || !_SFPBRFPreviewReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addPreviews:", v18, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFPreviewReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        unint64_t v18 = (_SFPBCommandReference *)objc_claimAutoreleasedReturnValue();
        [a1 setText:v18];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBCommandReference);
    if (!PBReaderPlaceMark() || (_SFPBCommandReferenceReadFrom(v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setCommand_reference:", v18, 0, 0);
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFFont_RFSystemFontReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        uint64_t v28 = *v4;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v29);
          *(void *)(a2 + v28) = v29 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setSize:a3];
      }
      else if ((v11 >> 3) == 2)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_33;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_36;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_33:
        uint64_t v27 = *(unsigned char *)(a2 + *v6) ? 0 : v22;
LABEL_36:
        [a1 setWeight:v27];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL _SFPBRFMapMarkerReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v18 = objc_alloc_init(_SFPBRFMapMarkerIdentifier);
        if (!PBReaderPlaceMark() || (_SFPBRFMapMarkerIdentifierReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setIdentifier:", v18, 0, 0);
        goto LABEL_33;
      case 2u:
        int v18 = objc_alloc_init(_SFPBRFMapMarkerText);
        if (!PBReaderPlaceMark() || !_SFPBRFMapMarkerTextReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText:", v18, 0, 0);
        goto LABEL_33;
      case 3u:
        int v18 = objc_alloc_init(_SFPBRFMapMarkerImage);
        if (!PBReaderPlaceMark() || !_SFPBRFMapMarkerImageReadFrom(v18, a2)) {
          goto LABEL_36;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v18, 0, 0);
        goto LABEL_33;
      case 5u:
        int v18 = objc_alloc_init(_SFPBRFColor);
        if PBReaderPlaceMark() && (_SFPBRFColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTint:", v18, 0, 0);
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

BOOL _SFPBRFMapAnnotationReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        int v18 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoordinate:", v18, 0, 0);
        goto LABEL_34;
      case 2u:
        int v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFVisualPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setContent:", v18, 0, 0);
        goto LABEL_34;
      case 3u:
        PBReaderReadString();
        int v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_34;
      case 4u:
        int v18 = objc_alloc_init(_SFPBRFMapPoint);
        if (!PBReaderPlaceMark() || (_SFPBRFMapPointReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_38;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setAnchor:", v18, 0, 0);
        goto LABEL_34;
      case 5u:
        int v18 = objc_alloc_init(_SFPBRFTextProperty);
        if PBReaderPlaceMark() && (_SFPBRFTextPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setLabel:", v18, 0, 0);
LABEL_34:

LABEL_35:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_38:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
    }
  }
}

uint64_t _SFPBRFMapPointReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v22 = *v3;
        unint64_t v23 = *(void *)(a2 + v22);
        if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
        {
          double v24 = *(double *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v24 = 0.0;
        }
        [a1 setY:v24];
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          double v21 = 0.0;
        }
        [a1 setX:v21];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFMapMarkerIdentifierReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = PBReaderReadString();
        [a1 setMuid:v26];
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_34;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_36;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_34:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_36:
            [a1 setIsForCameraPositionOnly:v21 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = PBReaderReadString();
        [a1 setResultProviderID:v26];
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFMapMarkerTextReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v19 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v19, a2) & 1) == 0)
        {
LABEL_33:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setMonogram:", v19, 0, 0);
        goto LABEL_28;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        char v19 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v19, a2) & 1) == 0) {
          goto LABEL_33;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoordinate:", v19, 0, 0);
        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_30:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBRFTextProperty *)objc_claimAutoreleasedReturnValue();
    [a1 setTitle:v19];
LABEL_28:

    goto LABEL_30;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFMapMarkerImageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        PBReaderReadString();
        char v19 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v19];
        goto LABEL_26;
      }
      if (v18 == 1)
      {
        char v19 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCoordinate:", v19, 0, 0);
        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
    [a1 setSystemImage:v19];
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFTableCellReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBRFTextProperty);
        if (!PBReaderPlaceMark() || (_SFPBRFTextPropertyReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_65;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setText:", v18, 0, 0);
        goto LABEL_27;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBRFVisualProperty);
        if PBReaderPlaceMark() && (_SFPBRFVisualPropertyReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setVisual:", v18, 0, 0);
LABEL_27:

LABEL_63:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_65:

        return 0;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_53:
        objc_msgSend(a1, "setColumn_span:", v27);
        goto LABEL_63;
      case 4u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                uint64_t v35 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v30;
        }
LABEL_58:
        objc_msgSend(a1, "setHorizontal_alignment:", v35);
        goto LABEL_63;
      case 5u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (2)
        {
          uint64_t v39 = *v3;
          uint64_t v40 = *(void *)(a2 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v15 = v37++ >= 9;
              if (v15)
              {
                uint64_t v38 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_62:
        [a1 setApplySmallCaps:v38 != 0];
        goto LABEL_63;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_63;
    }
  }
}

BOOL _SFPBRFTableColumnDefinitionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBRFTableSpacerColumnDefinition);
        uint64_t v19 = PBReaderPlaceMark();
        if (!v19 || !_SFPBRFTableSpacerColumnDefinitionReadFrom(v19, a2)) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSpacer:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBRFTableContentColumnDefinition);
    if (!PBReaderPlaceMark() || (_SFPBRFTableContentColumnDefinitionReadFrom(v18, a2, v20) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setContent:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBRFTableSpacerColumnDefinitionReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  id v6 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
      return v7 == 0;
    }
    if (*(unsigned char *)(a2 + *v5))
    {
      int v7 = 1;
      return v7 == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v6) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        int v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      LOBYTE(v10) = 0;
    }
LABEL_14:
    if (v7) {
      BOOL v16 = 1;
    }
    else {
      BOOL v16 = (v10 & 7) == 4;
    }
    if (v16) {
      return v7 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t _SFPBRFTableContentColumnDefinitionReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setSize_percent:", a3);
          continue;
        case 2u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (2)
          {
            uint64_t v26 = *v4;
            uint64_t v27 = *(void *)(a2 + v26);
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
              *(void *)(a2 + v26) = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if (v29 < 0)
              {
                v23 += 7;
                BOOL v16 = v24++ >= 9;
                if (v16)
                {
                  uint64_t v30 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v30 = 0;
          }
          else {
            uint64_t v30 = v25;
          }
LABEL_63:
          objc_msgSend(a1, "setHorizontal_alignment:", v30);
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (2)
          {
            uint64_t v34 = *v4;
            uint64_t v35 = *(void *)(a2 + v34);
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
              *(void *)(a2 + v34) = v36;
              v33 |= (unint64_t)(v37 & 0x7F) << v31;
              if (v37 < 0)
              {
                v31 += 7;
                BOOL v16 = v32++ >= 9;
                if (v16)
                {
                  uint64_t v38 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v38 = 0;
          }
          else {
            uint64_t v38 = v33;
          }
LABEL_68:
          objc_msgSend(a1, "setDrop_order:", v38);
          continue;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (2)
          {
            uint64_t v42 = *v4;
            uint64_t v43 = *(void *)(a2 + v42);
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v45 = *(unsigned char *)(*(void *)(a2 + *v8) + v43);
              *(void *)(a2 + v42) = v44;
              v41 |= (unint64_t)(v45 & 0x7F) << v39;
              if (v45 < 0)
              {
                v39 += 7;
                BOOL v16 = v40++ >= 9;
                if (v16)
                {
                  uint64_t v46 = 0;
                  goto LABEL_73;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v46 = 0;
          }
          else {
            uint64_t v46 = v41;
          }
LABEL_73:
          objc_msgSend(a1, "setEqual_size_column_group:", v46);
          continue;
        case 5u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          while (2)
          {
            uint64_t v50 = *v4;
            uint64_t v51 = *(void *)(a2 + v50);
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v53 = *(unsigned char *)(*(void *)(a2 + *v8) + v51);
              *(void *)(a2 + v50) = v52;
              v49 |= (unint64_t)(v53 & 0x7F) << v47;
              if (v53 < 0)
              {
                v47 += 7;
                BOOL v16 = v48++ >= 9;
                if (v16)
                {
                  uint64_t v49 = 0;
                  goto LABEL_77;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v49 = 0;
          }
LABEL_77:
          objc_msgSend(a1, "setDisable_truncation:", v49 != 0);
          continue;
        case 6u:
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v57 = *v4;
        uint64_t v58 = *(void *)(a2 + v57);
        unint64_t v59 = v58 + 1;
        if (v58 == -1 || v59 > *(void *)(a2 + *v5)) {
          break;
        }
        char v60 = *(unsigned char *)(*(void *)(a2 + *v8) + v58);
        *(void *)(a2 + v57) = v59;
        v56 |= (unint64_t)(v60 & 0x7F) << v54;
        if ((v60 & 0x80) == 0) {
          goto LABEL_79;
        }
        v54 += 7;
        BOOL v16 = v55++ >= 9;
        if (v16)
        {
          uint64_t v56 = 0;
          goto LABEL_81;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_79:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v56 = 0;
      }
LABEL_81:
      objc_msgSend(a1, "setShould_drop_in_flow_layout:", v56 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL _SFPBRFExpandingComponentContentReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v18 = objc_alloc_init(_SFPBRFLongItemStandardCardSection);
        if (!PBReaderPlaceMark() || (_SFPBRFLongItemStandardCardSectionReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLong_item_standard_card_section:", v18, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(_SFPBRFReferenceFootnoteCardSection);
    if (!PBReaderPlaceMark() || (_SFPBRFReferenceFootnoteCardSectionReadFrom(v18, a2) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setReference_footnote_card_section:", v18, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBSafariTableOfContentsItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        uint64_t v19 = PBReaderReadString();
        [a1 setElementPath:v19];
        goto LABEL_24;
      }
      if (v18 == 1)
      {
        uint64_t v19 = PBReaderReadString();
        [a1 setText:v19];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v19 = PBReaderReadString();
    [a1 setTrailingText:v19];
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBPatternModelReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          unint64_t v18 = PBReaderReadString();
          objc_msgSend(a1, "setPattern_id:", v18);
          goto LABEL_25;
        case 2u:
          unint64_t v18 = PBReaderReadData();
          objc_msgSend(a1, "setPattern_parameters:", v18);
          goto LABEL_25;
        case 3u:
          unint64_t v18 = PBReaderReadString();
          objc_msgSend(a1, "setPattern_bundle_id:", v18);
          goto LABEL_25;
        case 4u:
          unint64_t v18 = PBReaderReadString();
          objc_msgSend(a1, "setPattern_template_directory:", v18);
LABEL_25:

          goto LABEL_26;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_26:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCollectionStyleReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((int)(v10 >> 3) <= 2) {
        break;
      }
      if (v18 == 3)
      {
        uint64_t v19 = objc_alloc_init(_SFPBCollectionStyleHorizontallyScrolling);
        if (!PBReaderPlaceMark() || (_SFPBCollectionStyleHorizontallyScrollingReadFrom(v19, a2) & 1) == 0)
        {
LABEL_49:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCollectionStyleScrolling:", v19, 0, 0);
LABEL_39:

        goto LABEL_47;
      }
      if (v18 != 100)
      {
LABEL_40:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v23 = *v3;
        uint64_t v24 = *(void *)(a2 + v23);
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
        *(void *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_43;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          uint64_t v27 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v22;
      }
LABEL_46:
      [a1 setInitiallyVisibleCardSectionCount:v27];
LABEL_47:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    if (v18 == 1)
    {
      uint64_t v19 = objc_alloc_init(_SFPBCollectionStyleRow);
      if (!PBReaderPlaceMark() || (_SFPBCollectionStyleRowReadFrom(v19, a2) & 1) == 0) {
        goto LABEL_49;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setCollectionStyleRow:", v19, 0, 0);
    }
    else
    {
      if (v18 != 2) {
        goto LABEL_40;
      }
      uint64_t v19 = objc_alloc_init(_SFPBCollectionStyleGrid);
      if (!PBReaderPlaceMark() || (_SFPBCollectionStyleGridReadFrom(v19, a2) & 1) == 0) {
        goto LABEL_49;
      }
      PBReaderRecallMark();
      objc_msgSend(a1, "setCollectionStyleGrid:", v19, 0, 0);
    }
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCollectionStyleRowReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (1)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
            break;
          }
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0) {
            goto LABEL_50;
          }
          v27 += 7;
          BOOL v15 = v28++ >= 9;
          if (v15)
          {
            uint64_t v29 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v29 = 0;
        }
LABEL_52:
        [a1 setDrawPlattersIfNecessary:v29 != 0];
      }
      else if (v18 == 2)
      {
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (1)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_54;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v36 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v36 = 0;
        }
LABEL_56:
        [a1 setIsInsetGrouped:v36 != 0];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_48:
        [a1 setRowStyle:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCollectionStyleGridReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_42;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_42:
        uint64_t v33 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_45:
        [a1 setNumberOfColumns:v33];
      }
      else if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_37;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_40:
        [a1 setGridStyle:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBCollectionStyleHorizontallyScrollingReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        [a1 setNumberOfRows:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBInfoTupleReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBCommandButtonItem *)objc_claimAutoreleasedReturnValue();
        [a1 setKey:v18];
        goto LABEL_34;
      case 2u:
        char v18 = objc_alloc_init(_SFPBCommandButtonItem);
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        if (PBReaderPlaceMark() && _SFPBCommandButtonItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addValues:", v18, 0, 0);
          }
LABEL_34:

LABEL_40:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_39;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_39:
        objc_msgSend(a1, "setInitiallyVisibleValues:", v27, v28, v29);
        goto LABEL_40;
      case 4u:
        PBReaderReadString();
        char v18 = (_SFPBCommandButtonItem *)objc_claimAutoreleasedReturnValue();
        [a1 setShowMoreString:v18];
        goto LABEL_34;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_40;
    }
  }
}

BOOL _SFPBTitleSubtitleTupleReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = PBReaderReadString();
        [a1 setTitle:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v18 = PBReaderReadString();
    [a1 setSubtitle:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBButtonReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v26, a2) & 1) == 0)
        {
LABEL_43:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setImage:", v26, 0, 0);
      }
      else
      {
        if (v18 != 2)
        {
          if (v18 == 3)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_38;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_40;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_40:
            [a1 setIsSelected:v21 != 0];
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSelectedImage:", v26, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMessageAttachmentReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case '8':
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_37;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_40;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = v20;
        }
LABEL_40:
        [a1 setType:v25];
        goto LABEL_41;
      case '9':
        uint64_t v27 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v27, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setUrl:", v27, 0, 0);
        goto LABEL_35;
      case ':':
        PBReaderReadData();
        uint64_t v27 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setLinkMetadata:v27];
        goto LABEL_35;
      case ';':
        uint64_t v27 = objc_alloc_init(_SFPBPhotosLibraryImage);
        if PBReaderPlaceMark() && (_SFPBPhotosLibraryImageReadFrom(v27, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPhotosLibraryImage:", v27, 0, 0);
LABEL_35:

LABEL_41:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

uint64_t _SFPBTrackReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_37;
      case 2u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setNumber:v18];
        goto LABEL_37;
      case 3u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setDuration:v18];
        goto LABEL_37;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_43:
        [a1 setHighlighted:v22 != 0];
        goto LABEL_38;
      case 5u:
        char v18 = objc_alloc_init(_SFPBURL);
        if (!PBReaderPlaceMark() || (_SFPBURLReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_45;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPreview:", v18, 0, 0);
        goto LABEL_37;
      case 6u:
        char v18 = objc_alloc_init(_SFPBActionItem);
        if PBReaderPlaceMark() && (_SFPBActionItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPlayAction:", v18, 0, 0);
LABEL_37:

LABEL_38:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

uint64_t _SFPBTextColumnReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = objc_alloc_init(_SFPBTextColumnSection);
        if (!PBReaderPlaceMark() || !_SFPBTextColumnSectionReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addSections:", v18, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTextColumnSectionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        uint64_t v27 = PBReaderReadString();
        if (v27) {
          [a1 addTextLines:v27];
        }
      }
      else if (v18 == 2)
      {
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4)) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
          *(void *)(a2 + v31) = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_46;
          }
          v28 += 7;
          BOOL v15 = v29++ >= 9;
          if (v15)
          {
            uint64_t v30 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_46:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v30 = 0;
        }
LABEL_48:
        [a1 setTextNoWrap:v30 != 0];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_41;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_44:
        [a1 setTextWeight:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBTableAlignmentSchemaReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBTableColumnAlignment);
        if (!PBReaderPlaceMark() || !_SFPBTableColumnAlignmentReadFrom(v18, a2)) {
          goto LABEL_32;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addTableColumnAlignment:", v18, 0, 0);
        }
LABEL_27:

        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_29:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBStringDictionary);
    if (!PBReaderPlaceMark() || (_SFPBStringDictionaryReadFrom(v18, a2) & 1) == 0)
    {
LABEL_32:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setMetadata:", v18, 0, 0);
    goto LABEL_27;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBTableColumnAlignmentReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_49;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            uint64_t v33 = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        uint64_t v33 = *(unsigned char *)(a2 + *v5) ? 0 : v28;
LABEL_52:
        [a1 setColumnAlignment:v33];
      }
      else if (v18 == 2)
      {
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        while (1)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_54;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v41 = 0;
            goto LABEL_57;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
        uint64_t v41 = *(unsigned char *)(a2 + *v5) ? 0 : v36;
LABEL_57:
        [a1 setDataAlignment:v41];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v21 = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_47:
        [a1 setIsEqualWidth:v21 != 0];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBStringDictionaryReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = objc_alloc_init(_SFPBKeyValueTuple);
        if (!PBReaderPlaceMark() || !_SFPBKeyValueTupleReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addKeyValues:", v18, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBKeyValueTupleReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        unint64_t v18 = PBReaderReadString();
        [a1 setKey:v18];
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = PBReaderReadString();
    [a1 setValue:v18];
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSportsTeamReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLogo:", v18, 0, 0);
        goto LABEL_31;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setRecord:v18];
        goto LABEL_31;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setScore:v18];
        goto LABEL_31;
      case 4u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setAccessibilityDescription:v18];
        goto LABEL_31;
      case 5u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBImage *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v18];
        goto LABEL_31;
      case 6u:
        unint64_t v18 = objc_alloc_init(_SFPBButtonItem);
        if PBReaderPlaceMark() && (_SFPBButtonItemReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setButton:", v18, 0, 0);
LABEL_31:

LABEL_32:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      case 7u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_44:
        [a1 setIsWinner:v22 != 0];
        goto LABEL_32;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_32;
    }
  }
}

uint64_t _SFPBMediaOfferReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBActionItem);
        if (!PBReaderPlaceMark() || (_SFPBActionItemReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_43;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionItem:", v18, 0, 0);
        goto LABEL_36;
      case 2u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBActionItem *)objc_claimAutoreleasedReturnValue();
        [a1 setSublabel:v18];
        goto LABEL_36;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBActionItem *)objc_claimAutoreleasedReturnValue();
        [a1 setOfferIdentifier:v18];
        goto LABEL_36;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_40:
        [a1 setIsEnabled:v22 != 0];
        goto LABEL_41;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setImage:", v18, 0, 0);
LABEL_36:

LABEL_41:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_43:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

BOOL _SFPBMediaItemReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
        goto LABEL_48;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBText);
        if (!PBReaderPlaceMark() || (_SFPBTextReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSubtitleText:", v18, 0, 0);
        goto LABEL_48;
      case 3u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setThumbnail:", v18, 0, 0);
        goto LABEL_48;
      case 4u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setReviewGlyph:", v18, 0, 0);
        goto LABEL_48;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if (!PBReaderPlaceMark() || (_SFPBImageReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOverlayImage:", v18, 0, 0);
        goto LABEL_48;
      case 6u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setReviewText:v18];
        goto LABEL_48;
      case 7u:
        unint64_t v18 = objc_alloc_init(_SFPBPunchout);
        if (!PBReaderPlaceMark() || (_SFPBPunchoutReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPunchout:", v18, 0, 0);
        goto LABEL_48;
      case 8u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        if (v18) {
          [a1 addSubtitleCustomLineBreaking:v18];
        }
        goto LABEL_48;
      case 9u:
        unint64_t v18 = objc_alloc_init(_SFPBMediaOffer);
        if (!PBReaderPlaceMark() || !_SFPBMediaOfferReadFrom(v18, a2)) {
          goto LABEL_52;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addBuyOptions:", v18, 0, 0);
        }
        goto LABEL_48;
      case 0xAu:
        PBReaderReadString();
        unint64_t v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setContentAdvisory:v18];
        goto LABEL_48;
      case 0xBu:
        unint64_t v18 = objc_alloc_init(_SFPBImage);
        if PBReaderPlaceMark() && (_SFPBImageReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setContentAdvisoryImage:", v18, 0, 0);
LABEL_48:

LABEL_49:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_52:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_49;
    }
  }
}

BOOL _SFPBMediaDetailReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        unint64_t v18 = (_SFPBText *)objc_claimAutoreleasedReturnValue();
        [a1 setTitle:v18];
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unint64_t v18 = objc_alloc_init(_SFPBText);
    if (!PBReaderPlaceMark() || (_SFPBTextReadFrom(v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setContent:", v18, 0, 0);
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMapRegionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            uint64_t v16 = *v5;
            int v17 = *(unsigned __int8 *)(a2 + v16);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        if (*(unsigned char *)(a2 + v16)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v17) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = (v10 & 7) == 4;
        }
        if (!v18)
        {
          switch((v10 >> 3))
          {
            case 1u:
              uint64_t v19 = *v3;
              unint64_t v20 = *(void *)(a2 + v19);
              if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
              {
                double v21 = *(double *)(*(void *)(a2 + *v7) + v20);
                *(void *)(a2 + v19) = v20 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v21 = 0.0;
              }
              [a1 setSouthLat:v21];
              goto LABEL_46;
            case 2u:
              uint64_t v32 = *v3;
              unint64_t v33 = *(void *)(a2 + v32);
              if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)(a2 + *v4))
              {
                double v34 = *(double *)(*(void *)(a2 + *v7) + v33);
                *(void *)(a2 + v32) = v33 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v34 = 0.0;
              }
              [a1 setWestLng:v34];
              goto LABEL_46;
            case 3u:
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
              {
                double v24 = *(double *)(*(void *)(a2 + *v7) + v23);
                *(void *)(a2 + v22) = v23 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v24 = 0.0;
              }
              [a1 setNorthLat:v24];
              goto LABEL_46;
            case 4u:
              uint64_t v25 = *v3;
              unint64_t v26 = *(void *)(a2 + v25);
              if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)(a2 + *v4))
              {
                double v27 = *(double *)(*(void *)(a2 + *v7) + v26);
                *(void *)(a2 + v25) = v26 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v27 = 0.0;
              }
              [a1 setEastLng:v27];
              goto LABEL_46;
            case 5u:
              uint64_t v28 = *v3;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
              {
                double v30 = *(double *)(*(void *)(a2 + *v7) + v29);
                *(void *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v30 = 0.0;
              }
              [a1 setAltitudeInMeters:v30];
              goto LABEL_46;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_46:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPinReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        BOOL v18 = objc_alloc_init(_SFPBLatLng);
        if (!PBReaderPlaceMark() || (_SFPBLatLngReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_47;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation:", v18, 0, 0);
        goto LABEL_38;
      case 2u:
        BOOL v18 = objc_alloc_init(_SFPBColor);
        if PBReaderPlaceMark() && (_SFPBColorReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setPinColor:", v18, 0, 0);
LABEL_38:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      case 3u:
        PBReaderReadString();
        BOOL v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setLabel:v18];
        goto LABEL_38;
      case 4u:
        PBReaderReadString();
        BOOL v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setResultID:v18];
        goto LABEL_38;
      case 5u:
        PBReaderReadData();
        BOOL v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setMapsData:v18];
        goto LABEL_38;
      case 6u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_45:
        [a1 setPinBehavior:v27];
        goto LABEL_39;
      case 7u:
        PBReaderReadString();
        BOOL v18 = (_SFPBLatLng *)objc_claimAutoreleasedReturnValue();
        [a1 setPinText:v18];
        goto LABEL_38;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBCoreSpotlightRankingSignalsReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setTopicalityScore:a3];
          continue;
        case 2u:
          uint64_t v23 = *v4;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v24 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setFreshness:a3];
          continue;
        case 3u:
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
            *(void *)(a2 + v25) = v26 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setEngagementScore:a3];
          continue;
        case 4u:
          uint64_t v27 = *v4;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v28);
            *(void *)(a2 + v27) = v28 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setPredictedLikelihoodOfEngagement:a3];
          continue;
        case 5u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (2)
          {
            uint64_t v32 = *v4;
            uint64_t v33 = *(void *)(a2 + v32);
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
              *(void *)(a2 + v32) = v34;
              v31 |= (unint64_t)(v35 & 0x7F) << v29;
              if (v35 < 0)
              {
                v29 += 7;
                BOOL v16 = v30++ >= 9;
                if (v16)
                {
                  uint64_t v31 = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v31 = 0;
          }
LABEL_104:
          [a1 setWasNominatedAsTopHit:v31 != 0];
          continue;
        case 6u:
          uint64_t v36 = *v4;
          unint64_t v37 = *(void *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v37);
            *(void *)(a2 + v36) = v37 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSodiumL2Score:a3];
          continue;
        case 7u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          while (2)
          {
            uint64_t v41 = *v4;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v8) + v42);
              *(void *)(a2 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v16 = v39++ >= 9;
                if (v16)
                {
                  uint64_t v40 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v40 = 0;
          }
LABEL_108:
          [a1 setIsExactMatchOfLaunchString:v40 != 0];
          continue;
        case 8u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (2)
          {
            uint64_t v48 = *v4;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v8) + v49);
              *(void *)(a2 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v16 = v46++ >= 9;
                if (v16)
                {
                  uint64_t v47 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v47 = 0;
          }
LABEL_112:
          [a1 setWasEngagedInSpotlight:v47 != 0];
          continue;
        case 9u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (2)
          {
            uint64_t v55 = *v4;
            uint64_t v56 = *(void *)(a2 + v55);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v8) + v56);
              *(void *)(a2 + v55) = v57;
              v54 |= (unint64_t)(v58 & 0x7F) << v52;
              if (v58 < 0)
              {
                v52 += 7;
                BOOL v16 = v53++ >= 9;
                if (v16)
                {
                  uint64_t v59 = 0;
                  goto LABEL_117;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v54;
          }
LABEL_117:
          [a1 setResultQueryRecency:v59];
          continue;
        case 0xAu:
          uint64_t v60 = *v4;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v61);
            *(void *)(a2 + v60) = v61 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setPommesL2Score:a3];
          continue;
        case 0xBu:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          while (2)
          {
            uint64_t v65 = *v4;
            uint64_t v66 = *(void *)(a2 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v68 = *(unsigned char *)(*(void *)(a2 + *v8) + v66);
              *(void *)(a2 + v65) = v67;
              v64 |= (unint64_t)(v68 & 0x7F) << v62;
              if (v68 < 0)
              {
                v62 += 7;
                BOOL v16 = v63++ >= 9;
                if (v16)
                {
                  uint64_t v64 = 0;
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v64 = 0;
          }
LABEL_121:
          [a1 setIsSemanticMatch:v64 != 0];
          continue;
        case 0xCu:
          uint64_t v69 = *v4;
          unint64_t v70 = *(void *)(a2 + v69);
          if (v70 <= 0xFFFFFFFFFFFFFFFBLL && v70 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v70);
            *(void *)(a2 + v69) = v70 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSemanticScore:a3];
          continue;
        case 0xDu:
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          while (2)
          {
            uint64_t v74 = *v4;
            uint64_t v75 = *(void *)(a2 + v74);
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v8) + v75);
              *(void *)(a2 + v74) = v76;
              v73 |= (unint64_t)(v77 & 0x7F) << v71;
              if (v77 < 0)
              {
                v71 += 7;
                BOOL v16 = v72++ >= 9;
                if (v16)
                {
                  uint64_t v73 = 0;
                  goto LABEL_125;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v73 = 0;
          }
LABEL_125:
          [a1 setIsSyntacticMatch:v73 != 0];
          continue;
        case 0xEu:
          uint64_t v78 = *v4;
          unint64_t v79 = *(void *)(a2 + v78);
          if (v79 <= 0xFFFFFFFFFFFFFFFBLL && v79 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v79);
            *(void *)(a2 + v78) = v79 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSyntacticScore:a3];
          continue;
        case 0xFu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          while (2)
          {
            uint64_t v83 = *v4;
            uint64_t v84 = *(void *)(a2 + v83);
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v86 = *(unsigned char *)(*(void *)(a2 + *v8) + v84);
              *(void *)(a2 + v83) = v85;
              v82 |= (unint64_t)(v86 & 0x7F) << v80;
              if (v86 < 0)
              {
                v80 += 7;
                BOOL v16 = v81++ >= 9;
                if (v16)
                {
                  uint64_t v87 = 0;
                  goto LABEL_130;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v87 = 0;
          }
          else {
            uint64_t v87 = v82;
          }
LABEL_130:
          [a1 setEmbeddingStatus:v87];
          continue;
        case 0x10u:
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v90 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v91 = *v4;
        uint64_t v92 = *(void *)(a2 + v91);
        unint64_t v93 = v92 + 1;
        if (v92 == -1 || v93 > *(void *)(a2 + *v5)) {
          break;
        }
        char v94 = *(unsigned char *)(*(void *)(a2 + *v8) + v92);
        *(void *)(a2 + v91) = v93;
        v90 |= (unint64_t)(v94 & 0x7F) << v88;
        if ((v94 & 0x80) == 0) {
          goto LABEL_132;
        }
        v88 += 7;
        BOOL v16 = v89++ >= 9;
        if (v16)
        {
          uint64_t v95 = 0;
          goto LABEL_135;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_132:
      uint64_t v95 = *(unsigned char *)(a2 + *v6) ? 0 : v90;
LABEL_135:
      [a1 setItemAgeInDays:v95];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBDomainEngagementScoreReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_42;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_45;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_42:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_45:
          [a1 setDomain:v27];
          continue;
        case 2u:
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          break;
        case 3u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setScore:a3];
          continue;
        case 4u:
          uint64_t v39 = *v4;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
            *(void *)(a2 + v39) = v40 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setIFunScore:a3];
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v32 = *v4;
        uint64_t v33 = *(void *)(a2 + v32);
        unint64_t v34 = v33 + 1;
        if (v33 == -1 || v34 > *(void *)(a2 + *v5)) {
          break;
        }
        char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
        *(void *)(a2 + v32) = v34;
        v31 |= (unint64_t)(v35 & 0x7F) << v29;
        if ((v35 & 0x80) == 0) {
          goto LABEL_47;
        }
        v29 += 7;
        BOOL v16 = v30++ >= 9;
        if (v16)
        {
          uint64_t v36 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_47:
      uint64_t v36 = *(unsigned char *)(a2 + *v6) ? 0 : v31;
LABEL_50:
      [a1 setScoreConfidence:v36];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

BOOL _SFPBImageOptionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        uint64_t v19 = objc_alloc_init(_SFPBStringDictionary);
        if (!PBReaderPlaceMark() || (_SFPBStringDictionaryReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setOptions:", v19, 0, 0);
        goto LABEL_26;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 == 1)
      {
        PBReaderReadString();
        uint64_t v19 = (_SFPBStringDictionary *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v19];
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    uint64_t v19 = (_SFPBStringDictionary *)objc_claimAutoreleasedReturnValue();
    [a1 setDefaultValue:v19];
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBDynamicURLImageResourceReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPixelWidth:", v18, 0, 0);
        goto LABEL_39;
      case 2u:
        unint64_t v18 = objc_alloc_init(_SFPBGraphicalFloat);
        if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
          goto LABEL_46;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPixelHeight:", v18, 0, 0);
        goto LABEL_39;
      case 3u:
        PBReaderReadString();
        unint64_t v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
        [a1 setFormatURL:v18];
        goto LABEL_39;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_43:
        [a1 setSupportsResizing:v22 != 0];
        goto LABEL_44;
      case 5u:
        unint64_t v18 = objc_alloc_init(_SFPBImageOption);
        if (PBReaderPlaceMark() && _SFPBImageOptionReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addImageOptions:", v18, 0, 0);
          }
LABEL_39:

LABEL_44:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_46:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_44;
    }
  }
}

uint64_t _SFPBEngagementSignalReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_54;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_57;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_54:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_57:
        objc_msgSend(a1, "setVersion:", v27, v51, v52);
        goto LABEL_72;
      case 2u:
        uint64_t v29 = *v4;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
          *(void *)(a2 + v29) = v30 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setServerScore:", a3, v51, v52);
        goto LABEL_72;
      case 3u:
        uint64_t v31 = *v4;
        unint64_t v32 = *(void *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v32);
          *(void *)(a2 + v31) = v32 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        objc_msgSend(a1, "setLocalScore:", a3, v51, v52);
        goto LABEL_72;
      case 4u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        while (2)
        {
          uint64_t v36 = *v4;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + *v8) + v37);
            *(void *)(a2 + v36) = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if (v39 < 0)
            {
              v33 += 7;
              BOOL v16 = v34++ >= 9;
              if (v16)
              {
                uint64_t v40 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v40 = 0;
        }
        else {
          uint64_t v40 = v35;
        }
LABEL_62:
        objc_msgSend(a1, "setServerScoreConfidence:", v40, v51, v52);
        goto LABEL_72;
      case 5u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (2)
        {
          uint64_t v44 = *v4;
          uint64_t v45 = *(void *)(a2 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v8) + v45);
            *(void *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v16 = v42++ >= 9;
              if (v16)
              {
                uint64_t v48 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v48 = 0;
        }
        else {
          uint64_t v48 = v43;
        }
LABEL_67:
        objc_msgSend(a1, "setLocalScoreConfidence:", v48, v51, v52);
        goto LABEL_72;
      case 6u:
        uint64_t v49 = objc_alloc_init(_SFPBDomainEngagementScore);
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        if (PBReaderPlaceMark() && _SFPBDomainEngagementScoreReadFrom(v49, a2, v50))
        {
          PBReaderRecallMark();
          if (v49) {
            objc_msgSend(a1, "addDomainEngagementScores:", v49, 0, 0);
          }

LABEL_72:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_72;
    }
  }
}

uint64_t _SFPBHashBucketDetail_HashDetailReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          int v18 = PBReaderReadString();
          objc_msgSend(a1, "setFull_hash:", v18);
          goto LABEL_44;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (2)
          {
            uint64_t v23 = *v3;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if (v26 < 0)
              {
                v20 += 7;
                BOOL v15 = v21++ >= 9;
                if (v15)
                {
                  uint64_t v22 = 0;
                  goto LABEL_48;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_48:
          objc_msgSend(a1, "setHas_summary:", v22 != 0);
          continue;
        case 3u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_53:
          objc_msgSend(a1, "addSba_entity_types:", v34);
          continue;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          break;
        case 5u:
          int v18 = PBReaderReadString();
          objc_msgSend(a1, "setMatched_url_variant:", v18);
LABEL_44:

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        uint64_t v39 = *(void *)(a2 + v38);
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
          break;
        }
        char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v38) = v40;
        v37 |= (unint64_t)(v41 & 0x7F) << v35;
        if ((v41 & 0x80) == 0) {
          goto LABEL_55;
        }
        v35 += 7;
        BOOL v15 = v36++ >= 9;
        if (v15)
        {
          uint64_t v37 = 0;
          goto LABEL_57;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v37 = 0;
      }
LABEL_57:
      objc_msgSend(a1, "setHas_table_of_contents:", v37 != 0);
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBHashBucketDetailReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        int v18 = (_SFPBHashBucketDetail_HashDetail *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setHash_prefix:", v18);
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(_SFPBHashBucketDetail_HashDetail);
    if (!PBReaderPlaceMark() || !_SFPBHashBucketDetail_HashDetailReadFrom(v18, a2))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addHash_details:", v18, 0, 0);
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBIndexStateReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_57;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v25 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v20;
          }
LABEL_60:
          [a1 setPercentMessagesIndexed:v25];
          continue;
        case 2u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_65:
          [a1 setPercentAttachmentsIndexed:v34];
          continue;
        case 3u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (v15)
                {
                  uint64_t v42 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v37;
          }
LABEL_70:
          [a1 setSearchIndex:v42];
          continue;
        case 4u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
          else {
            uint64_t v50 = v45;
          }
LABEL_75:
          [a1 setTotalMessageCount:v50];
          continue;
        case 5u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v54 = *v3;
        uint64_t v55 = *(void *)(a2 + v54);
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)(a2 + *v4)) {
          break;
        }
        char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
        *(void *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0) {
          goto LABEL_77;
        }
        v51 += 7;
        BOOL v15 = v52++ >= 9;
        if (v15)
        {
          uint64_t v58 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      uint64_t v58 = *(unsigned char *)(a2 + *v5) ? 0 : v53;
LABEL_80:
      [a1 setIndexedMessageCount:v58];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBLocationTypeInfoReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 10)
      {
        char v18 = PBReaderReadString();
        [a1 setAddress:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBMailRankingSignalsReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_496;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v22 = 0;
              goto LABEL_498;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_496:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v22 = 0;
          }
LABEL_498:
          [a1 setWasReorderedByRecency:v22 != 0];
          continue;
        case 2u:
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (2)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)(a2 + v31);
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v8) + v32);
              *(void *)(a2 + v31) = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v16 = v29++ >= 9;
                if (v16)
                {
                  uint64_t v35 = 0;
                  goto LABEL_503;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v35 = 0;
          }
          else {
            uint64_t v35 = v30;
          }
LABEL_503:
          [a1 setNumEngagements:v35];
          continue;
        case 3u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (2)
          {
            uint64_t v39 = *v4;
            uint64_t v40 = *(void *)(a2 + v39);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v8) + v40);
              *(void *)(a2 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                BOOL v16 = v37++ >= 9;
                if (v16)
                {
                  uint64_t v43 = 0;
                  goto LABEL_508;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v43 = 0;
          }
          else {
            uint64_t v43 = v38;
          }
LABEL_508:
          [a1 setNumDaysEngagedLast30Days:v43];
          continue;
        case 4u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v46 = 0;
          while (2)
          {
            uint64_t v47 = *v4;
            uint64_t v48 = *(void *)(a2 + v47);
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v8) + v48);
              *(void *)(a2 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                BOOL v16 = v45++ >= 9;
                if (v16)
                {
                  uint64_t v51 = 0;
                  goto LABEL_513;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = v46;
          }
LABEL_513:
          [a1 setAverageEngagementAgeLast7Days:v51];
          continue;
        case 5u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          while (2)
          {
            uint64_t v55 = *v4;
            uint64_t v56 = *(void *)(a2 + v55);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v58 = *(unsigned char *)(*(void *)(a2 + *v8) + v56);
              *(void *)(a2 + v55) = v57;
              v54 |= (unint64_t)(v58 & 0x7F) << v52;
              if (v58 < 0)
              {
                v52 += 7;
                BOOL v16 = v53++ >= 9;
                if (v16)
                {
                  uint64_t v59 = 0;
                  goto LABEL_518;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v59 = 0;
          }
          else {
            uint64_t v59 = v54;
          }
LABEL_518:
          [a1 setAverageEngagementAgeLast14Days:v59];
          continue;
        case 6u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (2)
          {
            uint64_t v63 = *v4;
            uint64_t v64 = *(void *)(a2 + v63);
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v66 = *(unsigned char *)(*(void *)(a2 + *v8) + v64);
              *(void *)(a2 + v63) = v65;
              v62 |= (unint64_t)(v66 & 0x7F) << v60;
              if (v66 < 0)
              {
                v60 += 7;
                BOOL v16 = v61++ >= 9;
                if (v16)
                {
                  uint64_t v67 = 0;
                  goto LABEL_523;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v67 = 0;
          }
          else {
            uint64_t v67 = v62;
          }
LABEL_523:
          [a1 setAverageEngagementAgeLast21Days:v67];
          continue;
        case 7u:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          while (2)
          {
            uint64_t v71 = *v4;
            uint64_t v72 = *(void *)(a2 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v74 = *(unsigned char *)(*(void *)(a2 + *v8) + v72);
              *(void *)(a2 + v71) = v73;
              v70 |= (unint64_t)(v74 & 0x7F) << v68;
              if (v74 < 0)
              {
                v68 += 7;
                BOOL v16 = v69++ >= 9;
                if (v16)
                {
                  uint64_t v75 = 0;
                  goto LABEL_528;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v75 = 0;
          }
          else {
            uint64_t v75 = v70;
          }
LABEL_528:
          [a1 setAverageEngagementAgeLast30Days:v75];
          continue;
        case 8u:
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v78 = 0;
          while (2)
          {
            uint64_t v79 = *v4;
            uint64_t v80 = *(void *)(a2 + v79);
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v82 = *(unsigned char *)(*(void *)(a2 + *v8) + v80);
              *(void *)(a2 + v79) = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                BOOL v16 = v77++ >= 9;
                if (v16)
                {
                  uint64_t v83 = 0;
                  goto LABEL_533;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v83 = 0;
          }
          else {
            uint64_t v83 = v78;
          }
LABEL_533:
          [a1 setDaysSinceReceipt:v83];
          continue;
        case 9u:
          uint64_t v84 = *v4;
          unint64_t v85 = *(void *)(a2 + v84);
          if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v85);
            *(void *)(a2 + v84) = v85 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setL1Score:a3];
          continue;
        case 0xAu:
          uint64_t v86 = *v4;
          unint64_t v87 = *(void *)(a2 + v86);
          if (v87 <= 0xFFFFFFFFFFFFFFFBLL && v87 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v87);
            *(void *)(a2 + v86) = v87 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setL2Score:a3];
          continue;
        case 0xBu:
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v90 = 0;
          while (2)
          {
            uint64_t v91 = *v4;
            uint64_t v92 = *(void *)(a2 + v91);
            unint64_t v93 = v92 + 1;
            if (v92 == -1 || v93 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v94 = *(unsigned char *)(*(void *)(a2 + *v8) + v92);
              *(void *)(a2 + v91) = v93;
              v90 |= (unint64_t)(v94 & 0x7F) << v88;
              if (v94 < 0)
              {
                v88 += 7;
                BOOL v16 = v89++ >= 9;
                if (v16)
                {
                  uint64_t v90 = 0;
                  goto LABEL_537;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v90 = 0;
          }
LABEL_537:
          [a1 setIsFlagged:v90 != 0];
          continue;
        case 0xCu:
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v97 = 0;
          while (2)
          {
            uint64_t v98 = *v4;
            uint64_t v99 = *(void *)(a2 + v98);
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v101 = *(unsigned char *)(*(void *)(a2 + *v8) + v99);
              *(void *)(a2 + v98) = v100;
              v97 |= (unint64_t)(v101 & 0x7F) << v95;
              if (v101 < 0)
              {
                v95 += 7;
                BOOL v16 = v96++ >= 9;
                if (v16)
                {
                  uint64_t v97 = 0;
                  goto LABEL_541;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v97 = 0;
          }
LABEL_541:
          [a1 setIsRepliedTo:v97 != 0];
          continue;
        case 0xDu:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v104 = 0;
          while (2)
          {
            uint64_t v105 = *v4;
            uint64_t v106 = *(void *)(a2 + v105);
            unint64_t v107 = v106 + 1;
            if (v106 == -1 || v107 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v108 = *(unsigned char *)(*(void *)(a2 + *v8) + v106);
              *(void *)(a2 + v105) = v107;
              v104 |= (unint64_t)(v108 & 0x7F) << v102;
              if (v108 < 0)
              {
                v102 += 7;
                BOOL v16 = v103++ >= 9;
                if (v16)
                {
                  uint64_t v104 = 0;
                  goto LABEL_545;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v104 = 0;
          }
LABEL_545:
          [a1 setIsSemanticMatch:v104 != 0];
          continue;
        case 0xEu:
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v111 = 0;
          while (2)
          {
            uint64_t v112 = *v4;
            uint64_t v113 = *(void *)(a2 + v112);
            unint64_t v114 = v113 + 1;
            if (v113 == -1 || v114 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v115 = *(unsigned char *)(*(void *)(a2 + *v8) + v113);
              *(void *)(a2 + v112) = v114;
              v111 |= (unint64_t)(v115 & 0x7F) << v109;
              if (v115 < 0)
              {
                v109 += 7;
                BOOL v16 = v110++ >= 9;
                if (v16)
                {
                  uint64_t v111 = 0;
                  goto LABEL_549;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v111 = 0;
          }
LABEL_549:
          [a1 setIsSyntacticMatch:v111 != 0];
          continue;
        case 0xFu:
          uint64_t v116 = *v4;
          unint64_t v117 = *(void *)(a2 + v116);
          if (v117 <= 0xFFFFFFFFFFFFFFFBLL && v117 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v117);
            *(void *)(a2 + v116) = v117 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSemanticScore:a3];
          continue;
        case 0x10u:
          uint64_t v118 = *v4;
          unint64_t v119 = *(void *)(a2 + v118);
          if (v119 <= 0xFFFFFFFFFFFFFFFBLL && v119 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v119);
            *(void *)(a2 + v118) = v119 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          [a1 setSyntacticScore:a3];
          continue;
        case 0x11u:
          char v120 = 0;
          unsigned int v121 = 0;
          uint64_t v122 = 0;
          while (2)
          {
            uint64_t v123 = *v4;
            uint64_t v124 = *(void *)(a2 + v123);
            unint64_t v125 = v124 + 1;
            if (v124 == -1 || v125 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v126 = *(unsigned char *)(*(void *)(a2 + *v8) + v124);
              *(void *)(a2 + v123) = v125;
              v122 |= (unint64_t)(v126 & 0x7F) << v120;
              if (v126 < 0)
              {
                v120 += 7;
                BOOL v16 = v121++ >= 9;
                if (v16)
                {
                  uint64_t v127 = 0;
                  goto LABEL_554;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v127 = 0;
          }
          else {
            uint64_t v127 = v122;
          }
LABEL_554:
          [a1 setCountUnigramMatchInAuthors:v127];
          continue;
        case 0x12u:
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v130 = 0;
          while (2)
          {
            uint64_t v131 = *v4;
            uint64_t v132 = *(void *)(a2 + v131);
            unint64_t v133 = v132 + 1;
            if (v132 == -1 || v133 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v134 = *(unsigned char *)(*(void *)(a2 + *v8) + v132);
              *(void *)(a2 + v131) = v133;
              v130 |= (unint64_t)(v134 & 0x7F) << v128;
              if (v134 < 0)
              {
                v128 += 7;
                BOOL v16 = v129++ >= 9;
                if (v16)
                {
                  uint64_t v135 = 0;
                  goto LABEL_559;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v135 = 0;
          }
          else {
            uint64_t v135 = v130;
          }
LABEL_559:
          [a1 setCountBigramMatchInAuthors:v135];
          continue;
        case 0x13u:
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v138 = 0;
          while (2)
          {
            uint64_t v139 = *v4;
            uint64_t v140 = *(void *)(a2 + v139);
            unint64_t v141 = v140 + 1;
            if (v140 == -1 || v141 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v142 = *(unsigned char *)(*(void *)(a2 + *v8) + v140);
              *(void *)(a2 + v139) = v141;
              v138 |= (unint64_t)(v142 & 0x7F) << v136;
              if (v142 < 0)
              {
                v136 += 7;
                BOOL v16 = v137++ >= 9;
                if (v16)
                {
                  uint64_t v143 = 0;
                  goto LABEL_564;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v143 = 0;
          }
          else {
            uint64_t v143 = v138;
          }
LABEL_564:
          [a1 setCountNgramMatchInAuthors:v143];
          continue;
        case 0x14u:
          char v144 = 0;
          unsigned int v145 = 0;
          uint64_t v146 = 0;
          while (2)
          {
            uint64_t v147 = *v4;
            uint64_t v148 = *(void *)(a2 + v147);
            unint64_t v149 = v148 + 1;
            if (v148 == -1 || v149 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v150 = *(unsigned char *)(*(void *)(a2 + *v8) + v148);
              *(void *)(a2 + v147) = v149;
              v146 |= (unint64_t)(v150 & 0x7F) << v144;
              if (v150 < 0)
              {
                v144 += 7;
                BOOL v16 = v145++ >= 9;
                if (v16)
                {
                  uint64_t v151 = 0;
                  goto LABEL_569;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v151 = 0;
          }
          else {
            uint64_t v151 = v146;
          }
LABEL_569:
          [a1 setCountUnigramPrefixMatchInAuthors:v151];
          continue;
        case 0x15u:
          char v152 = 0;
          unsigned int v153 = 0;
          uint64_t v154 = 0;
          while (2)
          {
            uint64_t v155 = *v4;
            uint64_t v156 = *(void *)(a2 + v155);
            unint64_t v157 = v156 + 1;
            if (v156 == -1 || v157 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v158 = *(unsigned char *)(*(void *)(a2 + *v8) + v156);
              *(void *)(a2 + v155) = v157;
              v154 |= (unint64_t)(v158 & 0x7F) << v152;
              if (v158 < 0)
              {
                v152 += 7;
                BOOL v16 = v153++ >= 9;
                if (v16)
                {
                  uint64_t v159 = 0;
                  goto LABEL_574;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v159 = 0;
          }
          else {
            uint64_t v159 = v154;
          }
LABEL_574:
          [a1 setCountBigramPrefixMatchInAuthors:v159];
          continue;
        case 0x16u:
          char v160 = 0;
          unsigned int v161 = 0;
          uint64_t v162 = 0;
          while (2)
          {
            uint64_t v163 = *v4;
            uint64_t v164 = *(void *)(a2 + v163);
            unint64_t v165 = v164 + 1;
            if (v164 == -1 || v165 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v166 = *(unsigned char *)(*(void *)(a2 + *v8) + v164);
              *(void *)(a2 + v163) = v165;
              v162 |= (unint64_t)(v166 & 0x7F) << v160;
              if (v166 < 0)
              {
                v160 += 7;
                BOOL v16 = v161++ >= 9;
                if (v16)
                {
                  uint64_t v167 = 0;
                  goto LABEL_579;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v167 = 0;
          }
          else {
            uint64_t v167 = v162;
          }
LABEL_579:
          [a1 setCountNgramPrefixMatchInAuthors:v167];
          continue;
        case 0x17u:
          char v168 = 0;
          unsigned int v169 = 0;
          uint64_t v170 = 0;
          while (2)
          {
            uint64_t v171 = *v4;
            uint64_t v172 = *(void *)(a2 + v171);
            unint64_t v173 = v172 + 1;
            if (v172 == -1 || v173 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v174 = *(unsigned char *)(*(void *)(a2 + *v8) + v172);
              *(void *)(a2 + v171) = v173;
              v170 |= (unint64_t)(v174 & 0x7F) << v168;
              if (v174 < 0)
              {
                v168 += 7;
                BOOL v16 = v169++ >= 9;
                if (v16)
                {
                  uint64_t v175 = 0;
                  goto LABEL_584;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v175 = 0;
          }
          else {
            uint64_t v175 = v170;
          }
LABEL_584:
          [a1 setCountUnigramMatchInAuthorEmailAddresses:v175];
          continue;
        case 0x18u:
          char v176 = 0;
          unsigned int v177 = 0;
          uint64_t v178 = 0;
          while (2)
          {
            uint64_t v179 = *v4;
            uint64_t v180 = *(void *)(a2 + v179);
            unint64_t v181 = v180 + 1;
            if (v180 == -1 || v181 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v182 = *(unsigned char *)(*(void *)(a2 + *v8) + v180);
              *(void *)(a2 + v179) = v181;
              v178 |= (unint64_t)(v182 & 0x7F) << v176;
              if (v182 < 0)
              {
                v176 += 7;
                BOOL v16 = v177++ >= 9;
                if (v16)
                {
                  uint64_t v183 = 0;
                  goto LABEL_589;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v183 = 0;
          }
          else {
            uint64_t v183 = v178;
          }
LABEL_589:
          [a1 setCountBigramMatchInAuthorEmailAddresses:v183];
          continue;
        case 0x19u:
          char v184 = 0;
          unsigned int v185 = 0;
          uint64_t v186 = 0;
          while (2)
          {
            uint64_t v187 = *v4;
            uint64_t v188 = *(void *)(a2 + v187);
            unint64_t v189 = v188 + 1;
            if (v188 == -1 || v189 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v190 = *(unsigned char *)(*(void *)(a2 + *v8) + v188);
              *(void *)(a2 + v187) = v189;
              v186 |= (unint64_t)(v190 & 0x7F) << v184;
              if (v190 < 0)
              {
                v184 += 7;
                BOOL v16 = v185++ >= 9;
                if (v16)
                {
                  uint64_t v191 = 0;
                  goto LABEL_594;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v191 = 0;
          }
          else {
            uint64_t v191 = v186;
          }
LABEL_594:
          [a1 setCountNgramMatchInAuthorEmailAddresses:v191];
          continue;
        case 0x1Au:
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v194 = 0;
          while (2)
          {
            uint64_t v195 = *v4;
            uint64_t v196 = *(void *)(a2 + v195);
            unint64_t v197 = v196 + 1;
            if (v196 == -1 || v197 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v198 = *(unsigned char *)(*(void *)(a2 + *v8) + v196);
              *(void *)(a2 + v195) = v197;
              v194 |= (unint64_t)(v198 & 0x7F) << v192;
              if (v198 < 0)
              {
                v192 += 7;
                BOOL v16 = v193++ >= 9;
                if (v16)
                {
                  uint64_t v199 = 0;
                  goto LABEL_599;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v199 = 0;
          }
          else {
            uint64_t v199 = v194;
          }
LABEL_599:
          [a1 setCountUnigramPrefixMatchInAuthorEmailAddresses:v199];
          continue;
        case 0x1Bu:
          char v200 = 0;
          unsigned int v201 = 0;
          uint64_t v202 = 0;
          while (2)
          {
            uint64_t v203 = *v4;
            uint64_t v204 = *(void *)(a2 + v203);
            unint64_t v205 = v204 + 1;
            if (v204 == -1 || v205 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v206 = *(unsigned char *)(*(void *)(a2 + *v8) + v204);
              *(void *)(a2 + v203) = v205;
              v202 |= (unint64_t)(v206 & 0x7F) << v200;
              if (v206 < 0)
              {
                v200 += 7;
                BOOL v16 = v201++ >= 9;
                if (v16)
                {
                  uint64_t v207 = 0;
                  goto LABEL_604;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v207 = 0;
          }
          else {
            uint64_t v207 = v202;
          }
LABEL_604:
          [a1 setCountBigramPrefixMatchInAuthorEmailAddresses:v207];
          continue;
        case 0x1Cu:
          char v208 = 0;
          unsigned int v209 = 0;
          uint64_t v210 = 0;
          while (2)
          {
            uint64_t v211 = *v4;
            uint64_t v212 = *(void *)(a2 + v211);
            unint64_t v213 = v212 + 1;
            if (v212 == -1 || v213 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v214 = *(unsigned char *)(*(void *)(a2 + *v8) + v212);
              *(void *)(a2 + v211) = v213;
              v210 |= (unint64_t)(v214 & 0x7F) << v208;
              if (v214 < 0)
              {
                v208 += 7;
                BOOL v16 = v209++ >= 9;
                if (v16)
                {
                  uint64_t v215 = 0;
                  goto LABEL_609;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v215 = 0;
          }
          else {
            uint64_t v215 = v210;
          }
LABEL_609:
          [a1 setCountNgramPrefixMatchInAuthorEmailAddresses:v215];
          continue;
        case 0x1Du:
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v218 = 0;
          while (2)
          {
            uint64_t v219 = *v4;
            uint64_t v220 = *(void *)(a2 + v219);
            unint64_t v221 = v220 + 1;
            if (v220 == -1 || v221 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v222 = *(unsigned char *)(*(void *)(a2 + *v8) + v220);
              *(void *)(a2 + v219) = v221;
              v218 |= (unint64_t)(v222 & 0x7F) << v216;
              if (v222 < 0)
              {
                v216 += 7;
                BOOL v16 = v217++ >= 9;
                if (v16)
                {
                  uint64_t v223 = 0;
                  goto LABEL_614;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v223 = 0;
          }
          else {
            uint64_t v223 = v218;
          }
LABEL_614:
          [a1 setCountUnigramMatchInSubject:v223];
          continue;
        case 0x1Eu:
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v226 = 0;
          while (2)
          {
            uint64_t v227 = *v4;
            uint64_t v228 = *(void *)(a2 + v227);
            unint64_t v229 = v228 + 1;
            if (v228 == -1 || v229 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v230 = *(unsigned char *)(*(void *)(a2 + *v8) + v228);
              *(void *)(a2 + v227) = v229;
              v226 |= (unint64_t)(v230 & 0x7F) << v224;
              if (v230 < 0)
              {
                v224 += 7;
                BOOL v16 = v225++ >= 9;
                if (v16)
                {
                  uint64_t v231 = 0;
                  goto LABEL_619;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v231 = 0;
          }
          else {
            uint64_t v231 = v226;
          }
LABEL_619:
          [a1 setCountBigramMatchInSubject:v231];
          continue;
        case 0x1Fu:
          char v232 = 0;
          unsigned int v233 = 0;
          uint64_t v234 = 0;
          while (2)
          {
            uint64_t v235 = *v4;
            uint64_t v236 = *(void *)(a2 + v235);
            unint64_t v237 = v236 + 1;
            if (v236 == -1 || v237 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v238 = *(unsigned char *)(*(void *)(a2 + *v8) + v236);
              *(void *)(a2 + v235) = v237;
              v234 |= (unint64_t)(v238 & 0x7F) << v232;
              if (v238 < 0)
              {
                v232 += 7;
                BOOL v16 = v233++ >= 9;
                if (v16)
                {
                  uint64_t v239 = 0;
                  goto LABEL_624;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v239 = 0;
          }
          else {
            uint64_t v239 = v234;
          }
LABEL_624:
          [a1 setCountNgramMatchInSubject:v239];
          continue;
        case 0x20u:
          char v240 = 0;
          unsigned int v241 = 0;
          uint64_t v242 = 0;
          while (2)
          {
            uint64_t v243 = *v4;
            uint64_t v244 = *(void *)(a2 + v243);
            unint64_t v245 = v244 + 1;
            if (v244 == -1 || v245 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v246 = *(unsigned char *)(*(void *)(a2 + *v8) + v244);
              *(void *)(a2 + v243) = v245;
              v242 |= (unint64_t)(v246 & 0x7F) << v240;
              if (v246 < 0)
              {
                v240 += 7;
                BOOL v16 = v241++ >= 9;
                if (v16)
                {
                  uint64_t v247 = 0;
                  goto LABEL_629;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v247 = 0;
          }
          else {
            uint64_t v247 = v242;
          }
LABEL_629:
          [a1 setCountUnigramPrefixMatchInSubject:v247];
          continue;
        case 0x21u:
          char v248 = 0;
          unsigned int v249 = 0;
          uint64_t v250 = 0;
          while (2)
          {
            uint64_t v251 = *v4;
            uint64_t v252 = *(void *)(a2 + v251);
            unint64_t v253 = v252 + 1;
            if (v252 == -1 || v253 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v254 = *(unsigned char *)(*(void *)(a2 + *v8) + v252);
              *(void *)(a2 + v251) = v253;
              v250 |= (unint64_t)(v254 & 0x7F) << v248;
              if (v254 < 0)
              {
                v248 += 7;
                BOOL v16 = v249++ >= 9;
                if (v16)
                {
                  uint64_t v255 = 0;
                  goto LABEL_634;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v255 = 0;
          }
          else {
            uint64_t v255 = v250;
          }
LABEL_634:
          [a1 setCountBigramPrefixMatchInSubject:v255];
          continue;
        case 0x22u:
          char v256 = 0;
          unsigned int v257 = 0;
          uint64_t v258 = 0;
          while (2)
          {
            uint64_t v259 = *v4;
            uint64_t v260 = *(void *)(a2 + v259);
            unint64_t v261 = v260 + 1;
            if (v260 == -1 || v261 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v262 = *(unsigned char *)(*(void *)(a2 + *v8) + v260);
              *(void *)(a2 + v259) = v261;
              v258 |= (unint64_t)(v262 & 0x7F) << v256;
              if (v262 < 0)
              {
                v256 += 7;
                BOOL v16 = v257++ >= 9;
                if (v16)
                {
                  uint64_t v263 = 0;
                  goto LABEL_639;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v263 = 0;
          }
          else {
            uint64_t v263 = v258;
          }
LABEL_639:
          [a1 setCountNgramPrefixMatchInSubject:v263];
          continue;
        case 0x23u:
          char v264 = 0;
          unsigned int v265 = 0;
          uint64_t v266 = 0;
          while (2)
          {
            uint64_t v267 = *v4;
            uint64_t v268 = *(void *)(a2 + v267);
            unint64_t v269 = v268 + 1;
            if (v268 == -1 || v269 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v270 = *(unsigned char *)(*(void *)(a2 + *v8) + v268);
              *(void *)(a2 + v267) = v269;
              v266 |= (unint64_t)(v270 & 0x7F) << v264;
              if (v270 < 0)
              {
                v264 += 7;
                BOOL v16 = v265++ >= 9;
                if (v16)
                {
                  uint64_t v271 = 0;
                  goto LABEL_644;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v271 = 0;
          }
          else {
            uint64_t v271 = v266;
          }
LABEL_644:
          [a1 setCountUnigramMatchInTextContent:v271];
          continue;
        case 0x24u:
          char v272 = 0;
          unsigned int v273 = 0;
          uint64_t v274 = 0;
          while (2)
          {
            uint64_t v275 = *v4;
            uint64_t v276 = *(void *)(a2 + v275);
            unint64_t v277 = v276 + 1;
            if (v276 == -1 || v277 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v278 = *(unsigned char *)(*(void *)(a2 + *v8) + v276);
              *(void *)(a2 + v275) = v277;
              v274 |= (unint64_t)(v278 & 0x7F) << v272;
              if (v278 < 0)
              {
                v272 += 7;
                BOOL v16 = v273++ >= 9;
                if (v16)
                {
                  uint64_t v279 = 0;
                  goto LABEL_649;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v279 = 0;
          }
          else {
            uint64_t v279 = v274;
          }
LABEL_649:
          [a1 setCountBigramMatchInTextContent:v279];
          continue;
        case 0x25u:
          char v280 = 0;
          unsigned int v281 = 0;
          uint64_t v282 = 0;
          while (2)
          {
            uint64_t v283 = *v4;
            uint64_t v284 = *(void *)(a2 + v283);
            unint64_t v285 = v284 + 1;
            if (v284 == -1 || v285 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v286 = *(unsigned char *)(*(void *)(a2 + *v8) + v284);
              *(void *)(a2 + v283) = v285;
              v282 |= (unint64_t)(v286 & 0x7F) << v280;
              if (v286 < 0)
              {
                v280 += 7;
                BOOL v16 = v281++ >= 9;
                if (v16)
                {
                  uint64_t v287 = 0;
                  goto LABEL_654;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v287 = 0;
          }
          else {
            uint64_t v287 = v282;
          }
LABEL_654:
          [a1 setCountNgramMatchInTextContent:v287];
          continue;
        case 0x26u:
          char v288 = 0;
          unsigned int v289 = 0;
          uint64_t v290 = 0;
          while (2)
          {
            uint64_t v291 = *v4;
            uint64_t v292 = *(void *)(a2 + v291);
            unint64_t v293 = v292 + 1;
            if (v292 == -1 || v293 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v294 = *(unsigned char *)(*(void *)(a2 + *v8) + v292);
              *(void *)(a2 + v291) = v293;
              v290 |= (unint64_t)(v294 & 0x7F) << v288;
              if (v294 < 0)
              {
                v288 += 7;
                BOOL v16 = v289++ >= 9;
                if (v16)
                {
                  uint64_t v295 = 0;
                  goto LABEL_659;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v295 = 0;
          }
          else {
            uint64_t v295 = v290;
          }
LABEL_659:
          [a1 setCountUnigramPrefixMatchInTextContent:v295];
          continue;
        case 0x27u:
          char v296 = 0;
          unsigned int v297 = 0;
          uint64_t v298 = 0;
          while (2)
          {
            uint64_t v299 = *v4;
            uint64_t v300 = *(void *)(a2 + v299);
            unint64_t v301 = v300 + 1;
            if (v300 == -1 || v301 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v302 = *(unsigned char *)(*(void *)(a2 + *v8) + v300);
              *(void *)(a2 + v299) = v301;
              v298 |= (unint64_t)(v302 & 0x7F) << v296;
              if (v302 < 0)
              {
                v296 += 7;
                BOOL v16 = v297++ >= 9;
                if (v16)
                {
                  uint64_t v303 = 0;
                  goto LABEL_664;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v303 = 0;
          }
          else {
            uint64_t v303 = v298;
          }
LABEL_664:
          [a1 setCountBigramPrefixMatchInTextContent:v303];
          continue;
        case 0x28u:
          char v304 = 0;
          unsigned int v305 = 0;
          uint64_t v306 = 0;
          while (2)
          {
            uint64_t v307 = *v4;
            uint64_t v308 = *(void *)(a2 + v307);
            unint64_t v309 = v308 + 1;
            if (v308 == -1 || v309 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v310 = *(unsigned char *)(*(void *)(a2 + *v8) + v308);
              *(void *)(a2 + v307) = v309;
              v306 |= (unint64_t)(v310 & 0x7F) << v304;
              if (v310 < 0)
              {
                v304 += 7;
                BOOL v16 = v305++ >= 9;
                if (v16)
                {
                  uint64_t v311 = 0;
                  goto LABEL_669;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v311 = 0;
          }
          else {
            uint64_t v311 = v306;
          }
LABEL_669:
          [a1 setCountNgramPrefixMatchInTextContent:v311];
          continue;
        case 0x29u:
          char v312 = 0;
          unsigned int v313 = 0;
          uint64_t v314 = 0;
          while (2)
          {
            uint64_t v315 = *v4;
            uint64_t v316 = *(void *)(a2 + v315);
            unint64_t v317 = v316 + 1;
            if (v316 == -1 || v317 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v318 = *(unsigned char *)(*(void *)(a2 + *v8) + v316);
              *(void *)(a2 + v315) = v317;
              v314 |= (unint64_t)(v318 & 0x7F) << v312;
              if (v318 < 0)
              {
                v312 += 7;
                BOOL v16 = v313++ >= 9;
                if (v16)
                {
                  uint64_t v319 = 0;
                  goto LABEL_674;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v319 = 0;
          }
          else {
            uint64_t v319 = v314;
          }
LABEL_674:
          [a1 setCountUnigramMatchInRecipients:v319];
          continue;
        case 0x2Au:
          char v320 = 0;
          unsigned int v321 = 0;
          uint64_t v322 = 0;
          while (2)
          {
            uint64_t v323 = *v4;
            uint64_t v324 = *(void *)(a2 + v323);
            unint64_t v325 = v324 + 1;
            if (v324 == -1 || v325 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v326 = *(unsigned char *)(*(void *)(a2 + *v8) + v324);
              *(void *)(a2 + v323) = v325;
              v322 |= (unint64_t)(v326 & 0x7F) << v320;
              if (v326 < 0)
              {
                v320 += 7;
                BOOL v16 = v321++ >= 9;
                if (v16)
                {
                  uint64_t v327 = 0;
                  goto LABEL_679;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v327 = 0;
          }
          else {
            uint64_t v327 = v322;
          }
LABEL_679:
          [a1 setCountBigramMatchInRecipients:v327];
          continue;
        case 0x2Bu:
          char v328 = 0;
          unsigned int v329 = 0;
          uint64_t v330 = 0;
          while (2)
          {
            uint64_t v331 = *v4;
            uint64_t v332 = *(void *)(a2 + v331);
            unint64_t v333 = v332 + 1;
            if (v332 == -1 || v333 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v334 = *(unsigned char *)(*(void *)(a2 + *v8) + v332);
              *(void *)(a2 + v331) = v333;
              v330 |= (unint64_t)(v334 & 0x7F) << v328;
              if (v334 < 0)
              {
                v328 += 7;
                BOOL v16 = v329++ >= 9;
                if (v16)
                {
                  uint64_t v335 = 0;
                  goto LABEL_684;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v335 = 0;
          }
          else {
            uint64_t v335 = v330;
          }
LABEL_684:
          [a1 setCountNgramMatchInRecipients:v335];
          continue;
        case 0x2Cu:
          char v336 = 0;
          unsigned int v337 = 0;
          uint64_t v338 = 0;
          while (2)
          {
            uint64_t v339 = *v4;
            uint64_t v340 = *(void *)(a2 + v339);
            unint64_t v341 = v340 + 1;
            if (v340 == -1 || v341 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v342 = *(unsigned char *)(*(void *)(a2 + *v8) + v340);
              *(void *)(a2 + v339) = v341;
              v338 |= (unint64_t)(v342 & 0x7F) << v336;
              if (v342 < 0)
              {
                v336 += 7;
                BOOL v16 = v337++ >= 9;
                if (v16)
                {
                  uint64_t v343 = 0;
                  goto LABEL_689;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v343 = 0;
          }
          else {
            uint64_t v343 = v338;
          }
LABEL_689:
          [a1 setCountUnigramPrefixMatchInRecipients:v343];
          continue;
        case 0x2Du:
          char v344 = 0;
          unsigned int v345 = 0;
          uint64_t v346 = 0;
          while (2)
          {
            uint64_t v347 = *v4;
            uint64_t v348 = *(void *)(a2 + v347);
            unint64_t v349 = v348 + 1;
            if (v348 == -1 || v349 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v350 = *(unsigned char *)(*(void *)(a2 + *v8) + v348);
              *(void *)(a2 + v347) = v349;
              v346 |= (unint64_t)(v350 & 0x7F) << v344;
              if (v350 < 0)
              {
                v344 += 7;
                BOOL v16 = v345++ >= 9;
                if (v16)
                {
                  uint64_t v351 = 0;
                  goto LABEL_694;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v351 = 0;
          }
          else {
            uint64_t v351 = v346;
          }
LABEL_694:
          [a1 setCountBigramPrefixMatchInRecipients:v351];
          continue;
        case 0x2Eu:
          char v352 = 0;
          unsigned int v353 = 0;
          uint64_t v354 = 0;
          while (2)
          {
            uint64_t v355 = *v4;
            uint64_t v356 = *(void *)(a2 + v355);
            unint64_t v357 = v356 + 1;
            if (v356 == -1 || v357 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v358 = *(unsigned char *)(*(void *)(a2 + *v8) + v356);
              *(void *)(a2 + v355) = v357;
              v354 |= (unint64_t)(v358 & 0x7F) << v352;
              if (v358 < 0)
              {
                v352 += 7;
                BOOL v16 = v353++ >= 9;
                if (v16)
                {
                  uint64_t v359 = 0;
                  goto LABEL_699;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v359 = 0;
          }
          else {
            uint64_t v359 = v354;
          }
LABEL_699:
          [a1 setCountNgramPrefixMatchInRecipients:v359];
          continue;
        case 0x2Fu:
          char v360 = 0;
          unsigned int v361 = 0;
          uint64_t v362 = 0;
          while (2)
          {
            uint64_t v363 = *v4;
            uint64_t v364 = *(void *)(a2 + v363);
            unint64_t v365 = v364 + 1;
            if (v364 == -1 || v365 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v366 = *(unsigned char *)(*(void *)(a2 + *v8) + v364);
              *(void *)(a2 + v363) = v365;
              v362 |= (unint64_t)(v366 & 0x7F) << v360;
              if (v366 < 0)
              {
                v360 += 7;
                BOOL v16 = v361++ >= 9;
                if (v16)
                {
                  uint64_t v367 = 0;
                  goto LABEL_704;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v367 = 0;
          }
          else {
            uint64_t v367 = v362;
          }
LABEL_704:
          [a1 setCountUnigramMatchInRecipientEmailAddresses:v367];
          continue;
        case 0x30u:
          char v368 = 0;
          unsigned int v369 = 0;
          uint64_t v370 = 0;
          while (2)
          {
            uint64_t v371 = *v4;
            uint64_t v372 = *(void *)(a2 + v371);
            unint64_t v373 = v372 + 1;
            if (v372 == -1 || v373 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v374 = *(unsigned char *)(*(void *)(a2 + *v8) + v372);
              *(void *)(a2 + v371) = v373;
              v370 |= (unint64_t)(v374 & 0x7F) << v368;
              if (v374 < 0)
              {
                v368 += 7;
                BOOL v16 = v369++ >= 9;
                if (v16)
                {
                  uint64_t v375 = 0;
                  goto LABEL_709;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v375 = 0;
          }
          else {
            uint64_t v375 = v370;
          }
LABEL_709:
          [a1 setCountBigramMatchInRecipientEmailAddresses:v375];
          continue;
        case 0x31u:
          char v376 = 0;
          unsigned int v377 = 0;
          uint64_t v378 = 0;
          while (2)
          {
            uint64_t v379 = *v4;
            uint64_t v380 = *(void *)(a2 + v379);
            unint64_t v381 = v380 + 1;
            if (v380 == -1 || v381 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v382 = *(unsigned char *)(*(void *)(a2 + *v8) + v380);
              *(void *)(a2 + v379) = v381;
              v378 |= (unint64_t)(v382 & 0x7F) << v376;
              if (v382 < 0)
              {
                v376 += 7;
                BOOL v16 = v377++ >= 9;
                if (v16)
                {
                  uint64_t v383 = 0;
                  goto LABEL_714;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v383 = 0;
          }
          else {
            uint64_t v383 = v378;
          }
LABEL_714:
          [a1 setCountNgramMatchInRecipientEmailAddresses:v383];
          continue;
        case 0x32u:
          char v384 = 0;
          unsigned int v385 = 0;
          uint64_t v386 = 0;
          while (2)
          {
            uint64_t v387 = *v4;
            uint64_t v388 = *(void *)(a2 + v387);
            unint64_t v389 = v388 + 1;
            if (v388 == -1 || v389 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v390 = *(unsigned char *)(*(void *)(a2 + *v8) + v388);
              *(void *)(a2 + v387) = v389;
              v386 |= (unint64_t)(v390 & 0x7F) << v384;
              if (v390 < 0)
              {
                v384 += 7;
                BOOL v16 = v385++ >= 9;
                if (v16)
                {
                  uint64_t v391 = 0;
                  goto LABEL_719;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v391 = 0;
          }
          else {
            uint64_t v391 = v386;
          }
LABEL_719:
          [a1 setCountUnigramPrefixMatchInRecipientEmailAddresses:v391];
          continue;
        case 0x33u:
          char v392 = 0;
          unsigned int v393 = 0;
          uint64_t v394 = 0;
          while (2)
          {
            uint64_t v395 = *v4;
            uint64_t v396 = *(void *)(a2 + v395);
            unint64_t v397 = v396 + 1;
            if (v396 == -1 || v397 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v398 = *(unsigned char *)(*(void *)(a2 + *v8) + v396);
              *(void *)(a2 + v395) = v397;
              v394 |= (unint64_t)(v398 & 0x7F) << v392;
              if (v398 < 0)
              {
                v392 += 7;
                BOOL v16 = v393++ >= 9;
                if (v16)
                {
                  uint64_t v399 = 0;
                  goto LABEL_724;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v399 = 0;
          }
          else {
            uint64_t v399 = v394;
          }
LABEL_724:
          [a1 setCountBigramPrefixMatchInRecipientEmailAddresses:v399];
          continue;
        case 0x34u:
          char v400 = 0;
          unsigned int v401 = 0;
          uint64_t v402 = 0;
          while (2)
          {
            uint64_t v403 = *v4;
            uint64_t v404 = *(void *)(a2 + v403);
            unint64_t v405 = v404 + 1;
            if (v404 == -1 || v405 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v406 = *(unsigned char *)(*(void *)(a2 + *v8) + v404);
              *(void *)(a2 + v403) = v405;
              v402 |= (unint64_t)(v406 & 0x7F) << v400;
              if (v406 < 0)
              {
                v400 += 7;
                BOOL v16 = v401++ >= 9;
                if (v16)
                {
                  uint64_t v407 = 0;
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v407 = 0;
          }
          else {
            uint64_t v407 = v402;
          }
LABEL_729:
          [a1 setCountNgramPrefixMatchInRecipientEmailAddresses:v407];
          continue;
        case 0x35u:
          char v408 = 0;
          unsigned int v409 = 0;
          uint64_t v410 = 0;
          while (2)
          {
            uint64_t v411 = *v4;
            uint64_t v412 = *(void *)(a2 + v411);
            unint64_t v413 = v412 + 1;
            if (v412 == -1 || v413 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v414 = *(unsigned char *)(*(void *)(a2 + *v8) + v412);
              *(void *)(a2 + v411) = v413;
              v410 |= (unint64_t)(v414 & 0x7F) << v408;
              if (v414 < 0)
              {
                v408 += 7;
                BOOL v16 = v409++ >= 9;
                if (v16)
                {
                  uint64_t v415 = 0;
                  goto LABEL_734;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v415 = 0;
          }
          else {
            uint64_t v415 = v410;
          }
LABEL_734:
          [a1 setCountUnigramMatchInEmailAddresses:v415];
          continue;
        case 0x36u:
          char v416 = 0;
          unsigned int v417 = 0;
          uint64_t v418 = 0;
          while (2)
          {
            uint64_t v419 = *v4;
            uint64_t v420 = *(void *)(a2 + v419);
            unint64_t v421 = v420 + 1;
            if (v420 == -1 || v421 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v422 = *(unsigned char *)(*(void *)(a2 + *v8) + v420);
              *(void *)(a2 + v419) = v421;
              v418 |= (unint64_t)(v422 & 0x7F) << v416;
              if (v422 < 0)
              {
                v416 += 7;
                BOOL v16 = v417++ >= 9;
                if (v16)
                {
                  uint64_t v423 = 0;
                  goto LABEL_739;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v423 = 0;
          }
          else {
            uint64_t v423 = v418;
          }
LABEL_739:
          [a1 setCountBigramMatchInEmailAddresses:v423];
          continue;
        case 0x37u:
          char v424 = 0;
          unsigned int v425 = 0;
          uint64_t v426 = 0;
          while (2)
          {
            uint64_t v427 = *v4;
            uint64_t v428 = *(void *)(a2 + v427);
            unint64_t v429 = v428 + 1;
            if (v428 == -1 || v429 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v430 = *(unsigned char *)(*(void *)(a2 + *v8) + v428);
              *(void *)(a2 + v427) = v429;
              v426 |= (unint64_t)(v430 & 0x7F) << v424;
              if (v430 < 0)
              {
                v424 += 7;
                BOOL v16 = v425++ >= 9;
                if (v16)
                {
                  uint64_t v431 = 0;
                  goto LABEL_744;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v431 = 0;
          }
          else {
            uint64_t v431 = v426;
          }
LABEL_744:
          [a1 setCountNgramMatchInEmailAddresses:v431];
          continue;
        case 0x38u:
          char v432 = 0;
          unsigned int v433 = 0;
          uint64_t v434 = 0;
          while (2)
          {
            uint64_t v435 = *v4;
            uint64_t v436 = *(void *)(a2 + v435);
            unint64_t v437 = v436 + 1;
            if (v436 == -1 || v437 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v438 = *(unsigned char *)(*(void *)(a2 + *v8) + v436);
              *(void *)(a2 + v435) = v437;
              v434 |= (unint64_t)(v438 & 0x7F) << v432;
              if (v438 < 0)
              {
                v432 += 7;
                BOOL v16 = v433++ >= 9;
                if (v16)
                {
                  uint64_t v439 = 0;
                  goto LABEL_749;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v439 = 0;
          }
          else {
            uint64_t v439 = v434;
          }
LABEL_749:
          [a1 setCountUnigramPrefixMatchInEmailAddresses:v439];
          continue;
        case 0x39u:
          char v440 = 0;
          unsigned int v441 = 0;
          uint64_t v442 = 0;
          while (2)
          {
            uint64_t v443 = *v4;
            uint64_t v444 = *(void *)(a2 + v443);
            unint64_t v445 = v444 + 1;
            if (v444 == -1 || v445 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v446 = *(unsigned char *)(*(void *)(a2 + *v8) + v444);
              *(void *)(a2 + v443) = v445;
              v442 |= (unint64_t)(v446 & 0x7F) << v440;
              if (v446 < 0)
              {
                v440 += 7;
                BOOL v16 = v441++ >= 9;
                if (v16)
                {
                  uint64_t v447 = 0;
                  goto LABEL_754;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v447 = 0;
          }
          else {
            uint64_t v447 = v442;
          }
LABEL_754:
          [a1 setCountBigramPrefixMatchInEmailAddresses:v447];
          continue;
        case 0x3Au:
          char v448 = 0;
          unsigned int v449 = 0;
          uint64_t v450 = 0;
          while (2)
          {
            uint64_t v451 = *v4;
            uint64_t v452 = *(void *)(a2 + v451);
            unint64_t v453 = v452 + 1;
            if (v452 == -1 || v453 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v454 = *(unsigned char *)(*(void *)(a2 + *v8) + v452);
              *(void *)(a2 + v451) = v453;
              v450 |= (unint64_t)(v454 & 0x7F) << v448;
              if (v454 < 0)
              {
                v448 += 7;
                BOOL v16 = v449++ >= 9;
                if (v16)
                {
                  uint64_t v455 = 0;
                  goto LABEL_759;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v455 = 0;
          }
          else {
            uint64_t v455 = v450;
          }
LABEL_759:
          [a1 setCountNgramPrefixMatchInEmailAddresses:v455];
          continue;
        case 0x3Bu:
          char v456 = 0;
          unsigned int v457 = 0;
          uint64_t v458 = 0;
          while (2)
          {
            uint64_t v459 = *v4;
            uint64_t v460 = *(void *)(a2 + v459);
            unint64_t v461 = v460 + 1;
            if (v460 == -1 || v461 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v462 = *(unsigned char *)(*(void *)(a2 + *v8) + v460);
              *(void *)(a2 + v459) = v461;
              v458 |= (unint64_t)(v462 & 0x7F) << v456;
              if (v462 < 0)
              {
                v456 += 7;
                BOOL v16 = v457++ >= 9;
                if (v16)
                {
                  uint64_t v463 = 0;
                  goto LABEL_764;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v463 = 0;
          }
          else {
            uint64_t v463 = v458;
          }
LABEL_764:
          [a1 setCountUnigramMatchInAttachmentTypes:v463];
          continue;
        case 0x3Cu:
          char v464 = 0;
          unsigned int v465 = 0;
          uint64_t v466 = 0;
          while (2)
          {
            uint64_t v467 = *v4;
            uint64_t v468 = *(void *)(a2 + v467);
            unint64_t v469 = v468 + 1;
            if (v468 == -1 || v469 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v470 = *(unsigned char *)(*(void *)(a2 + *v8) + v468);
              *(void *)(a2 + v467) = v469;
              v466 |= (unint64_t)(v470 & 0x7F) << v464;
              if (v470 < 0)
              {
                v464 += 7;
                BOOL v16 = v465++ >= 9;
                if (v16)
                {
                  uint64_t v471 = 0;
                  goto LABEL_769;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v471 = 0;
          }
          else {
            uint64_t v471 = v466;
          }
LABEL_769:
          [a1 setCountBigramMatchInAttachmentTypes:v471];
          continue;
        case 0x3Du:
          char v472 = 0;
          unsigned int v473 = 0;
          uint64_t v474 = 0;
          while (2)
          {
            uint64_t v475 = *v4;
            uint64_t v476 = *(void *)(a2 + v475);
            unint64_t v477 = v476 + 1;
            if (v476 == -1 || v477 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v478 = *(unsigned char *)(*(void *)(a2 + *v8) + v476);
              *(void *)(a2 + v475) = v477;
              v474 |= (unint64_t)(v478 & 0x7F) << v472;
              if (v478 < 0)
              {
                v472 += 7;
                BOOL v16 = v473++ >= 9;
                if (v16)
                {
                  uint64_t v479 = 0;
                  goto LABEL_774;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v479 = 0;
          }
          else {
            uint64_t v479 = v474;
          }
LABEL_774:
          [a1 setCountNgramMatchInAttachmentTypes:v479];
          continue;
        case 0x3Eu:
          char v480 = 0;
          unsigned int v481 = 0;
          uint64_t v482 = 0;
          while (2)
          {
            uint64_t v483 = *v4;
            uint64_t v484 = *(void *)(a2 + v483);
            unint64_t v485 = v484 + 1;
            if (v484 == -1 || v485 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v486 = *(unsigned char *)(*(void *)(a2 + *v8) + v484);
              *(void *)(a2 + v483) = v485;
              v482 |= (unint64_t)(v486 & 0x7F) << v480;
              if (v486 < 0)
              {
                v480 += 7;
                BOOL v16 = v481++ >= 9;
                if (v16)
                {
                  uint64_t v487 = 0;
                  goto LABEL_779;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v487 = 0;
          }
          else {
            uint64_t v487 = v482;
          }
LABEL_779:
          [a1 setCountUnigramPrefixMatchInAttachmentTypes:v487];
          continue;
        case 0x3Fu:
          char v488 = 0;
          unsigned int v489 = 0;
          uint64_t v490 = 0;
          while (2)
          {
            uint64_t v491 = *v4;
            uint64_t v492 = *(void *)(a2 + v491);
            unint64_t v493 = v492 + 1;
            if (v492 == -1 || v493 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v494 = *(unsigned char *)(*(void *)(a2 + *v8) + v492);
              *(void *)(a2 + v491) = v493;
              v490 |= (unint64_t)(v494 & 0x7F) << v488;
              if (v494 < 0)
              {
                v488 += 7;
                BOOL v16 = v489++ >= 9;
                if (v16)
                {
                  uint64_t v495 = 0;
                  goto LABEL_784;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v495 = 0;
          }
          else {
            uint64_t v495 = v490;
          }
LABEL_784:
          [a1 setCountBigramPrefixMatchInAttachmentTypes:v495];
          continue;
        case 0x40u:
          char v496 = 0;
          unsigned int v497 = 0;
          uint64_t v498 = 0;
          while (2)
          {
            uint64_t v499 = *v4;
            uint64_t v500 = *(void *)(a2 + v499);
            unint64_t v501 = v500 + 1;
            if (v500 == -1 || v501 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v502 = *(unsigned char *)(*(void *)(a2 + *v8) + v500);
              *(void *)(a2 + v499) = v501;
              v498 |= (unint64_t)(v502 & 0x7F) << v496;
              if (v502 < 0)
              {
                v496 += 7;
                BOOL v16 = v497++ >= 9;
                if (v16)
                {
                  uint64_t v503 = 0;
                  goto LABEL_789;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v503 = 0;
          }
          else {
            uint64_t v503 = v498;
          }
LABEL_789:
          [a1 setCountNgramPrefixMatchInAttachmentTypes:v503];
          continue;
        case 0x41u:
          char v504 = 0;
          unsigned int v505 = 0;
          uint64_t v506 = 0;
          while (2)
          {
            uint64_t v507 = *v4;
            uint64_t v508 = *(void *)(a2 + v507);
            unint64_t v509 = v508 + 1;
            if (v508 == -1 || v509 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v510 = *(unsigned char *)(*(void *)(a2 + *v8) + v508);
              *(void *)(a2 + v507) = v509;
              v506 |= (unint64_t)(v510 & 0x7F) << v504;
              if (v510 < 0)
              {
                v504 += 7;
                BOOL v16 = v505++ >= 9;
                if (v16)
                {
                  uint64_t v511 = 0;
                  goto LABEL_794;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v511 = 0;
          }
          else {
            uint64_t v511 = v506;
          }
LABEL_794:
          [a1 setCountUnigramMatchInAttachmentNames:v511];
          continue;
        case 0x42u:
          char v512 = 0;
          unsigned int v513 = 0;
          uint64_t v514 = 0;
          while (2)
          {
            uint64_t v515 = *v4;
            uint64_t v516 = *(void *)(a2 + v515);
            unint64_t v517 = v516 + 1;
            if (v516 == -1 || v517 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v518 = *(unsigned char *)(*(void *)(a2 + *v8) + v516);
              *(void *)(a2 + v515) = v517;
              v514 |= (unint64_t)(v518 & 0x7F) << v512;
              if (v518 < 0)
              {
                v512 += 7;
                BOOL v16 = v513++ >= 9;
                if (v16)
                {
                  uint64_t v519 = 0;
                  goto LABEL_799;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v519 = 0;
          }
          else {
            uint64_t v519 = v514;
          }
LABEL_799:
          [a1 setCountBigramMatchInAttachmentNames:v519];
          continue;
        case 0x43u:
          char v520 = 0;
          unsigned int v521 = 0;
          uint64_t v522 = 0;
          while (2)
          {
            uint64_t v523 = *v4;
            uint64_t v524 = *(void *)(a2 + v523);
            unint64_t v525 = v524 + 1;
            if (v524 == -1 || v525 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v526 = *(unsigned char *)(*(void *)(a2 + *v8) + v524);
              *(void *)(a2 + v523) = v525;
              v522 |= (unint64_t)(v526 & 0x7F) << v520;
              if (v526 < 0)
              {
                v520 += 7;
                BOOL v16 = v521++ >= 9;
                if (v16)
                {
                  uint64_t v527 = 0;
                  goto LABEL_804;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v527 = 0;
          }
          else {
            uint64_t v527 = v522;
          }
LABEL_804:
          [a1 setCountNgramMatchInAttachmentNames:v527];
          continue;
        case 0x44u:
          char v528 = 0;
          unsigned int v529 = 0;
          uint64_t v530 = 0;
          while (2)
          {
            uint64_t v531 = *v4;
            uint64_t v532 = *(void *)(a2 + v531);
            unint64_t v533 = v532 + 1;
            if (v532 == -1 || v533 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v534 = *(unsigned char *)(*(void *)(a2 + *v8) + v532);
              *(void *)(a2 + v531) = v533;
              v530 |= (unint64_t)(v534 & 0x7F) << v528;
              if (v534 < 0)
              {
                v528 += 7;
                BOOL v16 = v529++ >= 9;
                if (v16)
                {
                  uint64_t v535 = 0;
                  goto LABEL_809;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v535 = 0;
          }
          else {
            uint64_t v535 = v530;
          }
LABEL_809:
          [a1 setCountUnigramPrefixMatchInAttachmentNames:v535];
          continue;
        case 0x45u:
          char v536 = 0;
          unsigned int v537 = 0;
          uint64_t v538 = 0;
          while (2)
          {
            uint64_t v539 = *v4;
            uint64_t v540 = *(void *)(a2 + v539);
            unint64_t v541 = v540 + 1;
            if (v540 == -1 || v541 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v542 = *(unsigned char *)(*(void *)(a2 + *v8) + v540);
              *(void *)(a2 + v539) = v541;
              v538 |= (unint64_t)(v542 & 0x7F) << v536;
              if (v542 < 0)
              {
                v536 += 7;
                BOOL v16 = v537++ >= 9;
                if (v16)
                {
                  uint64_t v543 = 0;
                  goto LABEL_814;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v543 = 0;
          }
          else {
            uint64_t v543 = v538;
          }
LABEL_814:
          [a1 setCountBigramPrefixMatchInAttachmentNames:v543];
          continue;
        case 0x46u:
          char v544 = 0;
          unsigned int v545 = 0;
          uint64_t v546 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v547 = *v4;
        uint64_t v548 = *(void *)(a2 + v547);
        unint64_t v549 = v548 + 1;
        if (v548 == -1 || v549 > *(void *)(a2 + *v5)) {
          break;
        }
        char v550 = *(unsigned char *)(*(void *)(a2 + *v8) + v548);
        *(void *)(a2 + v547) = v549;
        v546 |= (unint64_t)(v550 & 0x7F) << v544;
        if ((v550 & 0x80) == 0) {
          goto LABEL_816;
        }
        v544 += 7;
        BOOL v16 = v545++ >= 9;
        if (v16)
        {
          uint64_t v551 = 0;
          goto LABEL_819;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_816:
      uint64_t v551 = *(unsigned char *)(a2 + *v6) ? 0 : v546;
LABEL_819:
      [a1 setCountNgramPrefixMatchInAttachmentNames:v551];
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBMailResultDetailsReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 1)
      {
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        while (1)
        {
          uint64_t v32 = *v4;
          uint64_t v33 = *(void *)(a2 + v32);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + *v5)) {
            break;
          }
          char v35 = *(unsigned char *)(*(void *)(a2 + *v8) + v33);
          *(void *)(a2 + v32) = v34;
          v31 |= (unint64_t)(v35 & 0x7F) << v29;
          if ((v35 & 0x80) == 0) {
            goto LABEL_46;
          }
          v29 += 7;
          BOOL v16 = v30++ >= 9;
          if (v16)
          {
            uint64_t v36 = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_46:
        uint64_t v36 = *(unsigned char *)(a2 + *v6) ? 0 : v31;
LABEL_49:
        [a1 setDataSources:v36];
      }
      else if (v20 == 2)
      {
        uint64_t v37 = *v4;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
          *(void *)(a2 + v37) = v38 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setSuggestionScore:a3];
      }
      else if (v20 == 3)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        while (1)
        {
          uint64_t v24 = *v4;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v5)) {
            break;
          }
          char v27 = *(unsigned char *)(*(void *)(a2 + *v8) + v25);
          *(void *)(a2 + v24) = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0) {
            goto LABEL_41;
          }
          v21 += 7;
          BOOL v16 = v22++ >= 9;
          if (v16)
          {
            uint64_t v28 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_41:
        uint64_t v28 = *(unsigned char *)(a2 + *v6) ? 0 : v23;
LABEL_44:
        [a1 setSkgMegadomeSpotlightIndexEntries:v28];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t _SFPBMoreResultsReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v18 = PBReaderReadString();
        [a1 setLabel:v18];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPhotosAggregatedInfoReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (1)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
            break;
          }
          char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v32;
          v29 |= (unint64_t)(v33 & 0x7F) << v27;
          if ((v33 & 0x80) == 0) {
            goto LABEL_50;
          }
          v27 += 7;
          BOOL v15 = v28++ >= 9;
          if (v15)
          {
            uint64_t v34 = 0;
            goto LABEL_53;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
        uint64_t v34 = *(unsigned char *)(a2 + *v5) ? 0 : v29;
LABEL_53:
        [a1 setTotalNumberOfAssets:v34];
      }
      else if (v18 == 2)
      {
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (1)
        {
          uint64_t v38 = *v3;
          uint64_t v39 = *(void *)(a2 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + *v4)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
          *(void *)(a2 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_55;
          }
          v35 += 7;
          BOOL v15 = v36++ >= 9;
          if (v15)
          {
            uint64_t v42 = 0;
            goto LABEL_58;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
        uint64_t v42 = *(unsigned char *)(a2 + *v5) ? 0 : v37;
LABEL_58:
        [a1 setTotalNumberOfEmbeddingMatchedAssets:v42];
      }
      else if (v18 == 3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            uint64_t v26 = 0;
            goto LABEL_48;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        uint64_t v26 = *(unsigned char *)(a2 + *v5) ? 0 : v21;
LABEL_48:
        [a1 setTotalNumberOfMetadataMatchedAssets:v26];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPhotosAttributesReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_64;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v25 = 0;
              goto LABEL_67;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_64:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v20;
          }
LABEL_67:
          [a1 setPositionIndex:v25];
          continue;
        case 2u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v29 = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_71:
          [a1 setIsEmbeddingMatched:v29 != 0];
          continue;
        case 3u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          while (2)
          {
            uint64_t v37 = *v3;
            uint64_t v38 = *(void *)(a2 + v37);
            unint64_t v39 = v38 + 1;
            if (v38 == -1 || v39 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v39;
              v36 |= (unint64_t)(v40 & 0x7F) << v34;
              if (v40 < 0)
              {
                v34 += 7;
                BOOL v15 = v35++ >= 9;
                if (v15)
                {
                  uint64_t v36 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v36 = 0;
          }
LABEL_75:
          [a1 setIsMetadataMatched:v36 != 0];
          continue;
        case 4u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (2)
          {
            uint64_t v44 = *v3;
            uint64_t v45 = *(void *)(a2 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                BOOL v15 = v42++ >= 9;
                if (v15)
                {
                  uint64_t v43 = 0;
                  goto LABEL_79;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v43 = 0;
          }
LABEL_79:
          [a1 setIsVideo:v43 != 0];
          continue;
        case 5u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (2)
          {
            uint64_t v51 = *v3;
            uint64_t v52 = *(void *)(a2 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                BOOL v15 = v49++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_83;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
LABEL_83:
          [a1 setIsFavorite:v50 != 0];
          continue;
        case 6u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v58 = *v3;
        uint64_t v59 = *(void *)(a2 + v58);
        unint64_t v60 = v59 + 1;
        if (v59 == -1 || v60 > *(void *)(a2 + *v4)) {
          break;
        }
        char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
        *(void *)(a2 + v58) = v60;
        v57 |= (unint64_t)(v61 & 0x7F) << v55;
        if ((v61 & 0x80) == 0) {
          goto LABEL_85;
        }
        v55 += 7;
        BOOL v15 = v56++ >= 9;
        if (v15)
        {
          uint64_t v62 = 0;
          goto LABEL_88;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_85:
      uint64_t v62 = *(unsigned char *)(a2 + *v5) ? 0 : v57;
LABEL_88:
      [a1 setPhotosSuggestionType:v62];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBPhotosRankingInfoReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_57;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v25 = 0;
              goto LABEL_60;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v20;
          }
LABEL_60:
          [a1 setTotalNumberOfAssetsIndexed:v25];
          continue;
        case 2u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v34 = 0;
                  goto LABEL_65;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
          else {
            uint64_t v34 = v29;
          }
LABEL_65:
          [a1 setTotalNumberOfAssetsInLibrary:v34];
          continue;
        case 3u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (2)
          {
            uint64_t v38 = *v3;
            uint64_t v39 = *(void *)(a2 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v40;
              v37 |= (unint64_t)(v41 & 0x7F) << v35;
              if (v41 < 0)
              {
                v35 += 7;
                BOOL v15 = v36++ >= 9;
                if (v15)
                {
                  uint64_t v42 = 0;
                  goto LABEL_70;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v42 = 0;
          }
          else {
            uint64_t v42 = v37;
          }
LABEL_70:
          [a1 setTotalNumberOfEmbeddingMatchedAssets:v42];
          continue;
        case 4u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          while (2)
          {
            uint64_t v46 = *v3;
            uint64_t v47 = *(void *)(a2 + v46);
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v47);
              *(void *)(a2 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v15 = v44++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
          else {
            uint64_t v50 = v45;
          }
LABEL_75:
          [a1 setTotalNumberOfMetadataMatchedAssets:v50];
          continue;
        case 5u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v54 = *v3;
        uint64_t v55 = *(void *)(a2 + v54);
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)(a2 + *v4)) {
          break;
        }
        char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
        *(void *)(a2 + v54) = v56;
        v53 |= (unint64_t)(v57 & 0x7F) << v51;
        if ((v57 & 0x80) == 0) {
          goto LABEL_77;
        }
        v51 += 7;
        BOOL v15 = v52++ >= 9;
        if (v15)
        {
          uint64_t v58 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_77:
      uint64_t v58 = *(unsigned char *)(a2 + *v5) ? 0 : v53;
LABEL_80:
      [a1 setAssetEstimationOffAmount:v58];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBProductReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setIdentifier:v18];
        goto LABEL_27;
      case 2u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setProductIdentifier:v18];
        goto LABEL_27;
      case 3u:
        char v18 = objc_alloc_init(_SFPBURL);
        if PBReaderPlaceMark() && (_SFPBURLReadFrom(v18, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setAvailabilityURL:", v18, 0, 0);
LABEL_27:

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        PBReaderReadString();
        char v18 = (_SFPBURL *)objc_claimAutoreleasedReturnValue();
        [a1 setDisplayName:v18];
        goto LABEL_27;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (2)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if (v26 < 0)
            {
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_38:
        [a1 setBuyable:v22 != 0];
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t _SFPBProductInventoryReadFrom(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
  id v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v6) == 0;
  }
  char v8 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v6)) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = *v4;
      uint64_t v13 = *(void *)(a2 + v12);
      unint64_t v14 = v13 + 1;
      if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
        break;
      }
      char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
      *(void *)(a2 + v12) = v14;
      v11 |= (unint64_t)(v15 & 0x7F) << v9;
      if ((v15 & 0x80) == 0) {
        goto LABEL_12;
      }
      v9 += 7;
      BOOL v16 = v10++ >= 9;
      if (v16)
      {
        unint64_t v11 = 0;
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
    uint64_t v17 = *v6;
    int v18 = *(unsigned __int8 *)(a2 + v17);
    if (*(unsigned char *)(a2 + v17)) {
      unint64_t v11 = 0;
    }
LABEL_14:
    if (v18 || (v11 & 7) == 4) {
      return *(unsigned char *)(a2 + *v6) == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v23 = *v4;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_53;
          }
          v20 += 7;
          BOOL v16 = v21++ >= 9;
          if (v16)
          {
            uint64_t v27 = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = v22;
        }
LABEL_56:
        [a1 setType:v27];
        goto LABEL_69;
      case 2u:
        PBReaderReadString();
        uint64_t v29 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setStoreId:v29];
        goto LABEL_51;
      case 3u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        while (2)
        {
          uint64_t v33 = *v4;
          uint64_t v34 = *(void *)(a2 + v33);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v35;
            v32 |= (unint64_t)(v36 & 0x7F) << v30;
            if (v36 < 0)
            {
              v30 += 7;
              BOOL v16 = v31++ >= 9;
              if (v16)
              {
                uint64_t v37 = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v37 = 0;
        }
        else {
          uint64_t v37 = v32;
        }
LABEL_61:
        [a1 setAvailabilityStatus:v37];
        goto LABEL_69;
      case 4u:
        uint64_t v38 = *v4;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFFBLL && v39 + 4 <= *(void *)(a2 + *v5))
        {
          LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v39);
          *(void *)(a2 + v38) = v39 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + v17) = 1;
          a3 = 0.0;
        }
        [a1 setDistance:a3];
        goto LABEL_69;
      case 5u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        while (2)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v5))
          {
            *(unsigned char *)(a2 + *v6) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v8) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v16 = v41++ >= 9;
              if (v16)
              {
                uint64_t v47 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v6)) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v42;
        }
LABEL_66:
        [a1 setDistanceUnit:v47];
        goto LABEL_69;
      case 6u:
        uint64_t v29 = objc_alloc_init(_SFPBDate);
        if PBReaderPlaceMark() && (_SFPBDateReadFrom(v29, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setTimestamp:", v29, 0, 0);
LABEL_51:

LABEL_69:
          if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
            return *(unsigned char *)(a2 + *v6) == 0;
          }
          continue;
        }

        return 0;
      case 7u:
        PBReaderReadString();
        uint64_t v29 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setStoreName:v29];
        goto LABEL_51;
      case 8u:
        PBReaderReadString();
        uint64_t v29 = (_SFPBDate *)objc_claimAutoreleasedReturnValue();
        [a1 setStoreAddress:v29];
        goto LABEL_51;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_69;
    }
  }
}

BOOL _SFPBProductInventoryResultReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        int v18 = (_SFPBProductInventory *)objc_claimAutoreleasedReturnValue();
        [a1 setProductIdentifier:v18];
LABEL_25:

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v18 = objc_alloc_init(_SFPBProductInventory);
    if (!PBReaderPlaceMark() || !_SFPBProductInventoryReadFrom(v18, a2, v19))
    {

      return 0;
    }
    PBReaderRecallMark();
    if (v18) {
      objc_msgSend(a1, "addAvailability:", v18, 0, 0);
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBProductAvailabilityReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v18 = objc_alloc_init(_SFPBProductInventoryResult);
        if (!PBReaderPlaceMark() || !_SFPBProductInventoryResultReadFrom(v18, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v18) {
          objc_msgSend(a1, "addResults:", v18, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBQueryUnderstandingParseReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_155;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v25 = 0;
              goto LABEL_158;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_155:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v20;
          }
LABEL_158:
          [a1 setQueryIntentType:v25];
          continue;
        case 2u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v29 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_162:
          [a1 setHasUnspecifiedTokens:v29 != 0];
          continue;
        case 3u:
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          while (2)
          {
            uint64_t v37 = *v3;
            uint64_t v38 = *(void *)(a2 + v37);
            unint64_t v39 = v38 + 1;
            if (v38 == -1 || v39 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
              *(void *)(a2 + v37) = v39;
              v36 |= (unint64_t)(v40 & 0x7F) << v34;
              if (v40 < 0)
              {
                v34 += 7;
                BOOL v15 = v35++ >= 9;
                if (v15)
                {
                  uint64_t v36 = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v36 = 0;
          }
LABEL_166:
          [a1 setHasSortCriteriaTokens:v36 != 0];
          continue;
        case 4u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (2)
          {
            uint64_t v44 = *v3;
            uint64_t v45 = *(void *)(a2 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                BOOL v15 = v42++ >= 9;
                if (v15)
                {
                  uint64_t v43 = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v43 = 0;
          }
LABEL_170:
          [a1 setHasLocationTokens:v43 != 0];
          continue;
        case 5u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (2)
          {
            uint64_t v51 = *v3;
            uint64_t v52 = *(void *)(a2 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v54 = *(unsigned char *)(*(void *)(a2 + *v7) + v52);
              *(void *)(a2 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                BOOL v15 = v49++ >= 9;
                if (v15)
                {
                  uint64_t v50 = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v50 = 0;
          }
LABEL_174:
          [a1 setHasActionTokens:v50 != 0];
          continue;
        case 6u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          while (2)
          {
            uint64_t v58 = *v3;
            uint64_t v59 = *(void *)(a2 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
              *(void *)(a2 + v58) = v60;
              v57 |= (unint64_t)(v61 & 0x7F) << v55;
              if (v61 < 0)
              {
                v55 += 7;
                BOOL v15 = v56++ >= 9;
                if (v15)
                {
                  uint64_t v57 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v57 = 0;
          }
LABEL_178:
          [a1 setHasMediaTypeTokens:v57 != 0];
          continue;
        case 7u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          while (2)
          {
            uint64_t v65 = *v3;
            uint64_t v66 = *(void *)(a2 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v68 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
              *(void *)(a2 + v65) = v67;
              v64 |= (unint64_t)(v68 & 0x7F) << v62;
              if (v68 < 0)
              {
                v62 += 7;
                BOOL v15 = v63++ >= 9;
                if (v15)
                {
                  uint64_t v64 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v64 = 0;
          }
LABEL_182:
          [a1 setHasVisualQualityTokens:v64 != 0];
          continue;
        case 8u:
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v71 = 0;
          while (2)
          {
            uint64_t v72 = *v3;
            uint64_t v73 = *(void *)(a2 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v75 = *(unsigned char *)(*(void *)(a2 + *v7) + v73);
              *(void *)(a2 + v72) = v74;
              v71 |= (unint64_t)(v75 & 0x7F) << v69;
              if (v75 < 0)
              {
                v69 += 7;
                BOOL v15 = v70++ >= 9;
                if (v15)
                {
                  uint64_t v71 = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v71 = 0;
          }
LABEL_186:
          [a1 setHasNounTokens:v71 != 0];
          continue;
        case 9u:
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v78 = 0;
          while (2)
          {
            uint64_t v79 = *v3;
            uint64_t v80 = *(void *)(a2 + v79);
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v82 = *(unsigned char *)(*(void *)(a2 + *v7) + v80);
              *(void *)(a2 + v79) = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                BOOL v15 = v77++ >= 9;
                if (v15)
                {
                  uint64_t v78 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v78 = 0;
          }
LABEL_190:
          [a1 setHasTimeTokens:v78 != 0];
          continue;
        case 0xAu:
          char v83 = 0;
          unsigned int v84 = 0;
          uint64_t v85 = 0;
          while (2)
          {
            uint64_t v86 = *v3;
            uint64_t v87 = *(void *)(a2 + v86);
            unint64_t v88 = v87 + 1;
            if (v87 == -1 || v88 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v89 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
              *(void *)(a2 + v86) = v88;
              v85 |= (unint64_t)(v89 & 0x7F) << v83;
              if (v89 < 0)
              {
                v83 += 7;
                BOOL v15 = v84++ >= 9;
                if (v15)
                {
                  uint64_t v85 = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v85 = 0;
          }
LABEL_194:
          [a1 setHasEventTokens:v85 != 0];
          continue;
        case 0xBu:
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          while (2)
          {
            uint64_t v93 = *v3;
            uint64_t v94 = *(void *)(a2 + v93);
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)(a2 + *v7) + v94);
              *(void *)(a2 + v93) = v95;
              v92 |= (unint64_t)(v96 & 0x7F) << v90;
              if (v96 < 0)
              {
                v90 += 7;
                BOOL v15 = v91++ >= 9;
                if (v15)
                {
                  uint64_t v92 = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v92 = 0;
          }
LABEL_198:
          [a1 setHasGenericLocationTokens:v92 != 0];
          continue;
        case 0xCu:
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v99 = 0;
          while (2)
          {
            uint64_t v100 = *v3;
            uint64_t v101 = *(void *)(a2 + v100);
            unint64_t v102 = v101 + 1;
            if (v101 == -1 || v102 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v103 = *(unsigned char *)(*(void *)(a2 + *v7) + v101);
              *(void *)(a2 + v100) = v102;
              v99 |= (unint64_t)(v103 & 0x7F) << v97;
              if (v103 < 0)
              {
                v97 += 7;
                BOOL v15 = v98++ >= 9;
                if (v15)
                {
                  uint64_t v99 = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v99 = 0;
          }
LABEL_202:
          [a1 setHasCaptureDeviceTokens:v99 != 0];
          continue;
        case 0xDu:
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v106 = 0;
          while (2)
          {
            uint64_t v107 = *v3;
            uint64_t v108 = *(void *)(a2 + v107);
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v110 = *(unsigned char *)(*(void *)(a2 + *v7) + v108);
              *(void *)(a2 + v107) = v109;
              v106 |= (unint64_t)(v110 & 0x7F) << v104;
              if (v110 < 0)
              {
                v104 += 7;
                BOOL v15 = v105++ >= 9;
                if (v15)
                {
                  uint64_t v106 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v106 = 0;
          }
LABEL_206:
          [a1 setHasFavoritedTokens:v106 != 0];
          continue;
        case 0xEu:
          char v111 = 0;
          unsigned int v112 = 0;
          uint64_t v113 = 0;
          while (2)
          {
            uint64_t v114 = *v3;
            uint64_t v115 = *(void *)(a2 + v114);
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v117 = *(unsigned char *)(*(void *)(a2 + *v7) + v115);
              *(void *)(a2 + v114) = v116;
              v113 |= (unint64_t)(v117 & 0x7F) << v111;
              if (v117 < 0)
              {
                v111 += 7;
                BOOL v15 = v112++ >= 9;
                if (v15)
                {
                  uint64_t v113 = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v113 = 0;
          }
LABEL_210:
          [a1 setHasSourceAppTokens:v113 != 0];
          continue;
        case 0xFu:
          char v118 = 0;
          unsigned int v119 = 0;
          uint64_t v120 = 0;
          while (2)
          {
            uint64_t v121 = *v3;
            uint64_t v122 = *(void *)(a2 + v121);
            unint64_t v123 = v122 + 1;
            if (v122 == -1 || v123 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v124 = *(unsigned char *)(*(void *)(a2 + *v7) + v122);
              *(void *)(a2 + v121) = v123;
              v120 |= (unint64_t)(v124 & 0x7F) << v118;
              if (v124 < 0)
              {
                v118 += 7;
                BOOL v15 = v119++ >= 9;
                if (v15)
                {
                  uint64_t v120 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v120 = 0;
          }
LABEL_214:
          [a1 setHasPersonTokens:v120 != 0];
          continue;
        case 0x10u:
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v127 = 0;
          while (2)
          {
            uint64_t v128 = *v3;
            uint64_t v129 = *(void *)(a2 + v128);
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v131 = *(unsigned char *)(*(void *)(a2 + *v7) + v129);
              *(void *)(a2 + v128) = v130;
              v127 |= (unint64_t)(v131 & 0x7F) << v125;
              if (v131 < 0)
              {
                v125 += 7;
                BOOL v15 = v126++ >= 9;
                if (v15)
                {
                  uint64_t v127 = 0;
                  goto LABEL_218;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v127 = 0;
          }
LABEL_218:
          [a1 setHasPersonSenderTokens:v127 != 0];
          continue;
        case 0x11u:
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v134 = 0;
          while (2)
          {
            uint64_t v135 = *v3;
            uint64_t v136 = *(void *)(a2 + v135);
            unint64_t v137 = v136 + 1;
            if (v136 == -1 || v137 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v138 = *(unsigned char *)(*(void *)(a2 + *v7) + v136);
              *(void *)(a2 + v135) = v137;
              v134 |= (unint64_t)(v138 & 0x7F) << v132;
              if (v138 < 0)
              {
                v132 += 7;
                BOOL v15 = v133++ >= 9;
                if (v15)
                {
                  uint64_t v139 = 0;
                  goto LABEL_223;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v139 = 0;
          }
          else {
            uint64_t v139 = v134;
          }
LABEL_223:
          [a1 setSpotlightQueryIntent:v139];
          continue;
        case 0x12u:
          char v140 = 0;
          unsigned int v141 = 0;
          uint64_t v142 = 0;
          while (2)
          {
            uint64_t v143 = *v3;
            uint64_t v144 = *(void *)(a2 + v143);
            unint64_t v145 = v144 + 1;
            if (v144 == -1 || v145 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v146 = *(unsigned char *)(*(void *)(a2 + *v7) + v144);
              *(void *)(a2 + v143) = v145;
              v142 |= (unint64_t)(v146 & 0x7F) << v140;
              if (v146 < 0)
              {
                v140 += 7;
                BOOL v15 = v141++ >= 9;
                if (v15)
                {
                  uint64_t v142 = 0;
                  goto LABEL_227;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v142 = 0;
          }
LABEL_227:
          [a1 setIsUnsafeQuery:v142 != 0];
          continue;
        case 0x13u:
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v149 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v150 = *v3;
        uint64_t v151 = *(void *)(a2 + v150);
        unint64_t v152 = v151 + 1;
        if (v151 == -1 || v152 > *(void *)(a2 + *v4)) {
          break;
        }
        char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v151);
        *(void *)(a2 + v150) = v152;
        v149 |= (unint64_t)(v153 & 0x7F) << v147;
        if ((v153 & 0x80) == 0) {
          goto LABEL_229;
        }
        v147 += 7;
        BOOL v15 = v148++ >= 9;
        if (v15)
        {
          uint64_t v149 = 0;
          goto LABEL_231;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_229:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v149 = 0;
      }
LABEL_231:
      [a1 setIsBlocklistedQuery:v149 != 0];
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBRFVisualPropertyWithActionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 1)
      {
        char v26 = objc_alloc_init(_SFPBRFVisualElement);
        if (!PBReaderPlaceMark() || !_SFPBRFVisualElementReadFrom(v26, a2))
        {
LABEL_44:

          return 0;
        }
        PBReaderRecallMark();
        if (v26) {
          objc_msgSend(a1, "addVisual_elements:", v26, 0, 0);
        }
      }
      else
      {
        if (v18 != 3)
        {
          if (v18 == 2)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              uint64_t v23 = *(void *)(a2 + v22);
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_39;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_41;
              }
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
            if (*(unsigned char *)(a2 + *v5)) {
              uint64_t v21 = 0;
            }
LABEL_41:
            objc_msgSend(a1, "setIs_safe_for_logging:", v21 != 0);
          }
          else
          {
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
          }
          continue;
        }
        char v26 = objc_alloc_init(_SFPBCommandButtonItem);
        if (!PBReaderPlaceMark() || (_SFPBCommandButtonItemReadFrom(v26, a2) & 1) == 0) {
          goto LABEL_44;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setCommandItem:", v26, 0, 0);
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBResultEntityReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 8)
      {
        char v19 = objc_alloc_init(_SFPBLocationTypeInfo);
        if (!PBReaderPlaceMark() || (_SFPBLocationTypeInfoReadFrom(v19, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setLocation_type_info:", v19, 0, 0);
        goto LABEL_26;
      }
      if (v18 == 7) {
        break;
      }
      if (v18 == 2)
      {
        PBReaderReadString();
        char v19 = (_SFPBLocationTypeInfo *)objc_claimAutoreleasedReturnValue();
        [a1 setName:v19];
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    PBReaderReadString();
    char v19 = (_SFPBLocationTypeInfo *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "setMaps_encrypted_muid:", v19);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _SFPBSafariAttributesReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        while (1)
        {
          uint64_t v21 = *v3;
          uint64_t v22 = *(void *)(a2 + v21);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v23;
          v20 |= (unint64_t)(v24 & 0x7F) << v18;
          if ((v24 & 0x80) == 0) {
            goto LABEL_29;
          }
          v18 += 7;
          BOOL v15 = v19++ >= 9;
          if (v15)
          {
            uint64_t v25 = 0;
            goto LABEL_32;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        uint64_t v25 = *(unsigned char *)(a2 + *v5) ? 0 : v20;
LABEL_32:
        [a1 setHideReason:v25];
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL _SFPBSearchSuggestionReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    int v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setIdentifier:v18];
          goto LABEL_82;
        case 2u:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setSuggestion:v18];
          goto LABEL_82;
        case 3u:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setQuery:v18];
          goto LABEL_82;
        case 4u:
          char v18 = objc_alloc_init(_SFPBGraphicalFloat);
          if (!PBReaderPlaceMark() || (_SFPBGraphicalFloatReadFrom(v18, a2) & 1) == 0) {
            goto LABEL_85;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "setScore:", v18, 0, 0);
          goto LABEL_82;
        case 5u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (2)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if (v25 < 0)
              {
                v19 += 7;
                BOOL v15 = v20++ >= 9;
                if (v15)
                {
                  uint64_t v26 = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_74:
          objc_msgSend(a1, "setType:", v26, v48, v49);
          continue;
        case 6u:
          char v18 = objc_alloc_init(_SFPBSearchSuggestion);
          uint64_t v48 = 0;
          uint64_t v49 = 0;
          if (!PBReaderPlaceMark() || !_SFPBSearchSuggestionReadFrom(v18, a2)) {
            goto LABEL_85;
          }
          PBReaderRecallMark();
          if (v18) {
            objc_msgSend(a1, "addDuplicateSuggestions:", v18, 0, 0);
          }
          goto LABEL_82;
        case 7u:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setTopicIdentifier:v18];
          goto LABEL_82;
        case 8u:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setBundleIdentifier:v18];
          goto LABEL_82;
        case 9u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (2)
          {
            uint64_t v30 = *v3;
            uint64_t v31 = *(void *)(a2 + v30);
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
              *(void *)(a2 + v30) = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if (v33 < 0)
              {
                v27 += 7;
                BOOL v15 = v28++ >= 9;
                if (v15)
                {
                  uint64_t v29 = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_78:
          [a1 setPreviouslyEngaged:v29 != 0];
          continue;
        case 0xAu:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setFbr:v18];
          goto LABEL_82;
        case 0xBu:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setScopedSearchApplicationBundleIdentifier:v18];
          goto LABEL_82;
        case 0xCu:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setUtteranceText:v18];
          goto LABEL_82;
        case 0xDu:
          PBReaderReadString();
          char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
          [a1 setDetailText:v18];
          goto LABEL_82;
        case 0xEu:
          PBReaderPlaceMark();
          unsigned int v34 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          continue;
      }
      while (1)
      {
        uint64_t v35 = *v3;
        uint64_t v36 = *(void *)(a2 + v35);
        unint64_t v37 = v36 + 1;
        if (v36 == -1 || v37 > *(void *)(a2 + *v4)) {
          break;
        }
        int v38 = *(char *)(*(void *)(a2 + *v7) + v36);
        *(void *)(a2 + v35) = v37;
        if (v38 < 0)
        {
          BOOL v15 = v34++ >= 9;
          if (!v15) {
            continue;
          }
        }
        goto LABEL_59;
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_59:
      PBReaderReadString();
      char v18 = (_SFPBGraphicalFloat *)objc_claimAutoreleasedReturnValue();
      unsigned int v39 = 0;
      while (1)
      {
        uint64_t v40 = *v3;
        uint64_t v41 = *(void *)(a2 + v40);
        unint64_t v42 = v41 + 1;
        if (v41 == -1 || v42 > *(void *)(a2 + *v4)) {
          break;
        }
        int v43 = *(char *)(*(void *)(a2 + *v7) + v41);
        *(void *)(a2 + v40) = v42;
        if (v43 < 0)
        {
          BOOL v15 = v39++ >= 9;
          if (!v15) {
            continue;
          }
        }
        goto LABEL_67;
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_67:
      uint64_t v44 = *v3;
      unint64_t v45 = *(void *)(a2 + v44);
      if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(void *)(a2 + *v4))
      {
        double v46 = *(double *)(*(void *)(a2 + *v7) + v45);
        *(void *)(a2 + v44) = v45 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + *v5) = 1;
        double v46 = 0.0;
      }
      PBReaderRecallMark();
      if (*(unsigned char *)(a2 + *v5))
      {
LABEL_85:

        return 0;
      }
      objc_msgSend(a1, "setServerFeatures:forKey:", v18, v46, 0, 0);
LABEL_82:
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

NSRange NSRangeFromString(NSString *aString)
{
  NSUInteger v1 = MEMORY[0x1F40E71F8](aString);
  result.length = v2;
  result.location = v1;
  return result;
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1F40E72A0](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

uint64_t PBDataWriterPlaceMark()
{
  return MEMORY[0x1F4147180]();
}

uint64_t PBDataWriterRecallMark()
{
  return MEMORY[0x1F4147188]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1F4147190]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1F41471B0]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1F41471C0]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x1F41471D8]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1F41471E0]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1F4147220]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1F4147230]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x1F4147240]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x1F4147248]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1F4147268]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1F4147278]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1F4147280]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1F41472A0]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1F41472A8]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1F40F7138](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1F40F7160](allocator);
}

uint32_t SecTaskGetCodeSignStatus(SecTaskRef task)
{
  return MEMORY[0x1F40F7180](task);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}