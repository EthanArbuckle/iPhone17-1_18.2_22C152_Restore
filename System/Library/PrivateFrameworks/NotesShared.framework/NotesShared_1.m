uint64_t sub_1C3C495F4(void **a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v11[2];

  v8 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    v8 = (void *)sub_1C3D70F60(v8);
  }
  v9 = v8[2];
  v11[0] = (uint64_t)(v8 + 4);
  v11[1] = v9;
  swift_retain();
  sub_1C3C48910(v11, a2, a3, a4);
  swift_release();
  *a1 = v8;
  return swift_release_n();
}

uint64_t sub_1C3C496B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = a1 + 32;
    do
    {
      sub_1C3C49A14(v8, (uint64_t)&v24);
      uint64_t v9 = v25;
      uint64_t v10 = v26;
      __swift_project_boxed_opaque_existential_1(&v24, v25);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 64))(a2, a3, v9, v10))
      {
        sub_1C3C4C684(&v24, (uint64_t)v21);
        uint64_t v11 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D2D0(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v27;
        }
        unint64_t v13 = *(void *)(v11 + 16);
        unint64_t v12 = *(void *)(v11 + 24);
        if (v13 >= v12 >> 1) {
          sub_1C3C9D2D0(v12 > 1, v13 + 1, 1);
        }
        uint64_t v14 = v22;
        uint64_t v15 = v23;
        uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
        MEMORY[0x1F4188790](v16);
        v18 = &v21[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(unsigned char *))(v19 + 16))(v18);
        sub_1C3C47F8C(v13, (uint64_t)v18, &v27, v14, v15);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v24);
      }
      v8 += 40;
      --v5;
    }
    while (v5);
    return v27;
  }
  return result;
}

uint64_t sub_1C3C498A8(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1C3C49904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C4996C()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C499AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C49A14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C3C49B0C(uint64_t result, uint64_t a2, uint64_t (*a3)(long long *, uint64_t))
{
  uint64_t v4 = result;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    uint64_t v8 = a2;
    unint64_t v9 = 0;
    uint64_t v10 = result + 32;
    uint64_t v22 = a2;
    uint64_t v23 = result;
    uint64_t v21 = v6;
    while (v9 < *(void *)(v4 + 16))
    {
      sub_1C3C49A14(v10, (uint64_t)v27);
      char v11 = a3(v27, v8);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if (v11)
      {
        sub_1C3C4C684(v27, (uint64_t)v24);
        uint64_t v12 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D2D0(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v12 = v28;
        }
        unint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        if (v14 >= v13 >> 1) {
          sub_1C3C9D2D0(v13 > 1, v14 + 1, 1);
        }
        uint64_t v5 = v25;
        uint64_t v15 = v26;
        uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
        MEMORY[0x1F4188790](v16);
        v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v19 + 16))(v18);
        sub_1C3C47F8C(v14, (uint64_t)v18, &v28, v5, v15);
        uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        uint64_t v8 = v22;
        uint64_t v4 = v23;
        uint64_t v6 = v21;
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        uint64_t v5 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1C3C49D40(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = 0;
  v18 = (void *)(a2 + 40);
  uint64_t v19 = result + 32;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v17 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    while (1)
    {
      if (v3 == v5)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = (uint64_t *)(v19 + 32 * v3);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      uint64_t v9 = v6[3];
      uint64_t v20 = v6[2];
      ++v3;
      uint64_t v10 = a2;
      uint64_t v11 = *(void *)(a2 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v18;
      while (1)
      {
        uint64_t result = *(v12 - 1);
        if (result == v7 && *v12 == v8) {
          break;
        }
        uint64_t result = sub_1C3DBB3B8();
        if (result) {
          break;
        }
        v12 += 4;
        if (!--v11) {
          goto LABEL_16;
        }
      }
      a2 = v10;
      if (v3 == v2) {
        return v17;
      }
    }
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = v17;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C3C9D404(0, *(void *)(v17 + 16) + 1, 1);
      uint64_t v4 = v17;
    }
    unint64_t v15 = *(void *)(v4 + 16);
    unint64_t v14 = *(void *)(v4 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = sub_1C3C9D404(v14 > 1, v15 + 1, 1);
      uint64_t v4 = v17;
    }
    *(void *)(v4 + 16) = v15 + 1;
    uint64_t v16 = (void *)(v4 + 32 * v15);
    v16[4] = v7;
    v16[5] = v8;
    v16[6] = v20;
    v16[7] = v9;
    a2 = v10;
  }
  while (v3 != v2);
  return v4;
}

uint64_t sub_1C3C49ED4(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = 0;
  uint64_t v29 = -(uint64_t)v2;
  uint64_t v27 = result + 56;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v26 = *(void *)(result + 16);
  do
  {
    uint64_t v28 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    uint64_t v32 = -(uint64_t)v5;
    for (i = (uint64_t *)(v27 + 32 * v3++); ; i += 4)
    {
      if (v32 + v3 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *(i - 3);
      uint64_t v8 = *(i - 2);
      uint64_t v10 = *(i - 1);
      uint64_t v11 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = v10;
      if (objc_msgSend(a2, sel_resolverStorage))
      {
        sub_1C3DBAA68();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v34, 0, sizeof(v34));
      }
      v33[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
      v33[0] = swift_allocObject();
      sub_1C3C499AC((uint64_t)v34, v33[0] + 16);
      sub_1C3C45734((uint64_t)v33);
      uint64_t v13 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      sub_1C3C2A448((uint64_t)v34, qword_1EB6FB1D8);
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      swift_bridgeObjectRetain();
      uint64_t v16 = (void *)v15(ObjectType, v13);
      if (!v16) {
        break;
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_cloudAccount);

      if (!v18) {
        break;
      }
      id v19 = objc_msgSend(v18, sel_userRecordName);

      uint64_t v20 = sub_1C3DB9C38();
      uint64_t v22 = v21;

      if (v9 == v20 && v8 == v22)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_1C3DBB3B8();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      ++v3;
      if (v29 + v3 == 1) {
        return v28;
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v4 = v28;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = v28;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C3C9D404(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v4 = v35;
    }
    unint64_t v24 = *(void *)(v4 + 16);
    unint64_t v23 = *(void *)(v4 + 24);
    if (v24 >= v23 >> 1)
    {
      uint64_t result = sub_1C3C9D404(v23 > 1, v24 + 1, 1);
      uint64_t v4 = v35;
    }
    *(void *)(v4 + 16) = v24 + 1;
    uint64_t v25 = (void *)(v4 + 32 * v24);
    v25[4] = v9;
    v25[5] = v8;
    v25[6] = v31;
    v25[7] = v11;
    unint64_t v2 = v26;
  }
  while (v29 + v3);
  return v4;
}

uint64_t sub_1C3C4A204(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C3C9D424(0, v2, 0);
    uint64_t v3 = v23;
    unint64_t v5 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v5 - 2);
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      uint64_t v19 = *(v5 - 3);
      uint64_t v20 = v6;
      uint64_t v21 = v7;
      uint64_t v22 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (objc_msgSend(a2, sel_resolverStorage))
      {
        sub_1C3DBAA68();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v18, 0, sizeof(v18));
      }
      v17[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
      v17[0] = swift_allocObject();
      sub_1C3C499AC((uint64_t)v18, v17[0] + 16);
      sub_1C3C45734((uint64_t)v17);
      uint64_t v10 = v9;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      sub_1C3C2A448((uint64_t)v18, qword_1EB6FB1D8);
      ActivityEventParticipant.shortName(resolver:)(v10, (uint64_t *)v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      long long v11 = v18[0];
      uint64_t v23 = v3;
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v15 = v18[0];
        sub_1C3C9D424(v12 > 1, v13 + 1, 1);
        long long v11 = v15;
        uint64_t v3 = v23;
      }
      v5 += 4;
      *(void *)(v3 + 16) = v13 + 1;
      *(_OWORD *)(v3 + 16 * v13 + 32) = v11;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C3C4A3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3C4A420(uint64_t a1)
{
  uint64_t v58 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v2 = MEMORY[0x1F4188790](v58);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  v56 = (uint64_t *)((char *)&v51 - v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PersistedActivityEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  *(void *)&long long v55 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  *(void *)&long long v57 = (char *)&v51 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v53 = (uint64_t)&v51 - v16;
  MEMORY[0x1F4188790](v15);
  v52 = (char *)&v51 - v17;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v54 = v10;
  if (v18)
  {
    uint64_t v20 = a1 + 32;
    uint64_t v21 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v51 = (const char *)a1;
    swift_bridgeObjectRetain();
    unint64_t v23 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C3C49A14(v20, (uint64_t)v60);
      sub_1C3C49A14((uint64_t)v60, (uint64_t)v59);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      int v24 = swift_dynamicCast();
      (*v21)(v8, v24 ^ 1u, 1, v9);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v60);
      if ((*v22)(v8, 1, v9) == 1)
      {
        sub_1C3C2A448((uint64_t)v8, &qword_1EB6FC428);
      }
      else
      {
        uint64_t v25 = v52;
        sub_1C3C4C830((uint64_t)v8, (uint64_t)v52);
        sub_1C3C4C830((uint64_t)v25, v53);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v23 = sub_1C3D82748(0, *(void *)(v23 + 16) + 1, 1, v23);
        }
        unint64_t v27 = *(void *)(v23 + 16);
        unint64_t v26 = *(void *)(v23 + 24);
        if (v27 >= v26 >> 1) {
          unint64_t v23 = sub_1C3D82748(v26 > 1, v27 + 1, 1, v23);
        }
        *(void *)(v23 + 16) = v27 + 1;
        uint64_t v10 = v54;
        sub_1C3C4C830(v53, v23+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v54 + 72) * v27);
      }
      v20 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  v60[0] = v19;
  uint64_t v53 = *(void *)(v23 + 16);
  if (v53)
  {
    unint64_t v28 = 0;
    v52 = "ame";
    v51 = "removeParticipant";
    while (2)
    {
      if (v28 < *(void *)(v23 + 16))
      {
        unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        uint64_t v30 = *(void *)(v10 + 72);
        unint64_t v31 = v28 + 1;
        uint64_t v32 = v57;
        sub_1C3C4C7C8(v23 + v29 + v30 * v28, v57, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3C4C7C8(v32 + *(int *)(v9 + 28), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 4u:
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_23;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_23;
          case 6u:
            uint64_t v33 = sub_1C3DB8B98();
            (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v4, v33);
            goto LABEL_23;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_24;
          case 8u:
            goto LABEL_23;
          default:
            swift_bridgeObjectRelease();
LABEL_23:
            char v34 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease();
            if (v34)
            {
LABEL_24:
              sub_1C3C4C830(v57, v55);
              uint64_t v35 = v60[0];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C3C9D2F0(0, *(void *)(v35 + 16) + 1, 1);
                uint64_t v35 = v60[0];
              }
              unint64_t v37 = *(void *)(v35 + 16);
              unint64_t v36 = *(void *)(v35 + 24);
              if (v37 >= v36 >> 1)
              {
                sub_1C3C9D2F0(v36 > 1, v37 + 1, 1);
                uint64_t v35 = v60[0];
              }
              *(void *)(v35 + 16) = v37 + 1;
              sub_1C3C4C830(v55, v35 + v29 + v37 * v30);
              uint64_t v10 = v54;
            }
            else
            {
              sub_1C3C4C974(v57, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
            }
            unint64_t v28 = v31;
            if (v53 != v31) {
              continue;
            }
            goto LABEL_30;
        }
      }
      break;
    }
    __break(1u);
    JUMPOUT(0x1C3C4ACB4);
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t v38 = v60[0];
  uint64_t v39 = sub_1C3C3A030(v60[0]);
  v60[0] = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(v38 + 16);
  if (v40)
  {
    unint64_t v41 = v38 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v42 = *(void *)(v10 + 72);
    swift_retain();
    uint64_t v43 = MEMORY[0x1E4FBC860];
    long long v55 = xmmword_1C3DD3D30;
    while (2)
    {
      sub_1C3C4C7C8(v41 + *(int *)(v9 + 28), (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v46 = v43;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_37;
        case 2:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_37;
        case 4:
        case 5:
          uint64_t v45 = v56[2];
          uint64_t v44 = v56[3];
          long long v57 = *(_OWORD *)v56;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
          uint64_t v46 = swift_allocObject();
          long long v47 = v57;
          *(_OWORD *)(v46 + 16) = v55;
          *(_OWORD *)(v46 + 32) = v47;
          *(void *)(v46 + 48) = v45;
          *(void *)(v46 + 56) = v44;
          goto LABEL_33;
        case 6:
          uint64_t v49 = sub_1C3DB8B98();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v49 - 8) + 8))(v56, v49);
          goto LABEL_39;
        case 7:
          uint64_t v46 = *v56;
          goto LABEL_33;
        case 8:
          goto LABEL_33;
        default:
LABEL_37:
          swift_bridgeObjectRelease();
LABEL_39:
          uint64_t v46 = v43;
LABEL_33:
          sub_1C3D79068(v46);
          v41 += v42;
          if (--v40) {
            continue;
          }
          swift_release_n();
          break;
      }
      break;
    }
  }
  else
  {
    swift_release();
  }
  return v39;
}

uint64_t sub_1C3C4ACFC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v7 = *a2;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    int v24 = v7;
    uint64_t v25 = a1;
    uint64_t v10 = a1 + 32;
    do
    {
      sub_1C3C49A14(v10, (uint64_t)v29);
      sub_1C3C49A14((uint64_t)v29, (uint64_t)v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      if (swift_dynamicCast())
      {
        sub_1C3C4C974((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
        sub_1C3C4C684(v29, (uint64_t)v26);
        uint64_t v11 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D2D0(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v30;
        }
        unint64_t v13 = *(void *)(v11 + 16);
        unint64_t v12 = *(void *)(v11 + 24);
        if (v13 >= v12 >> 1) {
          sub_1C3C9D2D0(v12 > 1, v13 + 1, 1);
        }
        uint64_t v14 = v27;
        uint64_t v15 = v28;
        uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
        MEMORY[0x1F4188790](v16);
        uint64_t v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(unsigned char *))(v19 + 16))(v18);
        sub_1C3C47F8C(v13, (uint64_t)v18, &v30, v14, v15);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
      }
      v10 += 40;
      --v9;
    }
    while (v9);
    uint64_t v8 = v30;
    a1 = v25;
    LOBYTE(v7) = v24;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C3C3A190(v8);
  swift_release();
  if ((v7 & 1) == 0 && *(void *)(v20 + 16))
  {
    uint64_t v21 = sub_1C3C4A420(a1);
    swift_bridgeObjectRelease();
    *(void *)&v29[0] = v20;
    sub_1C3D79068(v21);
    return *(void *)&v29[0];
  }
  return v20;
}

uint64_t sub_1C3C4AFC8(uint64_t a1)
{
  uint64_t v61 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v2 = MEMORY[0x1F4188790](v61);
  v59 = (uint64_t *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v52 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PersistedActivityEvent();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v56 = (uint64_t)&v52 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  *(void *)&long long v60 = (char *)&v52 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v55 = (uint64_t)&v52 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v54 = (char *)&v52 - v20;
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  long long v57 = v12;
  *(void *)&long long v58 = v19;
  if (v21)
  {
    uint64_t v23 = a1 + 32;
    int v24 = (void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    uint64_t v53 = (const char *)a1;
    swift_bridgeObjectRetain();
    unint64_t v26 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C3C49A14(v23, (uint64_t)v63);
      sub_1C3C49A14((uint64_t)v63, (uint64_t)v62);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      int v27 = swift_dynamicCast();
      (*v24)(v8, v27 ^ 1u, 1, v9);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v63);
      if ((*v25)(v8, 1, v9) == 1)
      {
        sub_1C3C2A448((uint64_t)v8, &qword_1EB6FC428);
      }
      else
      {
        uint64_t v28 = v54;
        sub_1C3C4C830((uint64_t)v8, (uint64_t)v54);
        sub_1C3C4C830((uint64_t)v28, v55);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v26 = sub_1C3D82748(0, *(void *)(v26 + 16) + 1, 1, v26);
        }
        unint64_t v30 = *(void *)(v26 + 16);
        unint64_t v29 = *(void *)(v26 + 24);
        if (v30 >= v29 >> 1) {
          unint64_t v26 = sub_1C3D82748(v29 > 1, v30 + 1, 1, v26);
        }
        *(void *)(v26 + 16) = v30 + 1;
        sub_1C3C4C830(v55, v26+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v30);
        unint64_t v12 = v57;
      }
      v23 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v26 = MEMORY[0x1E4FBC860];
  }
  v63[0] = v22;
  uint64_t v55 = *(void *)(v26 + 16);
  if (v55)
  {
    unint64_t v31 = 0;
    uint64_t v54 = "ame";
    uint64_t v53 = "removeParticipant";
    while (2)
    {
      if (v31 < *(void *)(v26 + 16))
      {
        unint64_t v32 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v33 = *(void *)(v58 + 72);
        unint64_t v34 = v31 + 1;
        uint64_t v35 = v60;
        sub_1C3C4C7C8(v26 + v32 + v33 * v31, v60, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3C4C7C8(v35 + *(int *)(v9 + 28), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_24;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_24;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_25;
          case 6u:
            uint64_t v36 = sub_1C3DB8B98();
            (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v5, v36);
            goto LABEL_24;
          case 8u:
            goto LABEL_24;
          default:
            swift_bridgeObjectRelease();
LABEL_24:
            char v37 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease();
            if (v37)
            {
LABEL_25:
              sub_1C3C4C830(v60, v56);
              uint64_t v38 = v63[0];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C3C9D2F0(0, *(void *)(v38 + 16) + 1, 1);
                uint64_t v38 = v63[0];
              }
              unint64_t v40 = *(void *)(v38 + 16);
              unint64_t v39 = *(void *)(v38 + 24);
              if (v40 >= v39 >> 1)
              {
                sub_1C3C9D2F0(v39 > 1, v40 + 1, 1);
                uint64_t v38 = v63[0];
              }
              *(void *)(v38 + 16) = v40 + 1;
              sub_1C3C4C830(v56, v38 + v32 + v40 * v33);
              unint64_t v12 = v57;
            }
            else
            {
              sub_1C3C4C974(v60, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
            }
            unint64_t v31 = v34;
            if (v55 != v34) {
              continue;
            }
            goto LABEL_30;
        }
      }
      break;
    }
    __break(1u);
    JUMPOUT(0x1C3C4B8B8);
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t v41 = v63[0];
  v63[0] = MEMORY[0x1E4FBC860];
  uint64_t v42 = *(void *)(v41 + 16);
  if (v42)
  {
    uint64_t v43 = v41 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    uint64_t v44 = *(void *)(v58 + 72);
    swift_retain();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    long long v58 = xmmword_1C3DD3D30;
    while (2)
    {
      sub_1C3C4C7C8(v43, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      sub_1C3C4C7C8((uint64_t)&v12[*(int *)(v9 + 28)], (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
      uint64_t v48 = v45;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_37;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v12 = v57;
          goto LABEL_37;
        case 4u:
        case 5u:
          uint64_t v47 = v59[2];
          uint64_t v46 = v59[3];
          long long v60 = *(_OWORD *)v59;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
          uint64_t v48 = swift_allocObject();
          long long v49 = v60;
          *(_OWORD *)(v48 + 16) = v58;
          *(_OWORD *)(v48 + 32) = v49;
          *(void *)(v48 + 48) = v47;
          *(void *)(v48 + 56) = v46;
          unint64_t v12 = v57;
          goto LABEL_33;
        case 6u:
          uint64_t v50 = sub_1C3DB8B98();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v50 - 8) + 8))(v59, v50);
          goto LABEL_39;
        case 7u:
          uint64_t v48 = *v59;
          goto LABEL_33;
        case 8u:
          goto LABEL_33;
        default:
LABEL_37:
          swift_bridgeObjectRelease();
LABEL_39:
          uint64_t v48 = v45;
LABEL_33:
          sub_1C3C4C974((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          sub_1C3D79068(v48);
          v43 += v44;
          if (--v42) {
            continue;
          }
          swift_release_n();
          uint64_t result = v63[0];
          break;
      }
      break;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C3C4B900(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareActivityEvent();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v31[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v30 = a1;
    uint64_t v7 = a1 + 32;
    do
    {
      sub_1C3C49A14(v7, (uint64_t)&v34);
      sub_1C3C49A14((uint64_t)&v34, (uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      if (swift_dynamicCast())
      {
        sub_1C3C4C974((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent);
        sub_1C3C4C684(&v34, (uint64_t)v31);
        uint64_t v8 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D2D0(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v37;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1) {
          sub_1C3C9D2D0(v9 > 1, v10 + 1, 1);
        }
        uint64_t v11 = v32;
        uint64_t v12 = v33;
        uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
        MEMORY[0x1F4188790](v13);
        uint64_t v15 = (char *)&v31[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v16 + 16))(v15);
        sub_1C3C47F8C(v10, (uint64_t)v15, &v37, v11, v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v34);
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    uint64_t v17 = v37;
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v17 = v5;
  }
  swift_bridgeObjectRelease();
  int64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v37 = v5;
    sub_1C3C9D404(0, v18, 0);
    uint64_t v19 = v17 + 32;
    do
    {
      sub_1C3C49A14(v19, (uint64_t)&v34);
      uint64_t v20 = v35;
      uint64_t v21 = v36;
      __swift_project_boxed_opaque_existential_1(&v34, v35);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 48))(v31, v20, v21);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v34);
      uint64_t v22 = v31[0];
      uint64_t v23 = v31[1];
      uint64_t v24 = v31[2];
      uint64_t v25 = v32;
      uint64_t v5 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D404(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v37;
      }
      unint64_t v27 = *(void *)(v5 + 16);
      unint64_t v26 = *(void *)(v5 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1C3C9D404(v26 > 1, v27 + 1, 1);
        uint64_t v5 = v37;
      }
      *(void *)(v5 + 16) = v27 + 1;
      uint64_t v28 = (void *)(v5 + 32 * v27);
      v28[4] = v22;
      v28[5] = v23;
      v28[6] = v24;
      v28[7] = v25;
      v19 += 40;
      --v18;
    }
    while (v18);
  }
  swift_release();
  return v5;
}

uint64_t sub_1C3C4BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1C3C4BCCC()
{
  unint64_t result = qword_1EA385FE8;
  if (!qword_1EA385FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385FE8);
  }
  return result;
}

unint64_t sub_1C3C4BD24()
{
  unint64_t result = qword_1EA385FF0;
  if (!qword_1EA385FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385FF0);
  }
  return result;
}

uint64_t sub_1C3C4BD78()
{
  return sub_1C3C4BDB4(&qword_1EA385FF8, &qword_1EA386000);
}

uint64_t sub_1C3C4BDB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s7SummaryVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7SummaryVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7SummaryVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7SummaryVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s7SummaryVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7SummaryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary()
{
  return &type metadata for ICActivityStreamDigest.Summary;
}

uint64_t _s7SummaryV7FormatsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7SummaryV7FormatsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C4C1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C3C4C214(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary.Formats()
{
  return &type metadata for ICActivityStreamDigest.Summary.Formats;
}

uint64_t _s7SummaryV12ParticipantsVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7SummaryV12ParticipantsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ICActivityStreamDigest.Summary.Participants()
{
  return &type metadata for ICActivityStreamDigest.Summary.Participants;
}

uint64_t sub_1C3C4C394(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C3DBAFB8();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1C877C230](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1C3C4C8B4(0, &qword_1EA386078);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C3DBAFF8();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C3DBAFB8();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_1C3DBA038();
}

uint64_t sub_1C3C4C684(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1C3C4C6EC()
{
  unint64_t result = qword_1EA388D80;
  if (!qword_1EA388D80)
  {
    sub_1C3DB8AF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388D80);
  }
  return result;
}

uint64_t sub_1C3C4C744()
{
  return swift_release();
}

unint64_t sub_1C3C4C74C()
{
  unint64_t result = qword_1EB6FBAC0;
  if (!qword_1EB6FBAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBAC0);
  }
  return result;
}

uint64_t sub_1C3C4C7A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3C4C7B4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C3C4C7C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3C4C830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C4C894(void *a1)
{
  return sub_1C3C3B8D8(a1) & 1;
}

uint64_t sub_1C3C4C8B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C3C4C8F0()
{
  unint64_t result = qword_1EA3860B8;
  if (!qword_1EA3860B8)
  {
    sub_1C3C4C8B4(255, (unint64_t *)&qword_1EA388CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA3860B8);
  }
  return result;
}

uint64_t sub_1C3C4C958@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3C3B9F8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C3C4C974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C3C4C9D4(void *a1)
{
  return sub_1C3C4C894(a1) & 1;
}

uint64_t sub_1C3C4C9F0()
{
  return sub_1C3C3EB68() & 1;
}

void *sub_1C3C4CA10(uint64_t a1, uint64_t a2)
{
  v9[1] = a1;
  v9[2] = a2;
  v9[0] = sub_1C3DBA738();
  uint64_t v3 = *(void *)(v9[0] - 8);
  MEMORY[0x1F4188790](v9[0]);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DBA728();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C3DB95E8();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C3C4DA14();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 0;
  sub_1C3DB9598();
  v9[3] = MEMORY[0x1E4FBC860];
  sub_1C3C4DA54(&qword_1EB6FC350, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC330);
  sub_1C3C4DA9C(&qword_1EB6FC338, &qword_1EB6FC330);
  sub_1C3DBAAA8();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v9[0]);
  v2[5] = sub_1C3DBA768();
  return v2;
}

uint64_t sub_1C3C4CC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C3DB9558();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C3DB95E8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 40);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1C3C4DA08;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_21;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C3DB9598();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1C3C4DA54(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
  sub_1C3C4DA9C((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
  sub_1C3DBAAA8();
  MEMORY[0x1C877BC60](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1C3C4CF0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2])
  {
    uint64_t v9 = a1[3];
    a1[3] = a2;
    a1[4] = a3;
    swift_retain();
    return sub_1C3C4D710(v9);
  }
  else
  {
    uint64_t v11 = sub_1C3DBA278();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a2;
    v12[5] = a3;
    v12[6] = a1;
    swift_retain();
    swift_retain();
    a1[2] = sub_1C3C5C22C((uint64_t)v8, (uint64_t)&unk_1EA3860D0, (uint64_t)v12);
    return swift_release();
  }
}

uint64_t sub_1C3C4D07C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  uint64_t v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C3C4D14C;
  return v9();
}

uint64_t sub_1C3C4D14C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C3C4D248, 0, 0);
}

uint64_t sub_1C3C4D248()
{
  sub_1C3C4D2A8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3C4D2A8()
{
  uint64_t v1 = sub_1C3DB9558();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB95E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 40);
  aBlock[4] = sub_1C3C4D708;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1C3DB9598();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1C3C4DA54(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
  sub_1C3C4DA9C((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
  sub_1C3DBAAA8();
  MEMORY[0x1C877BC60](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1C3C4D538(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[2] = 0;
  uint64_t result = swift_release();
  uint64_t v6 = a1[3];
  if (v6)
  {
    uint64_t v7 = a1[4];
    a1[3] = 0;
    a1[4] = 0;
    swift_retain();
    sub_1C3C4D710(v6);
    uint64_t v8 = sub_1C3DBA278();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    void v9[4] = v6;
    v9[5] = v7;
    v9[6] = a1;
    sub_1C3C4D848(v6);
    swift_retain();
    a1[2] = sub_1C3C5C22C((uint64_t)v4, (uint64_t)&unk_1EA3860C8, (uint64_t)v9);
    swift_release();
    return sub_1C3C4D710(v6);
  }
  return result;
}

uint64_t sub_1C3C4D69C()
{
  swift_release();
  sub_1C3C4D710(*(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CancellableTaskQueue()
{
  return self;
}

uint64_t sub_1C3C4D708()
{
  return sub_1C3C4D538(v0);
}

uint64_t sub_1C3C4D710(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C3C4D724()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3C4DAF4;
  v4[2] = v3;
  uint64_t v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[3] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C3C4D14C;
  return v7();
}

uint64_t sub_1C3C4D848(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3C4D8A4()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3C3259C;
  v4[2] = v3;
  uint64_t v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[3] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C3C4D14C;
  return v7();
}

uint64_t sub_1C3C4D9C8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3C4DA08()
{
  return sub_1C3C4CF0C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1C3C4DA14()
{
  unint64_t result = qword_1EB6FC358;
  if (!qword_1EB6FC358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6FC358);
  }
  return result;
}

uint64_t sub_1C3C4DA54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C4DA9C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Argument.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t Argument.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*Argument.wrappedValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Argument.name.getter()
{
  uint64_t v0 = sub_1C3C4F1D0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(void *)(*(void *)v2 + 104));
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Argument.isHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 112));
  swift_beginAccess();
  return *v1;
}

uint64_t Argument.isHidden.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 112));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*Argument.isHidden.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Argument.isReadonly.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 120));
  swift_beginAccess();
  return *v1;
}

uint64_t Argument.isReadonly.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 120));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*Argument.isReadonly.modify())()
{
  return j__swift_endAccess;
}

uint64_t Argument.summary.getter()
{
  uint64_t v0 = sub_1C3C4F224();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.summary.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(void *)(*(void *)v2 + 128));
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.summary.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Argument.prose.getter()
{
  uint64_t v0 = sub_1C3C4F278();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Argument.prose.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(void *)(*(void *)v2 + 136));
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*Argument.prose.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Argument.__allocating_init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  Argument.init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t *Argument.init(wrappedValue:name:isHidden:isReadonly:summary:prose:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *v9;
  uint64_t v15 = (uint64_t *)((char *)v9 + *(void *)(*v9 + 104));
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (char *)v9 + *(void *)(*v9 + 112);
  *uint64_t v16 = 0;
  uint64_t v17 = (char *)v9 + *(void *)(*v9 + 120);
  *uint64_t v17 = 0;
  int64_t v18 = (uint64_t *)((char *)v9 + *(void *)(*v9 + 128));
  void *v18 = 0;
  v18[1] = 0;
  uint64_t v19 = (uint64_t *)((char *)v9 + *(void *)(*v9 + 136));
  *uint64_t v19 = 0;
  v19[1] = 0;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v14 + 80) - 8) + 32))((uint64_t)v9 + *(void *)(*v9 + 96), a1);
  swift_beginAccess();
  *uint64_t v15 = a2;
  v15[1] = a3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *uint64_t v16 = a4;
  swift_beginAccess();
  *uint64_t v17 = a5;
  swift_beginAccess();
  void *v18 = a6;
  v18[1] = a7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *uint64_t v19 = a8;
  v19[1] = a9;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Argument.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Argument.init(from:)(a1);
  return v2;
}

void *Argument.init(from:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v15 = *v1;
  uint64_t v5 = *(void *)(v15 + 80);
  uint64_t v13 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v14[-v7 - 8];
  uint64_t v9 = (void *)((char *)v3 + *(void *)(v15 + 104));
  *uint64_t v9 = 0;
  v9[1] = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 112)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 120)) = 0;
  uint64_t v10 = (void *)((char *)v3 + *(void *)(*v3 + 128));
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (void *)((char *)v3 + *(void *)(*v3 + 136));
  *uint64_t v11 = 0;
  v11[1] = 0;
  sub_1C3C49A14(v6, (uint64_t)v14);
  sub_1C3DBA418();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v3 + *(void *)(*v3 + 96), v8, v5);
  }
  return v3;
}

uint64_t Argument.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 80);
  a1[3] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
}

uint64_t Argument.value.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - v6;
  castOrFatalError<A>(_:as:)(v5, v3, v3, (uint64_t)&v10 - v6);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  uint64_t v8 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v8, v7, v3);
  return swift_endAccess();
}

void (*Argument.value.modify(uint64_t **a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = (uint64_t *)malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  Argument.value.getter(v3);
  return sub_1C3C4E964;
}

void sub_1C3C4E964(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_1C3C4BC70(*a1, (uint64_t)v2 + 32);
    Argument.value.setter((uint64_t)v2 + 32);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  else
  {
    Argument.value.setter(*a1);
  }
  free(v2);
}

Swift::String __swiftcall Argument.typeSummary(forName:)(Swift::String forName)
{
  uint64_t v2 = v1;
  object = forName._object;
  uint64_t countAndFlagsBits = forName._countAndFlagsBits;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](forName._countAndFlagsBits);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = (uint64_t)v2 + *(void *)(v5 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(*(void *)(v5 + 88) + 32))(countAndFlagsBits, object, v6);
  uint64_t v13 = v12;
  uint64_t v14 = (char *)v2 + *(void *)(*v2 + 120);
  swift_beginAccess();
  if (*v14 == 1)
  {
    uint64_t v22 = v11;
    uint64_t v23 = v13;
    sub_1C3DB9D68();
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v19 = 2;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v19 = 0;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t v11 = v22;
    uint64_t v13 = v23;
  }
  uint64_t v15 = v11;
  uint64_t v16 = v13;
  result._object = v16;
  result._uint64_t countAndFlagsBits = v15;
  return result;
}

uint64_t Argument.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Argument.__deallocating_deinit()
{
  Argument.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C4EE1C()
{
  uint64_t v0 = sub_1C3C4F1D0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C3C4EE58()
{
  return Argument.isHidden.getter() & 1;
}

uint64_t sub_1C3C4EE80()
{
  return Argument.isReadonly.getter() & 1;
}

uint64_t sub_1C3C4EEA8()
{
  uint64_t v0 = sub_1C3C4F224();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C3C4EEE4()
{
  uint64_t v0 = sub_1C3C4F278();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C3C4EF20@<X0>(uint64_t *a1@<X8>)
{
  return Argument.value.getter(a1);
}

uint64_t sub_1C3C4EF44(uint64_t a1)
{
  return Argument.value.setter(a1);
}

void (*sub_1C3C4EF68(uint64_t ***a1))(void *a1)
{
  uint64_t v2 = (uint64_t **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t *)Argument.value.modify(v2);
  return sub_1C3C4EFC4;
}

void sub_1C3C4EFC4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1C3C4F00C(uint64_t a1, uint64_t a2)
{
  return Argument.typeSummary(forName:)(*(Swift::String *)&a1)._countAndFlagsBits;
}

uint64_t sub_1C3C4F030@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Argument.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t Argument<>.encode(to:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v7 = v1 + *(void *)(v6 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  sub_1C3DB9AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C3C4F1A8(uint64_t a1)
{
  return Argument<>.encode(to:)(a1);
}

uint64_t sub_1C3C4F1D0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C3C4F224()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C3C4F278()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C3C4F2CC@<X0>(uint64_t *a1@<X8>)
{
  return Argument.value.getter(a1);
}

uint64_t sub_1C3C4F2F0(uint64_t a1)
{
  sub_1C3C4BC70(a1, (uint64_t)v2);
  return Argument.value.setter((uint64_t)v2);
}

uint64_t sub_1C3C4F32C()
{
  return 16;
}

__n128 sub_1C3C4F338(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of AnyArgument.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyArgument.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyArgument.isReadonly.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyArgument.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyArgument.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnyArgument.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AnyArgument.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of AnyArgument.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of AnyArgument.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1C3C4F3FC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Argument()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Argument(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Argument);
}

uint64_t dispatch thunk of Argument.__allocating_init(wrappedValue:name:isHidden:isReadonly:summary:prose:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of Argument.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

Swift::Void __swiftcall NoteObject.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C3C38C78(v10);
  sub_1C3C28D88(v10[0], v11, v12, (uint64_t)v4);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C3C36FB8((uint64_t)v4);
  }
  else
  {
    sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v1, sel_title);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1C3DB9C38();
  }
  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA888();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1C3C4F71C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  NoteObject.associateAppEntity(with:)((CSSearchableItemAttributeSet)v4);
}

uint64_t dispatch thunk of ActivityEventResolving.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolves(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolve(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetchMention(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ActivityEventResolving.resolveMention(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ActivityEventResolving.fetchSnippet(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t ICFolderObject<>.entityIdentifier.getter@<X0>(unsigned char *a1@<X8>)
{
  v51 = a1;
  uint64_t v2 = sub_1C3DB9048();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v52 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v44 - v5;
  id v7 = objc_msgSend(v1, sel_objectID);
  if (!objc_msgSend(v7, sel_ic_isModernType)) {
    objc_msgSend(v7, sel_ic_isLegacyType);
  }

  uint64_t v47 = v44;
  MEMORY[0x1F4188790](v8);
  int v50 = v9;
  LOBYTE(v44[-2]) = v9;
  uint64_t v10 = qword_1EB6FC7B0;
  id v11 = v1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6FC798);
  uint64_t v13 = v53;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v48(v6, v12, v2);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 2;
  if (sub_1C3D6958C(v14, (uint64_t (*)(void))sub_1C3C51CF8))
  {
  }
  else
  {
    os_log_type_t v15 = sub_1C3DBA6B8();
    uint64_t v16 = sub_1C3DB9028();
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      LODWORD(v49) = v15;
      uint64_t v18 = v17;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v56 = v46;
      *(_DWORD *)uint64_t v18 = 136315650;
      os_log_t v45 = v16;
      uint64_t v19 = sub_1C3DBACC8();
      uint64_t v54 = sub_1C3C516D0(v19, v20, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      uint64_t v54 = 40;
      sub_1C3DBA9A8();
      *(_WORD *)(v18 + 22) = 2080;
      v44[1] = v18 + 24;
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v21 = objc_msgSend(v11, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      uint64_t v13 = v53;
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1C3C516D0(v54, v55, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v45;
      _os_log_impl(&dword_1C3A61000, v45, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v18, 0x20u);
      uint64_t v22 = v12;
      uint64_t v23 = v46;
      swift_arrayDestroy();
      uint64_t v24 = v23;
      uint64_t v12 = v22;
      MEMORY[0x1C877E600](v24, -1, -1);
      MEMORY[0x1C877E600](v18, -1, -1);
    }
  }
  long long v49 = *(void (**)(char *, uint64_t))(v13 + 8);
  v49(v6, v2);
  swift_release();
  uint64_t v25 = v52;
  id v26 = objc_msgSend(v11, sel_identifierURIPathComponent);
  if (v26)
  {
    unint64_t v27 = v26;
    uint64_t v28 = sub_1C3DB9C38();
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  uint64_t v47 = v44;
  MEMORY[0x1F4188790](v26);
  v44[-2] = v28;
  v44[-1] = v30;
  v48(v25, v12, v2);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 2;
  id v32 = v11;
  if (sub_1C3D6958C(v31, (uint64_t (*)(void))sub_1C3C51CF0))
  {

    uint64_t v33 = v25;
  }
  else
  {
    os_log_type_t v34 = sub_1C3DBA6B8();
    uint64_t v35 = sub_1C3DB9028();
    if (os_log_type_enabled(v35, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v48) = v34;
      uint64_t v37 = v36;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v56 = v46;
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v38 = sub_1C3DBACC8();
      uint64_t v54 = sub_1C3C516D0(v38, v39, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2048;
      uint64_t v54 = 42;
      sub_1C3DBA9A8();
      *(_WORD *)(v37 + 22) = 2080;
      os_log_t v45 = (os_log_t)(v37 + 24);
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0xD000000000000028;
      unint64_t v55 = 0x80000001C3DF1E20;
      id v40 = objc_msgSend(v32, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1C3C516D0(v54, v55, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v35, (os_log_type_t)v48, "Failed assertion at %s:%lu: %s", (uint8_t *)v37, 0x20u);
      uint64_t v41 = v46;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v41, -1, -1);
      MEMORY[0x1C877E600](v37, -1, -1);
    }

    uint64_t v33 = v52;
  }
  v49(v33, v2);
  uint64_t result = swift_release();
  uint64_t v43 = v51;
  unsigned char *v51 = v50;
  *((void *)v43 + 1) = v28;
  *((void *)v43 + 2) = v30;
  return result;
}

uint64_t ICTableObject<>.tableEntityIdentifier.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C3C5000C((uint64_t (*)(void))sub_1C3C51CC0, 88, (uint64_t (*)(void))sub_1C3C51CD0, 90, a1);
}

uint64_t sub_1C3C5000C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a4;
  long long v60 = a3;
  v62 = a5;
  uint64_t v7 = sub_1C3DB9048();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v63 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v51 - v11;
  id v13 = objc_msgSend(v5, sel_objectID);
  if (!objc_msgSend(v13, sel_ic_isModernType)) {
    objc_msgSend(v13, sel_ic_isLegacyType);
  }

  long long v57 = &v51;
  MEMORY[0x1F4188790](v14);
  int v61 = v15;
  *((unsigned char *)&v51 - 16) = v15;
  uint64_t v16 = qword_1EB6FC7B0;
  id v17 = v5;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB6FC798);
  uint64_t v19 = v8;
  long long v58 = *(void (**)(char *))(v8 + 16);
  uint64_t v59 = v18;
  v58(v12);
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 2;
  if (sub_1C3D6958C(v20, a1))
  {
  }
  else
  {
    os_log_type_t v21 = sub_1C3DBA6B8();
    uint64_t v22 = sub_1C3DB9028();
    if (os_log_type_enabled(v22, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      int v54 = v21;
      uint64_t v24 = v23;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v66 = v53;
      *(_DWORD *)uint64_t v24 = 136315650;
      os_log_t v52 = v22;
      uint64_t v25 = sub_1C3DBACC8();
      uint64_t v64 = sub_1C3C516D0(v25, v26, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      uint64_t v64 = v55;
      sub_1C3DBA9A8();
      *(_WORD *)(v24 + 22) = 2080;
      uint64_t v55 = v24 + 24;
      uint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v27 = objc_msgSend(v17, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      uint64_t v19 = v8;
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1C3C516D0(v64, v65, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      os_log_t v28 = v52;
      _os_log_impl(&dword_1C3A61000, v52, (os_log_type_t)v54, "Failed assertion at %s:%lu: %s", (uint8_t *)v24, 0x20u);
      uint64_t v29 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v29, -1, -1);
      MEMORY[0x1C877E600](v24, -1, -1);

      uint64_t v30 = v8;
      goto LABEL_11;
    }
  }
  uint64_t v30 = v8;
LABEL_11:
  uint64_t v31 = *(uint64_t (**)(void))(v30 + 8);
  ((void (*)(char *, uint64_t))v31)(v12, v7);
  swift_release();
  id v32 = v63;
  id v33 = objc_msgSend(v17, sel_identifierURIPathComponent);
  if (v33)
  {
    os_log_type_t v34 = v33;
    uint64_t v35 = sub_1C3DB9C38();
    unint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  long long v57 = &v51;
  MEMORY[0x1F4188790](v33);
  *(&v51 - 2) = v35;
  *(&v51 - 1) = v37;
  ((void (*)(char *, uint64_t, uint64_t))v58)(v32, v59, v7);
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 2;
  id v39 = v17;
  if (sub_1C3D6958C(v38, v60))
  {

    ((void (*)(char *, uint64_t))v31)(v32, v7);
  }
  else
  {
    long long v60 = v31;
    os_log_type_t v40 = sub_1C3DBA6B8();
    uint64_t v41 = sub_1C3DB9028();
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      LODWORD(v58) = v40;
      uint64_t v43 = v42;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v66 = v55;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v44 = sub_1C3DBACC8();
      uint64_t v59 = v19;
      uint64_t v64 = sub_1C3C516D0(v44, v45, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2048;
      uint64_t v64 = v56;
      sub_1C3DBA9A8();
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v56 = v43 + 24;
      uint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v64 = 0xD00000000000002CLL;
      unint64_t v65 = 0x80000001C3DF1FB0;
      id v46 = objc_msgSend(v39, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1C3C516D0(v64, v65, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v41, (os_log_type_t)v58, "Failed assertion at %s:%lu: %s", (uint8_t *)v43, 0x20u);
      uint64_t v47 = v55;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v47, -1, -1);
      MEMORY[0x1C877E600](v43, -1, -1);

      uint64_t v48 = v63;
    }
    else
    {

      uint64_t v48 = v32;
    }
    ((void (*)(char *, uint64_t))v60)(v48, v7);
  }
  uint64_t result = swift_release();
  int v50 = v62;
  unsigned char *v62 = v61;
  *((void *)v50 + 1) = v35;
  *((void *)v50 + 2) = v37;
  return result;
}

uint64_t ICAttachmentObject<>.entityIdentifier.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C3C5000C((uint64_t (*)(void))sub_1C3C51CF8, 28, (uint64_t (*)(void))sub_1C3C51CF0, 30, a1);
}

uint64_t ICSearchIndexableNote<>.entityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB9048();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v46 - v8;
  id v10 = objc_msgSend(v1, sel_objectID);
  unsigned int v11 = objc_msgSend(v10, sel_ic_isModernType);
  int v54 = v7;
  if (!v11) {
    objc_msgSend(v10, sel_ic_isLegacyType);
  }

  int v50 = v46;
  MEMORY[0x1F4188790](v12);
  int v53 = v13;
  LOBYTE(v46[-2]) = v13;
  uint64_t v14 = qword_1EB6FC7B0;
  id v15 = v1;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB6FC798);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v51(v9, v16, v3);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 2;
  char v18 = sub_1C3D6958C(v17, (uint64_t (*)(void))sub_1C3C51CF8);
  uint64_t v55 = v4;
  if (v18)
  {

    uint64_t v19 = v4;
  }
  else
  {
    os_log_type_t v20 = sub_1C3DBA6B8();
    os_log_type_t v21 = sub_1C3DB9028();
    if (os_log_type_enabled(v21, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      LODWORD(v52) = v20;
      uint64_t v23 = v22;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v58 = v48;
      *(_DWORD *)uint64_t v23 = 136315650;
      os_log_t v47 = v21;
      uint64_t v24 = sub_1C3DBACC8();
      uint64_t v49 = a1;
      uint64_t v56 = sub_1C3C516D0(v24, v25, &v58);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      uint64_t v56 = 16;
      sub_1C3DBA9A8();
      *(_WORD *)(v23 + 22) = 2080;
      v46[1] = v23 + 24;
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v26 = objc_msgSend(v15, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      a1 = v49;
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_1C3C516D0(v56, v57, &v58);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      os_log_type_t v21 = v47;
      _os_log_impl(&dword_1C3A61000, v47, (os_log_type_t)v52, "Failed assertion at %s:%lu: %s", (uint8_t *)v23, 0x20u);
      uint64_t v27 = v48;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v27, -1, -1);
      MEMORY[0x1C877E600](v23, -1, -1);
    }

    uint64_t v19 = v55;
  }
  os_log_t v52 = *(void (**)(char *, uint64_t))(v19 + 8);
  v52(v9, v3);
  swift_release();
  id v28 = objc_msgSend(v15, sel_identifier);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_1C3DB9C38();

    uint64_t v30 = sub_1C3DB9C98();
    unint64_t v32 = v31;
    id v28 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  MEMORY[0x1F4188790](v28);
  v46[-2] = v30;
  v46[-1] = v32;
  id v33 = v54;
  v51(v54, v16, v3);
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = 2;
  id v35 = v15;
  if (sub_1C3D6958C(v34, (uint64_t (*)(void))sub_1C3C51CF0))
  {

    v52(v33, v3);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v51 = (void (*)(char *, uint64_t, uint64_t))v46;
    os_log_type_t v37 = sub_1C3DBA6B8();
    uint64_t v38 = sub_1C3DB9028();
    if (os_log_type_enabled(v38, v37))
    {
      uint64_t v39 = swift_slowAlloc();
      LODWORD(v50) = v37;
      uint64_t v40 = v39;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v58 = v48;
      *(_DWORD *)uint64_t v40 = 136315650;
      uint64_t v41 = sub_1C3DBACC8();
      uint64_t v49 = a1;
      uint64_t v56 = sub_1C3C516D0(v41, v42, &v58);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2048;
      uint64_t v56 = 18;
      sub_1C3DBA9A8();
      *(_WORD *)(v40 + 22) = 2080;
      os_log_t v47 = (os_log_t)(v40 + 24);
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v56 = 0xD000000000000026;
      unint64_t v57 = 0x80000001C3DF2050;
      id v43 = objc_msgSend(v35, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      a1 = v49;
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_1C3C516D0(v56, v57, &v58);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v38, (os_log_type_t)v50, "Failed assertion at %s:%lu: %s", (uint8_t *)v40, 0x20u);
      uint64_t v44 = v48;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v44, -1, -1);
      MEMORY[0x1C877E600](v40, -1, -1);

      unint64_t v45 = v54;
    }
    else
    {

      unint64_t v45 = v33;
    }
    v52(v45, v3);
    uint64_t result = swift_release();
  }
  *(unsigned char *)a1 = v53;
  *(void *)(a1 + 8) = v30;
  *(void *)(a1 + 16) = v32;
  return result;
}

BOOL sub_1C3C50FD8(char a1)
{
  return a1 != 2;
}

void ICAccountObject<>.entityIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_objectID);
  if (objc_msgSend(v4, sel_ic_isModernType)) {
    unsigned __int8 v5 = 0;
  }
  else {
    unsigned __int8 v5 = objc_msgSend(v4, sel_ic_isLegacyType);
  }

  id v6 = v2;
  if (objc_msgSend(v6, sel_isLocalAccount))
  {

    uint64_t v7 = 0;
    unint64_t v8 = 0;
  }
  else
  {
    id v9 = objc_msgSend(v6, sel_emailAddress);
    if (v9)
    {
      id v10 = v9;
      uint64_t v7 = sub_1C3DB9C38();
      unint64_t v8 = v11;
    }
    else
    {

      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v5;
}

void NoteAccountObject.entityIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_objectID);
  unsigned __int8 v5 = objc_msgSend(v4, sel_ic_isModernType);
  if ((v5 & 1) == 0) {
    objc_msgSend(v4, sel_ic_isLegacyType);
  }

  id v6 = v2;
  if (objc_msgSend(v6, sel_isLocalAccount))
  {

    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    id v9 = objc_msgSend(self, sel_emailAddressForAccount_, v6);
    uint64_t v7 = sub_1C3DB9C38();
    uint64_t v8 = v10;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v5 ^ 1;
}

void ICHashtag.entityIdentifier.getter(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_displayText);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1C3DB9C38();
    uint64_t v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1C3C51224(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  return v2 != 0;
}

void NotesAssistantFolderOption.entityIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB9048();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v1, sel_managedObjectID);
  if (objc_msgSend(v7, sel_ic_isModernType))
  {

    int v9 = 0;
  }
  else
  {
    unsigned int v10 = objc_msgSend(v7, sel_ic_isLegacyType);

    if (v10) {
      int v9 = 1;
    }
    else {
      int v9 = 2;
    }
  }
  MEMORY[0x1F4188790](v8);
  LOBYTE(v27[-2]) = v9;
  uint64_t v11 = qword_1EB6FC7B0;
  id v12 = v1;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB6FC798);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 2;
  if (sub_1C3D6958C(v14, (uint64_t (*)(void))sub_1C3C51CF8))
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
  }
  else
  {
    unint64_t v32 = v27;
    os_log_type_t v15 = sub_1C3DBA6B8();
    uint64_t v16 = sub_1C3DB9028();
    int v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v35 = v29;
      *(_DWORD *)uint64_t v18 = 136315650;
      int v28 = v17;
      uint64_t v19 = sub_1C3DBACC8();
      int v30 = v9;
      uint64_t v33 = sub_1C3C516D0(v19, v20, &v35);
      uint64_t v31 = a1;
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      uint64_t v33 = 98;
      sub_1C3DBA9A8();
      *(_WORD *)(v18 + 22) = 2080;
      v27[1] = v18 + 24;
      uint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v21 = objc_msgSend(v12, sel_description);
      sub_1C3DB9C38();

      a1 = v31;
      sub_1C3DB9D68();
      LOBYTE(v9) = v30;
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_1C3C516D0(v33, v34, &v35);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v16, (os_log_type_t)v28, "Failed assertion at %s:%lu: %s", (uint8_t *)v18, 0x20u);
      uint64_t v22 = v29;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v22, -1, -1);
      MEMORY[0x1C877E600](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
  }
  id v23 = objc_msgSend(v12, sel_identifierURIPathComponent);
  uint64_t v24 = sub_1C3DB9C38();
  uint64_t v26 = v25;

  *(unsigned char *)a1 = v9;
  *(void *)(a1 + 8) = v24;
  *(void *)(a1 + 16) = v26;
}

uint64_t sub_1C3C516C0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3C516D0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C3C517A4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C3C4BC70((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C3C4BC70((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1C3C517A4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C3DBA9B8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C3C51960(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C3DBADD8();
  if (!v8)
  {
    sub_1C3DBAF48();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C3DBAFF8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C3C51960(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C3C519F8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C3C51B70(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C3C51B70(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C3C519F8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C3D396D8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C3DBAC78();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C3DBAF48();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C3DB9D98();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C3DBAFF8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C3C51B70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC4B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

BOOL sub_1C3C51CC0()
{
  return *(unsigned char *)(v0 + 16) != 2;
}

BOOL sub_1C3C51CD0()
{
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  return v2 != 0;
}

uint64_t ICTTAudioDocument.orderedFragments.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  self;
  unint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return v3;
  }
  id v5 = objc_msgSend(v4, sel_fragments);
  swift_unknownObjectRelease();
  id v6 = objc_msgSend(v5, sel_allObjects);

  type metadata accessor for ICTTAudioRecording.Fragment();
  unint64_t v7 = sub_1C3DBA018();

  uint64_t v16 = (void *)v3;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRetain();
    if ((v13 & 0x8000000000000000) != 0 || (uint64_t v14 = (void *)v13, (v13 & 0x4000000000000000) != 0))
    {
      uint64_t v14 = sub_1C3C56A10(v13);
      swift_release();
    }
    uint64_t v16 = v14;
    sub_1C3C56D64((uint64_t *)&v16);
    swift_release();
    return (uint64_t)v16;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C3DBAFB8();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_17;
  }
LABEL_5:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C877C220](i, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * i + 32);
      }
      size_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_createdDate);

      if (v12)
      {
        sub_1C3DBAE18();
        sub_1C3DBAE58();
        sub_1C3DBAE68();
        sub_1C3DBAE28();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v13 = (unint64_t)v16;
    goto LABEL_18;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void ICTTAudioDocument.append(_:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_fragments);
      swift_unknownObjectRelease();
      objc_msgSend(v6, sel_addObject_, a1);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void ICTTAudioDocument.recordingSummary.setter(void *a1)
{
}

id ICTTAudioDocument.recordingSummary.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_summary);
}

void ICTTAudioDocument.recordingSummaryVersion.setter(void *a1)
{
}

void ICTTAudioDocument.summaryModelVersionInfo.setter(void *a1)
{
}

void ICTTAudioDocument.topLineSummary.setter(void *a1)
{
}

id ICTTAudioDocument.topLineSummary.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_topLineSummary);
}

void ICTTAudioDocument.toplineModelVersionInfo.setter(void *a1)
{
}

void *ICTTAudioDocument.fragment(for:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (!v4) {
    return 0;
  }
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v6 = objc_msgSend(v5, sel_fragments);
  swift_unknownObjectRelease();
  id v7 = objc_msgSend(v6, sel_allObjects);

  type metadata accessor for ICTTAudioRecording.Fragment();
  unint64_t v8 = sub_1C3DBA018();

  MEMORY[0x1F4188790](v9);
  v12[2] = a1;
  id v10 = sub_1C3C5461C(sub_1C3C57BB0, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C3C5220C(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C3C9D34C(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x1C877C220](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      unint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_identity);
      sub_1C3DB8B58();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_1C3C9D34C(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C52434()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA386160);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA386160);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id ICTTAudioDocument.init(replicaID:compatibleDocument:)(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_1C3DB8B38();
  id v6 = objc_msgSend(v4, sel_initWithReplicaID_compatibleDocument_, v5, a2);

  uint64_t v7 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

uint64_t ICTTAudioDocument.init(replicaID:compatibleDocument:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v30 - v14;
  if (a2)
  {
    *(void *)&v3[OBJC_IVAR___ICTTAudioDocument_document] = a2;
LABEL_9:
    v34.receiver = v3;
    v34.super_class = (Class)ICTTAudioDocument;
    id v29 = objc_msgSendSuper2(&v34, sel_init, v30);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    return (uint64_t)v29;
  }
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v31 = a1;
  v16((char *)&v30 - v14, a1, v6);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v33(v15, 0, 1, v6);
  unint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v17 = v32(v15, 1, v6);
  int v30 = v3;
  if (v17 == 1)
  {
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = (void *)sub_1C3DB8B38();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  id v19 = objc_msgSend(objc_allocWithZone((Class)ICCRTTCompatibleDocument), sel_initWithReplica_, v18);

  id v20 = objc_msgSend(self, sel_TTZero);
  if (v20)
  {
    id v21 = v20;
    sub_1C3DB8B58();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    v33(v13, 0, 1, v6);
    uint64_t result = v32(v13, 1, v6);
    if (result != 1)
    {
      id v23 = objc_allocWithZone((Class)ICTTAudioRecording);
      id v24 = v19;
      uint64_t v25 = (void *)sub_1C3DB8B38();
      id v26 = objc_msgSend(v23, sel_initWithDocument_identity_, v24, v25);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      id v27 = v24;
      objc_msgSend(v27, sel_setRootObject_, v26);

      int v28 = v30;
      *(void *)&v30[OBJC_IVAR___ICTTAudioDocument_document] = v27;

      a1 = v31;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = v33(v13, 1, 1, v6);
  }
  __break(1u);
  return result;
}

uint64_t ICTTAudioDocument.archivedData()()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_archivedData);

  uint64_t v3 = sub_1C3DB8958();
  return v3;
}

id sub_1C3C52B64()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386080);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v1 = (void *)sub_1C3DB8938();
  id v2 = (void *)sub_1C3DB8B38();
  id v3 = objc_msgSend(ObjCClassFromMetadata, sel_unarchiveFromData_replica_, v1, v2);

  if (!v3) {
    return 0;
  }
  v11[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386220);
  v11[0] = v3;
  id v4 = v3;
  uint64_t v5 = (void *)sub_1C3C45BC4((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = v5;
  uint64_t v8 = (void *)sub_1C3DB8B38();
  id v9 = objc_msgSend(v6, sel_initWithReplicaID_compatibleDocument_, v8, v7, v11[0]);

  return v9;
}

id ICTTAudioDocument.merge(withMergeableData:replicaID:)()
{
  id v1 = v0;
  id v2 = self;
  id v3 = (void *)sub_1C3DB8938();
  id v4 = (void *)sub_1C3DB8B38();
  id v5 = objc_msgSend(v2, sel_unarchiveFromData_replicaID_, v3, v4);

  if (v5)
  {
    id v6 = objc_msgSend(v1, sel_document);
    id v7 = objc_msgSend(v5, sel_document);
    id v8 = objc_msgSend(v6, sel_mergeWithDocument_, v7);
  }
  else
  {
    if (qword_1EA385690 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C3DB9048();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EA386160);
    id v7 = sub_1C3DB9028();
    os_log_type_t v10 = sub_1C3DBA6B8();
    if (os_log_type_enabled(v7, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1C3A61000, v7, v10, "could not unarchive audio document", v11, 2u);
      MEMORY[0x1C877E600](v11, -1, -1);
    }
    id v8 = 0;
  }

  return v8;
}

uint64_t ICTTAudioDocument.orderedFragmentUUIDs.getter()
{
  unint64_t v0 = ICTTAudioDocument.orderedFragments.getter();
  uint64_t v1 = sub_1C3C5220C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C3C53198(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v54 = (os_log_t)sub_1C3DB8B98();
  Class isa = v54[-1].isa;
  uint64_t v7 = MEMORY[0x1F4188790](v54);
  id v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v10 = (char *)&v43 - v9;
  id v47 = v1;
  id v11 = objc_msgSend(v1, sel_document);
  id v12 = objc_msgSend(v11, sel_rootObject);

  if (!v12) {
    goto LABEL_23;
  }
  self;
  unint64_t v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_23:
    if (qword_1EA385690 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C3DB9048();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EA386160);
    os_log_t v54 = (os_log_t)sub_1C3DB9028();
    os_log_type_t v40 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v54, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1C3A61000, v54, v40, "Cannot update fragment identities after load because fragments are unavailable", v41, 2u);
      MEMORY[0x1C877E600](v41, -1, -1);
    }
    os_log_t v42 = v54;

    return;
  }
  id v45 = objc_msgSend(v13, sel_fragments);
  swift_unknownObjectRelease();
  unint64_t v14 = ICTTAudioDocument.orderedFragments.getter();
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    uint64_t v16 = sub_1C3DBAFB8();
    if (v16) {
      goto LABEL_5;
    }
LABEL_31:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16) {
    goto LABEL_31;
  }
LABEL_5:
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v51 = a1;
    unint64_t v52 = v15 & 0xC000000000000001;
    uint64_t v18 = (void (**)(char *, os_log_t))((char *)isa + 8);
    uint64_t v48 = (unsigned int (**)(char *, uint64_t, os_log_t))((char *)isa + 48);
    uint64_t v49 = v5;
    uint64_t v44 = (void (**)(char *, char *, os_log_t))((char *)isa + 32);
    int v50 = (void (**)(char *, uint64_t, uint64_t, os_log_t))((char *)isa + 56);
    unint64_t v53 = v15;
    while (1)
    {
      id v19 = v52 ? (id)MEMORY[0x1C877C220](v17, v15) : *(id *)(v15 + 8 * v17 + 32);
      id v20 = v19;
      id v21 = objc_msgSend(v19, sel_identity);
      sub_1C3DB8B58();

      uint64_t v22 = sub_1C3DB8B28();
      uint64_t v24 = v23;
      uint64_t v25 = *v18;
      (*v18)(v10, v54);
      if (!*(void *)(a1 + 16)) {
        break;
      }
      sub_1C3C2A4F8(v22, v24);
      if ((v26 & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C3DB8B18();
      a1 = v51;
      swift_bridgeObjectRelease_n();
      if ((*v48)(v5, 1, v54) == 1) {
        goto LABEL_17;
      }
      id v27 = v46;
      (*v44)(v46, v49, v54);
      type metadata accessor for ICTTAudioRecording.Fragment();
      id v28 = objc_msgSend(v47, sel_document);
      id v29 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      int v30 = (void *)sub_1C3DB8B38();
      id v31 = objc_msgSend(v29, sel_initWithDocument_identity_, v28, v30);

      sub_1C3C57DD8(v20, v31);
      id v32 = v45;
      objc_msgSend(v45, sel_removeObject_, v20);
      objc_msgSend(v32, sel_addObject_, v31);

      a1 = v51;
      uint64_t v33 = v27;
      id v5 = v49;
      v25(v33, v54);
LABEL_8:
      ++v17;
      unint64_t v15 = v53;
      if (v16 == v17)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    (*v50)(v5, 1, 1, v54);
LABEL_17:
    sub_1C3C2A448((uint64_t)v5, &qword_1EB6FC060);
    if (qword_1EA385690 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1C3DB9048();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EA386160);
    uint64_t v35 = sub_1C3DB9028();
    os_log_type_t v36 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v35, v36))
    {
      os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v37 = 0;
      _os_log_impl(&dword_1C3A61000, v35, v36, "Cannot update fragment identity after load because mapped identity is missing", v37, 2u);
      uint64_t v38 = v37;
      a1 = v51;
      MEMORY[0x1C877E600](v38, -1, -1);
    }
    else
    {
    }
    goto LABEL_8;
  }
  __break(1u);
}

id ICTTAudioDocument.fragments.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  if (!v2) {
    return 0;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v4 = objc_msgSend(v3, sel_fragments);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t ICTTAudioDocument.transcriptAsPlainText.getter()
{
  uint64_t v0 = sub_1C3DB84F8();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1C3DB85C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v17 - v6;
  uint64_t v8 = ICTTAudioDocument.transcriptViewModelSegments.getter();
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C3DB85B8();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    v17[0] = v0;
    uint64_t v10 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
    uint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C3CC93A8((uint64_t)v5, v11, &v18);
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3DB84E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  sub_1C3C57BD0();
  uint64_t v18 = sub_1C3DB9E68();
  unint64_t v19 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C3DB9D18();
  uint64_t v15 = swift_bridgeObjectRelease();
  if (v14 > 0)
  {
    sub_1C3C541E4(v15);
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t ICTTAudioDocument.transcriptViewModelSegments.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386190);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v38 = *(void *)(v41 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v41);
  uint64_t v40 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v37 = (uint64_t)&v27 - v7;
  double v45 = 0.0;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  double v43 = 0.0;
  double v44 = 0.0;
  unint64_t v8 = ICTTAudioDocument.orderedFragments.getter();
  uint64_t v10 = v8;
  if (v8 >> 62) {
    goto LABEL_36;
  }
  for (uint64_t i = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_1C3DBAFB8())
  {
    unint64_t v12 = 0;
    unint64_t v33 = v10 & 0xC000000000000001;
    uint64_t v30 = v10 & 0xFFFFFFFFFFFFFF8;
    uint64_t v31 = v10;
    uint64_t v29 = v10 + 32;
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    id v28 = &v43;
    *(void *)&long long v9 = 138412290;
    long long v27 = v9;
    uint64_t v36 = v1;
    uint64_t v32 = i;
    while (1)
    {
      if (v33)
      {
        id v14 = (id)MEMORY[0x1C877C220](v12, v31);
        BOOL v15 = __OFADD__(v12, 1);
        unint64_t v16 = v12 + 1;
        if (v15) {
          goto LABEL_34;
        }
      }
      else
      {
        if (v12 >= *(void *)(v30 + 16)) {
          goto LABEL_35;
        }
        id v14 = *(id *)(v29 + 8 * v12);
        BOOL v15 = __OFADD__(v12, 1);
        unint64_t v16 = v12 + 1;
        if (v15) {
          goto LABEL_34;
        }
      }
      id v34 = v14;
      unint64_t v35 = v16;
      uint64_t v10 = (uint64_t)objc_msgSend(v14, sel_transcript, (void)v27, *((void *)&v27 + 1), v28);
      id v17 = objc_msgSend((id)v10, sel_allObjects);

      type metadata accessor for ICTTTranscriptSegment();
      uint64_t v18 = sub_1C3DBA018();

      if ((unint64_t)v18 >> 62) {
        break;
      }
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19) {
        goto LABEL_14;
      }
LABEL_4:
      uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_5:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain();
      sub_1C3D79344(v13);
      swift_bridgeObjectRelease();

      double v45 = v44 + v43;
      unint64_t v12 = v35;
      if (v35 == v32)
      {
        swift_bridgeObjectRelease();
        return v46;
      }
    }
    if (v18 < 0) {
      uint64_t v10 = v18;
    }
    else {
      uint64_t v10 = v18 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C3DBAFB8();
    if (!v19) {
      goto LABEL_4;
    }
LABEL_14:
    uint64_t v20 = 4;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    while (1)
    {
      id v21 = (v18 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C877C220](v20 - 4, v18)
          : *(id *)(v18 + 8 * v20);
      uint64_t v10 = (uint64_t)v21;
      uint64_t v22 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      id v42 = v21;
      sub_1C3C55348(&v42);

      if ((*v39)(v4, 1, v41) == 1)
      {
        sub_1C3C2A448((uint64_t)v4, (uint64_t *)&unk_1EA386190);
      }
      else
      {
        uint64_t v23 = v37;
        sub_1C3C57C4C((uint64_t)v4, v37);
        sub_1C3C57C4C(v23, v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1C3D82FC8(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v25 = *(void *)(v13 + 16);
        unint64_t v24 = *(void *)(v13 + 24);
        uint64_t v10 = v25 + 1;
        if (v25 >= v24 >> 1) {
          uint64_t v13 = sub_1C3D82FC8(v24 > 1, v25 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v10;
        sub_1C3C57C4C(v40, v13+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v25);
        uint64_t v1 = v36;
      }
      ++v20;
      if (v22 == v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    ;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3C541E4(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x1F4183A58](a1);
  }
LABEL_5:
  a1 = sub_1C3DB9D28();
  return MEMORY[0x1F4183A58](a1);
}

uint64_t ICTTAudioDocument.transcriptVersion.getter()
{
  unint64_t v0 = ICTTAudioDocument.orderedFragments.getter();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t result = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v4 = 0;
    goto LABEL_9;
  }
  uint64_t result = sub_1C3DBAFB8();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C877C220](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v3 = *(id *)(v1 + 32);
LABEL_6:
    uint64_t v4 = v3;
LABEL_9:
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v4, sel_transcriptVersion);

    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void __swiftcall ICTTAudioDocument.init()(ICTTAudioDocument *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void ICTTAudioDocument.init()()
{
}

uint64_t static ICTTAudioDocument.currentTranscriptVersion.getter()
{
  return 1;
}

uint64_t static ICTTAudioDocument.currentSummaryVersion.getter()
{
  return 0;
}

uint64_t ICTTAudioDocument.root.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result) {
      return result;
    }
    swift_unknownObjectRelease();
  }
  return 0;
}

uint64_t sub_1C3C54510(id *a1)
{
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_identity);
  sub_1C3DB8B58();

  char v7 = sub_1C3DB8B48();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void *sub_1C3C5461C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1C3DBAFB8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C877C220](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void (*ICTTAudioDocument.topLineSummary.modify(void *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_topLineSummary);

  *a1 = v6;
  return sub_1C3C5481C;
}

void sub_1C3C5481C(id *a1, char a2)
{
}

id ICTTAudioDocument.hasToplineSummary.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();
    if (!v3) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v3, sel_topLineSummary);

  if (!v4) {
    return 0;
  }
  id result = objc_msgSend(v4, sel_attributedString);
  if (result)
  {
    id v6 = result;
    id v7 = objc_msgSend(result, sel_string);

    uint64_t v8 = sub_1C3DB9C38();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    return (id)(v11 != 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*ICTTAudioDocument.recordingSummary.modify(void *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_summary);

  *a1 = v6;
  return sub_1C3C54A68;
}

void sub_1C3C54A68(id *a1, char a2)
{
}

id ICTTAudioDocument.recordingSummaryVersion.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_summaryVersion);
}

void (*ICTTAudioDocument.recordingSummaryVersion.modify(void *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_summaryVersion);

  *a1 = v6;
  return sub_1C3C54B58;
}

void sub_1C3C54B58(id *a1, char a2)
{
}

id ICTTAudioDocument.toplineModelVersionInfo.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_toplineSummaryModelVersionInfo);
}

void (*ICTTAudioDocument.toplineModelVersionInfo.modify(void *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_toplineSummaryModelVersionInfo);

  *a1 = v6;
  return sub_1C3C54C48;
}

void sub_1C3C54C48(id *a1, char a2)
{
}

id ICTTAudioDocument.summaryModelVersionInfo.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_longformSummaryModelVersionInfo);
}

void sub_1C3C54C60(id *a1@<X0>, SEL *a2@<X3>, void *a3@<X8>)
{
  id v5 = objc_msgSend(*a1, sel_document);
  id v6 = objc_msgSend(v5, sel_rootObject);

  if (v6)
  {
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v7 = 0;
  }
  id v8 = [v7 *a2];

  *a3 = v8;
}

void sub_1C3C54D18(id *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v6 = *a2;
  id v10 = *a1;
  id v7 = objc_msgSend(v6, sel_document);
  id v8 = objc_msgSend(v7, sel_rootObject);

  if (v8)
  {
    self;
    unint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v9 = 0;
  }
  objc_msgSend(v9, *a5, v10);
}

void (*ICTTAudioDocument.summaryModelVersionInfo.modify(void *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = objc_msgSend(v5, sel_longformSummaryModelVersionInfo);

  *a1 = v6;
  return sub_1C3C54EC4;
}

void sub_1C3C54EC4(id *a1, char a2)
{
}

void sub_1C3C54ED0(id *a1, char a2, SEL *a3)
{
  id v4 = *a1;
  id v5 = a1[1];
  if (a2)
  {
    id v4 = v4;
    id v6 = objc_msgSend(v5, sel_document);
    id v7 = objc_msgSend(v6, sel_rootObject);

    if (v7)
    {
      self;
      id v8 = (void *)swift_dynamicCastObjCClass();
      if (v8)
      {
LABEL_6:
        id v12 = v8;
        objc_msgSend(v8, *a3, v4);

        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
    id v8 = 0;
    goto LABEL_6;
  }
  id v9 = objc_msgSend(a1[1], sel_document);
  id v10 = objc_msgSend(v9, sel_rootObject);

  if (!v10) {
    goto LABEL_10;
  }
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
LABEL_10:
    uint64_t v11 = 0;
  }
  id v12 = v11;
  objc_msgSend(v11, *a3, v4);
LABEL_12:
}

id ICTTAudioDocument.isCallRecording.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_callRecording);
      swift_unknownObjectRelease();
      if (v4)
      {
        id v2 = objc_msgSend(v4, sel_BOOLValue);

        return v2;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return v2;
}

void ICTTAudioDocument.isCallRecording.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = (void *)v5;
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a1 & 1);
      objc_msgSend(v6, sel_setCallRecording_, v7);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1C3C55348(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_text);
  if (v1)
  {
    id v2 = v1;
    uint64_t v5 = 0;
    sub_1C3DB9C28();
  }
  sub_1C3C2F090();
  swift_allocError();
  *id v3 = 12;
  return swift_willThrow();
}

id ICTTAudioDocument.callType.getter()
{
  id v1 = objc_msgSend(v0, sel_document);
  id v2 = objc_msgSend(v1, sel_rootObject);

  if (v2)
  {
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_callType);
      swift_unknownObjectRelease();
      if (v4)
      {
        id v5 = objc_msgSend(v4, sel_unsignedIntegerValue);

        return v5;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

void ICTTAudioDocument.callType.setter(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = (void *)v5;
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithUnsignedInteger_, a1);
      objc_msgSend(v6, sel_setCallType_, v7);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id ICTTAudioDocument.localSpeakerHandle.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_callLocalSpeakerHandle);
}

void ICTTAudioDocument.localSpeakerHandle.setter(void *a1)
{
}

id ICTTAudioDocument.remoteSpeakerHandle.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_callRemoteSpeakerHandle);
}

void ICTTAudioDocument.remoteSpeakerHandle.setter(void *a1)
{
}

id sub_1C3C55AA0(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_document);
  id v6 = objc_msgSend(v5, sel_rootObject);

  if (v6)
  {
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v7 = 0;
  }
  id v8 = [v7 *a3];

  return v8;
}

id ICTTAudioDocument.callRecordingStartTime.getter()
{
  return sub_1C3C55B78((SEL *)&selRef_callRecordingStartTime);
}

id sub_1C3C55B78(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = [v5 *a1];

  return v6;
}

void sub_1C3C55C38(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = a1;
  id v10 = a3;
  id v7 = objc_msgSend(v6, sel_document);
  id v8 = objc_msgSend(v7, sel_rootObject);

  if (v8)
  {
    self;
    id v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v9 = 0;
  }
  objc_msgSend(v9, *a4, v10);
}

void ICTTAudioDocument.callRecordingStartTime.setter(void *a1)
{
}

void sub_1C3C55D20(void *a1, SEL *a2)
{
  id v4 = objc_msgSend(v2, sel_document);
  id v5 = objc_msgSend(v4, sel_rootObject);

  if (v5)
  {
    self;
    id v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v6 = 0;
  }
  objc_msgSend(v6, *a2, a1);
}

id sub_1C3C55E00(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  id v5 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  return v5;
}

void ICTTAudioDocument.topLineSummaryAsPlainText.getter()
{
}

void ICTTAudioDocument.recordingSummaryAsPlainText.getter()
{
}

void sub_1C3C55EA0(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_document);
  id v4 = objc_msgSend(v3, sel_rootObject);

  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v6 = [v5 *a1];

  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_attributedString);

    if (v7)
    {
      id v8 = objc_msgSend(v7, sel_string);

      sub_1C3DB9C38();
    }
    else
    {
      __break(1u);
    }
  }
}

id ICTTAudioRecording.init(identity:fields:)(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v3 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  id v4 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_initWithIdentity_fields_, v3, v4);

  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v5;
}

{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  id v2 = v1;
  id v4 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  id v5 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  v9.receiver = v2;
  v9.super_class = (Class)ICTTAudioRecording;
  uint64_t v6 = objc_msgSendSuper2(&v9, sel_initWithIdentity_fields_, v4, v5);

  id v7 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

void __swiftcall ICTTAudioRecording.init(iccrCoder:)(ICTTAudioRecording_optional *__return_ptr retstr, ICCRCoder iccrCoder)
{
  Class isa = iccrCoder.super.isa;
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithICCRCoder_, iccrCoder.super.isa);
}

id ICTTAudioRecording.init(iccrCoder:)(void *a1)
{
  v4.super_class = (Class)ICTTAudioRecording;
  id v2 = objc_msgSendSuper2(&v4, sel_initWithICCRCoder_, a1);

  return v2;
}

id sub_1C3C56450(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  id v3 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8document8identityAESo0A8DocumentC_10Foundation4UUIDVtcfC_0(void *a1, uint64_t a2)
{
  id v3 = v2;
  id v6 = objc_allocWithZone(v3);
  id v7 = objc_msgSend(a1, sel_document);
  id v8 = (void *)sub_1C3DB8B38();
  id v9 = objc_msgSend(v6, sel_initWithDocument_identity_, v7, v8);

  uint64_t v10 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a2, v10);
  return v9;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8identity6fieldsAE10Foundation4UUIDV_SDySSSo12ICCRDataType_pGtcfC_0(uint64_t a1)
{
  id v2 = v1;
  id v4 = objc_allocWithZone(v2);
  id v5 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  id v6 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithIdentity_fields_, v5, v6);

  uint64_t v8 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC8identity6fieldsAE10Foundation4UUIDV_SDySSSo12ICCRDataType_pGtcfc_0(uint64_t a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  id v6 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v10, sel_initWithIdentity_fields_, v5, v6);

  uint64_t v8 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id ICTTTranscriptSegment.__allocating_init(iccrCoder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithICCRCoder_, a1);

  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC9iccrCoderAESgSo9ICCRCoderC_tcfc_0(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithICCRCoder_, a1);

  return v3;
}

id _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1C3C56A10(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      id v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
      id v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1C3D8790C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_1C3C56B08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      id v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
      id v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

void *sub_1C3C56C7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_1C3C59E34((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C3C4C744();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C3C56D64(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C3D70F4C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C3C56DE0(v6);
  return sub_1C3DBAE28();
}

void sub_1C3C56DE0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1C3DBB228();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      sub_1C3C57658(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v116 = v3;
  uint64_t v112 = v4;
  v110 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v119 = MEMORY[0x1E4FBC860];
    v117 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_118:
      if (v12 >= 2)
      {
        uint64_t v104 = *v110;
        do
        {
          unint64_t v105 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v104) {
            goto LABEL_159;
          }
          uint64_t v106 = *(void *)&v8[16 * v105 + 32];
          uint64_t v107 = *(void *)&v8[16 * v12 + 24];
          sub_1C3C577AC((id *)(v104 + 8 * v106), (id *)(v104 + 8 * *(void *)&v8[16 * v12 + 16]), v104 + 8 * v107, v117);
          if (v1) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C3D70EE8((uint64_t)v8);
          }
          if (v105 >= *((void *)v8 + 2)) {
            goto LABEL_149;
          }
          v108 = &v8[16 * v105 + 32];
          *(void *)v108 = v106;
          *((void *)v108 + 1) = v107;
          unint64_t v109 = *((void *)v8 + 2);
          if (v12 > v109) {
            goto LABEL_150;
          }
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v109 - v12));
          *((void *)v8 + 2) = v109 - 1;
          unint64_t v12 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C3DBA038();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for ICTTAudioRecording.Fragment();
    uint64_t v7 = sub_1C3DBA0A8();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v3 = v116;
    v117 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v119 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v11 = &selRef_dataForQuickLook;
  uint64_t v118 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    v115 = v8;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = *(void **)(v10 + 8 * v13);
    id v15 = *(id *)(v10 + 8 * v9);
    id v16 = v14;
    id v17 = [v15 v11[414]];
    if (!v17)
    {
      uint64_t v18 = v16;
      goto LABEL_22;
    }
    uint64_t v18 = v17;
    id v19 = [v16 v11[414]];
    if (!v19) {
      break;
    }
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v18, sel_compare_, v19);

    BOOL v22 = v21 == (id)-1;
    uint64_t v23 = v13 + 2;
    uint64_t v8 = v115;
    uint64_t v10 = v118;
    uint64_t v11 = &selRef_dataForQuickLook;
    if (v13 + 2 < v116) {
      goto LABEL_29;
    }
LABEL_37:
    uint64_t v9 = v23;
    if (v22) {
      goto LABEL_38;
    }
LABEL_46:
    uint64_t v41 = v116;
    if (v9 < v116)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v112)
      {
        if (__OFADD__(v13, v112)) {
          goto LABEL_153;
        }
        if (v13 + v112 < v116) {
          uint64_t v41 = v13 + v112;
        }
        if (v41 < v13)
        {
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (v9 != v41)
        {
          uint64_t v42 = v111 + 8 * v9;
          uint64_t v113 = v41;
          uint64_t v114 = v13;
          do
          {
            double v44 = *(void **)(v10 + 8 * v9);
            uint64_t v45 = v42;
            while (1)
            {
              uint64_t v46 = *(void **)v45;
              id v47 = v44;
              id v48 = v46;
              id v49 = objc_msgSend(v47, sel_createdDate);
              if (!v49)
              {
                double v43 = v48;
                goto LABEL_56;
              }
              double v43 = v49;
              id v50 = objc_msgSend(v48, sel_createdDate);
              if (!v50) {
                break;
              }
              uint64_t v51 = v50;
              id v52 = objc_msgSend(v43, sel_compare_, v50);

              if (v52 != (id)-1) {
                goto LABEL_57;
              }
              uint64_t v10 = v118;
              if (!v118) {
                goto LABEL_156;
              }
              unint64_t v53 = *(void **)v45;
              double v44 = *(void **)(v45 + 8);
              *(void *)uint64_t v45 = v44;
              *(void *)(v45 + 8) = v53;
              v45 -= 8;
              if (v9 == ++v13) {
                goto LABEL_58;
              }
            }

            id v47 = v48;
LABEL_56:

LABEL_57:
            uint64_t v10 = v118;
LABEL_58:
            ++v9;
            v42 += 8;
            uint64_t v13 = v114;
          }
          while (v9 != v113);
          uint64_t v9 = v113;
          uint64_t v8 = v115;
        }
      }
    }
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C3D70A34(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v55 = *((void *)v8 + 2);
    unint64_t v54 = *((void *)v8 + 3);
    unint64_t v12 = v55 + 1;
    uint64_t v10 = v118;
    if (v55 >= v54 >> 1)
    {
      v103 = sub_1C3D70A34((char *)(v54 > 1), v55 + 1, 1, v8);
      uint64_t v10 = v118;
      uint64_t v8 = v103;
    }
    *((void *)v8 + 2) = v12;
    uint64_t v56 = v8 + 32;
    unint64_t v57 = &v8[16 * v55 + 32];
    *(void *)unint64_t v57 = v13;
    *((void *)v57 + 1) = v9;
    if (v55)
    {
      while (1)
      {
        unint64_t v58 = v12 - 1;
        if (v12 >= 4)
        {
          v63 = &v56[16 * v12];
          uint64_t v64 = *((void *)v63 - 8);
          uint64_t v65 = *((void *)v63 - 7);
          BOOL v69 = __OFSUB__(v65, v64);
          uint64_t v66 = v65 - v64;
          if (v69) {
            goto LABEL_135;
          }
          uint64_t v68 = *((void *)v63 - 6);
          uint64_t v67 = *((void *)v63 - 5);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v61 = v67 - v68;
          char v62 = v69;
          if (v69) {
            goto LABEL_136;
          }
          unint64_t v70 = v12 - 2;
          v71 = &v56[16 * v12 - 32];
          uint64_t v73 = *(void *)v71;
          uint64_t v72 = *((void *)v71 + 1);
          BOOL v69 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v69) {
            goto LABEL_138;
          }
          BOOL v69 = __OFADD__(v61, v74);
          uint64_t v75 = v61 + v74;
          if (v69) {
            goto LABEL_141;
          }
          if (v75 >= v66)
          {
            v93 = &v56[16 * v58];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v69 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v69) {
              goto LABEL_145;
            }
            BOOL v86 = v61 < v96;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v87 = *((void *)v8 + 4);
            uint64_t v88 = *((void *)v8 + 5);
            BOOL v69 = __OFSUB__(v88, v87);
            uint64_t v80 = v88 - v87;
            char v81 = v69;
            goto LABEL_99;
          }
          uint64_t v60 = *((void *)v8 + 4);
          uint64_t v59 = *((void *)v8 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
        }
        if (v62) {
          goto LABEL_137;
        }
        unint64_t v70 = v12 - 2;
        v76 = &v56[16 * v12 - 32];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v80 = v77 - v78;
        char v81 = v79;
        if (v79) {
          goto LABEL_140;
        }
        v82 = &v56[16 * v58];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v69 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v69) {
          goto LABEL_143;
        }
        if (__OFADD__(v80, v85)) {
          goto LABEL_144;
        }
        if (v80 + v85 >= v61)
        {
          BOOL v86 = v61 < v85;
LABEL_105:
          if (v86) {
            unint64_t v58 = v70;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v81) {
          goto LABEL_139;
        }
        v89 = &v56[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_142;
        }
        if (v92 < v80) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        v98 = &v56[16 * v97];
        uint64_t v99 = *(void *)v98;
        v100 = &v56[16 * v58];
        uint64_t v101 = *((void *)v100 + 1);
        sub_1C3C577AC((id *)(v10 + 8 * *(void *)v98), (id *)(v10 + 8 * *(void *)v100), v10 + 8 * v101, v117);
        if (v1) {
          goto LABEL_129;
        }
        if (v101 < v99) {
          goto LABEL_132;
        }
        if (v58 > *((void *)v8 + 2)) {
          goto LABEL_133;
        }
        *(void *)v98 = v99;
        *(void *)&v56[16 * v97 + 8] = v101;
        unint64_t v102 = *((void *)v8 + 2);
        if (v58 >= v102) {
          goto LABEL_134;
        }
        unint64_t v12 = v102 - 1;
        memmove(&v56[16 * v58], v100 + 16, 16 * (v102 - 1 - v58));
        *((void *)v8 + 2) = v102 - 1;
        uint64_t v10 = v118;
        if (v102 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v3 = v116;
    uint64_t v11 = &selRef_dataForQuickLook;
    if (v9 >= v116) {
      goto LABEL_118;
    }
  }

  id v15 = v16;
  uint64_t v11 = &selRef_dataForQuickLook;
LABEL_22:

  uint64_t v23 = v13 + 2;
  uint64_t v8 = v115;
  if (v13 + 2 >= v116)
  {
    uint64_t v9 = v13 + 2;
    uint64_t v10 = v118;
    goto LABEL_46;
  }
  BOOL v22 = 0;
  uint64_t v10 = v118;
  while (1)
  {
LABEL_29:
    uint64_t v30 = *(void **)(v10 + 8 * v9);
    id v31 = *(id *)(v10 + 8 * v23);
    id v32 = v30;
    id v33 = [v31 v11[414]];
    if (!v33)
    {
      id v34 = v32;
LABEL_33:

      uint64_t v8 = v115;
      if (v22)
      {
        uint64_t v10 = v118;
        goto LABEL_38;
      }
      goto LABEL_28;
    }
    id v34 = v33;
    id v35 = [v32 v11[414]];
    if (!v35)
    {

      id v31 = v32;
      uint64_t v11 = &selRef_dataForQuickLook;
      goto LABEL_33;
    }
    unint64_t v24 = v35;
    BOOL v25 = v22;
    char v26 = (char *)objc_msgSend(v34, sel_compare_, v35);

    BOOL v27 = v26 + 1 == 0;
    BOOL v22 = v25;
    BOOL v28 = !v27;
    uint64_t v8 = v115;
    uint64_t v11 = &selRef_dataForQuickLook;
    if (v25 == v28) {
      break;
    }
LABEL_28:
    uint64_t v29 = v23 + 1;
    uint64_t v9 = v23;
    uint64_t v23 = v29;
    uint64_t v10 = v118;
    if (v29 >= v116)
    {
      uint64_t v23 = v29;
      goto LABEL_37;
    }
  }
  uint64_t v10 = v118;
  uint64_t v9 = v23;
  if (!v22) {
    goto LABEL_46;
  }
LABEL_38:
  if (v23 >= v13)
  {
    if (v13 < v23)
    {
      uint64_t v36 = (uint64_t *)(v111 + 8 * v23);
      uint64_t v37 = v23;
      uint64_t v38 = v13;
      uint64_t v39 = (uint64_t *)(v10 + 8 * v13);
      do
      {
        if (v38 != --v37)
        {
          if (!v10) {
            goto LABEL_158;
          }
          uint64_t v40 = *v39;
          *uint64_t v39 = *v36;
          *uint64_t v36 = v40;
        }
        ++v38;
        --v36;
        ++v39;
      }
      while (v38 < v37);
    }
    uint64_t v9 = v23;
    goto LABEL_46;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_1C3DBAF48();
  __break(1u);
}

void sub_1C3C57658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v20 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v7 = *(void **)(v20 + 8 * v4);
      uint64_t v8 = a1;
      uint64_t v19 = v5;
      while (1)
      {
        uint64_t v9 = *(void **)v5;
        id v10 = v7;
        id v11 = v9;
        id v12 = objc_msgSend(v10, sel_createdDate);
        if (!v12) {
          break;
        }
        uint64_t v6 = v12;
        id v13 = objc_msgSend(v11, sel_createdDate);
        if (!v13)
        {

          id v10 = v11;
          goto LABEL_5;
        }
        id v14 = v13;
        id v15 = objc_msgSend(v6, sel_compare_, v13);

        if (v15 != (id)-1) {
          goto LABEL_6;
        }
        if (!v20)
        {
          __break(1u);
          return;
        }
        id v16 = *(void **)v5;
        uint64_t v7 = *(void **)(v5 + 8);
        *(void *)uint64_t v5 = v7;
        *(void *)(v5 + 8) = v16;
        v5 -= 8;
        if (v4 == ++v8) {
          goto LABEL_6;
        }
      }
      uint64_t v6 = v11;
LABEL_5:

LABEL_6:
      ++v4;
      uint64_t v5 = v19 + 8;
      if (v4 == a2) {
        return;
      }
      continue;
    }
  }
}

uint64_t sub_1C3C577AC(id *__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v46 = __src;
  uint64_t v45 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_55;
    }
    if (__dst != a2 || &a2[v12] <= __dst) {
      memmove(__dst, a2, 8 * v12);
    }
    BOOL v25 = &v4[v12];
    double v44 = v25;
    uint64_t v46 = v5;
    uint64_t v40 = __src;
    if (__src >= v5 || v10 < 8)
    {
LABEL_54:
      sub_1C3D70B30((void **)&v46, (const void **)&v45, &v44);
      return 1;
    }
    char v26 = (id *)(a3 - 8);
    BOOL v27 = v5;
    uint64_t v39 = v4;
    while (1)
    {
      double v43 = v5;
      BOOL v28 = *--v27;
      id v29 = *(v25 - 1);
      id v30 = v28;
      id v31 = objc_msgSend(v29, sel_createdDate);
      if (!v31) {
        break;
      }
      id v32 = v31;
      id v33 = objc_msgSend(v30, sel_createdDate);
      if (!v33)
      {

        id v29 = v30;
        uint64_t v4 = v39;
        goto LABEL_46;
      }
      id v34 = v33;
      id v35 = (char *)objc_msgSend(v32, sel_compare_, v33);

      BOOL v36 = v35 + 1 == 0;
      uint64_t v4 = v39;
      uint64_t v37 = v26 + 1;
      uint64_t v5 = v43;
      if (v36)
      {
        if (v26 + 1 != v43 || v26 >= v43) {
          *char v26 = *v27;
        }
        uint64_t v46 = v27;
        goto LABEL_52;
      }
LABEL_47:
      double v44 = v25 - 1;
      if (v37 < v25 || v26 >= v25 || v37 != v25) {
        *char v26 = *(v25 - 1);
      }
      BOOL v27 = v5;
      --v25;
LABEL_52:
      if (v27 > v40)
      {
        --v26;
        uint64_t v5 = v27;
        if (v25 > v4) {
          continue;
        }
      }
      goto LABEL_54;
    }
    id v32 = v30;
LABEL_46:

    uint64_t v37 = v26 + 1;
    goto LABEL_47;
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    uint64_t v41 = &v4[v9];
    double v44 = v41;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      id v13 = __src;
      while (1)
      {
        id v14 = v4;
        id v15 = *v4;
        id v16 = *v5;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_createdDate);
        if (!v18) {
          break;
        }
        uint64_t v19 = v18;
        uint64_t v20 = v13;
        id v21 = objc_msgSend(v17, sel_createdDate);
        if (!v21)
        {

          id v16 = v17;
          goto LABEL_22;
        }
        BOOL v22 = v21;
        id v23 = objc_msgSend(v19, sel_compare_, v21);

        uint64_t v4 = v14;
        id v13 = v20;
        if (v23 != (id)-1) {
          goto LABEL_23;
        }
        unint64_t v24 = v5 + 1;
        if (v20 < v5 || v20 >= v24 || v20 != v5) {
          *uint64_t v20 = *v5;
        }
LABEL_26:
        ++v13;
        if (v4 < v41)
        {
          uint64_t v5 = v24;
          if ((unint64_t)v24 < a3) {
            continue;
          }
        }
        uint64_t v46 = v13;
        goto LABEL_54;
      }
      uint64_t v19 = v17;
LABEL_22:

      uint64_t v4 = v14;
LABEL_23:
      if (v13 != v4) {
        *id v13 = *v4;
      }
      uint64_t v45 = ++v4;
      unint64_t v24 = v5;
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_55:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ICTTAudioRecording.Fragment()
{
  return self;
}

uint64_t sub_1C3C57BB0(id *a1)
{
  return sub_1C3C54510(a1) & 1;
}

unint64_t sub_1C3C57BD0()
{
  unint64_t result = qword_1EA386188;
  if (!qword_1EA386188)
  {
    sub_1C3DB84F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386188);
  }
  return result;
}

uint64_t type metadata accessor for ICTTTranscriptSegment()
{
  return self;
}

uint64_t sub_1C3C57C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

objc_class *sub_1C3C57DD8(void *a1, void *a2)
{
  uint64_t v31 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_createdDate);
  objc_msgSend(a2, sel_setCreatedDate_, v7);

  id v8 = objc_msgSend(a1, sel_transcriptVersion);
  objc_msgSend(a2, sel_setTranscriptVersion_, v8);

  id v9 = objc_msgSend(a1, sel_transcript);
  id v10 = objc_msgSend(v9, sel_allObjects);

  type metadata accessor for ICTTTranscriptSegment();
  unint64_t v11 = sub_1C3DBA018();

  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
    return (objc_class *)swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C3DBAFB8();
  if (!v12) {
    return (objc_class *)swift_bridgeObjectRelease_n();
  }
LABEL_3:
  unint64_t result = (objc_class *)swift_getObjCClassFromMetadata();
  Class v30 = result;
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    unint64_t v29 = v11 & 0xC000000000000001;
    id v15 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v16 = v12;
    do
    {
      if (v29) {
        id v17 = (id)MEMORY[0x1C877C220](v14, v11);
      }
      else {
        id v17 = *(id *)(v11 + 8 * v14 + 32);
      }
      id v18 = v17;
      ++v14;
      id v19 = objc_msgSend(a2, sel_document);
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      id v20 = objc_allocWithZone(v30);
      id v21 = (void *)sub_1C3DB8B38();
      id v22 = objc_msgSend(v20, sel_initWithDocument_identity_, v19, v21);

      (*v15)(v6, v31);
      id v23 = objc_msgSend(v18, sel_text);
      objc_msgSend(v22, sel_setText_, v23);

      id v24 = objc_msgSend(v18, sel_timestamp);
      objc_msgSend(v22, sel_setTimestamp_, v24);

      id v25 = objc_msgSend(v18, sel_duration);
      objc_msgSend(v22, sel_setDuration_, v25);

      id v26 = objc_msgSend(v18, sel_speaker);
      objc_msgSend(v22, sel_setSpeaker_, v26);

      id v27 = objc_msgSend(a2, sel_transcript);
      objc_msgSend(v27, sel_addObject_, v22);
    }
    while (v16 != v14);
    return (objc_class *)swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

unint64_t _sSo18ICTTAudioRecordingC11NotesSharedE12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD53F0;
  *(void *)(inited + 32) = 0x7972616D6D7573;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 56) = 0x746E656D67617266;
  *(void *)(inited + 64) = 0xE900000000000073;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCROrderedSet), sel_init);
  strcpy((char *)(inited + 80), "summaryVersion");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  strcpy((char *)(inited + 104), "topLineSummary");
  *(unsigned char *)(inited + 119) = -18;
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  strcpy((char *)(inited + 128), "callRecording");
  *(_WORD *)(inited + 142) = -4864;
  *(void *)(inited + 144) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 152) = 0x657079546C6C6163;
  *(void *)(inited + 160) = 0xE800000000000000;
  *(void *)(inited + 168) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 176) = 0xD00000000000001ELL;
  *(void *)(inited + 184) = 0x80000001C3DF3B90;
  *(void *)(inited + 192) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 200) = 0xD00000000000001FLL;
  *(void *)(inited + 208) = 0x80000001C3DF3BD0;
  *(void *)(inited + 216) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 224) = 0xD000000000000016;
  *(void *)(inited + 232) = 0x80000001C3DF3C20;
  *(void *)(inited + 240) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 248) = 0xD000000000000017;
  *(void *)(inited + 256) = 0x80000001C3DF3C40;
  *(void *)(inited + 264) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 272) = 0xD000000000000016;
  *(void *)(inited + 280) = 0x80000001C3DF3A60;
  *(void *)(inited + 288) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1C3C81504(inited);
}

unint64_t _sSo18ICTTAudioRecordingC11NotesSharedE8FragmentC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5140;
  *(void *)(inited + 32) = 0x697263736E617274;
  *(void *)(inited + 40) = 0xEA00000000007470;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRArray), sel_initWithDocument_, 0);
  *(void *)(inited + 56) = 0x4464657461657263;
  *(void *)(inited + 64) = 0xEB00000000657461;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 80) = 0xD000000000000011;
  *(void *)(inited + 88) = 0x80000001C3DF3970;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1C3C81504(inited);
}

unint64_t _s11NotesShared21ICTTTranscriptSegmentC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5400;
  *(void *)(inited + 32) = 1954047348;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 56) = 0x6D617473656D6974;
  *(void *)(inited + 64) = 0xE900000000000070;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 80) = 0x6E6F697461727564;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  *(void *)(inited + 104) = 0x72656B61657073;
  *(void *)(inited + 112) = 0xE700000000000000;
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, 0, 0);
  return sub_1C3C81504(inited);
}

void sub_1C3C58694(id *a1@<X0>, void *a2@<X8>)
{
}

void sub_1C3C586B4(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C3C586D4(id *a1@<X0>, void *a2@<X8>)
{
}

void sub_1C3C586F4(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C3C58714(id *a1@<X0>, void *a2@<X8>)
{
}

void sub_1C3C58734(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C3C58754(id *a1@<X0>, void *a2@<X8>)
{
}

void sub_1C3C58774(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C3C58794(id *a1@<X0>, void *a2@<X8>)
{
}

void sub_1C3C587B4(id *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_isCallRecording()
{
  return sel_isCallRecording;
}

id sub_1C3C587E0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isCallRecording);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C3C58814(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsCallRecording_, *a1);
}

char *keypath_get_selector_callType()
{
  return sel_callType;
}

id sub_1C3C58834@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callType);
  *a2 = result;
  return result;
}

id sub_1C3C58868(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallType_, *a1);
}

char *keypath_get_selector_localSpeakerHandle()
{
  return sel_localSpeakerHandle;
}

id sub_1C3C58888@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_localSpeakerHandle);
  *a2 = result;
  return result;
}

id sub_1C3C588C4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLocalSpeakerHandle_, *a1);
}

char *keypath_get_selector_remoteSpeakerHandle()
{
  return sel_remoteSpeakerHandle;
}

id sub_1C3C588E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_remoteSpeakerHandle);
  *a2 = result;
  return result;
}

id sub_1C3C58920(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRemoteSpeakerHandle_, *a1);
}

char *keypath_get_selector_callRecordingStartTime()
{
  return sel_callRecordingStartTime;
}

id sub_1C3C58940@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callRecordingStartTime);
  *a2 = result;
  return result;
}

id sub_1C3C5897C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallRecordingStartTime_, *a1);
}

char *keypath_get_selector_summary()
{
  return sel_summary;
}

id sub_1C3C5899C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_summary);
  *a2 = result;
  return result;
}

id sub_1C3C589D8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSummary_, *a1);
}

char *keypath_get_selector_topLineSummary()
{
  return sel_topLineSummary;
}

id sub_1C3C589F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_topLineSummary);
  *a2 = result;
  return result;
}

id sub_1C3C58A34(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopLineSummary_, *a1);
}

char *keypath_get_selector_summaryVersion()
{
  return sel_summaryVersion;
}

id sub_1C3C58A54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_summaryVersion);
  *a2 = result;
  return result;
}

id sub_1C3C58A90(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSummaryVersion_, *a1);
}

char *keypath_get_selector_toplineSummaryModelVersionInfo()
{
  return sel_toplineSummaryModelVersionInfo;
}

id sub_1C3C58AB0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_toplineSummaryModelVersionInfo);
  *a2 = result;
  return result;
}

id sub_1C3C58AEC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setToplineSummaryModelVersionInfo_, *a1);
}

char *keypath_get_selector_longformSummaryModelVersionInfo()
{
  return sel_longformSummaryModelVersionInfo;
}

id sub_1C3C58B0C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_longformSummaryModelVersionInfo);
  *a2 = result;
  return result;
}

id sub_1C3C58B48(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLongformSummaryModelVersionInfo_, *a1);
}

char *keypath_get_selector_fragments()
{
  return sel_fragments;
}

id sub_1C3C58B68@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fragments);
  *a2 = result;
  return result;
}

id sub_1C3C58BA4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFragments_, *a1);
}

char *keypath_get_selector_callRecording()
{
  return sel_callRecording;
}

id sub_1C3C58BC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callRecording);
  *a2 = result;
  return result;
}

id sub_1C3C58C00(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallRecording_, *a1);
}

id sub_1C3C58C14@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callType);
  *a2 = result;
  return result;
}

id sub_1C3C58C50(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallType_, *a1);
}

char *keypath_get_selector_callLocalSpeakerHandle()
{
  return sel_callLocalSpeakerHandle;
}

id sub_1C3C58C70@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callLocalSpeakerHandle);
  *a2 = result;
  return result;
}

id sub_1C3C58CAC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallLocalSpeakerHandle_, *a1);
}

char *keypath_get_selector_callRemoteSpeakerHandle()
{
  return sel_callRemoteSpeakerHandle;
}

id sub_1C3C58CCC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callRemoteSpeakerHandle);
  *a2 = result;
  return result;
}

id sub_1C3C58D08(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCallRemoteSpeakerHandle_, *a1);
}

char *keypath_get_selector_createdDate()
{
  return sel_createdDate;
}

id sub_1C3C58D28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_createdDate);
  *a2 = result;
  return result;
}

id sub_1C3C58D64(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreatedDate_, *a1);
}

char *keypath_get_selector_transcript()
{
  return sel_transcript;
}

id sub_1C3C58D84@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_transcript);
  *a2 = result;
  return result;
}

id sub_1C3C58DC0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTranscript_, *a1);
}

char *keypath_get_selector_transcriptVersion()
{
  return sel_transcriptVersion;
}

id sub_1C3C58DE0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_transcriptVersion);
  *a2 = result;
  return result;
}

id sub_1C3C58E1C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTranscriptVersion_, *a1);
}

char *keypath_get_selector_text()
{
  return sel_text;
}

id sub_1C3C58E3C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_text);
  *a2 = result;
  return result;
}

id sub_1C3C58E78(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setText_, *a1);
}

char *keypath_get_selector_timestamp()
{
  return sel_timestamp;
}

id sub_1C3C58E98@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = result;
  return result;
}

id sub_1C3C58ED4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

char *keypath_get_selector_duration()
{
  return sel_duration;
}

id sub_1C3C58EF4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = result;
  return result;
}

id sub_1C3C58F30(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_speaker()
{
  return sel_speaker;
}

id sub_1C3C58F50@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_speaker);
  *a2 = result;
  return result;
}

id sub_1C3C58F8C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSpeaker_, *a1);
}

uint64_t type metadata accessor for ICTTAudioDocument(uint64_t a1)
{
  return sub_1C3C4C8B4(a1, (unint64_t *)&unk_1EA386210);
}

uint64_t type metadata accessor for ICTTAudioRecording(uint64_t a1)
{
  return sub_1C3C4C8B4(a1, (unint64_t *)&unk_1EB6FC8F0);
}

uint64_t sub_1C3C58FC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

Swift::Int_optional __swiftcall ICAttachmentGalleryModel.index(ofSubAttachmentWithIdentifier:)(Swift::String ofSubAttachmentWithIdentifier)
{
  uint64_t v2 = (void *)sub_1C3DB9BF8();
  id v3 = objc_msgSend(v1, sel_indexOfSubAttachmentWithIdentifier_, v2);

  uint64_t v4 = sub_1C3DB8108();
  Swift::Bool v5 = v3 == (id)v4;
  if (v3 == (id)v4) {
    Swift::Int v6 = 0;
  }
  else {
    Swift::Int v6 = (Swift::Int)v3;
  }
  result.value = v6;
  result.is_nil = v5;
  return result;
}

id ICAttachmentGalleryModel.subAttachments.getter@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return v1;
}

uint64_t ICAttachmentGalleryModel.SubAttachments.makeIterator()@<X0>(void *a1@<X8>)
{
  id v3 = *v1;
  id v4 = objc_msgSend(*v1, sel_attachmentIdentifiersOrderedSet);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  Swift::Bool v5 = v4;
  id v6 = objc_msgSend(v4, sel_allObjects);

  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA386240);
  unint64_t v7 = sub_1C3DBA018();

  uint64_t v8 = sub_1C3D7829C(v7);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v3, sel_attachment);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_subAttachments);

  if (v11)
  {
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
    sub_1C3C4C8F0();
    uint64_t v12 = sub_1C3DBA438();
  }
  else if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C3DBAFB8())
  {
    sub_1C3C5BA68(MEMORY[0x1E4FBC860], &qword_1EA386328, (unint64_t *)&qword_1EA388CA0);
    uint64_t v12 = v14;
  }
  else
  {
    uint64_t v12 = MEMORY[0x1E4FBC870];
  }
  v16[0] = v12;
  v16[1] = (uint64_t)sub_1C3C5A050;
  void v16[2] = 0;
  v16[3] = (uint64_t)sub_1C3C5A0D0;
  v16[4] = 0;
  v16[5] = (uint64_t)sub_1C3C5A0E0;
  v16[6] = 0;
  uint64_t v15 = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRetain_n();
  sub_1C3C595A4(v16, 1, &v15);
  uint64_t result = swift_bridgeObjectRelease_n();
  *a1 = v15;
  a1[1] = v8;
  a1[2] = 0;
  return result;
}

void sub_1C3C592C0(void *a1@<X8>)
{
  ICAttachmentGalleryModel.SubAttachments.makeIterator()(a1);
  uint64_t v2 = *v1;
}

uint64_t sub_1C3C592EC()
{
  return 0;
}

uint64_t sub_1C3C592F4()
{
  return 2;
}

uint64_t sub_1C3C592FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C3C59A88();

  return v2;
}

void sub_1C3C59330(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C3C59C98(a1, a2, a3, *v3);
}

uint64_t sub_1C3C59338()
{
  return sub_1C3DB9EF8();
}

uint64_t sub_1C3C5935C(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  while (1)
  {
    uint64_t v5 = sub_1C3C59420(a1);
    if (!v6) {
      break;
    }
    uint64_t v7 = *v1;
    v10[0] = v5;
    v10[1] = v6;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    MEMORY[0x1C877AFF0](&v11, v10, v7, v3, AssociatedTypeWitness, v4);
    swift_bridgeObjectRelease();
    uint64_t result = v11;
    if (v11) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1C3C59420(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness))
  {
    swift_getAssociatedConformanceWitness();
    sub_1C3DBA998();
    if (v8) {
      return v7;
    }
  }
  uint64_t v5 = sub_1C3DBA938();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, AssociatedTypeWitness);
  return 0;
}

uint64_t sub_1C3C5957C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C3C5935C(a1);
  *a2 = result;
  return result;
}

void sub_1C3C595A4(uint64_t *a1, char a2, void *a3)
{
  void (*v49)(void *__return_ptr, void);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  void (*v64)(void *__return_ptr, void);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  long long v68;
  uint64_t v69;
  uint64_t v70;

  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = (uint64_t (*)(void))a1[3];
  unint64_t v70 = *a1;
  uint64_t v3 = v70;
  uint64_t v7 = a1[4];
  id v49 = (void (*)(void *__return_ptr, void))a1[5];
  uint64_t v8 = a1[6];
  if ((v70 & 0xC000000000000001) != 0)
  {
    sub_1C3C5C180((uint64_t)&v70);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C3DBAAE8();
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
    sub_1C3C4C8F0();
    sub_1C3DBA478();
    uint64_t v3 = v66;
    uint64_t v9 = v67;
    long long v10 = v68;
    uint64_t v11 = v69;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(v70 + 32);
    uint64_t v9 = v70 + 56;
    uint64_t v13 = ~v12;
    uint64_t v14 = -v12;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    uint64_t v11 = v15 & *(void *)(v70 + 56);
    sub_1C3C5C180((uint64_t)&v70);
    swift_retain();
    swift_retain();
    swift_retain();
    long long v10 = (unint64_t)v13;
  }
  uint64_t v56 = v3;
  unint64_t v57 = v9;
  unint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v60 = v4;
  uint64_t v61 = v6;
  char v62 = v5;
  v63 = v7;
  uint64_t v64 = v49;
  uint64_t v65 = v8;
  sub_1C3C30828();
  if (v17 == 1)
  {
LABEL_8:
    sub_1C3C5C1AC((uint64_t)&v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1C3C4C744();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v19 = v16;
  uint64_t v20 = v17;
  id v21 = v18;
  while (1)
  {
    while (1)
    {
      unint64_t v53 = v19;
      unint64_t v54 = v20;
      unint64_t v55 = v21;
      if (v5(&v53)) {
        break;
      }
      sub_1C3C5C1D8(v19, v20, v21);
      sub_1C3C30828();
      uint64_t v19 = v22;
      uint64_t v20 = v23;
      id v21 = v24;
      if (v23 == 1) {
        goto LABEL_8;
      }
    }
    unint64_t v53 = v19;
    unint64_t v54 = v20;
    unint64_t v55 = v21;
    v49(&v50, &v53);
    sub_1C3C5C1D8(v19, v20, v21);
    uint64_t v25 = v50;
    uint64_t v26 = v51;
    id v27 = v52;
    unint64_t v53 = v50;
    unint64_t v54 = v51;
    uint64_t v28 = (void *)*a3;
    unint64_t v30 = sub_1C3C2A4F8(v50, v51);
    uint64_t v31 = v28[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      sub_1C3DBB538();
      __break(1u);
      goto LABEL_29;
    }
    char v34 = v29;
    if (v28[3] < v33) {
      break;
    }
    if (a2)
    {
      if (v29) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C3D839F8();
      if (v34) {
        goto LABEL_24;
      }
    }
LABEL_20:
    uint64_t v37 = (void *)*a3;
    *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
    *uint64_t v38 = v25;
    v38[1] = v26;
    *(void *)(v37[7] + 8 * v30) = v27;
    uint64_t v39 = v37[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40) {
      goto LABEL_27;
    }
    v37[2] = v41;
    sub_1C3C30828();
    uint64_t v19 = v42;
    uint64_t v20 = v43;
    id v21 = v44;
    a2 = 1;
    if (v43 == 1) {
      goto LABEL_8;
    }
  }
  sub_1C3D8514C(v33, a2 & 1);
  unint64_t v35 = sub_1C3C2A4F8(v25, v26);
  if ((v34 & 1) != (v36 & 1)) {
    goto LABEL_28;
  }
  unint64_t v30 = v35;
  if ((v34 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_24:
  uint64_t v45 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C3C5C1AC((uint64_t)&v70);

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C3C4C744();
    swift_release();
    swift_release();
    swift_release();

    return;
  }
LABEL_29:
  id v50 = 0;
  uint64_t v51 = 0xE000000000000000;
  sub_1C3DBAC68();
  sub_1C3DB9D68();
  sub_1C3DBAEE8();
  sub_1C3DB9D68();
  sub_1C3DBAF58();
  __break(1u);
}

uint64_t sub_1C3C59A88()
{
  uint64_t result = ICAttachmentGalleryModel.SubAttachments.makeIterator()(&v28);
  uint64_t v1 = v29;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = 0;
  if (v29)
  {
    uint64_t v4 = (void *)(MEMORY[0x1E4FBC860] + 32);
LABEL_3:
    unint64_t v5 = v30;
    unint64_t v6 = *(void *)(v1 + 16);
    if (v30 != v6)
    {
      uint64_t v7 = v28;
      uint64_t v8 = (uint64_t *)(v1 + 16 * v30 + 40);
      do
      {
        if (v5 >= v6)
        {
          __break(1u);
          goto LABEL_30;
        }
        if (*(void *)(v7 + 16))
        {
          uint64_t v10 = *(v8 - 1);
          uint64_t v9 = *v8;
          swift_bridgeObjectRetain();
          unint64_t v11 = sub_1C3C2A4F8(v10, v9);
          if (v12)
          {
            unint64_t v30 = v5 + 1;
            id v13 = *(id *)(*(void *)(v7 + 56) + 8 * v11);
            uint64_t result = swift_bridgeObjectRelease();
            if (!v3)
            {
              unint64_t v14 = v2[3];
              if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
                goto LABEL_32;
              }
              int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
              if (v15 <= 1) {
                uint64_t v16 = 1;
              }
              else {
                uint64_t v16 = v15;
              }
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
              uint64_t v17 = (void *)swift_allocObject();
              int64_t v18 = _swift_stdlib_malloc_size(v17);
              uint64_t v19 = v18 - 32;
              if (v18 < 32) {
                uint64_t v19 = v18 - 25;
              }
              uint64_t v20 = v19 >> 3;
              void v17[2] = v16;
              v17[3] = (2 * (v19 >> 3)) | 1;
              unint64_t v21 = (unint64_t)(v17 + 4);
              uint64_t v22 = v2[3] >> 1;
              if (v2[2])
              {
                uint64_t v23 = v2 + 4;
                if (v17 != v2 || v21 >= (unint64_t)v23 + 8 * v22) {
                  memmove(v17 + 4, v23, 8 * v22);
                }
                v2[2] = 0;
              }
              uint64_t v4 = (void *)(v21 + 8 * v22);
              uint64_t v3 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
              uint64_t result = swift_release();
              uint64_t v2 = v17;
            }
            BOOL v24 = __OFSUB__(v3--, 1);
            if (!v24)
            {
              uint64_t result = 0;
              *v4++ = v13;
              uint64_t v1 = v29;
              if (v29) {
                goto LABEL_3;
              }
              break;
            }
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            return result;
          }
          uint64_t result = swift_bridgeObjectRelease();
        }
        ++v5;
        unint64_t v6 = *(void *)(v1 + 16);
        v8 += 2;
      }
      while (v5 != v6);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v25 = v2[3];
  if (v25 >= 2)
  {
    unint64_t v26 = v25 >> 1;
    BOOL v24 = __OFSUB__(v26, v3);
    uint64_t v27 = v26 - v3;
    if (v24)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v2[2] = v27;
  }
  return (uint64_t)v2;
}

void sub_1C3C59C98(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  BOOL v24 = a4;
  ICAttachmentGalleryModel.SubAttachments.makeIterator()(&v22);

  if (!a2)
  {
    *(void *)a1 = v22;
    *(_OWORD *)(a1 + 8) = v23;
    return;
  }
  if (a3)
  {
    if ((a3 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = v22;
      uint64_t v9 = v23;
      if (!(void)v23) {
        goto LABEL_19;
      }
      unint64_t v10 = *((void *)&v23 + 1);
      uint64_t v11 = v23 + 40;
      uint64_t v12 = 1;
      uint64_t v21 = v23 + 40;
      while (1)
      {
        uint64_t v13 = v12;
        unint64_t v14 = *(void *)(v9 + 16);
        if (v10 == v14) {
          goto LABEL_19;
        }
        int64_t v15 = (uint64_t *)(v11 + 16 * v10);
        while (1)
        {
          if (v10 >= v14)
          {
            __break(1u);
            goto LABEL_22;
          }
          if (*(void *)(v8 + 16)) {
            break;
          }
LABEL_8:
          ++v10;
          unint64_t v14 = *(void *)(v9 + 16);
          v15 += 2;
          if (v10 == v14) {
            goto LABEL_19;
          }
        }
        uint64_t v17 = *(v15 - 1);
        uint64_t v16 = *v15;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_1C3C2A4F8(v17, v16);
        if ((v19 & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v8 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        *a2 = v20;
        ++v10;
        if (v13 == a3) {
          goto LABEL_18;
        }
        ++a2;
        uint64_t v12 = v13 + 1;
        uint64_t v11 = v21;
        if (!v9)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          *(void *)(a1 + 8) = 0;
          *(void *)(a1 + 16) = 0;
          *(void *)a1 = v8;
          return;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_22:
    __break(1u);
  }
  else
  {
    uint64_t v8 = v22;
    unint64_t v10 = *((void *)&v23 + 1);
    uint64_t v9 = v23;
LABEL_18:
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
  }
}

uint64_t sub_1C3C59E34(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 56) + 32 * v16);
    uint64_t v21 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v22 = v20[3];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    void v11[2] = v23;
    v11[3] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

id sub_1C3C5A050@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  id result = objc_msgSend(*a1, sel_identifier);
  if (result)
  {
    unint64_t v5 = result;
    uint64_t v6 = sub_1C3DB9C38();
    uint64_t v8 = v7;

    id result = v3;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    id v3 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v3;
  return result;
}

BOOL sub_1C3C5A0D0(uint64_t a1)
{
  return *(void *)(a1 + 8) != 0;
}

id sub_1C3C5A0E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = (id)a1[1];
  if (result)
  {
    id v4 = (id)a1[2];
    *a2 = *a1;
    a2[1] = result;
    a2[2] = v4;
    swift_bridgeObjectRetain();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C5A138()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ICAttachmentGalleryModel.SubAttachments()
{
  return &type metadata for ICAttachmentGalleryModel.SubAttachments;
}

unint64_t sub_1C3C5A168()
{
  unint64_t result = qword_1EA386250;
  if (!qword_1EA386250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA386258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386250);
  }
  return result;
}

uint64_t sub_1C3C5A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C3C5A1CC()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1C3DBA938();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3C5A28C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v8 = *(void *)(v5 + 64);
  }
  else {
    size_t v8 = *(void *)(v5 + 64) + 1;
  }
  int v9 = v6 & 0x100000;
  uint64_t v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 8) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = ~v7;
    int64_t v14 = (char *)a1 + v7;
    unint64_t v15 = (char *)a2 + v7;
    unint64_t v16 = (void *)((unint64_t)(v14 + 8) & v13);
    int64_t v17 = (const void *)((unint64_t)(v15 + 8) & v13);
    unint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    if (v18(v17, 1, AssociatedTypeWitness))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v16, v17, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, AssociatedTypeWitness);
    }
  }
  return a1;
}

uint64_t sub_1C3C5A420(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = v3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, AssociatedTypeWitness);
  if (!result)
  {
    int v6 = *(uint64_t (**)(unint64_t, uint64_t))(v7 + 8);
    return v6(v4, AssociatedTypeWitness);
  }
  return result;
}

void *sub_1C3C5A510(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  size_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  swift_bridgeObjectRetain();
  if (v9(v8, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v10 = *(void *)(v5 + 64);
    }
    else {
      size_t v10 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_1C3C5A64C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  size_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, AssociatedTypeWitness);
  int v11 = v9(v8, 1, AssociatedTypeWitness);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
      return a1;
    }
    unint64_t v15 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v14 = v5 + 8;
    v15(v7, AssociatedTypeWitness);
    int v12 = *(_DWORD *)(v14 + 76);
    size_t v13 = *(void *)(v14 + 56);
  }
  if (v12) {
    size_t v16 = v13;
  }
  else {
    size_t v16 = v13 + 1;
  }
  memcpy(v7, v8, v16);
  return a1;
}

void *sub_1C3C5A7FC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  size_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v9 = *(void *)(v5 + 64);
    }
    else {
      size_t v9 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_1C3C5A928(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  size_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  size_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, AssociatedTypeWitness);
  int v11 = v9(v8, 1, AssociatedTypeWitness);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, AssociatedTypeWitness);
      return a1;
    }
    unint64_t v15 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v14 = v5 + 8;
    v15(v7, AssociatedTypeWitness);
    int v12 = *(_DWORD *)(v14 + 76);
    size_t v13 = *(void *)(v14 + 56);
  }
  if (v12) {
    size_t v16 = v13;
  }
  else {
    size_t v16 = v13 + 1;
  }
  memcpy(v7, v8, v16);
  return a1;
}

uint64_t sub_1C3C5AAD0(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v11 = v10 + ((v9 + 8) & ~v9);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((a2 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v7 & 0x80000000) != 0)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v5 + 48))(((unint64_t)a1 + v9 + 8) & ~v9);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        return (v17 + 1);
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v11 | v16) + 1;
}

void sub_1C3C5ACCC(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v9;
  }
  if (v8) {
    size_t v12 = *(void *)(v7 + 64);
  }
  else {
    size_t v12 = *(void *)(v7 + 64) + 1;
  }
  size_t v13 = ((v10 + 8) & ~v10) + v12;
  if (a3 <= v11) {
    goto LABEL_17;
  }
  if (v13 <= 3)
  {
    unsigned int v14 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v14))
    {
      int v6 = 4;
      if (v11 >= a2) {
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
LABEL_17:
    if (v11 >= a2) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  int v6 = 1;
  if (v11 >= a2)
  {
LABEL_25:
    switch(v6)
    {
      case 1:
        a1[v13] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 2:
        *(_WORD *)&a1[v13] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v13] = 0;
        goto LABEL_29;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          if ((v9 & 0x80000000) != 0)
          {
            int64_t v19 = (unsigned char *)((unint64_t)&a1[v10 + 8] & ~v10);
            if (v9 >= a2)
            {
              uint64_t v23 = *(void (**)(unsigned char *, void))(v7 + 56);
              v23(v19, a2 + 1);
            }
            else
            {
              if (v12 <= 3) {
                int v20 = ~(-1 << (8 * v12));
              }
              else {
                int v20 = -1;
              }
              if (v12)
              {
                int v21 = v20 & (~v9 + a2);
                if (v12 <= 3) {
                  int v22 = v12;
                }
                else {
                  int v22 = 4;
                }
                bzero(v19, v12);
                switch(v22)
                {
                  case 2:
                    *(_WORD *)int64_t v19 = v21;
                    break;
                  case 3:
                    *(_WORD *)int64_t v19 = v21;
                    v19[2] = BYTE2(v21);
                    break;
                  case 4:
                    *(_DWORD *)int64_t v19 = v21;
                    break;
                  default:
                    *int64_t v19 = v21;
                    break;
                }
              }
            }
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v18 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v18 = a2 - 1;
            }
            *(void *)a1 = v18;
          }
        }
        break;
    }
    return;
  }
LABEL_18:
  unsigned int v15 = ~v11 + a2;
  if (v13 < 4)
  {
    int v16 = (v15 >> (8 * v13)) + 1;
    if (v13)
    {
      int v17 = v15 & ~(-1 << (8 * v13));
      bzero(a1, v13);
      if (v13 == 3)
      {
        *(_WORD *)a1 = v17;
        a1[2] = BYTE2(v17);
      }
      else if (v13 == 2)
      {
        *(_WORD *)a1 = v17;
      }
      else
      {
        *a1 = v17;
      }
    }
  }
  else
  {
    bzero(a1, ((v10 + 8) & ~v10) + v12);
    *(_DWORD *)a1 = v15;
    int v16 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v13] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v13] = v16;
      break;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x1C3C5AFF8);
    case 4:
      *(_DWORD *)&a1[v13] = v16;
      break;
    default:
      return;
  }
}

uint64_t _s14SubAttachmentsV9_IteratorVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C3C5B048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386320);
    uint64_t v3 = sub_1C3DBAC28();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1C3DBB5D8();
      swift_bridgeObjectRetain();
      sub_1C3DB9D08();
      uint64_t result = sub_1C3DBB608();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        int v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1C3DBB3B8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          int64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1C3DBB3B8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      int v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *int v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C3C5B1EC(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB9238();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386300);
    uint64_t v9 = sub_1C3DBAC28();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C3C5C138(&qword_1EA386308, MEMORY[0x1E4F3BFF0]);
      uint64_t v16 = sub_1C3DB9B08();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C3C5C138(&qword_1EA386310, MEMORY[0x1E4F3BFF0]);
          char v23 = sub_1C3DB9BE8();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C3C5B504(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB9368();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3862E8);
    uint64_t v9 = sub_1C3DBAC28();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C3C5C138(&qword_1EA3862F0, MEMORY[0x1E4F3C1B0]);
      uint64_t v16 = sub_1C3DB9B08();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C3C5C138(&qword_1EA3862F8, MEMORY[0x1E4F3C1B0]);
          char v23 = sub_1C3DB9BE8();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C3C5B81C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386318);
    uint64_t v3 = sub_1C3DBAC28();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      int v6 = *(void **)(v32 + 8 * v4);
      sub_1C3DB9C38();
      sub_1C3DBB5D8();
      id v7 = v6;
      sub_1C3DB9D08();
      uint64_t v8 = sub_1C3DBB608();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1C3DB9C38();
        uint64_t v17 = v16;
        if (v15 == sub_1C3DB9C38() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1C3DB9C38();
          uint64_t v24 = v23;
          if (v22 == sub_1C3DB9C38() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C3C5BA4C(unint64_t a1)
{
}

void sub_1C3C5BA68(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4 = a1;
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      uint64_t v6 = sub_1C3DBAC28();
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = v6 + 56;
  uint64_t v46 = v8;
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    unint64_t v43 = v4;
    while (1)
    {
      uint64_t v12 = MEMORY[0x1C877C220](v11, v4);
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v14 = v12;
      uint64_t v15 = sub_1C3DBA8D8();
      uint64_t v16 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_1C3C4C8B4(0, a3);
        id v21 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
        char v22 = sub_1C3DBA8E8();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v4 = v43;
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v10 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
          char v25 = sub_1C3DBA8E8();

          if (v25) {
            goto LABEL_11;
          }
        }
        unint64_t v4 = v43;
      }
      *(void *)(v10 + 8 * v18) = v20 | v19;
      *(void *)(*(void *)(v6 + 48) + 8 * v17) = v14;
      uint64_t v26 = *(void *)(v6 + 16);
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_38;
      }
      *(void *)(v6 + 16) = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v28 != v44)
  {
    id v29 = *(id *)(v4 + 32 + 8 * v28);
    uint64_t v30 = sub_1C3DBA8D8();
    uint64_t v31 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v32 = v30 & ~v31;
    unint64_t v33 = v32 >> 6;
    uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
    uint64_t v35 = 1 << v32;
    if (((1 << v32) & v34) != 0)
    {
      sub_1C3C4C8B4(0, a3);
      id v36 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
      char v37 = sub_1C3DBA8E8();

      if (v37) {
        goto LABEL_24;
      }
      uint64_t v38 = ~v31;
      unint64_t v32 = (v32 + 1) & v38;
      unint64_t v33 = v32 >> 6;
      uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
      uint64_t v35 = 1 << v32;
      if ((v34 & (1 << v32)) != 0)
      {
        while (1)
        {
          id v39 = *(id *)(*(void *)(v6 + 48) + 8 * v32);
          char v40 = sub_1C3DBA8E8();

          if (v40) {
            break;
          }
          unint64_t v32 = (v32 + 1) & v38;
          unint64_t v33 = v32 >> 6;
          uint64_t v34 = *(void *)(v10 + 8 * (v32 >> 6));
          uint64_t v35 = 1 << v32;
          if ((v34 & (1 << v32)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v8 = v46;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v8 = v46;
    }
    *(void *)(v10 + 8 * v33) = v35 | v34;
    *(void *)(*(void *)(v6 + 48) + 8 * v32) = v29;
    uint64_t v41 = *(void *)(v6 + 16);
    BOOL v13 = __OFADD__(v41, 1);
    uint64_t v42 = v41 + 1;
    if (v13) {
      goto LABEL_39;
    }
    *(void *)(v6 + 16) = v42;
LABEL_25:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1C3C5BDCC(unint64_t a1)
{
}

uint64_t sub_1C3C5BDE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE20);
  uint64_t v3 = sub_1C3DBAC28();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v23 = v1;
  uint64_t v24 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v24 + v4++);
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C3DBB608();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0x80000001C3DF1C70;
        unint64_t v14 = 0xD000000000000011;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            unint64_t v14 = 0x6C61636F6CLL;
            break;
          case 2:
            unint64_t v14 = 0x726F707075736E75;
            uint64_t v15 = 6579572;
            goto LABEL_10;
          case 3:
            unint64_t v14 = 0x6C6F686563616C70;
            uint64_t v15 = 7497060;
LABEL_10:
            unint64_t v13 = v15 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0x80000001C3DF1C70;
        unint64_t v17 = 0xD000000000000011;
        switch(v6)
        {
          case 1:
            unint64_t v16 = 0xE500000000000000;
            if (v14 == 0x6C61636F6CLL) {
              goto LABEL_16;
            }
            goto LABEL_17;
          case 2:
            unint64_t v17 = 0x726F707075736E75;
            unint64_t v16 = 0xEB00000000646574;
            goto LABEL_15;
          case 3:
            unint64_t v16 = 0xEB00000000726564;
            if (v14 != 0x6C6F686563616C70) {
              goto LABEL_17;
            }
            goto LABEL_16;
          default:
LABEL_15:
            if (v14 != v17) {
              goto LABEL_17;
            }
LABEL_16:
            if (v13 == v16)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_17:
            char v18 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_22;
            }
            break;
        }
      }
    }
LABEL_22:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v19 = *(void *)(v3 + 16);
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
      JUMPOUT(0x1C3C5C108);
    }
    *(void *)(v3 + 16) = v21;
LABEL_4:
    ;
  }
  while (v4 != v23);
  return v3;
}

uint64_t sub_1C3C5C138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C5C180(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C3C5C1AC(uint64_t a1)
{
  return a1;
}

void sub_1C3C5C1D8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 != 1) {
    sub_1C3C5C1E8(a1, a2, a3);
  }
}

void sub_1C3C5C1E8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C3C5C22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DBA278();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C3DBA268();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C3C2A448(a1, (uint64_t *)&unk_1EB6FBAE0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C3DBA168();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C3C5C3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DBA278();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C3DBA268();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C3C2A448(a1, (uint64_t *)&unk_1EB6FBAE0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C3DBA168();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863E0);
  return swift_task_create();
}

uint64_t sub_1C3C5C58C()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA386338);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA386338);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static SiriTranscriptionMethod.bufferSize.getter()
{
  return 4096;
}

uint64_t SiriTranscriptionMethod.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t SiriTranscriptionMethod.init()()
{
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t SiriTranscriptionMethod.prepareForTranscription()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386368);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386370);
  v2[8] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386378);
  v2[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[10] = v5;
  v2[11] = *(void *)(v5 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5C8F4, 0, 0);
}

uint64_t sub_1C3C5C8F4()
{
  uint64_t v1 = v0[3];
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SiriSpeechRecognitionManager()), sel_init);
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v2;

  uint64_t v4 = *(void **)(v1 + 16);
  v0[14] = v4;
  if (v4)
  {
    v4;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[15] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1C3C5CA68;
    uint64_t v6 = v0[8];
    return sub_1C3D40DD8(v6);
  }
  else
  {
    uint64_t v8 = v0[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[10] + 56))(v8, 1, 1, v0[9]);
    sub_1C3C2A448(v8, &qword_1EA386370);
    unint64_t v9 = (void *)swift_task_alloc();
    v0[17] = v9;
    *unint64_t v9 = v0;
    v9[1] = sub_1C3C5CDF8;
    return SiriTranscriptionMethod.finishTranscription()();
  }
}

uint64_t sub_1C3C5CA68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1C3C5D038;
  }
  else
  {

    uint64_t v3 = sub_1C3C5CB84;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C3C5CB84()
{
  uint64_t v1 = (char *)v0[13];
  uint64_t v2 = v0[10];
  uint64_t v16 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v14 = v0[3];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  v15(v1, v3, v4);
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, *MEMORY[0x1E4FBD028], v8);
  sub_1C3DBA2D8();
  uint64_t v9 = sub_1C3DBA278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v16, v1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = v14;
  v15(&v11[v10], v16, v4);
  swift_retain();
  sub_1C3C5C22C(v7, (uint64_t)&unk_1EA386388, (uint64_t)v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1C3C5CDF8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C3C5CF70, 0, 0);
  }
}

uint64_t sub_1C3C5CF70()
{
  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v1 = 15;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3C5D038()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SiriTranscriptionMethod.finishTranscription()()
{
  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386398);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for TranscriptionUpdate(0);
  v1[11] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A0);
  v1[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5D230, 0, 0);
}

uint64_t sub_1C3C5D230()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[8];
  uint64_t v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v0[16] = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v5 = v3 + v4;
  swift_beginAccess();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[17] = v6;
  v0[18] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v7 = v6(v5, 1, v1);
  uint64_t v8 = v0[15];
  if (v7)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = v0[13];
    uint64_t v10 = v0[14];
    unint64_t v13 = (unsigned char *)v0[11];
    uint64_t v12 = v0[12];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *unint64_t v13 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1C3DBA298();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  uint64_t v15 = v0[8];
  sub_1C3C2A448(v0[15], &qword_1EA3863A0);
  uint64_t v16 = *(void **)(v15 + 16);
  v0[19] = v16;
  if (v16)
  {
    v16;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[20] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1C3C5D57C;
    return sub_1C3D42804();
  }
  else
  {
    uint64_t v19 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[17];
    uint64_t v20 = v0[12];
    uint64_t v21 = v0[8];
    uint64_t v22 = v21 + v0[16];
    *(void *)(v21 + 16) = 0;
    if (!v19(v22, 1, v20))
    {
      uint64_t v24 = v0[13];
      uint64_t v23 = v0[14];
      uint64_t v25 = v0[12];
      (*(void (**)(uint64_t, void, uint64_t))(v24 + 16))(v23, v0[8] + v0[16], v25);
      sub_1C3DBA2A8();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    uint64_t v26 = v0[9];
    uint64_t v27 = v0[8] + v0[16];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[13] + 56))(v26, 1, 1, v0[12]);
    swift_beginAccess();
    sub_1C3C605CC(v26, v27);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_1C3C5D57C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1C3C5D804;
  }
  else
  {

    uint64_t v3 = sub_1C3C5D698;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C3C5D698()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = v1 + v0[16];
  *(void *)(v1 + 16) = 0;

  if (!v3(v5, 1, v4))
  {
    uint64_t v7 = v0[13];
    uint64_t v6 = v0[14];
    uint64_t v8 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v6, v0[8] + v0[16], v8);
    sub_1C3DBA2A8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  uint64_t v9 = v0[9];
  uint64_t v10 = v0[8] + v0[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[13] + 56))(v9, 1, 1, v0[12]);
  swift_beginAccess();
  sub_1C3C605CC(v9, v10);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C3C5D804()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SiriTranscriptionMethod.receiveAudio(_:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for AudioData(0);
  v2[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5D930, 0, 0);
}

uint64_t sub_1C3C5D930()
{
  sub_1C3C60634(v0[2], v0[5]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[5];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = *(void **)v2;
    uint64_t v4 = *(void **)(v2 + 8);
    uint64_t v5 = *(void **)(v0[3] + 16);
    if (v5)
    {
      id v6 = v5;
      sub_1C3D423D0(v3);
    }
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_1C3C60698(v0[5]);
    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v7 = 17;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_1C3C5DA64(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v3[5] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386368);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F0);
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_1C3DB88F8();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  sub_1C3DB9218();
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F8);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386400);
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_1C3DB8C48();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5DCE0, 0, 0);
}

uint64_t sub_1C3C5DCE0()
{
  if (ICInternalSettingsDisableGASRAvailabilityCheck()) {
    sub_1C3DB8BA8();
  }
  else {
    sub_1C3DB8BF8();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v33 = v0[11];
  uint64_t v35 = v0[10];
  uint64_t v36 = v0[12];
  uint64_t v37 = v0[9];
  uint64_t v34 = v0[3];
  (*(void (**)(void))(v0[17] + 16))();
  uint64_t v3 = *MEMORY[0x1E4F3C210];
  uint64_t v4 = sub_1C3DB9378();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v2, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  uint64_t v6 = sub_1C3DB9228();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386408);
  uint64_t v7 = sub_1C3DB9238();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x1E4F3BFD8], v7);
  sub_1C3C5B1EC(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386410);
  uint64_t v11 = sub_1C3DB9368();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E4F3C1A8], v11);
  sub_1C3C5B504(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386418);
  uint64_t v15 = sub_1C3DB9298();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C3DD5140;
  unint64_t v20 = v19 + v18;
  uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v16 + 104);
  v21(v20, *MEMORY[0x1E4F3C028], v15);
  v21(v20 + v17, *MEMORY[0x1E4F3C030], v15);
  v21(v20 + 2 * v17, *MEMORY[0x1E4F3C048], v15);
  sub_1C3D44540(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C3DB92C8();
  swift_allocObject();
  uint64_t v22 = sub_1C3DB92B8();
  v0[20] = v22;
  sub_1C3DB91F8();
  sub_1C3DB9208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v36, v34, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386420);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C3DD3D30;
  unint64_t v24 = sub_1C3C60B50();
  *(void *)(v23 + 32) = v22;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = sub_1C3DB9328();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v37, 1, 1, v25);
  id v26 = objc_allocWithZone((Class)sub_1C3DB9318());
  swift_retain();
  id v27 = objc_msgSend(v26, sel_init);
  uint64_t v28 = (void *)swift_task_alloc();
  v0[21] = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_1C3C5E2EC;
  uint64_t v29 = v0[12];
  uint64_t v30 = v0[13];
  uint64_t v31 = v0[9];
  return MEMORY[0x1F40F7668](v30, v29, v23, v31, 0, v27, 0, 0);
}

uint64_t sub_1C3C5E2EC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[22] = a1;
  v3[23] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C3C5E7A4, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[24] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1C3C5E470;
    return MEMORY[0x1F40F7658]();
  }
}

uint64_t sub_1C3C5E470()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3C5E8AC;
  }
  else {
    uint64_t v2 = sub_1C3C5E584;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3C5E584()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v13 = v0[19];
  uint64_t v12 = v0[16];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E4FBD028], v4);
  sub_1C3DBA2D8();
  uint64_t v8 = sub_1C3DBA278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = v7;
  v9[5] = v1;
  swift_retain();
  swift_retain();
  sub_1C3C980BC(v6, (uint64_t)&unk_1EA386438, (uint64_t)v9);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C3C5E7A4()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3C5E8AC()
{
  swift_release();
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3C5E9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_1C3DB9288();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386440);
  v5[14] = swift_task_alloc();
  v5[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386448);
  v5[16] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386450);
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for TranscriptionUpdate(0);
  v5[21] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A0);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5EC1C, 0, 0);
}

uint64_t sub_1C3C5EC1C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[9];
  uint64_t v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v0[28] = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v5 = v3 + v4;
  swift_beginAccess();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[29] = v6;
  v0[30] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v7 = v6(v5, 1, v1);
  uint64_t v8 = v0[27];
  if (v7)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = v0[23];
    uint64_t v10 = v0[24];
    uint64_t v13 = (unsigned char *)v0[21];
    uint64_t v12 = v0[22];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *uint64_t v13 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C3DBA298();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  sub_1C3C2A448(v0[27], &qword_1EA3863A0);
  sub_1C3DB92A8();
  v0[31] = swift_getOpaqueTypeConformance2();
  sub_1C3DBA378();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[32] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1C3C5EEA8;
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[14];
  return MEMORY[0x1F4187C80](v18, 0, 0, v0 + 8, v17, AssociatedConformanceWitness);
}

uint64_t sub_1C3C5EEA8()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1C3C5F674;
  }
  else {
    uint64_t v1 = sub_1C3C5EFB8;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3C5EFB8()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v6 = v0[28];
  uint64_t v7 = v0[22];
  if (v4 == 1)
  {
    uint64_t v8 = v0[9] + v6;
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    if (v5(v8, 1, v7))
    {
      uint64_t v9 = v0[26];
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      uint64_t v14 = v0[26];
      uint64_t v16 = v0[23];
      uint64_t v15 = v0[24];
      uint64_t v18 = (unsigned char *)v0[21];
      uint64_t v17 = v0[22];
      (*(void (**)(uint64_t, void, uint64_t))(v16 + 16))(v15, v0[9] + v0[28], v17);
      unsigned char *v18 = 1;
      swift_storeEnumTagMultiPayload();
      sub_1C3DBA298();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    sub_1C3C2A448(v0[26], &qword_1EA3863A0);
    uint64_t v20 = (void *)swift_task_alloc();
    v0[33] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1C3C5F45C;
    return SiriTranscriptionMethod.finishTranscription()();
  }
  else
  {
    uint64_t v11 = v0[9] + v6;
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[13], v1, v2);
    swift_beginAccess();
    if (v5(v11, 1, v7))
    {
      uint64_t v12 = v0[25];
      (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
      swift_endAccess();
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    else
    {
      uint64_t v22 = v0[24];
      uint64_t v23 = v0[25];
      uint64_t v24 = v0[22];
      uint64_t v25 = v0[23];
      uint64_t v26 = v0[21];
      uint64_t v27 = v0[12];
      uint64_t v28 = v0[13];
      uint64_t v29 = v0[11];
      (*(void (**)(uint64_t, void, uint64_t))(v25 + 16))(v22, v0[9] + v0[28], v24);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v28, v29);
      swift_storeEnumTagMultiPayload();
      sub_1C3DBA298();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v23, 0, 1, v30);
    }
    sub_1C3C2A448(v0[25], &qword_1EA3863A0);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v32 = (void *)swift_task_alloc();
    v0[32] = v32;
    *unint64_t v32 = v0;
    v32[1] = sub_1C3C5EEA8;
    uint64_t v33 = v0[17];
    uint64_t v34 = v0[14];
    return MEMORY[0x1F4187C80](v34, 0, 0, v0 + 8, v33, AssociatedConformanceWitness);
  }
}

uint64_t sub_1C3C5F45C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3C5F674()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C3C5F764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386398);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  swift_beginAccess();
  sub_1C3C605CC((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1C3C5F898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  uint64_t v6 = sub_1C3DB9288();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386440);
  v5[13] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386460);
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for TranscriptionUpdate(0);
  v5[18] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  v5[19] = v8;
  v5[20] = *(void *)(v8 - 8);
  v5[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A0);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C5FAC4, 0, 0);
}

uint64_t sub_1C3C5FAC4()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[8];
  uint64_t v4 = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  v0[25] = OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v5 = v3 + v4;
  swift_beginAccess();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[26] = v6;
  v0[27] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v7 = v6(v5, 1, v1);
  uint64_t v8 = v0[24];
  if (v7)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = v0[20];
    uint64_t v10 = v0[21];
    uint64_t v13 = (unsigned char *)v0[18];
    uint64_t v12 = v0[19];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v5, v12);
    *uint64_t v13 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C3DBA298();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  sub_1C3C2A448(v0[24], &qword_1EA3863A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386378);
  sub_1C3DBA2B8();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[28] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1C3C5FCF0;
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[14];
  return MEMORY[0x1F4187D58](v16, 0, 0, v17);
}

uint64_t sub_1C3C5FCF0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C3C5FDEC, 0, 0);
}

uint64_t sub_1C3C5FDEC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[26];
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[19];
  if (v4 == 1)
  {
    uint64_t v8 = v0[8] + v6;
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    if (v5(v8, 1, v7))
    {
      uint64_t v9 = v0[23];
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    else
    {
      uint64_t v14 = v0[23];
      uint64_t v16 = v0[20];
      uint64_t v15 = v0[21];
      uint64_t v18 = (unsigned char *)v0[18];
      uint64_t v17 = v0[19];
      (*(void (**)(uint64_t, void, uint64_t))(v16 + 16))(v15, v0[8] + v0[25], v17);
      unsigned char *v18 = 1;
      swift_storeEnumTagMultiPayload();
      sub_1C3DBA298();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    sub_1C3C2A448(v0[23], &qword_1EA3863A0);
    if (qword_1EA385698 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C3DB9048();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA386338);
    uint64_t v21 = sub_1C3DB9028();
    os_log_type_t v22 = sub_1C3DBA698();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1C3A61000, v21, v22, "Recognition stream task completed", v23, 2u);
      MEMORY[0x1C877E600](v23, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  else
  {
    uint64_t v11 = v0[8] + v6;
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[12], v1, v2);
    swift_beginAccess();
    if (v5(v11, 1, v7))
    {
      uint64_t v12 = v0[22];
      (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
      swift_endAccess();
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    else
    {
      uint64_t v26 = v0[21];
      uint64_t v27 = v0[22];
      uint64_t v28 = v0[19];
      uint64_t v29 = v0[20];
      uint64_t v30 = v0[18];
      uint64_t v31 = v0[11];
      uint64_t v32 = v0[12];
      uint64_t v33 = v0[10];
      (*(void (**)(uint64_t, void, uint64_t))(v29 + 16))(v26, v0[8] + v0[25], v28);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v32, v33);
      swift_storeEnumTagMultiPayload();
      sub_1C3DBA298();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863A8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 0, 1, v34);
    }
    sub_1C3C2A448(v0[22], &qword_1EA3863A0);
    uint64_t v35 = (void *)swift_task_alloc();
    v0[28] = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_1C3C5FCF0;
    uint64_t v36 = v0[13];
    uint64_t v37 = v0[14];
    return MEMORY[0x1F4187D58](v36, 0, 0, v37);
  }
}

uint64_t SiriTranscriptionMethod.deinit()
{
  sub_1C3C2A448(v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation, &qword_1EA386398);
  return v0;
}

uint64_t SiriTranscriptionMethod.__deallocating_deinit()
{
  sub_1C3C2A448(v0 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation, &qword_1EA386398);
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C603D8(uint64_t a1)
{
  return sub_1C3C5F764(a1, v1);
}

uint64_t sub_1C3C603F4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386378);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3C604CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386378) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C3C3259C;
  return sub_1C3C5F898(a1, v5, v6, v7, v8);
}

uint64_t sub_1C3C605CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C60634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C60698(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3C606F4()
{
  return type metadata accessor for SiriTranscriptionMethod();
}

uint64_t type metadata accessor for SiriTranscriptionMethod()
{
  uint64_t result = qword_1EA3863B8;
  if (!qword_1EA3863B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C3C60748()
{
  sub_1C3C60810();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SiriTranscriptionMethod(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriTranscriptionMethod);
}

uint64_t dispatch thunk of SiriTranscriptionMethod.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1C3C60810()
{
  if (!qword_1EA3863C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386358);
    unint64_t v0 = sub_1C3DBA938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3863C8);
    }
  }
}

uint64_t sub_1C3C6086C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C3C6094C;
  return v5(v2 + 32);
}

uint64_t sub_1C3C6094C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1C3C60A60()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3C60A98(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C4DAF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA3863D0 + dword_1EA3863D0);
  return v6(a1, v4);
}

unint64_t sub_1C3C60B50()
{
  unint64_t result = qword_1EA386428;
  if (!qword_1EA386428)
  {
    sub_1C3DB92C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA386428);
  }
  return result;
}

uint64_t sub_1C3C60BA8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C60BF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C3C3259C;
  return sub_1C3C5E9BC(a1, v4, v5, v7, v6);
}

uint64_t sub_1C3C60CB0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C4DAF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA387200 + dword_1EA387200);
  return v6(a1, v4);
}

uint64_t NSOperationQueue.run<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C3C60D94, 0, 0);
}

uint64_t sub_1C3C60D94()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  *(void *)(v6 + 16) = v1;
  id v7 = v2;
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C3C60EC0;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[2];
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v10, (uint64_t)sub_1C3C611AC, (uint64_t)v5, (uint64_t)sub_1C3C61330, v6, v9);
}

uint64_t sub_1C3C60EC0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3C61008, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3C61008()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3C61074(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a5;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v12[4] = sub_1C3C6139C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C3C9FDCC;
  uint64_t v12[3] = &block_descriptor_1;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_addOperationWithBlock_, v11);
  _Block_release(v11);
}

uint64_t sub_1C3C6116C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C3C611AC(uint64_t a1)
{
  sub_1C3C61074(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_1C3C611B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v14 - v11;
  v10();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  sub_1C3CD0790((uint64_t)v9, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, a4);
}

id sub_1C3C61330(void *a1)
{
  return a1;
}

uint64_t sub_1C3C61364()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C6139C()
{
  return sub_1C3C611B8(v0[3], v0[4], v0[5], v0[2]);
}

void *sub_1C3C613A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C3D8288C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_1C3D8288C((void *)(v7 > 1), v8 + 1, 1, v3);
      }
      v3[2] = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t PersistedActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PersistedActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*PersistedActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PersistedActivityEvent()
{
  uint64_t result = qword_1EB6FC6D0;
  if (!qword_1EB6FC6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersistedActivityEvent.object.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v4;
  return result;
}

void (*PersistedActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.participant.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 24));
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PersistedActivityEvent.participant.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*PersistedActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.associatedAttachmentIds.getter()
{
  uint64_t v1 = sub_1C3DB8B98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for PersistedActivityEvent();
  sub_1C3C64300(v0 + *(int *)(v8 + 28), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = MEMORY[0x1E4FBC870];
  switch(EnumCaseMultiPayload)
  {
    case 1:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 6:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      *(void *)(inited + 32) = sub_1C3DB8B28();
      *(void *)(inited + 40) = v12;
      uint64_t v10 = sub_1C3C5B048(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v10;
    case 7:
      uint64_t v13 = sub_1C3C613A8(*v7);
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1C3C63E88((uint64_t)v13);
      goto LABEL_6;
    case 8:
      return v10;
    default:
LABEL_6:
      swift_bridgeObjectRelease();
      return v10;
  }
}

uint64_t PersistedActivityEvent.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PersistedActivityEvent();
  return sub_1C3C64300(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
}

uint64_t PersistedActivityEvent.activity.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersistedActivityEvent() + 28);
  return sub_1C3C64094(a1, v3);
}

void (*PersistedActivityEvent.activity.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PersistedActivityEvent.init(timestamp:object:participant:activity:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a2;
  uint64_t v9 = *((void *)a2 + 1);
  uint64_t v10 = *((void *)a2 + 2);
  long long v19 = *a3;
  uint64_t v11 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v13 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(a5, a1, v13);
  uint64_t v14 = (int *)type metadata accessor for PersistedActivityEvent();
  uint64_t v15 = a5 + v14[5];
  *(unsigned char *)uint64_t v15 = v8;
  *(void *)(v15 + 8) = v9;
  *(void *)(v15 + 16) = v10;
  uint64_t v16 = a5 + v14[6];
  *(_OWORD *)uint64_t v16 = v19;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v12;
  uint64_t v17 = a5 + v14[7];
  return sub_1C3C640F8(a4, v17);
}

uint64_t sub_1C3C61C24()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v49[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  sub_1C3C64300(v0 + *(int *)(v4 + 28), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *((void *)v3 + 2);
      uint64_t v7 = *((void *)v3 + 5);
      if (!v6) {
        goto LABEL_2;
      }
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_59;
      }
      goto LABEL_5;
    case 2u:
      char v8 = v3[24];
      uint64_t v10 = *((void *)v3 + 4);
      uint64_t v9 = *((void *)v3 + 5);
      uint64_t v12 = *((void *)v3 + 6);
      uint64_t v11 = *((void *)v3 + 7);
      uint64_t v13 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_2;
      }
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      if (v8) {
        uint64_t v14 = 1702129518;
      }
      else {
        uint64_t v14 = 0x7265646C6F66;
      }
      if (v8) {
        unint64_t v15 = 0xE400000000000000;
      }
      else {
        unint64_t v15 = 0xE600000000000000;
      }
      if (v12) {
        uint64_t v16 = 1702129518;
      }
      else {
        uint64_t v16 = 0x7265646C6F66;
      }
      if (v12) {
        unint64_t v17 = 0xE400000000000000;
      }
      else {
        unint64_t v17 = 0xE600000000000000;
      }
      if (v14 == v16 && v15 == v17)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v19 = sub_1C3DBB3B8();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
LABEL_5:
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
      }
      if (v10 != v11 || v9 != v13) {
        sub_1C3DBB3B8();
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
LABEL_59:
      uint64_t v5 = self;
LABEL_60:
      uint64_t v44 = (void *)sub_1C3DB9BF8();
      id v45 = objc_msgSend(v5, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v44, 0, 0, 1);
LABEL_61:
      id v47 = v45;

      uint64_t v27 = sub_1C3DB9C38();
      return v27;
    case 4u:
      uint64_t v20 = (void *)(v0 + *(int *)(v4 + 24));
      if (*(void *)v3 != *v20 || *((void *)v3 + 1) != v20[1]) {
        goto LABEL_30;
      }
      goto LABEL_31;
    case 5u:
      os_log_type_t v22 = (void *)(v0 + *(int *)(v4 + 24));
      if (*(void *)v3 != *v22 || *((void *)v3 + 1) != v22[1]) {
LABEL_30:
      }
        sub_1C3DBB3B8();
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_59;
    case 6u:
      uint64_t v24 = self;
      uint64_t v25 = (void *)sub_1C3DB9BF8();
      id v26 = objc_msgSend(v24, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v25, 0, 0, 1);

      uint64_t v27 = sub_1C3DB9C38();
      uint64_t v28 = sub_1C3DB8B98();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v28 - 8) + 8))(v3, v28);
      return v27;
    case 7u:
      uint64_t v29 = *(void *)v3;
      uint64_t v30 = *(void *)(*(void *)v3 + 16);
      if (!v30) {
        goto LABEL_43;
      }
      sub_1C3C2A4A4();
      swift_bridgeObjectRetain();
      uint64_t v31 = (uint64_t *)(v29 + 40);
      do
      {
        uint64_t v32 = *v31;
        uint64_t v52 = *(v31 - 1);
        uint64_t v53 = v32;
        uint64_t v50 = 7105633;
        unint64_t v51 = 0xE300000000000000;
        if (!sub_1C3DBAA18())
        {
          swift_bridgeObjectRelease_n();
          unint64_t v43 = self;
          uint64_t v44 = (void *)sub_1C3DB9BF8();
          id v45 = objc_msgSend(v43, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v44, 0, 0, 1);
          goto LABEL_61;
        }
        v31 += 4;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
LABEL_43:
      swift_getKeyPath();
      uint64_t v33 = sub_1C3C6893C(v29);
      swift_bridgeObjectRelease();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      uint64_t v35 = v33[2];
      swift_bridgeObjectRelease();
      uint64_t v36 = MEMORY[0x1E4FBB5C8];
      *(void *)(inited + 56) = MEMORY[0x1E4FBB550];
      *(void *)(inited + 64) = v36;
      *(void *)(inited + 32) = v35;
      uint64_t v37 = self;
      uint64_t v38 = (void *)sub_1C3DB9BF8();
      id v39 = objc_msgSend(v37, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v38, 0, 0, 0);

      uint64_t v40 = sub_1C3DB9C38();
      uint64_t v42 = v41;

      swift_bridgeObjectRetain();
      uint64_t v27 = (uint64_t)sub_1C3D2F9C4(inited, v40, v42);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      swift_arrayDestroy();
      return v27;
    case 8u:
      goto LABEL_59;
    default:
LABEL_2:
      swift_bridgeObjectRelease();
      uint64_t v5 = self;
      goto LABEL_60;
  }
}

uint64_t PersistedActivityEvent.hash(into:)()
{
  return PersistedActivityEvent.Activities.hash(into:)();
}

uint64_t sub_1C3C62C74()
{
  uint64_t result = 0x6D617473656D6974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7463656A626FLL;
      break;
    case 2:
      uint64_t result = 0x7069636974726170;
      break;
    case 3:
      uint64_t result = 0x7974697669746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3C62D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3C65860(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3C62D34()
{
  return 0;
}

void sub_1C3C62D40(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C3C62D4C(uint64_t a1)
{
  unint64_t v2 = sub_1C3C6415C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C62D88(uint64_t a1)
{
  unint64_t v2 = sub_1C3C6415C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersistedActivityEvent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386478);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C6415C();
  sub_1C3DBB6D8();
  LOBYTE(v18) = 0;
  sub_1C3DB8AF8();
  sub_1C3C65A78(&qword_1EA386488, MEMORY[0x1E4F27928]);
  sub_1C3DBB1E8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for PersistedActivityEvent();
    uint64_t v10 = (char *)(v3 + *(int *)(v9 + 20));
    char v11 = *v10;
    uint64_t v13 = *((void *)v10 + 1);
    uint64_t v12 = *((void *)v10 + 2);
    LOBYTE(v18) = v11;
    uint64_t v19 = v13;
    *(void *)&long long v20 = v12;
    char v21 = 1;
    sub_1C3C641B0();
    sub_1C3DBB1E8();
    uint64_t v14 = (uint64_t *)(v3 + *(int *)(v9 + 24));
    uint64_t v15 = v14[1];
    uint64_t v18 = *v14;
    uint64_t v19 = v15;
    long long v20 = *((_OWORD *)v14 + 1);
    char v21 = 2;
    sub_1C3C64204();
    sub_1C3DBB1E8();
    LOBYTE(v18) = 3;
    type metadata accessor for PersistedActivityEvent.Activities();
    sub_1C3C65A78(&qword_1EA3864A0, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities);
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PersistedActivityEvent.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t PersistedActivityEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3864A8);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for PersistedActivityEvent();
  MEMORY[0x1F4188790](v31);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v14 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1C3C6415C();
  uint64_t v15 = v33;
  sub_1C3DBB6B8();
  if (v15)
  {
    uint64_t v16 = v6;
    uint64_t v18 = v32;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v16);
  }
  else
  {
    uint64_t v17 = v28;
    uint64_t v33 = v3;
    LOBYTE(v34) = 0;
    sub_1C3C65A78(&qword_1EA3864B0, MEMORY[0x1E4F27928]);
    sub_1C3DBB108();
    (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v13, v8, v6);
    char v37 = 1;
    sub_1C3C64258();
    sub_1C3DBB108();
    uint64_t v20 = v35;
    uint64_t v21 = v36;
    uint64_t v22 = v31;
    uint64_t v23 = &v13[*(int *)(v31 + 20)];
    *uint64_t v23 = v34;
    *((void *)v23 + 1) = v20;
    *((void *)v23 + 2) = v21;
    char v37 = 2;
    sub_1C3C642AC();
    sub_1C3DBB108();
    uint64_t v24 = v35;
    uint64_t v25 = &v13[*(int *)(v22 + 24)];
    *(void *)uint64_t v25 = v34;
    *((void *)v25 + 1) = v24;
    *((_OWORD *)v25 + 1) = v36;
    LOBYTE(v34) = 3;
    sub_1C3C65A78(&qword_1EA3864C8, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities);
    sub_1C3DBB108();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v29);
    sub_1C3C640F8((uint64_t)v5, (uint64_t)&v13[*(int *)(v22 + 28)]);
    sub_1C3C64300((uint64_t)v13, v27, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
    return sub_1C3C64FA0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
  }
}

uint64_t sub_1C3C63714@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistedActivityEvent.init(from:)(a1, a2);
}

uint64_t sub_1C3C6372C(void *a1)
{
  return PersistedActivityEvent.encode(to:)(a1);
}

uint64_t sub_1C3C6374C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C638AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C3C63914(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*sub_1C3C6397C())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3C6399C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a2 = *(unsigned char *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C639B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 24));
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s11NotesShared22PersistedActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C3DB8AB8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for PersistedActivityEvent();
  uint64_t v5 = v4[5];
  int v6 = *(unsigned __int8 *)(a1 + v5);
  uint64_t v8 = *(void *)(a1 + v5 + 8);
  uint64_t v7 = *(void *)(a1 + v5 + 16);
  uint64_t v9 = a2 + v5;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v6) {
    uint64_t v12 = 1702129518;
  }
  else {
    uint64_t v12 = 0x7265646C6F66;
  }
  if (v6) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE600000000000000;
  }
  if (*(unsigned char *)v9) {
    uint64_t v14 = 1702129518;
  }
  else {
    uint64_t v14 = 0x7265646C6F66;
  }
  if (*(unsigned char *)v9) {
    unint64_t v15 = 0xE400000000000000;
  }
  else {
    unint64_t v15 = 0xE600000000000000;
  }
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1C3DBB3B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v8 == v11 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v20 = v4[6];
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  uint64_t v23 = (void *)(a2 + v20);
  if ((v21 != *v23 || v22 != v23[1]) && (sub_1C3DBB3B8() & 1) == 0) {
    return 0;
  }
  uint64_t v24 = v4[7];
  return _s11NotesShared22PersistedActivityEventV10ActivitiesO2eeoiySbAE_AEtFZ_0(a1 + v24, a2 + v24);
}

uint64_t sub_1C3C63BE0(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1C3C65A78((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_1C3DBA458();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    char v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1C3CD4410(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1C3C63E88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C3DBA458();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C3CD470C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C3C63F20(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  sub_1C3C65A38();
  sub_1C3C65A78(qword_1EA3864F0, (void (*)(uint64_t))sub_1C3C65A38);
  uint64_t result = sub_1C3DBA458();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C3DBAFB8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1C877C220](i, a1);
        sub_1C3CD49B8(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1C3CD49B8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C64094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C640F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C3C6415C()
{
  unint64_t result = qword_1EA386480;
  if (!qword_1EA386480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386480);
  }
  return result;
}

unint64_t sub_1C3C641B0()
{
  unint64_t result = qword_1EA386490;
  if (!qword_1EA386490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386490);
  }
  return result;
}

unint64_t sub_1C3C64204()
{
  unint64_t result = qword_1EA386498;
  if (!qword_1EA386498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386498);
  }
  return result;
}

unint64_t sub_1C3C64258()
{
  unint64_t result = qword_1EA3864B8;
  if (!qword_1EA3864B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3864B8);
  }
  return result;
}

unint64_t sub_1C3C642AC()
{
  unint64_t result = qword_1EA3864C0;
  if (!qword_1EA3864C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3864C0);
  }
  return result;
}

uint64_t sub_1C3C64300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3C64368()
{
  return sub_1C3C65A78(&qword_1EA3864D0, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersistedActivityEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    char v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = type metadata accessor for PersistedActivityEvent.Activities();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        uint64_t v21 = v19[2];
        v18[1] = v19[1];
        _OWORD v18[2] = v21;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        uint64_t v24 = v19[2];
        v18[1] = v19[1];
        _OWORD v18[2] = v24;
        *((unsigned char *)v18 + 24) = *((unsigned char *)v19 + 24);
        uint64_t v25 = v19[4];
        uint64_t v26 = v19[5];
        v18[4] = v25;
        v18[5] = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        uint64_t v27 = v19[2];
        v18[1] = v19[1];
        _OWORD v18[2] = v27;
        *((unsigned char *)v18 + 24) = *((unsigned char *)v19 + 24);
        uint64_t v28 = v19[5];
        v18[4] = v19[4];
        v18[5] = v28;
        *((unsigned char *)v18 + 48) = *((unsigned char *)v19 + 48);
        uint64_t v29 = v19[7];
        uint64_t v30 = v19[8];
        v18[7] = v29;
        v18[8] = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v31 = v19[1];
        void *v18 = *v19;
        v18[1] = v31;
        uint64_t v32 = v19[2];
        uint64_t v33 = v19[3];
        _OWORD v18[2] = v32;
        v18[3] = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v34 = sub_1C3DB8B98();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v18, v19, v34);
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
        *((unsigned char *)v18 + *(int *)(v35 + 48)) = *((unsigned char *)v19 + *(int *)(v35 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        void *v18 = *v19;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PersistedActivityEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 7:
      goto LABEL_7;
    case 1:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6:
      uint64_t v7 = sub_1C3DB8B98();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t result = v8(v5, v7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  uint64_t v12[3] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for PersistedActivityEvent.Activities();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      uint64_t v20 = v18[2];
      v17[1] = v18[1];
      void v17[2] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      uint64_t v21 = v18[2];
      v17[1] = v18[1];
      void v17[2] = v21;
      *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
      uint64_t v22 = v18[4];
      uint64_t v23 = v18[5];
      void v17[4] = v22;
      v17[5] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      uint64_t v24 = v18[2];
      v17[1] = v18[1];
      void v17[2] = v24;
      *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
      uint64_t v25 = v18[5];
      void v17[4] = v18[4];
      v17[5] = v25;
      *((unsigned char *)v17 + 48) = *((unsigned char *)v18 + 48);
      uint64_t v26 = v18[7];
      uint64_t v27 = v18[8];
      v17[7] = v26;
      v17[8] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4u:
    case 5u:
      uint64_t v28 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v28;
      uint64_t v29 = v18[2];
      uint64_t v30 = v18[3];
      void v17[2] = v29;
      v17[3] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 6u:
      uint64_t v31 = sub_1C3DB8B98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v17, v18, v31);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
      *((unsigned char *)v17 + *(int *)(v32 + 48)) = *((unsigned char *)v18 + *(int *)(v32 + 48));
      goto LABEL_9;
    case 7u:
      *uint64_t v17 = *v18;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[2] = *(void *)(v12 + 16);
  v11[3] = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_1C3C64FA0(a1 + v13, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
    uint64_t v16 = type metadata accessor for PersistedActivityEvent.Activities();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
        v14[1] = v15[1];
        void v14[2] = v15[2];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 1u:
        *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
        v14[1] = v15[1];
        void v14[2] = v15[2];
        *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
        v14[4] = v15[4];
        v14[5] = v15[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
        v14[1] = v15[1];
        void v14[2] = v15[2];
        *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
        v14[4] = v15[4];
        v14[5] = v15[5];
        *((unsigned char *)v14 + 48) = *((unsigned char *)v15 + 48);
        v14[7] = v15[7];
        v14[8] = v15[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
      case 5u:
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        void v14[2] = v15[2];
        v14[3] = v15[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 6u:
        uint64_t v17 = sub_1C3DB8B98();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
        *((unsigned char *)v14 + *(int *)(v18 + 48)) = *((unsigned char *)v15 + *(int *)(v18 + 48));
        goto LABEL_10;
      case 7u:
        *uint64_t v14 = *v15;
        swift_bridgeObjectRetain();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C3C64FA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = (long long *)(a2 + v7);
  long long v11 = *v10;
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(_OWORD *)uint64_t v9 = v11;
  uint64_t v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = type metadata accessor for PersistedActivityEvent.Activities();
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v19 = sub_1C3DB8B98();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
    v16[*(int *)(v20 + 48)] = v17[*(int *)(v20 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for PersistedActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  v13[2] = *(void *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v17 = a3[7];
    uint64_t v18 = (unsigned char *)(a1 + v17);
    uint64_t v19 = (unsigned char *)(a2 + v17);
    sub_1C3C64FA0(a1 + v17, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
    uint64_t v20 = type metadata accessor for PersistedActivityEvent.Activities();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v21 = sub_1C3DB8B98();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
      v18[*(int *)(v22 + 48)] = v19[*(int *)(v22 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistedActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3C65304);
}

uint64_t sub_1C3C65304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for PersistedActivityEvent.Activities();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for PersistedActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3C65448);
}

uint64_t sub_1C3C65448(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for PersistedActivityEvent.Activities();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1C3C65578()
{
  uint64_t result = sub_1C3DB8AF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PersistedActivityEvent.Activities();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersistedActivityEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C65720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistedActivityEvent.CodingKeys()
{
  return &type metadata for PersistedActivityEvent.CodingKeys;
}

unint64_t sub_1C3C6575C()
{
  unint64_t result = qword_1EA3864D8;
  if (!qword_1EA3864D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3864D8);
  }
  return result;
}

unint64_t sub_1C3C657B4()
{
  unint64_t result = qword_1EA3864E0;
  if (!qword_1EA3864E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3864E0);
  }
  return result;
}

unint64_t sub_1C3C6580C()
{
  unint64_t result = qword_1EA3864E8;
  if (!qword_1EA3864E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3864E8);
  }
  return result;
}

uint64_t sub_1C3C65860(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1C3C65A38()
{
  unint64_t result = qword_1EA388CF0;
  if (!qword_1EA388CF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388CF0);
  }
  return result;
}

uint64_t sub_1C3C65A78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C65AC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3C65B50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C3C65C08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1C3C65C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C3C65C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C3C65CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C3C65D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C3C65D74(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C3C65ED0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C3C660E8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for HelpCommand()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C3C66128()
{
}

void sub_1C3C66138()
{
}

uint64_t sub_1C3C66194(uint64_t *a1)
{
  sub_1C3C66240((uint64_t)&off_1F1F29788, a1);
  BOOL v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1C3C66450(v2);
}

uint64_t sub_1C3C66240@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(a1 + 16))();
  if (!v2)
  {
    a2[3] = MEMORY[0x1E4FBB1A0];
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1C3C66288(uint64_t a1)
{
  return sub_1C3CC1210(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1C3C662A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1C3C662E0(uint64_t a1)
{
  return sub_1C3C66288(a1);
}

uint64_t sub_1C3C662F8(uint64_t *a1)
{
  sub_1C3C66240((uint64_t)&off_1F1F29F78, a1);
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1C3C66450(v2);
}

uint64_t sub_1C3C663A4(uint64_t *a1)
{
  sub_1C3C66240((uint64_t)&off_1F1F2A048, a1);
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1C3C66450(v2);
}

uint64_t sub_1C3C66450(uint64_t (*a1)(void))
{
  return a1();
}

id static related decl 'e' for ICErrorCode.assertionFailure(_:_:)(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  id v5 = sub_1C3C66500(v4, a1, a2);
  swift_release();
  return v5;
}

uint64_t sub_1C3C664C8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C3C66500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = (void **)(a1 + 16);
  int v3 = *(void **)(a1 + 16);
  if (v3)
  {
    id v5 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    *(void *)(inited + 32) = sub_1C3DB9C38();
    *(void *)(inited + 40) = v8;
    uint64_t v9 = a3();
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v9;
    *(void *)(inited + 56) = v10;
    sub_1C3C29C88(inited);
    sub_1C3C66618();
    sub_1C3DB8768();
    swift_beginAccess();
    int v11 = *v4;
    *uint64_t v4 = v14;
    id v5 = v14;

    int v3 = 0;
  }
  id v12 = v3;
  return v5;
}

unint64_t sub_1C3C66618()
{
  unint64_t result = qword_1EA385A98;
  if (!qword_1EA385A98)
  {
    type metadata accessor for ICError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385A98);
  }
  return result;
}

uint64_t sub_1C3C66670@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386598);
  sub_1C3DBA128();
  swift_getWitnessTable();
  sub_1C3DBA508();
  swift_getWitnessTable();
  if (sub_1C3DB9F28())
  {
    sub_1C3DBA148();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4, 1, a1);
}

google::protobuf::io::ZeroCopyOutputStream *Array.init<A, B>(uniquing:by:uniquingKeysWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = sub_1C3C68B94(a1, a2, a3, a4, a5, a6, a7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a1, a5);
  return v9;
}

uint64_t Array.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C3C68D08(a1, a2, a3);
  uint64_t v4 = sub_1C3DBA938();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(a1, v4);
}

uint64_t sub_1C3C66B54(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386598);
  sub_1C3DBA128();
  swift_getWitnessTable();
  sub_1C3DBA508();
  swift_getWitnessTable();
  uint64_t result = sub_1C3DB9F28();
  if (result)
  {
    sub_1C3DBA088();
    uint64_t v9 = *a2;
    sub_1C3C685D0(a3, *a2);
    char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0) {
      uint64_t v11 = v9;
    }
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 24))(v11+ ((*(unsigned __int8 *)(*(void *)(a4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4 - 8) + 80))+ *(void *)(*(void *)(a4 - 8) + 72) * a3, a1, a4);
  }
  return result;
}

void (*Array.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = sub_1C3DBA938();
  v7[3] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[4] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v7[5] = malloc(v11);
  id v12 = malloc(v11);
  v7[6] = v12;
  Array.subscript.getter(v8, (uint64_t)v12);
  return sub_1C3C66DBC;
}

void sub_1C3C66DBC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_1C3C68D08((uint64_t)v3, v8, v7);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    sub_1C3C68D08((*a1)[6], v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

google::protobuf::io::ZeroCopyOutputStream *Array.init<A, B>(uniquing:combine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_1C3C68A04(a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 8))(a1, a6);
  return v8;
}

uint64_t sub_1C3C66F24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(*a2 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v5 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v5, a1, v4);
}

uint64_t sub_1C3C66FFC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  unint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  unint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1C3DBA938();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1C3DB9EB8();
  uint64_t v61 = sub_1C3DBAE88();
  uint64_t v56 = sub_1C3DBAE98();
  sub_1C3DBAE38();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_1C3DB9EA8();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1C3DBA998();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1C3DBAE78();
      if (!--v31)
      {
        uint64_t v35 = v54;
        long long v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  long long v36 = v51;
LABEL_9:
  sub_1C3DBA998();
  unint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    char v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    id v39 = v41;
    char v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1C3DBAE78();
      sub_1C3DBA998();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Array.appendNonNil(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_1C3DBA938();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, v3);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v3);
  sub_1C3DBA0E8();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v3);
}

uint64_t Array.insertOptional(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = sub_1C3DBA938();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, v4);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v4);
  sub_1C3DBA0F8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v4);
}

uint64_t Array.prepend(_:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C3DBA0F8();
}

uint64_t Array.prependNonNil(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_1C3DBA938();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  Array.prepend(_:)((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
}

uint64_t Array.firstIndex(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v26[0] = a1;
  v26[1] = a2;
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v31 = sub_1C3DBA938();
  uint64_t v10 = *(void *)(v31 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v31);
  uint64_t v30 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - v13;
  v33[1] = a3;
  uint64_t v27 = a4;
  uint64_t v15 = sub_1C3DBA128();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877B3E0](v33, v15, WitnessTable);
  uint64_t v32 = v33[0];
  sub_1C3DBAFA8();
  sub_1C3DBAF78();
  uint64_t v17 = sub_1C3DBAF98();
  uint64_t v18 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v28 = TupleTypeMetadata2 - 8;
  uint64_t v29 = v17;
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v20 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v27;
  while (1)
  {
    uint64_t v22 = v30;
    sub_1C3DBAF88();
    (*v18)(v14, v22, v31);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v23 = *(void *)v14;
    }
    (*v19)(v8, &v14[*(int *)(TupleTypeMetadata2 + 48)], v21);
    char v24 = ((uint64_t (*)(uint64_t, char *))v26[0])(v23, v8);
    (*v20)(v8, v21);
    if (v24) {
      goto LABEL_6;
    }
  }
  uint64_t v23 = 0;
LABEL_6:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t Array.firstSearchingBackwards(from:matching:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1C3C68244(a1, (void (*)(void))Array.firstSearchingBackwardsIndex(from:matching:), a2);
}

uint64_t Array.firstSearchingBackwardsIndex(from:matching:)(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1C877B5E0](v11, v12);
  uint64_t result = 0;
  if ((v7 & 0x8000000000000000) == 0 && v13 > v7)
  {
    uint64_t v15 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      sub_1C3DBA148();
      char v16 = a2(v10);
      (*v15)(v10, a5);
      if (v16) {
        break;
      }
      if (v7-- <= 0) {
        return 0;
      }
    }
    return v7;
  }
  return result;
}

uint64_t Array.firstSearchingForwards(from:matching:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1C3C68244(a1, (void (*)(void))Array.firstSearchingForwardsIndex(from:matching:), a2);
}

uint64_t sub_1C3C68244@<X0>(uint64_t a1@<X4>, void (*a2)(void)@<X5>, uint64_t a3@<X8>)
{
  a2();
  if (v5)
  {
    uint64_t v6 = 1;
  }
  else
  {
    sub_1C3DBA148();
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  return v7(a3, v6, 1, a1);
}

uint64_t Array.firstSearchingForwardsIndex(from:matching:)(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 < 0) {
    return 0;
  }
  uint64_t v13 = MEMORY[0x1C877B5E0](a4, a5);
  if (v13 <= v8) {
    return 0;
  }
  uint64_t v14 = v13;
  uint64_t v15 = (void (**)(char *, uint64_t))(v9 + 8);
  while (1)
  {
    sub_1C3DBA148();
    char v16 = a2(v12);
    (*v15)(v12, a5);
    if (v16) {
      break;
    }
    if (v14 == ++v8) {
      return 0;
    }
  }
  return v8;
}

google::protobuf::io::ZeroCopyOutputStream *Array<A>.init<A>(uniquing:uniquingKeysWith:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v12 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, a1, v15);
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = sub_1C3C68B94((uint64_t)v14, KeyPath, v21, v22, a5, AssociatedConformanceWitness, a7);
  swift_release();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, a5);
  v19(a1, a5);
  return v18;
}

uint64_t sub_1C3C685D0(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1C3C68624(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1C3C9D444(0, v2, 0);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      unint64_t v11 = *(void *)(v16 + 16);
      unint64_t v10 = *(void *)(v16 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C3C9D444(v10 > 1, v11 + 1, 1);
        uint64_t v9 = v15;
        uint64_t v8 = v14;
      }
      v3 += 4;
      *(void *)(v16 + 16) = v11 + 1;
      uint64_t v12 = (void *)(v16 + 48 * v11);
      v12[4] = v8;
      v12[5] = v9;
      void v12[6] = v4;
      v12[7] = v5;
      v12[8] = v6;
      v12[9] = v7;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C3C6875C(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = v5[3];
      uint64_t v8 = v5[4];
      uint64_t v9 = v5[1];
      uint64_t v10 = v5[2];
      uint64_t v12 = *(v5 - 1);
      uint64_t v11 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v11) {
        break;
      }
      uint64_t v31 = v9;
      uint64_t v32 = v7;
      uint64_t v30 = v4;
      uint64_t v13 = (void *)*a3;
      unint64_t v15 = sub_1C3C2A4F8(v12, v11);
      uint64_t v16 = v13[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_1C3DBB538();
        __break(1u);
        return result;
      }
      char v19 = v14;
      if (v13[3] >= v18)
      {
        if ((a2 & 1) == 0) {
          sub_1C3D83E84();
        }
      }
      else
      {
        sub_1C3D8589C(v18, a2 & 1);
        unint64_t v20 = sub_1C3C2A4F8(v12, v11);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_18;
        }
        unint64_t v15 = v20;
      }
      uint64_t v22 = (void *)*a3;
      if (v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t *)(v22[7] + 32 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v6 = v31;
        v6[1] = v10;
        uint64_t v6[2] = v32;
        v6[3] = v8;
      }
      else
      {
        v22[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v23 = (uint64_t *)(v22[6] + 16 * v15);
        *uint64_t v23 = v12;
        v23[1] = v11;
        uint64_t v24 = (uint64_t *)(v22[7] + 32 * v15);
        *uint64_t v24 = v31;
        v24[1] = v10;
        v24[2] = v32;
        v24[3] = v8;
        uint64_t v25 = v22[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_17;
        }
        v22[2] = v27;
      }
      v5 += 6;
      a2 = 1;
      --v4;
    }
    while (v30 != 1);
  }
  return swift_bridgeObjectRelease();
}

void *sub_1C3C6893C(uint64_t a1)
{
  uint64_t v3 = sub_1C3C68624(a1);
  if (*(void *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EA3865A0);
    uint64_t v4 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v6 = v4;
  sub_1C3C6875C(v3, 1, &v6);
  if (!v1) {
    int64_t v2 = sub_1C3C56C7C(v6);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

google::protobuf::io::ZeroCopyOutputStream *sub_1C3C68A04(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = (google::protobuf::io::ZeroCopyOutputStream *)sub_1C3DB9AD8();
  if (!v1)
  {
    google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(result);
    uint64_t v6 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[1] = v6;
    sub_1C3DB9AC8();
    swift_getWitnessTable();
    return (google::protobuf::io::ZeroCopyOutputStream *)sub_1C3DBA138();
  }
  return result;
}

google::protobuf::io::ZeroCopyOutputStream *sub_1C3C68B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t v16 = a7;
  uint64_t v17 = a2;
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_1C3C66FFC((void (*)(char *, char *))sub_1C3C68E88, (uint64_t)v13, a5, TupleTypeMetadata2, MEMORY[0x1E4FBC248], a7, MEMORY[0x1E4FBC278], v10);
  sub_1C3DBA128();
  swift_getWitnessTable();
  uint64_t v11 = sub_1C3C68A04((uint64_t)&v18);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C3C68D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = *(void *)(a3 + 16);
  v5[4] = a2;
  sub_1C3DBA938();
  return sub_1C3C66670((void (*)(char *, char *))sub_1C3C68E64, (uint64_t)v5, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, v3, (uint64_t)&v6);
}

uint64_t sub_1C3C68D98()
{
  return sub_1C3DBACA8();
}

uint64_t sub_1C3C68DCC()
{
  return 32;
}

__n128 sub_1C3C68DD8(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C3C68DE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return Array.subscript.getter(*(void *)(a2 + a1 - 8), a3);
}

uint64_t sub_1C3C68DFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = sub_1C3DBA128();
  return sub_1C3C68D08(a1, v4, v5);
}

uint64_t sub_1C3C68E4C()
{
  return 8;
}

void *sub_1C3C68E58(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C3C68E64(uint64_t a1)
{
  return sub_1C3C66B54(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1C3C68E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3C66F24(a1, *(void **)(v2 + 40), a2);
}

uint64_t sub_1C3C68EAC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C3C68EF4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for GroupHelpCommand()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3C68F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a4 + 8) + 8))(a3);
}

uint64_t sub_1C3C68F88(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C3CC0D8C(a3, a4);
  if (!v4)
  {
    if (v9)
    {
      if (a2)
      {
        sub_1C3DBAC68();
        sub_1C3CC1A30(a3, a4);
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
      }
      else
      {
        sub_1C3CC1A30(a3, a4);
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3CC1DB0();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    else
    {
      return sub_1C3CC1A30(a3, a4);
    }
  }
  return result;
}

uint64_t sub_1C3C692F8(uint64_t a1)
{
  return sub_1C3C68F88(*(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1C3C69320(uint64_t a1)
{
  return sub_1C3C68F4C(*v1, 0, *(void *)(a1 + 16), *(void *)(a1 + 24));
}

id RealtimeCollaborationSelectionDocument.State.__allocating_init(identity:fields:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v2);
  uint64_t v5 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  char v6 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_initWithIdentity_fields_, v5, v6);

  uint64_t v8 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id RealtimeCollaborationSelectionDocument.State.init(identity:fields:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = (void *)sub_1C3DB8B38();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386200);
  char v6 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v10, sel_initWithIdentity_fields_, v5, v6);

  uint64_t v8 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id RealtimeCollaborationSelectionDocument.State.__allocating_init(iccrCoder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithICCRCoder_, a1);

  return v3;
}

id RealtimeCollaborationSelectionDocument.State.init(iccrCoder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithICCRCoder_, a1);

  return v3;
}

unint64_t _s11NotesShared38RealtimeCollaborationSelectionDocumentC5StateC12crPropertiesSDySSSo12ICCRDataType_pGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386230);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5130;
  uint64_t v1 = NSStringFromSelector(sel_participantIDsToSelectionRegisters);
  uint64_t v2 = sub_1C3DB9C38();
  uint64_t v4 = v3;

  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone((Class)ICCRDictionary), sel_init);
  objc_super v5 = NSStringFromSelector(sel_participantIDsOrder);
  uint64_t v6 = sub_1C3DB9C38();
  uint64_t v8 = v7;

  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)ICCROrderedSet), sel_init);
  return sub_1C3C81504(inited);
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument.State()
{
  return self;
}

uint64_t type metadata accessor for __RealtimeCollaborationSelectionState()
{
  return self;
}

id sub_1C3C699D8()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1, 0xD000000000000011, 0x80000001C3DF43F0);

  return v2;
}

uint64_t sub_1C3C69AB4(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386628);
}

uint64_t static Logger.accounts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EA3856A0, (uint64_t)qword_1EA386628, a1);
}

uint64_t sub_1C3C69AF8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FC520);
}

uint64_t static Logger.activityStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FC718, (uint64_t)qword_1EB6FC520, a1);
}

uint64_t sub_1C3C69B48(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386640);
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EA3856B0, (uint64_t)qword_1EA386640, a1);
}

uint64_t sub_1C3C69B90(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB7C8);
}

uint64_t static Logger.application.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EB6FBA98, (uint64_t)qword_1EB6FB7C8, a1);
}

uint64_t sub_1C3C69BDC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386658);
}

uint64_t static Logger.archiving.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856C0, (uint64_t)qword_1EA386658, a1);
}

uint64_t sub_1C3C69C24(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FC2A0);
}

uint64_t static Logger.audioTranscription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FC2B8, (uint64_t)qword_1EB6FC2A0, a1);
}

uint64_t sub_1C3C69C6C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386670);
}

uint64_t static Logger.cloud.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856D0, (uint64_t)qword_1EA386670, a1);
}

uint64_t sub_1C3C69CAC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB7E0);
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBAA8, (uint64_t)qword_1EB6FB7E0, a1);
}

uint64_t sub_1C3C69CFC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386688);
}

uint64_t static Logger.coreData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856E0, (uint64_t)qword_1EA386688, a1);
}

uint64_t sub_1C3C69D40(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3866A0);
}

uint64_t static Logger.crFramework.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856E8, (uint64_t)qword_1EA3866A0, a1);
}

uint64_t sub_1C3C69D8C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3866B8);
}

uint64_t static Logger.crypto.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856F0, (uint64_t)qword_1EA3866B8, a1);
}

uint64_t sub_1C3C69DCC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3866D0);
}

uint64_t static Logger.dataStoreServer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3856F8, (uint64_t)qword_1EA3866D0, a1);
}

uint64_t sub_1C3C69E1C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3866E8);
}

uint64_t static Logger.delete.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385700, (uint64_t)qword_1EA3866E8, a1);
}

uint64_t sub_1C3C69E5C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386700);
}

uint64_t static Logger.digitalSeparation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385708, (uint64_t)qword_1EA386700, a1);
}

uint64_t sub_1C3C69EA4(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386718);
}

uint64_t static Logger.dragAndDrop.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385710, (uint64_t)qword_1EA386718, a1);
}

uint64_t sub_1C3C69EF0(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386730);
}

uint64_t static Logger.documentCamera.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385718, (uint64_t)qword_1EA386730, a1);
}

uint64_t sub_1C3C69F40(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386748);
}

uint64_t static Logger.duo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385720, (uint64_t)qword_1EA386748, a1);
}

uint64_t sub_1C3C69F7C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386760);
}

uint64_t static Logger.export.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385728, (uint64_t)qword_1EA386760, a1);
}

uint64_t sub_1C3C69FBC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386778);
}

uint64_t static Logger.filesystem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385730, (uint64_t)qword_1EA386778, a1);
}

uint64_t sub_1C3C6A004(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386790);
}

uint64_t static Logger.handoff.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385738, (uint64_t)qword_1EA386790, a1);
}

uint64_t sub_1C3C6A048(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3867A8);
}

uint64_t static Logger.hashtag.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385740, (uint64_t)qword_1EA3867A8, a1);
}

uint64_t sub_1C3C6A08C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3867C0);
}

uint64_t static Logger.html.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385748, (uint64_t)qword_1EA3867C0, a1);
}

uint64_t sub_1C3C6A0C8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3867D8);
}

uint64_t static Logger.import.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385750, (uint64_t)qword_1EA3867D8, a1);
}

uint64_t sub_1C3C6A108(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3867F0);
}

uint64_t static Logger.intents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385758, (uint64_t)qword_1EA3867F0, a1);
}

uint64_t sub_1C3C6A14C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386808);
}

uint64_t static Logger.internal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385760, (uint64_t)qword_1EA386808, a1);
}

uint64_t sub_1C3C6A190(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB7B0);
}

uint64_t static Logger.launchTask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBA88, (uint64_t)qword_1EB6FB7B0, a1);
}

uint64_t sub_1C3C6A1D8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FC798);
}

uint64_t static Logger.link.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FC7B0, (uint64_t)qword_1EB6FC798, a1);
}

uint64_t sub_1C3C6A214(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386820);
}

uint64_t static Logger.linksAndSuggestions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EA385768, (uint64_t)qword_1EA386820, a1);
}

uint64_t sub_1C3C6A25C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FC2C0);
}

uint64_t static Logger.math.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBF80, (uint64_t)qword_1EB6FC2C0, a1);
}

uint64_t sub_1C3C6A298(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386838);
}

uint64_t static Logger.media.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385778, (uint64_t)qword_1EA386838, a1);
}

uint64_t sub_1C3C6A2D8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386850);
}

uint64_t static Logger.mentions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385780, (uint64_t)qword_1EA386850, a1);
}

uint64_t sub_1C3C6A31C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386868);
}

uint64_t static Logger.migration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385788, (uint64_t)qword_1EA386868, a1);
}

uint64_t sub_1C3C6A364(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386880);
}

uint64_t static Logger.move.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385790, (uint64_t)qword_1EA386880, a1);
}

uint64_t sub_1C3C6A3A0(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386898);
}

uint64_t static Logger.multipeer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385798, (uint64_t)qword_1EA386898, a1);
}

uint64_t sub_1C3C6A3E8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3868B0);
}

uint64_t static Logger.nlp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857A0, (uint64_t)qword_1EA3868B0, a1);
}

uint64_t sub_1C3C6A424(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3868C8);
}

uint64_t static Logger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857A8, (uint64_t)qword_1EA3868C8, a1);
}

uint64_t sub_1C3C6A474(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3868E0);
}

uint64_t static Logger.pencilKit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857B0, (uint64_t)qword_1EA3868E0, a1);
}

uint64_t sub_1C3C6A4BC(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3868F8);
}

uint64_t static Logger.previewGeneration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857B8, (uint64_t)qword_1EA3868F8, a1);
}

uint64_t sub_1C3C6A504(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386910);
}

uint64_t static Logger.imageAnalyzer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857C0, (uint64_t)qword_1EA386910, a1);
}

uint64_t sub_1C3C6A554(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386928);
}

uint64_t static Logger.outlining.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857C8, (uint64_t)qword_1EA386928, a1);
}

uint64_t sub_1C3C6A59C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386940);
}

uint64_t static Logger.scripting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857D0, (uint64_t)qword_1EA386940, a1);
}

uint64_t sub_1C3C6A5E4(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386958);
}

uint64_t static Logger.searchIndexer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857D8, (uint64_t)qword_1EA386958, a1);
}

uint64_t sub_1C3C6A634(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386970);
}

uint64_t static Logger.sharingExtension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857E0, (uint64_t)qword_1EA386970, a1);
}

uint64_t sub_1C3C6A67C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386988);
}

uint64_t static Logger.sidecar.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857E8, (uint64_t)qword_1EA386988, a1);
}

uint64_t sub_1C3C6A6C0(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3869A0);
}

uint64_t static Logger.query.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857F0, (uint64_t)qword_1EA3869A0, a1);
}

uint64_t sub_1C3C6A700(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3869B8);
}

uint64_t static Logger.quickNote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA3857F8, (uint64_t)qword_1EA3869B8, a1);
}

uint64_t sub_1C3C6A748(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB7F8);
}

uint64_t static Logger.fastSyncPresence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBAB0, (uint64_t)qword_1EB6FB7F8, a1);
}

uint64_t sub_1C3C6A790(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB810);
}

uint64_t static Logger.realtimeCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBAB8, (uint64_t)qword_1EB6FB810, a1);
}

uint64_t sub_1C3C6A7D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A48);
  __swift_allocate_value_buffer(v0, qword_1EA3869D0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA3869D0);
  if (sub_1C3C699D8())
  {
    if (qword_1EB6FBAB8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1C3DB9048();
    uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6FB810);
    uint64_t v10 = *(void *)(v2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v1, v3, v2);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v5 = v1;
    uint64_t v6 = 0;
    uint64_t v7 = v2;
  }
  else
  {
    uint64_t v8 = sub_1C3DB9048();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v7 = v8;
    uint64_t v5 = v1;
    uint64_t v6 = 1;
  }
  return v4(v5, v6, 1, v7);
}

uint64_t static Logger.verboseRealtimeCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA385800 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A48);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA3869D0);
  return sub_1C3C6A9C4(v3, a1);
}

uint64_t sub_1C3C6A9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C6AA2C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA3869E8);
}

uint64_t static Logger.siri.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EA385808, (uint64_t)qword_1EA3869E8, a1);
}

uint64_t sub_1C3C6AA68(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FC6A8);
}

uint64_t static Logger.systemPaper.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FC710, (uint64_t)qword_1EB6FC6A8, a1);
}

uint64_t sub_1C3C6AAB4(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386A00);
}

uint64_t static Logger.test.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385818, (uint64_t)qword_1EA386A00, a1);
}

uint64_t sub_1C3C6AAF0(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB268);
}

uint64_t static Logger.thumbnails.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FBA90, (uint64_t)qword_1EB6FB268, a1);
}

uint64_t sub_1C3C6AB38(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB770);
}

uint64_t static Logger.topoText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FB788, (uint64_t)qword_1EB6FB770, a1);
}

uint64_t sub_1C3C6AB7C(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386A18);
}

uint64_t static Logger.tool.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385820, (uint64_t)qword_1EA386A18, a1);
}

uint64_t sub_1C3C6ABB8(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FB828);
}

uint64_t static Logger.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EB6FB288, (uint64_t)qword_1EB6FB828, a1);
}

uint64_t sub_1C3C6ABF0(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EB6FBE48);
}

uint64_t static Logger.widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(qword_1EB6FBEE0, (uint64_t)qword_1EB6FBE48, a1);
}

uint64_t sub_1C3C6AC30(uint64_t a1)
{
  return sub_1C3C6AC50(a1, qword_1EA386A30);
}

uint64_t sub_1C3C6AC50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C3DB9038();
}

uint64_t static Logger.uiTests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C6ACF4(&qword_1EA385828, (uint64_t)qword_1EA386A30, a1);
}

uint64_t sub_1C3C6ACF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB9048();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1C3C6AD8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v4 = sub_1C3C9D464(0, v1, 0);
    uint64_t v2 = v10;
    uint64_t v5 = a1 + 32;
    do
    {
      v5 += 8;
      uint64_t v4 = ICQueryType.minimumSupportedVersion.getter(v4);
      uint64_t v6 = v4;
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_1C3C9D464(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(void *)(v10 + 8 * v8 + 32) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3C6AE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1C3C741F4(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_1C3C6AECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1C3C74310(a1, a2, a3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static ICQueryType.creationDateRange(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  v10(&v8[*(int *)(v6 + 20)], a2, v9);
  uint64_t v11 = swift_allocBox();
  uint64_t result = sub_1C3C72344((uint64_t)v8, v12, type metadata accessor for ICQueryType.DateRange);
  *a3 = v11 | 0x4000000000000000;
  return result;
}

uint64_t type metadata accessor for ICQueryType.DateRange(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FB858);
}

uint64_t static ICQueryType.modificationDateRange(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v8, a1, v9);
  v10(&v8[*(int *)(v6 + 20)], a2, v9);
  uint64_t v11 = swift_allocBox();
  uint64_t result = sub_1C3C72344((uint64_t)v8, v12, type metadata accessor for ICQueryType.DateRange);
  *a3 = v11 | 0x7000000000000000;
  return result;
}

uint64_t ICQueryType.minimumSupportedVersion.getter(uint64_t a1)
{
  uint64_t v2 = (*v1 >> 59) & 0x1E | (*v1 >> 2) & 1;
  int8x8_t v3 = (int8x8_t)7;
  switch(v2)
  {
    case 1:
      uint64_t result = ICQueryType.minimumSupportedVersion.getter(a1);
      if (result <= 7) {
        return 7;
      }
      return result;
    case 3:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 20:
    case 22:
    case 23:
      return (uint64_t)v3;
    case 4:
    case 9:
    case 15:
      return 8;
    case 5:
    case 6:
    case 7:
    case 19:
      return 9;
    case 21:
      return 15;
    default:
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C3C6AD8C(v5);
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v6 + 16);
      if (!v7)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      if (v7 >= 4)
      {
        uint64_t v8 = v7 & 0x7FFFFFFFFFFFFFFCLL;
        uint64_t v9 = (int64x2_t *)(v6 + 48);
        int64x2_t v10 = vdupq_n_s64(7uLL);
        uint64_t v11 = v7 & 0x7FFFFFFFFFFFFFFCLL;
        int64x2_t v12 = v10;
        do
        {
          int64x2_t v10 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v9[-1], v10), (int8x16_t)v9[-1], (int8x16_t)v10);
          int64x2_t v12 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(*v9, v12), *(int8x16_t *)v9, (int8x16_t)v12);
          v9 += 2;
          v11 -= 4;
        }
        while (v11);
        int8x16_t v13 = vbslq_s8((int8x16_t)vcgtq_s64(v10, v12), (int8x16_t)v10, (int8x16_t)v12);
        uint64_t v14 = vextq_s8(v13, v13, 8uLL).u64[0];
        int8x8_t v3 = vbsl_s8((int8x8_t)vcgtd_s64(v13.i64[0], v14), *(int8x8_t *)v13.i8, (int8x8_t)v14);
        if (v7 == v8) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v8 = 0;
        int8x8_t v3 = (int8x8_t)7;
      }
      unint64_t v15 = v7 - v8;
      uint64_t v16 = (int8x8_t *)(v6 + 8 * v8 + 32);
      do
      {
        int8x8_t v18 = *v16++;
        int8x8_t v17 = v18;
        if (*(void *)&v18 > *(void *)&v3) {
          int8x8_t v3 = v17;
        }
        --v15;
      }
      while (v15);
LABEL_19:
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
  }
}

uint64_t ICQueryType.allowsDeleted.getter()
{
  uint64_t v1 = *v0;
  int v2 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  if (v2)
  {
    if (v2 != 2)
    {
      if (v2 == 10) {
        return *(unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      }
      return 1;
    }
    v1 &= 0xFFFFFFFFFFFFFFBuLL;
  }
  uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 16);
  if (!v4) {
    return 1;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v5 = ICQueryType.allowsDeleted.getter(v5);
    if ((v5 & 1) == 0) {
      break;
    }
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ICQueryType.canBeEdited.getter(uint64_t a1)
{
  uint64_t v2 = *v1;
  int v3 = ((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1;
  if ((v3 - 3) >= 0x15)
  {
    if (v3 && (v2 &= 0xFFFFFFFFFFFFFFBuLL, v3 == 1))
    {
      ICQueryType.canBeEdited.getter(a1);
    }
    else
    {
      uint64_t v5 = *(void *)(*(void *)(v2 + 16) + 16);
      if (v5)
      {
        uint64_t v6 = swift_bridgeObjectRetain();
        uint64_t v7 = 0;
        do
        {
          uint64_t v8 = v7 + 1;
          uint64_t v6 = ICQueryType.canBeEdited.getter(v6);
          uint64_t v7 = v8;
        }
        while (v5 != v8);
        swift_bridgeObjectRelease();
      }
    }
  }
  return 1;
}

uint64_t ICQueryType.predicate.getter()
{
  uint64_t v1 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = &v97[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v97[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *v0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v101 = *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v15 = swift_retain();
      uint64_t v16 = (void *)ICQueryType.predicate.getter(v15);
      id v17 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v16);
      swift_release();

      return (uint64_t)v17;
    case 2uLL:
      uint64_t v18 = *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v101 = MEMORY[0x1E4FBC860];
        uint64_t v20 = sub_1C3DBAE48();
        char v21 = (uint64_t *)(v18 + 32);
        do
        {
          uint64_t v22 = *v21++;
          uint64_t v100 = v22;
          ICQueryType.predicate.getter(v20);
          sub_1C3DBAE18();
          sub_1C3DBAE58();
          sub_1C3DBAE68();
          uint64_t v20 = sub_1C3DBAE28();
          --v19;
        }
        while (v19);
      }
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      int8x16_t v13 = (void *)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v13);
      goto LABEL_11;
    case 3uLL:
      char v24 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      id v17 = (id)sub_1C3DBA648();
      if (v24) {
        return (uint64_t)v17;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1C3DD5940;
      *(void *)(v25 + 32) = sub_1C3DBA648();
      BOOL v26 = self;
      *(void *)(v25 + 40) = objc_msgSend(v26, sel_notPredicateWithSubpredicate_, v17);
      uint64_t v101 = v25;
      sub_1C3DBA038();
      int8x16_t v13 = (void *)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v26, sel_andPredicateWithSubpredicates_, v13);

      goto LABEL_14;
    case 4uLL:
      __int16 v28 = *(_WORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C3DD5130;
      uint64_t v30 = MEMORY[0x1E4FBC148];
      *(void *)(v29 + 56) = MEMORY[0x1E4FBC0F8];
      *(void *)(v29 + 64) = v30;
      *(_WORD *)(v29 + 32) = v28;
      uint64_t v31 = sub_1C3DB9C38();
      uint64_t v33 = v32;
      *(void *)(v29 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v29 + 104) = sub_1C3C4C74C();
      *(void *)(v29 + 72) = v31;
      *(void *)(v29 + 80) = v33;
      return sub_1C3DBA648();
    case 5uLL:
    case 6uLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x14uLL:
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1C3DD3D30;
      uint64_t v35 = sub_1C3DBA158();
      *(void *)(v34 + 56) = sub_1C3C4C8B4(0, &qword_1EB6FBB08);
      *(void *)(v34 + 64) = sub_1C3C6DAFC(&qword_1EB6FBB10, &qword_1EB6FBB08);
      *(void *)(v34 + 32) = v35;
      return sub_1C3DBA648();
    case 7uLL:
      char v36 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      id v17 = (id)sub_1C3DBA648();
      if ((v36 & 1) == 0) {
        goto LABEL_39;
      }
      return (uint64_t)v17;
    case 8uLL:
    case 0xEuLL:
      uint64_t v54 = swift_projectBox();
      sub_1C3C6DBAC(v54, (uint64_t)v6, type metadata accessor for ICQueryType.DateRange);
      unint64_t v55 = (void *)sub_1C3DB8A88();
      uint64_t v56 = (void *)sub_1C3DB8A88();
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1C3DD5130;
      uint64_t v58 = sub_1C3C4C8B4(0, &qword_1EA386A50);
      *(void *)(v57 + 56) = v58;
      uint64_t v59 = sub_1C3C6DAFC(&qword_1EA386A58, &qword_1EA386A50);
      *(void *)(v57 + 32) = v55;
      *(void *)(v57 + 96) = v58;
      *(void *)(v57 + 104) = v59;
      *(void *)(v57 + 64) = v59;
      *(void *)(v57 + 72) = v56;
      id v60 = v55;
      id v61 = v56;
      id v17 = (id)sub_1C3DBA648();

      sub_1C3C6DB4C((uint64_t)v6, type metadata accessor for ICQueryType.DateRange);
      return (uint64_t)v17;
    case 9uLL:
    case 0xFuLL:
      uint64_t v62 = swift_projectBox();
      sub_1C3C6DBAC(v62, (uint64_t)v3, type metadata accessor for ICQueryType.RelativeDateRange);
      sub_1C3C6C9DC(v3, (uint64_t)v6);
      v63 = (void *)sub_1C3DB8A88();
      uint64_t v64 = (void *)sub_1C3DB8A88();
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_1C3DD5130;
      uint64_t v66 = sub_1C3C4C8B4(0, &qword_1EA386A50);
      *(void *)(v65 + 56) = v66;
      uint64_t v67 = sub_1C3C6DAFC(&qword_1EA386A58, &qword_1EA386A50);
      *(void *)(v65 + 32) = v63;
      *(void *)(v65 + 96) = v66;
      *(void *)(v65 + 104) = v67;
      *(void *)(v65 + 64) = v67;
      *(void *)(v65 + 72) = v64;
      id v68 = v63;
      id v69 = v64;
      id v17 = (id)sub_1C3DBA648();

      sub_1C3C6DB4C((uint64_t)v6, type metadata accessor for ICQueryType.DateRange);
      sub_1C3C6DB4C((uint64_t)v3, type metadata accessor for ICQueryType.RelativeDateRange);
      return (uint64_t)v17;
    case 0xAuLL:
      char v37 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1C3DD3D30;
      uint64_t v39 = sub_1C3DBB5B8();
      *(void *)(v38 + 56) = sub_1C3C4C8B4(0, &qword_1EB6FBB08);
      *(void *)(v38 + 64) = sub_1C3C6DAFC(&qword_1EB6FBB10, &qword_1EB6FBB08);
      *(void *)(v38 + 32) = v39;
      id v17 = (id)sub_1C3DBA648();
      if ((v37 & 1) == 0) {
        goto LABEL_39;
      }
      return (uint64_t)v17;
    case 0xBuLL:
    case 0x13uLL:
    case 0x15uLL:
      uint64_t v82 = v7 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v84 = *(void *)(v82 + 16);
      uint64_t v83 = *(void *)(v82 + 24);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = xmmword_1C3DD3D30;
      *(void *)(v85 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v85 + 64) = sub_1C3C4C74C();
      *(void *)(v85 + 32) = v84;
      *(void *)(v85 + 40) = v83;
      swift_bridgeObjectRetain();
      return sub_1C3DBA648();
    case 0xCuLL:
      char v40 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1C3DD3D30;
      uint64_t v42 = sub_1C3DB9C38();
      uint64_t v44 = v43;
      *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v41 + 64) = sub_1C3C4C74C();
      *(void *)(v41 + 32) = v42;
      *(void *)(v41 + 40) = v44;
      id v17 = (id)sub_1C3DBA648();
      if ((v40 & 1) == 0) {
        goto LABEL_39;
      }
      return (uint64_t)v17;
    case 0xDuLL:
      uint64_t v45 = v7 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v47 = *(void *)(v45 + 16);
      uint64_t v46 = *(void *)(v45 + 24);
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1C3DD5130;
      uint64_t v49 = sub_1C3DB9C38();
      uint64_t v51 = v50;
      uint64_t v52 = MEMORY[0x1E4FBB1A0];
      *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v53 = sub_1C3C4C74C();
      *(void *)(v48 + 32) = v49;
      *(void *)(v48 + 40) = v51;
      *(void *)(v48 + 96) = v52;
      *(void *)(v48 + 104) = v53;
      *(void *)(v48 + 64) = v53;
      *(void *)(v48 + 72) = v47;
      *(void *)(v48 + 80) = v46;
      swift_bridgeObjectRetain();
      return sub_1C3DBA648();
    case 0x12uLL:
      int v70 = *(unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v101 = MEMORY[0x1E4FBC860];
      v71 = (char *)objc_msgSend(self, sel_folderDepthLimit);
      unint64_t v72 = (unint64_t)(v71 + 1);
      if (__OFADD__(v71, 1)) {
        goto LABEL_44;
      }
      if ((v72 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
      int v98 = v70;
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      uint64_t v73 = 0;
      long long v99 = xmmword_1C3DD3D30;
      uint64_t v74 = MEMORY[0x1E4FBB1A0];
      while (1)
      {
        sub_1C3C6D888(v73);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = v99;
        uint64_t v76 = sub_1C3DB9C38();
        uint64_t v78 = v77;
        *(void *)(v75 + 56) = v74;
        *(void *)(v75 + 64) = sub_1C3C4C74C();
        *(void *)(v75 + 32) = v76;
        *(void *)(v75 + 40) = v78;
        BOOL v79 = (void *)sub_1C3DBA648();
        swift_bridgeObjectRelease();
        id v80 = v79;
        MEMORY[0x1C877B4F0]();
        if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C3DBA068();
        }
        sub_1C3DBA0C8();
        sub_1C3DBA038();

        if (v72 == v73) {
          break;
        }
        if (__OFADD__(v73++, 1))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          JUMPOUT(0x1C3C6C924);
        }
      }
      uint64_t v94 = (void *)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
      uint64_t v95 = self;
      id v17 = objc_msgSend(v95, sel_orPredicateWithSubpredicates_, v94);

      if ((v98 & 1) == 0)
      {
        id v96 = objc_msgSend(v95, sel_notPredicateWithSubpredicate_, v17);

        return (uint64_t)v96;
      }
      return (uint64_t)v17;
    case 0x16uLL:
      BOOL v86 = self;
      uint64_t v87 = (void *)sub_1C3DB9BF8();
      id v88 = objc_msgSend(v86, sel_standardizedHashtagRepresentationForDisplayText_, v87);

      uint64_t v89 = sub_1C3DB9C38();
      uint64_t v91 = v90;

      id v17 = sub_1C3C6D638(v89, v91);
      swift_bridgeObjectRelease();
      return (uint64_t)v17;
    case 0x17uLL:
      char v92 = *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      id v17 = sub_1C3C6D638(0, 0);
      if (v92) {
        return (uint64_t)v17;
      }
LABEL_39:
      id v93 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v17);

      return (uint64_t)v93;
    default:
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v101 = MEMORY[0x1E4FBC860];
        uint64_t v10 = sub_1C3DBAE48();
        uint64_t v11 = (uint64_t *)(v8 + 32);
        do
        {
          uint64_t v12 = *v11++;
          uint64_t v100 = v12;
          ICQueryType.predicate.getter(v10);
          sub_1C3DBAE18();
          sub_1C3DBAE58();
          sub_1C3DBAE68();
          uint64_t v10 = sub_1C3DBAE28();
          --v9;
        }
        while (v9);
      }
      sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
      int8x16_t v13 = (void *)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);
LABEL_11:
      id v23 = v14;
LABEL_14:

      return (uint64_t)v23;
  }
}

uint64_t type metadata accessor for ICQueryType.RelativeDateRange(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FB848);
}

uint64_t sub_1C3C6C9A4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3C6C9DC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386BA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v89 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB8C88();
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  MEMORY[0x1F4188790](v6);
  long long v99 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8C78();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v88 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v95 = (char *)&v84 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v84 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  id v93 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v85 = (char *)&v84 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v87 = (char *)&v84 - v22;
  MEMORY[0x1F4188790](v21);
  char v24 = (char *)&v84 - v23;
  uint64_t v25 = sub_1C3DB8AF8();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v90 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  char v92 = (char *)&v84 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  unint64_t v102 = (char *)&v84 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  BOOL v86 = (char *)&v84 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v104 = (char *)&v84 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v38 = (char *)&v84 - v37;
  uint64_t v39 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  sub_1C3C376DC((uint64_t)&a1[*(int *)(v39 + 28)], (uint64_t)v24);
  id v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  unsigned int v40 = v96(v24, 1, v25);
  uint64_t v100 = v26;
  if (v40 == 1)
  {
    sub_1C3DB8AE8();
    sub_1C3C2A448((uint64_t)v24, &qword_1EB6FB1B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v38, v24, v25);
  }
  uint64_t v41 = *MEMORY[0x1E4F27BF0];
  uint64_t v103 = v9;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v42(v15, v41, v8);
  uint64_t v101 = v38;
  sub_1C3DB89D8();
  uint64_t v43 = *a1;
  uint64_t v44 = (unsigned int *)MEMORY[0x1E4F27C10];
  uint64_t v94 = a2;
  uint64_t v91 = v42;
  switch(v43)
  {
    case 1:
      uint64_t v89 = *(char **)(v103 + 8);
      ((void (*)(char *, uint64_t))v89)(v15, v8);
      v42(v15, v41, v8);
      uint64_t v47 = v99;
      sub_1C3DB8C68();
      uint64_t v48 = v95;
      v42(v95, v41, v8);
      uint64_t v49 = (uint64_t)v85;
      sub_1C3DB8C58();
      ((void (*)(char *, uint64_t))v89)(v48, v8);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v47, v98);
      uint64_t v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v96;
      if (v96((char *)v49, 1, v25) == 1)
      {
        sub_1C3C2A448(v49, &qword_1EB6FB1B8);
        uint64_t v51 = v100;
        uint64_t v52 = (uint64_t)v87;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v87, 1, 1, v25);
LABEL_15:
        unint64_t v55 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
        uint64_t v56 = v86;
        uint64_t v57 = v104;
        v55(v86, v104, v25);
        sub_1C3C2A448(v52, &qword_1EB6FB1B8);
        goto LABEL_17;
      }
      uint64_t v52 = (uint64_t)v87;
      sub_1C3DB89D8();
      uint64_t v53 = v49;
      uint64_t v51 = v100;
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v54(v53, v25);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v25);
      if (v50(v52, 1, v25) == 1) {
        goto LABEL_15;
      }
      uint64_t v58 = v104;
      v54((uint64_t)v104, v25);
      uint64_t v57 = v58;
      unint64_t v55 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
      uint64_t v56 = v86;
      v55(v86, (char *)v52, v25);
LABEL_17:
      v55(v57, v56, v25);
      uint64_t v45 = 1;
      uint64_t v46 = v100;
LABEL_25:
      v63 = v99;
      uint64_t v64 = v101;
      sub_1C3DB8C68();
      if (__OFSUB__(0, v45))
      {
        __break(1u);
        JUMPOUT(0x1C3C6D604);
      }
      uint64_t v65 = (uint64_t)v93;
      sub_1C3DB8C58();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v98);
      uint64_t v66 = v92;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v92, v64, v25);
      if (v96((char *)v65, 1, v25) == 1)
      {
        uint64_t v67 = v25;
        long long v99 = *(char **)(v46 + 32);
        ((void (*)(char *, char *, uint64_t))v99)(v102, v66, v25);
        sub_1C3C2A448(v65, &qword_1EB6FB1B8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v66, v25);
        uint64_t v67 = v25;
        long long v99 = *(char **)(v46 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v99)(v102, v65, v25);
      }
      id v68 = v95;
      v91(v95, *MEMORY[0x1E4F27C10], v8);
      sub_1C3C72158(&qword_1EA386BA8, MEMORY[0x1E4F27C88]);
      char v69 = sub_1C3DB9BE8();
      int v70 = *(void (**)(char *, uint64_t))(v103 + 8);
      v70(v68, v8);
      if (v69)
      {
        v70(v15, v8);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v64, v67);
        v71 = v102;
        unint64_t v72 = (void (*)(uint64_t, char *, uint64_t))v99;
      }
      else
      {
        uint64_t v73 = v90;
        uint64_t v74 = v102;
        sub_1C3DB89B8();
        uint64_t v75 = *(void (**)(char *, uint64_t))(v46 + 8);
        v75(v74, v67);
        uint64_t v76 = v8;
        v71 = v74;
        v70(v15, v76);
        v75(v101, v67);
        unint64_t v72 = (void (*)(uint64_t, char *, uint64_t))v99;
        ((void (*)(char *, char *, uint64_t))v99)(v74, v73, v67);
      }
      uint64_t v77 = v94;
      v72(v94, v71, v67);
      uint64_t v78 = type metadata accessor for ICQueryType.DateRange(0);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v72)(v77 + *(int *)(v78 + 20), v104, v67);
    case 2:
      (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v8);
      v42(v15, v41, v8);
      uint64_t v45 = 7;
      uint64_t v46 = v100;
      goto LABEL_25;
    case 3:
      (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v8);
      v42(v15, v41, v8);
      uint64_t v45 = 30;
      uint64_t v46 = v100;
      goto LABEL_25;
    case 4:
      (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v8);
      v42(v15, *MEMORY[0x1E4F27C30], v8);
      uint64_t v45 = 3;
      uint64_t v46 = v100;
      goto LABEL_25;
    case 5:
      (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v8);
      v42(v15, *MEMORY[0x1E4F27C30], v8);
      uint64_t v45 = 12;
      uint64_t v46 = v100;
      goto LABEL_25;
    case 6:
      switch(a1[1])
      {
        case 1u:
          goto LABEL_21;
        case 2u:
          uint64_t v44 = (unsigned int *)MEMORY[0x1E4F27BC0];
          goto LABEL_20;
        case 3u:
          uint64_t v44 = (unsigned int *)MEMORY[0x1E4F27C30];
          goto LABEL_20;
        case 4u:
          uint64_t v44 = (unsigned int *)MEMORY[0x1E4F27C20];
          goto LABEL_20;
        case 5u:
          uint64_t v80 = v103;
          char v81 = v89;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v89, 1, 1, v8);
          id v61 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
          uint64_t v82 = v88;
          v61(v88, v15, v8);
          uint64_t v83 = (uint64_t)v81;
          uint64_t v62 = v82;
          sub_1C3C2A448(v83, &qword_1EA386BA0);
          goto LABEL_22;
        default:
LABEL_20:
          uint64_t v41 = *v44;
LABEL_21:
          uint64_t v59 = v89;
          v42(v89, v41, v8);
          uint64_t v60 = v103;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v59, 0, 1, v8);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v8);
          id v61 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
          uint64_t v62 = v88;
          v61(v88, v59, v8);
LABEL_22:
          uint64_t v46 = v100;
          v61(v15, v62, v8);
          if (a1[16]) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = *((void *)a1 + 1);
          }
          break;
      }
      goto LABEL_25;
    default:
      (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v8);
      v42(v15, v41, v8);
      uint64_t v45 = 0;
      uint64_t v46 = v100;
      goto LABEL_25;
  }
}

id sub_1C3C6D638(uint64_t a1, uint64_t a2)
{
  sub_1C3DBAC68();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  *(void *)(inited + 32) = sub_1C3DB9C38();
  *(void *)(inited + 40) = v5;
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t inited = (uint64_t)sub_1C3D8288C((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
  }
  sub_1C3D7886C(inited);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v6, v7);

  return v8;
}

uint64_t sub_1C3C6D888(uint64_t result)
{
  if (result == 1)
  {
    sub_1C3DBAC68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    goto LABEL_5;
  }
  if (!result)
  {
    sub_1C3DBAC68();
    sub_1C3DB9D68();
LABEL_5:
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    return 0;
  }
  if (!__OFSUB__(result, 1))
  {
    MEMORY[0x1C877B350](0x2E746E65726170, 0xE700000000000000, result - 1);
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DBAC68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C6DAFC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3C4C8B4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C6DB4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C3C6DBAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3C6DC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = *v5;
  switch(((unint64_t)*v5 >> 59) & 0x1E | (*v5 >> 2) & 1)
  {
    case 0uLL:
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C3C6AE68(v12, a1, a2, a3, a4);
      *(void *)(v13 + 16) = result;
      *a5 = v13;
      return result;
    case 1uLL:
      uint64_t v15 = swift_allocObject();
      swift_retain();
      sub_1C3C6DC14((void *)(v15 + 16), a1, a2, a3, a4);
      uint64_t result = swift_release();
      uint64_t v16 = v15 | 4;
      goto LABEL_5;
    case 2uLL:
      uint64_t v17 = *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v18 = swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C3C741F4(v17, a1, a2, a3, a4);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v18 + 16) = v19;
      uint64_t v16 = v18 | 0x1000000000000000;
LABEL_5:
      *a5 = v16;
      return result;
    case 0x16uLL:
      BOOL v20 = *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == a1 && *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x18) == a2;
      if (!v20 && (sub_1C3DBB3B8() & 1) == 0) {
        goto LABEL_15;
      }
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = a3;
      *(void *)(v21 + 24) = a4;
      *a5 = v21 | 0xB000000000000000;
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
LABEL_15:
      *a5 = v7;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1C3C6DEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *v3;
  switch(((unint64_t)*v3 >> 59) & 0x1E | (*v3 >> 2) & 1)
  {
    case 0uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t result = (uint64_t)sub_1C3C6AECC(v8, a1, a2);
      *(void *)(v9 + 16) = result;
      *a3 = v9;
      return result;
    case 1uLL:
      swift_retain();
      sub_1C3C6DEF8(&v17, a1, a2);
      uint64_t result = swift_release();
      uint64_t v11 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v11;
        uint64_t v15 = result | 4;
        goto LABEL_16;
      }
      *a3 = v17;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v13 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1C3C74310(v12, a1, a2);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v13 + 16) = v14;
      uint64_t v15 = v13 | 0x1000000000000000;
      goto LABEL_16;
    case 0x16uLL:
      uint64_t result = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (result != a1 || *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != a2)
      {
        uint64_t result = sub_1C3DBB3B8();
        if ((result & 1) == 0) {
          goto LABEL_12;
        }
      }
      uint64_t v15 = 0xF000000000000007;
LABEL_16:
      *a3 = v15;
      break;
    default:
LABEL_12:
      *a3 = v5;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t static ICQueryType.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (unsigned __int8 *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (unsigned __int8 *)&v49 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (unsigned __int8 *)&v49 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (unsigned __int8 *)&v49 - v14;
  uint64_t v16 = type metadata accessor for ICQueryType.DateRange(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v49 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = *a1;
  unint64_t v29 = *a2;
  switch(((unint64_t)*a1 >> 59) & 0x1E | (*a1 >> 2) & 1)
  {
    case 1uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 1) {
        goto LABEL_61;
      }
      uint64_t v33 = *(void *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v49 = *(void *)((v29 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v50 = v33;
      swift_retain();
      swift_retain();
      char v32 = static ICQueryType.== infix(_:_:)(&v50, &v49);
      goto LABEL_20;
    case 2uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 2) {
        goto LABEL_61;
      }
      uint64_t v34 = *(void *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v35 = *(void *)((v29 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      swift_retain();
      swift_retain();
      LOBYTE(v34) = sub_1C3C6ED2C(v34, v35);
      swift_release();
      swift_release();
      return v34 & 1;
    case 3uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 3) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 4uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 4) {
        goto LABEL_61;
      }
      char v32 = *(unsigned __int16 *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == *(unsigned __int16 *)((v29 & 0xFFFFFFFFFFFFFFBLL)
                                                                                             + 0x10);
      return v32 & 1;
    case 5uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 5) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 6uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 6) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 7uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 7) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 8uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 8) {
        goto LABEL_61;
      }
      uint64_t v44 = swift_projectBox();
      uint64_t v45 = swift_projectBox();
      sub_1C3C6DBAC(v44, (uint64_t)v27, type metadata accessor for ICQueryType.DateRange);
      sub_1C3C6DBAC(v45, (uint64_t)v25, type metadata accessor for ICQueryType.DateRange);
      swift_retain();
      swift_retain();
      if (sub_1C3DB8AB8() & 1) != 0 && (sub_1C3DB8AB8())
      {
        sub_1C3C6DB4C((uint64_t)v25, type metadata accessor for ICQueryType.DateRange);
        uint64_t v41 = (uint64_t)v27;
        goto LABEL_49;
      }
      sub_1C3C6DB4C((uint64_t)v25, type metadata accessor for ICQueryType.DateRange);
      uint64_t v48 = (uint64_t)v27;
      goto LABEL_65;
    case 9uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 9) {
        goto LABEL_61;
      }
      uint64_t v37 = swift_projectBox();
      uint64_t v38 = swift_projectBox();
      sub_1C3C6DBAC(v37, (uint64_t)v15, type metadata accessor for ICQueryType.RelativeDateRange);
      sub_1C3C6DBAC(v38, (uint64_t)v13, type metadata accessor for ICQueryType.RelativeDateRange);
      swift_retain();
      swift_retain();
      char v32 = _s11NotesShared11ICQueryTypeO17RelativeDateRangeV2eeoiySbAE_AEtFZ_0(v15, v13);
      sub_1C3C6DB4C((uint64_t)v13, type metadata accessor for ICQueryType.RelativeDateRange);
      sub_1C3C6DB4C((uint64_t)v15, type metadata accessor for ICQueryType.RelativeDateRange);
      goto LABEL_20;
    case 0xAuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0xA) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0xBuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0xB) {
        goto LABEL_53;
      }
      goto LABEL_61;
    case 0xCuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0xC) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0xDuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0xD) {
        goto LABEL_53;
      }
      goto LABEL_61;
    case 0xEuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 0xE) {
        goto LABEL_61;
      }
      uint64_t v39 = swift_projectBox();
      uint64_t v40 = swift_projectBox();
      sub_1C3C6DBAC(v39, (uint64_t)v22, type metadata accessor for ICQueryType.DateRange);
      sub_1C3C6DBAC(v40, (uint64_t)v19, type metadata accessor for ICQueryType.DateRange);
      swift_retain();
      swift_retain();
      if (sub_1C3DB8AB8() & 1) != 0 && (sub_1C3DB8AB8())
      {
        sub_1C3C6DB4C((uint64_t)v19, type metadata accessor for ICQueryType.DateRange);
        uint64_t v41 = (uint64_t)v22;
LABEL_49:
        sub_1C3C6DB4C(v41, type metadata accessor for ICQueryType.DateRange);
        swift_release();
        swift_release();
        char v32 = 1;
      }
      else
      {
        sub_1C3C6DB4C((uint64_t)v19, type metadata accessor for ICQueryType.DateRange);
        uint64_t v48 = (uint64_t)v22;
LABEL_65:
        sub_1C3C6DB4C(v48, type metadata accessor for ICQueryType.DateRange);
        swift_release();
        swift_release();
        char v32 = 0;
      }
      return v32 & 1;
    case 0xFuLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 0xF) {
        goto LABEL_61;
      }
      uint64_t v42 = swift_projectBox();
      uint64_t v43 = swift_projectBox();
      sub_1C3C6DBAC(v42, (uint64_t)v10, type metadata accessor for ICQueryType.RelativeDateRange);
      sub_1C3C6DBAC(v43, (uint64_t)v7, type metadata accessor for ICQueryType.RelativeDateRange);
      swift_retain();
      swift_retain();
      char v32 = _s11NotesShared11ICQueryTypeO17RelativeDateRangeV2eeoiySbAE_AEtFZ_0(v10, v7);
      sub_1C3C6DB4C((uint64_t)v7, type metadata accessor for ICQueryType.RelativeDateRange);
      sub_1C3C6DB4C((uint64_t)v10, type metadata accessor for ICQueryType.RelativeDateRange);
      goto LABEL_20;
    case 0x10uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x10) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0x11uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x11) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0x12uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x12) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0x13uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x13) {
        goto LABEL_53;
      }
      goto LABEL_61;
    case 0x14uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x14) {
        goto LABEL_60;
      }
      goto LABEL_61;
    case 0x15uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) == 0x15) {
        goto LABEL_53;
      }
      goto LABEL_61;
    case 0x16uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 0x16) {
        goto LABEL_61;
      }
LABEL_53:
      uint64_t v46 = v28 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v47 = v29 & 0xFFFFFFFFFFFFFFBLL;
      if (*(void *)(v46 + 16) == *(void *)(v47 + 16) && *(void *)(v46 + 24) == *(void *)(v47 + 24))
      {
        char v32 = 1;
        return v32 & 1;
      }
      else
      {
        return sub_1C3DBB3B8();
      }
    case 0x17uLL:
      if (((v29 >> 59) & 0x1E | (v29 >> 2) & 1) != 0x17) {
        goto LABEL_61;
      }
LABEL_60:
      char v32 = *(unsigned char *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10) ^ *(unsigned char *)((v29 & 0xFFFFFFFFFFFFFFBLL) + 0x10) ^ 1;
      return v32 & 1;
    default:
      if ((v29 >> 59) & 0x1E | (v29 >> 2) & 1)
      {
LABEL_61:
        char v32 = 0;
      }
      else
      {
        uint64_t v30 = *(void *)(v28 + 16);
        uint64_t v31 = *(void *)(v29 + 16);
        swift_retain();
        swift_retain();
        char v32 = sub_1C3C6ED2C(v30, v31);
LABEL_20:
        swift_release();
        swift_release();
      }
      return v32 & 1;
  }
}

uint64_t sub_1C3C6EA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8D98();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      char v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_1C3C72158(&qword_1EA386B88, MEMORY[0x1E4F596E8]);
        char v23 = sub_1C3DB9BE8();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1C3C6ECA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (uint64_t i = (void *)(a2 + 40); ; i += 4)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1C3DBB3B8() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C3C6ED2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v9 = 1;
    }
    else
    {
      uint64_t v3 = (uint64_t *)(a1 + 32);
      uint64_t v4 = (uint64_t *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v7 = *v3++;
        uint64_t v6 = v7;
        uint64_t v8 = *v4++;
        uint64_t v13 = v8;
        uint64_t v14 = v6;
        char v9 = static ICQueryType.== infix(_:_:)(&v14, &v13);
        BOOL v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1C3C6EDBC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C3DBB3B8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    char v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1C3DBB3B8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t static ICQueryType.DateRange.== infix(_:_:)()
{
  if ((sub_1C3DB8AB8() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ICQueryType.DateRange(0);
  return sub_1C3DB8AB8();
}

uint64_t sub_1C3C6EEEC()
{
  if (*v0) {
    return 0x657461446F74;
  }
  else {
    return 0x657461446D6F7266;
  }
}

uint64_t sub_1C3C6EF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3C74464(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3C6EF4C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C3C6EF58(uint64_t a1)
{
  unint64_t v2 = sub_1C3C72104();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C6EF94(uint64_t a1)
{
  unint64_t v2 = sub_1C3C72104();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICQueryType.DateRange.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C72104();
  sub_1C3DBB6D8();
  v8[15] = 0;
  sub_1C3DB8AF8();
  sub_1C3C72158(&qword_1EA386488, MEMORY[0x1E4F27928]);
  sub_1C3DBB1E8();
  if (!v1)
  {
    type metadata accessor for ICQueryType.DateRange(0);
    v8[14] = 1;
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ICQueryType.DateRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v21 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A70);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v26 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ICQueryType.DateRange(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C72104();
  sub_1C3DBB6B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v21 = v13;
  uint64_t v22 = v15;
  uint64_t v16 = v27;
  char v30 = 0;
  sub_1C3C72158(&qword_1EA3864B0, MEMORY[0x1E4F27928]);
  uint64_t v17 = v24;
  uint64_t v18 = v25;
  sub_1C3DBB108();
  uint64_t v24 = *(char **)(v16 + 32);
  ((void (*)(char *, char *, uint64_t))v24)(v22, v17, v28);
  char v29 = 1;
  sub_1C3DBB108();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v18);
  uint64_t v19 = (uint64_t)v22;
  ((void (*)(char *, char *, uint64_t))v24)(&v22[*(int *)(v21 + 20)], v7, v28);
  sub_1C3C6DBAC(v19, v23, type metadata accessor for ICQueryType.DateRange);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1C3C6DB4C(v19, type metadata accessor for ICQueryType.DateRange);
}

uint64_t sub_1C3C6F53C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ICQueryType.DateRange.init(from:)(a1, a2);
}

uint64_t sub_1C3C6F554(void *a1)
{
  return ICQueryType.DateRange.encode(to:)(a1);
}

uint64_t sub_1C3C6F56C()
{
  if ((sub_1C3DB8AB8() & 1) == 0) {
    return 0;
  }
  return sub_1C3DB8AB8();
}

NotesShared::ICQueryType::RelativeDateRangeType_optional __swiftcall ICQueryType.RelativeDateRangeType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (NotesShared::ICQueryType::RelativeDateRangeType_optional)rawValue;
}

uint64_t ICQueryType.RelativeDateRangeType.rawValue.getter()
{
  return *v0;
}

NotesShared::ICQueryType::RelativeDateRangeType_optional sub_1C3C6F5F8(Swift::Int *a1)
{
  return ICQueryType.RelativeDateRangeType.init(rawValue:)(*a1);
}

void sub_1C3C6F600(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C3C6F60C()
{
  return sub_1C3DB9FC8();
}

uint64_t sub_1C3C6F66C()
{
  return sub_1C3DB9F68();
}

NotesShared::ICQueryType::RelativeDateRangeUnit_optional __swiftcall ICQueryType.RelativeDateRangeUnit.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (NotesShared::ICQueryType::RelativeDateRangeUnit_optional)rawValue;
}

NotesShared::ICQueryType::RelativeDateRangeUnit_optional sub_1C3C6F6D0(Swift::Int *a1)
{
  return ICQueryType.RelativeDateRangeUnit.init(rawValue:)(*a1);
}

uint64_t sub_1C3C6F6D8()
{
  return sub_1C3DB9FC8();
}

uint64_t sub_1C3C6F738()
{
  return sub_1C3DB9F68();
}

uint64_t sub_1C3C6F788()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E556D6F74737563;
      break;
    case 2:
      uint64_t result = 0x6D416D6F74737563;
      break;
    case 3:
      uint64_t result = 0x636E657265666572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3C6F828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3C74550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3C6F850(uint64_t a1)
{
  unint64_t v2 = sub_1C3C721A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C6F88C(uint64_t a1)
{
  unint64_t v2 = sub_1C3C721A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICQueryType.RelativeDateRange.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C721A0();
  sub_1C3DBB6D8();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1C3C721F4();
  sub_1C3DBB1E8();
  if (!v2)
  {
    v10[13] = v3[1];
    v10[12] = 1;
    sub_1C3C72248();
    sub_1C3DBB198();
    v10[11] = 2;
    sub_1C3DBB188();
    type metadata accessor for ICQueryType.RelativeDateRange(0);
    v10[10] = 3;
    sub_1C3DB8AF8();
    sub_1C3C72158(&qword_1EA386488, MEMORY[0x1E4F27928]);
    sub_1C3DBB198();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ICQueryType.RelativeDateRange.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386A98);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C721A0();
  sub_1C3DBB6B8();
  if (!v2)
  {
    uint64_t v18 = v9;
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    uint64_t v14 = (uint64_t)v6;
    char v26 = 0;
    sub_1C3C7229C();
    uint64_t v15 = v21;
    sub_1C3DBB108();
    *uint64_t v11 = v27;
    char v24 = 1;
    sub_1C3C722F0();
    sub_1C3DBB0A8();
    v11[1] = v25;
    char v23 = 2;
    *((void *)v11 + 1) = sub_1C3DBB098();
    v11[16] = v17 & 1;
    sub_1C3DB8AF8();
    char v22 = 3;
    sub_1C3C72158(&qword_1EA3864B0, MEMORY[0x1E4F27928]);
    sub_1C3DBB0A8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v15);
    sub_1C3C49904(v14, (uint64_t)&v11[*(int *)(v18 + 28)]);
    sub_1C3C72344((uint64_t)v11, v13, type metadata accessor for ICQueryType.RelativeDateRange);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1C3C6FE58(char a1)
{
  unint64_t result = 6581857;
  switch(a1)
  {
    case 1:
      unint64_t result = 7630702;
      break;
    case 2:
      unint64_t result = 29295;
      break;
    case 3:
      unint64_t result = 0x656D686361747461;
      break;
    case 4:
    case 8:
    case 17:
    case 20:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x73696C6B63656863;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0x646574656C6564;
      break;
    case 11:
      unint64_t result = 0x7265646C6F66;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    case 13:
      unint64_t result = 0x6E6F69746E656DLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD000000000000015;
      break;
    case 16:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 18:
      unint64_t result = 0x64656E6E6970;
      break;
    case 19:
      unint64_t result = 0x646572616873;
      break;
    case 21:
      unint64_t result = 0x61506D6574737973;
      break;
    case 22:
      unint64_t result = 6775156;
      break;
    case 23:
      unint64_t result = 0x646567676174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3C700D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ICQueryType.RelativeDateRange.init(from:)(a1, a2);
}

uint64_t sub_1C3C700F0(void *a1)
{
  return ICQueryType.RelativeDateRange.encode(to:)(a1);
}

unint64_t sub_1C3C7010C()
{
  return sub_1C3C6FE58(*v0);
}

uint64_t sub_1C3C70114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3C74744(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3C7013C(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1C3C70148(uint64_t a1)
{
  unint64_t v2 = sub_1C3C723AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C70184(uint64_t a1)
{
  unint64_t v2 = sub_1C3C723AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICQueryType.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v124 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AB0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v118 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v114 = (uint64_t)&v108 - v6;
  uint64_t v119 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  uint64_t v116 = *(void *)(v119 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v119);
  uint64_t v117 = (uint64_t)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v113 = (uint64_t)&v108 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AB8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v115 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v121 = (uint64_t)&v108 - v13;
  uint64_t v122 = type metadata accessor for ICQueryType.DateRange(0);
  uint64_t v120 = *(void *)(v122 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v122);
  uint64_t v16 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v108 - v17;
  uint64_t v19 = sub_1C3DBAD68();
  uint64_t v123 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AC0);
  uint64_t v22 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  char v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  v127 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1C3C723AC();
  uint64_t v26 = v126;
  sub_1C3DBB6B8();
  if (!v26)
  {
    v110 = v16;
    uint64_t v111 = v18;
    uint64_t v112 = v21;
    uint64_t v126 = v22;
    char v27 = v124;
    unint64_t v28 = *(void *)(sub_1C3DBB118() + 16);
    swift_bridgeObjectRelease();
    if (v28 >= 2)
    {
      uint64_t v29 = v125;
      sub_1C3DBB068();
      char v30 = v112;
      sub_1C3DBAD48();
      uint64_t v31 = sub_1C3DBAD78();
      swift_allocError();
      uint64_t v33 = v32;
      uint64_t v34 = v123;
      (*(void (**)(uint64_t, char *, uint64_t))(v123 + 16))(v32, v30, v19);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBA78], v31);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v19);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v24, v29);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AD0);
    char v128 = 0;
    sub_1C3C72524(&qword_1EA386AD8, (void (*)(void))sub_1C3C72400);
    sub_1C3DBB0A8();
    unint64_t v109 = v24;
    uint64_t v36 = v129;
    if (v129)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v36;
      *char v27 = v37;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
    }
    char v128 = 1;
    sub_1C3C72400();
    sub_1C3DBB0A8();
    uint64_t v38 = v129;
    if ((~v129 & 0xF000000000000007) != 0)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v38;
      *char v27 = v41 | 4;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
    }
    char v128 = 2;
    sub_1C3DBB0A8();
    uint64_t v39 = v129;
    if (v129)
    {
      (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *char v27 = v40 | 0x1000000000000000;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
    }
    uint64_t v129 = 3;
    char v42 = sub_1C3DBB088();
    if (v42 == 2)
    {
      LOBYTE(v129) = 4;
      uint64_t v43 = sub_1C3DBB0B8();
      __int16 v47 = v43;
      if ((v43 & 0x10000) == 0)
      {
        (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
        uint64_t v48 = swift_allocObject();
        *(_WORD *)(v48 + 16) = v47;
        *char v27 = v48 | 0x2000000000000000;
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
      }
      LOBYTE(v129) = 5;
      char v49 = sub_1C3DBB088();
      if (v49 == 2)
      {
        LOBYTE(v129) = 6;
        char v50 = sub_1C3DBB088();
        if (v50 != 2)
        {
          char v54 = v50 & 1;
          (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
          uint64_t v55 = swift_allocObject();
          *(unsigned char *)(v55 + 16) = v54;
          *char v27 = v55 | 0x3000000000000000;
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
        }
        LOBYTE(v129) = 7;
        char v51 = sub_1C3DBB088();
        if (v51 == 2)
        {
          LOBYTE(v129) = 8;
          sub_1C3C72158(&qword_1EA386AE8, (void (*)(uint64_t))type metadata accessor for ICQueryType.DateRange);
          sub_1C3DBB0A8();
          uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
          if (v52(v121, 1, v122) != 1)
          {
            (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
            uint64_t v57 = (uint64_t)v111;
            sub_1C3C72344(v121, (uint64_t)v111, type metadata accessor for ICQueryType.DateRange);
            uint64_t v58 = swift_allocBox();
            sub_1C3C72344(v57, v59, type metadata accessor for ICQueryType.DateRange);
            *char v27 = v58 | 0x4000000000000000;
            return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
          }
          sub_1C3C2A448(v121, &qword_1EA386AB8);
          LOBYTE(v129) = 9;
          sub_1C3C72158(&qword_1EA386AF0, (void (*)(uint64_t))type metadata accessor for ICQueryType.RelativeDateRange);
          sub_1C3DBB0A8();
          uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
          v116 += 48;
          if (v60(v114, 1, v119) == 1)
          {
            sub_1C3C2A448(v114, &qword_1EA386AB0);
            LOBYTE(v129) = 10;
            char v61 = sub_1C3DBB088();
            if (v61 != 2)
            {
              char v71 = v61 & 1;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(unsigned char *)(v64 + 16) = v71;
              unint64_t v65 = 0x5000000000000000;
              goto LABEL_35;
            }
            LOBYTE(v129) = 11;
            uint64_t v121 = sub_1C3DBB078();
            uint64_t v63 = v62;
            if (v62)
            {
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(void *)(v64 + 16) = v121;
              *(void *)(v64 + 24) = v63;
              unint64_t v65 = 0x5000000000000004;
LABEL_35:
              unint64_t v70 = v64 | v65;
              goto LABEL_33;
            }
            LOBYTE(v129) = 12;
            uint64_t v121 = sub_1C3DBB078();
            uint64_t v73 = v72;
            if (v72)
            {
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(void *)(v64 + 16) = v121;
              *(void *)(v64 + 24) = v73;
              unint64_t v65 = 0xA000000000000004;
              goto LABEL_35;
            }
            LOBYTE(v129) = 17;
            char v74 = sub_1C3DBB088();
            if (v74 != 2)
            {
              char v79 = v74 & 1;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v80 = swift_allocObject();
              *(unsigned char *)(v80 + 16) = v79;
              unint64_t v70 = v80 | 0x8000000000000000;
              goto LABEL_33;
            }
            LOBYTE(v129) = 18;
            char v75 = sub_1C3DBB088();
            if (v75 != 2)
            {
              char v81 = v75 & 1;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(unsigned char *)(v64 + 16) = v81;
              unint64_t v65 = 0x8000000000000004;
              goto LABEL_35;
            }
            LOBYTE(v129) = 19;
            char v76 = sub_1C3DBB088();
            if (v76 != 2)
            {
              char v82 = v76 & 1;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(unsigned char *)(v64 + 16) = v82;
              unint64_t v65 = 0x9000000000000000;
              goto LABEL_35;
            }
            LOBYTE(v129) = 20;
            uint64_t v121 = sub_1C3DBB078();
            uint64_t v78 = v77;
            if (v77)
            {
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(void *)(v64 + 16) = v121;
              *(void *)(v64 + 24) = v78;
              unint64_t v65 = 0x9000000000000004;
              goto LABEL_35;
            }
            LOBYTE(v129) = 13;
            char v83 = sub_1C3DBB088();
            if (v83 != 2)
            {
              char v86 = v83 & 1;
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v87 = swift_allocObject();
              *(unsigned char *)(v87 + 16) = v86;
              unint64_t v70 = v87 | 0x6000000000000000;
              goto LABEL_33;
            }
            LOBYTE(v129) = 14;
            uint64_t v121 = sub_1C3DBB078();
            uint64_t v85 = v84;
            if (v84)
            {
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v64 = swift_allocObject();
              *(void *)(v64 + 16) = v121;
              *(void *)(v64 + 24) = v85;
              unint64_t v65 = 0x6000000000000004;
              goto LABEL_35;
            }
            LOBYTE(v129) = 15;
            sub_1C3DBB0A8();
            if (v52(v115, 1, v122) != 1)
            {
              (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
              uint64_t v92 = (uint64_t)v110;
              sub_1C3C72344(v115, (uint64_t)v110, type metadata accessor for ICQueryType.DateRange);
              uint64_t v93 = swift_allocBox();
              sub_1C3C72344(v92, v94, type metadata accessor for ICQueryType.DateRange);
              unint64_t v70 = v93 | 0x7000000000000000;
              goto LABEL_33;
            }
            sub_1C3C2A448(v115, &qword_1EA386AB8);
            LOBYTE(v129) = 16;
            sub_1C3DBB0A8();
            if (v60(v118, 1, v119) == 1)
            {
              sub_1C3C2A448(v118, &qword_1EA386AB0);
              LOBYTE(v129) = 22;
              uint64_t v88 = sub_1C3DBB078();
              uint64_t v90 = v89;
              if (v89)
              {
                uint64_t v91 = v88;
                (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
                uint64_t v45 = swift_allocObject();
                *(void *)(v45 + 16) = v91;
                *(void *)(v45 + 24) = v90;
                unint64_t v46 = 0xB000000000000000;
              }
              else
              {
                LOBYTE(v129) = 23;
                char v97 = sub_1C3DBB088();
                if (v97 == 2)
                {
                  LOBYTE(v129) = 21;
                  char v98 = sub_1C3DBB088();
                  if (v98 == 2)
                  {
                    uint64_t v99 = v125;
                    uint64_t v100 = v109;
                    sub_1C3DBB068();
                    uint64_t v101 = v112;
                    sub_1C3DBAD48();
                    uint64_t v102 = sub_1C3DBAD78();
                    swift_allocError();
                    uint64_t v104 = v103;
                    uint64_t v105 = v123;
                    (*(void (**)(uint64_t, char *, uint64_t))(v123 + 16))(v103, v101, v19);
                    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v102 - 8) + 104))(v104, *MEMORY[0x1E4FBBA78], v102);
                    swift_willThrow();
                    (*(void (**)(char *, uint64_t))(v105 + 8))(v101, v19);
                    (*(void (**)(char *, uint64_t))(v126 + 8))(v100, v99);
                    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
                  }
                  char v107 = v98 & 1;
                  (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
                  uint64_t v45 = swift_allocObject();
                  *(unsigned char *)(v45 + 16) = v107;
                  unint64_t v46 = 0xA000000000000000;
                }
                else
                {
                  char v106 = v97 & 1;
                  (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
                  uint64_t v45 = swift_allocObject();
                  *(unsigned char *)(v45 + 16) = v106;
                  unint64_t v46 = 0xB000000000000004;
                }
              }
              goto LABEL_15;
            }
            (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
            uint64_t v95 = v117;
            sub_1C3C72344(v118, v117, type metadata accessor for ICQueryType.RelativeDateRange);
            uint64_t v67 = swift_allocBox();
            sub_1C3C72344(v95, v96, type metadata accessor for ICQueryType.RelativeDateRange);
            uint64_t v69 = 0x7000000000000004;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
            uint64_t v66 = v113;
            sub_1C3C72344(v114, v113, type metadata accessor for ICQueryType.RelativeDateRange);
            uint64_t v67 = swift_allocBox();
            sub_1C3C72344(v66, v68, type metadata accessor for ICQueryType.RelativeDateRange);
            uint64_t v69 = 0x4000000000000004;
          }
          unint64_t v70 = v67 | v69;
LABEL_33:
          *char v27 = v70;
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
        }
        char v56 = v51 & 1;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
        uint64_t v45 = swift_allocObject();
        *(unsigned char *)(v45 + 16) = v56;
        unint64_t v46 = 0x3000000000000004;
      }
      else
      {
        char v53 = v49 & 1;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
        uint64_t v45 = swift_allocObject();
        *(unsigned char *)(v45 + 16) = v53;
        unint64_t v46 = 0x2000000000000004;
      }
    }
    else
    {
      char v44 = v42 & 1;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v109, v125);
      uint64_t v45 = swift_allocObject();
      *(unsigned char *)(v45 + 16) = v44;
      unint64_t v46 = 0x1000000000000004;
    }
LABEL_15:
    *char v27 = v45 | v46;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v127);
}

uint64_t ICQueryType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v36 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  uint64_t v4 = MEMORY[0x1F4188790](v36);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v35 = type metadata accessor for ICQueryType.DateRange(0);
  uint64_t v9 = MEMORY[0x1F4188790](v35);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AF8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C723AC();
  uint64_t v37 = v17;
  sub_1C3DBB6D8();
  switch((v18 >> 59) & 0x1E | (v18 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v41 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v40 = 1;
      sub_1C3C72594();
      swift_retain();
      uint64_t v20 = v37;
      uint64_t v19 = v38;
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v19);
      return swift_release();
    case 2uLL:
      uint64_t v41 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      char v40 = 2;
      goto LABEL_5;
    case 3uLL:
      char v24 = 3;
      goto LABEL_29;
    case 4uLL:
      LOBYTE(v41) = 4;
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1F8();
      goto LABEL_30;
    case 5uLL:
      char v24 = 5;
      goto LABEL_29;
    case 6uLL:
      char v24 = 6;
      goto LABEL_29;
    case 7uLL:
      char v24 = 7;
      goto LABEL_29;
    case 8uLL:
      uint64_t v27 = swift_projectBox();
      sub_1C3C6DBAC(v27, (uint64_t)v13, type metadata accessor for ICQueryType.DateRange);
      LOBYTE(v41) = 8;
      sub_1C3C72158(&qword_1EA386B08, (void (*)(uint64_t))type metadata accessor for ICQueryType.DateRange);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1E8();
      unint64_t v28 = type metadata accessor for ICQueryType.DateRange;
      uint64_t v29 = (uint64_t)v13;
      goto LABEL_19;
    case 9uLL:
      uint64_t v30 = swift_projectBox();
      sub_1C3C6DBAC(v30, (uint64_t)v8, type metadata accessor for ICQueryType.RelativeDateRange);
      LOBYTE(v41) = 9;
      sub_1C3C72158(&qword_1EA386B00, (void (*)(uint64_t))type metadata accessor for ICQueryType.RelativeDateRange);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1E8();
      unint64_t v28 = type metadata accessor for ICQueryType.RelativeDateRange;
      uint64_t v29 = (uint64_t)v8;
      goto LABEL_19;
    case 0xAuLL:
      char v24 = 10;
      goto LABEL_29;
    case 0xBuLL:
      char v31 = 11;
      goto LABEL_27;
    case 0xCuLL:
      char v24 = 13;
      goto LABEL_29;
    case 0xDuLL:
      char v31 = 14;
      goto LABEL_27;
    case 0xEuLL:
      uint64_t v32 = swift_projectBox();
      sub_1C3C6DBAC(v32, (uint64_t)v11, type metadata accessor for ICQueryType.DateRange);
      LOBYTE(v41) = 15;
      sub_1C3C72158(&qword_1EA386B08, (void (*)(uint64_t))type metadata accessor for ICQueryType.DateRange);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1E8();
      unint64_t v28 = type metadata accessor for ICQueryType.DateRange;
      uint64_t v29 = (uint64_t)v11;
      goto LABEL_19;
    case 0xFuLL:
      uint64_t v33 = swift_projectBox();
      sub_1C3C6DBAC(v33, (uint64_t)v6, type metadata accessor for ICQueryType.RelativeDateRange);
      LOBYTE(v41) = 16;
      sub_1C3C72158(&qword_1EA386B00, (void (*)(uint64_t))type metadata accessor for ICQueryType.RelativeDateRange);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1E8();
      unint64_t v28 = type metadata accessor for ICQueryType.RelativeDateRange;
      uint64_t v29 = (uint64_t)v6;
LABEL_19:
      sub_1C3C6DB4C(v29, v28);
      goto LABEL_30;
    case 0x10uLL:
      char v24 = 17;
      goto LABEL_29;
    case 0x11uLL:
      char v24 = 18;
      goto LABEL_29;
    case 0x12uLL:
      char v24 = 19;
      goto LABEL_29;
    case 0x13uLL:
      char v31 = 20;
      goto LABEL_27;
    case 0x14uLL:
      char v24 = 21;
      goto LABEL_29;
    case 0x15uLL:
      char v31 = 12;
      goto LABEL_27;
    case 0x16uLL:
      char v31 = 22;
LABEL_27:
      LOBYTE(v41) = v31;
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1A8();
      goto LABEL_30;
    case 0x17uLL:
      char v24 = 23;
LABEL_29:
      LOBYTE(v41) = v24;
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      sub_1C3DBB1B8();
LABEL_30:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v26, v25);
      break;
    default:
      uint64_t v41 = *(void *)(v18 + 16);
      char v40 = 0;
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AD0);
      sub_1C3C72524(&qword_1EA386B10, (void (*)(void))sub_1C3C72594);
      uint64_t v22 = v38;
      uint64_t v23 = v37;
      sub_1C3DBB1E8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v22);
      break;
  }
  return result;
}

uint64_t sub_1C3C71CB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ICQueryType.init(from:)(a1, a2);
}

uint64_t sub_1C3C71CCC(void *a1)
{
  return ICQueryType.encode(to:)(a1);
}

BOOL _s11NotesShared11ICQueryTypeO17RelativeDateRangeV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386B90);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v32 - v18;
  if (*a1 != *a2) {
    return 0;
  }
  int v20 = a1[1];
  int v21 = a2[1];
  if (v20 == 5)
  {
    if (v21 != 5) {
      return 0;
    }
LABEL_7:
    char v23 = a2[16];
    if (a1[16])
    {
      if (!a2[16]) {
        return 0;
      }
    }
    else
    {
      if (*((void *)a1 + 1) != *((void *)a2 + 1)) {
        char v23 = 1;
      }
      if (v23) {
        return 0;
      }
    }
    uint64_t v24 = type metadata accessor for ICQueryType.RelativeDateRange(0);
    uint64_t v33 = v5;
    uint64_t v25 = v24;
    sub_1C3C376DC((uint64_t)&a1[*(int *)(v24 + 28)], (uint64_t)v19);
    uint64_t v26 = *(int *)(v25 + 28);
    uint64_t v27 = v33;
    sub_1C3C376DC((uint64_t)&a2[v26], (uint64_t)v17);
    uint64_t v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1C3C376DC((uint64_t)v19, (uint64_t)v10);
    sub_1C3C376DC((uint64_t)v17, v28);
    uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v29((uint64_t)v10, 1, v4) == 1)
    {
      sub_1C3C2A448((uint64_t)v17, &qword_1EB6FB1B8);
      sub_1C3C2A448((uint64_t)v19, &qword_1EB6FB1B8);
      if (v29(v28, 1, v4) == 1)
      {
        sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
        return 1;
      }
    }
    else
    {
      sub_1C3C376DC((uint64_t)v10, (uint64_t)v14);
      if (v29(v28, 1, v4) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v7, v28, v4);
        sub_1C3C72158(&qword_1EA386B98, MEMORY[0x1E4F27928]);
        char v30 = sub_1C3DB9BE8();
        char v31 = *(void (**)(char *, uint64_t))(v27 + 8);
        v31(v7, v4);
        sub_1C3C2A448((uint64_t)v17, &qword_1EB6FB1B8);
        sub_1C3C2A448((uint64_t)v19, &qword_1EB6FB1B8);
        v31(v14, v4);
        sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
        return (v30 & 1) != 0;
      }
      sub_1C3C2A448((uint64_t)v17, &qword_1EB6FB1B8);
      sub_1C3C2A448((uint64_t)v19, &qword_1EB6FB1B8);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v4);
    }
    sub_1C3C2A448((uint64_t)v10, &qword_1EA386B90);
    return 0;
  }
  BOOL result = 0;
  if (v21 != 5 && v20 == v21) {
    goto LABEL_7;
  }
  return result;
}

unint64_t sub_1C3C72104()
{
  unint64_t result = qword_1EA386A68;
  if (!qword_1EA386A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386A68);
  }
  return result;
}

uint64_t sub_1C3C72158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3C721A0()
{
  unint64_t result = qword_1EA386A80;
  if (!qword_1EA386A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386A80);
  }
  return result;
}

unint64_t sub_1C3C721F4()
{
  unint64_t result = qword_1EA386A88;
  if (!qword_1EA386A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386A88);
  }
  return result;
}

unint64_t sub_1C3C72248()
{
  unint64_t result = qword_1EA386A90;
  if (!qword_1EA386A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386A90);
  }
  return result;
}

unint64_t sub_1C3C7229C()
{
  unint64_t result = qword_1EA386AA0;
  if (!qword_1EA386AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386AA0);
  }
  return result;
}

unint64_t sub_1C3C722F0()
{
  unint64_t result = qword_1EA386AA8;
  if (!qword_1EA386AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386AA8);
  }
  return result;
}

uint64_t sub_1C3C72344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C3C723AC()
{
  unint64_t result = qword_1EA386AC8;
  if (!qword_1EA386AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386AC8);
  }
  return result;
}

unint64_t sub_1C3C72400()
{
  unint64_t result = qword_1EA386AE0;
  if (!qword_1EA386AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386AE0);
  }
  return result;
}

uint64_t sub_1C3C72454()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3C72464()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3C7249C()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

uint64_t sub_1C3C724AC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3C724E4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3C72524(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386AD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3C72594()
{
  unint64_t result = qword_1EA386B18;
  if (!qword_1EA386B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B18);
  }
  return result;
}

unint64_t sub_1C3C725EC()
{
  unint64_t result = qword_1EA386B20;
  if (!qword_1EA386B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B20);
  }
  return result;
}

unint64_t sub_1C3C72644()
{
  unint64_t result = qword_1EA386B28;
  if (!qword_1EA386B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B28);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ICQueryType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for ICQueryType()
{
  return swift_release();
}

void *assignWithCopy for ICQueryType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ICQueryType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x69 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 105);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x68) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ICQueryType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x68)
  {
    *(void *)unint64_t result = a2 - 105;
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C3C72814(void *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

void *sub_1C3C72828(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1C3C7283C(unint64_t *result, uint64_t a2)
{
  *unint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType()
{
  return &type metadata for ICQueryType;
}

uint64_t *initializeBufferWithCopyOfBuffer for ICQueryType.DateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8AF8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for ICQueryType.DateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3C72C68);
}

uint64_t sub_1C3C72C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ICQueryType.DateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3C72CE8);
}

uint64_t sub_1C3C72CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C3C72D58()
{
  uint64_t result = sub_1C3DB8AF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRangeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICQueryType.RelativeDateRangeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C72F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRangeType()
{
  return &type metadata for ICQueryType.RelativeDateRangeType;
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRangeUnit(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICQueryType.RelativeDateRangeUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C730D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRangeUnit()
{
  return &type metadata for ICQueryType.RelativeDateRangeUnit;
}

void *initializeBufferWithCopyOfBuffer for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = *(int *)(a3 + 28);
    unsigned int v6 = (void *)(a1 + v5);
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C3DB8AF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t initializeWithTake for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3C738C8);
}

uint64_t sub_1C3C738C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 250)
  {
    if (*(unsigned __int8 *)(a1 + 1) <= 5u) {
      int v4 = 5;
    }
    else {
      int v4 = *(unsigned __int8 *)(a1 + 1);
    }
    unsigned int v5 = v4 - 5;
    if (*(unsigned __int8 *)(a1 + 1) >= 5u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ICQueryType.RelativeDateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3C73994);
}

uint64_t sub_1C3C73994(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 250)
  {
    *(unsigned char *)(result + 1) = a2 + 5;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C3C73A3C()
{
  sub_1C3C73AE8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C3C73AE8()
{
  if (!qword_1EB6FB840)
  {
    sub_1C3DB8AF8();
    unint64_t v0 = sub_1C3DBA938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6FB840);
    }
  }
}

uint64_t getEnumTagSinglePayload for ICQueryType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICQueryType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C73C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.CodingKeys()
{
  return &type metadata for ICQueryType.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ICQueryType.RelativeDateRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C73DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.RelativeDateRange.CodingKeys()
{
  return &type metadata for ICQueryType.RelativeDateRange.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ICQueryType.DateRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C73EA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryType.DateRange.CodingKeys()
{
  return &type metadata for ICQueryType.DateRange.CodingKeys;
}

unint64_t sub_1C3C73EE0()
{
  unint64_t result = qword_1EA386B30;
  if (!qword_1EA386B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B30);
  }
  return result;
}

unint64_t sub_1C3C73F38()
{
  unint64_t result = qword_1EA386B38;
  if (!qword_1EA386B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B38);
  }
  return result;
}

unint64_t sub_1C3C73F90()
{
  unint64_t result = qword_1EA386B40;
  if (!qword_1EA386B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B40);
  }
  return result;
}

unint64_t sub_1C3C73FE8()
{
  unint64_t result = qword_1EA386B48;
  if (!qword_1EA386B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B48);
  }
  return result;
}

unint64_t sub_1C3C74040()
{
  unint64_t result = qword_1EA386B50;
  if (!qword_1EA386B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B50);
  }
  return result;
}

unint64_t sub_1C3C74098()
{
  unint64_t result = qword_1EA386B58;
  if (!qword_1EA386B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B58);
  }
  return result;
}

unint64_t sub_1C3C740F0()
{
  unint64_t result = qword_1EA386B60;
  if (!qword_1EA386B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B60);
  }
  return result;
}

unint64_t sub_1C3C74148()
{
  unint64_t result = qword_1EA386B68;
  if (!qword_1EA386B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B68);
  }
  return result;
}

unint64_t sub_1C3C741A0()
{
  unint64_t result = qword_1EA386B70;
  if (!qword_1EA386B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B70);
  }
  return result;
}

uint64_t sub_1C3C741F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C3C9D4A4(0, v5, 0);
    uint64_t v6 = v18;
    uint64_t v10 = a1 + 32;
    do
    {
      v10 += 8;
      swift_retain();
      sub_1C3C6DC14(&v17, a2, a3, a4, a5);
      swift_release();
      uint64_t v11 = v17;
      uint64_t v18 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C3C9D4A4(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      --v5;
    }
    while (v5);
  }
  return v6;
}

void *sub_1C3C74310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  BOOL v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_retain();
    sub_1C3C6DEF8(&v12, a2, a3);
    swift_release();
    uint64_t v8 = v12;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v7 = sub_1C3D82FFC(0, v7[2] + 1, 1, v7);
      }
      unint64_t v10 = v7[2];
      unint64_t v9 = v7[3];
      if (v10 >= v9 >> 1) {
        BOOL v7 = sub_1C3D82FFC((void *)(v9 > 1), v10 + 1, 1, v7);
      }
      void v7[2] = v10 + 1;
      v7[v10 + 4] = v8;
    }
    ++v6;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C3C74464(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657461446D6F7266 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657461446F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C3C74550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E556D6F74737563 && a2 == 0xEA00000000007469 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D416D6F74737563 && a2 == 0xEC000000746E756FLL || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006574614465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C3C74744(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6581857 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7630702 && a2 == 0xE300000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D686361747461 && a2 == 0xEA0000000000746ELL || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C3DF4A30 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73696C6B63656863 && a2 == 0xE900000000000074 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C3DF4A50 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C3DF4A70 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C3DF4A90 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001C3DF4AB0 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x646574656C6564 && a2 == 0xE700000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001C3DF4AD0 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E6F69746E656DLL && a2 == 0xE700000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C3DF4AF0 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C3DF4B10 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C3DF4B30 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C3DF1C70 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x64656E6E6970 && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x646572616873 && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C3DF4B50 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x61506D6574737973 && a2 == 0xEB00000000726570 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x646567676174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 23;
    }
    else {
      return 24;
    }
  }
}

unint64_t sub_1C3C75014()
{
  unint64_t result = qword_1EA386B78;
  if (!qword_1EA386B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B78);
  }
  return result;
}

unint64_t sub_1C3C75068()
{
  unint64_t result = qword_1EA386B80;
  if (!qword_1EA386B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386B80);
  }
  return result;
}

uint64_t ActivityEvent.timeInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  MEMORY[0x1F4188790](v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  return sub_1C3DB8248();
}

uint64_t sub_1C3C75194()
{
  return 1;
}

uint64_t ActivityEvent.isVisible(resolver:)()
{
  return 1;
}

uint64_t sub_1C3C751A8()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t ActivityEvent.associatedAttachmentIds.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t dispatch thunk of ActivityEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActivityEvent.timestamp.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityEvent.timestamp.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityEvent.timeInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ActivityEvent.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ActivityEvent.participant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ActivityEvent.associatedAttachmentIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ActivityEvent.isVisible(resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1C3C75260()
{
  uint64_t v1 = sub_1C3DB8AF8();
  MEMORY[0x1F4188790](v1);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  return sub_1C3DB8248();
}

char *initializeBufferWithCopyOfBuffer for AudioData(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_1C3DB88F8();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      BOOL v7 = *a2;
      uint64_t v8 = a2[1];
      *(void *)a1 = v7;
      *((void *)a1 + 1) = v8;
      unint64_t v9 = v7;
      unint64_t v10 = v8;
    }
    else
    {
      *(void *)a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for AudioData(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v3 = sub_1C3DB88F8();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 1:

      int v5 = *(void **)(a1 + 8);

      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
}

void *initializeWithCopy for AudioData(void *a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_1C3DB88F8();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    int v5 = *(void **)a2;
    char v6 = *(void **)(a2 + 8);
    *a1 = v5;
    a1[1] = v6;
    id v7 = v5;
    id v8 = v6;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for AudioData(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C3C60698((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_1C3DB88F8();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      int v5 = *a2;
      *a1 = *a2;
      char v6 = a2[1];
      a1[1] = v6;
      id v7 = v5;
      id v8 = v6;
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for AudioData(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA386BB0);
}

void *initializeWithTake for AudioData(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1C3DB88F8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AudioData(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3C60698((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1C3DB88F8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s10ActivitiesOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s10ActivitiesOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C3C758E0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C3C758F0()
{
  uint64_t result = sub_1C3DB88F8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1C3C75990(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C38);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v12 = *MEMORY[0x1E4F14F90];
  uint64_t v13 = *MEMORY[0x1E4F15068];
  aBlock[0] = 0;
  unsigned int v14 = objc_msgSend(v11, sel_setCategory_mode_options_error_, v12, v13, 0, aBlock);
  id v15 = aBlock[0];
  if (!v14
    || (aBlock[0] = 0,
        id v16 = v15,
        unsigned int v17 = objc_msgSend(v11, sel_setActive_withOptions_error_, 1, 1, aBlock),
        id v15 = aBlock[0],
        !v17))
  {
    id v38 = v15;
    sub_1C3DB8798();

    swift_willThrow();
    return;
  }
  uint64_t v44 = v4;
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine];
  id v19 = aBlock[0];
  id v20 = objc_msgSend(v18, sel_inputNode);
  objc_msgSend(v20, sel_removeTapOnBus_, 0);

  id v21 = objc_msgSend(v18, sel_inputNode);
  uint64_t v45 = a2;
  id v22 = v21;
  id v23 = objc_msgSend(v18, sel_inputNode);
  id v24 = objc_msgSend(v23, sel_outputFormatForBus_, 0);
  uint64_t v43 = v6;
  id v25 = v24;

  aBlock[4] = sub_1C3C79CA4;
  void aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C3C763D8;
  aBlock[3] = &block_descriptor_46;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_installTapOnBus_bufferSize_format_block_, 0, 4096, v25, v26);
  uint64_t v27 = v26;
  uint64_t v28 = v18;
  uint64_t v29 = v2;
  _Block_release(v27);

  uint64_t v30 = v45;
  objc_msgSend(v28, sel_prepare);
  type metadata accessor for AudioData(0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBD028], v7);
  sub_1C3DBA2D8();
  id v31 = objc_msgSend(v28, sel_inputNode);
  id v32 = objc_msgSend(v31, sel_inputFormatForBus_, 0);

  unint64_t v33 = sub_1C3C79080(v32);
  uint64_t v34 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v43, v47, v44);
  type metadata accessor for AudioAssetWriter();
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v48;
  sub_1C3C77128(v34, v33);
  if (v36)
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v30, v37);
  }
  else
  {
    *(void *)&v29[OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter] = v35;
    swift_release();
    aBlock[0] = 0;
    if ((objc_msgSend(v28, sel_startAndReturnError_, aBlock) & 1) == 0)
    {
      id v40 = aBlock[0];
      sub_1C3DB8798();

      swift_willThrow();
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C40);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v30, v41);
      return;
    }
    id v39 = aBlock[0];
  }
}

uint64_t sub_1C3C75EEC(void *a1, void *a2, uint64_t a3)
{
  id v32 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AudioData(0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (void **)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386BF0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned int v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C48);
  MEMORY[0x1F4188790](v15 - 8);
  unsigned int v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    id v20 = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
    id v21 = a1;
    *unint64_t v10 = a1;
    id v22 = v32;
    v10[1] = v32;
    swift_storeEnumTagMultiPayload();
    id v23 = v21;
    id v24 = v22;
    sub_1C3DBA298();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 0, 1, v25);
    id v20 = v21;
  }
  sub_1C3C2A448((uint64_t)v17, &qword_1EA386C48);
  uint64_t v26 = sub_1C3DBA278();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
  sub_1C3DBA1F8();
  id v27 = v20;
  swift_retain();
  uint64_t v28 = sub_1C3DBA1E8();
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v30 = MEMORY[0x1E4FBCFD8];
  long long v29[2] = v28;
  v29[3] = v30;
  v29[4] = a3;
  v29[5] = v27;
  sub_1C3C5C3D8((uint64_t)v7, (uint64_t)&unk_1EA386C60, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_1C3C7629C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  sub_1C3DBA1F8();
  v5[5] = sub_1C3DBA1E8();
  uint64_t v7 = sub_1C3DBA168();
  return MEMORY[0x1F4188298](sub_1C3C76338, v7, v6);
}

uint64_t sub_1C3C76338()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + 32);
    swift_retain();
    sub_1C3C77730(v3);
    swift_release();
  }
  **(unsigned char **)(v0 + 16) = v2 == 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1C3C763D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_1C3C7645C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C18);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386BF0);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  sub_1C3C799A0((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1C3C76590()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C18);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386BF0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine);
  objc_msgSend(v12, sel_stop);
  id v13 = objc_msgSend(v12, sel_inputNode);
  objc_msgSend(v13, sel_removeTapOnBus_, 0);

  uint64_t v14 = v1 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
    sub_1C3DBA2A8();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  sub_1C3C799A0((uint64_t)v7, v14);
  swift_endAccess();
  uint64_t v15 = sub_1C3DBA278();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1C3DBA1F8();
  swift_retain();
  uint64_t v16 = sub_1C3DBA1E8();
  unsigned int v17 = (void *)swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBCFD8];
  void v17[2] = v16;
  v17[3] = v18;
  void v17[4] = v1;
  sub_1C3C5C22C((uint64_t)v4, (uint64_t)&unk_1EA386C28, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1C3C7689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  sub_1C3DBA1F8();
  v4[4] = sub_1C3DBA1E8();
  uint64_t v6 = sub_1C3DBA168();
  v4[5] = v6;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_1C3C76934, v6, v5);
}

uint64_t sub_1C3C76934()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter;
  v0[7] = OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter;
  uint64_t v3 = *(void *)(v1 + v2);
  v0[8] = v3;
  if (v3)
  {
    swift_retain();
    return MEMORY[0x1F4188298](sub_1C3C76A04, 0, 0);
  }
  else
  {
    swift_release();
    *(void *)(v0[3] + v0[7]) = 0;
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1C3C76A04()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C3C76AE4;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1C3C76AE4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3C76CD0;
  }
  else {
    uint64_t v2 = sub_1C3C76BF8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3C76BF8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return MEMORY[0x1F4188298](sub_1C3C76C5C, v1, v2);
}

uint64_t sub_1C3C76C5C()
{
  swift_release();
  *(void *)(v0[3] + v0[7]) = 0;
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C3C76CD0()
{
  return MEMORY[0x1F4188298](sub_1C3C76CE8, *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1C3C76CE8()
{
  swift_release();
  swift_release();
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB6FC2A0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C3DB9028();
  os_log_type_t v6 = sub_1C3DBA6A8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[10];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_1C3DBA9A8();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1C3A61000, v5, v6, "Failed to finish writing audio file: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v10, -1, -1);
    MEMORY[0x1C877E600](v9, -1, -1);
  }
  else
  {
  }
  *(void *)(v0[3] + v0[7]) = 0;
  swift_release();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C3C76F14()
{
  sub_1C3C2A448(v0 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation, &qword_1EA386C18);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C76FA0()
{
  return type metadata accessor for AVAudioEngineRecordingMethod(0);
}

uint64_t type metadata accessor for AVAudioEngineRecordingMethod(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA386BD8);
}

void sub_1C3C76FC8()
{
  sub_1C3C77070();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1C3C77070()
{
  if (!qword_1EA386BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386BF0);
    unint64_t v0 = sub_1C3DBA938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA386BE8);
    }
  }
}

uint64_t sub_1C3C770CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C3DB9478();
  *a1 = result;
  return result;
}

uint64_t sub_1C3C77128(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1C3DB88F8();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x1F4188790](v3);
  id v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1C3DBA738();
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  BOOL v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DBA728();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1C3DB95E8();
  MEMORY[0x1F4188790](v9 - 8);
  *(_OWORD *)(v2 + 32) = xmmword_1C3DD6130;
  uint64_t v43 = sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC358);
  sub_1C3DB9598();
  v48.value = MEMORY[0x1E4FBC860];
  sub_1C3C79CB4(&qword_1EB6FC350, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC330);
  uint64_t v10 = v46;
  sub_1C3C4DA9C(&qword_1EB6FC338, &qword_1EB6FC330);
  sub_1C3DBAAA8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v45);
  uint64_t v11 = v44;
  *(void *)(v11 + 48) = sub_1C3DBA768();
  *(void *)(v11 + 56) = 0x4000000000000000;
  *(void *)(v11 + 64) = MEMORY[0x1E4FBC860];
  uint64_t v12 = URL.fileSize.getter();
  if ((v13 & 1) != 0 || v12)
  {
    uint64_t v18 = v41;
    uint64_t v17 = v42;
    uint64_t v21 = v39;
    uint64_t v19 = (uint64_t)v40;
  }
  else
  {
    id v14 = objc_msgSend(self, sel_defaultManager);
    uint64_t v15 = (void *)sub_1C3DB8848();
    v48.value = 0;
    unsigned int v16 = objc_msgSend(v14, sel_removeItemAtURL_error_, v15, &v48);

    uint64_t v18 = v41;
    uint64_t v17 = v42;
    uint64_t v19 = (uint64_t)v40;
    if (v16)
    {
      id v20 = (id)v48.value;
      uint64_t v21 = v39;
    }
    else
    {
      id v22 = (id)v48.value;
      id v23 = (void *)sub_1C3DB8798();

      swift_willThrow();
      uint64_t v21 = 0;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v10, v17);
  id v24 = (void *)*MEMORY[0x1E4F15A78];
  id v25 = objc_allocWithZone(MEMORY[0x1E4F163B8]);
  id v26 = v24;
  id v27 = sub_1C3C7931C(v19, (uint64_t)v26);
  if (v21)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v10, v17);
    sub_1C3C798D0(*(id *)(v11 + 32));

    swift_bridgeObjectRelease();
    type metadata accessor for AudioAssetWriter();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v28 = v27;

    *(void *)(v11 + 16) = v28;
    id v29 = v28;
    CMTimeMakeWithSeconds(&v48, 2.0, 600);
    objc_msgSend(v29, sel_setMovieFragmentInterval_, &v48);

    uint64_t v30 = (void *)*MEMORY[0x1E4F15BA8];
    id v31 = objc_allocWithZone(MEMORY[0x1E4F163C0]);
    id v32 = v30;
    unint64_t v33 = (void *)sub_1C3DB9A88();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v31, sel_initWithMediaType_outputSettings_sourceFormatHint_, v32, v33, 0);

    *(void *)(v11 + 24) = v34;
    objc_msgSend(v34, sel_setExpectsMediaDataInRealTime_, 1);
    uint64_t v35 = *(void **)(v11 + 16);
    if (objc_msgSend(v35, sel_canAddInput_, v34))
    {
      objc_msgSend(v35, sel_addInput_, v34);
    }
    else
    {
      sub_1C3C798E4();
      swift_allocError();
      *uint64_t v36 = 1;
      swift_willThrow();
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v10, v17);
  }
  return v11;
}

uint64_t sub_1C3C77730(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C3DB9558();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB95E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + 48);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1C3C79978;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_2;
  char v13 = _Block_copy(aBlock);
  swift_retain();
  id v14 = a1;
  sub_1C3DB9598();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1C3C79CB4(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
  sub_1C3C4DA9C((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
  sub_1C3DBAAA8();
  MEMORY[0x1C877BC60](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_1C3C779E4(void *a1)
{
  uint64_t v2 = v1;
  v44[7] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C3DB95F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (void *)((char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 32);
  uint64_t v8 = *(void **)(v2 + 48);
  *BOOL v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v9 = v8;
  uint64_t v10 = sub_1C3DB9608();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (*(void *)(v2 + 32) == 1)
  {
    uint64_t v11 = *(void **)(v2 + 16);
    if (objc_msgSend(v11, sel_startWriting))
    {
      uint64_t v12 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
      v44[0] = *MEMORY[0x1E4F1FA48];
      v44[1] = *(void *)(MEMORY[0x1E4F1FA48] + 8);
      void v44[2] = v12;
      objc_msgSend(v11, sel_startSessionAtSourceTime_, v44);
      char v13 = *(void **)(v2 + 32);
      *(void *)(v2 + 32) = 2;
      sub_1C3C798D0(v13);
      goto LABEL_5;
    }
    id v22 = objc_msgSend(v11, sel_error);
    if (qword_1EB6FC2B8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C3DB9048();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EB6FC2A0);
    id v24 = v22;
    id v25 = sub_1C3DB9028();
    os_log_type_t v26 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)id v27 = 138412290;
      if (v22)
      {
        id v29 = v24;
        uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
        v44[0] = v30;
        sub_1C3DBA9A8();
      }
      else
      {
        v44[0] = 0;
        sub_1C3DBA9A8();
        uint64_t v30 = 0;
      }
      *uint64_t v28 = v30;

      _os_log_impl(&dword_1C3A61000, v25, v26, "Failed to start writing asset: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v28, -1, -1);
      MEMORY[0x1C877E600](v27, -1, -1);
    }
    else
    {

      id v25 = v24;
    }

    sub_1C3C798E4();
    uint64_t v10 = swift_allocError();
    *id v32 = v22;
    swift_willThrow();
    if (qword_1EB6FC2B8 == -1)
    {
LABEL_42:
      uint64_t v33 = sub_1C3DB9048();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EB6FC2A0);
      id v34 = (id)v10;
      id v35 = (id)v10;
      uint64_t v36 = sub_1C3DB9028();
      os_log_type_t v37 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 138412290;
        id v40 = (id)v10;
        uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
        v44[0] = v41;
        sub_1C3DBA9A8();
        *uint64_t v39 = v41;

        _os_log_impl(&dword_1C3A61000, v36, v37, "Failed to append sample buffer: %@", v38, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
        swift_arrayDestroy();
        MEMORY[0x1C877E600](v39, -1, -1);
        MEMORY[0x1C877E600](v38, -1, -1);
      }
      else
      {
      }
      uint64_t v42 = *(void **)(v2 + 32);
      *(void *)(v2 + 32) = v10;
      sub_1C3C798D0(v42);
      return;
    }
LABEL_50:
    swift_once();
    goto LABEL_42;
  }
LABEL_5:
  id v14 = (uint64_t *)(v2 + 64);
  swift_beginAccess();
  uint64_t v10 = 0;
  while (1)
  {
    if ((unint64_t)*v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_28;
      }
    }
    else if (!*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((objc_msgSend(*(id *)(v2 + 24), sel_isReadyForMoreMediaData) & 1) == 0) {
      goto LABEL_28;
    }
    swift_beginAccess();
    if ((unint64_t)*v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v19)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
    }
    else if (!*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_46;
    }
    uint64_t v15 = *v14;
    if ((unint64_t)*v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v20) {
        goto LABEL_47;
      }
    }
    else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_47;
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      id v16 = (id)MEMORY[0x1C877C220](0, v15);
    }
    else
    {
      if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_48;
      }
      id v16 = *(id *)(v15 + 32);
    }
    uint64_t v17 = v16;
    if ((unint64_t)*v14 >> 62) {
      break;
    }
    if (!*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_27;
    }
LABEL_18:
    sub_1C3C4C394(0, 1);
    swift_endAccess();
    sub_1C3C781B0(v17);
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C3DBAFB8();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_18;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  if (objc_msgSend(*(id *)(v2 + 24), sel_isReadyForMoreMediaData))
  {
    sub_1C3C781B0(a1);
  }
  else
  {
    objc_msgSend(a1, sel_copy);
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
    sub_1C3C4C8B4(0, &qword_1EA386078);
    swift_dynamicCast();
    uint64_t v31 = swift_beginAccess();
    MEMORY[0x1C877B4F0](v31);
    if (*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C3DBA068();
    }
    sub_1C3DBA0C8();
    sub_1C3DBA038();
    swift_endAccess();
  }
}

void sub_1C3C781B0(void *a1)
{
  int64_t v4 = *(void *)(v1 + 40);
  id v5 = objc_msgSend(a1, sel_format);
  objc_msgSend(v5, sel_sampleRate);
  double v7 = v6;

  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v7 >= 2147483650.0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  CMTimeMake(&v15, v4, (int)v7);
  sub_1C3C79470(a1, v15.value, *(unint64_t *)&v15.timescale, v15.epoch);
  if (!v2)
  {
    id v9 = v8;
    if (objc_msgSend(*(id *)(v1 + 24), sel_appendSampleBuffer_, v8))
    {
      unsigned int v10 = objc_msgSend(a1, sel_frameLength);

      uint64_t v11 = *(void *)(v1 + 40);
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (!v12)
      {
        *(void *)(v1 + 40) = v13;
        return;
      }
      goto LABEL_16;
    }
    id v14 = *(void **)(v1 + 16);
    if (objc_msgSend(v14, sel_status) == (id)3 && objc_msgSend(v14, sel_error))
    {
      swift_willThrow();
    }
    else
    {
    }
  }
}

uint64_t sub_1C3C78334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB9558();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB95E8();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v17[1] = *(void *)(a2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1C3C79B08;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_31;
  CMTime v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1C3DB9598();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1C3C79CB4(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
  sub_1C3C4DA9C((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
  sub_1C3DBAAA8();
  MEMORY[0x1C877BC60](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

void sub_1C3C786AC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  if (a1[4] != 2 || (uint64_t v7 = (void *)a1[2], objc_msgSend(v7, sel_status) != (id)1))
  {
LABEL_26:
    sub_1C3DBA188();
    return;
  }
  uint64_t v23 = v5;
  id v24 = v7;
  uint64_t v25 = a2;
  uint64_t v8 = (void *)a1[4];
  a1[4] = 3;
  sub_1C3C798D0(v8);
  id v9 = a1 + 8;
  swift_beginAccess();
  while (1)
  {
    do
    {
      if ((unint64_t)*v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1C3DBAFB8();
        swift_bridgeObjectRelease();
        uint64_t v10 = (void *)a1[3];
        if (!v14)
        {
LABEL_27:
          objc_msgSend(v10, sel_markAsFinished);
          uint64_t v18 = v23;
          (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v4);
          unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = a1;
          (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v20 + v19, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
          aBlock[4] = sub_1C3C79B24;
          void aBlock[5] = v20;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1C3C9FDCC;
          aBlock[3] = &block_descriptor_37;
          uint64_t v21 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v24, sel_finishWritingWithCompletionHandler_, v21);
          _Block_release(v21);
          return;
        }
      }
      else
      {
        uint64_t v10 = (void *)a1[3];
        if (!*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_27;
        }
      }
    }
    while ((objc_msgSend(v10, sel_isReadyForMoreMediaData) & 1) == 0);
    swift_beginAccess();
    if ((unint64_t)*v9 >> 62) {
      break;
    }
    if (!*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_28;
    }
LABEL_9:
    uint64_t v11 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_29;
      }
    }
    else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_29;
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v12 = (id)MEMORY[0x1C877C220](0, v11);
    }
    else
    {
      if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_30;
      }
      id v12 = *(id *)(v11 + 32);
    }
    unint64_t v13 = v12;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      if (!v17)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else if (!*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_25;
    }
    sub_1C3C4C394(0, 1);
    swift_endAccess();
    sub_1C3C781B0(v13);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C3DBAFB8();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_9;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1C3C78AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB9558();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB95E8();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v17[1] = *(void *)(a1 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1C3C79C10;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_43_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1C3DB9598();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1C3C79CB4(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
  sub_1C3C4DA9C((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
  sub_1C3DBAAA8();
  MEMORY[0x1C877BC60](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

void sub_1C3C78E58(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (objc_msgSend(v2, sel_status) == (id)3
    && (id v3 = objc_msgSend(v2, sel_error)) != 0)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v3;
    id v5 = v3;
    sub_1C3C798D0(v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
    sub_1C3DBA178();
  }
  else
  {
    uint64_t v6 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = 0;
    sub_1C3C798D0(v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
    sub_1C3DBA188();
  }
}

uint64_t sub_1C3C78F24()
{
  sub_1C3C798D0(v0[4]);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioAssetWriter()
{
  return self;
}

uint64_t getEnumTagSinglePayload for AudioAssetWriter.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 4) {
    return (v3 - 3);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioAssetWriter.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioAssetWriter.State()
{
  return &type metadata for AudioAssetWriter.State;
}

uint64_t sub_1C3C79074()
{
  return MEMORY[0x1E4F1ABE8];
}

unint64_t sub_1C3C79080(void *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5130;
  *(void *)(inited + 32) = sub_1C3DB9C38();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 72) = MEMORY[0x1E4FBC4C0];
  *(_DWORD *)(inited + 48) = 1633772320;
  *(void *)(inited + 80) = sub_1C3DB9C38();
  *(void *)(inited + 88) = v4;
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 120) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 96) = 96;
  unint64_t v6 = sub_1C3C81620(inited);
  UInt32 outPropertyDataSize = 0;
  int inSpecifier = 1633772320;
  AudioFormatGetPropertyInfo(0x61657372u, 4u, &inSpecifier, &outPropertyDataSize);
  UInt32 v7 = outPropertyDataSize;
  unint64_t v8 = 16 * ((unint64_t)outPropertyDataSize >> 4);
  id v9 = (double *)swift_slowAlloc();
  AudioFormatGetProperty(0x61657372u, 4u, &inSpecifier, &outPropertyDataSize, v9);
  if (v7 >= 0x10)
  {
    double v11 = 1.79769313e308;
    double v10 = 44100.0;
    do
    {
      double v12 = *v9;
      v9 += 2;
      double v13 = v12;
      objc_msgSend(a1, sel_sampleRate);
      double v15 = vabdd_f64(v12, v14);
      if (v15 < v11)
      {
        double v10 = v13;
        double v11 = v15;
      }
      v8 -= 16;
    }
    while (v8);
  }
  else
  {
    double v10 = 44100.0;
  }
  uint64_t v16 = sub_1C3DB9C38();
  uint64_t v18 = v17;
  uint64_t v31 = MEMORY[0x1E4FBB3D0];
  v30[0] = v10;
  sub_1C3C2A5D8(v30, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C3D05584(v29, v16, v18, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C3DB9C38();
  uint64_t v22 = v21;
  unsigned int v23 = objc_msgSend(a1, sel_channelCount);
  uint64_t v24 = 1;
  if (v23 > 1) {
    uint64_t v24 = 2;
  }
  uint64_t v31 = v5;
  *(void *)&v30[0] = v24;
  sub_1C3C2A5D8(v30, v29);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1C3D05584(v29, v20, v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1C3C7931C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v6 = (void *)sub_1C3DB8848();
  v15[0] = 0;
  id v7 = objc_msgSend(v3, sel_initWithURL_fileType_error_, v6, a2, v15);

  id v8 = v15[0];
  if (v7)
  {
    uint64_t v9 = sub_1C3DB88F8();
    double v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a1, v9);
  }
  else
  {
    id v12 = v15[0];
    sub_1C3DB8798();

    swift_willThrow();
    uint64_t v13 = sub_1C3DB88F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

void sub_1C3C79470(void *a1, CMTimeValue a2, unint64_t a3, CMTimeEpoch a4)
{
  CMTimeScale v5 = a3;
  v36[1] = *(CMSampleBufferRef *)MEMORY[0x1E4F143B8];
  unint64_t v8 = HIDWORD(a3);
  uint64_t v9 = sub_1C3DBA6F8();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v30 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C3DBA718();
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[0] = 0;
  id v14 = objc_msgSend(a1, sel_format);
  double v15 = (const opaqueCMFormatDescription *)objc_msgSend(v14, sel_formatDescription);

  unsigned int v16 = objc_msgSend(a1, sel_frameLength);
  presentationTimeStamp.value = a2;
  presentationTimeStamp.timescale = v5;
  presentationTimeStamp.flags = v8;
  presentationTimeStamp.epoch = a4;
  OSStatus v17 = CMAudioSampleBufferCreateWithPacketDescriptions(0, 0, 0, 0, 0, v15, v16, &presentationTimeStamp, 0, v36);

  CMSampleBufferRef v18 = v36[0];
  if (v17 != sub_1C3DB9178())
  {
    sub_1C3DB9C38();
    id v23 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v24 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, v17, 0);

    swift_willThrow();
    goto LABEL_8;
  }
  if (!v18)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = v18;
  objc_msgSend(a1, sel_audioBufferList);
  uint64_t v20 = (void *)*MEMORY[0x1E4F1CF80];
  presentationTimeStamp.value = MEMORY[0x1E4FBC860];
  sub_1C3C79CB4(&qword_1EA386BF8, MEMORY[0x1E4FBCA18]);
  id v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C00);
  sub_1C3C4DA9C((unint64_t *)&qword_1EA386C08, &qword_1EA386C00);
  sub_1C3DBAAA8();
  uint64_t v22 = v34;
  sub_1C3DBA6C8();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);

    CMSampleBufferRef v18 = v36[0];
LABEL_8:

    return;
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);

  CMSampleBufferRef v25 = v36[0];
  if (!v36[0])
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v27 = v30;
  uint64_t v26 = v31;
  uint64_t v28 = v32;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E4FBCA10], v32);
  id v29 = v25;
  sub_1C3DBA708();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);

  if (!v36[0]) {
    __break(1u);
  }
}

void sub_1C3C798D0(id a1)
{
  if ((char *)a1 - 1 >= (char *)3) {
}
  }

unint64_t sub_1C3C798E4()
{
  unint64_t result = qword_1EA386C10;
  if (!qword_1EA386C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386C10);
  }
  return result;
}

uint64_t sub_1C3C79938()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C3C79978()
{
  sub_1C3C779E4(*(void **)(v0 + 24));
}

uint64_t sub_1C3C799A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C79A08()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3C79A48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C3C3259C;
  return sub_1C3C7689C(a1, v4, v5, v6);
}

uint64_t sub_1C3C79AFC(uint64_t a1)
{
  return sub_1C3C78334(a1, v1);
}

uint64_t sub_1C3C79B08()
{
  return sub_1C3C79C28((uint64_t (*)(uint64_t, uint64_t))sub_1C3C786AC);
}

uint64_t sub_1C3C79B24()
{
  return sub_1C3C79C28(sub_1C3C78AE0);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3C79C10()
{
  return sub_1C3C79C28((uint64_t (*)(uint64_t, uint64_t))sub_1C3C78E58);
}

uint64_t sub_1C3C79C28(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C30) - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4);
}

uint64_t sub_1C3C79CA4(void *a1, void *a2)
{
  return sub_1C3C75EEC(a1, a2, v2);
}

uint64_t sub_1C3C79CAC(uint64_t a1)
{
  return sub_1C3C7645C(a1, v1);
}

uint64_t sub_1C3C79CB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C79CFC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C79D44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C3C4DAF4;
  return sub_1C3C7629C(a1, v4, v5, v7, v6);
}

void destroy for AudioAssetWriter.Error(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s11NotesShared16AudioAssetWriterC5StateOwCP_0(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for AudioWaveformSource.Error(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    uint64_t v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for AudioWaveformSource.Error(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for AudioAssetWriter.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioAssetWriter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C3C7A040(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1C3C7A060(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioAssetWriter.Error()
{
  return &type metadata for AudioAssetWriter.Error;
}

uint64_t sub_1C3C7A0CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1C3C9D230(0, v6, 0);
  uint64_t v7 = v50;
  int64_t v41 = v6;
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  unint64_t v45 = v4;
  int64_t v42 = v5;
  if (v6)
  {
    unint64_t v8 = v5;
    id v9 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    id v11 = (uint64_t *)(a1 + 40);
    unint64_t v12 = v8;
    while (v4)
    {
      if (!v12) {
        goto LABEL_41;
      }
      int64_t v47 = v6;
      uint64_t v49 = v7;
      uint64_t v13 = *v11;
      uint64_t v46 = *v9;
      uint64_t v14 = qword_1EA385970;
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      double v15 = (void *)qword_1EA388790;
      unsigned int v16 = (void *)sub_1C3DB9BF8();
      if ((v13 & 0x1000000000000000) != 0) {
        uint64_t v17 = sub_1C3DB9DE8();
      }
      else {
        uint64_t v17 = sub_1C3DB9DF8();
      }
      uint64_t v18 = v17;
      uint64_t v19 = (void *)sub_1C3DB9BF8();
      id v20 = objc_msgSend(v15, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v16, 0, 0, v18, v19);

      sub_1C3DB9C38();
      uint64_t v21 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v21 <= v46) {
        uint64_t v21 = v46;
      }
      uint64_t v7 = v49;
      unint64_t v23 = *(void *)(v49 + 16);
      unint64_t v22 = *(void *)(v49 + 24);
      if (v23 >= v22 >> 1)
      {
        uint64_t result = sub_1C3C9D230(v22 > 1, v23 + 1, 1);
        uint64_t v7 = v49;
      }
      --v12;
      *(void *)(v7 + 16) = v23 + 1;
      *(void *)(v7 + 8 * v23 + 32) = v21;
      --v4;
      ++v9;
      v11 += 2;
      int64_t v6 = v47 - 1;
      if (v47 == 1) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_20:
    if (v45 <= v42)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v24 = 0;
    if (v41 <= v42) {
      int64_t v25 = v42;
    }
    else {
      int64_t v25 = v41;
    }
    int64_t v48 = v25 - v41;
    unint64_t v26 = v45 - v41;
    id v27 = (uint64_t *)(v44 + 16 * v41 + 40);
    while (v26 != v24)
    {
      if (v42 - v41 == v24) {
        goto LABEL_39;
      }
      if (v48 == v24) {
        goto LABEL_43;
      }
      uint64_t v28 = v7;
      uint64_t v29 = *v27;
      uint64_t v30 = *(void *)(v43 + 8 * v41 + 32 + 8 * v24);
      uint64_t v31 = qword_1EA385970;
      swift_bridgeObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = (void *)qword_1EA388790;
      uint64_t v33 = (void *)sub_1C3DB9BF8();
      if ((v29 & 0x1000000000000000) != 0) {
        uint64_t v34 = sub_1C3DB9DE8();
      }
      else {
        uint64_t v34 = sub_1C3DB9DF8();
      }
      uint64_t v35 = v34;
      uint64_t v36 = (void *)sub_1C3DB9BF8();
      id v37 = objc_msgSend(v32, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v33, 0, 0, v35, v36);

      sub_1C3DB9C38();
      uint64_t v38 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v38 <= v30) {
        uint64_t v38 = v30;
      }
      uint64_t v7 = v28;
      unint64_t v40 = *(void *)(v28 + 16);
      unint64_t v39 = *(void *)(v28 + 24);
      if (v40 >= v39 >> 1)
      {
        uint64_t result = sub_1C3C9D230(v39 > 1, v40 + 1, 1);
        uint64_t v7 = v28;
      }
      *(void *)(v7 + 16) = v40 + 1;
      *(void *)(v7 + 8 * v40 + 32) = v38;
      ++v24;
      v27 += 2;
      unint64_t v26 = v45 - v41;
      if (v45 - v41 == v24) {
        goto LABEL_39;
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C3C7A530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >= v6) {
    int64_t v8 = *(void *)(a1 + 16);
  }
  else {
    int64_t v8 = *(void *)(a2 + 16);
  }
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1C3C9D1E0(0, v8, 0);
  int64_t v36 = v8;
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  int64_t v37 = v7;
  unint64_t v38 = v6;
  if (v8)
  {
    id v9 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    id v11 = (uint64_t *)(a1 + 40);
    unint64_t v12 = v6;
    int64_t v13 = v8;
    unint64_t v14 = v7;
    while (v12)
    {
      if (!v14) {
        goto LABEL_26;
      }
      uint64_t v15 = *(v11 - 1);
      uint64_t v16 = *v11;
      uint64_t v17 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v43 = a4(v15, v16, v17);
      uint64_t v19 = v18;
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v21 = *(void *)(v44 + 16);
      unint64_t v20 = *(void *)(v44 + 24);
      if (v21 >= v20 >> 1) {
        uint64_t result = sub_1C3C9D1E0(v20 > 1, v21 + 1, 1);
      }
      *(void *)(v44 + 16) = v21 + 1;
      uint64_t v22 = v44 + 16 * v21;
      --v14;
      *(void *)(v22 + 32) = v43;
      *(void *)(v22 + 40) = v19;
      --v12;
      ++v9;
      v11 += 2;
      if (!--v13) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_13:
    if (v38 <= v37)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
    }
    uint64_t v23 = 0;
    if (v36 <= v37) {
      int64_t v24 = v37;
    }
    else {
      int64_t v24 = v36;
    }
    int64_t v41 = v24 - v36;
    unint64_t v25 = v38 - v36;
    unint64_t v26 = (uint64_t *)(v40 + 16 * v36 + 40);
    while (v25 != v23)
    {
      if (v37 - v36 == v23) {
        goto LABEL_24;
      }
      if (v41 == v23) {
        goto LABEL_28;
      }
      uint64_t v27 = *(v26 - 1);
      uint64_t v28 = *v26;
      uint64_t v29 = *(void *)(v39 + 8 * v36 + 32 + 8 * v23);
      swift_bridgeObjectRetain();
      uint64_t v30 = a4(v27, v28, v29);
      uint64_t v32 = v31;
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v34 = *(void *)(v44 + 16);
      unint64_t v33 = *(void *)(v44 + 24);
      if (v34 >= v33 >> 1) {
        uint64_t result = sub_1C3C9D1E0(v33 > 1, v34 + 1, 1);
      }
      *(void *)(v44 + 16) = v34 + 1;
      uint64_t v35 = v44 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      ++v23;
      v26 += 2;
      if (v25 == v23) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t TableFormat.columnCount.getter()
{
  return *(void *)v0;
}

uint64_t TableFormat.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TableFormat.rows.getter()
{
  return swift_bridgeObjectRetain();
}

void TableFormat.format.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t TableFormat.maximumColumnWidth.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t static TableFormat.Formats.defaultArgument.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1EA386C68;
  return result;
}

uint64_t static TableFormat.Formats.defaultArgument.setter(char *a1)
{
  char v1 = *a1;
  uint64_t result = swift_beginAccess();
  byte_1EA386C68 = v1;
  return result;
}

uint64_t (*static TableFormat.Formats.defaultArgument.modify())()
{
  return j__swift_endAccess;
}

NotesShared::TableFormat::Formats_optional __swiftcall TableFormat.Formats.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

void *static TableFormat.Formats.allCases.getter()
{
  return &unk_1F1F284B0;
}

uint64_t TableFormat.Formats.rawValue.getter()
{
  uint64_t v1 = 0x4E49414C50;
  if (*v0 != 1) {
    uint64_t v1 = 1313821514;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x455454414D524F46;
  }
}

uint64_t sub_1C3C7A994(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C3CE6D94(*a1, *a2);
}

uint64_t sub_1C3C7A9A0()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C7AA3C()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C7AAC4()
{
  return sub_1C3DBB608();
}

NotesShared::TableFormat::Formats_optional sub_1C3C7AB5C(Swift::String *a1)
{
  return TableFormat.Formats.init(rawValue:)(*a1);
}

void sub_1C3C7AB68(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000044;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x4E49414C50;
  if (v2 != 1)
  {
    uint64_t v5 = 1313821514;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x455454414D524F46;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1C3C7ABC0(void *a1@<X8>)
{
  *a1 = &unk_1F1F284D8;
}

uint64_t sub_1C3C7ABD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1EA386C68;
  return result;
}

uint64_t sub_1C3C7AC1C()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3C7AC7C()
{
  sub_1C3DB81A8();
  swift_allocObject();
  uint64_t result = sub_1C3DB8198();
  qword_1EA386C70 = result;
  return result;
}

uint64_t TableFormat.init<A>(rows:columns:format:maximumColumnWidth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v26 = *a3;
  uint64_t v36 = a2;
  uint64_t v35 = a6;
  uint64_t v33 = a6;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C3DBADF8();
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_1C3DBA128();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = MEMORY[0x1E4FBC248];
  uint64_t v16 = sub_1C3C34894((void (*)(char *, char *))sub_1C3C7B08C, (uint64_t)v32, v12, v11, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v15);
  swift_release();
  uint64_t v36 = a1;
  uint64_t v30 = a6;
  uint64_t v31 = a2;
  uint64_t v17 = sub_1C3DBA128();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DD0);
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v21 = sub_1C3C34894((void (*)(char *, char *))sub_1C3C7B0AC, (uint64_t)v29, v17, v18, v14, v19, MEMORY[0x1E4FBC278], v20);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v21 + 16);
  if (v24)
  {
    uint64_t v25 = v21 + 32;
    while (*(void *)(*(void *)v25 + 16) == v23)
    {
      v25 += 8;
      if (!--v24) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    *(void *)a7 = v23;
    *(void *)(a7 + 8) = v16;
    *(void *)(a7 + 16) = v21;
    *(unsigned char *)(a7 + 24) = v26;
    *(void *)(a7 + 32) = a4;
    *(unsigned char *)(a7 + 40) = a5 & 1;
  }
  return result;
}

{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void v20[6];

  uint64_t v10 = *a3;
  v20[5] = a1;
  v20[2] = a6;
  v20[3] = a2;
  uint64_t v11 = sub_1C3DBA128();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DD0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_1C3C34894((void (*)(char *, char *))sub_1C3C7B2D4, (uint64_t)v20, v11, v12, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v14);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v18 = v15 + 32;
    uint64_t v19 = *(void *)(*(void *)(v15 + 32) + 16);
    while (*(void *)(*(void *)v18 + 16) == v19)
    {
      v18 += 8;
      if (!--v17) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v19 = 0;
LABEL_7:
    *(void *)a7 = v19;
    *(void *)(a7 + 8) = 0;
    *(void *)(a7 + 16) = v15;
    *(unsigned char *)(a7 + 24) = v10;
    *(void *)(a7 + 32) = a4;
    *(unsigned char *)(a7 + 40) = a5 & 1;
  }
  return result;
}

uint64_t sub_1C3C7AEC0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C7AF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v9[5] = a2;
  v9[2] = a3;
  v9[3] = a1;
  sub_1C3DBADF8();
  swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_1C3DBA128();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1C3C34894((void (*)(char *, char *))sub_1C3C7E6DC, (uint64_t)v9, v5, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  *a4 = result;
  return result;
}

uint64_t TableFormat.init(labels:rows:format:maximumColumnWidth:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v6 = *a3;
  if (result)
  {
    uint64_t v7 = *(void *)(result + 16);
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8)
    {
      uint64_t v7 = 0;
LABEL_9:
      *(void *)a6 = v7;
      *(void *)(a6 + 8) = result;
      *(void *)(a6 + 16) = a2;
      *(unsigned char *)(a6 + 24) = v6;
      *(void *)(a6 + 32) = a4;
      *(unsigned char *)(a6 + 40) = a5 & 1;
      return result;
    }
    uint64_t v7 = *(void *)(*(void *)(a2 + 32) + 16);
  }
  uint64_t v9 = a2 + 32;
  while (*(void *)(*(void *)v9 + 16) == v7)
  {
    v9 += 8;
    if (!--v8) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C7B08C()
{
  return sub_1C3C7AEC0();
}

uint64_t sub_1C3C7B0AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3C7AF3C(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t sub_1C3C7B214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v9[5] = a2;
  v9[2] = a3;
  v9[3] = a1;
  sub_1C3DBADF8();
  uint64_t v5 = sub_1C3DBA128();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1C3C34894((void (*)(char *, char *))sub_1C3C7E6A8, (uint64_t)v9, v5, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  *a4 = result;
  return result;
}

uint64_t sub_1C3C7B2D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3C7B214(a1, *(void *)(v2 + 24), *(void *)(v2 + 16), a2);
}

uint64_t TableFormat.description.getter()
{
  uint64_t v1 = sub_1C3DB9C78();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  if (!*(unsigned char *)(v0 + 24)) {
    return sub_1C3C7B51C();
  }
  if (*(unsigned char *)(v0 + 24) == 1) {
    return sub_1C3C7BB08();
  }
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1C3C7DE74(v3, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EA385830 != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C78);
    sub_1C3C7DF90();
    uint64_t v7 = sub_1C3DB8188();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1C3DB9C68();
    uint64_t v10 = sub_1C3DB9C58();
    if (v11)
    {
      uint64_t v5 = v10;
      sub_1C3C58FC8(v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    sub_1C3C58FC8(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1C3C7B51C()
{
  long long v1 = v0[1];
  long long v50 = *v0;
  v51[0] = v1;
  *(_OWORD *)((char *)v51 + 9) = *(long long *)((char *)v0 + 25);
  uint64_t v2 = *((void *)&v50 + 1);
  if (*((void *)&v50 + 1))
  {
    int64_t v3 = *(void *)(*((void *)&v50 + 1) + 16);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (v3)
    {
      uint64_t v46 = MEMORY[0x1E4FBC860];
      sub_1C3C9D230(0, v3, 0);
      uint64_t v4 = v46;
      uint64_t v44 = *((void *)&v50 + 1);
      uint64_t v5 = (uint64_t *)(*((void *)&v50 + 1) + 40);
      do
      {
        uint64_t v6 = *v5;
        uint64_t v7 = qword_1EA385970;
        swift_bridgeObjectRetain_n();
        if (v7 != -1) {
          swift_once();
        }
        unint64_t v8 = (void *)qword_1EA388790;
        unint64_t v9 = (void *)sub_1C3DB9BF8();
        if ((v6 & 0x1000000000000000) != 0) {
          uint64_t v10 = sub_1C3DB9DE8();
        }
        else {
          uint64_t v10 = sub_1C3DB9DF8();
        }
        uint64_t v11 = v10;
        uint64_t v12 = (void *)sub_1C3DB9BF8();
        id v13 = objc_msgSend(v8, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v9, 0, 0, v11, v12);

        sub_1C3DB9C38();
        uint64_t v14 = sub_1C3DB9D18();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v46 = v4;
        unint64_t v16 = *(void *)(v4 + 16);
        unint64_t v15 = *(void *)(v4 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1C3C9D230(v15 > 1, v16 + 1, 1);
          uint64_t v4 = v46;
        }
        v5 += 2;
        *(void *)(v4 + 16) = v16 + 1;
        *(void *)(v4 + 8 * v16 + 32) = v14;
        --v3;
      }
      while (v3);
      uint64_t v2 = v44;
    }
  }
  else
  {
    uint64_t v4 = sub_1C3D5E100(0, v50);
  }
  sub_1C3C7E518((uint64_t)&v50);
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C3C7D6D4(v17, (uint64_t)&v50);
  sub_1C3C7E550((uint64_t)&v50);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v21 = v4;
    do
    {
      uint64_t v22 = *(void *)(v18 + 8 * v20++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C3C7A0CC(v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_18:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C3C7A530(v2, v21, (uint64_t)v45, sub_1C3C7BDE4);
      swift_bridgeObjectRelease();
      uint64_t v46 = v23;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
      sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
      uint64_t v24 = sub_1C3DB9B88();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v27 = *(void *)(v18 + 16);
      if (v27) {
        goto LABEL_19;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = MEMORY[0x1E4FBC860];
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v21 = v4;
    if (v2) {
      goto LABEL_18;
    }
  }
  uint64_t v24 = 0;
  unint64_t v26 = 0xE000000000000000;
  int64_t v27 = *(void *)(v18 + 16);
  if (!v27) {
    goto LABEL_26;
  }
LABEL_19:
  uint64_t v42 = v24;
  unint64_t v43 = v26;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C3C9D1E0(0, v27, 0);
  uint64_t v28 = 0;
  uint64_t v29 = v46;
  do
  {
    int64_t v30 = v27;
    swift_bridgeObjectRetain();
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C3C7A530(v31, v21, (uint64_t)v49, sub_1C3C7BF9C);
    swift_bridgeObjectRelease();
    uint64_t v48 = v32;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
    uint64_t v33 = sub_1C3DB9B88();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v29;
    unint64_t v37 = *(void *)(v29 + 16);
    unint64_t v36 = *(void *)(v29 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1C3C9D1E0(v36 > 1, v37 + 1, 1);
      uint64_t v29 = v46;
    }
    ++v28;
    *(void *)(v29 + 16) = v37 + 1;
    unint64_t v38 = v29 + 16 * v37;
    *(void *)(v38 + 32) = v33;
    *(void *)(v38 + 40) = v35;
    int64_t v27 = v30;
  }
  while (v30 != v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v24 = v42;
  unint64_t v26 = v43;
LABEL_27:
  uint64_t v46 = v29;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
  uint64_t v39 = sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  uint64_t v40 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v40 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v40)
  {
    uint64_t v46 = v24;
    unint64_t v47 = v26;
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v46;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v39;
}

uint64_t sub_1C3C7BB08()
{
  long long v1 = v0[1];
  long long v16 = *v0;
  v17[0] = v1;
  *(_OWORD *)((char *)v17 + 9) = *(long long *)((char *)v0 + 25);
  if (*((void *)&v16 + 1))
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
    uint64_t v2 = sub_1C3DB9B88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)&v17[0];
  uint64_t v18 = *(void *)&v17[0];
  int64_t v4 = *(void *)(*(void *)&v17[0] + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v15 = v2;
    sub_1C3C7E518((uint64_t)&v16);
    sub_1C3C5C180((uint64_t)&v18);
    sub_1C3C9D1E0(0, v4, 0);
    uint64_t v6 = v3 + 32;
    do
    {
      sub_1C3C7E518((uint64_t)&v16);
      uint64_t v7 = swift_bridgeObjectRetain();
      sub_1C3C7DC14(v7, (uint64_t)&v16);
      sub_1C3C7E550((uint64_t)&v16);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
      sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
      uint64_t v8 = sub_1C3DB9B88();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v5 + 16);
      unint64_t v11 = *(void *)(v5 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C3C9D1E0(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v5 + 16) = v12 + 1;
      uint64_t v13 = v5 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      v6 += 8;
      --v4;
    }
    while (v4);
    sub_1C3C7E550((uint64_t)&v16);
    sub_1C3C5C1AC((uint64_t)&v18);
    uint64_t v2 = v15;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
  sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C3C7BDE4(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  uint64_t v6 = 1;
  unint64_t v7 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  String.padding(to:alignment:ignoringAnsi:)(a3, (unsigned __int8 *)&v6, 1, a1);
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  return v8;
}

uint64_t sub_1C3C7BF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EA385970 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EA388790;
  unint64_t v7 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C3DB9E08();
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)sub_1C3DB9BF8();
  id v10 = objc_msgSend(v6, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v7, 0, 0, v8, v9);

  sub_1C3DB9C38();
  uint64_t v11 = sub_1C3DB9D18();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = a3 - v11;
  if (!__OFSUB__(a3, v11))
  {
    if (v13 <= 0)
    {
      if (a3 <= 0)
      {
        uint64_t v22 = 0;
        unint64_t v23 = 0xE000000000000000;
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        uint64_t v26 = 0;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        goto LABEL_7;
      }
      uint64_t v14 = (void *)qword_1EA388790;
      uint64_t v15 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C3DB9E08();
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)sub_1C3DB9BF8();
      id v18 = objc_msgSend(v14, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v15, 0, 0, v16, v17);

      sub_1C3DB9C38();
      uint64_t v19 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      if (v19 <= a3)
      {
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        uint64_t v26 = 0;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        uint64_t v22 = a1;
        unint64_t v23 = a2;
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
      }
      else
      {
        v24[0] = 0;
        v24[1] = 0xE000000000000000;
        v24[2] = 0;
        v24[3] = a3;
        char v25 = 0;
        swift_bridgeObjectRetain();
        sub_1C3D5DC74(v24, a1, a2, (uint64_t)&v22);
        uint64_t v21 = v22;
        unint64_t v20 = v23;
        uint64_t v22 = 0;
        unint64_t v23 = 0xE000000000000000;
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        uint64_t v26 = 0;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        uint64_t v22 = v21;
        unint64_t v23 = v20;
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1C3D5E1EC(32, 0xE100000000000000, v13);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
      sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
      sub_1C3DB9B88();
      swift_bridgeObjectRelease();
      uint64_t v22 = a1;
      unint64_t v23 = a2;
      swift_bridgeObjectRetain();
      sub_1C3DB9D68();
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C7C47C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v6 = a3;
  uint64_t v7 = *a1;
  int64_t v8 = *(void *)(*a1 + 16);
  if (v8)
  {
    uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v8, 0);
    uint64_t v9 = v7 + 32;
    id v10 = v22;
    do
    {
      sub_1C3C4BC70(v9, (uint64_t)v21);
      uint64_t v11 = sub_1C3C7D080((uint64_t)v21);
      uint64_t v13 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D1E0(0, v10[2] + 1, 1);
        id v10 = v22;
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      unint64_t v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_1C3C9D1E0(v14 > 1, v15 + 1, 1);
        id v10 = v22;
      }
      void v10[2] = v16;
      uint64_t v17 = &v10[2 * v15];
      void v17[4] = v11;
      v17[5] = v13;
      v9 += 32;
      --v8;
    }
    while (v8);
    uint64_t v4 = v3;
    uint64_t v6 = a3;
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  }
  if (v16 >= a2[2]) {
    unint64_t v16 = a2[2];
  }
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB0);
    uint64_t v18 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC868];
  }
  v21[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C3C7CC1C(a2, v10, 1, v21);
  if (v4)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v6 = v21[0];
  }
  return result;
}

uint64_t Date.tableCellDescription.getter()
{
  uint64_t v0 = sub_1C3DB8A68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C7C73C((uint64_t)v3);
  uint64_t v4 = sub_1C3DB89F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C3C7C73C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CC0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1C3DB8CA8();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C3DB8A58();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8A38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C3DB8A18();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C3DB8A28();
  MEMORY[0x1F4188790](v16);
  (*(void (**)(char *, void))(v18 + 104))((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F27880]);
  uint64_t v19 = v12;
  uint64_t v20 = v28;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F27878], v19);
  uint64_t v21 = v7;
  uint64_t v22 = v29;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F27888], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v21, *MEMORY[0x1E4F27890], v27);
  sub_1C3DB8C98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v22, 1, v20);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v25, v22, v20);
    return sub_1C3DB8A48();
  }
  return result;
}

uint64_t sub_1C3C7CB3C()
{
  uint64_t v0 = sub_1C3DB8A68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C7C73C((uint64_t)v3);
  uint64_t v4 = sub_1C3DB89F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1C3C7CC1C(void *a1, void *a2, char a3, void *a4)
{
  if (!a1[2] || (uint64_t v49 = a2[2]) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v48 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)*a4;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1C3C2A4F8(v7, v6);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_30;
  }
  char v16 = v11;
  if (v10[3] >= v15)
  {
    if (a3)
    {
      uint64_t v19 = a1;
      if (v11) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_1C3D84244();
      uint64_t v19 = a1;
      if (v16) {
        goto LABEL_11;
      }
    }
LABEL_14:
    uint64_t v22 = (void *)*a4;
    *(void *)(*a4 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    unint64_t v23 = (uint64_t *)(v22[6] + 16 * v12);
    *unint64_t v23 = v7;
    v23[1] = v6;
    uint64_t v24 = (void *)(v22[7] + 16 * v12);
    *uint64_t v24 = v8;
    v24[1] = v9;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v22[2] = v27;
    if (v48 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return;
    }
    if (v19[2] < 2uLL) {
      goto LABEL_32;
    }
    if (v49 == 1) {
      goto LABEL_18;
    }
    uint64_t v28 = v19 + 7;
    uint64_t v29 = a2 + 7;
    for (unint64_t i = 2; ; ++i)
    {
      uint64_t v32 = *(v28 - 1);
      uint64_t v31 = *v28;
      swift_bridgeObjectRetain();
      uint64_t v33 = *(v29 - 1);
      uint64_t v34 = *v29;
      uint64_t v35 = (void *)*a4;
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1C3C2A4F8(v32, v31);
      uint64_t v38 = v35[2];
      BOOL v39 = (v37 & 1) == 0;
      BOOL v26 = __OFADD__(v38, v39);
      uint64_t v40 = v38 + v39;
      if (v26) {
        break;
      }
      char v41 = v37;
      if (v35[3] < v40)
      {
        sub_1C3D85EC8(v40, 1);
        unint64_t v36 = sub_1C3C2A4F8(v32, v31);
        if ((v41 & 1) != (v42 & 1)) {
          goto LABEL_33;
        }
      }
      if (v41) {
        goto LABEL_11;
      }
      unint64_t v43 = (void *)*a4;
      *(void *)(*a4 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      uint64_t v44 = (uint64_t *)(v43[6] + 16 * v36);
      *uint64_t v44 = v32;
      v44[1] = v31;
      unint64_t v45 = (void *)(v43[7] + 16 * v36);
      *unint64_t v45 = v33;
      v45[1] = v34;
      uint64_t v46 = v43[2];
      BOOL v26 = __OFADD__(v46, 1);
      uint64_t v47 = v46 + 1;
      if (v26) {
        goto LABEL_31;
      }
      v43[2] = v47;
      if (v48 == i) {
        goto LABEL_18;
      }
      if (i >= a1[2]) {
        goto LABEL_32;
      }
      if (v49 == i) {
        goto LABEL_18;
      }
      v29 += 2;
      v28 += 2;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1C3D85EC8(v15, a3 & 1);
  unint64_t v17 = sub_1C3C2A4F8(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    uint64_t v19 = a1;
    if ((v16 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_11:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_34;
  }
LABEL_33:
  sub_1C3DBB538();
  __break(1u);
LABEL_34:
  sub_1C3DBAC68();
  sub_1C3DB9D68();
  sub_1C3DBAEE8();
  sub_1C3DB9D68();
  sub_1C3DBAF58();
  __break(1u);
}

uint64_t sub_1C3C7D080(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB628();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CD0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CD8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = sub_1C3DBB668();
  uint64_t v37 = *(void *)(v18 - 8);
  uint64_t v38 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  sub_1C3C4BC70(a1, (uint64_t)&v39);
  sub_1C3DBB618();
  unint64_t v36 = v20;
  sub_1C3DBB638();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v15, *MEMORY[0x1E4FBC418], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  uint64_t v21 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_1C3C7E5EC((uint64_t)v17, (uint64_t)v8);
  sub_1C3C7E5EC((uint64_t)v15, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v22((uint64_t)v8, 1, v2) == 1)
  {
    sub_1C3C2A448((uint64_t)v15, &qword_1EA386CD8);
    sub_1C3C2A448((uint64_t)v17, &qword_1EA386CD8);
    if (v22(v21, 1, v2) == 1)
    {
      sub_1C3C2A448((uint64_t)v8, &qword_1EA386CD8);
      unint64_t v23 = v36;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1C3C7E5EC((uint64_t)v8, (uint64_t)v12);
  if (v22(v21, 1, v2) == 1)
  {
    sub_1C3C2A448((uint64_t)v15, &qword_1EA386CD8);
    sub_1C3C2A448((uint64_t)v17, &qword_1EA386CD8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
LABEL_6:
    sub_1C3C2A448((uint64_t)v8, &qword_1EA386CD0);
    unint64_t v23 = v36;
    goto LABEL_10;
  }
  uint64_t v24 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v34, v21, v2);
  char v25 = sub_1C3DB9BE8();
  BOOL v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v24, v2);
  sub_1C3C2A448((uint64_t)v15, &qword_1EA386CD8);
  sub_1C3C2A448((uint64_t)v17, &qword_1EA386CD8);
  v26(v12, v2);
  sub_1C3C2A448((uint64_t)v8, &qword_1EA386CD8);
  unint64_t v23 = v36;
  if (v25)
  {
LABEL_8:
    sub_1C3DBB658();
    sub_1C3D53DB0(&v39);
    swift_release();
    if (v42)
    {
      swift_bridgeObjectRelease();
      sub_1C3C2A5D8(&v40, v43);
      sub_1C3C2A5D8(v43, &v46);
    }
    else
    {
      sub_1C3C2A448((uint64_t)&v39, &qword_1EA386CF0);
      uint64_t v47 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v46 = 0;
      *((void *)&v46 + 1) = 0xE000000000000000;
    }
    goto LABEL_11;
  }
LABEL_10:
  sub_1C3C4BC70(v35, (uint64_t)&v46);
LABEL_11:
  sub_1C3C4BC70((uint64_t)&v46, (uint64_t)v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CE0);
  if (swift_dynamicCast())
  {
    sub_1C3C4C684(v43, (uint64_t)&v39);
    uint64_t v27 = *((void *)&v40 + 1);
    uint64_t v28 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v38);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v46);
    int64_t v30 = &v39;
  }
  else
  {
    uint64_t v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1C3C2A448((uint64_t)v43, &qword_1EA386CE8);
    sub_1C3C4BC70((uint64_t)&v46, (uint64_t)&v39);
    *(void *)&long long v39 = sub_1C3DB9C88();
    *((void *)&v39 + 1) = v31;
    *(void *)&v43[0] = 10;
    *((void *)&v43[0] + 1) = 0xE100000000000000;
    v45[0] = 32;
    v45[1] = 0xE100000000000000;
    sub_1C3C2A4A4();
    uint64_t v29 = sub_1C3DBA9F8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v38);
    int64_t v30 = &v46;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
  return v29;
}

uint64_t sub_1C3C7D6D4(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1C3C9D200(0, v2, 0);
  uint64_t v6 = 0;
  uint64_t v36 = a2;
  uint64_t v37 = a1 + 32;
  uint64_t v34 = a2 + 32;
  int64_t v35 = v2;
  uint64_t result = v50;
  do
  {
    uint64_t v8 = *(void *)(v37 + 8 * v6);
    int64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v38 = result;
      uint64_t v39 = v6;
      swift_bridgeObjectRetain();
      sub_1C3C7E518(a2);
      uint64_t v46 = v3;
      sub_1C3C9D1E0(0, v9, 0);
      uint64_t v10 = v46;
      uint64_t v11 = v8 + 32;
      sub_1C3C7E584(v34, (uint64_t)v47);
      do
      {
        sub_1C3C7E584((uint64_t)v47, (uint64_t)&v48);
        if (v49)
        {
          uint64_t v12 = sub_1C3C7D080(v11);
          unint64_t v14 = v13;
        }
        else
        {
          uint64_t v15 = v48;
          uint64_t v16 = sub_1C3C7D080(v11);
          uint64_t v18 = v17;
          if (v15 < 1)
          {
            uint64_t v41 = 0;
            unint64_t v42 = 0xE000000000000000;
            sub_1C3DB9B58();
            sub_1C3DB9D68();
            uint64_t v45 = 0;
            sub_1C3DBB248();
            sub_1C3DB9D68();
            swift_bridgeObjectRelease();
            sub_1C3DB9B58();
          }
          else
          {
            uint64_t v19 = v16;
            if (qword_1EA385970 != -1) {
              swift_once();
            }
            uint64_t v20 = (void *)qword_1EA388790;
            uint64_t v21 = (void *)sub_1C3DB9BF8();
            uint64_t v40 = v19;
            if ((v18 & 0x1000000000000000) != 0) {
              uint64_t v22 = sub_1C3DB9DE8();
            }
            else {
              uint64_t v22 = sub_1C3DB9DF8();
            }
            uint64_t v23 = v22;
            uint64_t v24 = (void *)sub_1C3DB9BF8();
            id v25 = objc_msgSend(v20, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v21, 0, 0, v23, v24);

            sub_1C3DB9C38();
            uint64_t v26 = sub_1C3DB9D18();
            swift_bridgeObjectRelease();
            if (v15 >= v26)
            {
              uint64_t v41 = 0;
              unint64_t v42 = 0xE000000000000000;
              sub_1C3DB9B58();
              sub_1C3DB9D68();
              uint64_t v45 = 0;
              sub_1C3DBB248();
              sub_1C3DB9D68();
              swift_bridgeObjectRelease();
              sub_1C3DB9B58();
              uint64_t v41 = v40;
              unint64_t v42 = v18;
              swift_bridgeObjectRetain();
              sub_1C3DB9D68();
            }
            else
            {
              v43[0] = 0;
              v43[1] = 0xE000000000000000;
              long long v43[2] = 0;
              v43[3] = v15;
              char v44 = 0;
              swift_bridgeObjectRetain();
              sub_1C3D5DC74(v43, v40, v18, (uint64_t)&v41);
              uint64_t v27 = v41;
              unint64_t v28 = v42;
              uint64_t v41 = 0;
              unint64_t v42 = 0xE000000000000000;
              sub_1C3DB9B58();
              sub_1C3DB9D68();
              uint64_t v45 = 0;
              sub_1C3DBB248();
              sub_1C3DB9D68();
              swift_bridgeObjectRelease();
              sub_1C3DB9B58();
              uint64_t v41 = v27;
              unint64_t v42 = v28;
              swift_bridgeObjectRetain();
              sub_1C3DB9D68();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v12 = v41;
          unint64_t v14 = v42;
        }
        uint64_t v46 = v10;
        unint64_t v30 = *(void *)(v10 + 16);
        unint64_t v29 = *(void *)(v10 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1C3C9D1E0(v29 > 1, v30 + 1, 1);
          uint64_t v10 = v46;
        }
        *(void *)(v10 + 16) = v30 + 1;
        uint64_t v31 = v10 + 16 * v30;
        *(void *)(v31 + 32) = v12;
        *(void *)(v31 + 40) = v14;
        v11 += 32;
        --v9;
      }
      while (v9);
      a2 = v36;
      sub_1C3C7E550(v36);
      swift_bridgeObjectRelease();
      uint64_t v3 = MEMORY[0x1E4FBC860];
      int64_t v2 = v35;
      uint64_t result = v38;
      uint64_t v6 = v39;
    }
    else
    {
      uint64_t v10 = v3;
    }
    uint64_t v50 = result;
    unint64_t v33 = *(void *)(result + 16);
    unint64_t v32 = *(void *)(result + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1C3C9D200(v32 > 1, v33 + 1, 1);
      uint64_t result = v50;
    }
    ++v6;
    *(void *)(result + 16) = v33 + 1;
    *(void *)(result + 8 * v33 + 32) = v10;
  }
  while (v6 != v2);
  return result;
}

uint64_t sub_1C3C7DC14(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1C3C9D1E0(0, v2, 0);
  uint64_t v3 = v24;
  uint64_t v6 = a1 + 32;
  sub_1C3C7E584(a2 + 32, (uint64_t)v21);
  while (1)
  {
    sub_1C3C7E584((uint64_t)v21, (uint64_t)&v22);
    if (v23)
    {
      uint64_t v7 = sub_1C3C7D080(v6);
      unint64_t v9 = v8;
      goto LABEL_10;
    }
    uint64_t v10 = v22;
    uint64_t v11 = sub_1C3C7D080(v6);
    unint64_t v9 = v12;
    if (v10 < 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      unint64_t v9 = 0xE000000000000000;
      goto LABEL_10;
    }
    uint64_t v7 = v11;
    if (v10 < sub_1C3DB9D18()) {
      break;
    }
LABEL_10:
    uint64_t v24 = v3;
    unint64_t v19 = *(void *)(v3 + 16);
    unint64_t v18 = *(void *)(v3 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1C3C9D1E0(v18 > 1, v19 + 1, 1);
      uint64_t v3 = v24;
    }
    *(void *)(v3 + 16) = v19 + 1;
    uint64_t v20 = v3 + 16 * v19;
    *(void *)(v20 + 32) = v7;
    *(void *)(v20 + 40) = v9;
    v6 += 32;
    if (!--v2) {
      return v3;
    }
  }
  swift_bridgeObjectRetain();
  sub_1C3D5F1C8(v10 - 1);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_ic_ellipsisCharacterString);
  sub_1C3DB9C38();

  uint64_t v14 = sub_1C3DB9D18();
  uint64_t v15 = sub_1C3DBA978();
  BOOL v16 = __OFADD__(v14, v15);
  uint64_t result = v14 + v15;
  if (!v16)
  {
    MEMORY[0x1C877B1F0](result);
    sub_1C3C7E654();
    sub_1C3DB9D48();
    sub_1C3DB9D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C7DE74(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C3C9D250(0, v4, 0);
    uint64_t v5 = v15;
    for (unint64_t i = (uint64_t *)(a1 + 32); ; ++i)
    {
      uint64_t v13 = *i;
      swift_bridgeObjectRetain();
      sub_1C3C7C47C(&v13, a2, &v14);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      swift_bridgeObjectRelease();
      uint64_t v9 = v14;
      uint64_t v15 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C3C9D250(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v15;
      }
      *(void *)(v5 + 16) = v11 + 1;
      *(void *)(v5 + 8 * v11 + 32) = v9;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_1C3C7DF90()
{
  unint64_t result = qword_1EA386C80;
  if (!qword_1EA386C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386C78);
    sub_1C3C7E004();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386C80);
  }
  return result;
}

unint64_t sub_1C3C7E004()
{
  unint64_t result = qword_1EA386C88;
  if (!qword_1EA386C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386C88);
  }
  return result;
}

unint64_t sub_1C3C7E074()
{
  unint64_t result = qword_1EA386C98;
  if (!qword_1EA386C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386C98);
  }
  return result;
}

uint64_t sub_1C3C7E0C8()
{
  return sub_1C3C4BDB4(&qword_1EA386CA0, &qword_1EA386CA8);
}

unint64_t sub_1C3C7E104(uint64_t a1)
{
  unint64_t result = sub_1C3C7E12C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C3C7E12C()
{
  unint64_t result = qword_1EA386CB0;
  if (!qword_1EA386CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386CB0);
  }
  return result;
}

uint64_t destroy for TableFormat()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TableFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TableFormat(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TableFormat(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableFormat(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableFormat(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableFormat()
{
  return &type metadata for TableFormat;
}

unsigned char *storeEnumTagSinglePayload for TableFormat.Formats(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C7E478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableFormat.Formats()
{
  return &type metadata for TableFormat.Formats;
}

uint64_t dispatch thunk of TableFormattable.tableCellDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1C3C7E4C4()
{
  unint64_t result = qword_1EA386CB8;
  if (!qword_1EA386CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386CB8);
  }
  return result;
}

uint64_t sub_1C3C7E518(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C3C7E550(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C3C7E584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C7E5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C3C7E654()
{
  unint64_t result = qword_1EA386E50;
  if (!qword_1EA386E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386E50);
  }
  return result;
}

uint64_t sub_1C3C7E6A8()
{
  return swift_getAtPartialKeyPath();
}

uint64_t sub_1C3C7E6DC()
{
  return swift_getAtPartialKeyPath();
}

uint64_t LinkSuggestion.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.systemImageName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.timeStamp.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.noteIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.noteCachedTrimmedTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LinkSuggestion.isNewNoteSuggestion.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t LinkSuggestion.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LinkSuggestion() + 40);
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LinkSuggestion()
{
  uint64_t result = qword_1EB6FB868;
  if (!qword_1EB6FB868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LinkSuggestion.init(text:timeStamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for LinkSuggestion();
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(unsigned char *)(a5 + 80) = 0;
  uint64_t result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 32) = a3;
  *(void *)(a5 + 40) = a4;
  return result;
}

void LinkSuggestion.init(note:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - v12;
  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  id v14 = objc_msgSend(a1, sel_titleForLinking);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_1C3DB9C38();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v18;
  id v19 = objc_msgSend(a1, sel_identifier);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_1C3DB9C38();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v23;
  id v24 = objc_msgSend(a1, sel_modificationDate);
  if (v24)
  {
    id v25 = v24;
    sub_1C3DB8AC8();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
  }
  sub_1C3C49904((uint64_t)v11, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_1C3C37744((uint64_t)v13);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    sub_1C3C37744((uint64_t)v13);
    uint64_t v26 = sub_1C3DB89A8();
    uint64_t v27 = v28;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v27;
  id v29 = objc_msgSend(a1, sel_trimmedTitle);
  uint64_t v30 = sub_1C3DB9C38();
  uint64_t v32 = v31;

  swift_bridgeObjectRelease();
  *(void *)(a2 + 64) = v30;
  *(void *)(a2 + 72) = v32;
  if (objc_msgSend(a1, sel_isSharedViaICloud))
  {

    unint64_t v33 = 0x80000001C3DF4EA0;
    unint64_t v34 = 0xD000000000000012;
  }
  else
  {
    unsigned int v35 = objc_msgSend(a1, sel_isPasswordProtected);

    if (!v35) {
      return;
    }
    unint64_t v33 = 0xE90000000000006CLL;
    unint64_t v34 = 0x6C69662E6B636F6CLL;
  }
  swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v33;
}

double LinkSuggestion.init(url:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(unsigned char *)(a2 + 80) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(void *)a2 = sub_1C3DB87E8();
  *(void *)(a2 + 8) = v4;
  uint64_t v5 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  swift_bridgeObjectRelease();
  *(void *)&double result = 0x65626F6C67;
  *(_OWORD *)(a2 + 16) = xmmword_1C3DD6470;
  return result;
}

double LinkSuggestion.init(textForNewNoteSuggestion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for LinkSuggestion();
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  double result = 1.35426987e243;
  *(_OWORD *)(a3 + 16) = xmmword_1C3DD6480;
  *(unsigned char *)(a3 + 80) = 1;
  return result;
}

uint64_t LinkSuggestion.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  if (v0[3])
  {
    sub_1C3DBB5F8();
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
    if (v0[5]) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1C3DBB5F8();
    if (v0[5])
    {
LABEL_3:
      sub_1C3DBB5F8();
      swift_bridgeObjectRetain();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      if (v0[7]) {
        goto LABEL_4;
      }
LABEL_8:
      sub_1C3DBB5F8();
      if (v0[9]) {
        goto LABEL_5;
      }
LABEL_9:
      sub_1C3DBB5F8();
      return sub_1C3DBB5F8();
    }
  }
  sub_1C3DBB5F8();
  if (!v0[7]) {
    goto LABEL_8;
  }
LABEL_4:
  sub_1C3DBB5F8();
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  if (!v0[9]) {
    goto LABEL_9;
  }
LABEL_5:
  sub_1C3DBB5F8();
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB5F8();
}

void __swiftcall LinkSuggestion.completionSuggestionsItem()(ICAutoCompleteSuggestionsItem *__return_ptr retstr)
{
  if (*(void *)(v1 + 24))
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_systemImageNamed_, v2);
  }
  else
  {
    id v18 = 0;
  }
  uint64_t v3 = LinkSuggestion.displayText.getter();
  uint64_t v16 = v4;
  uint64_t v17 = (uint64_t)v3;
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  type metadata accessor for LinkSuggestion();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C3DB8B28();
  uint64_t v11 = v10;
  char v12 = *(unsigned char *)(v1 + 80);
  uint64_t v14 = *(void *)(v1 + 48);
  uint64_t v13 = *(void *)(v1 + 56);
  id v15 = objc_allocWithZone((Class)ICAutoCompleteSuggestionsItem);
  swift_bridgeObjectRetain();
  sub_1C3C7F41C(v17, v16, v5, v6, v7, v8, v9, v11, 0, 0, v12, v18, v14, v13, 0);
}

char *LinkSuggestion.displayText.getter()
{
  if (*(unsigned char *)(v0 + 80) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    uint64_t v3 = *(char **)v0;
    uint64_t v2 = *(void *)(v0 + 8);
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 64) = sub_1C3C4C74C();
    *(void *)(inited + 32) = v3;
    *(void *)(inited + 40) = v2;
    uint64_t v4 = self;
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_1C3DB9BF8();
    id v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

    uint64_t v7 = sub_1C3DB9C38();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3C7F710(inited, v7, v9);
    swift_bridgeObjectRelease_n();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v10 = *(char **)v0;
    swift_bridgeObjectRetain();
  }
  return v10;
}

void LinkSuggestion.init(autocompleteSuggestionItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LinkSuggestion();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  id v4 = objc_msgSend(a1, sel_shortText);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C3DB9C38();
    uint64_t v8 = v7;

    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    id v9 = objc_msgSend(a1, sel_rightText);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1C3DB9C38();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    *(void *)(a2 + 32) = v11;
    *(void *)(a2 + 40) = v13;
    id v14 = objc_msgSend(a1, sel_parentNoteIdentifier);
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = sub_1C3DB9C38();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    *(void *)(a2 + 48) = v16;
    *(void *)(a2 + 56) = v18;
    *(void *)(a2 + 64) = 0;
    *(void *)(a2 + 72) = 0;
    unsigned __int8 v19 = objc_msgSend(a1, sel_isCreationSuggestion);

    *(unsigned char *)(a2 + 80) = v19;
  }
  else
  {
    __break(1u);
  }
}

uint64_t LinkSuggestion.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C7F328()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C7F36C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C7F3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

id sub_1C3C7F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  uint64_t v26 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v18 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    unsigned __int8 v19 = 0;
    uint64_t v20 = a14;
    if (a8) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v18 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned __int8 v19 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  uint64_t v20 = a14;
  if (a8)
  {
LABEL_4:
    uint64_t v21 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v21 = 0;
LABEL_8:
  if (v20)
  {
    uint64_t v22 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = 0;
  }
  LOBYTE(v25) = a11 & 1;
  id v23 = objc_msgSend(v27, sel_initWithDisplayText_shortText_rightText_uuidString_isEmptyPlaceholder_isSectionHeader_isCreationSuggestion_iconImage_parentNoteIdentifier_representedObject_, v26, v18, v19, v21, a9 & 1, a10 & 1, v25, a12, v22, a15);

  return v23;
}

uint64_t _s11NotesShared14LinkSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (sub_1C3DBB3B8() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v5 == v6;
    if (!v7 && (sub_1C3DBB3B8() & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a2 + 40);
  if (v8)
  {
    if (!v9 || (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v8 != v9) && (sub_1C3DBB3B8() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a2 + 56);
  if (v10)
  {
    if (!v11 || (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v10 != v11) && (sub_1C3DBB3B8() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a2 + 72);
  if (!v12)
  {
    if (!v13) {
      goto LABEL_36;
    }
    return 0;
  }
  if (!v13 || (*(void *)(a1 + 64) != *(void *)(a2 + 64) || v12 != v13) && (sub_1C3DBB3B8() & 1) == 0) {
    return 0;
  }
LABEL_36:
  if (*(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80)) {
    return 0;
  }
  type metadata accessor for LinkSuggestion();
  return sub_1C3DB8B48();
}

char *sub_1C3C7F710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C3DBAED8();
  BOOL v4 = (void *)swift_allocObject();
  v4[2] = 8;
  v4[3] = 0;
  uint64_t v5 = v4 + 3;
  v4[4] = 0;
  v4[5] = 0;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    uint64_t v22 = sub_1C3DBAEC8();
    sub_1C3C801B0();
    uint64_t v28 = sub_1C3DB8C48();
    __swift_allocate_boxed_opaque_existential_1(v27);
    swift_bridgeObjectRetain();
    sub_1C3DB8BF8();
    id v23 = sub_1C3D2F5D8(a2, a3, v27, v22);
    uint64_t v24 = sub_1C3DB9C38();
    swift_release();

    return (char *)v24;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    sub_1C3C49A14(v8 + 40 * v7, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    double result = (char *)sub_1C3DBB698();
    uint64_t v10 = *v5;
    uint64_t v11 = *((void *)result + 2);
    BOOL v12 = __OFADD__(*v5, v11);
    uint64_t v13 = *v5 + v11;
    if (v12) {
      break;
    }
    id v14 = result;
    uint64_t v15 = v4[4];
    if (v15 >= v13) {
      goto LABEL_18;
    }
    if (v15 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    uint64_t v16 = (char *)v4[5];
    if (2 * v15 > v13) {
      uint64_t v13 = 2 * v15;
    }
    v4[4] = v13;
    if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    double result = (char *)swift_slowAlloc();
    v4[5] = result;
    if (v16)
    {
      if (result != v16 || result >= &v16[8 * v10]) {
        memmove(result, v16, 8 * v10);
      }
      sub_1C3DBAEB8();
LABEL_18:
      double result = (char *)v4[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v18 = *((void *)v14 + 2);
    if (v18)
    {
      unsigned __int8 v19 = (uint64_t *)(v14 + 32);
      uint64_t v20 = *v5;
      while (1)
      {
        uint64_t v21 = *v19++;
        *(void *)&result[8 * v20] = v21;
        uint64_t v20 = *v5 + 1;
        if (__OFADD__(*v5, 1)) {
          break;
        }
        *uint64_t v5 = v20;
        if (!--v18) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    if (v7 == v6) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C3C7F94C()
{
  return sub_1C3C7F9DC(&qword_1EA386CF8, (void (*)(uint64_t))type metadata accessor for LinkSuggestion);
}

uint64_t sub_1C3C7F994()
{
  return sub_1C3C7F9DC((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
}

uint64_t sub_1C3C7F9DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LinkSuggestion(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v16 = (uint64_t)a2 + v10;
    uint64_t v11 = a1 + v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = sub_1C3DB8B98();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v16, v12);
  }
  return v3;
}

uint64_t destroy for LinkSuggestion(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v14 = a2 + v9;
  uint64_t v10 = a1 + v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = sub_1C3DB8B98();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v14, v11);
  return a1;
}

uint64_t assignWithCopy for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t assignWithTake for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3C7FF94);
}

uint64_t sub_1C3C7FF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C3DB8B98();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LinkSuggestion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3C80058);
}

uint64_t sub_1C3C80058(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C3DB8B98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3C80100()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C3C801B0()
{
  unint64_t result = qword_1EA386240;
  if (!qword_1EA386240)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA386240);
  }
  return result;
}

uint64_t NSManagedObjectContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C3C80218, 0, 0);
}

uint64_t sub_1C3C80218()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  *(void *)(v6 + 16) = v1;
  id v7 = v2;
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C3C60EC0;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[2];
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v10, (uint64_t)sub_1C3C8047C, (uint64_t)v5, (uint64_t)sub_1C3C61330, v6, v9);
}

void sub_1C3C80344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a5;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v12[4] = sub_1C3C808A4;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C3C9FDCC;
  uint64_t v12[3] = &block_descriptor_3;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_performBlock_, v11);
  _Block_release(v11);
}

uint64_t sub_1C3C8043C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C3C8047C(uint64_t a1)
{
  sub_1C3C80344(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

uint64_t sub_1C3C80488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v14 - v11;
  v10();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  sub_1C3CD0790((uint64_t)v9, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, a4);
}

uint64_t NSManagedObjectContext.ic_save(withLogDescription:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = v3;
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1C3C80668(a3, v5);

  swift_bridgeObjectRelease();
  return a3 & 1;
}

char *sub_1C3C80668(uint64_t a1, void *a2)
{
  sub_1C3DBAED8();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 8;
  v3[3] = 0;
  uint64_t v4 = v3 + 3;
  v3[4] = 0;
  v3[5] = 0;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_25:
    uint64_t v21 = sub_1C3DBAEC8();
    uint64_t v22 = (void *)sub_1C3DB9BF8();
    id v23 = objc_msgSend(a2, sel_ic_saveWithLogDescription_arguments_, v22, v21);
    swift_release();

    return (char *)v23;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  while (1)
  {
    sub_1C3C49A14(v7 + 40 * v6, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    unint64_t result = (char *)sub_1C3DBB698();
    uint64_t v9 = *v4;
    uint64_t v10 = *((void *)result + 2);
    BOOL v11 = __OFADD__(*v4, v10);
    uint64_t v12 = *v4 + v10;
    if (v11) {
      break;
    }
    uint64_t v13 = result;
    uint64_t v14 = v3[4];
    if (v14 >= v12) {
      goto LABEL_18;
    }
    if (v14 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    uint64_t v15 = (char *)v3[5];
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    v3[4] = v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    unint64_t result = (char *)swift_slowAlloc();
    v3[5] = result;
    if (v15)
    {
      if (result != v15 || result >= &v15[8 * v9]) {
        memmove(result, v15, 8 * v9);
      }
      sub_1C3DBAEB8();
LABEL_18:
      unint64_t result = (char *)v3[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v17 = *((void *)v13 + 2);
    if (v17)
    {
      uint64_t v18 = (uint64_t *)(v13 + 32);
      uint64_t v19 = *v4;
      while (1)
      {
        uint64_t v20 = *v18++;
        *(void *)&result[8 * v19] = v20;
        uint64_t v19 = *v4 + 1;
        if (__OFADD__(*v4, 1)) {
          break;
        }
        *uint64_t v4 = v19;
        if (!--v17) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v6;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    if (v6 == v5) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C3C8086C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C808A4()
{
  return sub_1C3C80488(v0[3], v0[4], v0[5], v0[2]);
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnDawnE(at:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386D08);
  uint64_t v0 = sub_1C3DB9838();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DD5130;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E4F59CC0], v0);
  v6(v5 + v2, *MEMORY[0x1E4F59CC8], v0);
  char v7 = sub_1C3DB9858();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnDawnA(at:)()
{
  return sub_1C3C80A18();
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnSydneyB(at:)()
{
  return sub_1C3C80A18();
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnSydneyA(at:)()
{
  return sub_1C3C80A18();
}

uint64_t sub_1C3C80A18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386D08);
  uint64_t v0 = sub_1C3DB9838();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DD5130;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E4F59CC0], v0);
  v6(v5 + v2, *MEMORY[0x1E4F59CC8], v0);
  char v7 = sub_1C3DB9858();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaperOnPreSydney(at:)()
{
  return sub_1C3DB9878() & 1;
}

uint64_t static ICAttachmentSystemPaperModelHelper.canDisplayPaper(at:)()
{
  return sub_1C3DB9868() & 1;
}

id ICAttachmentSystemPaperModelHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ICAttachmentSystemPaperModelHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICAttachmentSystemPaperModelHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICAttachmentSystemPaperModelHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICAttachmentSystemPaperModelHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared34ICAttachmentSystemPaperModelHelperC016minimumSupporteda10VersionForE02at04baseJ0So07ICNotesJ0V10Foundation3URLV_AHtFZ_0(uint64_t a1, uint64_t a2)
{
  if (a2 < 7)
  {
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v2 = a2;
  if ((unint64_t)a2 > 0xF)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  if (a2 == 15) {
    return 15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386D08);
  uint64_t v3 = sub_1C3DB9838();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
  unint64_t v8 = v7 + v6;
  uint64_t v9 = *(void (**)(unint64_t))(v4 + 104);
  unsigned int v21 = *MEMORY[0x1E4F59CC0];
  v9(v7 + v6);
  uint64_t v10 = v8 + v5;
  uint64_t v11 = *MEMORY[0x1E4F59CC8];
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v10, v11, v3);
  char v12 = sub_1C3DB9858();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 15;
  }
  if (v2 <= 0xD)
  {
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C3DD5130;
    unint64_t v14 = v13 + v6;
    ((void (*)(unint64_t, void, uint64_t))v9)(v13 + v6, v21, v3);
    ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v14 + v5, v11, v3);
    LOBYTE(v14) = sub_1C3DB9858();
    swift_bridgeObjectRelease();
    if (v14)
    {
      if (v2 <= 0xC)
      {
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1C3DD5130;
        unint64_t v16 = v15 + v6;
        ((void (*)(unint64_t, void, uint64_t))v9)(v15 + v6, v21, v3);
        ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v16 + v5, v11, v3);
        LOBYTE(v16) = sub_1C3DB9858();
        swift_bridgeObjectRelease();
        if (v16)
        {
          if (v2 <= 9)
          {
            uint64_t v17 = swift_allocObject();
            *(_OWORD *)(v17 + 16) = xmmword_1C3DD5130;
            unint64_t v18 = v17 + v6;
            ((void (*)(unint64_t, void, uint64_t))v9)(v18, v21, v3);
            ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v18 + v5, v11, v3);
            char v19 = sub_1C3DB9858();
            swift_bridgeObjectRelease();
            if (v19)
            {
              if (v2 <= 8 && (sub_1C3DB9878() & 1) == 0) {
                return 9;
              }
            }
            else
            {
              return 10;
            }
          }
        }
        else
        {
          return 13;
        }
      }
    }
    else
    {
      return 14;
    }
  }
  return v2;
}

uint64_t type metadata accessor for ICAttachmentSystemPaperModelHelper()
{
  return self;
}

unint64_t sub_1C3C811E0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB0);
  unint64_t v2 = (void *)sub_1C3DBAFE8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C3C2A4F8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    char v12 = (void *)(v2[7] + 16 * result);
    *char v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81304(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E48);
  uint64_t v6 = sub_1C3DBAFE8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EA386E40);
    unint64_t result = sub_1C3D03D64((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1C3DBAF28();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_1C3C2A5D8(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81504(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E60);
  uint64_t v2 = (void *)sub_1C3DBAFE8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1C3C2A4F8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81620(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA385B30);
  uint64_t v2 = sub_1C3DBAFE8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v6, (uint64_t)&v15, (uint64_t *)&unk_1EA386E20);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C3C2A4F8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C3C2A5D8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81758(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E80);
  uint64_t v6 = sub_1C3DBAFE8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EA386E78);
    unint64_t result = sub_1C3D03C24((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    unint64_t result = sub_1C3C8E7E4((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81934(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E70);
  uint64_t v6 = sub_1C3DBAFE8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EA386E68);
    unint64_t result = sub_1C3D03C24((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    unint64_t result = sub_1C3C8E7E4((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81B10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E08);
  uint64_t v2 = sub_1C3DBAFE8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v6, (uint64_t)&v13, (uint64_t *)&unk_1EA386E10);
    uint64_t v7 = v13;
    unint64_t result = sub_1C3D03E0C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1C3C2A5D8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81C40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386DF8);
  uint64_t v2 = (void *)sub_1C3DBAFE8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C3D03E0C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81D4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC038);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC370);
  uint64_t v6 = sub_1C3DBAFE8();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EB6FC038);
    unint64_t result = sub_1C3D03EA0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1C3DB88F8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C81F40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC040);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC378);
  uint64_t v6 = sub_1C3DBAFE8();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, (uint64_t *)&unk_1EB6FC040);
    unint64_t result = sub_1C3D03EA0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1C3DB88F8();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = sub_1C3C8E764(v9, v7[7] + 40 * v16);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C82140(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DE8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DF0);
  uint64_t v6 = sub_1C3DBAFE8();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EA386DE8);
    unint64_t result = sub_1C3D03C90((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1C3DB8B98();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C3C82334(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DE0);
  uint64_t v6 = sub_1C3DBAFE8();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C3C8E848(v12, (uint64_t)v5, &qword_1EA386DD8);
    uint64_t v14 = *v5;
    unint64_t result = sub_1C3D03F74(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v7[6] + 8 * result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = sub_1C3DB88F8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    void v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ArgumentDecoder.optionPrefix.getter()
{
  return 11565;
}

uint64_t static ArgumentDecoder.escapeCharacter.getter()
{
  return 92;
}

uint64_t static ArgumentDecoder.separatorCharacter.getter()
{
  return 44;
}

uint64_t sub_1C3C82550()
{
  type metadata accessor for ArgumentDecoder();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v0 + 16) = 0;
  off_1EA386D10 = (_UNKNOWN *)v0;
  return result;
}

uint64_t ArgumentDecoder.__allocating_init(usesDefaultValueIfMissing:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 0;
  swift_beginAccess();
  *(unsigned char *)(v2 + 16) = a1;
  return v2;
}

uint64_t static ArgumentDecoder.shared.getter()
{
  if (qword_1EA385838 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t ArgumentDecoder.usesDefaultValueIfMissing.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArgumentDecoder.usesDefaultValueIfMissing.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ArgumentDecoder.usesDefaultValueIfMissing.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ArgumentDecoder.init(usesDefaultValueIfMissing:)(char a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t ArgumentDecoder.decode<A>(_:from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a1;
  uint64_t v43 = a5;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1C3C811E0(MEMORY[0x1E4FBC860]);
  *(void *)&long long v51 = v8;
  *((void *)&v51 + 1) = v9;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  LOBYTE(v54) = 0;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v60 = v5;
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unsigned __int8 v13 = 0;
    uint64_t v41 = a2;
    uint64_t v14 = (uint64_t *)(a2 + 40);
    uint64_t v40 = v9;
    do
    {
      uint64_t v15 = *v14;
      v46[0] = *(v14 - 1);
      v46[1] = v15;
      swift_bridgeObjectRetain();
      sub_1C3C82D68((uint64_t)&v51, v46, (uint64_t)&v47);
      swift_bridgeObjectRelease();
      sub_1C3C83618(v8, v9, v11, v12, v13);
      unint64_t v9 = *((void *)&v47 + 1);
      uint64_t v8 = v47;
      uint64_t v11 = v48;
      uint64_t v12 = v49;
      unsigned __int8 v13 = v50;
      long long v51 = v47;
      uint64_t v52 = v48;
      uint64_t v53 = v49;
      LOBYTE(v54) = v50;
      v14 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v60;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unsigned __int8 v13 = 0;
  }
  uint64_t v55 = v8;
  unint64_t v56 = v9;
  uint64_t v57 = v11;
  uint64_t v58 = v12;
  unsigned __int8 v59 = v13;
  char v16 = (void *)sub_1C3C82C9C();
  uint64_t v18 = v17;
  sub_1C3C83618(v8, v9, v11, v12, v13);
  uint64_t v19 = (uint64_t)v45;
  uint64_t v20 = swift_conformsToProtocol2();
  if (v20) {
    unint64_t v21 = v20;
  }
  else {
    unint64_t v21 = 0;
  }
  if (!v20) {
    uint64_t v19 = 0;
  }
  if (v19)
  {
    if (v16[2])
    {
      uint64_t v41 = v18;
      uint64_t v22 = v16[4];
      uint64_t v23 = v16[5];
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v21 + 24);
      uint64_t v45 = &v40;
      uint64_t v40 = sub_1C3DBA938();
      uint64_t v25 = *(void *)(v40 - 8);
      MEMORY[0x1F4188790](v40);
      uint64_t v27 = (char *)&v40 - v26;
      swift_bridgeObjectRetain();
      v24(v22, v23, v19, v21);
      uint64_t v28 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v19) != 1)
      {
        uint64_t v49 = v19;
        unint64_t v50 = v21;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
        (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(boxed_opaque_existential_1, v27, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C3C4C684(&v47, (uint64_t)&v51);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v40);
      uint64_t v6 = v60;
      uint64_t v18 = v41;
    }
    swift_beginAccess();
    if (*(unsigned char *)(v6 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v29 = *(void (**)(uint64_t, unint64_t))(v21 + 16);
      uint64_t v53 = v19;
      unint64_t v54 = v21;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
      v29(v19, v21);
LABEL_19:
      uint64_t v35 = v53;
      uint64_t v36 = __swift_project_boxed_opaque_existential_1(&v51, v53);
      uint64_t v49 = v35;
      uint64_t v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v37, v36, v35);
      castOrFatalError<A>(_:as:)((uint64_t)&v47, v44, v44, v43);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v51);
    }
    uint64_t v31 = type metadata accessor for ArgumentDecoder.Decoder();
    uint64_t v32 = swift_allocObject();
    uint64_t v39 = MEMORY[0x1E4FBC860];
    *(void *)(v32 + 40) = MEMORY[0x1E4FBC860];
    *(void *)(v32 + 48) = sub_1C3C81304(v39);
    *(void *)(v32 + 16) = v16;
    *(void *)(v32 + 24) = v18;
    *(unsigned char *)(v32 + 32) = 0;
  }
  else
  {
    swift_beginAccess();
    char v30 = *(unsigned char *)(v6 + 16);
    uint64_t v31 = type metadata accessor for ArgumentDecoder.Decoder();
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    *(void *)(v32 + 40) = MEMORY[0x1E4FBC860];
    *(void *)(v32 + 48) = sub_1C3C81304(v33);
    *(void *)(v32 + 16) = v16;
    *(void *)(v32 + 24) = v18;
    *(unsigned char *)(v32 + 32) = v30;
  }
  uint64_t v53 = v31;
  unint64_t v54 = sub_1C3C836BC();
  *(void *)&long long v51 = v32;
  return sub_1C3DBA418();
}

uint64_t ArgumentDecoder.deinit()
{
  return v0;
}

uint64_t ArgumentDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C82C9C()
{
  sub_1C3C8E7CC(v0, (uint64_t)v6);
  if (!v8)
  {
    uint64_t v3 = v6[0];
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v3;
  }
  if (v8 != 1)
  {
    uint64_t v3 = v7;
    goto LABEL_6;
  }
  uint64_t v1 = v6[0];
  uint64_t v2 = v6[1];
  uint64_t v3 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C3D056D8(1702195828, 0xE400000000000000, v1, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C3C82D68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v10 = *(void *)(a1 + 16);
    unint64_t v9 = *(void *)(a1 + 24);
    if (*(unsigned char *)(a1 + 32) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1C3DB9E28() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v70 = v9;
        sub_1C3D056D8(v8, v7, (uint64_t)v6, v5, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a3 = v6;
        *(void *)(a3 + 8) = v5;
        *(void *)(a3 + 16) = v10;
        *(void *)(a3 + 24) = v9;
        *(unsigned char *)(a3 + 32) = 2;
        return result;
      }
      uint64_t v68 = v10;
      char v11 = swift_isUniquelyReferenced_nonNull_native();
      sub_1C3D056D8(1702195828, 0xE400000000000000, (uint64_t)v6, v5, v11);
      unint64_t v12 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1C3DB9D18();
      unint64_t v14 = sub_1C3CD2318(v13, v8, v7);
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      unint64_t v70 = v14;
      uint64_t v71 = v16;
      uint64_t v72 = v18;
      uint64_t v73 = v20;
      sub_1C3C7E654();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C3DB9E78();
      uint64_t v23 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v21, v22);
      if (!v3)
      {
        sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v23, v24);
        swift_bridgeObjectRelease();
        sub_1C3DB9C98();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = sub_1C3DB9C98();
        uint64_t v27 = v26;
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a3 = v25;
        *(void *)(a3 + 8) = v27;
        *(void *)(a3 + 16) = v68;
        *(void *)(a3 + 24) = v12;
        *(unsigned char *)(a3 + 32) = 1;
        return result;
      }
      goto LABEL_22;
    }
    uint64_t v74 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v69 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1C3DB9E28())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_1C3DB9D18();
      unint64_t v46 = sub_1C3CD2318(v45, v8, v7);
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      unint64_t v70 = v46;
      uint64_t v71 = v48;
      uint64_t v72 = v50;
      uint64_t v73 = v52;
      sub_1C3C7E654();
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C3DB9E78();
      uint64_t v55 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v53, v54);
      if (!v3)
      {
        sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v55, v56);
        swift_bridgeObjectRelease();
        sub_1C3DB9C98();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = sub_1C3DB9C98();
        uint64_t v59 = v58;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v60 = v74;
        *(void *)a3 = v57;
        *(void *)(a3 + 8) = v59;
        *(void *)(a3 + 16) = v10;
        *(void *)(a3 + 24) = v60;
        *(unsigned char *)(a3 + 32) = 1;
        return result;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRetain();
    unint64_t v65 = sub_1C3C83710(&v70, (uint64_t)v6, v5);
    if (*(void *)(v66 + 8))
    {
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
    }
    ((void (*)(unint64_t *, void))v65)(&v70, 0);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v67 = v74;
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v5;
    *(void *)(a3 + 16) = v69;
    *(void *)(a3 + 24) = v67;
    char v44 = 2;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1C3DB9E28())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1C3DB9D18();
    unint64_t v30 = sub_1C3CD2318(v29, v8, v7);
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    unint64_t v70 = v30;
    uint64_t v71 = v32;
    uint64_t v72 = v34;
    uint64_t v73 = v36;
    sub_1C3C7E654();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C3DB9E78();
    uint64_t v39 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v37, v38);
    if (v3)
    {
LABEL_22:
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
      sub_1C3DBAEE8();
      sub_1C3DB9D68();
      uint64_t result = sub_1C3DBAF58();
      __break(1u);
      return result;
    }
    sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v39, v40);
    swift_bridgeObjectRelease();
    sub_1C3DB9C98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1C3DB9C98();
    uint64_t v43 = v42;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = v41;
    *(void *)(a3 + 8) = v43;
    *(void *)(a3 + 16) = v6;
    *(void *)(a3 + 24) = v5;
    char v44 = 1;
LABEL_21:
    *(unsigned char *)(a3 + 32) = v44;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C3D8288C(0, v6[2] + 1, 1, v6);
    uint64_t v6 = (void *)result;
  }
  unint64_t v63 = v6[2];
  unint64_t v62 = v6[3];
  if (v63 >= v62 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C3D8288C((void *)(v62 > 1), v63 + 1, 1, v6);
    uint64_t v6 = (void *)result;
  }
  void v6[2] = v63 + 1;
  uint64_t v64 = &v6[2 * v63];
  v64[4] = v8;
  v64[5] = v7;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_1C3C83618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 2)
  {
    if (a5) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ArgumentDecoder.Decoder()
{
  return self;
}

unint64_t sub_1C3C836BC()
{
  unint64_t result = qword_1EA386D18;
  if (!qword_1EA386D18)
  {
    type metadata accessor for ArgumentDecoder.Decoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386D18);
  }
  return result;
}

void (*sub_1C3C83710(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C3C8D864(v6, a2, a3);
  return sub_1C3C83790;
}

void sub_1C3C83790(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t ArgumentDecoder.Decoder.usesDefaultValueIfMissing.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ArgumentDecoder.Decoder.usesDefaultValueIfMissing.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ArgumentDecoder.Decoder.usesDefaultValueIfMissing.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ArgumentDecoder.Decoder.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentDecoder.Decoder.codingPath.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ArgumentDecoder.Decoder.codingPath.modify())()
{
  return j__swift_endAccess;
}

uint64_t ArgumentDecoder.Decoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentDecoder.Decoder.container<A>(keyedBy:)@<X0>(uint64_t a1@<X8>)
{
  v12[11] = a1;
  uint64_t v2 = sub_1C3DBAD68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 40);
  if (!*(void *)(v6 + 16))
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    unint64_t v7 = sub_1C3C811E0(MEMORY[0x1E4FBC860]);
    uint64_t v6 = *(void *)(v1 + 40);
LABEL_5:
    v12[1] = v1;
    v12[2] = v6;
    uint64_t v12[3] = v7;
    type metadata accessor for ArgumentDecoder.KeyedContainer();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    return sub_1C3DBB138();
  }
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v9 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v10, v5, v2);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x1E4FBBA78], v9);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for ArgumentDecoder.KeyedContainer()
{
  return __swift_instantiateGenericMetadata();
}

void *ArgumentDecoder.Decoder.unkeyedContainer()@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v4 = sub_1C3C83CE0(v3);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C3C8DCAC(v1, v3, v4, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  a1[3] = &type metadata for ArgumentDecoder.UnkeyedContainer;
  a1[4] = sub_1C3C8DF7C();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = v7;
  result[3] = v9;
  result[4] = v11;
  result[5] = v13;
  return result;
}

uint64_t sub_1C3C83CE0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C3C49A14(a1 + 32, (uint64_t)v14);
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    sub_1C3DBB758();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DB9E78();
    uint64_t v4 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v2, v3);
    sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v4, v5);
    swift_bridgeObjectRelease();
    sub_1C3DB9C98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1C3DB9C98();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v1 + 24);
    if (*(void *)(v9 + 16) && (unint64_t v10 = sub_1C3C2A4F8(v6, v8), (v11 & 1) != 0))
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 16 * v10);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  }
  else if (*(void *)(*(void *)(v1 + 16) + 16))
  {
    v14[0] = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
    uint64_t v12 = sub_1C3DB9B88();
    swift_bridgeObjectRelease();
  }
  else
  {
    return 0;
  }
  return v12;
}

void *ArgumentDecoder.Decoder.singleValueContainer()@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v4 = sub_1C3C83CE0(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for ArgumentDecoder.SingleValueContainer;
  a1[4] = sub_1C3C8E018();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = v1;
  result[3] = v3;
  result[4] = v4;
  result[5] = v6;
  return result;
}

uint64_t ArgumentDecoder.Decoder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArgumentDecoder.Decoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C84164()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C841A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C841B4@<X0>(uint64_t a1@<X8>)
{
  return ArgumentDecoder.Decoder.container<A>(keyedBy:)(a1);
}

void *sub_1C3C841D8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v5 = sub_1C3C83CE0(v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1C3C8DCAC(v3, v4, v5, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  a1[3] = &type metadata for ArgumentDecoder.UnkeyedContainer;
  a1[4] = sub_1C3C8DF7C();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = v8;
  result[3] = v10;
  result[4] = v12;
  result[5] = v14;
  return result;
}

void *sub_1C3C842B8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v5 = sub_1C3C83CE0(v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for ArgumentDecoder.SingleValueContainer;
  a1[4] = sub_1C3C8E018();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = v3;
  result[3] = v4;
  result[4] = v5;
  result[5] = v7;
  return result;
}

uint64_t sub_1C3C84374()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DC0);
  sub_1C3C4BDB4(&qword_1EA386DC8, &qword_1EA386DC0);
  uint64_t v0 = sub_1C3DB9EC8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C3C84430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  sub_1C3DBB758();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C3DB9E78();
  uint64_t v7 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v5, v6);
  sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C3DB9C98();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a4 + 16))
  {
    sub_1C3C2A4F8(v9, v11);
    char v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C3C846A0@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v63 = a7;
  uint64_t v52 = a6;
  v49[2] = a4;
  v49[1] = a3;
  uint64_t v54 = a1;
  uint64_t v50 = a8;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v49 - v15;
  uint64_t v17 = *(void (**)(char *))(v11 + 16);
  uint64_t v56 = v18;
  v17((char *)v49 - v15);
  uint64_t v19 = (void *)(a2 + 40);
  swift_beginAccess();
  uint64_t v20 = *(void **)(a2 + 40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v55 = a2;
  *(void *)(a2 + 40) = v20;
  uint64_t v53 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v20 = sub_1C3D82E84(0, v20[2] + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  uint64_t v51 = a9;
  unint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  if (v23 >= v22 >> 1) {
    *uint64_t v19 = sub_1C3D82E84((void *)(v22 > 1), v23 + 1, 1, v20);
  }
  uint64_t v24 = v56;
  ((void (*)(char *, char *, uint64_t))v17)(v14, v16, v56);
  sub_1C3C8DC14(v23, (uint64_t)v14, (uint64_t *)(a2 + 40), v24, v63);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v24);
  swift_endAccess();
  uint64_t v25 = v54;
  uint64_t v26 = swift_conformsToProtocol2();
  if (v26) {
    unint64_t v27 = v26;
  }
  else {
    unint64_t v27 = 0;
  }
  if (v26) {
    uint64_t v28 = (uint64_t)v25;
  }
  else {
    uint64_t v28 = 0;
  }
  if (!v28)
  {
    uint64_t v61 = type metadata accessor for ArgumentDecoder.Decoder();
    unint64_t v62 = sub_1C3C836BC();
    uint64_t v30 = v55;
LABEL_19:
    v60[0] = v30;
    swift_retain();
    sub_1C3DBA418();
    return sub_1C3C84C30(v30);
  }
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = v55;
  uint64_t v31 = sub_1C3C83CE0(v29);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v33)
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v27 + 24);
    uint64_t v35 = sub_1C3DBA938();
    uint64_t v54 = v49;
    uint64_t v36 = *(void *)(v35 - 8);
    MEMORY[0x1F4188790](v35);
    uint64_t v38 = (char *)v49 - v37;
    v34(v31, v33, v28, v27);
    uint64_t v39 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v38, 1, v28) != 1)
    {
      uint64_t v58 = v28;
      unint64_t v59 = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
      (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 32))(boxed_opaque_existential_1, v38, v28);
      sub_1C3C4C684(&v57, (uint64_t)v60);
      uint64_t v45 = v61;
      unint64_t v46 = __swift_project_boxed_opaque_existential_1(v60, v61);
      uint64_t v58 = v45;
      uint64_t v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v47, v46, v45);
      castOrFatalError<A>(_:as:)((uint64_t)&v57, v52, v52, v50);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v57);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v60);
      uint64_t v30 = v55;
      return sub_1C3C84C30(v30);
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    uint64_t v30 = v55;
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v30 + 32) & 1) == 0)
  {
    uint64_t v61 = type metadata accessor for ArgumentDecoder.Decoder();
    unint64_t v62 = sub_1C3C836BC();
    goto LABEL_19;
  }
  uint64_t v40 = *(void (**)(uint64_t, unint64_t))(v27 + 16);
  uint64_t v61 = v28;
  unint64_t v62 = v27;
  __swift_allocate_boxed_opaque_existential_1(v60);
  v40(v28, v27);
  uint64_t v41 = v61;
  uint64_t v42 = __swift_project_boxed_opaque_existential_1(v60, v61);
  uint64_t v58 = v41;
  uint64_t v43 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v43, v42, v41);
  castOrFatalError<A>(_:as:)((uint64_t)&v57, v52, v52, v50);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v57);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v60);
  return sub_1C3C84C30(v30);
}

uint64_t sub_1C3C84C30(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 40);
  swift_beginAccess();
  uint64_t v3 = *(void **)(a1 + 40);
  if (!v3[2])
  {
    __break(1u);
LABEL_6:
    uint64_t result = (uint64_t)sub_1C3D70EFC(v3);
    uint64_t v3 = (void *)result;
    uint64_t v5 = *(void *)(result + 16);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = v3[2];
  if (v5)
  {
LABEL_4:
    uint64_t v6 = v5 - 1;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v3[5 * v5 - 1]);
    v3[2] = v6;
    *uint64_t v2 = v3;
    return swift_endAccess();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1C3C84CD8()
{
}

void sub_1C3C84D34()
{
}

void sub_1C3C84D90()
{
}

void sub_1C3C84DEC()
{
}

uint64_t sub_1C3C84E48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C84E50()
{
  return sub_1C3C84374();
}

uint64_t sub_1C3C84E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C84430(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1C3C84E68()
{
  return 0;
}

uint64_t sub_1C3C84E70(uint64_t a1, uint64_t a2)
{
  sub_1C3C846A0(MEMORY[0x1E4FBB390], *v2, v2[1], v2[2], *(void *)(a2 + 16), MEMORY[0x1E4FBB390], *(void *)(a2 + 24), (uint64_t)&v6, MEMORY[0x1E4FBB3B0]);
  if (!v3) {
    char v4 = v6;
  }
  return v4 & 1;
}

uint64_t sub_1C3C84ED0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C3C846A0(MEMORY[0x1E4FBB1A0], *v2, v2[1], v2[2], *(void *)(a2 + 16), MEMORY[0x1E4FBB1A0], *(void *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E4FBB1D8]);
  if (!v3) {
    return v5;
  }
  return result;
}

double sub_1C3C84F2C(uint64_t a1, uint64_t a2)
{
  sub_1C3C846A0(MEMORY[0x1E4FBB3D0], *v2, v2[1], v2[2], *(void *)(a2 + 16), MEMORY[0x1E4FBB3D0], *(void *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E4FBB408]);
  if (!v3) {
    return v5;
  }
  return result;
}

float sub_1C3C84F88(uint64_t a1, uint64_t a2)
{
  sub_1C3C846A0(MEMORY[0x1E4FBB470], *v2, v2[1], v2[2], *(void *)(a2 + 16), MEMORY[0x1E4FBB470], *(void *)(a2 + 24), (uint64_t)&v5, MEMORY[0x1E4FBB4A8]);
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1C3C84FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85288(a1, a2, a3, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB580]);
}

uint64_t sub_1C3C8500C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85114(a1, a2, a3, MEMORY[0x1E4FBC098], MEMORY[0x1E4FBC0B8]);
}

uint64_t sub_1C3C85034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85190(a1, a2, a3, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4FBC118]);
}

uint64_t sub_1C3C8505C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C8520C(a1, a2, a3, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBC180]);
}

uint64_t sub_1C3C85084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85288(a1, a2, a3, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBC1F8]);
}

uint64_t sub_1C3C850AC()
{
  return sub_1C3DBB4C8();
}

uint64_t sub_1C3C850C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85288(a1, a2, a3, MEMORY[0x1E4FBB808], MEMORY[0x1E4FBB838]);
}

uint64_t sub_1C3C850EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85114(a1, a2, a3, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBC380]);
}

uint64_t sub_1C3C85114(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_1C3C846A0(a4, *v5, v5[1], v5[2], *(void *)(a2 + 16), (uint64_t)a4, *(void *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1C3C85168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85190(a1, a2, a3, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBC480]);
}

uint64_t sub_1C3C85190(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_1C3C846A0(a4, *v5, v5[1], v5[2], *(void *)(a2 + 16), (uint64_t)a4, *(void *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1C3C851E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C8520C(a1, a2, a3, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC4F0]);
}

uint64_t sub_1C3C8520C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_1C3C846A0(a4, *v5, v5[1], v5[2], *(void *)(a2 + 16), (uint64_t)a4, *(void *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1C3C85260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85288(a1, a2, a3, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBC568]);
}

uint64_t sub_1C3C85288(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_1C3C846A0(a4, *v5, v5[1], v5[2], *(void *)(a2 + 16), (uint64_t)a4, *(void *)(a2 + 24), (uint64_t)&v8, a5);
  if (!v6) {
    return v8;
  }
  return result;
}

uint64_t sub_1C3C852DC()
{
  return sub_1C3DBB4D8();
}

uint64_t sub_1C3C852F4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_1C3C846A0(a1, *v5, v5[1], v5[2], *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a5, a3);
}

uint64_t sub_1C3C85330()
{
  return sub_1C3DBB458();
}

uint64_t sub_1C3C85348()
{
  return sub_1C3DBB448();
}

uint64_t sub_1C3C85360()
{
  uint64_t result = sub_1C3DBB468();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C85384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C855B0(a1, a2, a3, MEMORY[0x1E4FBBF60]);
}

uint64_t sub_1C3C853B0()
{
  uint64_t result = sub_1C3DBB478();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C853D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C854F8(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_1C3C85400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85554(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_1C3C8542C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C855B0(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_1C3C85458()
{
  uint64_t result = sub_1C3DBB4A8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8547C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85638(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_1C3C854A8()
{
  uint64_t result = sub_1C3DBB488();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C854CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C854F8(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_1C3C854F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1C3C85528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85554(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_1C3C85554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1C3C85584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C855B0(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_1C3C855B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1C3C855E8()
{
  uint64_t result = sub_1C3DBB4B8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8560C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C85638(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_1C3C85638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_1C3C85664()
{
  return sub_1C3DBB498();
}

void sub_1C3C85690()
{
}

void sub_1C3C856A4()
{
}

void sub_1C3C856B4()
{
}

void sub_1C3C856C4()
{
}

uint64_t sub_1C3C856D4()
{
  uint64_t v1 = sub_1C3DBAD68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 24);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    if (v5 < *(void *)(v6 + 16))
    {
      uint64_t v7 = v6 + 16 * v5;
      uint64_t v9 = *(void *)(v7 + 32);
      unint64_t v8 = *(void *)(v7 + 40);
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
      if ((v8 & 0x2000000000000000) != 0) {
        uint64_t v11 = HIBYTE(v8) & 0xF;
      }
      else {
        uint64_t v11 = v10;
      }
      BOOL v12 = v11 == 0;
      *(void *)(v0 + 24) = v5 + 1;
      return v12;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v13 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v15 = v14;
  uint64_t v16 = (char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v15 = MEMORY[0x1E4FBC840] + 8;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v16, v4, v1);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x1E4FBBA80], v13);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v18 = *(void *)(v0 + 24);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v0 + 24) = v20;
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C858EC()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C87C58(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBB1A0];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C85B50()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      LOBYTE(v3) = sub_1C3C881A8(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3 & 1;
      }
LABEL_6:
      v0[3] = v14;
      return v3 & 1;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBB390];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C85DAC()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v11 = *(void *)(v9 + 32);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C3C886EC(v12, v13, v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v15 = v7 + 1;
      if (!v2)
      {
        v0[3] = v15;
        return result;
      }
      goto LABEL_6;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v16 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v18 = v17;
  BOOL v19 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  void *v18 = MEMORY[0x1E4FBB3D0];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA80], v16);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v15 = v20 + 1;
  if (!v21)
  {
LABEL_6:
    v0[3] = v15;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C86008()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v11 = *(void *)(v9 + 32);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C3C88C38(v12, v13, v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v15 = v7 + 1;
      if (!v2)
      {
        v0[3] = v15;
        return result;
      }
      goto LABEL_6;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v16 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v18 = v17;
  BOOL v19 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  void *v18 = MEMORY[0x1E4FBB470];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA80], v16);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v15 = v20 + 1;
  if (!v21)
  {
LABEL_6:
    v0[3] = v15;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C86264()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C89184(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBB550];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C864C0()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C896C8(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC098];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C8671C()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C89C80(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC0F8];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C86978()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8A23C(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC150];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C86BD4()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8A7F8(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC1C8];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C86E30()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8AD3C(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBB808];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C8708C()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8B2F4(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC358];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C872E8()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8B8B0(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC450];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C87544()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8BE6C(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC4C0];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C877A0()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[3];
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v0[2];
    if (v7 < *(void *)(v8 + 16))
    {
      uint64_t v9 = v8 + 16 * v7;
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *v0;
      uint64_t v13 = v0[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C3C8C428(v12, v13, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v14 = v7 + 1;
      if (!v2)
      {
        v0[3] = v14;
        return v3;
      }
LABEL_6:
      v0[3] = v14;
      return v3;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v15 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v17 = v16;
  uint64_t v18 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v17 = MEMORY[0x1E4FBC538];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v3);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA80], v15);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v20 = v0[3];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v14 = v20 + 1;
  if (!v21) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C879FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1C3DBAD68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3[3];
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = v3[2];
    if (v11 < *(void *)(v12 + 16))
    {
      uint64_t v13 = v12 + 16 * v11;
      uint64_t v15 = *(void *)(v13 + 32);
      uint64_t v14 = *(void *)(v13 + 40);
      uint64_t v16 = *v3;
      uint64_t v17 = v3[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C3C8C9E4(a1, v16, v17, v15, v14, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v19 = v11 + 1;
LABEL_5:
      v3[3] = v19;
      return result;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C3DBAD48();
  uint64_t v20 = sub_1C3DBAD78();
  swift_allocError();
  uint64_t v22 = v21;
  unint64_t v23 = (char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
  *uint64_t v22 = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA80], v20);
  swift_willThrow();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v24 = v3[3];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v19 = v24 + 1;
  if (!v25) {
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C87C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      uint64_t v37 = a2;
      uint64_t v38 = v9;
      uint64_t v39 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      uint64_t v40 = &v37;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)&v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v22;
        uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        uint64_t v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v24, v20, v38);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_9:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      uint64_t v43 = v11;
      uint64_t v44 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1C3C4C684(&v42, (uint64_t)v45);
      uint64_t v32 = v46;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v21 = sub_1C3C45980((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v35;
        uint64_t v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v36, v20, v9);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_9;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v46 = v11;
      uint64_t v47 = v13;
      __swift_allocate_boxed_opaque_existential_1(v45);
      v27(v11, v13);
      uint64_t v28 = v46;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v21 = sub_1C3C45980((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C881A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB390];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      uint64_t v35 = a2;
      uint64_t v36 = v9;
      uint64_t v37 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      uint64_t v38 = &v35;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)&v35 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        uint64_t v20 = v39;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v22;
        uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v46;
        uint64_t v9 = v36;
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v24, v20, v36);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_9:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21 & 1;
      }
      uint64_t v41 = v11;
      uint64_t v42 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1C3C4C684(&v40, (uint64_t)v43);
      uint64_t v21 = v44;
      uint64_t v31 = __swift_project_boxed_opaque_existential_1(v43, v44);
      uint64_t v41 = v21;
      uint64_t v32 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v32, v31, v21);
      LOBYTE(v21) = sub_1C3C45BD8((uint64_t)&v40);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v40);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v20 = v39;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v33;
        uint64_t v34 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v46;
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v34, v20, v9);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_9;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v44 = v11;
      uint64_t v45 = v13;
      __swift_allocate_boxed_opaque_existential_1(v43);
      v27(v11, v13);
      uint64_t v21 = v44;
      uint64_t v28 = __swift_project_boxed_opaque_existential_1(v43, v44);
      uint64_t v41 = v21;
      uint64_t v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v29, v28, v21);
      LOBYTE(v21) = sub_1C3C45BD8((uint64_t)&v40);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v40);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    }
    return v21 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C886EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB3D0];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      v37[1] = a2;
      uint64_t v38 = v9;
      uint64_t v39 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      long long v40 = v37;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) != 1)
      {
        uint64_t v44 = v11;
        uint64_t v45 = v13;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
        sub_1C3C4C684(&v43, (uint64_t)v46);
        uint64_t v32 = v47;
        uint64_t v33 = __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v44 = v32;
        uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
        sub_1C3C45E20((uint64_t)&v43);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      swift_bridgeObjectRetain();
      uint64_t v20 = v41;
      sub_1C3DBAD48();
      uint64_t v21 = sub_1C3DBAD78();
      swift_allocError();
      unint64_t v23 = v22;
      uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *unint64_t v23 = v11;
      uint64_t v25 = v42;
      uint64_t v9 = v38;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v24, v20, v38);
      uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
    }
    else
    {
      swift_beginAccess();
      if (*(unsigned char *)(a1 + 32))
      {
        unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
        uint64_t v47 = v11;
        uint64_t v48 = v13;
        __swift_allocate_boxed_opaque_existential_1(v46);
        v27(v11, v13);
        uint64_t v28 = v47;
        uint64_t v29 = __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v44 = v28;
        uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
        sub_1C3C45E20((uint64_t)&v43);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v20 = v41;
      sub_1C3DBAD48();
      uint64_t v21 = sub_1C3DBAD78();
      swift_allocError();
      unint64_t v23 = v35;
      uint64_t v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *unint64_t v23 = v11;
      uint64_t v25 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v20, v9);
      uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
    }
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C88C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB470];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      v37[1] = a2;
      uint64_t v38 = v9;
      uint64_t v39 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      long long v40 = v37;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) != 1)
      {
        uint64_t v44 = v11;
        uint64_t v45 = v13;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
        sub_1C3C4C684(&v43, (uint64_t)v46);
        uint64_t v32 = v47;
        uint64_t v33 = __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v44 = v32;
        uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
        sub_1C3C46064((uint64_t)&v43);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      swift_bridgeObjectRetain();
      uint64_t v20 = v41;
      sub_1C3DBAD48();
      uint64_t v21 = sub_1C3DBAD78();
      swift_allocError();
      unint64_t v23 = v22;
      uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *unint64_t v23 = v11;
      uint64_t v25 = v42;
      uint64_t v9 = v38;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v24, v20, v38);
      uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
    }
    else
    {
      swift_beginAccess();
      if (*(unsigned char *)(a1 + 32))
      {
        unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
        uint64_t v47 = v11;
        uint64_t v48 = v13;
        __swift_allocate_boxed_opaque_existential_1(v46);
        v27(v11, v13);
        uint64_t v28 = v47;
        uint64_t v29 = __swift_project_boxed_opaque_existential_1(v46, v47);
        uint64_t v44 = v28;
        uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
        sub_1C3C46064((uint64_t)&v43);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v20 = v41;
      sub_1C3DBAD48();
      uint64_t v21 = sub_1C3DBAD78();
      swift_allocError();
      unint64_t v23 = v35;
      uint64_t v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *unint64_t v23 = v11;
      uint64_t v25 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v20, v9);
      uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
    }
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v20, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C89184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB550];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      uint64_t v37 = a2;
      uint64_t v38 = v9;
      uint64_t v39 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      long long v40 = &v37;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)&v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v22;
        uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        uint64_t v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v24, v20, v38);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_9:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      uint64_t v43 = v11;
      uint64_t v44 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1C3C4C684(&v42, (uint64_t)v45);
      uint64_t v32 = v46;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v21 = sub_1C3C462A8((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v35;
        uint64_t v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v36, v20, v9);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_9;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v46 = v11;
      uint64_t v47 = v13;
      __swift_allocate_boxed_opaque_existential_1(v45);
      v27(v11, v13);
      uint64_t v28 = v46;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v21 = sub_1C3C462A8((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C896C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC098];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC098];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C464EC((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C464EC((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C89C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC0F8];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC0F8];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C46730((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C46730((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8A23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC150];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC150];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C46974((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C46974((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8A7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1C3DBAD68();
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC1C8];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v13 = result;
    if (a4)
    {
      uint64_t v37 = a2;
      uint64_t v38 = v9;
      uint64_t v39 = v4;
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 24);
      uint64_t v15 = sub_1C3DBA938();
      uint64_t v40 = &v37;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v15);
      uint64_t v18 = (char *)&v37 - v17;
      swift_bridgeObjectRetain();
      v14(a3, a4, v11, v13);
      uint64_t v19 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v11) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v22;
        uint64_t v24 = (char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        uint64_t v9 = v38;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v24, v20, v38);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_9:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *v26, v21);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v9);
        return v21;
      }
      uint64_t v43 = v11;
      uint64_t v44 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v18, v11);
      sub_1C3C4C684(&v42, (uint64_t)v45);
      uint64_t v32 = v46;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v21 = sub_1C3C46BB8((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v20 = v41;
        sub_1C3DBAD48();
        uint64_t v21 = sub_1C3DBAD78();
        swift_allocError();
        unint64_t v23 = v35;
        uint64_t v36 = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *unint64_t v23 = v11;
        uint64_t v25 = v48;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v36, v20, v9);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_9;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v46 = v11;
      uint64_t v47 = v13;
      __swift_allocate_boxed_opaque_existential_1(v45);
      v27(v11, v13);
      uint64_t v28 = v46;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v43 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v21 = sub_1C3C46BB8((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C8AD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBB808];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBB808];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C46DFC((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C46DFC((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8B2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC358];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC358];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C47040((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C47040((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8B8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC450];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC450];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C47284((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C47284((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8BE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC4C0];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC4C0];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C474C8((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C474C8((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8C428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v8 = sub_1C3DBAD68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1E4FBC538];
  uint64_t v12 = swift_conformsToProtocol2();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v14)
  {
    if (a4)
    {
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v4;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24);
      uint64_t v16 = sub_1C3DBA938();
      long long v42 = &v39;
      uint64_t v17 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v39 - v18;
      swift_bridgeObjectRetain();
      v15(a3, a4, v14, v13);
      uint64_t v20 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v23;
        uint64_t v25 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = MEMORY[0x1E4FBC538];
        uint64_t v9 = v39;
        uint64_t v8 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v25, v21, v40);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA70];
LABEL_15:
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *v26, v22);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        return v22;
      }
      uint64_t v45 = v14;
      uint64_t v46 = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_1, v19, v14);
      sub_1C3C4C684(&v44, (uint64_t)v47);
      uint64_t v32 = v48;
      uint64_t v33 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v32;
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v34, v33, v32);
      uint64_t v22 = sub_1C3C4770C((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    else
    {
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 32) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v21 = v50;
        sub_1C3DBAD48();
        uint64_t v35 = v11;
        uint64_t v22 = sub_1C3DBAD78();
        swift_allocError();
        uint64_t v24 = v36;
        uint64_t v37 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
        *uint64_t v24 = v35;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v37, v21, v8);
        uint64_t v26 = (unsigned int *)MEMORY[0x1E4FBBA80];
        goto LABEL_15;
      }
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      __swift_allocate_boxed_opaque_existential_1(v47);
      v27(v14, v13);
      uint64_t v28 = v48;
      uint64_t v29 = __swift_project_boxed_opaque_existential_1(v47, v48);
      uint64_t v45 = v28;
      uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v30, v29, v28);
      uint64_t v22 = sub_1C3C4770C((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    }
    return v22;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C8C9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v46 = a7;
  uint64_t v47 = a6;
  uint64_t v45 = a3;
  uint64_t v12 = sub_1C3DBAD68();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v55 = a1;
  if (!v16) {
    a1 = 0;
  }
  if (a1)
  {
    if (a5)
    {
      uint64_t v40 = v15;
      uint64_t v41 = v13;
      uint64_t v42 = v12;
      uint64_t v43 = v7;
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24);
      uint64_t v19 = sub_1C3DBA938();
      long long v44 = &v40;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19);
      uint64_t v22 = (char *)&v40 - v21;
      swift_bridgeObjectRetain();
      v18(a4, a5, a1, v17);
      uint64_t v23 = *(void *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, a1) != 1)
      {
        uint64_t v49 = a1;
        uint64_t v50 = v17;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v48);
        (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_1, v22, a1);
        sub_1C3C4C684(&v48, (uint64_t)&v51);
        uint64_t v35 = v53;
        uint64_t v36 = __swift_project_boxed_opaque_existential_1(&v51, v53);
        uint64_t v49 = v35;
        uint64_t v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v48);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v37, v36, v35);
        castOrFatalError<A>(_:as:)((uint64_t)&v48, v47, v47, v46);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v48);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v51);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      swift_bridgeObjectRetain();
      uint64_t v15 = v40;
      sub_1C3DBAD48();
      uint64_t v24 = sub_1C3DBAD78();
      swift_allocError();
      uint64_t v26 = v25;
      unint64_t v27 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *uint64_t v26 = v55;
      uint64_t v13 = v41;
      uint64_t v12 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v27, v15, v42);
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4FBBA70];
    }
    else
    {
      swift_beginAccess();
      if (*(unsigned char *)(a2 + 32))
      {
        uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
        uint64_t v53 = a1;
        uint64_t v54 = v17;
        __swift_allocate_boxed_opaque_existential_1(&v51);
        v29(a1, v17);
        uint64_t v30 = v53;
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(&v51, v53);
        uint64_t v49 = v30;
        uint64_t v32 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v48);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v32, v31, v30);
        castOrFatalError<A>(_:as:)((uint64_t)&v48, v47, v47, v46);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v48);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v51);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C3DBAD48();
      uint64_t v24 = sub_1C3DBAD78();
      swift_allocError();
      uint64_t v26 = v38;
      uint64_t v39 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0) + 48);
      *uint64_t v26 = v55;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v39, v15, v12);
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4FBBA80];
    }
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *v28, v24);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    uint64_t v51 = 0;
    unint64_t v52 = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    uint64_t v51 = 0x2065707954;
    unint64_t v52 = 0xE500000000000000;
    sub_1C3DBB798();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t result = sub_1C3DBAF58();
    __break(1u);
  }
  return result;
}

void sub_1C3C8CFD4()
{
}

uint64_t sub_1C3C8D030()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

BOOL sub_1C3C8D040()
{
  return *(void *)(v0 + 24) >= *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_1C3C8D054()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1C3C8D05C()
{
  return sub_1C3C856D4() & 1;
}

uint64_t sub_1C3C8D078()
{
  return sub_1C3C85B50() & 1;
}

uint64_t sub_1C3C8D094()
{
  return sub_1C3C858EC();
}

uint64_t sub_1C3C8D0AC()
{
  return sub_1C3C85DAC();
}

uint64_t sub_1C3C8D0C4()
{
  return sub_1C3C86008();
}

uint64_t sub_1C3C8D0DC()
{
  return sub_1C3C86264();
}

uint64_t sub_1C3C8D0F4()
{
  return sub_1C3C864C0();
}

uint64_t sub_1C3C8D10C()
{
  return sub_1C3C8671C();
}

uint64_t sub_1C3C8D124()
{
  return sub_1C3C86978();
}

uint64_t sub_1C3C8D13C()
{
  return sub_1C3C86BD4();
}

uint64_t sub_1C3C8D154()
{
  return sub_1C3DBB328();
}

uint64_t sub_1C3C8D16C()
{
  return sub_1C3C86E30();
}

uint64_t sub_1C3C8D184()
{
  return sub_1C3C8708C();
}

uint64_t sub_1C3C8D19C()
{
  return sub_1C3C872E8();
}

uint64_t sub_1C3C8D1B4()
{
  return sub_1C3C87544();
}

uint64_t sub_1C3C8D1CC()
{
  return sub_1C3C877A0();
}

uint64_t sub_1C3C8D1E4()
{
  return sub_1C3DBB338();
}

uint64_t sub_1C3C8D1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C3C879FC(a1, a2, a3);
}

uint64_t sub_1C3C8D214()
{
  return sub_1C3DBB2B8();
}

uint64_t sub_1C3C8D22C()
{
  return sub_1C3DBB2A8();
}

uint64_t sub_1C3C8D244()
{
  uint64_t result = sub_1C3DBB2C8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8D268(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D494(a1, a2, MEMORY[0x1E4FBBE18]);
}

uint64_t sub_1C3C8D294()
{
  uint64_t result = sub_1C3DBB2D8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8D2B8(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D3DC(a1, a2, MEMORY[0x1E4FBBE20]);
}

uint64_t sub_1C3C8D2E4(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D438(a1, a2, MEMORY[0x1E4FBBE28]);
}

uint64_t sub_1C3C8D310(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D494(a1, a2, MEMORY[0x1E4FBBE30]);
}

uint64_t sub_1C3C8D33C()
{
  uint64_t result = sub_1C3DBB308();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8D360(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D51C(a1, a2, MEMORY[0x1E4FBBE40]);
}

uint64_t sub_1C3C8D38C()
{
  uint64_t result = sub_1C3DBB2E8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8D3B0(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D3DC(a1, a2, MEMORY[0x1E4FBBE38]);
}

uint64_t sub_1C3C8D3DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_1C3C8D40C(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D438(a1, a2, MEMORY[0x1E4FBBE48]);
}

uint64_t sub_1C3C8D438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_1C3C8D468(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D494(a1, a2, MEMORY[0x1E4FBBE50]);
}

uint64_t sub_1C3C8D494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_1C3C8D4CC()
{
  uint64_t result = sub_1C3DBB318();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C3C8D4F0(uint64_t a1, uint64_t a2)
{
  return sub_1C3C8D51C(a1, a2, MEMORY[0x1E4FBBE58]);
}

uint64_t sub_1C3C8D51C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1C3C8D548()
{
  return sub_1C3DBB2F8();
}

void sub_1C3C8D574()
{
}

void sub_1C3C8D584()
{
}

void sub_1C3C8D5E0()
{
}

BOOL sub_1C3C8D63C()
{
  return *(void *)(v0 + 24) == 0;
}

uint64_t sub_1C3C8D64C()
{
  return sub_1C3C881A8(*v0, v0[1], v0[2], v0[3]) & 1;
}

uint64_t sub_1C3C8D670()
{
  return sub_1C3C87C58(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D690()
{
  return sub_1C3C886EC(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D6B0()
{
  return sub_1C3C88C38(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D6D0()
{
  return sub_1C3C89184(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D6F0()
{
  return sub_1C3C896C8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D710()
{
  return sub_1C3C89C80(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D730()
{
  return sub_1C3C8A23C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D750()
{
  return sub_1C3C8A7F8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D770()
{
  return sub_1C3DBB3E8();
}

uint64_t sub_1C3C8D788()
{
  return sub_1C3C8AD3C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D7A8()
{
  return sub_1C3C8B2F4(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D7C8()
{
  return sub_1C3C8B8B0(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D7E8()
{
  return sub_1C3C8BE6C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D808()
{
  return sub_1C3C8C428(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C3C8D828()
{
  return sub_1C3DBB3F8();
}

uint64_t sub_1C3C8D840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C3C8C9E4(a1, *v3, v3[1], v3[2], v3[3], a2, a3);
}

void (*sub_1C3C8D864(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C3C8DB24(v6);
  v6[10] = sub_1C3C8D984(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C3C8D910;
}

void sub_1C3C8D910(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1C3C8D984(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[3] = a3;
  v10[4] = v4;
  void v10[2] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1C3C2A4F8(a2, a3);
  *((unsigned char *)v10 + 48) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = (uint64_t *)(*(void *)(*v5 + 56) + 16 * v13);
        uint64_t v20 = *v19;
        uint64_t v21 = v19[1];
LABEL_12:
        *uint64_t v10 = v20;
        v10[1] = v21;
        return sub_1C3C8DAD4;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C3D84244();
      goto LABEL_7;
    }
    sub_1C3D85EC8(v16, a4 & 1);
    unint64_t v22 = sub_1C3C2A4F8(a2, a3);
    if ((v17 & 1) == (v23 & 1))
    {
      unint64_t v13 = v22;
      v10[5] = v22;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1C3DBB538();
  __break(1u);
  return result;
}

void sub_1C3C8DAD4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1C3C8DB60(*a1, *((unsigned char *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[2], (*a1)[3]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1C3C8DB24(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C3C8DB54;
}

uint64_t sub_1C3C8DB54(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1C3C8DB60(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = a1[1];
  if (v8)
  {
    uint64_t v10 = *a1;
    uint64_t v11 = (void *)*a3;
    if (a2)
    {
      char v12 = (uint64_t *)(v11[7] + 16 * a4);
      *char v12 = v10;
      v12[1] = v8;
    }
    else
    {
      sub_1C3D05DFC(a4, a5, a6, v10, v8, v11);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C3D04A98(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C8DC14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C3C4C684(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C3C8DCAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a4)
  {
    swift_retain();
LABEL_14:
    swift_release();
    return a1;
  }
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_retain();
    goto LABEL_13;
  }
  uint64_t v6 = self;
  swift_retain();
  id v26 = v6;
  id v7 = objc_msgSend(v6, sel_ic_attachmentCharacterString);
  sub_1C3DB9C38();

  unint64_t v8 = sub_1C3C2A4A4();
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  unint64_t v23 = v8;
  unint64_t v24 = v8;
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  unint64_t v22 = v8;
  sub_1C3DBA9F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C3DBA9D8();
  swift_bridgeObjectRelease();
  int64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v25 = a1;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C3C9D1E0(0, v11, 0);
  uint64_t v12 = v10 + 40;
  do
  {
    swift_bridgeObjectRetain();
    id v13 = objc_msgSend(v26, sel_ic_attachmentCharacterString, v21, v22, v23, v24);
    sub_1C3DB9C38();

    unint64_t v23 = v8;
    unint64_t v24 = v8;
    uint64_t v21 = v9;
    unint64_t v22 = v8;
    uint64_t v14 = sub_1C3DBA9F8();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v18 = *(void *)(v27 + 16);
    unint64_t v17 = *(void *)(v27 + 24);
    if (v18 >= v17 >> 1) {
      sub_1C3C9D1E0(v17 > 1, v18 + 1, 1);
    }
    v12 += 16;
    *(void *)(v27 + 16) = v18 + 1;
    uint64_t v19 = v27 + 16 * v18;
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  a1 = v25;
  swift_release();
  return a1;
}

unint64_t sub_1C3C8DF7C()
{
  unint64_t result = qword_1EA386D20;
  if (!qword_1EA386D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386D20);
  }
  return result;
}

uint64_t sub_1C3C8DFD0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1C3C8E018()
{
  unint64_t result = qword_1EA386D28[0];
  if (!qword_1EA386D28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA386D28);
  }
  return result;
}

uint64_t sub_1C3C8E06C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t type metadata accessor for ArgumentDecoder()
{
  return self;
}

uint64_t method lookup function for ArgumentDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ArgumentDecoder);
}

uint64_t dispatch thunk of ArgumentDecoder.__allocating_init(usesDefaultValueIfMissing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ArgumentDecoder.Decoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ArgumentDecoder.Decoder);
}

uint64_t destroy for ArgumentDecoder.Parameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s11NotesShared15ArgumentDecoderC10ParametersVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArgumentDecoder.Parameters(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ArgumentDecoder.Parameters(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.Parameters()
{
  return &type metadata for ArgumentDecoder.Parameters;
}

uint64_t destroy for ArgumentDecoder.SingleValueContainer()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ArgumentDecoder.SingleValueContainer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArgumentDecoder.SingleValueContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArgumentDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.SingleValueContainer()
{
  return &type metadata for ArgumentDecoder.SingleValueContainer;
}

void *initializeWithCopy for ArgumentDecoder.UnkeyedContainer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArgumentDecoder.UnkeyedContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ArgumentDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.UnkeyedContainer()
{
  return &type metadata for ArgumentDecoder.UnkeyedContainer;
}

uint64_t _s11NotesShared15ArgumentDecoderC16UnkeyedContainerVwxx_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C3C8E544(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C3C8E594(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1C3C8E620(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s20ObjectIDNotificationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C3C8E6F8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1C3C8E700()
{
  return sub_1C3DBB768();
}

uint64_t sub_1C3C8E764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C8E7CC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C3C8E7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C8E848(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3C8E8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 2)
  {
    if (a5) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ArgumentDecoder.ParametersParsingStates(uint64_t a1)
{
  return sub_1C3C83618(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C3C8E8AC(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C3C8E8AC(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C3C83618(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ArgumentDecoder.ParametersParsingStates(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C3C83618(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.ParametersParsingStates(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.ParametersParsingStates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C3C8EB08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1C3C8EB10(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.ParametersParsingStates()
{
  return &type metadata for ArgumentDecoder.ParametersParsingStates;
}

uint64_t sub_1C3C8EB2C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8EB8C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8EC78()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8ED90()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8EE78()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8EF8C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C8EFE8()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA386E90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA386E90);
  if (qword_1EB6FBAB8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FB810);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1C3C8F0B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RealtimeCollaborationSelectionDocument.Selection.init(from:)(a1, a2);
}

uint64_t RealtimeCollaborationSelectionDocument.Selection.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3C91E64();
  sub_1C3DBB6B8();
  if (!v2)
  {
    char v19 = 0;
    sub_1C3C91EB8();
    sub_1C3DBB108();
    if ((_BYTE)v18)
    {
      char v19 = 2;
      if (v18 == 1)
      {
        sub_1C3C91F0C();
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v10 = v18;
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v10;
        *a2 = v11 | 0x4000000000000000;
      }
      else
      {
        sub_1C3C91F0C();
        sub_1C3DBB108();
        uint64_t v14 = v18;
        char v19 = 3;
        sub_1C3C91F98();
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v15 = v18;
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v14;
        *(void *)(v16 + 24) = v15;
        *a2 = v16 | 0x8000000000000000;
      }
    }
    else
    {
      char v19 = 3;
      sub_1C3C92030();
      sub_1C3DBB108();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v12 = v18;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *a2 = v13;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

void sub_1C3C8F4B0(void *a1)
{
}

void RealtimeCollaborationSelectionDocument.Selection.encode(to:)(void *a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1C3DBAD98();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386ED8);
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v10 = sub_1C3C91E64();
  uint64_t v11 = v8;
  sub_1C3DBB6D8();
  switch(v9 >> 62)
  {
    case 1uLL:
      uint64_t v30 = *(void **)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *(_WORD *)uint64_t v39 = 256;
      sub_1C3C92084();
      id v13 = v30;
      uint64_t v31 = v38;
      uint64_t v32 = v36;
      sub_1C3DBB1E8();
      if (!v32)
      {
        v39[1] = 1;
        sub_1C3DBB1B8();
        *(void *)&v39[1] = v13;
        v39[0] = 2;
        sub_1C3C920D8();
        sub_1C3DBB1E8();
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v31);
      goto LABEL_12;
    case 2uLL:
      uint64_t v16 = *(void **)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      *(_WORD *)uint64_t v39 = 512;
      sub_1C3C92084();
      id v18 = v16;
      swift_retain();
      uint64_t v19 = v38;
      uint64_t v20 = v36;
      sub_1C3DBB1E8();
      if (v20)
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v19);

        swift_release();
      }
      else
      {
        v39[1] = 1;
        sub_1C3DBB1B8();
        *(void *)&v39[1] = v18;
        v39[0] = 2;
        sub_1C3C920D8();
        sub_1C3DBB1E8();
        *(void *)&v39[1] = v17;
        v39[0] = 3;
        sub_1C3C9212C();
        sub_1C3DBB1E8();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v19);
        swift_release();
      }
      break;
    case 3uLL:
      uint64_t v21 = v38;
      uint64_t v22 = sub_1C3DBB168();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EE0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      *(void *)(inited + 56) = &_s9SelectionO10CodingKeysON;
      *(void *)(inited + 64) = v10;
      *(unsigned char *)(inited + 32) = 0;
      *(void *)&v39[1] = v22;
      sub_1C3D791BC(inited);
      sub_1C3DBAD48();
      uint64_t v24 = sub_1C3DBADA8();
      swift_allocError();
      id v26 = v25;
      uint64_t v27 = (char *)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EE8) + 48);
      v26[3] = (unint64_t)&type metadata for RealtimeCollaborationSelectionDocument.Selection;
      *id v26 = v9;
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v27, v5, v35);
      (*(void (**)(unint64_t *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4FBBAA0], v24);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v21);
      break;
    default:
      uint64_t v12 = *(void **)(v9 + 16);
      *(_WORD *)uint64_t v39 = 0;
      sub_1C3C92084();
      id v13 = v12;
      uint64_t v14 = v38;
      uint64_t v15 = v36;
      sub_1C3DBB1E8();
      if (!v15)
      {
        v39[1] = 1;
        sub_1C3DBB1B8();
        *(void *)&v39[1] = v13;
        v39[0] = 3;
        sub_1C3C92180();
        sub_1C3DBB1E8();
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v14);
LABEL_12:

      break;
  }
}

uint64_t sub_1C3C8FACC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RealtimeCollaborationSelectionDocument.TableSelection.init(from:)(a1, a2);
}

uint64_t RealtimeCollaborationSelectionDocument.TableSelection.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)&v32 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F10);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C3C921D4();
  uint64_t v14 = v36;
  sub_1C3DBB6B8();
  if (v14)
  {
    uint64_t v15 = (uint64_t)v35;
  }
  else
  {
    char v38 = 0;
    sub_1C3C92228();
    sub_1C3DBB108();
    switch((char)v37)
    {
      case 1:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F40);
        char v38 = 2;
        sub_1C3C92434(&qword_1EA386F48, &qword_1EA386F28);
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v20 = v37;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v20;
        uint64_t v19 = v21 | 0x2000000000000000;
        break;
      case 2:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F40);
        char v38 = 1;
        sub_1C3C92434(&qword_1EA386F48, &qword_1EA386F28);
        sub_1C3DBB108();
        uint64_t v22 = v37;
        char v38 = 2;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v23 = v37;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v22;
        *(void *)(v24 + 24) = v23;
        uint64_t v19 = v24 | 0x4000000000000000;
        break;
      case 3:
        LOBYTE(v37) = 3;
        uint64_t v36 = sub_1C3C9239C(&qword_1EA386F28);
        sub_1C3DBB108();
        LOBYTE(v37) = 4;
        sub_1C3DBB108();
        char v38 = 5;
        sub_1C3C9227C();
        sub_1C3DBB108();
        uint64_t v25 = v33;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v36 = v37;
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F38);
        uint64_t v32 = swift_allocBox();
        uint64_t v28 = v27;
        uint64_t v29 = v27 + *(int *)(v26 + 48);
        uint64_t v30 = *(int *)(v26 + 64);
        uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
        v31(v27, v8, v3);
        v31(v29, v6, v3);
        *(void *)(v28 + v30) = v36;
        uint64_t v19 = v32 | 0x6000000000000000;
        break;
      default:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F40);
        char v38 = 1;
        sub_1C3C92434(&qword_1EA386F48, &qword_1EA386F28);
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v18 = v37;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v18;
        break;
    }
    uint64_t v16 = (uint64_t)v35;
    *uint64_t v34 = v19;
    uint64_t v15 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v15);
}

uint64_t sub_1C3C90188(void *a1)
{
  return RealtimeCollaborationSelectionDocument.TableSelection.encode(to:)(a1);
}

uint64_t RealtimeCollaborationSelectionDocument.TableSelection.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C3DBAD98();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v57 = (char *)&v52 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F50);
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v15 = sub_1C3C921D4();
  sub_1C3DBB6D8();
  switch(v14 >> 61)
  {
    case 1uLL:
      uint64_t v21 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(_WORD *)uint64_t v61 = 256;
      sub_1C3C92348();
      uint64_t v17 = v60;
      uint64_t v18 = v13;
      uint64_t v22 = v58;
      sub_1C3DBB1E8();
      if (v22) {
        goto LABEL_7;
      }
      *(void *)&v61[1] = v21;
      char v20 = 2;
      goto LABEL_6;
    case 2uLL:
      uint64_t v25 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v26 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      *(_WORD *)uint64_t v61 = 512;
      sub_1C3C92348();
      uint64_t v27 = v60;
      uint64_t v28 = v58;
      sub_1C3DBB1E8();
      if (!v28)
      {
        *(void *)&v61[1] = v25;
        v61[0] = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F40);
        sub_1C3C92434(&qword_1EA386F68, &qword_1EB6FBC10);
        sub_1C3DBB1E8();
        *(void *)&v61[1] = v26;
        v61[0] = 2;
        sub_1C3DBB1E8();
      }
      uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
      uint64_t v24 = v13;
      uint64_t v48 = v27;
      return v23(v24, v48);
    case 3uLL:
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F38);
      uint64_t v30 = swift_projectBox();
      uint64_t v31 = v30 + *(int *)(v29 + 48);
      uint64_t v32 = *(void *)(v30 + *(int *)(v29 + 64));
      uint64_t v33 = v54;
      uint64_t v34 = v55;
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
      v35(v57, v30, v55);
      uint64_t v36 = v56;
      v35(v56, v31, v34);
      *(_WORD *)uint64_t v61 = 768;
      sub_1C3C92348();
      swift_retain();
      uint64_t v37 = v58;
      sub_1C3DBB1E8();
      if (v37)
      {
        swift_release();
        char v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v36, v34);
        v38(v57, v34);
        return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v13, v60);
      }
      else
      {
        uint64_t v58 = v32;
        v61[1] = 3;
        sub_1C3C9239C(&qword_1EB6FBC10);
        uint64_t v49 = v60;
        sub_1C3DBB1E8();
        v61[1] = 4;
        uint64_t v50 = v56;
        sub_1C3DBB1E8();
        *(void *)&v61[1] = v58;
        v61[0] = 5;
        sub_1C3C923E0();
        sub_1C3DBB1E8();
        uint64_t v51 = *(void (**)(char *, uint64_t))(v33 + 8);
        v51(v50, v34);
        v51(v57, v34);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v49);
        return swift_release();
      }
    case 4uLL:
      uint64_t v17 = v60;
      uint64_t v40 = sub_1C3DBB168();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EE0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      *(void *)(inited + 56) = &_s14TableSelectionO10CodingKeysON;
      *(void *)(inited + 64) = v15;
      *(unsigned char *)(inited + 32) = 0;
      *(void *)&v61[1] = v40;
      sub_1C3D791BC(inited);
      sub_1C3DBAD48();
      uint64_t v42 = sub_1C3DBADA8();
      swift_allocError();
      long long v44 = v43;
      uint64_t v45 = (char *)v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EE8) + 48);
      v44[3] = (unint64_t)&type metadata for RealtimeCollaborationSelectionDocument.TableSelection;
      *long long v44 = v14;
      uint64_t v47 = v52;
      uint64_t v46 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v45, v6, v53);
      (*(void (**)(unint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBAA0], v42);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v46);
      uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
      uint64_t v24 = v13;
      goto LABEL_13;
    default:
      uint64_t v16 = *(void *)(v14 + 16);
      *(_WORD *)uint64_t v61 = 0;
      sub_1C3C92348();
      uint64_t v17 = v60;
      uint64_t v18 = v13;
      uint64_t v19 = v58;
      sub_1C3DBB1E8();
      if (!v19)
      {
        *(void *)&v61[1] = v16;
        char v20 = 1;
LABEL_6:
        v61[0] = v20;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F40);
        sub_1C3C92434(&qword_1EA386F68, &qword_1EB6FBC10);
        sub_1C3DBB1E8();
      }
LABEL_7:
      uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
      uint64_t v24 = v18;
LABEL_13:
      uint64_t v48 = v17;
      return v23(v24, v48);
  }
}

uint64_t sub_1C3C90A24(char *a1, char *a2)
{
  return sub_1C3CE644C(*a1, *a2);
}

uint64_t sub_1C3C90A30()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C90A8C()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C90ACC()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C90B24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92D9C();
  *a1 = result;
  return result;
}

void sub_1C3C90B5C(void *a1@<X8>)
{
  *a1 = qword_1C3DD70B0[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3C90B78()
{
  return qword_1C3DD70B0[*v0];
}

uint64_t sub_1C3C90B90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92D9C();
  *a1 = result;
  return result;
}

uint64_t sub_1C3C90BC0(uint64_t a1)
{
  unint64_t v2 = sub_1C3C91E64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C90BFC(uint64_t a1)
{
  unint64_t v2 = sub_1C3C91E64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C3C90C38(char *a1, char *a2)
{
  return sub_1C3CE63E4(*a1, *a2);
}

uint64_t sub_1C3C90C44()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C90CA0()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C90CE0()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C90D38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92E8C();
  *a1 = result;
  return result;
}

void sub_1C3C90D68(void *a1@<X8>)
{
  *a1 = qword_1C3DD70D0[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3C90D84()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3C90DE4()
{
  return sub_1C3DB9F58();
}

uint64_t sub_1C3C90E34(char *a1, char *a2)
{
  return sub_1C3CE651C(*a1, *a2);
}

uint64_t sub_1C3C90E40()
{
  return sub_1C3C8EB2C();
}

uint64_t sub_1C3C90E48()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C90E88()
{
  return sub_1C3C8EF8C();
}

uint64_t sub_1C3C90E90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92D50();
  *a1 = result;
  return result;
}

void sub_1C3C90EC0(void *a1@<X8>)
{
  *a1 = qword_1C3DD70E8[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3C90EDC()
{
  return qword_1C3DD70E8[*v0];
}

uint64_t sub_1C3C90EF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92D50();
  *a1 = result;
  return result;
}

void sub_1C3C90F1C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C3C90F28(uint64_t a1)
{
  unint64_t v2 = sub_1C3C921D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3C90F64(uint64_t a1)
{
  unint64_t v2 = sub_1C3C921D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C3C90FA0(char *a1, char *a2)
{
  return sub_1C3CE64B4(*a1, *a2);
}

uint64_t sub_1C3C90FAC()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C91008()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C91048()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C910A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C92D9C();
  *a1 = result;
  return result;
}

void sub_1C3C910D8(void *a1@<X8>)
{
  *a1 = qword_1C3DD7118[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3C910F4()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3C91154()
{
  return sub_1C3DB9F58();
}

uint64_t sub_1C3C911A4(uint64_t a1)
{
  return sub_1C3C91430(a1, MEMORY[0x1E4F27498], MEMORY[0x1E4F27490], &qword_1EA399A80);
}

uint64_t sub_1C3C911D8()
{
  if (qword_1EA385848 != -1) {
    swift_once();
  }
  sub_1C3C923E0();
  return sub_1C3DB86D8();
}

uint64_t sub_1C3C913FC(uint64_t a1)
{
  return sub_1C3C91430(a1, MEMORY[0x1E4F27480], MEMORY[0x1E4F27478], &qword_1EA399A88);
}

uint64_t sub_1C3C91430(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1C3C91484@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_1EA385850 != -1) {
    swift_once();
  }
  sub_1C3C9227C();
  sub_1C3DB86A8();
  uint64_t result = sub_1C3C58FC8(a1, a2);
  *a3 = v7;
  return result;
}

uint64_t _s11NotesShared38RealtimeCollaborationSelectionDocumentC05TableE0O2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v47 - v15;
  unint64_t v17 = *a1;
  unint64_t v18 = *a2;
  switch(v17 >> 61)
  {
    case 1uLL:
      if (v18 >> 61 != 1) {
        goto LABEL_19;
      }
      uint64_t v28 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      LOBYTE(v28) = sub_1C3CB5F28(v28, v29);
      swift_release();
      swift_release();
      return v28 & 1;
    case 2uLL:
      if (v18 >> 61 != 2) {
        goto LABEL_19;
      }
      uint64_t v23 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v25 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      if ((sub_1C3CB5F28(v23, v25) & 1) == 0)
      {
        swift_release();
        goto LABEL_18;
      }
      char v26 = sub_1C3CB5F28(v22, v24);
      swift_release();
      swift_release();
      return v26 & 1;
    case 3uLL:
      uint64_t v30 = v17 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386F38);
      uint64_t v32 = swift_projectBox();
      if (v18 >> 61 != 3) {
        goto LABEL_19;
      }
      uint64_t v33 = v32;
      uint64_t v51 = v30;
      uint64_t v34 = *(int *)(v31 + 64);
      uint64_t v35 = *(void *)(v32 + v34);
      uint64_t v52 = v18 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v36 = *(int *)(v31 + 48);
      uint64_t v49 = v32 + v36;
      uint64_t v50 = v35;
      uint64_t v37 = swift_projectBox();
      uint64_t v38 = v5;
      uint64_t v39 = v37;
      uint64_t v47 = v38;
      uint64_t v48 = v37 + v36;
      uint64_t v40 = *(void *)(v37 + v34);
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      v41(v16, v33, v4);
      v41(v14, v39, v4);
      v41(v11, v49, v4);
      v41(v8, v48, v4);
      uint64_t v49 = v40;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (sub_1C3DB8B48())
      {
        uint64_t v42 = v50;
        uint64_t v43 = v47;
        if (sub_1C3DB8B48())
        {
          uint64_t v53 = v49;
          uint64_t v54 = v42;
          char v27 = _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0(&v54, &v53);
          long long v44 = *(void (**)(char *, uint64_t))(v43 + 8);
          v44(v8, v4);
          v44(v11, v4);
          v44(v14, v4);
          v44(v16, v4);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          return v27 & 1;
        }
        swift_release();
        swift_release();
        uint64_t v46 = *(void (**)(char *, uint64_t))(v43 + 8);
        v46(v8, v4);
        v46(v11, v4);
        v46(v14, v4);
        v46(v16, v4);
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        uint64_t v45 = *(void (**)(char *, uint64_t))(v47 + 8);
        v45(v8, v4);
        v45(v11, v4);
        v45(v14, v4);
        v45(v16, v4);
        swift_release();
      }
LABEL_18:
      swift_release();
      goto LABEL_19;
    case 4uLL:
      if (v18 != 0x8000000000000000) {
        goto LABEL_19;
      }
      swift_release();
      char v27 = 1;
      return v27 & 1;
    default:
      if (v18 >> 61)
      {
LABEL_19:
        char v27 = 0;
        return v27 & 1;
      }
      else
      {
        uint64_t v19 = *(void *)(v17 + 16);
        uint64_t v20 = *(void *)(v18 + 16);
        swift_retain();
        swift_retain();
        LOBYTE(v19) = sub_1C3CB5F28(v19, v20);
        swift_release();
        swift_release();
        return v19 & 1;
      }
  }
}

uint64_t _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_12;
      }
      uint64_t v7 = *(void **)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      unsigned __int8 v6 = objc_msgSend(v7, sel_isEqual_, v8);
      swift_release();
      swift_release();
      break;
    case 2uLL:
      if (v3 >> 62 != 2) {
        goto LABEL_12;
      }
      uint64_t v9 = *(void **)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v10 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v12 = *(void **)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v11 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      swift_retain();
      id v13 = v9;
      id v14 = v12;
      swift_retain();
      if (!objc_msgSend(v13, sel_isEqual_, v14))
      {
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        goto LABEL_12;
      }
      unint64_t v16 = v11;
      unint64_t v17 = v10;
      unsigned __int8 v6 = _s11NotesShared38RealtimeCollaborationSelectionDocumentC05TableE0O2eeoiySbAE_AEtFZ_0(&v17, &v16);
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      break;
    case 3uLL:
      if (v3 != 0xC000000000000000) {
        goto LABEL_12;
      }
      swift_release();
      unsigned __int8 v6 = 1;
      break;
    default:
      if (v3 >> 62)
      {
LABEL_12:
        unsigned __int8 v6 = 0;
      }
      else
      {
        uint64_t v4 = *(void **)(v2 + 16);
        uint64_t v5 = *(void *)(v3 + 16);
        swift_retain();
        swift_retain();
        unsigned __int8 v6 = objc_msgSend(v4, sel_isEqual_, v5);
        swift_release();
        swift_release();
      }
      break;
  }
  return v6 & 1;
}

unint64_t sub_1C3C91E64()
{
  unint64_t result = qword_1EA386EB0;
  if (!qword_1EA386EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EB0);
  }
  return result;
}

unint64_t sub_1C3C91EB8()
{
  unint64_t result = qword_1EA386EB8;
  if (!qword_1EA386EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EB8);
  }
  return result;
}

unint64_t sub_1C3C91F0C()
{
  unint64_t result = qword_1EA386EC0;
  if (!qword_1EA386EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EC0);
  }
  return result;
}

uint64_t sub_1C3C91F60()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C3C91F98()
{
  unint64_t result = qword_1EA386EC8;
  if (!qword_1EA386EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EC8);
  }
  return result;
}

uint64_t sub_1C3C91FEC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C3C92030()
{
  unint64_t result = qword_1EA386ED0;
  if (!qword_1EA386ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386ED0);
  }
  return result;
}

unint64_t sub_1C3C92084()
{
  unint64_t result = qword_1EA386EF0;
  if (!qword_1EA386EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EF0);
  }
  return result;
}

unint64_t sub_1C3C920D8()
{
  unint64_t result = qword_1EA386EF8;
  if (!qword_1EA386EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386EF8);
  }
  return result;
}

unint64_t sub_1C3C9212C()
{
  unint64_t result = qword_1EA386F00;
  if (!qword_1EA386F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F00);
  }
  return result;
}

unint64_t sub_1C3C92180()
{
  unint64_t result = qword_1EA386F08;
  if (!qword_1EA386F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F08);
  }
  return result;
}

unint64_t sub_1C3C921D4()
{
  unint64_t result = qword_1EA386F18;
  if (!qword_1EA386F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F18);
  }
  return result;
}

unint64_t sub_1C3C92228()
{
  unint64_t result = qword_1EA386F20;
  if (!qword_1EA386F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F20);
  }
  return result;
}

unint64_t sub_1C3C9227C()
{
  unint64_t result = qword_1EA386F30;
  if (!qword_1EA386F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F30);
  }
  return result;
}

uint64_t sub_1C3C922D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3C92310()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C3C92348()
{
  unint64_t result = qword_1EA386F58;
  if (!qword_1EA386F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F58);
  }
  return result;
}

uint64_t sub_1C3C9239C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3DB8B98();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3C923E0()
{
  unint64_t result = qword_1EA386F60;
  if (!qword_1EA386F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F60);
  }
  return result;
}

uint64_t sub_1C3C92434(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386F40);
    sub_1C3C9239C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C924B4(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return (*a1 >> 3) + 3;
  }
  else {
    return v1;
  }
}

unint64_t *sub_1C3C924D0(unint64_t *result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 3);
    unint64_t v3 = 0xC000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationSelectionDocument.Selection()
{
  return &type metadata for RealtimeCollaborationSelectionDocument.Selection;
}

void *_s14TableSelectionOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s14TableSelectionOwxx()
{
  return swift_release();
}

void *_s14TableSelectionOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *_s14TableSelectionOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s14TableSelectionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s14TableSelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)uint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C3C92674(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 4;
  }
}

void *sub_1C3C92690(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1C3C926A0(unint64_t *result, uint64_t a2)
{
  if (a2 < 4)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 4);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationSelectionDocument.TableSelection()
{
  return &type metadata for RealtimeCollaborationSelectionDocument.TableSelection;
}

ValueMetadata *_s14TableSelectionO5TypesOMa()
{
  return &_s14TableSelectionO5TypesON;
}

uint64_t _s14TableSelectionO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14TableSelectionO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C92850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14TableSelectionO10CodingKeysOMa()
{
  return &_s14TableSelectionO10CodingKeysON;
}

unsigned char *_s9SelectionO5TypesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C92954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SelectionO5TypesOMa()
{
  return &_s9SelectionO5TypesON;
}

unsigned char *_s14TableSelectionO5TypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C92A58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SelectionO10CodingKeysOMa()
{
  return &_s9SelectionO10CodingKeysON;
}

unint64_t sub_1C3C92A94()
{
  unint64_t result = qword_1EA386F70;
  if (!qword_1EA386F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F70);
  }
  return result;
}

unint64_t sub_1C3C92AEC()
{
  unint64_t result = qword_1EA386F78;
  if (!qword_1EA386F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F78);
  }
  return result;
}

unint64_t sub_1C3C92B44()
{
  unint64_t result = qword_1EA386F80;
  if (!qword_1EA386F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F80);
  }
  return result;
}

unint64_t sub_1C3C92B9C()
{
  unint64_t result = qword_1EA386F88;
  if (!qword_1EA386F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F88);
  }
  return result;
}

unint64_t sub_1C3C92BF4()
{
  unint64_t result = qword_1EA386F90;
  if (!qword_1EA386F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F90);
  }
  return result;
}

unint64_t sub_1C3C92C4C()
{
  unint64_t result = qword_1EA386F98;
  if (!qword_1EA386F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386F98);
  }
  return result;
}

unint64_t sub_1C3C92CA4()
{
  unint64_t result = qword_1EA386FA0;
  if (!qword_1EA386FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FA0);
  }
  return result;
}

unint64_t sub_1C3C92CFC()
{
  unint64_t result = qword_1EA386FA8;
  if (!qword_1EA386FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FA8);
  }
  return result;
}

uint64_t sub_1C3C92D50()
{
  unint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C3C92D9C()
{
  unint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C3C92DE4()
{
  unint64_t result = qword_1EA386FB0;
  if (!qword_1EA386FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FB0);
  }
  return result;
}

unint64_t sub_1C3C92E38()
{
  unint64_t result = qword_1EA386FB8;
  if (!qword_1EA386FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FB8);
  }
  return result;
}

uint64_t sub_1C3C92E8C()
{
  unint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t castOrFatalError<A>(_:as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v9[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v9[0] = swift_allocObject();
  sub_1C3C499AC(a1, v9[0] + 16);
  castOrFatalError<A>(_:as:)((uint64_t)v9, a2, a3, a4);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void v22[4];
  _WORD v23[8];
  unsigned char v24[32];

  uint64_t v21 = a2;
  BOOL v7 = sub_1C3DBB668();
  int v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_1C3DBA938();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v20 - v13;
  sub_1C3C4BC70(a1, (uint64_t)v24);
  uint64_t v15 = swift_dynamicCast();
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
  if (v15)
  {
    unint64_t v17 = *(void *)(a3 - 8);
    v16(v14, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a4, v14, a3);
  }
  else
  {
    v16(v14, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1C3C4BC70(a1, (uint64_t)v24);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    strcpy((char *)v23, "Cannot cast ");
    HIBYTE(v23[6]) = 0;
    v23[7] = -5120;
    sub_1C3C4BC70((uint64_t)v24, (uint64_t)v22);
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    sub_1C3DB9D68();
    v22[3] = swift_getMetatypeMetadata();
    v22[0] = v21;
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    v19(v10, v7);
    unint64_t result = sub_1C3DBAF58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C92F70()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C93310()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA386FC0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA386FC0);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL static TranscriptPostProcessorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptPostProcessorError.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t TranscriptPostProcessorError.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t static TranscriptPostProcessor.paragraphSpacer.getter()
{
  return 2570;
}

uint64_t sub_1C3C9346C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v5 = sub_1C3DB9E88();
  uint64_t v6 = MEMORY[0x1C877B1D0](v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_1C3D8288C(0, v9[2] + 1, 1, v9);
    *a4 = v9;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_1C3D8288C((void *)(v11 > 1), v12 + 1, 1, v9);
    *a4 = v9;
  }
  v9[2] = v12 + 1;
  id v13 = &v9[2 * v12];
  v13[4] = v6;
  v13[5] = v8;
  return 1;
}

uint64_t sub_1C3C9353C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  int v3 = v2;
  uint64_t v40 = a2;
  uint64_t v5 = sub_1C3DB8218();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = a1[1];
  unint64_t v10 = *a1;
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v9) & 0xF;
  }
  else {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v12 = 7;
  if (((v9 >> 60) & ((v10 & 0x800000000000000) == 0)) != 0) {
    uint64_t v12 = 11;
  }
  unint64_t v13 = v12 | (v11 << 16);
  swift_bridgeObjectRetain();
  unint64_t v49 = v13;
  if (!v11) {
    goto LABEL_14;
  }
  unint64_t v13 = v49;
  sub_1C3DB9D28();
  sub_1C3DB9E58();
  uint64_t v39 = v8;
  char v14 = sub_1C3DB9B38();
  int v3 = v2;
  uint64_t v8 = v39;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    goto LABEL_14;
  }
  unint64_t v13 = sub_1C3DB9D28();
  if (v13 < 0x4000) {
    goto LABEL_14;
  }
  unint64_t v38 = 4 * v11;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_1C3DB9D28();
    sub_1C3DB9E58();
    swift_bridgeObjectRelease();
    char v15 = sub_1C3DB9B38();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      break;
    }
    unint64_t v13 = sub_1C3DB9D28();
    if (v13 < 0x4000) {
      goto LABEL_14;
    }
  }
  if (v38 < v13 >> 14)
  {
    __break(1u);
  }
  else
  {
LABEL_14:
    unint64_t v38 = v10;
    uint64_t v39 = v3;
    unint64_t v41 = v10;
    unint64_t v42 = v9;
    sub_1C3DB81D8();
    sub_1C3C2A4A4();
    uint64_t v17 = sub_1C3DBA9E8();
    unint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v47 = v17;
    unint64_t v48 = v19;
    swift_bridgeObjectRetain();
    sub_1C3C9392C(v17, v19);
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (!v21 || (char v22 = sub_1C3DB9B48(), swift_bridgeObjectRelease(), (v22 & 1) == 0)) {
      sub_1C3DB9D68();
    }
    uint64_t v23 = v47;
    unint64_t v24 = v48;
    swift_bridgeObjectRetain();
    sub_1C3D5F1C8(1);
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1C3DBA958();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    unint64_t v28 = sub_1C3CD2318(1uLL, v23, v24);
    unint64_t v30 = v29;
    unint64_t v32 = v31;
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v45 = v25;
    uint64_t v46 = v27;
    unint64_t v41 = v28;
    unint64_t v42 = v30;
    unint64_t v43 = v32;
    unint64_t v44 = v34;
    sub_1C3C7E654();
    swift_bridgeObjectRetain();
    sub_1C3DB9D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v41 = v49;
    unint64_t v42 = v13;
    unint64_t v43 = v38;
    unint64_t v44 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387000);
    sub_1C3C4BDB4(&qword_1EA387008, &qword_1EA387000);
    sub_1C3DB9D48();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v35 = v46;
    uint64_t v36 = v40;
    *uint64_t v40 = v45;
    v36[1] = v35;
  }
  return result;
}

uint64_t sub_1C3C9392C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1C3DB9D28();
  return sub_1C3DB9E58();
}

uint64_t sub_1C3C939AC(unint64_t a1, char *a2, void *a3)
{
  return sub_1C3C93C70(a1, a2, a3);
}

uint64_t TranscriptPostProcessor.deinit()
{
  return v0;
}

uint64_t TranscriptPostProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C3C939DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F38908]), sel_initWithUnit_, a4);
  uint64_t v6 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v5, sel_setString_, v6);

  objc_msgSend(v5, sel_setLanguage_, a3);
  sub_1C3DBA638();

  return v8;
}

uint64_t sub_1C3C93AF4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v1, 0);
    uint64_t v2 = v14;
    unsigned int v4 = (unint64_t *)(a1 + 40);
    do
    {
      unint64_t v5 = *v4;
      v12[0] = *(v4 - 1);
      v12[1] = v5;
      sub_1C3C9353C(v12, v13);
      uint64_t v6 = v13[0];
      uint64_t v7 = v13[1];
      uint64_t v14 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C3C9D1E0(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 2;
      *(void *)(v2 + 16) = v9 + 1;
      uint64_t v10 = v2 + 16 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3C93BD4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C3DB9D38();
    return sub_1C3DB9E88();
  }
  return result;
}

uint64_t sub_1C3C93C70(unint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = v3;
  v330 = a2;
  unint64_t v337 = a1;
  uint64_t v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386FE0);
  uint64_t v6 = MEMORY[0x1F4188790](v318);
  v317 = (char *)v310 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v323 = (uint64_t)v310 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386FE8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v322 = (char *)v310 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v310 - v13;
  uint64_t v339 = sub_1C3DB8218();
  v332 = *(char **)(v339 - 8);
  MEMORY[0x1F4188790](v339);
  v338 = (char *)v310 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v329 = (void *)sub_1C3DB84F8();
  MEMORY[0x1F4188790](v329);
  v328 = (char *)v310 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = (void *)sub_1C3DB85C8();
  v326 = (void (**)(char *, uint64_t, void *))*(v327 - 1);
  uint64_t v17 = MEMORY[0x1F4188790](v327);
  v324 = (char *)v310 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v325 = (char *)v310 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386190);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  v321 = (void *)((char *)v310 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  v335 = (void (*)(char *, uint64_t))((char *)v310 - v23);
  uint64_t v340 = type metadata accessor for TranscriptViewModelSegment(0);
  v331 = *(void **)(v340 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v340);
  uint64_t v26 = (char *)v310 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  v316 = (char *)v310 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  unint64_t v31 = (char *)v310 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  v319 = (void *)((char *)v310 - v33);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v320 = (uint64_t)v310 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v334 = (uint64_t)v310 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)v310 - v39;
  MEMORY[0x1F4188790](v38);
  unint64_t v42 = (void *)((char *)v310 - v41);
  if (!objc_msgSend(a3, sel_audioTranscriptPostProcessingEnabled))
  {
    if (qword_1EA385858 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1C3DB9048();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EA386FC0);
    uint64_t v50 = sub_1C3DB9028();
    os_log_type_t v51 = sub_1C3DBA688();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_1C3A61000, v50, v51, "Audio transcript post-processing disabled by cloud config.", v52, 2u);
      MEMORY[0x1C877E600](v52, -1, -1);
    }

    sub_1C3C966B0();
    swift_allocError();
    char v48 = 1;
    goto LABEL_13;
  }
  if (ICInternalSettingsShouldDisableTranscriptPostProcessing())
  {
    if (qword_1EA385858 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1C3DB9048();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EA386FC0);
    unint64_t v44 = sub_1C3DB9028();
    os_log_type_t v45 = sub_1C3DBA688();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1C3A61000, v44, v45, "Audio transcript post-processing disabled by user defaults.", v46, 2u);
      MEMORY[0x1C877E600](v46, -1, -1);
    }

    sub_1C3C966B0();
    swift_allocError();
    char v48 = 2;
    goto LABEL_13;
  }
  int64_t v54 = *(void *)(v337 + 16);
  if (!v54)
  {
    if (qword_1EA385858 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_1C3DB9048();
    __swift_project_value_buffer(v95, (uint64_t)qword_1EA386FC0);
    uint64_t v96 = sub_1C3DB9028();
    os_log_type_t v97 = sub_1C3DBA698();
    if (os_log_type_enabled(v96, v97))
    {
      char v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v98 = 0;
      _os_log_impl(&dword_1C3A61000, v96, v97, "Tried to post-process zero segments.", v98, 2u);
      MEMORY[0x1C877E600](v98, -1, -1);
    }

    return MEMORY[0x1E4FBC860];
  }
  v311 = v26;
  v312 = v14;
  uint64_t v313 = v10;
  unint64_t v314 = v4;
  unint64_t v55 = (*((unsigned __int8 *)v331 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v331 + 80);
  unint64_t v333 = v55;
  uint64_t v56 = v337 + v55;
  uint64_t v341 = v331[9];
  swift_bridgeObjectRetain();
  uint64_t v315 = v56;
  int64_t v336 = v54;
  int64_t v57 = v54;
  do
  {
    sub_1C3C96704(v56, (uint64_t)v42);
    uint64_t v58 = *(void *)((char *)v42 + *(int *)(v340 + 32) + 8);
    sub_1C3C96768((uint64_t)v42);
    if (v58)
    {
      swift_bridgeObjectRelease();
      sub_1C3C966B0();
      swift_allocError();
      char v48 = 3;
LABEL_13:
      *uint64_t v47 = v48;
      swift_willThrow();
      return (uint64_t)v42;
    }
    v56 += v341;
    --v57;
  }
  while (v57);
  swift_bridgeObjectRelease();
  if (ICInternalSettingsShouldPostProcessOnlyTranscriptParagraphs())
  {
    int64_t v59 = v336;
    if (qword_1EA385858 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_1C3DB9048();
    __swift_project_value_buffer(v60, (uint64_t)qword_1EA386FC0);
    uint64_t v61 = sub_1C3DB9028();
    os_log_type_t v62 = sub_1C3DBA688();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v64 = v315;
    if (v63)
    {
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v65 = 0;
      _os_log_impl(&dword_1C3A61000, v61, v62, "PostProcessOnlyTranscriptParagraphs default was set, so only doing light processing.", v65, 2u);
      MEMORY[0x1C877E600](v65, -1, -1);
    }

    uint64_t v66 = v64;
    uint64_t v67 = (uint64_t)v335;
    sub_1C3C96704(v66, (uint64_t)v335);
    uint64_t v68 = (char *)v331[7];
    v338 = (char *)(v331 + 7);
    v332 = v68;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v68)(v67, 0, 1, v340);
    swift_bridgeObjectRetain();
    unint64_t v42 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v69 = v55;
    do
    {
      int64_t v336 = v59;
      uint64_t v339 = v69;
      uint64_t v70 = v337 + v69;
      sub_1C3C2A448(v67, (uint64_t *)&unk_1EA386190);
      sub_1C3C96704(v70, v67);
      uint64_t v71 = (int *)v340;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v332)(v67, 0, 1, v340);
      uint64_t v72 = (uint64_t *)(v70 + v71[5]);
      uint64_t v74 = *v72;
      unint64_t v73 = v72[1];
      uint64_t v344 = v74;
      unint64_t v345 = v73;
      int64_t v346 = 2570;
      unint64_t v347 = 0xE200000000000000;
      uint64_t v342 = 0;
      unint64_t v343 = 0xE000000000000000;
      sub_1C3C2A4A4();
      uint64_t v344 = sub_1C3DBA9F8();
      unint64_t v345 = v75;
      int64_t v346 = 46;
      unint64_t v347 = 0xE100000000000000;
      uint64_t v342 = 657966;
      unint64_t v343 = 0xE300000000000000;
      uint64_t v76 = sub_1C3DBA9F8();
      uint64_t v78 = v77;
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void *)(v70 + v71[6]);
      uint64_t v80 = *(void *)(v70 + v71[7]);
      uint64_t v81 = v71[8];
      uint64_t v82 = v71[9];
      uint64_t v83 = v70 + v81;
      uint64_t v85 = *(void *)(v70 + v81);
      uint64_t v84 = *(void *)(v83 + 8);
      char v86 = v42;
      uint64_t v87 = &v40[v81];
      swift_bridgeObjectRetain();
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      uint64_t v88 = (uint64_t *)&v40[v71[5]];
      *uint64_t v88 = v76;
      v88[1] = v78;
      *(void *)&v40[v71[6]] = v79;
      *(void *)&v40[v71[7]] = v80;
      *(void *)uint64_t v87 = v85;
      *((void *)v87 + 1) = v84;
      unint64_t v42 = v86;
      v40[v82] = 2;
      uint64_t v89 = v334;
      sub_1C3C96704((uint64_t)v40, v334);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v42 = (void *)sub_1C3D82FC8(0, v42[2] + 1, 1, (unint64_t)v42);
      }
      unint64_t v91 = v42[2];
      unint64_t v90 = v42[3];
      int64_t v92 = v336;
      uint64_t v93 = v339;
      if (v91 >= v90 >> 1) {
        unint64_t v42 = (void *)sub_1C3D82FC8(v90 > 1, v91 + 1, 1, (unint64_t)v42);
      }
      uint64_t v94 = v341;
      uint64_t v69 = v93 + v341;
      v42[2] = v91 + 1;
      sub_1C3C57C4C(v89, (uint64_t)v42 + v333 + v91 * v94);
      sub_1C3C96768((uint64_t)v40);
      int64_t v59 = v92 - 1;
      uint64_t v67 = (uint64_t)v335;
    }
    while (v59);
    swift_bridgeObjectRelease();
    if (!v42[2])
    {
      sub_1C3C2A448(v67, (uint64_t *)&unk_1EA386190);
      return (uint64_t)v42;
    }
    uint64_t v109 = (uint64_t)v321;
    sub_1C3C9683C(v67, (uint64_t)v321);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v331[6])(v109, 1, v340) == 1)
    {
      sub_1C3C2A448(v67, (uint64_t *)&unk_1EA386190);
      sub_1C3C2A448(v109, (uint64_t *)&unk_1EA386190);
      return (uint64_t)v42;
    }
    unint64_t v154 = v320;
    sub_1C3C57C4C(v109, v320);
    if (!v42[2]) {
      goto LABEL_207;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v156 = (unint64_t)&v348;
    uint64_t v69 = (uint64_t)v319;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_208;
    }
    unint64_t v157 = v42[2];
    if (!v157) {
      goto LABEL_209;
    }
    goto LABEL_80;
  }
  uint64_t v320 = v9;
  uint64_t v344 = MEMORY[0x1E4FBC860];
  int64_t v99 = v336;
  sub_1C3C9D1E0(0, v336, 0);
  uint64_t v100 = (void *)v344;
  uint64_t v101 = v315;
  int64_t v102 = v99;
  do
  {
    sub_1C3C96704(v101, (uint64_t)v31);
    uint64_t v103 = &v31[*(int *)(v340 + 20)];
    uint64_t v105 = *(void *)v103;
    uint64_t v104 = *((void *)v103 + 1);
    swift_bridgeObjectRetain();
    sub_1C3C96768((uint64_t)v31);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C3C9D1E0(0, v100[2] + 1, 1);
      uint64_t v100 = (void *)v344;
    }
    unint64_t v107 = v100[2];
    unint64_t v106 = v100[3];
    if (v107 >= v106 >> 1)
    {
      sub_1C3C9D1E0(v106 > 1, v107 + 1, 1);
      uint64_t v100 = (void *)v344;
    }
    v100[2] = v107 + 1;
    uint64_t v108 = &v100[2 * v107];
    v108[4] = v105;
    v108[5] = v104;
    v101 += v341;
    --v102;
  }
  while (v102);
  v321 = v100;
  uint64_t v344 = 0;
  unint64_t v345 = 0xE000000000000000;
  uint64_t v110 = (uint64_t)v324;
  sub_1C3DB85B8();
  swift_bridgeObjectRetain();
  uint64_t v111 = v315;
  unint64_t v112 = v314;
  uint64_t v113 = v330;
  while (1)
  {
    sub_1C3CC93A8(v110, v111, &v344);
    if (v112) {
      break;
    }
    unint64_t v112 = 0;
    v111 += v341;
    if (!--v99)
    {
      swift_bridgeObjectRelease();
      uint64_t v114 = v326;
      uint64_t v115 = v325;
      uint64_t v116 = v110;
      uint64_t v117 = v327;
      v326[4](v325, v116, v327);
      swift_bridgeObjectRelease();
      sub_1C3DB84E8();
      ((void (*)(char *, void *))v114[1])(v115, v117);
      sub_1C3C57BD0();
      uint64_t v118 = sub_1C3DB9E68();
      uint64_t v120 = v119;
      uint64_t v69 = *MEMORY[0x1E4F386F0];
      if (v113)
      {
        uint64_t v121 = v113;
        v328 = v113;
      }
      else
      {
        v328 = (char *)(id)v69;
        uint64_t v121 = (void *)v69;
      }
      v327 = v121;
      uint64_t v122 = sub_1C3DB9C38();
      unint64_t v42 = v123;
      if (v122 == sub_1C3DB9C38() && v42 == v124)
      {
        v136 = v113;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v69 = (uint64_t)v124;
        char v126 = sub_1C3DBB3B8();
        v127 = v113;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v126 & 1) == 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v128 = qword_1EA385858;
          uint64_t v129 = v327;
          if (v128 != -1) {
            swift_once();
          }
          uint64_t v130 = sub_1C3DB9048();
          __swift_project_value_buffer(v130, (uint64_t)qword_1EA386FC0);
          v131 = v129;
          v132 = sub_1C3DB9028();
          os_log_type_t v133 = sub_1C3DBA688();
          if (os_log_type_enabled(v132, v133))
          {
            v134 = (uint8_t *)swift_slowAlloc();
            unint64_t v42 = (void *)swift_slowAlloc();
            *(_DWORD *)v134 = 138412290;
            sub_1C3DB9C38();
            uint64_t v135 = sub_1C3DB9BF8();
            swift_bridgeObjectRelease();
            uint64_t v344 = v135;
            sub_1C3DBA9A8();
            *unint64_t v42 = v135;

            _os_log_impl(&dword_1C3A61000, v132, v133, "Resolved language %@ was not supported. Skipping post-processing.", v134, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
            swift_arrayDestroy();
            MEMORY[0x1C877E600](v42, -1, -1);
            MEMORY[0x1C877E600](v134, -1, -1);
          }
          else
          {

            v132 = v131;
          }

          sub_1C3C966B0();
          swift_allocError();
          unsigned char *v190 = 0;
          swift_willThrow();

          return (uint64_t)v42;
        }
      }
      if (sub_1C3DBA2F8())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1EA385858 != -1) {
          swift_once();
        }
        uint64_t v137 = sub_1C3DB9048();
        __swift_project_value_buffer(v137, (uint64_t)qword_1EA386FC0);
        v138 = sub_1C3DB9028();
        os_log_type_t v139 = sub_1C3DBA698();
        if (os_log_type_enabled(v138, v139))
        {
          v140 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v140 = 0;
          _os_log_impl(&dword_1C3A61000, v138, v139, "Cancelled after step 1. Aborting.", v140, 2u);
          MEMORY[0x1C877E600](v140, -1, -1);
        }

        sub_1C3C966B0();
        swift_allocError();
        unsigned char *v141 = 4;
        swift_willThrow();
LABEL_91:

        return (uint64_t)v42;
      }
      unint64_t v314 = 0;
      uint64_t v142 = sub_1C3DB9D18();
      uint64_t v109 = sub_1C3C939DC(v118, v120, (uint64_t)v328, 1);
      swift_bridgeObjectRelease();
      unint64_t v42 = *(void **)(v109 + 16);
      v143 = (void *)MEMORY[0x1E4FBC860];
      if (v42)
      {
        unint64_t v337 = v142;
        uint64_t v69 = (uint64_t)(v332 + 8);
        swift_bridgeObjectRetain();
        v335 = (void (*)(char *, uint64_t))v109;
        v144 = (unint64_t *)(v109 + 40);
        do
        {
          unint64_t v145 = *v144;
          uint64_t v344 = *(v144 - 1);
          unint64_t v345 = v145;
          swift_bridgeObjectRetain();
          v146 = v338;
          sub_1C3DB81D8();
          sub_1C3C2A4A4();
          uint64_t v147 = sub_1C3DBA9E8();
          unint64_t v149 = v148;
          (*(void (**)(char *, uint64_t))v69)(v146, v339);
          uint64_t v344 = v147;
          unint64_t v345 = v149;
          swift_bridgeObjectRetain();
          sub_1C3DB9D68();
          swift_bridgeObjectRelease();
          uint64_t v150 = v344;
          unint64_t v112 = v345;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v143 = sub_1C3D8288C(0, v143[2] + 1, 1, v143);
          }
          unint64_t v152 = v143[2];
          unint64_t v151 = v143[3];
          uint64_t v120 = v152 + 1;
          if (v152 >= v151 >> 1) {
            v143 = sub_1C3D8288C((void *)(v151 > 1), v152 + 1, 1, v143);
          }
          v144 += 2;
          v143[2] = v120;
          v153 = &v143[2 * v152];
          v153[4] = v150;
          v153[5] = v112;
          swift_bridgeObjectRelease();
          unint64_t v42 = (void *)((char *)v42 - 1);
        }
        while (v42);
        uint64_t v109 = (uint64_t)v335;
        swift_bridgeObjectRelease();
        uint64_t v142 = v337;
      }
      swift_bridgeObjectRelease();
      v158 = v143;
      unint64_t v154 = v143[2];
      if (v154)
      {
        unint64_t v112 = v154 - 1;
        swift_bridgeObjectRetain();
        uint64_t v159 = sub_1C3C93BD4(v142);
        uint64_t v161 = v160;
        unint64_t v42 = v162;
        uint64_t v69 = v163;
        swift_bridgeObjectRelease();
        uint64_t v120 = MEMORY[0x1C877B1D0](v159, v161, v42, v69);
        uint64_t v109 = v164;
        swift_bridgeObjectRelease();
        v329 = v158;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_84;
        }
      }
      else
      {
        __break(1u);
      }
      v329 = sub_1C3D70F10(v329);
LABEL_84:
      uint64_t v67 = (uint64_t)v329;
      if (v154 <= v329[2])
      {
        v331 = v329 + 4;
        v165 = &v329[2 * v112 + 4];
        uint64_t *v165 = v120;
        v165[1] = v109;
        swift_bridgeObjectRelease();
        if (sub_1C3DBA2F8())
        {
          swift_bridgeObjectRelease();
          if (qword_1EA385858 != -1) {
            swift_once();
          }
          uint64_t v166 = sub_1C3DB9048();
          __swift_project_value_buffer(v166, (uint64_t)qword_1EA386FC0);
          v167 = sub_1C3DB9028();
          os_log_type_t v168 = sub_1C3DBA698();
          if (os_log_type_enabled(v167, v168))
          {
            v169 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v169 = 0;
            _os_log_impl(&dword_1C3A61000, v167, v168, "Cancelled after step 2. Aborting.", v169, 2u);
            MEMORY[0x1C877E600](v169, -1, -1);
          }

          sub_1C3C966B0();
          swift_allocError();
          unsigned char *v170 = 4;
          swift_willThrow();
          swift_bridgeObjectRelease();
          goto LABEL_91;
        }
        int64_t v171 = MEMORY[0x1E4FBC860];
        uint64_t v342 = MEMORY[0x1E4FBC860];
        v330 = *(char **)(v67 + 16);
        if (v330)
        {
          v172 = (void (**)(char *, uint64_t))(v332 + 8);
          swift_bridgeObjectRetain_n();
          unint64_t v42 = (void *)sub_1C3C2A4A4();
          unint64_t v173 = 0;
          do
          {
            v175 = (void (*)(char *, uint64_t))v331[2 * v173 + 1];
            uint64_t v344 = v331[2 * v173];
            unint64_t v345 = (unint64_t)v175;
            int64_t v346 = 8238;
            unint64_t v347 = 0xE200000000000000;
            swift_bridgeObjectRetain();
            uint64_t v176 = sub_1C3DBA9D8();
            int64_t v346 = v171;
            uint64_t v177 = *(void *)(v176 + 16);
            if (v177)
            {
              uint64_t v334 = v176;
              v335 = v175;
              unint64_t v337 = v173;
              v178 = (unint64_t *)(v176 + 40);
              do
              {
                uint64_t v180 = *(v178 - 1);
                unint64_t v179 = *v178;
                uint64_t v344 = v180;
                unint64_t v345 = v179;
                swift_bridgeObjectRetain();
                v181 = v338;
                sub_1C3DB81B8();
                uint64_t v182 = sub_1C3DBA9E8();
                unint64_t v184 = v183;
                (*v172)(v181, v339);
                swift_bridgeObjectRelease();
                uint64_t v185 = HIBYTE(v184) & 0xF;
                if ((v184 & 0x2000000000000000) == 0) {
                  uint64_t v185 = v182 & 0xFFFFFFFFFFFFLL;
                }
                if (v185)
                {
                  int64_t v186 = v346;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1C3C9D1E0(0, *(void *)(v186 + 16) + 1, 1);
                    int64_t v186 = v346;
                  }
                  unint64_t v188 = *(void *)(v186 + 16);
                  unint64_t v187 = *(void *)(v186 + 24);
                  if (v188 >= v187 >> 1)
                  {
                    sub_1C3C9D1E0(v187 > 1, v188 + 1, 1);
                    int64_t v186 = v346;
                  }
                  *(void *)(v186 + 16) = v188 + 1;
                  unint64_t v189 = v186 + 16 * v188;
                  *(void *)(v189 + 32) = v180;
                  *(void *)(v189 + 40) = v179;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                v178 += 2;
                --v177;
              }
              while (v177);
              swift_bridgeObjectRelease();
              uint64_t v174 = v346;
              int64_t v171 = MEMORY[0x1E4FBC860];
              unint64_t v173 = v337;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v174 = v171;
            }
            ++v173;
            sub_1C3D79560(v174);
            swift_bridgeObjectRelease();
          }
          while ((char *)v173 != v330);
          swift_bridgeObjectRelease_n();
        }
        uint64_t v191 = swift_bridgeObjectRetain();
        uint64_t v192 = sub_1C3C93AF4(v191);
        swift_bridgeObjectRelease();
        if (sub_1C3DBA2F8())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1EA385858 != -1) {
            swift_once();
          }
          uint64_t v193 = sub_1C3DB9048();
          __swift_project_value_buffer(v193, (uint64_t)qword_1EA386FC0);
          v194 = sub_1C3DB9028();
          os_log_type_t v195 = sub_1C3DBA698();
          if (os_log_type_enabled(v194, v195))
          {
            v196 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v196 = 0;
            _os_log_impl(&dword_1C3A61000, v194, v195, "Cancelled after step 3. Aborting.", v196, 2u);
            MEMORY[0x1C877E600](v196, -1, -1);
          }
          goto LABEL_117;
        }
        uint64_t v344 = v192;
        uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
        uint64_t v199 = sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
        v331 = (void *)v198;
        v330 = (char *)v199;
        uint64_t v200 = sub_1C3DB9B88();
        unint64_t v202 = v201;
        swift_bridgeObjectRelease();
        uint64_t v344 = v200;
        unint64_t v345 = v202;
        v203 = v338;
        sub_1C3DB81B8();
        unint64_t v337 = sub_1C3C2A4A4();
        unint64_t v42 = (void *)sub_1C3DBA9C8();
        v204 = (void (*)(char *, uint64_t))*((void *)v332 + 1);
        v332 += 8;
        v335 = v204;
        v204(v203, v339);
        swift_bridgeObjectRelease();
        uint64_t v205 = v42[2];
        uint64_t v206 = MEMORY[0x1E4FBC860];
        if (v205)
        {
          v207 = v42 + 5;
          v208 = v321;
          do
          {
            uint64_t v213 = *(v207 - 1);
            uint64_t v212 = *v207;
            uint64_t v214 = HIBYTE(*v207) & 0xF;
            if ((*v207 & 0x2000000000000000) == 0) {
              uint64_t v214 = v213 & 0xFFFFFFFFFFFFLL;
            }
            if (v214)
            {
              swift_bridgeObjectRetain();
              char v215 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v344 = v206;
              if ((v215 & 1) == 0)
              {
                sub_1C3C9D1E0(0, *(void *)(v206 + 16) + 1, 1);
                v208 = v321;
                uint64_t v206 = v344;
              }
              unint64_t v210 = *(void *)(v206 + 16);
              unint64_t v209 = *(void *)(v206 + 24);
              if (v210 >= v209 >> 1)
              {
                sub_1C3C9D1E0(v209 > 1, v210 + 1, 1);
                v208 = v321;
                uint64_t v206 = v344;
              }
              *(void *)(v206 + 16) = v210 + 1;
              unint64_t v211 = v206 + 16 * v210;
              *(void *)(v211 + 32) = v213;
              *(void *)(v211 + 40) = v212;
            }
            v207 += 2;
            --v205;
          }
          while (v205);
        }
        else
        {
          v208 = v321;
        }
        swift_bridgeObjectRelease();
        int64_t v346 = v206;
        int64_t v216 = *(void *)(v206 + 16);
        int64_t v217 = v208[2];
        if (v216 == v217)
        {
          swift_bridgeObjectRelease();
          unint64_t v218 = v336;
          v219 = v329;
          uint64_t v220 = v315;
          goto LABEL_132;
        }
        uint64_t v240 = qword_1EA385858;
        swift_retain();
        if (v240 != -1) {
          swift_once();
        }
        uint64_t v241 = sub_1C3DB9048();
        v310[1] = __swift_project_value_buffer(v241, (uint64_t)qword_1EA386FC0);
        v242 = sub_1C3DB9028();
        os_log_type_t v243 = sub_1C3DBA6A8();
        if (os_log_type_enabled(v242, v243))
        {
          v244 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v244 = 0;
          _os_log_impl(&dword_1C3A61000, v242, v243, "There was a difference in word count between the initial and post-processed strings. Ideally this shouldn't happen, but sometimes it is unavoidable. Trying to reconcile this with a diff.", v244, 2u);
          MEMORY[0x1C877E600](v244, -1, -1);
        }

        if (v216)
        {
          v349 = (void *)MEMORY[0x1E4FBC860];
          sub_1C3C9D1E0(0, v216, 0);
          uint64_t v245 = v206 + 40;
          do
          {
            uint64_t v344 = sub_1C3DB9C98();
            unint64_t v345 = v246;
            swift_bridgeObjectRetain();
            v247 = v338;
            sub_1C3DB81D8();
            uint64_t v248 = sub_1C3DBA9E8();
            uint64_t v334 = v249;
            v335(v247, v339);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v250 = v349;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C3C9D1E0(0, v250[2] + 1, 1);
              v250 = v349;
            }
            unint64_t v252 = v250[2];
            unint64_t v251 = v250[3];
            if (v252 >= v251 >> 1)
            {
              sub_1C3C9D1E0(v251 > 1, v252 + 1, 1);
              v250 = v349;
            }
            v245 += 16;
            v250[2] = v252 + 1;
            v253 = &v250[2 * v252];
            uint64_t v254 = v334;
            v253[4] = v248;
            v253[5] = v254;
            --v216;
          }
          while (v216);
          swift_release();
          if (v217)
          {
LABEL_153:
            v349 = (void *)MEMORY[0x1E4FBC860];
            sub_1C3C9D1E0(0, v217, 0);
            v255 = v321 + 5;
            do
            {
              uint64_t v344 = sub_1C3DB9C98();
              unint64_t v345 = v256;
              swift_bridgeObjectRetain();
              v257 = v338;
              sub_1C3DB81D8();
              uint64_t v258 = sub_1C3DBA9E8();
              uint64_t v260 = v259;
              v335(v257, v339);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v261 = v349;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C3C9D1E0(0, v261[2] + 1, 1);
                v261 = v349;
              }
              unint64_t v263 = v261[2];
              unint64_t v262 = v261[3];
              if (v263 >= v262 >> 1)
              {
                sub_1C3C9D1E0(v262 > 1, v263 + 1, 1);
                v261 = v349;
              }
              v255 += 2;
              v261[2] = v263 + 1;
              v264 = &v261[2 * v263];
              v264[4] = v258;
              v264[5] = v260;
              --v217;
            }
            while (v217);
            swift_bridgeObjectRelease();
LABEL_169:
            v319 = v261;
            uint64_t v344 = (uint64_t)v261;
            v349 = v250;
            v268 = v312;
            sub_1C3DB9B78();
            swift_bridgeObjectRelease();
            uint64_t v269 = v313;
            v270 = *(void (***)(char *, uint64_t, void *))(v313 + 16);
            uint64_t v271 = (uint64_t)v317;
            v330 = (char *)(v313 + 16);
            v326 = v270;
            ((void (*)(char *, char *, uint64_t))v270)(v317, v268, v320);
            uint64_t v272 = sub_1C3C4BDB4(&qword_1EA386FF8, &qword_1EA386FE8);
            sub_1C3DBA528();
            uint64_t v273 = v318;
            *(void *)(v271 + *(int *)(v318 + 36)) = v344;
            uint64_t v274 = v323;
            sub_1C3C967C4(v271, v323);
            unint64_t v42 = (void *)(v274 + *(int *)(v273 + 36));
            uint64_t v275 = *v42;
            sub_1C3DBA558();
            if (v275 != v344)
            {
              v325 = (char *)(v269 + 8);
              unint64_t v154 = v320;
              v324 = (char *)v272;
              v321 = v42;
              do
              {
                v285 = (void (*)(uint64_t *, void))sub_1C3DBA5C8();
                uint64_t v69 = *(void *)v286;
                uint64_t v287 = *(void *)(v286 + 8);
                uint64_t v288 = *(void *)(v286 + 16);
                int v289 = *(unsigned __int8 *)(v286 + 32);
                uint64_t v67 = *(unsigned __int8 *)(v286 + 33);
                uint64_t v334 = *(void *)(v286 + 24);
                LODWORD(v331) = v289;
                sub_1C3C9682C();
                v285(&v344, 0);
                v290 = v322;
                ((void (*)(char *, uint64_t, unint64_t))v326)(v322, v274, v154);
                uint64_t v109 = (uint64_t)v290;
                sub_1C3DBA568();
                (*(void (**)(char *, unint64_t))v325)(v290, v154);
                if (v67 == 1)
                {
                  uint64_t v109 = v346;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v109 = (uint64_t)sub_1C3D70F10((void *)v109);
                  }
                  unint64_t v291 = *(void *)(v109 + 16);
                  if (v69 >= v291) {
                    goto LABEL_204;
                  }
                  unint64_t v292 = v291 - 1;
                  uint64_t v293 = v291 - 1 - v69;
                  if (v293 < 0) {
                    goto LABEL_214;
                  }
                  memmove((void *)(v109 + 16 * v69 + 32), (const void *)(v109 + 16 * v69 + 48), 16 * v293);
                  *(void *)(v109 + 16) = v292;
                  sub_1C3C96834();
                  swift_bridgeObjectRelease();
                  int64_t v346 = v109;
                }
                else
                {
                  if (*(void *)(v346 + 16) < v69) {
                    goto LABEL_205;
                  }
                  if (v69 < 0) {
                    goto LABEL_206;
                  }
                  sub_1C3C47E08(v69, v69, v287, v288);
                }
                unint64_t v42 = v321;
                uint64_t v284 = *v321;
                uint64_t v274 = v323;
                unint64_t v154 = v320;
                sub_1C3DBA558();
              }
              while (v284 != v344);
            }
            sub_1C3C2A448(v274, &qword_1EA386FE0);
            char v276 = sub_1C3DBA2F8();
            int64_t v277 = v346;
            if (v276)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v278 = sub_1C3DB9028();
              os_log_type_t v279 = sub_1C3DBA698();
              BOOL v280 = os_log_type_enabled(v278, v279);
              v281 = v312;
              unint64_t v42 = v329;
              if (v280)
              {
                v282 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v282 = 0;
                _os_log_impl(&dword_1C3A61000, v278, v279, "Cancelled after step 4a. Aborting.", v282, 2u);
                MEMORY[0x1C877E600](v282, -1, -1);
              }

              sub_1C3C966B0();
              swift_allocError();
              unsigned char *v283 = 4;
              swift_willThrow();

              (*(void (**)(char *, uint64_t))(v313 + 8))(v281, v320);
              goto LABEL_200;
            }
            unint64_t v42 = *(void **)(v346 + 16);
            v294 = (void *)MEMORY[0x1E4FBC860];
            if (v42)
            {
              v349 = (void *)MEMORY[0x1E4FBC860];
              swift_bridgeObjectRetain();
              sub_1C3C9D1E0(0, (int64_t)v42, 0);
              int64_t v295 = v277 + 40;
              do
              {
                uint64_t v344 = sub_1C3DB9C98();
                unint64_t v345 = v296;
                swift_bridgeObjectRetain();
                v297 = v338;
                sub_1C3DB81D8();
                uint64_t v298 = sub_1C3DBA9E8();
                uint64_t v300 = v299;
                v335(v297, v339);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v294 = v349;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1C3C9D1E0(0, v294[2] + 1, 1);
                  v294 = v349;
                }
                unint64_t v302 = v294[2];
                unint64_t v301 = v294[3];
                if (v302 >= v301 >> 1)
                {
                  sub_1C3C9D1E0(v301 > 1, v302 + 1, 1);
                  v294 = v349;
                }
                v295 += 16;
                v294[2] = v302 + 1;
                v303 = &v294[2 * v302];
                v303[4] = v298;
                v303[5] = v300;
                unint64_t v42 = (void *)((char *)v42 - 1);
                uint64_t v304 = v313;
              }
              while (v42);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v304 = v313;
            }
            char v305 = sub_1C3C6EDBC(v294, v319);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v218 = v336;
            uint64_t v220 = v315;
            if ((v305 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v306 = sub_1C3DB9028();
              os_log_type_t v307 = sub_1C3DBA6B8();
              if (os_log_type_enabled(v306, v307))
              {
                v308 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v308 = 0;
                _os_log_impl(&dword_1C3A61000, v306, v307, "The post-processor encountered a discrepancy where diffing was necessary and attempted to diff, however, the attempt was unsuccessful. This is unexpected.", v308, 2u);
                MEMORY[0x1C877E600](v308, -1, -1);
              }

              sub_1C3C966B0();
              swift_allocError();
              unsigned char *v309 = 5;
              swift_willThrow();

              (*(void (**)(char *, uint64_t))(v304 + 8))(v312, v320);
              goto LABEL_200;
            }
            (*(void (**)(char *, uint64_t))(v304 + 8))(v312, v320);
            v219 = v329;
LABEL_132:
            unint64_t v221 = *(void *)(v346 + 16);
            v329 = v219;
            int64_t v336 = v346;
            if (!v221)
            {
              unint64_t v223 = MEMORY[0x1E4FBC860];
              goto LABEL_161;
            }
            if (v221 > v218)
            {
              __break(1u);
            }
            else
            {
              v222 = (uint64_t *)(v346 + 40);
              unint64_t v223 = MEMORY[0x1E4FBC860];
              uint64_t v224 = (uint64_t)v311;
              unint64_t v42 = v316;
              v225 = (int *)v340;
              do
              {
                uint64_t v226 = *v222;
                v338 = (char *)*(v222 - 1);
                uint64_t v339 = v221;
                uint64_t v227 = *(void *)(v220 + v225[6]);
                uint64_t v228 = *(void *)(v220 + v225[7]);
                uint64_t v229 = v225[8];
                unint64_t v337 = v225[9];
                uint64_t v315 = v220;
                uint64_t v230 = v220 + v229;
                uint64_t v232 = *(void *)(v220 + v229);
                uint64_t v231 = *(void *)(v230 + 8);
                v233 = (void *)((char *)v42 + v229);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
                v234 = (void *)((char *)v42 + v225[5]);
                void *v234 = v338;
                v234[1] = v226;
                *(void *)((char *)v42 + v225[6]) = v227;
                *(void *)((char *)v42 + v225[7]) = v228;
                void *v233 = v232;
                v233[1] = v231;
                *((unsigned char *)v42 + v337) = 2;
                sub_1C3C96704((uint64_t)v42, v224);
                unint64_t v235 = v223;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v235 = sub_1C3D82FC8(0, *(void *)(v223 + 16) + 1, 1, v223);
                }
                unint64_t v223 = v235;
                unint64_t v237 = *(void *)(v235 + 16);
                unint64_t v236 = *(void *)(v235 + 24);
                uint64_t v238 = v315;
                if (v237 >= v236 >> 1) {
                  unint64_t v223 = sub_1C3D82FC8(v236 > 1, v237 + 1, 1, v235);
                }
                uint64_t v239 = v341;
                uint64_t v220 = v238 + v341;
                *(void *)(v223 + 16) = v237 + 1;
                sub_1C3C57C4C(v224, v223 + v333 + v237 * v239);
                sub_1C3C96768((uint64_t)v42);
                v222 += 2;
                unint64_t v221 = v339 - 1;
              }
              while (v339 != 1);
LABEL_161:
              swift_bridgeObjectRelease();
              if ((sub_1C3DBA2F8() & 1) == 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v223;
              }
              swift_bridgeObjectRelease();
              if (qword_1EA385858 == -1)
              {
LABEL_163:
                uint64_t v265 = sub_1C3DB9048();
                __swift_project_value_buffer(v265, (uint64_t)qword_1EA386FC0);
                v194 = sub_1C3DB9028();
                os_log_type_t v266 = sub_1C3DBA698();
                if (os_log_type_enabled(v194, v266))
                {
                  v267 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v267 = 0;
                  _os_log_impl(&dword_1C3A61000, v194, v266, "Cancelled after step 4. Aborting.", v267, 2u);
                  MEMORY[0x1C877E600](v267, -1, -1);
                }
LABEL_117:

                sub_1C3C966B0();
                swift_allocError();
                unsigned char *v197 = 4;
                swift_willThrow();

LABEL_200:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return (uint64_t)v42;
              }
            }
            swift_once();
            goto LABEL_163;
          }
        }
        else
        {
          swift_release();
          v250 = (void *)MEMORY[0x1E4FBC860];
          if (v217) {
            goto LABEL_153;
          }
        }
        swift_bridgeObjectRelease();
        v261 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_169;
      }
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      unint64_t v42 = (void *)sub_1C3D70F24((unint64_t)v42);
      unint64_t v157 = v42[2];
      if (!v157)
      {
LABEL_209:
        __break(1u);
LABEL_210:
        unint64_t v42 = (void *)sub_1C3D82FC8(v156 > 1, v157, 1, (unint64_t)v42);
LABEL_81:
        v42[2] = v157;
        sub_1C3C57C4C(v69, (uint64_t)v42 + v333 + v109);
        sub_1C3C96768(v154);
        sub_1C3C2A448(v67, (uint64_t *)&unk_1EA386190);
        return (uint64_t)v42;
      }
LABEL_80:
      uint64_t v109 = v341 * (v157 - 1);
      sub_1C3C96768((uint64_t)v42 + v333 + v109);
      v42[2] = v157 - 1;
      sub_1C3C96704(v154, v69);
      unint64_t v156 = v42[3];
      if (v157 > v156 >> 1) {
        goto LABEL_210;
      }
      goto LABEL_81;
    }
  }
  ((void (*)(uint64_t, void *))v326[1])(v110, v327);
  __break(1u);
LABEL_214:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

unint64_t sub_1C3C964F4()
{
  unint64_t result = qword_1EA386FD8;
  if (!qword_1EA386FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptPostProcessorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C96614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptPostProcessorError()
{
  return &type metadata for TranscriptPostProcessorError;
}

uint64_t type metadata accessor for TranscriptPostProcessor()
{
  return self;
}

uint64_t method lookup function for TranscriptPostProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscriptPostProcessor);
}

uint64_t dispatch thunk of static TranscriptPostProcessor.postProcess(rawTranscriptSegments:language:cloudConfiguration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1C3C966B0()
{
  unint64_t result = qword_1EA386FF0;
  if (!qword_1EA386FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386FF0);
  }
  return result;
}

uint64_t sub_1C3C96704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C96768(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3C967C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C9682C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C96834()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C9683C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C968A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3C9346C(a1, a2, a3, *(void ***)(v3 + 16));
}

void sub_1C3C968B0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  int64_t v1 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v0, sel_setName_, v1);

  qword_1EB6FC4E8 = (uint64_t)v0;
}

id sub_1C3C96928()
{
  if (qword_1EB6FC4E0 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EB6FC4E8;
  return v0;
}

id static NSFileCoordinator.fileCoordinationOperationQueue.getter()
{
  if (qword_1EB6FC4E0 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EB6FC4E8;
  return v0;
}

void NSFileCoordinator.coordinateWriting<A>(at:options:accessor:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v28 = a1;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FC738);
  uint64_t v8 = sub_1C3DBB688();
  uint64_t v27 = sub_1C3DBA938();
  uint64_t v9 = *(void *)(v27 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))((char *)&v23 - v12, 1, 1, v8);
  uint64_t v15 = sub_1C3DB8848();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  v16[3] = v13;
  v16[4] = a2;
  v16[5] = a3;
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = sub_1C3C96F20;
  v17[3] = v16;
  aBlock[4] = sub_1C3C96F64;
  void aBlock[5] = v17;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C3C96F8C;
  aBlock[3] = &block_descriptor_4;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v29, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v15, v28, aBlock, v18);
  _Block_release(v18);

  id v19 = aBlock[0];
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v15) {
    __break(1u);
  }
  if (v19)
  {
    v19;
    swift_willThrow();
    uint64_t v20 = v27;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v20);
    swift_release();

    return;
  }
  uint64_t v21 = v26;
  uint64_t v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v26, v13, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v21, 1, v8) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = v25;
    sub_1C3C97070(v8, (uint64_t)aBlock, v24);
    if (v22) {
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v20);
    swift_release();
  }
}

uint64_t sub_1C3C96D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FC738);
  uint64_t v9 = sub_1C3DBB688();
  uint64_t v10 = sub_1C3DBA938();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - v12;
  uint64_t v17 = a5;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a1;
  sub_1C3CD089C((void (*)(unsigned char *))sub_1C3C98054, (uint64_t)&v15 - v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 0, 1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(v16, v13, v10);
}

uint64_t sub_1C3C96F10()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C96F20(uint64_t a1)
{
  return sub_1C3C96D88(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1C3C96F2C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C3C96F54()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3C96F64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3C96F8C(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(void (**)(char *))(a1 + 32);
  sub_1C3DB8898();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C3C97070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t NSFileCoordinator.withCoordinatedAccess<A>(_:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C3C9716C, 0, 0);
}

uint64_t sub_1C3C9716C()
{
  int64_t v1 = *(void **)(v0 + 32);
  if (v1) {
    id v2 = *(id *)(v0 + 32);
  }
  else {
    id v2 = objc_msgSend(self, sel_ic_fileCoordinationOperationQueue);
  }
  *(void *)(v0 + 72) = v2;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  long long v5 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  *(_OWORD *)(v4 + 48) = v5;
  uint64_t v11 = (char *)&dword_1EA3876D0 + dword_1EA3876D0;
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C3C972AC;
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 16);
  return ((uint64_t (*)(uint64_t, void, void, void (*)(uint64_t), uint64_t, uint64_t))v11)(v9, 0, 0, sub_1C3C975D0, v4, v8);
}

uint64_t sub_1C3C972AC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1C3C9742C;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_1C3C973C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3C973C8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3C9742C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3C97498(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C3C97FC4();
  uint64_t v14 = (void *)sub_1C3DB9FF8();
  uint64_t v15 = (void *)swift_allocObject();
  id v15[2] = a7;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a3;
  v15[6] = a1;
  void v17[4] = sub_1C3C98044;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_1C3C9777C;
  v17[3] = &block_descriptor_21_0;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_coordinateAccessWithIntents_queue_byAccessor_, v14, a4, v16);
  _Block_release(v16);
}

void sub_1C3C975D0(uint64_t a1)
{
  sub_1C3C97498(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16));
}

uint64_t sub_1C3C975E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v17 = (char *)v21 - v16;
  if (v13)
  {
    id v18 = a1;
    swift_willThrow();
    v21[0] = a1;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    return sub_1C3CD0808((uint64_t)v21, a5, a6, v19);
  }
  else
  {
    v14(v15);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    sub_1C3CD0790((uint64_t)v12, a5, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v17, a6);
  }
}

void sub_1C3C9777C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t NSFileCoordinator.withCoordinatedReading<A>(at:options:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x1F4188298](sub_1C3C97814, 0, 0);
}

uint64_t sub_1C3C97814()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3DD7260;
  id v6 = self;
  uint64_t v7 = (void *)sub_1C3DB8848();
  id v8 = objc_msgSend(v6, sel_readingIntentWithURL_options_, v7, v4);

  *(void *)(v5 + 32) = v8;
  sub_1C3DBA038();
  v0[10] = v5;
  uint64_t v9 = (void *)swift_allocObject();
  v0[11] = v9;
  v9[2] = v2;
  v9[3] = v3;
  void v9[4] = v1;
  swift_retain();
  uint64_t v10 = swift_task_alloc();
  v0[12] = v10;
  *(void *)uint64_t v10 = v0;
  *(void *)(v10 + 8) = sub_1C3C979B8;
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[2];
  *(_OWORD *)(v10 + 56) = *((_OWORD *)v0 + 4);
  *(void *)(v10 + 40) = sub_1C3C97B6C;
  *(void *)(v10 + 48) = v9;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 16) = v12;
  return MEMORY[0x1F4188298](sub_1C3C9716C, 0, 0);
}

uint64_t sub_1C3C979B8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3C97B00, 0, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3C97B00()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3C97B6C(unint64_t a1)
{
  sub_1C3C97EA4(a1, *(void (**)(void *))(v1 + 24));
}

uint64_t NSFileCoordinator.withCoordinatedWriting<A>(at:options:queue:accessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x1F4188298](sub_1C3C97BB8, 0, 0);
}

uint64_t sub_1C3C97BB8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C3DD7260;
  id v6 = self;
  uint64_t v7 = (void *)sub_1C3DB8848();
  id v8 = objc_msgSend(v6, sel_writingIntentWithURL_options_, v7, v4);

  *(void *)(v5 + 32) = v8;
  sub_1C3DBA038();
  v0[10] = v5;
  uint64_t v9 = (void *)swift_allocObject();
  v0[11] = v9;
  v9[2] = v2;
  v9[3] = v3;
  void v9[4] = v1;
  swift_retain();
  uint64_t v10 = swift_task_alloc();
  v0[12] = v10;
  *(void *)uint64_t v10 = v0;
  *(void *)(v10 + 8) = sub_1C3C97D5C;
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[2];
  *(_OWORD *)(v10 + 56) = *((_OWORD *)v0 + 4);
  *(void *)(v10 + 40) = sub_1C3C980A4;
  *(void *)(v10 + 48) = v9;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 16) = v12;
  return MEMORY[0x1F4188298](sub_1C3C9716C, 0, 0);
}

uint64_t sub_1C3C97D5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3C98094, 0, 0);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void sub_1C3C97EA4(unint64_t a1, void (*a2)(void *))
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C3DBAFB8()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v5 = (id)MEMORY[0x1C877C220](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(a1 + 32);
LABEL_6:
    id v6 = v5;
    swift_bridgeObjectRelease();
    a2(v6);

    return;
  }
  __break(1u);
}

uint64_t sub_1C3C97F8C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

unint64_t sub_1C3C97FC4()
{
  unint64_t result = qword_1EA387028;
  if (!qword_1EA387028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387028);
  }
  return result;
}

uint64_t sub_1C3C98004()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3C98044(void *a1)
{
  return sub_1C3C975E0(a1, v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t sub_1C3C98054(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))(*(void *)(v1 + 40));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

void sub_1C3C980A4(unint64_t a1)
{
}

uint64_t sub_1C3C980BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C3DBA278();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C3DBA268();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C3C2A448(a1, (uint64_t *)&unk_1EB6FBAE0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C3DBA168();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

float AudioWaveformGenerator.Sample.value.getter()
{
  return *(float *)v0;
}

void AudioWaveformGenerator.Sample.value.setter(float a1)
{
  *uint64_t v1 = a1;
}

void (*AudioWaveformGenerator.Sample.value.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AudioWaveformGenerator.Sample.isRecorded.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t AudioWaveformGenerator.Sample.isRecorded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

void (*AudioWaveformGenerator.Sample.isRecorded.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void __swiftcall AudioWaveformGenerator.Sample.init(value:isRecorded:)(NotesShared::AudioWaveformGenerator::Sample *__return_ptr retstr, Swift::Float value, Swift::Bool isRecorded)
{
  retstr->value = value;
  retstr->isRecorded = isRecorded;
}

uint64_t sub_1C3C982B0()
{
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  swift_getKeyPath();
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  if (!v1) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1C3DB8D18();
  swift_release();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1C3D796B4(v3);
  return v2;
}

uint64_t sub_1C3C98448()
{
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1C3C984E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_1C3C98590()
{
  return swift_release();
}

uint64_t sub_1C3C98660()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C98718@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C987D8()
{
  return swift_release();
}

uint64_t sub_1C3C988B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C98920()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C989D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3C98A9C()
{
  return swift_release();
}

uint64_t type metadata accessor for AudioWaveformGenerator(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA387078);
}

uint64_t sub_1C3C98BA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t AudioWaveformGenerator.__allocating_init(attachment:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v3;
  sub_1C3DB8D48();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t AudioWaveformGenerator.init(attachment:)(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v3;
  sub_1C3DB8D48();
  *(void *)(v1 + 16) = a1;
  return v1;
}

void sub_1C3C98CB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v19 = v0;
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  if (*(unsigned char *)(v0 + 24))
  {
    if (qword_1EB6FC2B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C3DB9048();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB6FC2A0);
    uint64_t v6 = sub_1C3DB9028();
    os_log_type_t v7 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_1C3A61000, v6, v7, "Already started. Not generating waveform again.", v8, 2u);
      MEMORY[0x1C877E600](v8, -1, -1);
    }
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    *(&v18 - 2) = v0;
    *((unsigned char *)&v18 - 8) = 1;
    uint64_t v19 = v0;
    sub_1C3DB8D08();
    swift_release();
    id v10 = objc_msgSend(*(id *)(v0 + 16), sel_audioModel);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_composedAudioAssetURLs);

      if (v12)
      {
        sub_1C3DB88F8();
        uint64_t v13 = sub_1C3DBA018();

        uint64_t v14 = sub_1C3DBA278();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
        sub_1C3DBA1F8();
        swift_retain();
        uint64_t v15 = sub_1C3DBA1E8();
        uint64_t v16 = (void *)swift_allocObject();
        uint64_t v17 = MEMORY[0x1E4FBCFD8];
        void v16[2] = v15;
        v16[3] = v17;
        v16[4] = v13;
        v16[5] = v1;
        sub_1C3C980BC((uint64_t)v4, (uint64_t)&unk_1EA387048, (uint64_t)v16);
        swift_release();
      }
    }
  }
}

void sub_1C3C99000()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1C3C99010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387070);
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387128);
  v5[16] = v7;
  v5[17] = *(void *)(v7 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387130);
  v5[19] = v8;
  v5[20] = *(void *)(v8 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v9 = sub_1C3DB88F8();
  v5[22] = v9;
  v5[23] = *(void *)(v9 - 8);
  v5[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v5[25] = swift_task_alloc();
  v5[26] = sub_1C3DBA1F8();
  v5[27] = sub_1C3DBA1E8();
  uint64_t v11 = sub_1C3DBA168();
  v5[28] = v11;
  v5[29] = v10;
  return MEMORY[0x1F4188298](sub_1C3C99258, v11, v10);
}

uint64_t sub_1C3C99258()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 240) = v2;
  uint64_t v3 = *(void *)(v0 + 184);
  if (v2)
  {
    *(void *)(v0 + 248) = OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
    int v4 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 312) = v4;
    *(void *)(v0 + 256) = *(void *)(v3 + 72);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    *(_DWORD *)(v0 + 316) = *MEMORY[0x1E4FBD120];
    *(void *)(v0 + 264) = v5;
    *(void *)(v0 + 272) = 0;
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v8 = v1 + ((v4 + 32) & ~(unint64_t)v4);
    swift_bridgeObjectRetain();
    v5(v6, v8, v7);
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    *(void *)(v0 + 280) = v9;
    v9(v6, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) != 1)
    {
      uint64_t v10 = *(void *)(v0 + 192);
      uint64_t v11 = *(void *)(v0 + 176);
      id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 184) + 32);
      v12(v10, *(void *)(v0 + 200), v11);
      type metadata accessor for AudioWaveformSource(0);
      uint64_t v13 = swift_allocObject();
      *(void *)(v0 + 288) = v13;
      *(unsigned char *)(v13 + 16) = 0;
      *(void *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
      *(void *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
      *(_DWORD *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
      *(void *)(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
      uint64_t v14 = v12(v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url, v10, v11);
      if (*(unsigned char *)(v13 + 16))
      {
        __break(1u);
      }
      else
      {
        uint64_t v19 = *(unsigned int *)(v0 + 316);
        uint64_t v21 = *(void *)(v0 + 136);
        uint64_t v20 = *(void *)(v0 + 144);
        uint64_t v23 = *(void *)(v0 + 120);
        uint64_t v22 = *(void *)(v0 + 128);
        uint64_t v24 = *(void *)(v0 + 104);
        uint64_t v25 = *(void *)(v0 + 112);
        *(unsigned char *)(v13 + 16) = 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v23, v19, v24);
        uint64_t v26 = v13 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
        uint64_t v27 = swift_task_alloc();
        *(void *)(v27 + 16) = v26;
        *(void *)(v27 + 24) = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC328);
        sub_1C3DBA3D8();
        swift_task_dealloc();
        sub_1C3DBA2B8();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
        uint64_t v28 = sub_1C3DBA1E8();
        *(void *)(v0 + 296) = v28;
        id v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 304) = v29;
        *id v29 = v0;
        v29[1] = sub_1C3C99624;
        uint64_t v17 = *(void *)(v0 + 152);
        uint64_t v16 = MEMORY[0x1E4FBCFD8];
        uint64_t v14 = v0 + 72;
        uint64_t v15 = v28;
        uint64_t v18 = v0 + 40;
      }
      return MEMORY[0x1F4187ED8](v14, v15, v16, v17, v18);
    }
  }
  else
  {
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v31 = *(void *)(v0 + 200);
    uint64_t v32 = *(void *)(v0 + 176);
    swift_bridgeObjectRetain();
    v30(v31, 1, 1, v32);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_1C3C99624()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_1C3C99E38;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_1C3C99750;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C3C99750()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if (v1)
  {
    int64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = (void *)(v0 + 48);
      *(void *)(v0 + 48) = MEMORY[0x1E4FBC860];
      sub_1C3C9D4C4(0, v2, 0);
      uint64_t v4 = 0;
      uint64_t v5 = *(void **)(v0 + 48);
      uint64_t v6 = v5[2];
      uint64_t v7 = v6;
      do
      {
        int v8 = *(_DWORD *)(v1 + 4 * v4 + 32);
        *uint64_t v3 = v5;
        unint64_t v9 = v5[3];
        uint64_t v10 = v6 + v4 + 1;
        if (v6 + v4 >= v9 >> 1)
        {
          sub_1C3C9D4C4(v9 > 1, v6 + v4 + 1, 1);
          uint64_t v5 = (void *)*v3;
        }
        ++v4;
        v5[2] = v10;
        uint64_t v11 = &v5[v7];
        *((_DWORD *)v11 + 8) = v8;
        *((unsigned char *)v11 + 36) = 0;
        ++v7;
      }
      while (v2 != v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = *(void *)(v0 + 96);
    swift_getKeyPath();
    *(void *)(v0 + 56) = v14;
    sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
    sub_1C3DB8D18();
    swift_release();
    *(void *)(v0 + 64) = v14;
    swift_getKeyPath();
    sub_1C3DB8D38();
    swift_release();
    swift_beginAccess();
    unint64_t v15 = v5[2];
    uint64_t v16 = *(void **)(v14 + 32);
    int64_t v17 = v16[2];
    int64_t v18 = v17 + v15;
    if (__OFADD__(v17, v15))
    {
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v19 = *(void *)(v0 + 96);
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v19 + 32) = v16;
    if (isUniquelyReferenced_nonNull_native && v18 <= v16[3] >> 1)
    {
      unint64_t v21 = v5[2];
      if (v21)
      {
LABEL_15:
        uint64_t v22 = v16[2];
        if ((v16[3] >> 1) - v22 < (uint64_t)v21)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        uint64_t v23 = &v16[v22 + 4];
        if (v5 + 4 < &v23[v21] && v23 < &v5[v21 + 4]) {
          return sub_1C3DBAFF8();
        }
        memcpy(v23, v5 + 4, 8 * v21);
        if (v21 >= v15)
        {
          uint64_t v25 = v16[2];
          BOOL v26 = __OFADD__(v25, v21);
          uint64_t v27 = v25 + v21;
          if (!v26)
          {
            void v16[2] = v27;
LABEL_29:
            uint64_t v30 = *(void *)(v0 + 96);
            swift_bridgeObjectRelease();
            *(void *)(v30 + 32) = v16;
            swift_endAccess();
            *(void *)(v0 + 80) = v30;
            swift_getKeyPath();
            sub_1C3DB8D28();
            swift_release();
            goto LABEL_30;
          }
LABEL_42:
          __break(1u);
          return sub_1C3DBAFF8();
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v28 = *(void *)(v0 + 96);
      if (v17 <= v18) {
        int64_t v29 = v17 + v15;
      }
      else {
        int64_t v29 = v17;
      }
      uint64_t v16 = sub_1C3D8301C(isUniquelyReferenced_nonNull_native, v29, 1, v16);
      *(void *)(v28 + 32) = v16;
      unint64_t v21 = v5[2];
      if (v21) {
        goto LABEL_15;
      }
    }
    if (!v15) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
  uint64_t v12 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 272) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
  swift_release();
  if (v13 == v12)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 280))(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 176));
  }
  else
  {
    uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 264);
    uint64_t v39 = *(void *)(v0 + 272) + 1;
    *(void *)(v0 + 272) = v39;
    uint64_t v40 = *(void *)(v0 + 200);
    uint64_t v41 = *(void *)(v0 + 176);
    uint64_t v42 = *(void *)(v0 + 184);
    v38(v40, *(void *)(v0 + 88)+ ((*(unsigned __int8 *)(v0 + 312) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 312))+ *(void *)(v0 + 256) * v39, v41);
    uint64_t v43 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56);
    *(void *)(v0 + 280) = v43;
    v43(v40, 0, 1, v41);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) != 1)
    {
      uint64_t v46 = *(void *)(v0 + 192);
      uint64_t v47 = *(void *)(v0 + 176);
      char v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 184) + 32);
      v48(v46, *(void *)(v0 + 200), v47);
      type metadata accessor for AudioWaveformSource(0);
      uint64_t v49 = swift_allocObject();
      *(void *)(v0 + 288) = v49;
      *(unsigned char *)(v49 + 16) = 0;
      *(void *)(v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
      *(void *)(v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
      *(_DWORD *)(v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
      *(void *)(v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
      uint64_t v35 = v48(v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url, v46, v47);
      if (*(unsigned char *)(v49 + 16))
      {
        __break(1u);
        return MEMORY[0x1F4187ED8](v35, v36, v34, v33, v37);
      }
      uint64_t v50 = *(unsigned int *)(v0 + 316);
      uint64_t v52 = *(void *)(v0 + 136);
      uint64_t v51 = *(void *)(v0 + 144);
      uint64_t v54 = *(void *)(v0 + 120);
      uint64_t v53 = *(void *)(v0 + 128);
      uint64_t v55 = *(void *)(v0 + 104);
      uint64_t v56 = *(void *)(v0 + 112);
      *(unsigned char *)(v49 + 16) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104))(v54, v50, v55);
      uint64_t v57 = v49 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
      uint64_t v58 = swift_task_alloc();
      *(void *)(v58 + 16) = v57;
      *(void *)(v58 + 24) = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC328);
      sub_1C3DBA3D8();
      swift_task_dealloc();
      sub_1C3DBA2B8();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
LABEL_30:
      uint64_t v31 = sub_1C3DBA1E8();
      *(void *)(v0 + 296) = v31;
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_1C3C99624;
      uint64_t v33 = *(void *)(v0 + 152);
      uint64_t v34 = MEMORY[0x1E4FBCFD8];
      uint64_t v35 = v0 + 72;
      uint64_t v36 = v31;
      uint64_t v37 = v0 + 40;
      return MEMORY[0x1F4187ED8](v35, v36, v34, v33, v37);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1C3C99E38()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3C99F10()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3C99F58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int v8 = v2;
  v8[1] = sub_1C3C3259C;
  return sub_1C3C99010(a1, v4, v5, v7, v6);
}

uint64_t AudioWaveformSource.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(void *)(v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  uint64_t v3 = v2 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  uint64_t v4 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t sub_1C3C9A0E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C3C9D4C4(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (int *)(a1 + 32);
    unint64_t v5 = *(void *)(v12 + 16);
    uint64_t v6 = 8 * v5;
    do
    {
      int v7 = *v4;
      unint64_t v8 = *(void *)(v12 + 24);
      unint64_t v9 = v5 + 1;
      if (v5 >= v8 >> 1) {
        sub_1C3C9D4C4(v8 > 1, v5 + 1, 1);
      }
      *(void *)(v12 + 16) = v9;
      uint64_t v10 = v12 + v6;
      *(_DWORD *)(v10 + 32) = v7;
      *(unsigned char *)(v10 + 36) = 1;
      v6 += 8;
      ++v4;
      unint64_t v5 = v9;
      --v1;
    }
    while (v1);
  }
  swift_getKeyPath();
  sub_1C3C9F5B0(&qword_1EA387038, (void (*)(uint64_t))type metadata accessor for AudioWaveformGenerator);
  sub_1C3DB8D18();
  swift_release();
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  swift_beginAccess();
  sub_1C3D796B4(v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1C3DB8D28();
  return swift_release();
}

uint64_t AudioWaveformGenerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
  uint64_t v2 = sub_1C3DB8D58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AudioWaveformGenerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared22AudioWaveformGenerator___observationRegistrar;
  uint64_t v2 = sub_1C3DB8D58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t AudioWaveformSource.init(url:)(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_targetSampleRate) = 0x40E7700000000000;
  *(_DWORD *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_samplesPerWaveformSlice) = 1920;
  *(void *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_progressThreshold) = 100;
  uint64_t v3 = v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  uint64_t v4 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1C3C9A4AC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387070);
  uint64_t result = MEMORY[0x1F4188790](v1);
  if (*(unsigned char *)(v0 + 16))
  {
    __break(1u);
  }
  else
  {
    *(unsigned char *)(v0 + 16) = 1;
    uint64_t v5 = (*(uint64_t (**)(char *, void))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBD120]);
    MEMORY[0x1F4188790](v5);
    *(&v7 - 2) = v6;
    *(&v7 - 1) = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC328);
    return sub_1C3DBA3D8();
  }
  return result;
}

uint64_t sub_1C3C9A5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v22 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DBA218();
  uint64_t v14 = sub_1C3DBA278();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  uint64_t v15 = a1;
  uint64_t v16 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v4);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + *(unsigned __int8 *)(v5 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, v22, v16);
  *(void *)(v19 + ((v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  swift_retain();
  sub_1C3C9B048((uint64_t)v13, (uint64_t)&unk_1EA387100, v19);
  swift_release();
  return sub_1C3C2A448((uint64_t)v13, (uint64_t *)&unk_1EB6FBAE0);
}

uint64_t sub_1C3C9A8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387108);
  v6[13] = swift_task_alloc();
  uint64_t v7 = sub_1C3DB8638();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  uint64_t v8 = sub_1C3DB9018();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  v6[21] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[22] = v10;
  v6[23] = *(void *)(v10 + 64);
  v6[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3C9AA9C, 0, 0);
}

uint64_t sub_1C3C9AA9C()
{
  sub_1C3DB8878();
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[11], v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v5 + v4, v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v7 = (void *)*MEMORY[0x1E4F1C538];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C538];
  id v8 = v7;
  sub_1C3C5B81C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1C3DB87F8();
  uint64_t v10 = v0[17];
  uint64_t v9 = v0[18];
  uint64_t v12 = v0[15];
  uint64_t v11 = v0[16];
  uint64_t v14 = v0[13];
  uint64_t v13 = v0[14];
  swift_bridgeObjectRelease();
  sub_1C3DB8618();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v10) == 1)
  {
    sub_1C3C2A448(v0[13], &qword_1EA387108);
LABEL_7:
    sub_1C3C9BEE4(v0[10], sub_1C3C9FACC, v5);
    goto LABEL_5;
  }
  uint64_t v15 = v0[19];
  uint64_t v17 = v0[17];
  uint64_t v16 = v0[18];
  (*(void (**)(void, void, uint64_t))(v16 + 32))(v0[20], v0[13], v17);
  sub_1C3DB8FF8();
  char v18 = sub_1C3DB9008();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v19(v15, v17);
  if ((v18 & 1) == 0)
  {
    v19(v0[20], v0[17]);
    goto LABEL_7;
  }
  sub_1C3C9B234(v0[10], (void (*)(char *))sub_1C3C9FACC, v5);
  v19(v0[20], v0[17]);
LABEL_5:
  v0[9] = 0;
  sub_1C3DBA3A8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1C3C9AF50(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387118);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  sub_1C3DBA398();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C3C9B048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C9F998(a1, (uint64_t)v8);
  uint64_t v9 = sub_1C3DBA278();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FBAE0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C3DBA168();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C3DBA268();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1C3C9B234(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  v101[4] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C3DB88F8();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  id v12 = sub_1C3C9D094((uint64_t)v9);
  if (v3) {
    return;
  }
  uint64_t v13 = v12;
  id v96 = 0;
  uint64_t v14 = &selRef_dataForQuickLook;
  id v15 = objc_msgSend(v12, sel_processingFormat);
  objc_msgSend(v15, sel_sampleRate);
  double v17 = v16;

  char v18 = &selRef_dataForQuickLook;
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  if (v17 != 48000.0)
  {
    id v21 = objc_allocWithZone(MEMORY[0x1E4F153A0]);
    id v22 = objc_msgSend(v21, sel_initStandardFormatWithSampleRate_channels_, 1, 48000.0, v93);
    if (v22)
    {
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v13, sel_processingFormat);
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15370]), sel_initFromFormat_toFormat_, v24, v23);

      if (v25)
      {
        objc_msgSend(v25, sel_setSampleRateConverterQuality_, 0x7FFFFFFFFFFFFFFFLL);
        id v26 = objc_allocWithZone(MEMORY[0x1E4F153B0]);
        id v27 = v25;
        uint64_t v19 = objc_msgSend(v26, sel_initWithPCMFormat_frameCapacity_, v23, 1920);

        uint64_t v20 = v25;
        char v18 = &selRef_dataForQuickLook;
        goto LABEL_14;
      }

      char v18 = &selRef_dataForQuickLook;
    }
    if (qword_1EB6FC2B8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C3DB9048();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB6FC2A0);
    id v29 = v13;
    swift_retain();
    uint64_t v30 = sub_1C3DB9028();
    os_log_type_t v31 = sub_1C3DBA6A8();
    int64_t v99 = v30;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138412546;
      id v34 = objc_msgSend(v29, sel_processingFormat);
      aBlock[0] = v34;
      char v18 = &selRef_dataForQuickLook;
      sub_1C3DBA9A8();
      *uint64_t v33 = v34;

      *(_WORD *)(v32 + 12) = 2048;
      aBlock[0] = (id)0x40E7700000000000;
      uint64_t v14 = &selRef_dataForQuickLook;
      sub_1C3DBA9A8();
      swift_release();
      uint64_t v35 = v99;
      _os_log_impl(&dword_1C3A61000, v99, v31, "AudioWaveformSource: Failed to create AVAudioConverter from %@ to standard format with sample rate: %f; will con"
        "tinue without sample rate conversion",
        (uint8_t *)v32,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v33, -1, -1);
      MEMORY[0x1C877E600](v32, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_14;
  }
  uint64_t v19 = 0;
  uint64_t v20 = 0;
LABEL_14:
  id v36 = objc_msgSend(v13, v14[503], v93);
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), v18[491], v36, 1920);

  if (v37)
  {
    uint64_t v38 = &selRef_dataForQuickLook;
    id v39 = objc_msgSend(v13, sel_framePosition);
    uint64_t v40 = &selRef_isBeginningHashtagAtSelectionRange_inString_languageHasSpaces_;
    if ((uint64_t)v39 >= (uint64_t)objc_msgSend(v13, sel_length))
    {
      uint64_t v43 = (char *)MEMORY[0x1E4FBC860];
    }
    else
    {
      char v98 = v101;
      if (v20) {
        BOOL v41 = v19 == 0;
      }
      else {
        BOOL v41 = 1;
      }
      int v42 = v41;
      uint64_t v43 = (char *)MEMORY[0x1E4FBC860];
      LODWORD(v99) = v42;
      while (2)
      {
        uint64_t v95 = v43;
        while (1)
        {
          if (v42)
          {
            aBlock[0] = 0;
            unsigned int v44 = objc_msgSend(v13, sel_readIntoBuffer_error_, v37, aBlock);
            id v45 = aBlock[0];
            if (!v44)
            {
              id v71 = aBlock[0];
              swift_bridgeObjectRelease();
              sub_1C3DB8798();

              swift_willThrow();
              return;
            }
            if (v19)
            {
              id v46 = aBlock[0];
              uint64_t v47 = v19;
            }
            else
            {
              uint64_t v47 = v37;
              id v57 = v45;
            }
          }
          else
          {
            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = v13;
            *(void *)(v48 + 24) = v37;
            v101[2] = sub_1C3C9F694;
            v101[3] = v48;
            aBlock[0] = (id)MEMORY[0x1E4F143A8];
            aBlock[1] = (id)1107296256;
            v101[0] = sub_1C3C9BE78;
            v101[1] = &block_descriptor_5;
            uint64_t v49 = _Block_copy(aBlock);
            uint64_t v50 = v13;
            id v97 = v13;
            id v51 = v20;
            uint64_t v52 = v19;
            uint64_t v47 = v19;
            id v53 = v37;
            uint64_t v54 = v37;
            swift_release();
            aBlock[0] = 0;
            id v55 = objc_msgSend(v51, sel_convertToBuffer_error_withInputFromBlock_, v47, aBlock, v49);
            _Block_release(v49);
            id v56 = aBlock[0];
            if (v55 == (id)3)
            {
              char v98 = v54;
              int64_t v99 = v47;
              id v96 = v51;
              swift_bridgeObjectRelease();
              uint64_t v72 = qword_1EB6FC2B8;
              if (v56)
              {
                id v73 = v56;
                if (v72 != -1) {
                  swift_once();
                }
                uint64_t v74 = sub_1C3DB9048();
                __swift_project_value_buffer(v74, (uint64_t)qword_1EB6FC2A0);
                id v75 = v73;
                uint64_t v76 = sub_1C3DB9028();
                os_log_type_t v77 = sub_1C3DBA6A8();
                if (os_log_type_enabled(v76, v77))
                {
                  uint64_t v78 = swift_slowAlloc();
                  uint64_t v79 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v78 = 138412290;
                  uint64_t v95 = (char *)(v78 + 4);
                  aBlock[0] = v75;
                  id v80 = v75;
                  sub_1C3DBA9A8();
                  *uint64_t v79 = v56;

                  _os_log_impl(&dword_1C3A61000, v76, v77, "AudioWaveformSource: Failed to convert buffer: %@", (uint8_t *)v78, 0xCu);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
                  swift_arrayDestroy();
                  MEMORY[0x1C877E600](v79, -1, -1);
                  MEMORY[0x1C877E600](v78, -1, -1);
                }
                else
                {
                }
                id v88 = v97;
                id v89 = v98;
                id v90 = v96;

                id v91 = v75;
                swift_willThrow();
                int64_t v92 = v99;
              }
              else
              {
                if (qword_1EB6FC2B8 != -1) {
                  swift_once();
                }
                uint64_t v81 = sub_1C3DB9048();
                __swift_project_value_buffer(v81, (uint64_t)qword_1EB6FC2A0);
                uint64_t v82 = sub_1C3DB9028();
                os_log_type_t v83 = sub_1C3DBA6A8();
                if (os_log_type_enabled(v82, v83))
                {
                  uint64_t v84 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v84 = 0;
                  _os_log_impl(&dword_1C3A61000, v82, v83, "AudioWaveformSource: Failed to convert buffer", v84, 2u);
                  MEMORY[0x1C877E600](v84, -1, -1);
                }

                sub_1C3C9E674();
                swift_allocError();
                *uint64_t v85 = 2;
                swift_willThrow();
                char v86 = v99;

                id v87 = v96;
              }
              return;
            }

            id v37 = v53;
            uint64_t v19 = v52;
            uint64_t v13 = v50;
            uint64_t v38 = &selRef_dataForQuickLook;
            uint64_t v40 = &selRef_isBeginningHashtagAtSelectionRange_inString_languageHasSpaces_;
            LOBYTE(v42) = (_BYTE)v99;
          }
          uint64_t v58 = v19;
          if ([v47 frameLength] == 1920) {
            break;
          }

          id v59 = [v13 v38[504]];
          if ((uint64_t)v59 >= (uint64_t)[v13 v40[245]])
          {
            uint64_t v43 = v95;
            if (*((void *)v95 + 2)) {
              goto LABEL_48;
            }
            goto LABEL_50;
          }
        }
        uint64_t v60 = (float **)[v47 floatChannelData];
        if (v60)
        {
          uint64_t v61 = *v60;
          vDSP_Length v62 = [v47 frameLength];
          vDSP_vabs(v61, 1, v61, 1, v62);
          LODWORD(aBlock[0]) = 2143289344;
          vDSP_maxv(v61, 1, (float *)aBlock, v62);
          int v63 = (int)aBlock[0];
        }
        else
        {
          int v63 = 0;
        }
        uint64_t v64 = v95;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v64 = sub_1C3D8312C(0, *((void *)v64 + 2) + 1, 1, v64);
        }
        unint64_t v66 = *((void *)v64 + 2);
        unint64_t v65 = *((void *)v64 + 3);
        uint64_t v95 = v64;
        if (v66 >= v65 >> 1) {
          uint64_t v95 = sub_1C3D8312C((char *)(v65 > 1), v66 + 1, 1, v95);
        }
        uint64_t v67 = v95;
        *((void *)v95 + 2) = v66 + 1;
        *(_DWORD *)&v67[4 * v66 + 32] = v63;
        if (v66 >= 0x64)
        {
          v94(v67);
          swift_bridgeObjectRelease();
          uint64_t v95 = (char *)MEMORY[0x1E4FBC860];
        }
        LOBYTE(v42) = (_BYTE)v99;

        id v68 = [v13 v38[504]];
        BOOL v69 = (uint64_t)v68 < (uint64_t)[v13 v40[245]];
        uint64_t v43 = v95;
        if (v69) {
          continue;
        }
        break;
      }
    }
    if (*((void *)v43 + 2))
    {
LABEL_48:
      v94(v43);

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_50:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C3C9E674();
    swift_allocError();
    *uint64_t v70 = 1;
    swift_willThrow();
  }
}

void *sub_1C3C9BD7C(uint64_t a1, void *a2, id a3, void *a4)
{
  uint64_t v4 = a4;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  v13[0] = 0;
  if (objc_msgSend(a3, sel_readIntoBuffer_frameCount_error_, a4, a1, v13))
  {
    id v7 = v13[0];
    id v8 = objc_msgSend(a3, sel_framePosition);
    *a2 = 2 * ((uint64_t)v8 >= (uint64_t)objc_msgSend(a3, sel_length));
    id v9 = v4;
  }
  else
  {
    id v10 = v13[0];
    id v11 = (void *)sub_1C3DB8798();

    swift_willThrow();
    return 0;
  }
  return v4;
}

id sub_1C3C9BE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

void sub_1C3C9BEE4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v90 = a3;
  id v91 = a2;
  v95[45] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1C3DBA718();
  uint64_t v4 = *(void (***)(char *, uint64_t))(v3 - 8);
  uint64_t v88 = v3;
  id v89 = v4;
  MEMORY[0x1F4188790](v3);
  id v87 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  *(void *)(inited + 32) = sub_1C3DB9C38();
  *(void *)(inited + 40) = v7;
  uint64_t v8 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 1;
  sub_1C3C81620(inited);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  id v10 = (void *)sub_1C3DB8848();
  id v11 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithURL_options_, v10, v11);

  id v13 = objc_msgSend(v12, sel_tracksWithMediaType_, *MEMORY[0x1E4F15BA8]);
  sub_1C3C9E634();
  unint64_t v14 = sub_1C3DBA018();

  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initStandardFormatWithSampleRate_channels_, 1, 48000.0);
  if (!v15) {
    __break(1u);
  }
  id v16 = v15;
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C3DD7270;
  *(void *)(v17 + 32) = sub_1C3DB9C38();
  *(void *)(v17 + 40) = v18;
  uint64_t v19 = MEMORY[0x1E4FBC4C0];
  *(void *)(v17 + 72) = MEMORY[0x1E4FBC4C0];
  *(_DWORD *)(v17 + 48) = 1819304813;
  *(void *)(v17 + 80) = sub_1C3DB9C38();
  *(void *)(v17 + 88) = v20;
  objc_msgSend(v16, sel_sampleRate);
  *(void *)(v17 + 120) = MEMORY[0x1E4FBB3D0];
  *(void *)(v17 + 96) = v21;
  *(void *)(v17 + 128) = sub_1C3DB9C38();
  *(void *)(v17 + 136) = v22;
  unsigned int v23 = objc_msgSend(v16, sel_channelCount);
  *(void *)(v17 + 168) = v19;
  *(_DWORD *)(v17 + 144) = v23;
  *(void *)(v17 + 176) = sub_1C3DB9C38();
  *(void *)(v17 + 184) = v24;
  *(void *)(v17 + 216) = MEMORY[0x1E4FBB550];
  *(void *)(v17 + 192) = 32;
  *(void *)(v17 + 224) = sub_1C3DB9C38();
  *(void *)(v17 + 232) = v25;
  *(void *)(v17 + 264) = v8;
  *(unsigned char *)(v17 + 240) = 1;
  sub_1C3C81620(v17);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    BOOL v27 = v33 <= 1;
    if (v33 == 1) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v27 = v26 <= 1;
    if (v26 == 1)
    {
LABEL_4:
      if ((v14 & 0xC000000000000001) != 0)
      {
        id v28 = (id)MEMORY[0x1C877C220](0, v14);
        goto LABEL_7;
      }
      if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v28 = *(id *)(v14 + 32);
LABEL_7:
        id v29 = v28;
        swift_bridgeObjectRelease();
        id v30 = objc_allocWithZone(MEMORY[0x1E4F163A0]);
        os_log_type_t v31 = (void *)sub_1C3DB9A88();
        swift_bridgeObjectRelease();
        id v32 = objc_msgSend(v30, sel_initWithTrack_outputSettings_, v29, v31);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB6FC2B8 == -1)
    {
LABEL_27:
      uint64_t v50 = sub_1C3DB9048();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EB6FC2A0);
      id v51 = sub_1C3DB9028();
      os_log_type_t v52 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v51, v52))
      {
        id v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v53 = 0;
        _os_log_impl(&dword_1C3A61000, v51, v52, "AudioWaveformSource: Source asset has no audio tracks", v53, 2u);
        MEMORY[0x1C877E600](v53, -1, -1);
      }

      sub_1C3C9E674();
      swift_allocError();
      *uint64_t v54 = 3;
      swift_willThrow();

      goto LABEL_57;
    }
LABEL_61:
    swift_once();
    goto LABEL_27;
  }
  id v34 = objc_allocWithZone(MEMORY[0x1E4F16380]);
  os_log_type_t v31 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v29 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v34, sel_initWithAudioTracks_audioSettings_, v31, v29);
LABEL_11:
  uint64_t v35 = v32;

  id v36 = objc_allocWithZone(MEMORY[0x1E4F16378]);
  v95[0] = 0;
  id v12 = v12;
  id v37 = objc_msgSend(v36, sel_initWithAsset_error_, v12, v95);
  if (!v37)
  {
    id v49 = v95[0];
    sub_1C3DB8798();

    swift_willThrow();
LABEL_50:

    return;
  }
  uint64_t v38 = v37;
  id v39 = v95[0];

  if ((objc_msgSend(v38, sel_canAddOutput_, v35) & 1) == 0)
  {
    if (qword_1EB6FC2B8 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C3DB9048();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EB6FC2A0);
    id v56 = sub_1C3DB9028();
    os_log_type_t v57 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_1C3A61000, v56, v57, "AudioWaveformSource: Can't add AVAssetReaderOutput", v58, 2u);
      MEMORY[0x1C877E600](v58, -1, -1);
    }

    sub_1C3C9E674();
    swift_allocError();
    void *v59 = 4;
    swift_willThrow();

    goto LABEL_57;
  }
  objc_msgSend(v38, sel_addOutput_, v35);
  if (!objc_msgSend(v38, sel_startReading))
  {
    if (qword_1EB6FC2B8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_1C3DB9048();
    __swift_project_value_buffer(v60, (uint64_t)qword_1EB6FC2A0);
    id v61 = v38;
    vDSP_Length v62 = sub_1C3DB9028();
    os_log_type_t v63 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      int64_t v92 = (void *)swift_slowAlloc();
      uint64_t v93 = v64;
      *(_DWORD *)uint64_t v64 = 138412290;
      id v65 = objc_msgSend(v61, sel_error);
      id v91 = v61;
      if (v65)
      {
        unint64_t v66 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v95[0] = v66;
        sub_1C3DBA9A8();
      }
      else
      {
        v95[0] = 0;
        sub_1C3DBA9A8();
        unint64_t v66 = 0;
      }
      uint64_t v74 = v92;
      *int64_t v92 = v66;
      id v75 = v91;

      uint64_t v76 = v93;
      _os_log_impl(&dword_1C3A61000, v62, v63, "AudioWaveformSource: AVAssetReader failed to start with error: %@", v93, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      os_log_type_t v77 = v74;
      id v61 = v75;
      MEMORY[0x1C877E600](v77, -1, -1);
      MEMORY[0x1C877E600](v76, -1, -1);
    }
    else
    {
    }
    id v78 = objc_msgSend(v61, sel_error);
    sub_1C3C9E674();
    swift_allocError();
    *uint64_t v79 = v78;
    swift_willThrow();

LABEL_57:
    return;
  }
  uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
  v95[0] = (id)MEMORY[0x1E4FBC860];
  id v41 = objc_msgSend(v35, sel_copyNextSampleBuffer);
  if (!v41)
  {
LABEL_40:
    uint64_t v67 = *(void **)((char *)v92 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer);
    if (v67)
    {
      id v68 = v67;
      if (objc_msgSend(v68, sel_frameLength))
      {
        double v69 = sub_1C3C9F4D4(v68);
        int v70 = LODWORD(v69);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = sub_1C3D8312C(0, *((void *)v40 + 2) + 1, 1, v40);
        }
        unint64_t v72 = *((void *)v40 + 2);
        unint64_t v71 = *((void *)v40 + 3);
        if (v72 >= v71 >> 1) {
          uint64_t v40 = sub_1C3D8312C((char *)(v71 > 1), v72 + 1, 1, v40);
        }
        *((void *)v40 + 2) = v72 + 1;
        *(_DWORD *)&v40[4 * v72 + 32] = v70;
        objc_msgSend(v68, sel_setFrameLength_, 0);
      }

      if (!*((void *)v40 + 2)) {
        goto LABEL_49;
      }
    }
    else if (!*((void *)v40 + 2))
    {
      goto LABEL_49;
    }
    uint64_t v73 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t))v91)(v73);
    swift_bridgeObjectRelease();
LABEL_49:

    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  id v42 = v41;
  id v86 = (id)*MEMORY[0x1E4F1CF80];
  ++v89;
  uint64_t v85 = MEMORY[0x1E4FBC848] + 8;
  while (1)
  {
    uint64_t v43 = sub_1C3DBA6E8();
    if (v43) {
      break;
    }

LABEL_18:
    id v42 = objc_msgSend(v35, sel_copyNextSampleBuffer);
    if (!v42) {
      goto LABEL_40;
    }
  }
  id v84 = v12;
  uint64_t v82 = v80;
  MEMORY[0x1F4188790](v43);
  v80[2] = &v80[-6];
  id v83 = v16;
  unsigned int v44 = v92;
  v80[-4] = v16;
  v80[-3] = v44;
  v80[-2] = v95;
  uint64_t v94 = MEMORY[0x1E4FBC860];
  v80[1] = sub_1C3C9F5B0(&qword_1EA386BF8, MEMORY[0x1E4FBCA18]);
  id v81 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C00);
  sub_1C3C9F5F8();
  id v46 = v87;
  uint64_t v45 = v88;
  sub_1C3DBAAA8();
  uint64_t v47 = v93;
  sub_1C3DBA6D8();
  uint64_t v93 = v47;
  if (!v47)
  {
    (*v89)(v46, v45);

    uint64_t v40 = (char *)v95[0];
    if (*((void *)v95[0] + 2) < 0x65uLL)
    {
    }
    else
    {
      uint64_t v48 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t))v91)(v48);
      swift_bridgeObjectRelease_n();

      uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
      v95[0] = (id)MEMORY[0x1E4FBC860];
    }
    id v16 = v83;
    id v12 = v84;
    goto LABEL_18;
  }
  (*v89)(v46, v45);

  swift_bridgeObjectRelease();
}

void sub_1C3C9CB70(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_bufferListNoCopy_deallocator_, v3, sub_1C3DB9A38(), 0);

  if (v4)
  {
    uint64_t v5 = sub_1C3C9CC08(v4);
    sub_1C3D79800((uint64_t)v5);
  }
}

char *sub_1C3C9CC08(id a1)
{
  id v2 = a1;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v38 = OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer;
  if (!*(void *)(v1 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_processingBuffer))
  {
    id v3 = objc_msgSend(a1, sel_format);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v3, 1920);

    uint64_t v5 = *(void **)(v37 + v38);
    *(void *)(v37 + v38) = v4;
  }
  unsigned int v6 = 0;
  uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v8 = &selRef_dataForQuickLook;
  while (v6 < [v2 v8[448]])
  {
    id v10 = *(void **)(v37 + v38);
    if (!v10) {
      break;
    }
    if (v6 >= 0xFFFFF880)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
    }
    id v11 = v10;
    unsigned int v12 = [v2 v8[448]];
    unsigned int v13 = v12 - v6;
    if (v12 < v6) {
      goto LABEL_32;
    }
    unsigned int v14 = [v11 v8[448]];
    unsigned int v15 = 1920 - v14;
    if (v14 > 0x780) {
      goto LABEL_33;
    }
    if (v13 >= v6 + 1920) {
      unsigned int v16 = v6 + 1920;
    }
    else {
      unsigned int v16 = v13;
    }
    if (v15 >= v16) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = v15;
    }
    uint64_t v18 = (uint64_t *)objc_msgSend(v11, sel_floatChannelData);
    if (v18)
    {
      uint64_t v19 = *v18;
      uint64_t v20 = (uint64_t *)objc_msgSend(v2, sel_floatChannelData);
      if (v20)
      {
        id v36 = v7;
        uint64_t v21 = *v20;
        unsigned int v22 = [v11 v8[448]];
        id v23 = v2;
        id v24 = objc_msgSend(v2, sel_format);
        uint64_t v25 = (unsigned int *)objc_msgSend(v24, sel_streamDescription);

        int64_t v26 = v25[6] * (unint64_t)v17;
        if ((v17 * (unsigned __int128)v25[6]) >> 64 != v26 >> 63) {
          goto LABEL_36;
        }
        memcpy((void *)(v19 + 4 * v22), (const void *)(v21 + 4 * v6), v26);
        id v2 = v23;
        uint64_t v7 = v36;
        uint64_t v8 = &selRef_dataForQuickLook;
      }
    }
    unsigned int v27 = [v11 v8[448]];
    if (__CFADD__(v27, v17)) {
      goto LABEL_34;
    }
    objc_msgSend(v11, sel_setFrameLength_, v27 + v17);
    unsigned int v28 = [v11 v8[448]];
    if (v28 == objc_msgSend(v11, sel_frameCapacity))
    {
      id v29 = (float **)objc_msgSend(v11, sel_floatChannelData);
      if (v29)
      {
        id v30 = *v29;
        vDSP_Length v31 = [v11 v8[448]];
        vDSP_vabs(v30, 1, v30, 1, v31);
        float __C = NAN;
        vDSP_maxv(v30, 1, &__C, v31);
        float v32 = __C;
      }
      else
      {
        float v32 = 0.0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1C3D8312C(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      uint64_t v8 = &selRef_dataForQuickLook;
      unint64_t v34 = *((void *)v7 + 2);
      unint64_t v33 = *((void *)v7 + 3);
      if (v34 >= v33 >> 1) {
        uint64_t v7 = sub_1C3D8312C((char *)(v33 > 1), v34 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v34 + 1;
      *(float *)&v7[4 * v34 + 32] = v32;
      objc_msgSend(v11, sel_setFrameLength_, 0);
    }

    BOOL v9 = __CFADD__(v6, v17);
    v6 += v17;
    if (v9) {
      goto LABEL_35;
    }
  }
  return v7;
}

uint64_t AudioWaveformSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  uint64_t v2 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t AudioWaveformSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared19AudioWaveformSource_url;
  uint64_t v2 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_1C3C9D094(uint64_t a1)
{
  uint64_t v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = (void *)sub_1C3DB8848();
  v13[0] = 0;
  id v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_1C3DB88F8();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_1C3DB8798();

    swift_willThrow();
    uint64_t v11 = sub_1C3DB88F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_1C3C9D1E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9D934(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D200(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DC00(a1, a2, a3, (void *)*v3, &qword_1EA3870A0, (uint64_t *)&unk_1EA386E30);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D230(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DAA0(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D250(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DC00(a1, a2, a3, (void *)*v3, &qword_1EA387140, &qword_1EA386C90);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D280(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DC00(a1, a2, a3, (void *)*v3, &qword_1EA387098, &qword_1EA388DD0);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D2B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DD90(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D2D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9DF3C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D2F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, &qword_1EA387160, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D32C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E0E0(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D34C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, &qword_1EA387150, MEMORY[0x1E4F27990]);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D388(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E26C(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D3A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D3E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E4D4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D404(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E6C8(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D424(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E834(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D444(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9E9A0(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1C3C9D464(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9EB48(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9ECA8(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D4A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9EE18(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D4C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9EF84(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1C3C9D4E4(uint64_t a1)
{
  return sub_1C3C9A5FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3C9D4EC()
{
  return type metadata accessor for AudioWaveformGenerator(0);
}

uint64_t sub_1C3C9D4F4()
{
  uint64_t result = sub_1C3DB8D58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AudioWaveformGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioWaveformGenerator);
}

uint64_t dispatch thunk of AudioWaveformGenerator.samples.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.__allocating_init(attachment:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.startGenerating()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of AudioWaveformGenerator.appendRecordedSamples(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AudioWaveformGenerator.Sample(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioWaveformGenerator.Sample(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioWaveformGenerator.Sample()
{
  return &type metadata for AudioWaveformGenerator.Sample;
}

uint64_t sub_1C3C9D724()
{
  return type metadata accessor for AudioWaveformSource(0);
}

uint64_t type metadata accessor for AudioWaveformSource(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA387088);
}

uint64_t sub_1C3C9D74C()
{
  uint64_t result = sub_1C3DB88F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AudioWaveformSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioWaveformSource);
}

uint64_t dispatch thunk of AudioWaveformSource.__allocating_init(url:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of AudioWaveformSource.startGenerating()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1C3C9D860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EA388EC0, type metadata accessor for TranscriptViewModelSegment);
  *unsigned int v3 = result;
  return result;
}

uint64_t sub_1C3C9D89C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F100(a1, a2, a3, (void *)*v3);
  *unsigned int v3 = result;
  return result;
}

uint64_t sub_1C3C9D8BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, &qword_1EB6FC470, MEMORY[0x1E4F276F0]);
  *unsigned int v3 = result;
  return result;
}

uint64_t sub_1C3C9D8F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3C9F28C(a1, a2, a3, (void *)*v3, &qword_1EA3870D0, MEMORY[0x1E4F27928]);
  *unsigned int v3 = result;
  return result;
}

uint64_t sub_1C3C9D934(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned int v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9DAA0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387138);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned int v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9DC00(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unsigned int v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    id v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unsigned int v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9DD90(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870A8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870B0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9DF3C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388ED0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9E0E0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388C90);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F00);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9E26C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387168);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387170) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  id v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387170) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9E4B4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3C9F28C(a1, a2, a3, a4, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1C3C9E4D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

unint64_t sub_1C3C9E634()
{
  unint64_t result = qword_1EA3870B8;
  if (!qword_1EA3870B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3870B8);
  }
  return result;
}

unint64_t sub_1C3C9E674()
{
  unint64_t result = qword_1EA3870C0;
  if (!qword_1EA3870C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3870C0);
  }
  return result;
}

uint64_t sub_1C3C9E6C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9E834(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387158);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9E9A0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870D8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9EB48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387148);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9ECA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9EE18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9EF84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387120);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 8 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9F0E0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3C9F28C(a1, a2, a3, a4, (uint64_t *)&unk_1EA388EC0, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1C3C9F100(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388E70);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870E8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C9F28C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

double sub_1C3C9F4D4(void *a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v2 = (float **)objc_msgSend(a1, sel_floatChannelData);
  if (!v2) {
    return 0.0;
  }
  unsigned int v3 = *v2;
  vDSP_Length v4 = objc_msgSend(a1, sel_frameLength);
  vDSP_vabs(v3, 1, v3, 1, v4);
  float __C = NAN;
  vDSP_maxv(v3, 1, &__C, v4);
  *(float *)&double result = __C;
  return result;
}

void sub_1C3C9F590(uint64_t a1, uint64_t a2)
{
  sub_1C3C9CB70(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C3C9F5B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3C9F5F8()
{
  unint64_t result = qword_1EA386C08;
  if (!qword_1EA386C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA386C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA386C08);
  }
  return result;
}

uint64_t sub_1C3C9F654()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C3C9F694(uint64_t a1, void *a2)
{
  return sub_1C3C9BD7C(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1C3C9F69C()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_1C3C9F80C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v9;
  uint64_t v14 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *unint64_t v15 = v3;
  v15[1] = sub_1C3C3259C;
  return sub_1C3C9A8D4(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_1C3C9F998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C9FA00()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3C9FA38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3C9FACC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870F0);
  return sub_1C3C9AF50(a1);
}

uint64_t sub_1C3C9FB40()
{
  return sub_1C3C988B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C3C9FB5C()
{
  return sub_1C3C98BA8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t getEnumTagSinglePayload for AudioWaveformSource.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 5) {
    return (v3 - 4);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioWaveformSource.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioWaveformSource.Error()
{
  return &type metadata for AudioWaveformSource.Error;
}

void sub_1C3C9FC38()
{
}

uint64_t sub_1C3C9FC54(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  if (a1)
  {
    swift_getObjectType();
    uint64_t v3 = sub_1C3DBA168();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  return MEMORY[0x1F4188298](sub_1C3C9FCEC, v3, v5);
}

uint64_t sub_1C3C9FCEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)(v1 + 8);
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v6 = (opaqueCMSampleBuffer *)objc_msgSend(v4, sel_copyNextSampleBuffer);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = v2;
    id v9 = v3;
    id v10 = v5;
    id v11 = v4;
    id v12 = sub_1C3CAEED8(v7, v9);
  }
  else
  {
    id v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(id))(v0 + 8);
  return v13(v12);
}

uint64_t sub_1C3C9FDCC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1C3C9FE10()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387178);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387178);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id sub_1C3C9FED8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackgroundTranscriber()), sel_init);
  qword_1EA387190 = (uint64_t)result;
  return result;
}

id static BackgroundTranscriber.shared.getter()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1EA387190;
  return v0;
}

void static BackgroundTranscriber.shared.setter(uint64_t a1)
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_1EA387190;
  qword_1EA387190 = a1;
}

uint64_t (*static BackgroundTranscriber.shared.modify())()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C3CA0190()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  sub_1C3CA0210((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1C3CA0210@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3CA0230()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ICBackgroundTranscriber__downloadingModel);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_1C3CA02AC((unsigned char *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

unsigned char *sub_1C3CA02AC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

id sub_1C3CA02B8()
{
  uint64_t v1 = sub_1C3DBA278();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = OBJC_IVAR___ICBackgroundTranscriber_queue;
  sub_1C3DB8DE8();
  uint64_t v3 = v0;
  sub_1C3DBA258();
  *(void *)&v0[v2] = sub_1C3DB8DB8();
  uint64_t v4 = OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3871D0);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0xE000000000000000;
  *(void *)&v3[v4] = v5;
  uint64_t v6 = OBJC_IVAR___ICBackgroundTranscriber__downloadingModel;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3871D8);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(unsigned char *)(v7 + 16) = 0;
  *(void *)&v3[v6] = v7;
  *(void *)&v3[OBJC_IVAR___ICBackgroundTranscriber_failedAttachments] = MEMORY[0x1E4FBC860];
  id v8 = objc_msgSend(self, sel_sharedContext);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_workerManagedObjectContext);
  }
  else
  {
    id v10 = 0;
  }
  *(void *)&v3[OBJC_IVAR___ICBackgroundTranscriber_workerContext] = v10;

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for BackgroundTranscriber();
  id v11 = objc_msgSendSuper2(&v16, sel_init);
  id v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v13, sel_handleResumeForeground, *MEMORY[0x1E4FB2628], 0);

  return v13;
}

uint64_t sub_1C3CA04E0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___ICBackgroundTranscriber_failedAttachments);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v9 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C3DBAFB8();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C877C220](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v8 = v7;
      ++v5;
      sub_1C3CA0C74(v6, 1, v7);
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CA0648(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C3CAEAFC(a1, a2, a3, (uint64_t)sub_1C3CA0724, v6);
  return swift_release_n();
}

uint64_t sub_1C3CA06E0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3CA0718(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C3CA0724(uint64_t a1, uint64_t a2)
{
  sub_1C3CA1220(a1, a2, v2, "Added transcription task to queue");
}

uint64_t sub_1C3CA08B0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(a1, a2, (uint64_t)sub_1C3CAED48, v4);
  return swift_release_n();
}

void sub_1C3CA0938(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR___ICBackgroundTranscriber_workerContext);
  if (v5)
  {
    id v10 = (void *)swift_allocObject();
    void v10[2] = v5;
    v10[3] = a2;
    v10[4] = a1;
    v10[5] = a3;
    v10[6] = a4;
    aBlock[4] = sub_1C3CAEDBC;
    void aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_1C3C9FDCC;
    aBlock[3] = &block_descriptor_6;
    id v11 = _Block_copy(aBlock);
    id v12 = v5;
    id v13 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_performBlock_, v11);
    _Block_release(v11);
  }
  else
  {
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C3DB9048();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EA387178);
    oslog = sub_1C3DB9028();
    os_log_type_t v15 = sub_1C3DBA6A8();
    if (os_log_type_enabled(oslog, v15))
    {
      objc_super v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v16 = 0;
      _os_log_impl(&dword_1C3A61000, oslog, v15, "no worker context found for background transcription", v16, 2u);
      MEMORY[0x1C877E600](v16, -1, -1);
    }
  }
}

void sub_1C3CA0C74(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*MEMORY[0x1E4FB2608])
  {
    if (objc_msgSend((id)*MEMORY[0x1E4FB2608], sel_applicationState))
    {
      id v11 = &v3[OBJC_IVAR___ICBackgroundTranscriber_failedAttachments];
      swift_beginAccess();
      id v12 = a3;
      MEMORY[0x1C877B4F0]();
      if (*(void *)((*(void *)v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v11 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1C3DBA068();
      sub_1C3DBA0C8();
      sub_1C3DBA038();
      swift_endAccess();
      uint64_t v13 = sub_1C3DBA278();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
      uint64_t v14 = (void *)swift_allocObject();
      void v14[2] = 0;
      v14[3] = 0;
      void v14[4] = v4;
      id v15 = v4;
      sub_1C3C5C22C((uint64_t)v10, (uint64_t)&unk_1EA3871C0, (uint64_t)v14);
      swift_release();
      if (qword_1EA385868 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1C3DB9048();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EA387178);
      id v17 = v12;
      uint64_t v18 = sub_1C3DB9028();
      os_log_type_t v19 = sub_1C3DBA688();
      if (os_log_type_enabled(v18, v19))
      {
        unint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v20 = 138412290;
        aBlock[0] = v17;
        id v22 = v17;
        sub_1C3DBA9A8();
        *uint64_t v21 = v17;

        _os_log_impl(&dword_1C3A61000, v18, v19, "will resume transcription for %@ when foregrounded", v20, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
        swift_arrayDestroy();
        MEMORY[0x1C877E600](v21, -1, -1);
        MEMORY[0x1C877E600](v20, -1, -1);
      }
      else
      {
      }
    }
    else if (*(void *)(a1 + 16))
    {
      uint64_t v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_1C3CAF14C(a1, a3, (uint64_t)sub_1C3CAEEB4, v23);
      swift_release_n();
    }
    else
    {
      id v24 = *(void **)&v3[OBJC_IVAR___ICBackgroundTranscriber_workerContext];
      if (v24)
      {
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v3;
        *(void *)(v25 + 24) = a3;
        *(unsigned char *)(v25 + 32) = a2 & 1;
        aBlock[4] = sub_1C3CAF39C;
        void aBlock[5] = v25;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        id aBlock[2] = sub_1C3C9FDCC;
        aBlock[3] = &block_descriptor_15;
        int64_t v26 = _Block_copy(aBlock);
        id v27 = v24;
        id v28 = v4;
        id v29 = a3;
        swift_release();
        objc_msgSend(v27, sel_performBlock_, v26);
        _Block_release(v26);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C3CA10BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1C3CA10DC, 0, 0);
}

uint64_t sub_1C3CA10DC()
{
  *(void *)(v0 + 24) = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR___ICBackgroundTranscriber_queue);
  sub_1C3DB8DE8();
  sub_1C3CAF9EC(&qword_1EA387208, MEMORY[0x1E4F835E8]);
  swift_retain();
  uint64_t v2 = sub_1C3DBA168();
  return MEMORY[0x1F4188298](sub_1C3CA11B8, v2, v1);
}

uint64_t sub_1C3CA11B8()
{
  sub_1C3DB8DC8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3CA1220(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (a1)
  {
    uint64_t v7 = a3 + 16;
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C877E6E0](v7);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      sub_1C3C4D848(a1);
      sub_1C3CAF668(a1, a2);
    }
    else
    {
      swift_retain();
    }
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C3DB9048();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EA387178);
    id v11 = sub_1C3DB9028();
    os_log_type_t v12 = sub_1C3DBA698();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1C3A61000, v11, v12, a4, v13, 2u);
      MEMORY[0x1C877E600](v13, -1, -1);
    }
    sub_1C3C4D710(a1);
  }
}

void BackgroundTranscriber.transcribeCallRecordingTask(speakers:NGASR:attachmentIdentifier:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C3CA1384(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  os_log_type_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v52 - v13;
  id v15 = *(void **)(a1 + OBJC_IVAR___ICBackgroundTranscriber_workerContext);
  if (!v15) {
    return;
  }
  id v16 = objc_msgSend(v15, sel_objectWithID_, a2);
  if (!v16) {
    return;
  }
  id v53 = v16;
  self;
  id v17 = (void *)swift_dynamicCastObjCClass();
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_audioModel);
    if (v19)
    {
      unint64_t v20 = v19;
      id v21 = objc_msgSend(v18, sel_subAttachments);
      if (!v21) {
        goto LABEL_13;
      }
      id v22 = v21;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
      sub_1C3CAF500(&qword_1EA3860B8, (unint64_t *)&qword_1EA388CA0);
      uint64_t v23 = sub_1C3DBA438();

      id v24 = (void *)sub_1C3D53ECC(v23);
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_13;
      }
      id v25 = objc_msgSend(v24, sel_media);

      if (v25)
      {
        id v26 = objc_msgSend(v25, sel_mediaURL);

        if (v26)
        {
          sub_1C3DB8898();

          uint64_t v27 = sub_1C3DB88F8();
          uint64_t v28 = *(void *)(v27 - 8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v27);
        }
        else
        {
          uint64_t v27 = sub_1C3DB88F8();
          uint64_t v28 = *(void *)(v27 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v12, 1, 1, v27);
        }
        sub_1C3CB3BF8((uint64_t)v12, (uint64_t)v14, (uint64_t *)&unk_1EB6FC7E0);
        sub_1C3DB88F8();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, v27) != 1)
        {
          sub_1C3C2A448((uint64_t)v14, (uint64_t *)&unk_1EB6FC7E0);
          id v31 = objc_msgSend(v20, sel_audioDocument);
          if (v31)
          {
            float v32 = v31;
            id v33 = objc_msgSend(v31, sel_localSpeakerHandle);

            if (v33 && (v54 = 0, v55 = 0, sub_1C3DB9C28(), v33, (uint64_t v34 = v55) != 0))
            {
              uint64_t v35 = v54;
            }
            else
            {
              id v36 = self;
              uint64_t v37 = (void *)sub_1C3DB9BF8();
              id v38 = objc_msgSend(v36, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v37, 0, 0, 1);

              uint64_t v35 = sub_1C3DB9C38();
              uint64_t v34 = v39;

              swift_bridgeObjectRelease();
            }
            id v40 = objc_msgSend(v20, sel_audioDocument);
            if (v40)
            {
              id v41 = v40;
              id v42 = objc_msgSend(v40, sel_remoteSpeakerHandle);

              if (v42 && (v54 = 0, v55 = 0, sub_1C3DB9C28(), v42, (uint64_t v43 = v55) != 0))
              {
                uint64_t v44 = v54;
              }
              else
              {
                uint64_t v45 = self;
                id v46 = (void *)sub_1C3DB9BF8();
                id v47 = objc_msgSend(v45, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v46, 0, 0, 1);

                uint64_t v44 = sub_1C3DB9C38();
                uint64_t v43 = v48;

                swift_bridgeObjectRelease();
              }
              uint64_t v49 = sub_1C3DBA278();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v8, 1, 1, v49);
              uint64_t v50 = swift_allocObject();
              *(void *)(v50 + 16) = 0;
              *(void *)(v50 + 24) = 0;
              *(void *)(v50 + 32) = v35;
              *(void *)(v50 + 40) = v34;
              *(void *)(v50 + 48) = v44;
              *(void *)(v50 + 56) = v43;
              *(unsigned char *)(v50 + 64) = a3 & 1;
              *(void *)(v50 + 72) = a2;
              id v51 = a2;
              sub_1C3C5C22C((uint64_t)v8, (uint64_t)&unk_1EA3871E8, v50);

              swift_release();
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          return;
        }
      }
      else
      {
LABEL_13:
        uint64_t v30 = sub_1C3DB88F8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 1, 1, v30);
      }

      sub_1C3C2A448((uint64_t)v14, (uint64_t *)&unk_1EB6FC7E0);
      return;
    }
  }
  id v29 = v53;
}

uint64_t sub_1C3CA19E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a7;
  v7[9] = v9;
  v7[6] = a5;
  v7[7] = a6;
  v7[5] = a4;
  return MEMORY[0x1F4188298](sub_1C3CA1A14, 0, 0);
}

uint64_t sub_1C3CA1A14()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[5];
  swift_beginAccess();
  uint64_t v6 = (void *)qword_1EA387190;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v1;
  id v8 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3CAF14C(v7, v2, (uint64_t)sub_1C3CA1B5C, 0);

  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1C3CA1B5C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = qword_1EA385870;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)qword_1EA387190;
    sub_1C3CAF668(a1, a2);

    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C3DB9048();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA387178);
    uint64_t v7 = sub_1C3DB9028();
    os_log_type_t v8 = sub_1C3DBA698();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C3A61000, v7, v8, "Added call transcription task to queue", v9, 2u);
      MEMORY[0x1C877E600](v9, -1, -1);
    }
    sub_1C3C4D710(a1);
  }
}

id BackgroundTranscriber.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundTranscriber();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3CA1E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_1C3DBA278();
  void v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CA1ED0, 0, 0);
}

uint64_t sub_1C3CA1ED0()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(void *)(v0 + 80) = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber_queue);
  swift_retain();
  sub_1C3DBA258();
  sub_1C3DB8DE8();
  sub_1C3CAF9EC(&qword_1EA387208, MEMORY[0x1E4F835E8]);
  uint64_t v2 = sub_1C3DBA168();
  return MEMORY[0x1F4188298](sub_1C3CA2008, v2, v1);
}

uint64_t sub_1C3CA2008()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  sub_1C3DB8DD8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3CA20A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 88) = v4;
  *(unsigned char *)(v5 + 544) = a2;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a3;
  uint64_t v6 = sub_1C3DB9308();
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = *(void *)(v6 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  uint64_t v7 = sub_1C3DB9288();
  *(void *)(v5 + 128) = v7;
  *(void *)(v5 + 136) = *(void *)(v7 - 8);
  *(void *)(v5 + 144) = swift_task_alloc();
  *(void *)(v5 + 152) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386440);
  *(void *)(v5 + 160) = swift_task_alloc();
  *(void *)(v5 + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386448);
  *(void *)(v5 + 176) = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386450);
  *(void *)(v5 + 184) = v8;
  *(void *)(v5 + 192) = *(void *)(v8 - 8);
  *(void *)(v5 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F0);
  *(void *)(v5 + 208) = swift_task_alloc();
  sub_1C3DB9218();
  *(void *)(v5 + 216) = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387238);
  *(void *)(v5 + 224) = v9;
  *(void *)(v5 + 232) = *(void *)(v9 - 8);
  *(void *)(v5 + 240) = swift_task_alloc();
  *(void *)(v5 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F8);
  *(void *)(v5 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386400);
  *(void *)(v5 + 264) = swift_task_alloc();
  uint64_t v10 = sub_1C3DB8C48();
  *(void *)(v5 + 272) = v10;
  *(void *)(v5 + 280) = *(void *)(v10 - 8);
  *(void *)(v5 + 288) = swift_task_alloc();
  *(void *)(v5 + 296) = swift_task_alloc();
  uint64_t v11 = sub_1C3DB9378();
  *(void *)(v5 + 304) = v11;
  *(void *)(v5 + 312) = *(void *)(v11 - 8);
  *(void *)(v5 + 320) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CA24A0, 0, 0);
}

uint64_t sub_1C3CA24A0()
{
  uint64_t v1 = (unsigned int *)MEMORY[0x1E4F3C248];
  if (!*(unsigned char *)(v0 + 544)) {
    uint64_t v1 = (unsigned int *)MEMORY[0x1E4F3C220];
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 312) + 104))(*(void *)(v0 + 320), *v1, *(void *)(v0 + 304));
  if (ICInternalSettingsDisableGASRAvailabilityCheck()) {
    sub_1C3DB8BA8();
  }
  else {
    sub_1C3DB8BF8();
  }
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 256);
  (*(void (**)(void))(*(void *)(v0 + 280) + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v2, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  uint64_t v7 = sub_1C3DB9228();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386408);
  uint64_t v8 = sub_1C3DB9238();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E4F3BFD8], v8);
  sub_1C3C5B1EC(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386410);
  uint64_t v12 = sub_1C3DB9368();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E4F3C1A8], v12);
  sub_1C3C5B504(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386418);
  uint64_t v16 = sub_1C3DB9298();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C3DD5140;
  unint64_t v21 = v20 + v19;
  id v22 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v22(v21, *MEMORY[0x1E4F3C028], v16);
  v22(v21 + v18, *MEMORY[0x1E4F3C030], v16);
  v22(v21 + 2 * v18, *MEMORY[0x1E4F3C048], v16);
  sub_1C3D44540(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C3DB92C8();
  swift_allocObject();
  uint64_t v23 = sub_1C3DB92B8();
  *(void *)(v0 + 328) = v23;
  *(void *)(v0 + 336) = sub_1C3DB91F8();
  *(void *)(v0 + 344) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386420);
  uint64_t v24 = swift_allocObject();
  *(void *)(v0 + 352) = v24;
  *(_OWORD *)(v24 + 16) = xmmword_1C3DD3D30;
  uint64_t v25 = sub_1C3CAF9EC(&qword_1EA386428, MEMORY[0x1E4F3C0B0]);
  *(void *)(v0 + 360) = v25;
  *(void *)(v24 + 32) = v23;
  *(void *)(v24 + 40) = v25;
  swift_retain_n();
  id v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v26;
  *id v26 = v0;
  v26[1] = sub_1C3CA2A1C;
  return MEMORY[0x1F40F7628](v24, 0);
}

uint64_t sub_1C3CA2A1C(void *a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[47] = a1;
  v4[48] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1F4188298](sub_1C3CA46A0, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)v4[8];
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))&a0_0[*(int *)a0_0];
    id v7 = v6;
    id v8 = a1;
    uint64_t v9 = (void *)swift_task_alloc();
    v4[49] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_1C3CA2BFC;
    uint64_t v10 = v4[8];
    return v12(v10, (uint64_t)v8);
  }
}

uint64_t sub_1C3CA2BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(void **)v5;
  *(void *)(*(void *)v5 + 400) = v4;
  swift_task_dealloc();
  if (v4)
  {
    swift_release();
    uint64_t v11 = sub_1C3CA30B0;
  }
  else
  {
    v10[51] = a4;
    v10[52] = a3;
    v10[53] = a2;
    v10[54] = a1;
    uint64_t v11 = sub_1C3CA2D4C;
  }
  return MEMORY[0x1F4188298](v11, 0, 0);
}

void sub_1C3CA2D4C()
{
  uint64_t v28 = v0;
  v0[2] = v0[54];
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[51];
  uint64_t v3 = (void *)v0[47];
  uint64_t v4 = v0[45];
  uint64_t v25 = v0[50];
  uint64_t v5 = v0[41];
  uint64_t v7 = v0[30];
  uint64_t v6 = v0[31];
  uint64_t v9 = v0[28];
  uint64_t v8 = v0[29];
  uint64_t v22 = v1[24];
  uint64_t v23 = v3;
  uint64_t v24 = v1[9];
  *(int8x16_t *)(v1 + 1) = vextq_s8(*((int8x16_t *)v1 + 25), *((int8x16_t *)v1 + 25), 8uLL);
  v1[3] = v2;
  sub_1C3DB92E8();
  sub_1C3CB3CE8();
  sub_1C3DBAEF8();
  sub_1C3DB9208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v4;
  uint64_t v11 = sub_1C3DB9328();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v22, 1, 1, v11);
  id v12 = objc_allocWithZone((Class)sub_1C3DB9318());
  swift_retain();
  id v13 = v23;
  objc_msgSend(v12, sel_init);
  sub_1C3CB3D3C();
  uint64_t v14 = sub_1C3DB91D8();
  uint64_t v15 = OBJC_IVAR___ICBackgroundTranscriber__downloadingModel;
  v1[53] = v14;
  v1[54] = v15;
  uint64_t v16 = *(void *)(v24 + v15);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 20));
  sub_1C3CA02AC((unsigned char *)(v16 + 16), v27);
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 20));
  if (!v25)
  {
    char v17 = v27[0];
    swift_release();
    if (v17)
    {
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v21 + 488) = v18;
      void *v18 = v21;
      v18[1] = sub_1C3CA3BE8;
      MEMORY[0x1F40F7658]();
    }
    else
    {
      id v26 = (void (*)(char))((char *)&dword_1EA388340 + dword_1EA388340);
      unint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v21 + 456) = v19;
      *unint64_t v19 = v21;
      v19[1] = sub_1C3CA3238;
      char v20 = *(unsigned char *)(v21 + 544);
      v26(v20);
    }
  }
}

uint64_t sub_1C3CA30B0()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[34];
  uint64_t v7 = v0[35];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C3CA3238(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 464) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_release();
    uint64_t v5 = sub_1C3CA3524;
  }
  else
  {
    *(unsigned char *)(v4 + 545) = a1 & 1;
    uint64_t v5 = sub_1C3CA3374;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

void sub_1C3CA3374()
{
  if (*(unsigned char *)(v0 + 545))
  {
    uint64_t v1 = *(void *)(v0 + 464);
    uint64_t v2 = *(void *)(*(void *)(v0 + 88) + *(void *)(v0 + 448));
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
    sub_1C3CA4DFC((unsigned char *)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
    if (!v1)
    {
      swift_release();
      uint64_t v6 = (void (*)(char, uint64_t, uint64_t))((char *)&dword_1EA388350 + dword_1EA388350);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1C3CA36D8;
      char v5 = *(unsigned char *)(v0 + 544);
      v6(v5, (uint64_t)sub_1C3CA4E08, 0);
    }
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C3CA3BE8;
    MEMORY[0x1F40F7658]();
  }
}

uint64_t sub_1C3CA3524()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[39];
  uint64_t v11 = v0[38];
  uint64_t v12 = v0[40];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v4 = v0[35];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CA36D8()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_release();
    uint64_t v2 = sub_1C3CA3904;
  }
  else
  {
    uint64_t v2 = sub_1C3CA3800;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C3CA3800()
{
  uint64_t v1 = v0[60];
  uint64_t v2 = *(void *)(v0[11] + v0[56]);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  sub_1C3CB46B4((unsigned char *)(v2 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  if (!v1)
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[61] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C3CA3BE8;
    MEMORY[0x1F40F7658]();
  }
}

uint64_t sub_1C3CA3904()
{
  uint64_t v1 = *(void *)(v0[11] + v0[56]);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_1C3CA4E0C((unsigned char *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  swift_release();
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C3A61000, v3, v4, "could not download ASR model so ending background transcription", v5, 2u);
    MEMORY[0x1C877E600](v5, -1, -1);
  }
  uint64_t v6 = v0[39];
  uint64_t v16 = v0[38];
  uint64_t v17 = v0[40];
  uint64_t v15 = v0[37];
  uint64_t v7 = v0[35];
  uint64_t v13 = (void *)v0[47];
  uint64_t v14 = v0[34];
  uint64_t v8 = v0[31];
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[29];

  swift_willThrow();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C3CA3BE8()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_release();
    uint64_t v2 = sub_1C3CA4820;
  }
  else
  {
    uint64_t v2 = sub_1C3CA3D10;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CA3D10()
{
  *(void *)(v0 + 48) = MEMORY[0x1E4FBC860];
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C3DB9048();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EA387178);
  uint64_t v2 = sub_1C3DB9028();
  os_log_type_t v3 = sub_1C3DBA688();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C3A61000, v2, v3, "starting call transcription speech analyzer", v4, 2u);
    MEMORY[0x1C877E600](v4, -1, -1);
  }

  sub_1C3DB92A8();
  swift_release();
  *(void *)(v0 + 504) = swift_getOpaqueTypeConformance2();
  sub_1C3DBA378();
  uint64_t v5 = (_DWORD *)MEMORY[0x1E4F3C0B8];
  *(_DWORD *)(v0 + 536) = *MEMORY[0x1E4F3C0D0];
  *(_DWORD *)(v0 + 540) = *v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C3CA3F2C;
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 160);
  return MEMORY[0x1F4187C80](v9, 0, 0, v0 + 56, v8, AssociatedConformanceWitness);
}

uint64_t sub_1C3CA3F2C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v1 = sub_1C3CA49D4;
  }
  else
  {
    uint64_t v1 = sub_1C3CA4050;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3CA4050()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 192) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 184));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CA43AC;
    return MEMORY[0x1F40F7658]();
  }
  uint64_t v5 = *(unsigned int *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v28, v1, v2);
  sub_1C3DB9248();
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v26(v6, v5, v8);
  char v10 = sub_1C3DB92F8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11(v6, v8);
  uint64_t v27 = v11;
  v11(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v29, v28, v2);
  if (v10)
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 136) + 8);
    v12(*(void *)(v0 + 144), *(void *)(v0 + 128));
LABEL_8:
    uint64_t v20 = _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporary11speakerName17overlapMitigationSayACG6Speech11TranscriberC18MultisegmentResultV_SbSSSgSbtFZ_0(*(void *)(v0 + 152), 0, *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int8 *)(v0 + 544));
    sub_1C3D79344(v20);
    goto LABEL_9;
  }
  uint64_t v13 = *(unsigned int *)(v0 + 540);
  uint64_t v15 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 112);
  uint64_t v19 = *(void *)(v0 + 96);
  sub_1C3DB9248();
  v26(v18, v13, v19);
  LOBYTE(v13) = sub_1C3DB92F8();
  v27(v18, v19);
  v27(v16, v19);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v12(v14, v17);
  if (v13) {
    goto LABEL_8;
  }
LABEL_9:
  v12(*(void *)(v0 + 152), *(void *)(v0 + 128));
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1C3CA3F2C;
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 160);
  return MEMORY[0x1F4187C80](v24, 0, 0, v0 + 56, v23, AssociatedConformanceWitness);
}

uint64_t sub_1C3CA43AC()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C3CA4BAC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C3CA44DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CA44DC()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v13 = v0[38];
  uint64_t v5 = v0[35];
  uint64_t v12 = v0[34];
  uint64_t v6 = v0[31];
  uint64_t v7 = v0[29];
  uint64_t v8 = v0[28];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v12);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  uint64_t v9 = v0[6];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_1C3CA46A0()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C3CA4820()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[39];
  uint64_t v11 = v0[38];
  uint64_t v12 = v0[40];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v4 = v0[35];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CA49D4()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[39];
  uint64_t v14 = v0[38];
  uint64_t v15 = v0[40];
  uint64_t v3 = v0[35];
  uint64_t v12 = v0[34];
  uint64_t v13 = v0[37];
  uint64_t v11 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[25];
  uint64_t v8 = v0[23];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CA4BAC()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[39];
  uint64_t v11 = v0[38];
  uint64_t v12 = v0[40];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v4 = v0[35];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CA4D60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1C3CA4D84, 0, 0);
}

uint64_t sub_1C3CA4D84()
{
  id v1 = *(id *)(v0 + 24);
  sub_1C3DB92D8();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unsigned char *sub_1C3CA4DFC(unsigned char *result)
{
  *uint64_t result = 1;
  return result;
}

unsigned char *sub_1C3CA4E0C(unsigned char *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_1C3CA4E14()
{
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C3DB9048();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA387178);
  oslog = sub_1C3DB9028();
  os_log_type_t v1 = sub_1C3DBA698();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 134217984;
    sub_1C3DBA9A8();
    _os_log_impl(&dword_1C3A61000, oslog, v1, "Downloading transcription ASR model… {progress: %ld}", v2, 0xCu);
    MEMORY[0x1C877E600](v2, -1, -1);
  }
  else
  {
  }
}

void sub_1C3CA4F4C(void *a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), NSObject *a6)
{
  uint64_t v60 = a4;
  os_log_t v61 = a6;
  uint64_t v10 = sub_1C3DB88F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  vDSP_Length v62 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  uint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14) {
    goto LABEL_13;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_audioModel);
  if (!v16) {
    goto LABEL_13;
  }
  uint64_t v17 = v16;
  os_log_type_t v57 = a5;
  id v18 = objc_msgSend(v15, sel_identifier);
  if (!v18)
  {

LABEL_13:
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C3DB9048();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EA387178);
    vDSP_Length v62 = sub_1C3DB9028();
    os_log_type_t v34 = sub_1C3DBA698();
    if (os_log_type_enabled(v62, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1C3A61000, v62, v34, "trying to background transcribe but identifier was nil", v35, 2u);
      MEMORY[0x1C877E600](v35, -1, -1);
    }
    goto LABEL_17;
  }
  uint64_t v19 = v18;
  id v59 = v17;
  uint64_t v56 = sub_1C3DB9C38();
  uint64_t v58 = v20;

  sub_1C3DBA868();
  uint64_t v21 = (void *)sub_1C3DBA858();
  unsigned __int8 v22 = objc_msgSend(v21, sel_supportsGeneralASR);

  if (v22)
  {
    id v23 = objc_msgSend(v59, sel_audioDocument);
    if (v23)
    {
      uint64_t v24 = v23;
      unsigned __int8 v25 = objc_msgSend(v23, sel_isCallRecording);

      if (v25) {
        goto LABEL_7;
      }
      id v37 = objc_msgSend(v59, sel_audioDocument);
      if (v37)
      {
        id v38 = v37;
        uint64_t v39 = ICTTAudioDocument.transcriptViewModelSegments.getter();

        uint64_t v40 = *(void *)(v39 + 16);
        swift_bridgeObjectRelease();
        if (!v40)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
          unint64_t v46 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
          unint64_t v47 = (v12 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v49 = swift_allocObject();
          uint64_t v50 = v58;
          *(void *)(v49 + 16) = v56;
          *(void *)(v49 + 24) = v50;
          (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v49 + v46, v13, v10);
          *(void *)(v49 + v47) = a1;
          *(void *)(v49 + v48) = a2;
          id v51 = v60;
          *(void *)(v49 + ((v48 + 15) & 0xFFFFFFFFFFFFFFF8)) = v60;
          id v52 = a1;
          id v53 = a2;
          id v54 = v51;
          v57(&unk_1EA387298, v49);
          swift_release();

          return;
        }
        swift_bridgeObjectRelease();
        if (qword_1EA385868 != -1) {
          swift_once();
        }
        uint64_t v41 = sub_1C3DB9048();
        __swift_project_value_buffer(v41, (uint64_t)qword_1EA387178);
        os_log_t v61 = (os_log_t)sub_1C3DB9028();
        os_log_type_t v42 = sub_1C3DBA698();
        BOOL v43 = os_log_type_enabled(v61, v42);
        id v44 = v59;
        if (v43)
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_1C3A61000, v61, v42, "tried to do background transcription on an attachment with a transcript", v45, 2u);
          MEMORY[0x1C877E600](v45, -1, -1);
        }

        os_log_t v36 = v61;
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C3DB9048();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EA387178);
  uint64_t v27 = sub_1C3DB9028();
  os_log_type_t v28 = sub_1C3DBA698();
  BOOL v29 = os_log_type_enabled(v27, v28);
  id v30 = v59;
  if (v29)
  {
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    _os_log_impl(&dword_1C3A61000, v27, v28, "tried to transcribe an imported call recording and thankfully failed", v31, 2u);
    MEMORY[0x1C877E600](v31, -1, -1);
  }

  objc_msgSend(v15, sel_setNeedsTranscription_, 0);
  float v32 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v15, sel_updateChangeCountWithReason_, v32);

  objc_msgSend(a1, sel_ic_save);
LABEL_17:
  os_log_t v36 = v62;
LABEL_18:
}

uint64_t sub_1C3CA5520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[34] = a5;
  v6[35] = a6;
  v6[32] = a3;
  v6[33] = a4;
  v6[30] = a1;
  v6[31] = a2;
  v6[36] = sub_1C3DB84F8();
  v6[37] = swift_task_alloc();
  uint64_t v7 = sub_1C3DB85C8();
  v6[38] = v7;
  v6[39] = *(void *)(v7 - 8);
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CA5628, 0, 0);
}

uint64_t sub_1C3CA5628()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  swift_beginAccess();
  uint64_t v3 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 32));
  sub_1C3CAFD0C((void *)(v3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 32));
  swift_release();
  swift_task_dealloc();
  id v5 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v6 = (void *)sub_1C3DB9BF8();
  uint64_t v7 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v5, sel_postNotificationName_object_userInfo_, v6, v7, 0);

  uint64_t v8 = (void *)qword_1EA387190;
  v0[42] = qword_1EA387190;
  id v9 = v8;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[43] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C3CA5838;
  uint64_t v11 = v0[32];
  return sub_1C3CB03A4(v11, 0, 0, 0);
}

uint64_t sub_1C3CA5838(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 352) = a1;
  *(void *)(v3 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1C3CA5E6C;
  }
  else
  {

    uint64_t v4 = sub_1C3CA5954;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C3CA5954()
{
  id v30 = v0;
  unint64_t v1 = v0[44];
  uint64_t v2 = (void *)v0[45];
  id v3 = objc_msgSend(self, sel_sharedConfiguration);
  uint64_t v4 = sub_1C3C93C70(v1, 0, v3);
  v0[46] = v4;
  if (v2)
  {
    swift_bridgeObjectRelease();

    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C3DB9048();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EA387178);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_1C3DB9028();
    os_log_type_t v7 = sub_1C3DBA6A8();
    BOOL v8 = os_log_type_enabled(v6, v7);
    unint64_t v9 = v0[31];
    if (v8)
    {
      uint64_t v28 = v0[30];
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v29[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      v0[29] = sub_1C3C516D0(v28, v9, v29);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v6, v7, "could not background transcribe fragments for attachment: %s.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v11, -1, -1);
      MEMORY[0x1C877E600](v10, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v26 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v26 + 32));
    sub_1C3CAD404((void *)(v26 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 32));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    uint64_t v12 = v4;

    swift_bridgeObjectRelease();
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1C3DB85B8();
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
      uint64_t v15 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1C3CC93A8(v0[40], v15, v29);
        v15 += v16;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v19 = v0[38];
    uint64_t v20 = v0[39];
    type metadata accessor for SummarizationManager();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v17, v18, v19);
    swift_bridgeObjectRelease();
    sub_1C3DB84E8();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    sub_1C3CAF9EC((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
    uint64_t v21 = sub_1C3DB9E68();
    uint64_t v23 = v22;
    v0[47] = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    v0[48] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1C3CA6108;
    return static SummarizationManager.generateTopLineTranscriptSummary(transcript:)((uint64_t)(v0 + 21), v21, v23);
  }
}

uint64_t sub_1C3CA5E6C()
{
  uint64_t v16 = v0;

  unint64_t v1 = *(void **)(v0 + 360);
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
  swift_bridgeObjectRetain_n();
  id v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 248);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v14 = v1;
    BOOL v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)BOOL v8 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_1C3C516D0(v7, v6, &v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v3, v4, "could not background transcribe fragments for attachment: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v9, -1, -1);
    MEMORY[0x1C877E600](v8, -1, -1);
    uint64_t v10 = v14;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v1;
  }

  uint64_t v11 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 32));
  sub_1C3CAD404((void *)(v11 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C3CA6108()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C3CA6A30;
  }
  else
  {
    uint64_t v2 = sub_1C3CA6250;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CA6250()
{
  sub_1C3CB3BF8((uint64_t)(v0 + 21), (uint64_t)(v0 + 16), &qword_1EA387230);
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C3DB9048();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EA387178);
  uint64_t v2 = sub_1C3DB9028();
  os_log_type_t v3 = sub_1C3DBA688();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C3A61000, v2, v3, "successfully generated transcript in background", v4, 2u);
    MEMORY[0x1C877E600](v4, -1, -1);
  }
  uint64_t v5 = v0[46];
  uint64_t v7 = (void *)v0[34];
  unint64_t v6 = (void *)v0[35];
  BOOL v8 = (void *)v0[33];

  uint64_t v9 = (void *)swift_allocObject();
  v0[50] = v9;
  v9[2] = v8;
  v9[3] = v7;
  void v9[4] = v6;
  v9[5] = v5;
  sub_1C3CB3BF8((uint64_t)(v0 + 16), (uint64_t)(v9 + 6), &qword_1EA387230);
  id v10 = v8;
  id v11 = v7;
  id v12 = v6;
  id v13 = v10;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1C3CA63F0, 0, 0);
}

uint64_t sub_1C3CA63F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  os_log_type_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0[50];
  unint64_t v6 = (void *)v0[33];
  v1[2] = v2;
  v1[3] = sub_1C3CA655C;
  uint64_t v7 = swift_continuation_init();
  BOOL v8 = (void *)swift_allocObject();
  v8[2] = sub_1C3CB43AC;
  v8[3] = v5;
  v8[4] = v7;
  v1[14] = sub_1C3CB46B0;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_130;
  uint64_t v9 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3CA655C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 408) = v2;
  if (v2)
  {
    swift_willThrow();
    os_log_type_t v3 = sub_1C3CA6780;
  }
  else
  {

    swift_release_n();
    os_log_type_t v3 = sub_1C3CA6690;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1C3CA6690()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 32));
  sub_1C3CAD404((void *)(v2 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  if (!v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v3 = *(void (**)(void))(v0 + 8);
    v3();
  }
}

uint64_t sub_1C3CA6780()
{
  uint64_t v17 = v0;
  uint64_t v1 = (void *)v0[33];
  swift_willThrow();

  swift_release_n();
  uint64_t v2 = (void *)v0[51];
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C3DB9048();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA387178);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = v0[31];
  if (v6)
  {
    uint64_t v8 = v0[30];
    uint64_t v15 = v2;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    v0[29] = sub_1C3C516D0(v8, v7, &v16);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v4, v5, "could not background transcribe fragments for attachment: %s.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v10, -1, -1);
    MEMORY[0x1C877E600](v9, -1, -1);
    uint64_t v11 = v15;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v11 = v2;
  }

  uint64_t v12 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 32));
  sub_1C3CAD404((void *)(v12 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C3CA6A30()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[49];
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = v0[31];
  if (v5)
  {
    uint64_t v7 = v0[30];
    uint64_t v14 = v1;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[29] = sub_1C3C516D0(v7, v6, &v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v3, v4, "could not background transcribe fragments for attachment: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v9, -1, -1);
    MEMORY[0x1C877E600](v8, -1, -1);
    uint64_t v10 = v14;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v1;
  }

  uint64_t v11 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 32));
  sub_1C3CAD404((void *)(v11 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_1C3CA6CC4(void *a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4, uint64_t a5)
{
  id v10 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (!v11) {
    goto LABEL_9;
  }
  uint64_t v12 = (void *)v11;
  uint64_t v37 = a5;
  id v13 = objc_msgSend(a1, sel_objectWithID_, a3);
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (!v14
    || (uint64_t v15 = (ICAttachment *)v14, (v16 = objc_msgSend(v12, sel_audioModel)) == 0))
  {
LABEL_8:

LABEL_9:
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C3DB9048();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EA387178);
    uint64_t v22 = sub_1C3DB9028();
    os_log_type_t v23 = sub_1C3DBA698();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1C3A61000, v22, v23, "could not transcribe because we did not find a subattachment", v24, 2u);
      MEMORY[0x1C877E600](v24, -1, -1);
    }

    if (qword_1EA385870 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v25 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v25 + 32));
    sub_1C3CAD404((void *)(v25 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 32));
    if (v5) {
      __break(1u);
    }
    else {
      swift_release();
    }
    return;
  }
  uint64_t v17 = v16;
  id v18 = objc_msgSend(v12, sel_identifier);
  if (!v18)
  {

    goto LABEL_8;
  }
  uint64_t v33 = v18;
  objc_msgSend(v12, sel_setNeedsTranscription_, 0);
  os_log_type_t v34 = v17;
  uint64_t v19 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v12, sel_updateChangeCountWithReason_, v19);

  ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)(a4, v15, 0);
  if (v20)
  {
  }
  else
  {
    sub_1C3CB3BF8(v37, (uint64_t)&v36, &qword_1EA387230);
    if (v36.text._object)
    {
      NotesShared::SummarizationResult summarizationResult = v36;
      ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summarizationResult:)(&summarizationResult);
      if (v26)
      {

        return;
      }
    }
    objc_msgSend(a1, sel_ic_save);
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1C3DB9048();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EA387178);
    uint64_t v28 = sub_1C3DB9028();
    os_log_type_t v29 = sub_1C3DBA688();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v30 = 0;
      _os_log_impl(&dword_1C3A61000, v28, v29, "successfully saved transcript in background", v30, 2u);
      MEMORY[0x1C877E600](v30, -1, -1);
    }

    id v31 = objc_msgSend(self, sel_defaultCenter);
    float v32 = (void *)sub_1C3DB9BF8();
    objc_msgSend(v31, sel_postNotificationName_object_userInfo_, v32, v33, 0);
  }
}

void sub_1C3CA7168(void *a1, void *a2, uint64_t a3, void (*a4)(void *, void *))
{
  uint64_t v33 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8) {
    goto LABEL_13;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_audioModel);
  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v9, sel_identifier);
  if (!v12)
  {

LABEL_13:
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1C3DB9048();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EA387178);
    uint64_t v33 = sub_1C3DB9028();
    os_log_type_t v27 = sub_1C3DBA698();
    if (os_log_type_enabled(v33, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1C3A61000, v33, v27, "did not find attachment to transcribe", v28, 2u);
      MEMORY[0x1C877E600](v28, -1, -1);
    }
    goto LABEL_17;
  }
  id v13 = v12;
  uint64_t v32 = sub_1C3DB9C38();
  uint64_t v15 = v14;

  sub_1C3DBA868();
  id v16 = (void *)sub_1C3DBA858();
  unsigned __int8 v17 = objc_msgSend(v16, sel_supportsGeneralASR);

  if ((v17 & 1) == 0) {
    goto LABEL_7;
  }
  id v18 = objc_msgSend(v11, sel_audioDocument);
  if (!v18)
  {
    __break(1u);
    return;
  }
  uint64_t v19 = v18;
  unsigned __int8 v20 = objc_msgSend(v18, sel_isCallRecording);

  if ((v20 & 1) == 0)
  {
    os_log_type_t v29 = (void *)swift_allocObject();
    _OWORD v29[2] = v32;
    uint64_t v29[3] = v15;
    v29[4] = a3;
    v29[5] = a1;
    v29[6] = a2;
    swift_bridgeObjectRetain();
    id v30 = a1;
    id v31 = a2;
    a4(&unk_1EA387278, v29);
    swift_release();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C3DB9048();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EA387178);
    uint64_t v22 = sub_1C3DB9028();
    os_log_type_t v23 = sub_1C3DBA698();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1C3A61000, v22, v23, "tried to transcribe an imported call recording and thankfully failed", v24, 2u);
      MEMORY[0x1C877E600](v24, -1, -1);
    }

    objc_msgSend(v9, sel_setNeedsTranscription_, 0);
    uint64_t v25 = (void *)sub_1C3DB9BF8();
    objc_msgSend(v9, sel_updateChangeCountWithReason_, v25);

    objc_msgSend(a1, sel_ic_save);
  }
LABEL_17:
}

uint64_t sub_1C3CA750C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[24] = a4;
  v5[25] = a5;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  uint64_t v6 = sub_1C3DB88F8();
  v5[26] = v6;
  v5[27] = *(void *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387280);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CA7624, 0, 0);
}

uint64_t sub_1C3CA7624()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  swift_beginAccess();
  uint64_t v3 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 32));
  sub_1C3CAFD0C((void *)(v3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 32));
  uint64_t v5 = *(void *)(v0 + 184);
  swift_release();
  swift_task_dealloc();
  id v6 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v7 = (void *)sub_1C3DB9BF8();
  uint64_t v8 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v6, sel_postNotificationName_object_userInfo_, v7, v8, 0);

  char v9 = *(unsigned char *)(v5 + 32);
  *(unsigned char *)(v0 + 360) = v9;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << v9;
  if (-(-1 << v9) < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & *(void *)(v5 + 64);
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = 0;
    unint64_t v14 = __clz(__rbit64(v12));
    uint64_t v15 = (v12 - 1) & v12;
    id v16 = *(void **)(v0 + 184);
LABEL_7:
    *(void *)(v0 + 264) = v13;
    *(void *)(v0 + 272) = v15;
    id v18 = *(void **)(v0 + 248);
    unsigned __int8 v17 = *(void **)(v0 + 256);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v19 = *(void **)(v0 + 240);
    uint64_t v22 = *(void **)(v0 + 216);
    uint64_t v21 = *(char **)(v0 + 224);
    uint64_t v23 = *(void *)(v0 + 208);
    uint64_t v24 = *(void **)(v16[6] + 8 * v14);
    *(void *)(v0 + 280) = v24;
    *unsigned __int8 v17 = v24;
    uint64_t v25 = v24;
    unint64_t v46 = v24;
    unint64_t v47 = v21;
    uint64_t v26 = (char *)v17 + *(int *)(v20 + 48);
    uint64_t v45 = (void (*)(char *, unint64_t, uint64_t))v22[2];
    v45(v26, v16[7] + v22[9] * v14, v23);
    os_log_type_t v27 = (char *)v18 + *(int *)(v20 + 48);
    void *v18 = v25;
    uint64_t v28 = (void (*)(char *, char *, uint64_t))v22[4];
    v28(v27, v26, v23);
    os_log_type_t v29 = (char *)v19 + *(int *)(v20 + 48);
    v45(v29, (unint64_t)v27, v23);
    v28(v47, v29, v23);
    id v30 = (char *)v19 + *(int *)(v20 + 48);
    *uint64_t v19 = v46;
    v45(v30, (unint64_t)v27, v23);
    id v31 = (void (*)(char *, uint64_t))v22[1];
    *(void *)(v0 + 288) = v31;
    *(void *)(v0 + 296) = (unint64_t)(v22 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    id v32 = v46;
    v31(v30, v23);
    uint64_t v33 = (void *)qword_1EA387190;
    *(void *)(v0 + 304) = qword_1EA387190;
    id v34 = v33;
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_1C3CA7B34;
    uint64_t v36 = *(void *)(v0 + 224);
    return sub_1C3CB03A4(v36, 0, 0, 0);
  }
  unint64_t v38 = 63 - v11;
  id v16 = *(void **)(v0 + 184);
  if ((unint64_t)(63 - v11) > 0x7F)
  {
    unint64_t v39 = v16[9];
    if (v39)
    {
      uint64_t v13 = 1;
LABEL_13:
      uint64_t v15 = (v39 - 1) & v39;
      unint64_t v14 = __clz(__rbit64(v39)) + (v13 << 6);
      goto LABEL_7;
    }
    if (v38 >= 0xC0)
    {
      unint64_t v39 = v16[10];
      if (v39)
      {
        uint64_t v13 = 2;
        goto LABEL_13;
      }
      if (v38 >= 0x100)
      {
        unint64_t v39 = v16[11];
        if (v39)
        {
          uint64_t v13 = 3;
          goto LABEL_13;
        }
        if (v38 >= 0x140)
        {
          unint64_t v39 = v16[12];
          if (v39)
          {
            uint64_t v13 = 4;
            goto LABEL_13;
          }
          uint64_t v40 = 0;
          uint64_t v41 = v38 >> 6;
          if (v41 <= 5) {
            uint64_t v41 = 5;
          }
          uint64_t v42 = v41 - 5;
          while (v42 != v40)
          {
            unint64_t v39 = v16[v40++ + 13];
            if (v39)
            {
              uint64_t v13 = v40 + 4;
              goto LABEL_13;
            }
          }
        }
      }
    }
  }
  swift_release();
  uint64_t v43 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v43 + 32));
  sub_1C3CAD404((void *)(v43 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v43 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1C3CA7B34(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 320) = a1;
  *(void *)(v4 + 328) = v1;
  swift_task_dealloc();

  if (v1) {
    uint64_t v5 = sub_1C3CA80E0;
  }
  else {
    uint64_t v5 = sub_1C3CA7C70;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C3CA7C70()
{
  uint64_t v32 = v0;
  unint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void **)(v0 + 328);
  id v3 = objc_msgSend(self, sel_sharedConfiguration);
  uint64_t v4 = sub_1C3C93C70(v1, 0, v3);
  *(void *)(v0 + 336) = v2;
  uint64_t v5 = *(void **)(v0 + 280);
  if (v2)
  {

    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v0 + 248);
    (*(void (**)(void, void))(v0 + 288))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    sub_1C3C2A448(v6, &qword_1EA387280);
    swift_release();
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C3DB9048();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EA387178);
    swift_bridgeObjectRetain();
    id v8 = v2;
    swift_bridgeObjectRetain();
    id v9 = v2;
    uint64_t v10 = sub_1C3DB9028();
    os_log_type_t v11 = sub_1C3DBA6A8();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = *(void *)(v0 + 176);
    if (v12)
    {
      uint64_t v29 = *(void *)(v0 + 168);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = v30;
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 152) = sub_1C3C516D0(v29, v13, &v31);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2112;
      id v16 = v2;
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 160) = v17;
      sub_1C3DBA9A8();
      *uint64_t v15 = v17;

      _os_log_impl(&dword_1C3A61000, v10, v11, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v30, -1, -1);
      MEMORY[0x1C877E600](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v26 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v26 + 32));
    sub_1C3CAD404((void *)(v26 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 32));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  else
  {
    uint64_t v18 = v4;
    uint64_t v19 = *(void **)(v0 + 192);
    uint64_t v20 = *(void **)(v0 + 200);

    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)swift_allocObject();
    *(void *)(v0 + 344) = v21;
    void v21[2] = v19;
    v21[3] = v20;
    void v21[4] = v5;
    v21[5] = v18;
    id v22 = v5;
    id v23 = v19;
    id v24 = v20;
    id v25 = v23;
    swift_retain();
    return MEMORY[0x1F4188298](sub_1C3CA8464, 0, 0);
  }
}

uint64_t sub_1C3CA80E0()
{
  uint64_t v20 = v0;

  unint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 248);
  (*(void (**)(void, void))(v0 + 288))(*(void *)(v0 + 224), *(void *)(v0 + 208));
  sub_1C3C2A448(v2, &qword_1EA387280);
  swift_release();
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C3DB9048();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA387178);
  swift_bridgeObjectRetain();
  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v1;
  uint64_t v6 = sub_1C3DB9028();
  os_log_type_t v7 = sub_1C3DBA6A8();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = *(void *)(v0 + 176);
  if (v8)
  {
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v10 = swift_slowAlloc();
    os_log_type_t v11 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_1C3C516D0(v17, v9, &v19);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    id v12 = v1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 160) = v13;
    sub_1C3DBA9A8();
    *os_log_type_t v11 = v13;

    _os_log_impl(&dword_1C3A61000, v6, v7, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v18, -1, -1);
    MEMORY[0x1C877E600](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 32));
  sub_1C3CAD404((void *)(v14 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1C3CA8464()
{
  unint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  id v4 = v0 + 10;
  uint64_t v5 = v0[43];
  uint64_t v6 = (void *)v0[24];
  v1[2] = v2;
  v1[3] = sub_1C3CA85D0;
  uint64_t v7 = swift_continuation_init();
  BOOL v8 = (void *)swift_allocObject();
  v8[2] = sub_1C3CB3EF4;
  v8[3] = v5;
  v8[4] = v7;
  v1[14] = sub_1C3CB46B0;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_101;
  unint64_t v9 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3CA85D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 352) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C3CA8AE0;
  }
  else
  {
    id v4 = *(void **)(v1 + 192);
    swift_release_n();

    uint64_t v3 = sub_1C3CA8700;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1C3CA8700()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);

  v1(v3, v4);
  sub_1C3C2A448(v2, &qword_1EA387280);
  int64_t v5 = *(void *)(v0 + 264);
  unint64_t v6 = *(void *)(v0 + 272);
  if (v6)
  {
    uint64_t v7 = (v6 - 1) & v6;
    unint64_t v8 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v9 = *(void *)(v0 + 184);
LABEL_3:
    *(void *)(v0 + 264) = v5;
    *(void *)(v0 + 272) = v7;
    uint64_t v11 = *(void **)(v0 + 248);
    uint64_t v10 = *(void **)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 232);
    id v12 = *(void **)(v0 + 240);
    uint64_t v15 = *(void **)(v0 + 216);
    uint64_t v14 = *(char **)(v0 + 224);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void **)(*(void *)(v9 + 48) + 8 * v8);
    *(void *)(v0 + 280) = v17;
    *uint64_t v10 = v17;
    uint64_t v18 = v17;
    unint64_t v39 = v17;
    uint64_t v40 = v14;
    uint64_t v19 = (char *)v10 + *(int *)(v13 + 48);
    unint64_t v38 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    v38(v19, *(void *)(v9 + 56) + v15[9] * v8, v16);
    uint64_t v20 = (char *)v11 + *(int *)(v13 + 48);
    *uint64_t v11 = v18;
    uint64_t v21 = (void (*)(char *, char *, uint64_t))v15[4];
    v21(v20, v19, v16);
    id v22 = (char *)v12 + *(int *)(v13 + 48);
    v38(v22, (unint64_t)v20, v16);
    v21(v40, v22, v16);
    id v23 = (char *)v12 + *(int *)(v13 + 48);
    *id v12 = v39;
    v38(v23, (unint64_t)v20, v16);
    id v24 = (void (*)(char *, uint64_t))v15[1];
    *(void *)(v0 + 288) = v24;
    *(void *)(v0 + 296) = (unint64_t)(v15 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    id v25 = v39;
    v24(v23, v16);
    uint64_t v26 = (void *)qword_1EA387190;
    *(void *)(v0 + 304) = qword_1EA387190;
    id v27 = v26;
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1C3CA7B34;
    uint64_t v29 = *(void *)(v0 + 224);
    sub_1C3CB03A4(v29, 0, 0, 0);
    return;
  }
  int64_t v30 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v31 = *(void *)(v0 + 336);
  int64_t v32 = (unint64_t)((1 << *(unsigned char *)(v0 + 360)) + 63) >> 6;
  uint64_t v9 = *(void *)(v0 + 184);
  if (v30 < v32)
  {
    uint64_t v33 = v9 + 64;
    unint64_t v34 = *(void *)(v9 + 64 + 8 * v30);
    ++v5;
    if (v34)
    {
LABEL_9:
      uint64_t v7 = (v34 - 1) & v34;
      unint64_t v8 = __clz(__rbit64(v34)) + (v5 << 6);
      goto LABEL_3;
    }
    int64_t v5 = v30 + 1;
    if (v30 + 1 < v32)
    {
      unint64_t v34 = *(void *)(v33 + 8 * v5);
      if (v34) {
        goto LABEL_9;
      }
      int64_t v5 = v30 + 2;
      if (v30 + 2 < v32)
      {
        unint64_t v34 = *(void *)(v33 + 8 * v5);
        if (v34) {
          goto LABEL_9;
        }
        int64_t v35 = v30 + 3;
        if (v35 < v32)
        {
          unint64_t v34 = *(void *)(v33 + 8 * v35);
          if (v34)
          {
            int64_t v5 = v35;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v5 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              break;
            }
            if (v5 >= v32) {
              goto LABEL_20;
            }
            unint64_t v34 = *(void *)(v33 + 8 * v5);
            ++v35;
            if (v34) {
              goto LABEL_9;
            }
          }
LABEL_25:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  uint64_t v36 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 32));
  sub_1C3CAD404((void *)(v36 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 32));
  if (!v31)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(void (**)(void))(v0 + 8);
    v37();
  }
}

uint64_t sub_1C3CA8AE0()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_release_n();
  uint64_t v3 = *(void **)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 248);
  (*(void (**)(void, void))(v0 + 288))(*(void *)(v0 + 224), *(void *)(v0 + 208));
  sub_1C3C2A448(v4, &qword_1EA387280);
  swift_release();
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB9048();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EA387178);
  swift_bridgeObjectRetain();
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v3;
  unint64_t v8 = sub_1C3DB9028();
  os_log_type_t v9 = sub_1C3DBA6A8();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = *(void *)(v0 + 176);
  if (v10)
  {
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_1C3C516D0(v19, v11, &v21);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    id v14 = v3;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 160) = v15;
    sub_1C3DBA9A8();
    *uint64_t v13 = v15;

    _os_log_impl(&dword_1C3A61000, v8, v9, "could not transcribe fragments for attachment: %s %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v20, -1, -1);
    MEMORY[0x1C877E600](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 32));
  sub_1C3CAD404((void *)(v16 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 32));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

void sub_1C3CA8E80(void *a1, uint64_t a2, uint64_t a3, Swift::OpaquePointer a4)
{
  id v8 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    BOOL v10 = (void *)v9;
    id v11 = objc_msgSend(a1, sel_objectWithID_, a3);
    self;
    uint64_t v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      uint64_t v13 = (ICAttachment *)v12;
      id v14 = objc_msgSend(v10, sel_audioModel);
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = objc_msgSend(v10, sel_identifier);
        if (v16)
        {
          uint64_t v31 = v16;
          objc_msgSend(v10, sel_setNeedsTranscription_, 0);
          uint64_t v17 = (void *)sub_1C3DB9BF8();
          objc_msgSend(v10, sel_updateChangeCountWithReason_, v17);

          id v18 = objc_msgSend(v10, sel_attachmentModel);
          objc_msgSend(v18, sel_setMergeableDataDirty_, 1);

          ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)(a4, v13, 1);
          if (v19)
          {
          }
          else
          {
            objc_msgSend(a1, sel_ic_save);
            if (qword_1EA385868 != -1) {
              swift_once();
            }
            uint64_t v25 = sub_1C3DB9048();
            __swift_project_value_buffer(v25, (uint64_t)qword_1EA387178);
            uint64_t v26 = sub_1C3DB9028();
            os_log_type_t v27 = sub_1C3DBA698();
            if (os_log_type_enabled(v26, v27))
            {
              uint64_t v28 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v28 = 0;
              _os_log_impl(&dword_1C3A61000, v26, v27, "successfully saved transcript in background", v28, 2u);
              MEMORY[0x1C877E600](v28, -1, -1);
            }

            id v29 = objc_msgSend(self, sel_defaultCenter);
            int64_t v30 = (void *)sub_1C3DB9BF8();
            objc_msgSend(v29, sel_postNotificationName_object_userInfo_, v30, v31, 0);
          }
          return;
        }
      }
    }
  }
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v20 + 32));
  sub_1C3CAD404((void *)(v20 + 16));
  if (v4)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 32));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 32));
    swift_release();
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C3DB9048();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EA387178);
    uint64_t v22 = sub_1C3DB9028();
    os_log_type_t v23 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl(&dword_1C3A61000, v22, v23, "did not find subattachment info for retranscription task", v24, 2u);
      MEMORY[0x1C877E600](v24, -1, -1);
    }
  }
}

void sub_1C3CA92E8(void *a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v61 = a3;
  vDSP_Length v62 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = sub_1C3DB88F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v64 = a1;
  id v65 = (char *)&v54 - v21;
  os_log_type_t v63 = a2;
  id v22 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  os_log_type_t v23 = (void *)swift_dynamicCastObjCClass();
  if (!v23) {
    goto LABEL_12;
  }
  id v24 = v23;
  id v25 = objc_msgSend(v23, sel_audioModel);
  if (!v25) {
    goto LABEL_12;
  }
  uint64_t v59 = v17;
  id v60 = v25;
  id v26 = objc_msgSend(v24, sel_identifier);
  if (!v26)
  {

LABEL_12:
    goto LABEL_13;
  }
  os_log_type_t v27 = v26;
  uint64_t v56 = a6;
  os_log_type_t v57 = a5;
  uint64_t v55 = sub_1C3DB9C38();
  uint64_t v29 = v28;

  id v30 = objc_msgSend(v24, sel_subAttachments);
  if (!v30) {
    goto LABEL_9;
  }
  uint64_t v31 = v30;
  uint64_t v58 = v29;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
  sub_1C3CAF500(&qword_1EA3860B8, (unint64_t *)&qword_1EA388CA0);
  uint64_t v32 = sub_1C3DBA438();

  uint64_t v33 = (void *)sub_1C3D53ECC(v32);
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_9;
  }
  id v34 = objc_msgSend(v33, sel_media);

  if (v34)
  {
    id v35 = objc_msgSend(v34, sel_mediaURL);

    if (v35)
    {
      sub_1C3DB8898();

      uint64_t v36 = v59;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v13, 0, 1, v16);
    }
    else
    {
      uint64_t v36 = v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v13, 1, 1, v16);
    }
    sub_1C3CB3BF8((uint64_t)v13, (uint64_t)v15, (uint64_t *)&unk_1EB6FC7E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v15, 1, v16) != 1)
    {
      id v54 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      uint64_t v41 = v65;
      v54(v65, v15, v16);
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v20, v41, v16);
      unint64_t v42 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v43 = (v18 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v46 = swift_allocObject();
      uint64_t v47 = v58;
      *(void *)(v46 + 16) = v55;
      *(void *)(v46 + 24) = v47;
      v54((char *)(v46 + v42), v20, v16);
      *(void *)(v46 + v43) = v61;
      uint64_t v49 = v62;
      uint64_t v48 = v63;
      *(void *)(v46 + v44) = v62;
      *(void *)(v46 + v45) = v48;
      uint64_t v50 = v64;
      *(void *)(v46 + ((v45 + 15) & 0xFFFFFFFFFFFFFFF8)) = v64;
      swift_bridgeObjectRetain();
      id v51 = v49;
      id v52 = v48;
      id v53 = v50;
      swift_retain();
      v57(&unk_1EA387218, v46);

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v16);
      return;
    }
  }
  else
  {
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v15, 1, 1, v16);
  }

  swift_bridgeObjectRelease();
  sub_1C3C2A448((uint64_t)v15, (uint64_t *)&unk_1EB6FC7E0);
LABEL_13:
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1C3DB9048();
  __swift_project_value_buffer(v37, (uint64_t)qword_1EA387178);
  unint64_t v38 = sub_1C3DB9028();
  os_log_type_t v39 = sub_1C3DBA698();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl(&dword_1C3A61000, v38, v39, "did not find attachment to transcribe", v40, 2u);
    MEMORY[0x1C877E600](v40, -1, -1);
  }
}

uint64_t sub_1C3CA9890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[96] = a7;
  v7[95] = a6;
  v7[94] = a4;
  v7[93] = a3;
  v7[92] = a2;
  v7[91] = a1;
  v7[97] = sub_1C3DB84F8();
  v7[98] = swift_task_alloc();
  uint64_t v8 = sub_1C3DB85C8();
  v7[99] = v8;
  v7[100] = *(void *)(v8 - 8);
  v7[101] = swift_task_alloc();
  v7[102] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CA99A4, 0, 0);
}

uint64_t sub_1C3CA99A4()
{
  if (qword_1EA385870 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[92];
  uint64_t v2 = v0[91];
  swift_beginAccess();
  uint64_t v3 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 32));
  sub_1C3CAFD0C((void *)(v3 + 16));
  v0[103] = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 32));
  swift_release();
  swift_task_dealloc();
  id v5 = objc_msgSend(self, sel_defaultCenter);
  id v6 = (void *)sub_1C3DB9BF8();
  id v7 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v5, sel_postNotificationName_object_userInfo_, v6, v7, 0);

  id v8 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  uint64_t v9 = (void *)sub_1C3DB8848();
  id v10 = objc_msgSend(v8, sel_initWithURL_options_, v9, 0);
  v0[104] = v10;

  uint64_t v11 = *MEMORY[0x1E4F15BA8];
  v0[105] = *MEMORY[0x1E4F15BA8];
  v0[10] = v0;
  v0[15] = v0 + 87;
  v0[11] = sub_1C3CA9C6C;
  v0[65] = swift_continuation_init();
  v0[61] = MEMORY[0x1E4F143A8];
  v0[62] = 0x40000000;
  v0[63] = sub_1C3D54090;
  v0[64] = &block_descriptor_59;
  objc_msgSend(v10, sel_loadTracksWithMediaType_completionHandler_, v11, v0 + 61);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1C3CA9C6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 848) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3CAC0E4;
  }
  else {
    uint64_t v2 = sub_1C3CA9D7C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C3CA9D7C()
{
  unint64_t v1 = *(void *)(v0 + 696);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 840);
    uint64_t v4 = *(void **)(v0 + 832);
    *(void *)(v0 + 208) = v0;
    *(void *)(v0 + 248) = v0 + 680;
    *(void *)(v0 + 216) = sub_1C3CAA054;
    uint64_t v5 = swift_continuation_init();
    *(void *)(v0 + 408) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 416) = 0x40000000;
    *(void *)(v0 + 424) = sub_1C3D54090;
    *(void *)(v0 + 432) = &block_descriptor_60;
    *(void *)(v0 + 440) = v5;
    objc_msgSend(v4, sel_loadTracksWithMediaType_completionHandler_, v3, v0 + 408);
    MEMORY[0x1F41881E8](v0 + 208);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 824);
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C3DB9048();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EA387178);
    id v8 = sub_1C3DB9028();
    os_log_type_t v9 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_1C3A61000, v8, v9, "failed to get tracks from file", v10, 2u);
      MEMORY[0x1C877E600](v10, -1, -1);
    }

    uint64_t v11 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v11 + 32));
    sub_1C3CAD404((void *)(v11 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 32));
    if (!v6)
    {

      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v12 = *(void (**)(void))(v0 + 8);
      v12();
    }
  }
}

uint64_t sub_1C3CAA054()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  *(void *)(*(void *)v0 + 856) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3CAC2A4;
  }
  else {
    uint64_t v2 = sub_1C3CAA164;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CAA164(void *a1)
{
  uint64_t v2 = v1[85];
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C877C220](0, v1[85]);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x1F41881E8](a1);
    }
    id v3 = *(id *)(v2 + 32);
  }
  v1[108] = v3;
  uint64_t v4 = v1[105];
  uint64_t v5 = (void *)v1[104];
  swift_bridgeObjectRelease();
  v1[18] = v1;
  v1[23] = v1 + 86;
  v1[19] = sub_1C3CAA2B4;
  v1[75] = swift_continuation_init();
  v1[71] = MEMORY[0x1E4F143A8];
  v1[72] = 0x40000000;
  v1[73] = sub_1C3D54090;
  v1[74] = &block_descriptor_61;
  objc_msgSend(v5, sel_loadTracksWithMediaType_completionHandler_, v4, v1 + 71);
  a1 = v1 + 18;
  return MEMORY[0x1F41881E8](a1);
}

uint64_t sub_1C3CAA2B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 872) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3CAC464;
  }
  else {
    uint64_t v2 = sub_1C3CAA3C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CAA3C4(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[86];
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C877C220](1, v3[86]);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return MEMORY[0x1F4188298](a1, a2, a3);
    }
    id v5 = *(id *)(v4 + 40);
  }
  v3[110] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[111] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C3CAA4B4;
  v6[19] = v3[108];
  a1 = sub_1C3CB3330;
  a2 = 0;
  a3 = 0;
  return MEMORY[0x1F4188298](a1, a2, a3);
}

uint64_t sub_1C3CAA4B4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 896) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C3CAA5B4, 0, 0);
}

void sub_1C3CAA5B4()
{
  if (*(void *)(v0 + 896))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 904) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1C3CAA804;
    v1[19] = *(void *)(v0 + 880);
    MEMORY[0x1F4188298](sub_1C3CB3330, 0, 0);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 880);

    uint64_t v3 = *(void *)(v0 + 824);
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C3DB9048();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EA387178);
    id v5 = sub_1C3DB9028();
    os_log_type_t v6 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1C3A61000, v5, v6, "failed to create composition for call transcription", v7, 2u);
      MEMORY[0x1C877E600](v7, -1, -1);
    }

    uint64_t v8 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 32));
    sub_1C3CAD404((void *)(v8 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 32));
    if (!v3)
    {

      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v9 = *(void (**)(void))(v0 + 8);
      v9();
    }
  }
}

uint64_t sub_1C3CAA804(uint64_t a1)
{
  *(void *)(*(void *)v1 + 912) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C3CAA904, 0, 0);
}

void sub_1C3CAA904()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void **)(v0 + 912);
  if (v1)
  {
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1C3DB9048();
    *(void *)(v0 + 920) = __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
    uint64_t v3 = sub_1C3DB9028();
    os_log_type_t v4 = sub_1C3DBA688();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_1C3A61000, v3, v4, "separated tracks for call transcript", v5, 2u);
      MEMORY[0x1C877E600](v5, -1, -1);
    }
    uint64_t v6 = *(void *)(v0 + 896);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 928) = inited;
    *(_OWORD *)(inited + 16) = xmmword_1C3DD5940;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v1;
    v57[0] = (void *)inited;
    sub_1C3DBA038();
    unint64_t v8 = (unint64_t)v57[0];
    *(void **)(v0 + 936) = v57[0];
    os_log_type_t v9 = (void *)MEMORY[0x1E4FBC860];
    *(void *)(v0 + 712) = MEMORY[0x1E4FBC860];
    uint64_t v10 = *(void **)(v0 + 896);
    if (v8 >> 62)
    {
      id v40 = v10;
      id v41 = v1;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1C3DBAFB8();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 944) = v42;
      if (v42) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v12 = v10;
      id v13 = v1;
      *(void *)(v0 + 944) = v11;
      if (v11)
      {
LABEL_8:
        uint64_t v14 = *(void *)(v0 + 824);
        unint64_t v15 = *(void *)(v0 + 936);
        if ((v15 & 0xC000000000000001) != 0)
        {
          id v16 = (id)MEMORY[0x1C877C220](0, *(void *)(v0 + 936));
          unint64_t v15 = *(void *)(v0 + 936);
        }
        else
        {
          id v16 = *(id *)(v15 + 32);
        }
        *(void *)(v0 + 952) = v16;
        *(void *)(v0 + 960) = 1;
        sub_1C3CACC78((uint64_t)v16, v15);
        *(void *)(v0 + 968) = v25;
        if ((v26 & 1) == 0)
        {
          os_log_type_t v27 = (void *)qword_1EA387190;
          *(void *)(v0 + 976) = qword_1EA387190;
          if ((v25 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else
          {
            uint64_t v28 = *(void *)(v0 + 752);
            if (v25 < *(void *)(v28 + 16))
            {
              uint64_t v29 = v28 + 16 * v25;
              uint64_t v30 = *(void *)(v29 + 32);
              uint64_t v31 = *(void *)(v29 + 40);
              *(void *)(v0 + 984) = v31;
              v27;
              swift_bridgeObjectRetain();
              uint64_t v32 = (void *)swift_task_alloc();
              *(void *)(v0 + 992) = v32;
              *uint64_t v32 = v0;
              v32[1] = sub_1C3CAB084;
              sub_1C3CA20A4((uint64_t)v16, 1, v30, v31);
              return;
            }
          }
          __break(1u);
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v33 + 32));
        sub_1C3CAD404((void *)(v33 + 16));
        os_unfair_lock_unlock((os_unfair_lock_t)(v33 + 32));
        if (v14) {
          return;
        }
        id v34 = *(void **)(v0 + 912);
        id v35 = *(void **)(v0 + 896);
        uint64_t v36 = *(void **)(v0 + 880);
        uint64_t v37 = *(void **)(v0 + 864);
        unint64_t v38 = *(void **)(v0 + 832);

        swift_release();
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(v0 + 824);
    v57[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_1C3CAD9D4(v57);
    if (v43)
    {
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      unint64_t v44 = v57[0];
      *(void **)(v0 + 1016) = v57[0];
      v57[0] = 0;
      v57[1] = (void *)0xE000000000000000;
      sub_1C3DB85B8();
      uint64_t v45 = v44[2];
      if (v45)
      {
        uint64_t v46 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
        uint64_t v47 = (uint64_t)v44
            + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        uint64_t v48 = *(void *)(v46 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1C3CC93A8(*(void *)(v0 + 808), v47, v57);
          v47 += v48;
          --v45;
        }
        while (v45);
        swift_release();
      }
      uint64_t v49 = *(void *)(v0 + 816);
      uint64_t v50 = *(void *)(v0 + 808);
      uint64_t v51 = *(void *)(v0 + 800);
      uint64_t v52 = *(void *)(v0 + 792);
      type metadata accessor for SummarizationManager();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v49, v50, v52);
      swift_bridgeObjectRelease();
      sub_1C3DB84E8();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v52);
      sub_1C3CAF9EC((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
      uint64_t v53 = sub_1C3DB9E68();
      uint64_t v55 = v54;
      *(void *)(v0 + 1024) = v54;
      uint64_t v56 = (void *)swift_task_alloc();
      *(void *)(v0 + 1032) = v56;
      void *v56 = v0;
      v56[1] = sub_1C3CAB770;
      static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(v0 + 448, v53, v55);
    }
  }
  else
  {
    uint64_t v17 = *(void **)(v0 + 896);
    uint64_t v18 = *(void **)(v0 + 880);

    uint64_t v19 = *(void *)(v0 + 824);
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C3DB9048();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA387178);
    uint64_t v21 = sub_1C3DB9028();
    os_log_type_t v22 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v23 = 0;
      _os_log_impl(&dword_1C3A61000, v21, v22, "failed to create composition for call transcription", v23, 2u);
      MEMORY[0x1C877E600](v23, -1, -1);
    }

    uint64_t v24 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 32));
    sub_1C3CAD404((void *)(v24 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 32));
    if (!v19)
    {

      swift_release();
LABEL_25:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v39 = *(void (**)(void))(v0 + 8);
      v39();
    }
  }
}

uint64_t sub_1C3CAB084(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[125] = a1;
  v3[126] = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v4 = (void *)v3[122];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v5 = sub_1C3CAC62C;
  }
  else
  {
    uint64_t v6 = (void *)v3[122];
    swift_bridgeObjectRelease();

    id v5 = sub_1C3CAB1D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

void sub_1C3CAB1D8()
{
  uint64_t v44 = v0;
  *(void *)(v0 + 552) = &type metadata for TelephonyUtilitiesFeature;
  *(void *)(v0 + 560) = sub_1C3C3747C();
  *(void *)(v0 + 528) = "transcriptionEvaluationEnabled";
  *(void *)(v0 + 536) = 30;
  *(unsigned char *)(v0 + 544) = 2;
  char v1 = sub_1C3DB8DA8();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 528);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 1000);
    uint64_t v3 = *(void *)(v0 + 752) + 16 * *(void *)(v0 + 968);
    os_log_type_t v4 = *(void **)(v3 + 32);
    unint64_t v5 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_1C3CB26B8(v2, v4, v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)(v0 + 960);
  uint64_t v7 = *(void **)(v0 + 952);
  uint64_t v8 = *(void *)(v0 + 944);
  sub_1C3D79344(*(void *)(v0 + 1000));

  if (v6 == v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v0 + 1008);
    v43[0] = *(void **)(v0 + 712);
    swift_bridgeObjectRetain_n();
    sub_1C3CAD9D4(v43);
    if (v9)
    {
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v14 = v43[0];
      *(void **)(v0 + 1016) = v43[0];
      v43[0] = 0;
      v43[1] = (void *)0xE000000000000000;
      sub_1C3DB85B8();
      uint64_t v15 = v14[2];
      if (v15)
      {
        uint64_t v16 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
        uint64_t v17 = (uint64_t)v14
            + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        uint64_t v18 = *(void *)(v16 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1C3CC93A8(*(void *)(v0 + 808), v17, v43);
          v17 += v18;
          --v15;
        }
        while (v15);
        swift_release();
      }
      uint64_t v19 = *(void *)(v0 + 816);
      uint64_t v20 = *(void *)(v0 + 808);
      uint64_t v21 = *(void *)(v0 + 800);
      uint64_t v22 = *(void *)(v0 + 792);
      type metadata accessor for SummarizationManager();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v19, v20, v22);
      swift_bridgeObjectRelease();
      sub_1C3DB84E8();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v22);
      sub_1C3CAF9EC((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
      uint64_t v23 = sub_1C3DB9E68();
      uint64_t v25 = v24;
      *(void *)(v0 + 1024) = v24;
      char v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 1032) = v26;
      *char v26 = v0;
      v26[1] = sub_1C3CAB770;
      static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(v0 + 448, v23, v25);
    }
    return;
  }
  uint64_t v10 = *(void *)(v0 + 1008);
  uint64_t v11 = *(void *)(v0 + 960);
  uint64_t v12 = *(void *)(v0 + 936);
  if ((v12 & 0xC000000000000001) != 0) {
    id v13 = (id)MEMORY[0x1C877C220](*(void *)(v0 + 960));
  }
  else {
    id v13 = *(id *)(v12 + 8 * v11 + 32);
  }
  os_log_type_t v27 = v13;
  *(void *)(v0 + 952) = v13;
  *(void *)(v0 + 960) = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  sub_1C3CACC78((uint64_t)v13, *(void *)(v0 + 936));
  *(void *)(v0 + 968) = v28;
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = (void *)qword_1EA387190;
    *(void *)(v0 + 976) = qword_1EA387190;
    if ((v28 & 0x8000000000000000) == 0)
    {
      uint64_t v31 = *(void *)(v0 + 752);
      if (v28 < *(void *)(v31 + 16))
      {
        uint64_t v32 = v31 + 16 * v28;
        uint64_t v33 = *(void *)(v32 + 32);
        uint64_t v34 = *(void *)(v32 + 40);
        *(void *)(v0 + 984) = v34;
        v30;
        swift_bridgeObjectRetain();
        id v35 = (void *)swift_task_alloc();
        *(void *)(v0 + 992) = v35;
        *id v35 = v0;
        v35[1] = sub_1C3CAB084;
        sub_1C3CA20A4((uint64_t)v27, 1, v33, v34);
        return;
      }
LABEL_29:
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 32));
  sub_1C3CAD404((void *)(v36 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 32));
  if (!v10)
  {
    uint64_t v37 = *(void **)(v0 + 912);
    unint64_t v38 = *(void **)(v0 + 896);
    os_log_type_t v39 = *(void **)(v0 + 880);
    id v40 = *(void **)(v0 + 864);
    id v41 = *(void **)(v0 + 832);

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(void (**)(void))(v0 + 8);
    v42();
  }
}

uint64_t sub_1C3CAB770()
{
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C3CAC92C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C3CAB8B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CAB8B8()
{
  uint64_t v1 = v0[127];
  uint64_t v2 = (void *)v0[96];
  uint64_t v3 = (void *)v0[95];
  sub_1C3CB3BF8((uint64_t)(v0 + 56), (uint64_t)(v0 + 46), &qword_1EA387230);
  uint64_t v4 = (void *)swift_allocObject();
  v0[131] = v4;
  v4[2] = v2;
  v4[3] = v3;
  v4[4] = v1;
  sub_1C3CB3BF8((uint64_t)(v0 + 46), (uint64_t)(v4 + 5), &qword_1EA387230);
  id v5 = v2;
  id v6 = v3;
  id v7 = v5;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1C3CAB9A0, 0, 0);
}

uint64_t sub_1C3CAB9A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 34;
  uint64_t v5 = v0[131];
  id v6 = (void *)v0[96];
  v1[2] = v2;
  v1[3] = sub_1C3CABB0C;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1C3CB3CB8;
  v8[3] = v5;
  v8[4] = v7;
  v1[38] = sub_1C3CB3CDC;
  v1[39] = v8;
  v1[34] = MEMORY[0x1E4F143A8];
  v1[35] = 1107296256;
  v1[36] = sub_1C3C9FDCC;
  v1[37] = &block_descriptor_74;
  uint64_t v9 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3CABB0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1056) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C3CABD78;
  }
  else
  {

    swift_release_n();
    uint64_t v3 = sub_1C3CABC40;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1C3CABC40()
{
  uint64_t v1 = v0[130];
  uint64_t v2 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 32));
  sub_1C3CAD404((void *)(v2 + 16));
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  }
  else
  {
    uint64_t v3 = (void *)v0[114];
    uint64_t v4 = (void *)v0[112];
    uint64_t v5 = (void *)v0[110];
    id v6 = (void *)v0[108];
    uint64_t v7 = (void *)v0[104];
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (void (*)(void))v0[1];
    v8();
  }
}

uint64_t sub_1C3CABD78()
{
  uint64_t v1 = *(void **)(v0 + 768);
  swift_willThrow();

  swift_release_n();
  uint64_t v2 = *(void **)(v0 + 1056);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 32));
  sub_1C3CAFD0C((void *)(v5 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 32));
  uint64_t v7 = *(void **)(v0 + 760);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (void *)qword_1EA387190;
  uint64_t v9 = (void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber_failedAttachments);
  swift_beginAccess();
  id v10 = v7;
  id v11 = v8;
  MEMORY[0x1C877B4F0]();
  if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C3DBA068();
  }
  sub_1C3DBA0C8();
  sub_1C3DBA038();
  swift_endAccess();

  id v12 = v2;
  id v13 = v2;
  uint64_t v14 = sub_1C3DB9028();
  os_log_type_t v15 = sub_1C3DBA6A8();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void **)(v0 + 912);
  uint64_t v18 = *(void **)(v0 + 896);
  uint64_t v19 = *(void **)(v0 + 864);
  uint64_t v20 = *(void **)(v0 + 832);
  if (v16)
  {
    os_log_type_t v27 = *(void **)(v0 + 880);
    char v29 = *(void **)(v0 + 832);
    uint64_t v30 = *(NSObject **)(v0 + 896);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    unint64_t v28 = v17;
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    id v23 = v2;
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 704) = v24;
    sub_1C3DBA9A8();
    *uint64_t v22 = v24;

    _os_log_impl(&dword_1C3A61000, v14, v15, "call transcription error: %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v22, -1, -1);
    MEMORY[0x1C877E600](v21, -1, -1);

    uint64_t v14 = v30;
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1C3CAC0E4()
{
  uint64_t v1 = (void *)v0[106];
  swift_willThrow();

  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C3A61000, v3, v4, "failed to get tracks from file", v5, 2u);
    MEMORY[0x1C877E600](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 32));
  sub_1C3CAD404((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 32));
  uint64_t v7 = (void *)v0[104];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C3CAC2A4()
{
  uint64_t v1 = (void *)v0[107];
  swift_willThrow();

  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387178);
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C3A61000, v3, v4, "failed to create composition for call transcription", v5, 2u);
    MEMORY[0x1C877E600](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 32));
  sub_1C3CAD404((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 32));
  uint64_t v7 = (void *)v0[104];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C3CAC464()
{
  uint64_t v1 = (void *)v0[109];
  uint64_t v2 = (void *)v0[108];
  swift_willThrow();

  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C3DB9048();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA387178);
  os_log_type_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C3A61000, v4, v5, "failed to create composition for call transcription", v6, 2u);
    MEMORY[0x1C877E600](v6, -1, -1);
  }

  uint64_t v7 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 32));
  sub_1C3CAD404((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 32));
  uint64_t v8 = (void *)v0[104];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CAC62C()
{
  uint64_t v1 = *(void **)(v0 + 1008);

  id v2 = v1;
  id v3 = v1;
  os_log_type_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 1008);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 720) = v10;
    sub_1C3DBA9A8();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C3A61000, v4, v5, "could not background transcribe call recording files %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 1008);
  }
  uint64_t v12 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 32));
  sub_1C3CAD404((void *)(v12 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 32));
  id v13 = *(void **)(v0 + 760);
  swift_release();
  uint64_t v14 = (void *)qword_1EA387190;
  os_log_type_t v15 = (void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber_failedAttachments);
  swift_beginAccess();
  id v16 = v13;
  id v25 = v14;
  MEMORY[0x1C877B4F0]();
  if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C3DBA068();
  }
  uint64_t v17 = *(void **)(v0 + 1008);
  uint64_t v18 = *(void **)(v0 + 912);
  uint64_t v19 = *(void **)(v0 + 896);
  uint64_t v20 = *(void **)(v0 + 880);
  uint64_t v21 = *(void **)(v0 + 864);
  uint64_t v22 = *(void **)(v0 + 832);
  sub_1C3DBA0C8();
  sub_1C3DBA038();
  swift_endAccess();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1C3CAC92C()
{
  uint64_t v1 = *(void **)(v0 + 1040);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void *)(v0 + 728);
  uint64_t v4 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 32));
  sub_1C3CAFD0C((void *)(v4 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 32));
  uint64_t v6 = *(void **)(v0 + 760);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (void *)qword_1EA387190;
  uint64_t v8 = (void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber_failedAttachments);
  swift_beginAccess();
  id v9 = v6;
  id v10 = v7;
  MEMORY[0x1C877B4F0]();
  if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C3DBA068();
  }
  sub_1C3DBA0C8();
  sub_1C3DBA038();
  swift_endAccess();

  id v11 = v1;
  id v12 = v1;
  id v13 = sub_1C3DB9028();
  os_log_type_t v14 = sub_1C3DBA6A8();
  BOOL v15 = os_log_type_enabled(v13, v14);
  id v16 = *(void **)(v0 + 912);
  uint64_t v17 = *(void **)(v0 + 896);
  uint64_t v18 = *(void **)(v0 + 864);
  uint64_t v19 = *(void **)(v0 + 832);
  if (v15)
  {
    uint64_t v26 = *(void **)(v0 + 880);
    unint64_t v28 = *(void **)(v0 + 832);
    char v29 = *(NSObject **)(v0 + 896);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v27 = v16;
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    id v22 = v1;
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 704) = v23;
    sub_1C3DBA9A8();
    *uint64_t v21 = v23;

    _os_log_impl(&dword_1C3A61000, v13, v14, "call transcription error: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v21, -1, -1);
    MEMORY[0x1C877E600](v20, -1, -1);

    id v13 = v29;
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

void sub_1C3CACC78(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1C877C220](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_1C3C4C8B4(0, &qword_1EA387260);
      char v6 = sub_1C3DBA8E8();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x1C877C220](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          id v9 = v8;
          char v10 = sub_1C3DBA8E8();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C3DBAFB8();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

void sub_1C3CACE14(void *a1, uint64_t a2, Swift::OpaquePointer a3, uint64_t a4)
{
  id v8 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  id v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    char v10 = v9;
    id v11 = objc_msgSend(v9, sel_subAttachments);
    if (v11)
    {
      id v12 = v11;
      id v41 = (void *)a4;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
      sub_1C3CAF500(&qword_1EA3860B8, (unint64_t *)&qword_1EA388CA0);
      uint64_t v13 = sub_1C3DBA438();

      os_log_type_t v14 = (ICAttachment *)sub_1C3D53ECC(v13);
      swift_bridgeObjectRelease();
      if (v14)
      {
        id v15 = objc_msgSend(v10, sel_audioModel);
        if (v15)
        {
          id v16 = v15;
          id v17 = objc_msgSend(v10, sel_identifier);
          if (v17)
          {
            uint64_t v18 = v17;
            id v19 = objc_msgSend(v16, sel_audioDocument);
            if (v19)
            {
              uint64_t v20 = v19;
              objc_msgSend(v19, sel_setIsCallRecording_, 1);

              objc_msgSend(v10, sel_setNeedsTranscription_, 0);
              uint64_t v21 = (void *)sub_1C3DB9BF8();
              objc_msgSend(v10, sel_updateChangeCountWithReason_, v21);

              id v22 = objc_msgSend(v10, sel_attachmentModel);
              objc_msgSend(v22, sel_setMergeableDataDirty_, 1);

              ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)(a3, v14, 0);
              if (v23)
              {
              }
              else
              {
                sub_1C3CB3BF8((uint64_t)v41, (uint64_t)&v40, &qword_1EA387230);
                if (v40.text._object)
                {
                  NotesShared::SummarizationResult v39 = v40;
                  ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summarizationResult:)(&v39);
                  if (v28)
                  {
                    id v41 = v18;
                    if (qword_1EA385868 != -1) {
                      swift_once();
                    }
                    uint64_t v29 = sub_1C3DB9048();
                    __swift_project_value_buffer(v29, (uint64_t)qword_1EA387178);
                    uint64_t v30 = sub_1C3DB9028();
                    os_log_type_t v31 = sub_1C3DBA6A8();
                    if (os_log_type_enabled(v30, v31))
                    {
                      uint64_t v32 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v32 = 0;
                      _os_log_impl(&dword_1C3A61000, v30, v31, "could not save topline call recording summary", v32, 2u);
                      MEMORY[0x1C877E600](v32, -1, -1);
                    }

                    uint64_t v18 = v41;
                  }
                }
                objc_msgSend(a1, sel_ic_save);
                if (qword_1EA385868 != -1) {
                  swift_once();
                }
                uint64_t v33 = sub_1C3DB9048();
                __swift_project_value_buffer(v33, (uint64_t)qword_1EA387178);
                uint64_t v34 = sub_1C3DB9028();
                os_log_type_t v35 = sub_1C3DBA698();
                if (os_log_type_enabled(v34, v35))
                {
                  uint64_t v36 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v36 = 0;
                  _os_log_impl(&dword_1C3A61000, v34, v35, "successfully saved transcript in background", v36, 2u);
                  MEMORY[0x1C877E600](v36, -1, -1);
                }

                id v37 = objc_msgSend(self, sel_defaultCenter);
                unint64_t v38 = (void *)sub_1C3DB9BF8();
                objc_msgSend(v37, sel_postNotificationName_object_userInfo_, v38, v18, 0);
              }
LABEL_18:

              return;
            }

            __break(1u);
            goto LABEL_33;
          }
        }
      }
    }
  }

  if (qword_1EA385870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = *(void *)(qword_1EA387190 + OBJC_IVAR___ICBackgroundTranscriber__currentlyTranscribingAttachment);
  os_log_type_t v14 = (ICAttachment *)(v24 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v24 + 32));
  sub_1C3CAD404((void *)(v24 + 16));
  if (!v4)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 32));
    swift_release();
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C3DB9048();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EA387178);
    id v8 = sub_1C3DB9028();
    os_log_type_t v26 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v8, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v27 = 0;
      _os_log_impl(&dword_1C3A61000, v8, v26, "did not get subattachment info for call transcription task", v27, 2u);
      MEMORY[0x1C877E600](v27, -1, -1);
    }
    goto LABEL_18;
  }
LABEL_33:
  os_unfair_lock_unlock((os_unfair_lock_t)v14);
  __break(1u);
}

uint64_t sub_1C3CAD404(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

void sub_1C3CAD43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = 0;

  swift_beginAccess();
  char v6 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = 0;
}

__n128 sub_1C3CAD4B4@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C3CAD4C0(void *a1)
{
  uint64_t v5 = *(void **)v1;
  uint64_t v4 = *(void **)(v1 + 8);
  uint64_t v7 = *(void **)(v1 + 16);
  char v6 = *(void **)(v1 + 24);
  id v8 = (opaqueCMSampleBuffer *)objc_msgSend(v6, sel_copyNextSampleBuffer);
  if (v8)
  {
    id v9 = v8;
    id v10 = v5;
    id v11 = v4;
    id v12 = v7;
    id v13 = v6;
    id v14 = sub_1C3CAEED8(v9, v11);
  }
  else
  {
    id v14 = 0;
  }
  *a1 = v14;
  id v15 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1C3C66450(v15);
}

uint64_t sub_1C3CAD5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  id v8 = (uint64_t (*)(uint64_t))((char *)&dword_1EA3872B8 + dword_1EA3872B8);
  char v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *char v6 = v4;
  v6[1] = sub_1C3CAD684;
  return v8(a2);
}

uint64_t sub_1C3CAD684(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1) {
    **(void **)(v4 + 24) = v1;
  }
  else {
    **(void **)(v4 + 16) = a1;
  }
  char v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1C3CAD7AC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1C3CAD800(uint64_t a1, int *a2)
{
  char v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C3CAD8DC;
  return v6(a1);
}

uint64_t sub_1C3CAD8DC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3CAD9D4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C3D70F88(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1C3CADA7C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1C3CADA7C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v137 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v132 = *(void *)(v137 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v137);
  uint64_t v129 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v138 = (uint64_t)&v123 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v135 = (uint64_t)&v123 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v134 = (uint64_t)&v123 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_1C3DBB228();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_138;
    }
    if (v11) {
      return sub_1C3CAE438(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_146;
  }
  uint64_t v125 = result;
  if (v11 < 2)
  {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    uint64_t v124 = MEMORY[0x1E4FBC860];
    if (v11 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      if (v19 >= 2)
      {
        uint64_t v116 = *a1;
        do
        {
          unint64_t v117 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_133;
          }
          if (!v116) {
            goto LABEL_145;
          }
          uint64_t v118 = v17;
          uint64_t v119 = *(void *)&v17[16 * v117 + 32];
          uint64_t v120 = *(void *)&v17[16 * v19 + 24];
          sub_1C3CAE694(v116 + *(void *)(v132 + 72) * v119, v116 + *(void *)(v132 + 72) * *(void *)&v17[16 * v19 + 16], v116 + *(void *)(v132 + 72) * v120, v131);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v118 = sub_1C3D70EE8((uint64_t)v17);
          }
          if (v117 >= *((void *)v118 + 2)) {
            goto LABEL_135;
          }
          uint64_t v121 = &v118[16 * v117 + 32];
          *(void *)uint64_t v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v118 + 2);
          if (v19 > v122) {
            goto LABEL_136;
          }
          memmove(&v118[16 * v19 + 16], &v118[16 * v19 + 32], 16 * (v122 - v19));
          *((void *)v118 + 2) = v122 - 1;
          unint64_t v19 = v122 - 1;
          uint64_t v17 = v118;
        }
        while (v122 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v124 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1C3DBA0A8();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v124 = v15;
    unint64_t v131 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  v136 = a1;
  while (1)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v18 + 1;
    if (v18 + 1 >= v11)
    {
      uint64_t v31 = v18 + 1;
    }
    else
    {
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v132 + 72);
      uint64_t v24 = *a1 + v23 * v21;
      uint64_t v130 = v18;
      uint64_t v25 = v134;
      sub_1C3C96704(v24, v134);
      uint64_t v26 = v135;
      sub_1C3C96704(v22 + v23 * v130, v135);
      uint64_t v27 = *(int *)(v137 + 24);
      double v28 = *(double *)(v25 + v27);
      double v29 = *(double *)(v26 + v27);
      sub_1C3C96768(v26);
      uint64_t v30 = v25;
      uint64_t v20 = v130;
      sub_1C3C96768(v30);
      uint64_t v31 = v20 + 2;
      uint64_t v133 = v22;
      uint64_t v139 = v23;
      if (v20 + 2 < v11)
      {
        uint64_t v128 = v2;
        char v126 = v17;
        uint64_t v32 = v23 * v21;
        uint64_t v33 = v22;
        uint64_t v34 = v20 + 2;
        uint64_t v35 = v23 * (v20 + 2);
        while (1)
        {
          uint64_t v36 = v11;
          uint64_t v37 = v134;
          sub_1C3C96704(v33 + v35, v134);
          uint64_t v38 = v135;
          sub_1C3C96704(v33 + v32, v135);
          BOOL v39 = *(double *)(v37 + *(int *)(v137 + 24)) >= *(double *)(v38 + *(int *)(v137 + 24));
          sub_1C3C96768(v38);
          sub_1C3C96768(v37);
          if (v28 < v29 == v39) {
            break;
          }
          v33 += v139;
          ++v34;
          uint64_t v11 = v36;
          if (v36 == v34)
          {
            uint64_t v31 = v36;
            a1 = v136;
            uint64_t v17 = v126;
            uint64_t v20 = v130;
            goto LABEL_23;
          }
        }
        a1 = v136;
        uint64_t v17 = v126;
        uint64_t v31 = v34;
        uint64_t v20 = v130;
        uint64_t v11 = v36;
LABEL_23:
        uint64_t v2 = v128;
      }
      if (v28 < v29)
      {
        if (v31 < v20) {
          goto LABEL_139;
        }
        if (v20 < v31)
        {
          char v126 = v17;
          uint64_t v127 = v11;
          uint64_t v40 = 0;
          uint64_t v41 = v139;
          uint64_t v42 = v139 * (v31 - 1);
          uint64_t v43 = v31 * v139;
          uint64_t v44 = v20;
          uint64_t v45 = v20 * v139;
          do
          {
            if (v44 != v31 + v40 - 1)
            {
              uint64_t v128 = v2;
              uint64_t v46 = v133;
              if (!v133) {
                goto LABEL_144;
              }
              unint64_t v47 = v133 + v45;
              sub_1C3C57C4C(v133 + v45, v129);
              if (v45 < v42 || v47 >= v46 + v43)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v45 != v42)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1C3C57C4C(v129, v46 + v42);
              a1 = v136;
              uint64_t v2 = v128;
              uint64_t v41 = v139;
            }
            ++v44;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v45 += v41;
          }
          while (v44 < v31 + v40);
          uint64_t v17 = v126;
          uint64_t v11 = v127;
          uint64_t v20 = v130;
        }
      }
    }
    if (v31 < v11)
    {
      if (__OFSUB__(v31, v20)) {
        goto LABEL_137;
      }
      if (v31 - v20 < v125) {
        break;
      }
    }
LABEL_56:
    if (v31 < v20) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_1C3D70A34(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v65 = *((void *)v17 + 2);
    unint64_t v64 = *((void *)v17 + 3);
    unint64_t v19 = v65 + 1;
    if (v65 >= v64 >> 1) {
      uint64_t v17 = sub_1C3D70A34((char *)(v64 > 1), v65 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19;
    unint64_t v66 = v17 + 32;
    uint64_t v67 = &v17[16 * v65 + 32];
    uint64_t v68 = v139;
    *(void *)uint64_t v67 = v20;
    *((void *)v67 + 1) = v68;
    if (v65)
    {
      while (1)
      {
        unint64_t v69 = v19 - 1;
        if (v19 >= 4)
        {
          uint64_t v74 = &v66[16 * v19];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_121;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_122;
          }
          unint64_t v81 = v19 - 2;
          uint64_t v82 = &v66[16 * v19 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_124;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_127;
          }
          if (v86 >= v77)
          {
            uint64_t v104 = &v66[16 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_131;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v98 = *((void *)v17 + 4);
            uint64_t v99 = *((void *)v17 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_87;
          }
          uint64_t v71 = *((void *)v17 + 4);
          uint64_t v70 = *((void *)v17 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_123;
        }
        unint64_t v81 = v19 - 2;
        id v87 = &v66[16 * v19 - 32];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_126;
        }
        uint64_t v93 = &v66[16 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_129;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_130;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_93:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v92) {
          goto LABEL_125;
        }
        uint64_t v100 = &v66[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_128;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v109 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v110 = v17;
        uint64_t v111 = &v66[16 * v108];
        uint64_t v112 = *(void *)v111;
        uint64_t v113 = &v66[16 * v69];
        uint64_t v114 = *((void *)v113 + 1);
        sub_1C3CAE694(v109 + *(void *)(v132 + 72) * *(void *)v111, v109 + *(void *)(v132 + 72) * *(void *)v113, v109 + *(void *)(v132 + 72) * v114, v131);
        if (v2) {
          goto LABEL_115;
        }
        if (v114 < v112) {
          goto LABEL_118;
        }
        if (v69 > *((void *)v110 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v111 = v112;
        *(void *)&v66[16 * v108 + 8] = v114;
        unint64_t v115 = *((void *)v110 + 2);
        if (v69 >= v115) {
          goto LABEL_120;
        }
        uint64_t v17 = v110;
        unint64_t v19 = v115 - 1;
        memmove(&v66[16 * v69], v113 + 16, 16 * (v115 - 1 - v69));
        *((void *)v110 + 2) = v115 - 1;
        a1 = v136;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_14:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v20, v125)) {
    goto LABEL_140;
  }
  if (v20 + v125 >= v11) {
    uint64_t v48 = v11;
  }
  else {
    uint64_t v48 = v20 + v125;
  }
  if (v48 >= v20)
  {
    if (v31 != v48)
    {
      uint64_t v130 = v20;
      char v126 = v17;
      uint64_t v127 = v48;
      uint64_t v128 = v2;
      uint64_t v49 = *(void *)(v132 + 72);
      uint64_t v139 = v49 * (v31 - 1);
      uint64_t v133 = v49;
      uint64_t v50 = v31 * v49;
      do
      {
        uint64_t v51 = 0;
        uint64_t v52 = v130;
        while (1)
        {
          uint64_t v53 = v31;
          uint64_t v54 = *a1;
          uint64_t v55 = v134;
          sub_1C3C96704(v50 + v51 + *a1, v134);
          uint64_t v56 = v139 + v51 + v54;
          uint64_t v57 = v135;
          sub_1C3C96704(v56, v135);
          uint64_t v58 = *(int *)(v137 + 24);
          double v59 = *(double *)(v55 + v58);
          double v60 = *(double *)(v57 + v58);
          sub_1C3C96768(v57);
          sub_1C3C96768(v55);
          if (v59 >= v60) {
            break;
          }
          uint64_t v61 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v62 = v61 + v139 + v51;
          sub_1C3C57C4C(v61 + v50 + v51, v138);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C3C57C4C(v138, v62);
          v51 -= v133;
          ++v52;
          uint64_t v31 = v53;
          a1 = v136;
          if (v53 == v52) {
            goto LABEL_49;
          }
        }
        uint64_t v31 = v53;
LABEL_49:
        ++v31;
        v139 += v133;
        v50 += v133;
      }
      while (v31 != v127);
      uint64_t v31 = v127;
      uint64_t v2 = v128;
      uint64_t v17 = v126;
      uint64_t v20 = v130;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C3DBAF48();
  __break(1u);
  return result;
}

uint64_t sub_1C3CAE438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t v30 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v7 = MEMORY[0x1F4188790](v30);
  uint64_t v31 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v29 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v33 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v32 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v27;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_1C3C96704(v32 + v17 + *a4, (uint64_t)v15);
      sub_1C3C96704(v33 + v17 + v19, (uint64_t)v11);
      uint64_t v20 = *(int *)(v30 + 24);
      double v21 = *(double *)&v15[v20];
      double v22 = *(double *)&v11[v20];
      sub_1C3C96768((uint64_t)v11);
      uint64_t result = sub_1C3C96768((uint64_t)v15);
      if (v21 >= v22)
      {
LABEL_4:
        v33 += v28;
        v32 += v28;
        if (++v29 == v26) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v33 + v17;
      sub_1C3C57C4C(v23 + v32 + v17, v31);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C3C57C4C(v31, v24);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3CAE694(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  unint64_t v16 = a1;
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_70;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_71;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v15;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v19 = v17 / v15;
  if (v18 >= v17 / v15)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      unint64_t v44 = a1;
      uint64_t v21 = v19 * v15;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v21;
      unint64_t v45 = a4 + v21;
      unint64_t v47 = a2;
      if (v21 >= 1 && v44 < a2)
      {
        uint64_t v34 = -v15;
        do
        {
          unint64_t v35 = a3 + v34;
          sub_1C3C96704(v32 + v34, (uint64_t)v13);
          unint64_t v36 = a2 + v34;
          sub_1C3C96704(a2 + v34, (uint64_t)v11);
          uint64_t v37 = *(int *)(v8 + 24);
          double v38 = *(double *)&v13[v37];
          double v39 = *(double *)&v11[v37];
          sub_1C3C96768((uint64_t)v11);
          sub_1C3C96768((uint64_t)v13);
          if (v38 >= v39)
          {
            unint64_t v40 = v45;
            v45 += v34;
            if (a3 < v40 || v35 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v40)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v36 = a2;
          }
          else
          {
            if (a3 < a2 || v35 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v47 += v34;
          }
          unint64_t v32 = v45;
          if (v45 <= a4) {
            break;
          }
          a2 = v36;
          a3 += v34;
        }
        while (v36 > v44);
      }
      goto LABEL_68;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v18 * v15;
    if (a4 < v16 || v16 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v16)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v22 = a4 + v20;
    unint64_t v45 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      do
      {
        sub_1C3C96704(a2, (uint64_t)v13);
        sub_1C3C96704(a4, (uint64_t)v11);
        uint64_t v24 = *(int *)(v8 + 24);
        double v25 = *(double *)&v13[v24];
        double v26 = *(double *)&v11[v24];
        sub_1C3C96768((uint64_t)v11);
        sub_1C3C96768((uint64_t)v13);
        unint64_t v27 = v47;
        if (v25 >= v26)
        {
          unint64_t v30 = v46 + v15;
          if (v47 < v46 || v47 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v30;
          unint64_t v28 = a2;
        }
        else
        {
          unint64_t v28 = a2 + v15;
          if (v47 < a2 || v47 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v27 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v47 = v27 + v15;
        a4 = v46;
        if (v46 >= v22) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_68:
    sub_1C3D70CD0(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

void sub_1C3CAEAFC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v9 = sub_1C3DB88F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_sharedContext);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v13, sel_workerManagedObjectContext);

    if (v15)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v25 = a5;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v15;
      *(void *)(v18 + 24) = a2;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
      *(void *)(v18 + v17) = a3;
      uint64_t v19 = (void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v20 = v25;
      *uint64_t v19 = v26;
      v19[1] = v20;
      aBlock[4] = sub_1C3CB4018;
      void aBlock[5] = v18;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      id aBlock[2] = sub_1C3C9FDCC;
      aBlock[3] = &block_descriptor_114;
      uint64_t v21 = _Block_copy(aBlock);
      id v22 = v15;
      id v23 = a2;
      id v24 = a3;
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_performBlock_, v21);
      _Block_release(v21);
    }
  }
}

void sub_1C3CAED48(uint64_t a1, uint64_t a2)
{
  sub_1C3CA1220(a1, a2, v2, "Added retranscription task to queue");
}

uint64_t sub_1C3CAED6C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C3CAEDBC()
{
  sub_1C3CA7168(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void *, void *))(v0 + 40));
}

uint64_t sub_1C3CAEDCC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3CAEE0C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C3C4DAF4;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C3CA10DC, 0, 0);
}

void sub_1C3CAEEB4(uint64_t a1, uint64_t a2)
{
  sub_1C3CA1220(a1, a2, v2, "Added call transcription task to queue");
}

id sub_1C3CAEED8(opaqueCMSampleBuffer *a1, void *a2)
{
  bufferListSizeNeededOut[1] = *MEMORY[0x1E4F143B8];
  if (CMSampleBufferGetNumSamples(a1) < 1) {
    return 0;
  }
  bufferListSizeNeededOut[0] = 0;
  OSStatus AudioBufferListWithRetainedBlockBuffer = CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(a1, bufferListSizeNeededOut, 0, 0, 0, 0, 0, 0);
  if (AudioBufferListWithRetainedBlockBuffer != sub_1C3DB9178()) {
    return 0;
  }
  uint64_t v5 = swift_allocObject();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_initWithLength_, bufferListSizeNeededOut[0]);
  *(void *)(v5 + 16) = v6;
  if (!v6)
  {
LABEL_8:
    swift_release();
    return 0;
  }
  uint64_t v7 = (AudioBufferList *)objc_msgSend(v6, sel_mutableBytes);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  OSStatus v9 = CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(a1, 0, v7, bufferListSizeNeededOut[0], (CFAllocatorRef)*MEMORY[0x1E4F1CF80], (CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, (CMBlockBufferRef *)(v8 + 16));
  if (v9 != sub_1C3DB9178())
  {
    swift_release();
    goto LABEL_8;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v8;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F153B0]);
  void v16[4] = sub_1C3CB4664;
  v16[5] = v10;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1C3CAD7AC;
  v16[3] = &block_descriptor_144;
  uint64_t v12 = _Block_copy(v16);
  id v13 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v11, sel_initWithPCMFormat_bufferListNoCopy_deallocator_, v13, v7, v12);

  _Block_release(v12);
  swift_release();
  swift_release();
  return v14;
}

void sub_1C3CAF14C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)&v4[OBJC_IVAR___ICBackgroundTranscriber_workerContext];
  if (v5)
  {
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = v5;
    v10[3] = a2;
    v10[4] = a1;
    v10[5] = v4;
    v10[6] = a3;
    v10[7] = a4;
    aBlock[4] = sub_1C3CAFA8C;
    void aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_1C3C9FDCC;
    aBlock[3] = &block_descriptor_54;
    id v11 = _Block_copy(aBlock);
    id v12 = v5;
    id v13 = a2;
    swift_bridgeObjectRetain();
    id v14 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_performBlock_, v11);
    _Block_release(v11);
  }
  else
  {
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C3DB9048();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EA387178);
    oslog = sub_1C3DB9028();
    os_log_type_t v16 = sub_1C3DBA6A8();
    if (os_log_type_enabled(oslog, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v17 = 0;
      _os_log_impl(&dword_1C3A61000, oslog, v16, "no worker context found for background transcription", v17, 2u);
      MEMORY[0x1C877E600](v17, -1, -1);
    }
  }
}

uint64_t sub_1C3CAF35C()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

void sub_1C3CAF39C()
{
  sub_1C3CA1384(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t type metadata accessor for BackgroundTranscriber()
{
  return self;
}

uint64_t method lookup function for BackgroundTranscriber(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BackgroundTranscriber);
}

uint64_t dispatch thunk of BackgroundTranscriber.currentlyTranscribingAttachment.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BackgroundTranscriber.downloadingModel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BackgroundTranscriber.addFirstTimeTranscriptionTaskToQueue(mediaURL:attachmentIdentifier:subattachmentIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BackgroundTranscriber.addRetranscriptionTaskToQueue(subattachmentAndMediaInfo:attachmentIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of BackgroundTranscriber.addCallRecordingTranscriptionTaskToQueue(speakers:NGASR:attachmentIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t sub_1C3CAF500(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3C4C8B4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CAF550()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C3CAF5A0()
{
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1C3C4DAF4;
  *(void *)(v3 + 72) = v2;
  *(_OWORD *)(v3 + 56) = v5;
  *(_OWORD *)(v3 + 40) = v6;
  return MEMORY[0x1F4188298](sub_1C3CA1A14, 0, 0);
}

uint64_t sub_1C3CAF668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DBA278();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  OSStatus v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if (a1 == 1)
  {
    sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FBAE0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_1C3DBA268();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_1C3DBA168();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1EA3871F8;
  *(void *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    id v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C3CAF8B4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3CAF8F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C3C3259C;
  return sub_1C3CA1E10(a1, v4, v5, v7, v6);
}

uint64_t sub_1C3CAF9B4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CAF9EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CAFA34()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C3CAFA8C()
{
  sub_1C3CA92E8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void (**)(void *, uint64_t))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1C3CAFA9C()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v8 + 8, v5);
}

uint64_t sub_1C3CAFBBC()
{
  uint64_t v2 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = *(void *)(v0 + v4);
  uint64_t v11 = *(void *)(v0 + v5);
  uint64_t v12 = *(void *)(v0 + v6);
  uint64_t v13 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *id v14 = v1;
  v14[1] = sub_1C3C4DAF4;
  return sub_1C3CA9890(v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C3CAFD0C(void *a1)
{
  return sub_1C3CB4300(a1);
}

uint64_t sub_1C3CAFD24(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x1F4188298](sub_1C3CAFDB4, 0, 0);
}

uint64_t sub_1C3CAFDB4()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[17];
  id v3 = objc_allocWithZone(MEMORY[0x1E4F16378]);
  v0[10] = 0;
  id v4 = v1;
  id v5 = v2;
  id v6 = objc_msgSend(v3, sel_initWithAsset_error_, v4, v0 + 10);
  v0[18] = v6;
  uint64_t v7 = (void *)v0[10];
  if (v6)
  {
    uint64_t v8 = (void *)v0[16];
    uint64_t v9 = *MEMORY[0x1E4F15BA8];
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1C3CAFFC4;
    uint64_t v10 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1C3D54090;
    v0[13] = &block_descriptor_84;
    v0[14] = v10;
    id v11 = v7;
    objc_msgSend(v8, sel_loadTracksWithMediaType_completionHandler_, v9, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    uint64_t v13 = (void *)v0[16];
    uint64_t v12 = (void *)v0[17];
    id v14 = v7;
    sub_1C3DB8798();

    swift_willThrow();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_1C3CAFFC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3CB02EC;
  }
  else {
    uint64_t v2 = sub_1C3CB0100;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CB0100()
{
  uint64_t v1 = *(void **)(v0 + 144);
  id v2 = objc_msgSend(*(id *)(v0 + 136), sel_settings);
  sub_1C3DB9A98();

  id v3 = objc_allocWithZone(MEMORY[0x1E4F16380]);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3870B8);
  uint64_t v4 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithAudioTracks_audioSettings_, v4, v5);

  objc_msgSend(v6, sel_setAlwaysCopiesSampleData_, 0);
  if (objc_msgSend(v1, sel_canAddOutput_, v6))
  {
    uint64_t v7 = *(void **)(v0 + 144);
    objc_msgSend(v7, sel_addOutput_, v6);
    objc_msgSend(v7, sel_startReading);
  }
  uint64_t v8 = *(void **)(v0 + 136);

  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, id))(v0 + 8);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 128);
  return v9(v12, v10, v11, v6);
}

uint64_t sub_1C3CB02EC()
{
  uint64_t v1 = (void *)v0[18];
  id v3 = (void *)v0[16];
  id v2 = (void *)v0[17];
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3CB03A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 48) = a4;
  *(unsigned char *)(v4 + 400) = a2;
  *(void *)(v4 + 32) = a1;
  uint64_t v5 = sub_1C3DB9308();
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = *(void *)(v5 - 8);
  *(void *)(v4 + 72) = swift_task_alloc();
  *(void *)(v4 + 80) = swift_task_alloc();
  uint64_t v6 = sub_1C3DB9288();
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = *(void *)(v6 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386440);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386448);
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386450);
  *(void *)(v4 + 144) = v7;
  *(void *)(v4 + 152) = *(void *)(v7 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F0);
  *(void *)(v4 + 168) = swift_task_alloc();
  uint64_t v8 = sub_1C3DB88F8();
  *(void *)(v4 + 176) = v8;
  *(void *)(v4 + 184) = *(void *)(v8 - 8);
  *(void *)(v4 + 192) = swift_task_alloc();
  sub_1C3DB9218();
  *(void *)(v4 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F8);
  *(void *)(v4 + 208) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386400);
  *(void *)(v4 + 216) = swift_task_alloc();
  uint64_t v9 = sub_1C3DB8C48();
  *(void *)(v4 + 224) = v9;
  *(void *)(v4 + 232) = *(void *)(v9 - 8);
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  uint64_t v10 = sub_1C3DB9378();
  *(void *)(v4 + 256) = v10;
  *(void *)(v4 + 264) = *(void *)(v10 - 8);
  *(void *)(v4 + 272) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CB078C, 0, 0);
}

uint64_t sub_1C3CB078C()
{
  uint64_t v1 = (unsigned int *)MEMORY[0x1E4F3C248];
  if (!*(unsigned char *)(v0 + 400)) {
    uint64_t v1 = (unsigned int *)MEMORY[0x1E4F3C220];
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 264) + 104))(*(void *)(v0 + 272), *v1, *(void *)(v0 + 256));
  if (ICInternalSettingsDisableGASRAvailabilityCheck()) {
    sub_1C3DB8BA8();
  }
  else {
    sub_1C3DB8BF8();
  }
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v34 = *(void *)(v0 + 184);
  uint64_t v36 = *(void *)(v0 + 176);
  uint64_t v37 = *(void *)(v0 + 192);
  uint64_t v38 = *(void *)(v0 + 168);
  uint64_t v35 = *(void *)(v0 + 32);
  (*(void (**)(void))(*(void *)(v0 + 232) + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v2, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  uint64_t v7 = sub_1C3DB9228();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386408);
  uint64_t v8 = sub_1C3DB9238();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E4F3BFD8], v8);
  sub_1C3C5B1EC(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386410);
  uint64_t v12 = sub_1C3DB9368();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x1E4F3C1A8], v12);
  sub_1C3C5B504(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386418);
  uint64_t v16 = sub_1C3DB9298();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C3DD5140;
  unint64_t v21 = v20 + v19;
  id v22 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v22(v21, *MEMORY[0x1E4F3C028], v16);
  v22(v21 + v18, *MEMORY[0x1E4F3C030], v16);
  v22(v21 + 2 * v18, *MEMORY[0x1E4F3C048], v16);
  sub_1C3D44540(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C3DB92C8();
  swift_allocObject();
  uint64_t v23 = sub_1C3DB92B8();
  *(void *)(v0 + 280) = v23;
  sub_1C3DB91F8();
  swift_retain();
  sub_1C3DB9208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v37, v35, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386420);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C3DD3D30;
  uint64_t v25 = sub_1C3CAF9EC(&qword_1EA386428, MEMORY[0x1E4F3C0B0]);
  *(void *)(v24 + 32) = v23;
  *(void *)(v24 + 40) = v25;
  uint64_t v26 = sub_1C3DB9328();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v38, 1, 1, v26);
  id v27 = objc_allocWithZone((Class)sub_1C3DB9318());
  swift_retain();
  id v28 = objc_msgSend(v27, sel_init);
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1C3CB0DC8;
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 200);
  uint64_t v32 = *(void *)(v0 + 168);
  return MEMORY[0x1F40F7668](v31, v30, v24, v32, 0, v28, 0, 0);
}

uint64_t sub_1C3CB0DC8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 296) = a1;
  *(void *)(v3 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    return MEMORY[0x1F4188298](sub_1C3CB20B0, 0, 0);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(char))((char *)&dword_1EA388340 + dword_1EA388340);
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v3 + 312) = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1C3CB0F70;
    char v5 = *(unsigned char *)(v3 + 400);
    return v7(v5);
  }
}

uint64_t sub_1C3CB0F70(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 320) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_release();
    return MEMORY[0x1F4188298](sub_1C3CB11A4, 0, 0);
  }
  else if (a1)
  {
    uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_1EA388350 + dword_1EA388350);
    char v5 = (void *)swift_task_alloc();
    *(void *)(v4 + 328) = v5;
    *char v5 = v4;
    v5[1] = sub_1C3CB1320;
    char v6 = *(unsigned char *)(v4 + 400);
    return v9(v6, (uint64_t)sub_1C3CA4E08, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v4 + 344) = v7;
    *uint64_t v7 = v4;
    v7[1] = sub_1C3CB16E4;
    return MEMORY[0x1F40F7658]();
  }
}

uint64_t sub_1C3CB11A4()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C3CB1320()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_release();
    return MEMORY[0x1F4188298](sub_1C3CB14A4, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 344) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1C3CB16E4;
    return MEMORY[0x1F40F7658]();
  }
}

uint64_t sub_1C3CB14A4()
{
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C3DB9048();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EA387178);
  uint64_t v2 = sub_1C3DB9028();
  os_log_type_t v3 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C3A61000, v2, v3, "could not download ASR model so ending background transcription", v4, 2u);
    MEMORY[0x1C877E600](v4, -1, -1);
  }
  uint64_t v12 = v0[34];
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[31];
  uint64_t v9 = v0[28];
  uint64_t v8 = v0[29];

  swift_willThrow();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C3CB16E4()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_release();
    uint64_t v2 = sub_1C3CB2220;
  }
  else
  {
    uint64_t v2 = sub_1C3CB180C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CB180C()
{
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  sub_1C3DB92A8();
  swift_release();
  *(void *)(v0 + 360) = swift_getOpaqueTypeConformance2();
  sub_1C3DBA378();
  uint64_t v1 = (_DWORD *)MEMORY[0x1E4F3C0B8];
  *(_DWORD *)(v0 + 392) = *MEMORY[0x1E4F3C0D0];
  *(_DWORD *)(v0 + 396) = *v1;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_1C3CB1970;
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  return MEMORY[0x1F4187C80](v5, 0, 0, v0 + 24, v4, AssociatedConformanceWitness);
}

uint64_t sub_1C3CB1970()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v1 = sub_1C3CB239C;
  }
  else
  {
    uint64_t v1 = sub_1C3CB1A94;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3CB1A94()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CB1DF0;
    return MEMORY[0x1F40F7658]();
  }
  uint64_t v5 = *(unsigned int *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 112);
  uint64_t v29 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v28, v1, v2);
  sub_1C3DB9248();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v26(v6, v5, v8);
  char v10 = sub_1C3DB92F8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11(v6, v8);
  id v27 = v11;
  v11(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v29, v28, v2);
  if (v10)
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 96) + 8);
    v12(*(void *)(v0 + 104), *(void *)(v0 + 88));
LABEL_8:
    uint64_t v20 = _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporary11speakerName17overlapMitigationSayACG6Speech11TranscriberC18MultisegmentResultV_SbSSSgSbtFZ_0(*(void *)(v0 + 112), 0, *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 400));
    sub_1C3D79344(v20);
    goto LABEL_9;
  }
  uint64_t v13 = *(unsigned int *)(v0 + 396);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 72);
  uint64_t v19 = *(void *)(v0 + 56);
  sub_1C3DB9248();
  v26(v18, v13, v19);
  LOBYTE(v13) = sub_1C3DB92F8();
  v27(v18, v19);
  v27(v16, v19);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v12(v14, v17);
  if (v13) {
    goto LABEL_8;
  }
LABEL_9:
  v12(*(void *)(v0 + 112), *(void *)(v0 + 88));
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  id v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v22;
  *id v22 = v0;
  v22[1] = sub_1C3CB1970;
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 120);
  return MEMORY[0x1F4187C80](v24, 0, 0, v0 + 24, v23, AssociatedConformanceWitness);
}

uint64_t sub_1C3CB1DF0()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C3CB253C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C3CB1F20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CB1F20()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v7);
}

uint64_t sub_1C3CB20B0()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C3CB2220()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C3CB239C()
{
  uint64_t v11 = v0[34];
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[18];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C3CB253C()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1C3CB26B8(void *a1, void *a2, unint64_t a3)
{
  unint64_t v93 = a3;
  char v92 = a2;
  uint64_t v4 = sub_1C3DB9C78();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB87D8();
  uint64_t v9 = *(uint8_t **)(v8 - 8);
  uint64_t v106 = v8;
  uint64_t v107 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v104 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C3DB88F8();
  uint64_t v105 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v101 = (char *)&v88 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v103 = (char *)&v88 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v108 = (uint64_t)&v88 - v19;
  uint64_t v110 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v20 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  id v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C3DB9048();
  uint64_t v102 = __swift_project_value_buffer(v23, (uint64_t)qword_1EA387178);
  uint64_t v24 = sub_1C3DB9028();
  os_log_type_t v25 = sub_1C3DBA688();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v94 = v14;
  if (v26)
  {
    id v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v27 = 0;
    _os_log_impl(&dword_1C3A61000, v24, v25, "Writing call transcript to disk for evaluation", v27, 2u);
    MEMORY[0x1C877E600](v27, -1, -1);
  }

  uint64_t v112 = a1;
  swift_bridgeObjectRetain();
  sub_1C3CAD9D4(&v112);
  uint64_t v28 = v112;
  uint64_t v99 = 0;
  uint64_t v109 = v11;
  uint64_t v95 = v7;
  uint64_t v96 = v5;
  uint64_t v97 = v4;
  int64_t v29 = v112[2];
  if (v29)
  {
    uint64_t v112 = (void *)MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v29, 0);
    uint64_t v30 = *(unsigned __int8 *)(v20 + 80);
    unint64_t v100 = (unint64_t)v28;
    uint64_t v31 = (uint64_t)v28 + ((v30 + 32) & ~v30);
    uint64_t v32 = *(void *)(v20 + 72);
    uint64_t v33 = v112;
    do
    {
      sub_1C3C96704(v31, (uint64_t)v22);
      uint64_t v34 = &v22[*(int *)(v110 + 20)];
      uint64_t v36 = *(void *)v34;
      uint64_t v35 = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
      sub_1C3C96768((uint64_t)v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D1E0(0, v33[2] + 1, 1);
        uint64_t v33 = v112;
      }
      unint64_t v38 = v33[2];
      unint64_t v37 = v33[3];
      if (v38 >= v37 >> 1)
      {
        sub_1C3C9D1E0(v37 > 1, v38 + 1, 1);
        uint64_t v33 = v112;
      }
      v33[2] = v38 + 1;
      uint64_t v39 = &v33[2 * v38];
      v39[4] = v36;
      v39[5] = v35;
      v31 += v32;
      --v29;
    }
    while (v29);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v33[2];
  if (v40)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    uint64_t v42 = v33 + 5;
    unint64_t v43 = 0xE000000000000000;
    do
    {
      unint64_t v45 = (void *)*(v42 - 1);
      unint64_t v44 = *v42;
      if (!v41 && v43 == 0xE000000000000000 || (sub_1C3DBB3B8() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v41 = v45;
        unint64_t v43 = v44;
      }
      else
      {
        uint64_t v112 = v41;
        unint64_t v113 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = v112;
        unint64_t v43 = v113;
      }
      v42 += 2;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = 0;
    unint64_t v43 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  unint64_t v46 = v103;
  sub_1C3DB8838();
  uint64_t v112 = (void *)0xD000000000000020;
  unint64_t v113 = 0x80000001C3DF5850;
  unint64_t v47 = v107;
  uint64_t v48 = (void (*)(void))*((void *)v107 + 13);
  uint64_t v49 = v104;
  unsigned int v91 = *MEMORY[0x1E4F276C0];
  uint64_t v50 = v106;
  BOOL v90 = (void (*)(char *, void, uint64_t))v48;
  v48(v104);
  unint64_t v100 = sub_1C3C2A4A4();
  sub_1C3DB88E8();
  uint64_t v51 = (void (*)(char *, uint64_t))*((void *)v47 + 1);
  uint64_t v107 = v47 + 8;
  uint64_t v89 = v51;
  v51(v49, v50);
  swift_bridgeObjectRelease();
  uint64_t v52 = v105 + 8;
  uint64_t v110 = *(void *)(v105 + 8);
  ((void (*)(char *, uint64_t))v110)(v46, v109);
  uint64_t v53 = self;
  id v54 = objc_msgSend(v53, sel_defaultManager);
  uint64_t v55 = (char *)swift_slowAlloc();
  sub_1C3DB88A8();
  uint64_t v56 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LOBYTE(v46) = objc_msgSend(v54, sel_fileExistsAtPath_isDirectory_, v56, v55);

  if (v46)
  {
    char v57 = *v55;

    if (v57)
    {
      uint64_t v98 = v52;
      uint64_t v58 = v109;
      double v59 = v99;
      double v60 = v101;
      goto LABEL_31;
    }
  }
  else
  {
  }
  id v61 = objc_msgSend(v53, sel_defaultManager);
  uint64_t v62 = v108;
  double v59 = v99;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)(v108, 0);
  uint64_t v58 = v109;
  double v60 = v101;
  if (v59)
  {
    ((void (*)(uint64_t, uint64_t))v110)(v62, v109);
    swift_bridgeObjectRelease();

    goto LABEL_36;
  }
  uint64_t v98 = v52;

LABEL_31:
  uint64_t v112 = v92;
  unint64_t v113 = v93;
  os_log_type_t v63 = v104;
  uint64_t v64 = v106;
  v90(v104, v91, v106);
  unint64_t v65 = v103;
  sub_1C3DB88E8();
  v89(v63, v64);
  sub_1C3DB8868();
  unint64_t v66 = (void (*)(char *, uint64_t))v110;
  ((void (*)(char *, uint64_t))v110)(v65, v58);
  uint64_t v67 = v94;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v94, v60, v58);
  uint64_t v68 = sub_1C3DB9028();
  os_log_type_t v69 = sub_1C3DBA688();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = (void *)swift_slowAlloc();
    uint64_t v112 = v71;
    *(_DWORD *)uint64_t v70 = 136315138;
    uint64_t v107 = v70 + 4;
    sub_1C3CAF9EC((unint64_t *)&qword_1EB6FC740, MEMORY[0x1E4F276F0]);
    uint64_t v72 = sub_1C3DBB248();
    uint64_t v111 = sub_1C3C516D0(v72, v73, (uint64_t *)&v112);
    uint64_t v58 = v109;
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v110)(v67, v58);
    _os_log_impl(&dword_1C3A61000, v68, v69, "Writing offline transcript to %s", v70, 0xCu);
    swift_arrayDestroy();
    uint64_t v74 = v71;
    double v60 = v101;
    MEMORY[0x1C877E600](v74, -1, -1);
    MEMORY[0x1C877E600](v70, -1, -1);
  }
  else
  {
    v66(v67, v58);
  }

  uint64_t v76 = v96;
  uint64_t v75 = v97;
  uint64_t v77 = v95;
  uint64_t v112 = v41;
  unint64_t v113 = v43;
  sub_1C3DB9C68();
  sub_1C3DBAA48();
  if (!v59)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
    id v87 = (void (*)(uint64_t, uint64_t))v110;
    ((void (*)(char *, uint64_t))v110)(v60, v58);
    v87(v108, v58);
    swift_bridgeObjectRelease();
    return;
  }
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
  uint64_t v78 = (void (*)(uint64_t, uint64_t))v110;
  ((void (*)(char *, uint64_t))v110)(v60, v58);
  v78(v108, v58);
  swift_bridgeObjectRelease();
LABEL_36:
  id v79 = v59;
  id v80 = v59;
  unint64_t v81 = sub_1C3DB9028();
  os_log_type_t v82 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v81, v82))
  {
    uint64_t v83 = (uint8_t *)swift_slowAlloc();
    uint64_t v84 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v83 = 138412290;
    id v85 = v59;
    uint64_t v86 = (void *)_swift_stdlib_bridgeErrorToNSError();
    uint64_t v112 = v86;
    sub_1C3DBA9A8();
    *uint64_t v84 = v86;

    _os_log_impl(&dword_1C3A61000, v81, v82, "Error writing transcript text to URL %@", v83, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v84, -1, -1);
    MEMORY[0x1C877E600](v83, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C3CB32A0(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return MEMORY[0x1F4188298](sub_1C3CB3330, 0, 0);
}

uint64_t sub_1C3CB3330()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16590]), sel_init);
  v0[20] = v1;
  id v2 = objc_msgSend(v1, sel_addMutableTrackWithMediaType_preferredTrackID_, *MEMORY[0x1E4F15BA8], 0);
  v0[21] = v2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387268);
    uint64_t v3 = sub_1C3DB8D68();
    v0[22] = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[23] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CB3580;
    return MEMORY[0x1F4182DC0](v0 + 2, v3);
  }
  else
  {
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C3DB9048();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EA387178);
    uint64_t v6 = sub_1C3DB9028();
    os_log_type_t v7 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C3A61000, v6, v7, "Not able to add a mutable track to composition. Failing to create file for track", v8, 2u);
      MEMORY[0x1C877E600](v8, -1, -1);
    }

    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
}

uint64_t sub_1C3CB3580()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1C3CB39B4;
  }
  else
  {
    swift_release();
    id v2 = sub_1C3CB36D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CB36D0()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 16);
  *(void *)(v0 + 144) = 0;
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 48);
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v6 = MEMORY[0x1E4F1FA48];
  uint64_t v7 = *MEMORY[0x1E4F1FA48];
  uint64_t v8 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  *(void *)(v0 + 72) = *(void *)(v0 + 24);
  *(_OWORD *)(v0 + 80) = v5;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v3;
  *(void *)(v0 + 112) = v7;
  *(void *)(v0 + 120) = *(void *)(v6 + 8);
  *(void *)(v0 + 128) = v8;
  unsigned int v9 = objc_msgSend(v1, sel_insertTimeRange_ofTrack_atTime_error_, v0 + 64, v2, v0 + 112, v0 + 144);
  uint64_t v10 = *(void **)(v0 + 144);
  uint64_t v11 = *(void **)(v0 + 160);
  uint64_t v12 = *(void **)(v0 + 168);
  if (v9)
  {
    id v13 = v10;
  }
  else
  {
    id v14 = v10;
    uint64_t v15 = (void *)sub_1C3DB8798();

    swift_willThrow();
    if (qword_1EA385868 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C3DB9048();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EA387178);
    id v17 = v15;
    id v18 = v15;
    uint64_t v19 = sub_1C3DB9028();
    os_log_type_t v20 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      BOOL v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      id v22 = v15;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 136) = v23;
      sub_1C3DBA9A8();
      *BOOL v26 = v23;

      _os_log_impl(&dword_1C3A61000, v19, v20, "unable to make composition for call recording track: %@", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v26, -1, -1);
      MEMORY[0x1C877E600](v21, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = 0;
  }
  uint64_t v24 = *(uint64_t (**)(void *))(v0 + 8);
  return v24(v11);
}

uint64_t sub_1C3CB39B4()
{
  uint64_t v1 = *(void **)(v0 + 168);

  swift_release();
  uint64_t v2 = *(void **)(v0 + 192);
  if (qword_1EA385868 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C3DB9048();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA387178);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_1C3DB9028();
  os_log_type_t v7 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    unsigned int v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v2;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 136) = v11;
    sub_1C3DBA9A8();
    *unsigned int v9 = v11;

    _os_log_impl(&dword_1C3A61000, v6, v7, "unable to make composition for call recording track: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v9, -1, -1);
    MEMORY[0x1C877E600](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12(0);
}

uint64_t sub_1C3CB3BF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3CB3C5C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C3CB3CB8()
{
  v1._rawValue = *(void **)(v0 + 32);
  sub_1C3CACE14(*(void **)(v0 + 16), *(void *)(v0 + 24), v1, v0 + 40);
}

uint64_t sub_1C3CB3CDC()
{
  return sub_1C3D33030(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1C3CB3CE8()
{
  unint64_t result = qword_1EA387250;
  if (!qword_1EA387250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387250);
  }
  return result;
}

unint64_t sub_1C3CB3D3C()
{
  unint64_t result = qword_1EA387258;
  if (!qword_1EA387258)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA387238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387258);
  }
  return result;
}

uint64_t sub_1C3CB3D98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3CB3DE8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *os_log_type_t v7 = v1;
  v7[1] = sub_1C3C4DAF4;
  return sub_1C3CA750C(v2, v3, v4, v5, v6);
}

uint64_t sub_1C3CB3EA4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C3CB3EF4()
{
  v1._rawValue = *(void **)(v0 + 40);
  sub_1C3CA8E80(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1);
}

uint64_t sub_1C3CB3F14()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

void sub_1C3CB4018()
{
  uint64_t v1 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = v0 + v2;
  os_log_type_t v7 = *(void **)(v0 + v3);
  uint64_t v8 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void *, uint64_t))v8;
  id v10 = *(NSObject **)(v8 + 8);
  sub_1C3CA4F4C(v4, v5, v6, v7, v9, v10);
}

uint64_t sub_1C3CB40B8()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v8 + 8, v5);
}

uint64_t sub_1C3CB41C8()
{
  uint64_t v2 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void *)(v0 + v5);
  uint64_t v11 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_1C3C4DAF4;
  return sub_1C3CA5520(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1C3CB4300(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3CB4348()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_1C3CB43AC()
{
  v1._rawValue = *(void **)(v0 + 40);
  sub_1C3CA6CC4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1, v0 + 48);
}

uint64_t sub_1C3CB43D0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void destroy for AVAssetReaderSequence(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for AVAssetReaderSequence(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  unint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for AVAssetReaderSequence(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  return a1;
}

uint64_t assignWithTake for AVAssetReaderSequence(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  unint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for AVAssetReaderSequence()
{
  return &type metadata for AVAssetReaderSequence;
}

uint64_t sub_1C3CB4588()
{
  return MEMORY[0x1E4FBC0F0];
}

unint64_t sub_1C3CB4598()
{
  unint64_t result = qword_1EA3872B0;
  if (!qword_1EA3872B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3872B0);
  }
  return result;
}

uint64_t sub_1C3CB45EC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3CB4624()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C3CB4664(uint64_t a1)
{
  sub_1C3CAD43C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unsigned char *sub_1C3CB46B4(unsigned char *a1)
{
  return sub_1C3CA4E0C(a1);
}

uint64_t sub_1C3CB46CC(uint64_t a1)
{
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  uint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  unint64_t v5 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
    }
    else
    {
      BOOL v6 = __OFADD__(v4++, 1);
      if (v6) {
        goto LABEL_48;
      }
      if (v4 >= v31)
      {
LABEL_43:
        swift_release();
        return v5;
      }
      uint64_t v7 = *(void *)(v30 + 8 * v4);
      if (!v7)
      {
        int64_t v8 = v4 + 1;
        if (v4 + 1 >= v31) {
          goto LABEL_43;
        }
        uint64_t v7 = *(void *)(v30 + 8 * v8);
        if (!v7)
        {
          int64_t v8 = v4 + 2;
          if (v4 + 2 >= v31) {
            goto LABEL_43;
          }
          uint64_t v7 = *(void *)(v30 + 8 * v8);
          if (!v7)
          {
            int64_t v8 = v4 + 3;
            if (v4 + 3 >= v31) {
              goto LABEL_43;
            }
            uint64_t v7 = *(void *)(v30 + 8 * v8);
            if (!v7)
            {
              int64_t v8 = v4 + 4;
              if (v4 + 4 >= v31) {
                goto LABEL_43;
              }
              uint64_t v7 = *(void *)(v30 + 8 * v8);
              if (!v7)
              {
                while (1)
                {
                  int64_t v4 = v8 + 1;
                  if (__OFADD__(v8, 1)) {
                    goto LABEL_49;
                  }
                  if (v4 >= v31) {
                    goto LABEL_43;
                  }
                  uint64_t v7 = *(void *)(v30 + 8 * v4);
                  ++v8;
                  if (v7) {
                    goto LABEL_20;
                  }
                }
              }
            }
          }
        }
        int64_t v4 = v8;
      }
LABEL_20:
      uint64_t v3 = (v7 - 1) & v7;
    }
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3CB59D8(v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v10 + 16);
    int64_t v12 = *(void *)(v5 + 16);
    int64_t v13 = v12 + v11;
    if (__OFADD__(v12, v11)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v13 <= *(void *)(v5 + 24) >> 1)
    {
      if (!*(void *)(v10 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v12 <= v13) {
        int64_t v15 = v12 + v11;
      }
      else {
        int64_t v15 = v12;
      }
      unint64_t v5 = sub_1C3D8323C(isUniquelyReferenced_nonNull_native, v15, 1, v5);
      if (!*(void *)(v10 + 16))
      {
LABEL_4:
        if (v11) {
          goto LABEL_45;
        }
        goto LABEL_5;
      }
    }
    uint64_t v16 = *(void *)(v5 + 16);
    uint64_t v17 = (*(void *)(v5 + 24) >> 1) - v16;
    uint64_t v18 = *(void *)(sub_1C3DB8AF8() - 8);
    uint64_t v19 = *(void *)(v18 + 72);
    if (v17 < v11) {
      goto LABEL_46;
    }
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v21 = v5 + v20 + v19 * v16;
    unint64_t v22 = v10 + v20;
    uint64_t v23 = v19 * v11;
    unint64_t v24 = v21 + v23;
    unint64_t v25 = v22 + v23;
    if (v22 < v24 && v21 < v25) {
      goto LABEL_50;
    }
    swift_arrayInitWithCopy();
    if (v11)
    {
      uint64_t v27 = *(void *)(v5 + 16);
      BOOL v6 = __OFADD__(v27, v11);
      uint64_t v28 = v27 + v11;
      if (v6) {
        goto LABEL_47;
      }
      *(void *)(v5 + 16) = v28;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3CB49F4(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  BOOL v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C3C9D34C(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x1C877C220](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      int64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_replicaID);
      sub_1C3DB8B58();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_1C3C9D34C(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CB4C1C(uint64_t a1)
{
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387170);
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v39);
  unint64_t v37 = (void (**)(char *, char *, uint64_t))((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  unint64_t v38 = (char *)v30 - v6;
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    v30[1] = v1;
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1C3C9D34C(0, v11, 0);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v35 = v10;
    uint64_t v36 = v8;
    unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v33 = v8 + 16;
    uint64_t v34 = v14;
    uint64_t v16 = (void (**)(void, void, void))(v8 + 32);
    int64_t v31 = v16;
    uint64_t v32 = v15;
    do
    {
      uint64_t v41 = v13;
      int64_t v42 = v11;
      uint64_t v17 = v39;
      uint64_t v18 = *(int *)(v39 + 48);
      uint64_t v19 = &v38[v18];
      unint64_t v20 = (char *)(v13 + v18);
      uint64_t v21 = *(void *)(v13 + 8);
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))v13;
      unint64_t v22 = v32;
      v32(&v38[v18], v20, v7);
      uint64_t v23 = (uint64_t)v37;
      unint64_t v24 = (char *)v37 + *(int *)(v17 + 48);
      *unint64_t v37 = v40;
      *(void *)(v23 + 8) = v21;
      uint64_t v40 = (void (*)(char *, char *, uint64_t))*v16;
      v40(v24, v19, v7);
      v22(v10, v24, v7);
      swift_bridgeObjectRetain();
      sub_1C3C2A448(v23, &qword_1EA387170);
      uint64_t v12 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D34C(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v43;
      }
      unint64_t v26 = *(void *)(v12 + 16);
      unint64_t v25 = *(void *)(v12 + 24);
      uint64_t v27 = v41;
      int64_t v28 = v42;
      uint64_t v16 = v31;
      if (v26 >= v25 >> 1)
      {
        sub_1C3C9D34C(v25 > 1, v26 + 1, 1);
        uint64_t v12 = v43;
      }
      uint64_t v10 = v35;
      uint64_t v13 = v27 + v34;
      *(void *)(v12 + 16) = v26 + 1;
      v40((char *)(v12+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v26), v10, v7);
      uint64_t v43 = v12;
      int64_t v11 = v28 - 1;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1C3CB4F3C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v2 = sub_1C3DBAB38();
  }
  else {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C3C9D3E4(0, v2 & ~(v2 >> 63), 0);
    if (v26)
    {
      uint64_t result = sub_1C3DBAAD8();
      unsigned __int8 v5 = 1;
    }
    else
    {
      uint64_t result = sub_1C3CDB284(v1);
      unsigned __int8 v5 = v6 & 1;
    }
    uint64_t v28 = result;
    uint64_t v29 = v4;
    unsigned __int8 v30 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      uint64_t v25 = v1;
      do
      {
        while (1)
        {
          uint64_t v13 = v28;
          uint64_t v12 = v29;
          uint64_t v14 = v30;
          sub_1C3CDB000(v28, v29, v30, v1);
          uint64_t v16 = v15;
          id v17 = objc_msgSend(v15, sel_range);
          uint64_t v19 = v18;

          uint64_t v20 = v31;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1C3C9D3E4(0, *(void *)(v20 + 16) + 1, 1);
            uint64_t v20 = v31;
          }
          unint64_t v22 = *(void *)(v20 + 16);
          unint64_t v21 = *(void *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            uint64_t result = sub_1C3C9D3E4(v21 > 1, v22 + 1, 1);
            uint64_t v20 = v31;
          }
          *(void *)(v20 + 16) = v22 + 1;
          uint64_t v23 = v20 + 16 * v22;
          *(void *)(v23 + 32) = v17;
          *(void *)(v23 + 40) = v19;
          if (v26) {
            break;
          }
          uint64_t v1 = v25;
          uint64_t v7 = sub_1C3CDAF04(v13, v12, v14, v25);
          uint64_t v9 = v8;
          char v11 = v10;
          sub_1C3CC0420(v13, v12, v14);
          uint64_t v28 = v7;
          uint64_t v29 = v9;
          unsigned __int8 v30 = v11 & 1;
          if (!--v2) {
            goto LABEL_20;
          }
        }
        uint64_t v1 = v25;
        if ((v14 & 1) == 0) {
          goto LABEL_23;
        }
        if (sub_1C3DBAAF8()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387300);
        unint64_t v24 = (void (*)(unsigned char *, void))sub_1C3DBA468();
        sub_1C3DBABA8();
        v24(v27, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_1C3CC0420(v28, v29, v30);
      return v31;
    }
  }
  return result;
}

void sub_1C3CB51B0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v1, 0);
    uint64_t v4 = sub_1C3CBC548(v2);
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 64;
    uint64_t v24 = v2 + 80;
    int64_t v25 = v1;
    int v26 = v3;
    uint64_t v27 = v2 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v2 + 36) != v3) {
        goto LABEL_24;
      }
      uint64_t v28 = v5;
      id v10 = *(id *)(*(void *)(v2 + 56) + 8 * v4);
      uint64_t v11 = v2;
      id v12 = objc_msgSend(v10, sel_string);
      uint64_t v13 = sub_1C3DB9C38();
      uint64_t v15 = v14;

      unint64_t v17 = *(void *)(v29 + 16);
      unint64_t v16 = *(void *)(v29 + 24);
      if (v17 >= v16 >> 1) {
        sub_1C3C9D1E0(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v29 + 16) = v17 + 1;
      uint64_t v18 = v29 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      int64_t v7 = 1 << *(unsigned char *)(v11 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = v27;
      uint64_t v19 = *(void *)(v27 + 8 * v9);
      if ((v19 & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      uint64_t v2 = v11;
      int v3 = v26;
      if (*(_DWORD *)(v11 + 36) != v26) {
        goto LABEL_27;
      }
      unint64_t v20 = v19 & (-2 << (v4 & 0x3F));
      if (v20)
      {
        int64_t v7 = __clz(__rbit64(v20)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v8 = v25;
      }
      else
      {
        unint64_t v21 = v9 + 1;
        unint64_t v22 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v25;
        if (v9 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v9)
            {
              unint64_t v23 = *(void *)(v24 + 8 * v9++);
              if (v23)
              {
                unint64_t v21 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      uint64_t v5 = v28 + 1;
      uint64_t v4 = v7;
      if (v28 + 1 == v8) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t static NoteEditActivityEvent.events(for:afterTimestamp:recentTimestamp:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = objc_msgSend(a1, sel_mergeableString);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    *int64_t v8 = a1;
    swift_storeEnumTagMultiPayload();
    id v12 = a1;
    uint64_t v13 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v11, (uint64_t)v8, a2, a3);

    sub_1C3CBECBC((uint64_t)v8, type metadata accessor for NoteEditActivityEvent.Parents);
  }
  else
  {

    return MEMORY[0x1E4FBC860];
  }
  return v13;
}

uint64_t type metadata accessor for NoteEditActivityEvent.Parents(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FBF70);
}

uint64_t sub_1C3CB5540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void **)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  id v9 = (char *)&v41 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v48 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v44 = v11;
  uint64_t v45 = v2;
  uint64_t v46 = v3;
  if (v15) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v20 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v20 < v48)
    {
      unint64_t v21 = *(void *)(v47 + 8 * v20);
      ++v17;
      if (v21) {
        goto LABEL_23;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v48) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v47 + 8 * v17);
      if (v21) {
        goto LABEL_23;
      }
      int64_t v17 = v20 + 2;
      if (v20 + 2 >= v48) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v47 + 8 * v17);
      if (v21) {
        goto LABEL_23;
      }
      int64_t v17 = v20 + 3;
      if (v20 + 3 >= v48) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v47 + 8 * v17);
      if (v21)
      {
LABEL_23:
        unint64_t v15 = (v21 - 1) & v21;
        for (unint64_t i = __clz(__rbit64(v21)) + (v17 << 6); ; unint64_t i = v18 | (v17 << 6))
        {
          sub_1C3CBED1C(*(void *)(a1 + 48) + *(void *)(v3 + 72) * i, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent.Parents);
          sub_1C3CC0350((uint64_t)v11, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
          sub_1C3CBED1C((uint64_t)v9, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
          if (swift_getEnumCaseMultiPayload() != 1) {
            break;
          }
          unint64_t v49 = v15;
          int64_t v50 = v17;
          uint64_t v23 = (uint64_t)v9;
          uint64_t v24 = a1;
          int64_t v25 = *v6;
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
          uint64_t v27 = (char *)v6 + *(int *)(v26 + 48);
          uint64_t v28 = (char *)v6 + *(int *)(v26 + 64);
          uint64_t v29 = sub_1C3DB8B98();
          unsigned __int8 v30 = *(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8);
          v30(v28, v29);
          v30(v27, v29);
          id v31 = v25;
          id v32 = objc_msgSend(v31, sel_identifier);
          if (!v32)
          {

            a1 = v24;
            uint64_t v3 = v46;
            id v9 = (char *)v23;
            uint64_t v11 = v44;
            int64_t v17 = v50;
            unint64_t v15 = v49;
LABEL_6:
            uint64_t result = sub_1C3CBECBC((uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
            if (!v15) {
              goto LABEL_8;
            }
            goto LABEL_7;
          }
          uint64_t v33 = v32;
          uint64_t v34 = sub_1C3DB9C38();
          uint64_t v41 = v35;
          uint64_t v42 = v34;

          id v9 = (char *)v23;
          sub_1C3CBECBC(v23, type metadata accessor for NoteEditActivityEvent.Parents);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C3D8288C(0, v43[2] + 1, 1, v43);
            uint64_t v43 = (void *)result;
          }
          a1 = v24;
          uint64_t v11 = v44;
          unint64_t v37 = v43[2];
          unint64_t v36 = v43[3];
          int64_t v17 = v50;
          if (v37 >= v36 >> 1)
          {
            uint64_t result = (uint64_t)sub_1C3D8288C((void *)(v36 > 1), v37 + 1, 1, v43);
            uint64_t v43 = (void *)result;
          }
          uint64_t v3 = v46;
          unint64_t v38 = v43;
          long long v43[2] = v37 + 1;
          uint64_t v39 = &v38[2 * v37];
          uint64_t v40 = v41;
          v39[4] = v42;
          v39[5] = v40;
          unint64_t v15 = v49;
          if (!v49) {
            goto LABEL_8;
          }
LABEL_7:
          unint64_t v18 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
        }
        sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
        goto LABEL_6;
      }
      int64_t v22 = v20 + 4;
      if (v22 < v48)
      {
        unint64_t v21 = *(void *)(v47 + 8 * v22);
        if (v21)
        {
          int64_t v17 = v22;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v17 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_35;
          }
          if (v17 >= v48) {
            break;
          }
          unint64_t v21 = *(void *)(v47 + 8 * v17);
          ++v22;
          if (v21) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return (uint64_t)v43;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C3CB59D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v50 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v50);
  uint64_t v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v38 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAAE8();
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
    sub_1C3CC03B8();
    uint64_t result = sub_1C3DBA478();
    a1 = v52;
    uint64_t v47 = v53;
    uint64_t v10 = v54;
    uint64_t v11 = v55;
    uint64_t v12 = v56;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v47 = a1 + 56;
    uint64_t v10 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    uint64_t v12 = v16 & v14;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  uint64_t v40 = v5;
  uint64_t v41 = v10;
  int64_t v46 = (unint64_t)(v10 + 64) >> 6;
  int64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  int64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  unint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v45 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v49 = a1;
LABEL_8:
  uint64_t v18 = v11;
  unint64_t v19 = v12;
  if (a1 < 0)
  {
    do
    {
      uint64_t v21 = sub_1C3DBAB78();
      if (!v21) {
        goto LABEL_42;
      }
      uint64_t v51 = v21;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v22 = v57;
      swift_unknownObjectRelease();
      uint64_t v11 = v18;
      uint64_t v12 = v19;
      if (!v22) {
        goto LABEL_42;
      }
LABEL_31:
      id v26 = objc_msgSend(v22, sel_timestamp);
      if (v26)
      {
        uint64_t v27 = v26;
        sub_1C3DB8AC8();

        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = 1;
      }
      uint64_t v29 = v50;
      (*v48)(v4, v28, 1, v50);

      if ((*v17)(v4, 1, v29) != 1)
      {
        unsigned __int8 v30 = *v42;
        id v31 = v39;
        uint64_t v32 = v50;
        (*v42)(v39, v4, v50);
        v30(v43, v31, v32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v49;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v44 = sub_1C3D8323C(0, *(void *)(v44 + 16) + 1, 1, v44);
        }
        unint64_t v35 = *(void *)(v44 + 16);
        unint64_t v34 = *(void *)(v44 + 24);
        if (v35 >= v34 >> 1) {
          unint64_t v44 = sub_1C3D8323C(v34 > 1, v35 + 1, 1, v44);
        }
        unint64_t v36 = v43;
        unint64_t v37 = v44;
        *(void *)(v44 + 16) = v35 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(v37+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v35, v36, v50);
        goto LABEL_8;
      }
      uint64_t result = sub_1C3C2A448((uint64_t)v4, &qword_1EB6FB1B8);
      uint64_t v18 = v11;
      unint64_t v19 = v12;
      a1 = v49;
    }
    while (v49 < 0);
  }
  if (v19)
  {
    uint64_t v12 = (v19 - 1) & v19;
    unint64_t v20 = __clz(__rbit64(v19)) | (v18 << 6);
    uint64_t v11 = v18;
    goto LABEL_30;
  }
  int64_t v23 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v23 < v46)
    {
      unint64_t v24 = *(void *)(v47 + 8 * v23);
      uint64_t v11 = v18 + 1;
      if (v24) {
        goto LABEL_29;
      }
      uint64_t v11 = v18 + 2;
      if (v18 + 2 >= v46) {
        goto LABEL_42;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v11);
      if (v24) {
        goto LABEL_29;
      }
      uint64_t v11 = v18 + 3;
      if (v18 + 3 >= v46) {
        goto LABEL_42;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v11);
      if (v24) {
        goto LABEL_29;
      }
      uint64_t v11 = v18 + 4;
      if (v18 + 4 >= v46) {
        goto LABEL_42;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v11);
      if (v24)
      {
LABEL_29:
        uint64_t v12 = (v24 - 1) & v24;
        unint64_t v20 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_30:
        id v22 = *(id *)(*(void *)(a1 + 48) + 8 * v20);
        if (v22) {
          goto LABEL_31;
        }
        goto LABEL_42;
      }
      uint64_t v11 = v18 + 5;
      if (v18 + 5 < v46)
      {
        unint64_t v24 = *(void *)(v47 + 8 * v11);
        if (!v24)
        {
          uint64_t v25 = v18 + 6;
          while (v46 != v25)
          {
            unint64_t v24 = *(void *)(v47 + 8 * v25++);
            if (v24)
            {
              uint64_t v11 = v25 - 1;
              a1 = v49;
              goto LABEL_29;
            }
          }
          goto LABEL_42;
        }
        goto LABEL_29;
      }
    }
LABEL_42:
    sub_1C3C4C744();
    return v44;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CB5F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  unint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    id v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1C3CBF14C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
    uint64_t v27 = sub_1C3DB9B08();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1C3CBF14C(&qword_1EB6FC058, MEMORY[0x1E4F27990]);
      char v32 = sub_1C3DB9BE8();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1C3CB636C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_57;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_1C3CBB874(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v28 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
  int64_t v12 = 0;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v29) {
        return;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v29) {
          return;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v29) {
            return;
          }
          unint64_t v17 = *(void *)(v28 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_1C3DBA8D8();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v30 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_1C3DBA8E8();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_1C3DBA8E8();

        if (v27) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v30;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v29) {
    return;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  MEMORY[0x1F4184BB8](v6, v5);
}

uint64_t NoteEditActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8AF8();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t NoteEditActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*NoteEditActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.timeInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v26 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = sub_1C3DB8AF8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v25 - v18;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C3CB46CC(v20);
  swift_bridgeObjectRelease();
  sub_1C3CB6B38(v21, v12);
  uint64_t v25 = v1;
  sub_1C3CBED1C(v1, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
  unint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v22(v12, 1, v13) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v6, v13);
    sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
    sub_1C3C2A448((uint64_t)v12, &qword_1EB6FB1B8);
  }
  else
  {
    sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  }
  sub_1C3CB6F5C(v21, v10);
  swift_bridgeObjectRelease();
  uint64_t v23 = v26;
  sub_1C3CBED1C(v25, v26, type metadata accessor for NoteEditActivityEvent);
  if (v22(v10, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v23, v13);
    sub_1C3CBECBC(v23, type metadata accessor for NoteEditActivityEvent);
    sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
  }
  else
  {
    sub_1C3CBECBC(v23, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v10, v13);
  }
  return sub_1C3DB8238();
}

uint64_t sub_1C3CB6B38@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1C3DB8AF8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  int64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    id v19 = v38;
LABEL_5:
    sub_1C3C2A448((uint64_t)v9, &qword_1EB6FB1B8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  int64_t v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    char v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_1C3CBF14C((unint64_t *)&qword_1EA388D80, MEMORY[0x1E4F27928]);
      char v27 = sub_1C3DB9B98();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C3C2A448((uint64_t)v7, &qword_1EB6FB1B8);
  unint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_1C3CB6F5C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1C3DB8AF8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  int64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    id v19 = v38;
LABEL_5:
    sub_1C3C2A448((uint64_t)v9, &qword_1EB6FB1B8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  int64_t v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    char v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_1C3CBF14C((unint64_t *)&qword_1EA388D80, MEMORY[0x1E4F27928]);
      char v27 = sub_1C3DB9B98();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C3C2A448((uint64_t)v7, &qword_1EB6FB1B8);
  unint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t NoteEditActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.object.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v4;
  return result;
}

void (*NoteEditActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.participant.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 24));
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 NoteEditActivityEvent.participant.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*NoteEditActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.associatedAttachmentIds.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C3CB5540(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C3C63E88(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C3CB75DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1C3DB8AF8();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v26 - v16;
  sub_1C3C376DC(a1, (uint64_t)v10);
  unint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v12[6];
  if (v18((uint64_t)v10, 1, v11) == 1)
  {
    sub_1C3C2A448(v29, &qword_1EB6FB1B8);
    sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
LABEL_8:
    BOOL v25 = v18(a1, 1, v11) == 1;
    uint64_t result = sub_1C3C2A448(a1, &qword_1EB6FB1B8);
    char v24 = 2 * v25;
    goto LABEL_9;
  }
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  id v19 = (void (*)(char *, char *, uint64_t))v12[4];
  v19(v17, v10, v11);
  uint64_t v20 = v29;
  sub_1C3C376DC(v29, (uint64_t)v8);
  if (v18((uint64_t)v8, 1, v11) == 1)
  {
    sub_1C3DB8A08();
    sub_1C3C2A448((uint64_t)v8, &qword_1EB6FB1B8);
  }
  else
  {
    v19(v15, v8, v11);
  }
  char v21 = sub_1C3DB8A98();
  sub_1C3C2A448(v20, &qword_1EB6FB1B8);
  unint64_t v22 = (void (*)(char *, uint64_t))v12[1];
  v22(v15, v11);
  v22(v17, v11);
  a1 = v27;
  a3 = v28;
  if ((v21 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1C3C2A448(v27, &qword_1EB6FB1B8);
  char v24 = 1;
LABEL_9:
  *a3 = v24;
  return result;
}

NotesShared::NoteEditActivityEvent::Kinds_optional __swiftcall NoteEditActivityEvent.Kinds.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t NoteEditActivityEvent.Kinds.rawValue.getter()
{
  uint64_t v1 = 0x746E65636572;
  if (*v0 != 1) {
    uint64_t v1 = 0x726568746FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1C3CB7960(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C3CE6AE8(*a1, *a2);
}

uint64_t sub_1C3CB796C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CB7A08()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CB7A90()
{
  return sub_1C3DBB608();
}

NotesShared::NoteEditActivityEvent::Kinds_optional sub_1C3CB7B28(Swift::String *a1)
{
  return NoteEditActivityEvent.Kinds.init(rawValue:)(*a1);
}

void sub_1C3CB7B34(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x746E65636572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726568746FLL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t NoteEditActivityEvent.kind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NoteEditActivityEvent(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NoteEditActivityEvent.kind.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for NoteEditActivityEvent(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (*NoteEditActivityEvent.kind.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void NoteEditActivityEvent.Parents.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  BOOL v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void **)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3CBED1C(v1, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent.Parents);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = *v11;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    uint64_t v15 = (char *)v11 + *(int *)(v14 + 48);
    uint64_t v16 = (char *)v11 + *(int *)(v14 + 64);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v17(v8, v15, v2);
    v17(v6, v16, v2);
    sub_1C3DBB5E8();
    sub_1C3DBA8F8();
    sub_1C3CBF14C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
    sub_1C3DB9B18();
    sub_1C3DB9B18();

    unint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v6, v2);
    v18(v8, v2);
  }
  else
  {
    sub_1C3DBB5E8();
    sub_1C3DBA8F8();
  }
}

uint64_t NoteEditActivityEvent.Parents.hashValue.getter()
{
  return sub_1C3CB8CD8((void (*)(unsigned char *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t sub_1C3CB7ED0(uint64_t a1, uint64_t a2)
{
  return sub_1C3CB8D3C(a1, a2, (void (*)(unsigned char *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t sub_1C3CB7EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3CB8DA0(a1, a2, a3, (void (*)(unsigned char *))NoteEditActivityEvent.Parents.hash(into:));
}

uint64_t NoteEditActivityEvent.strings.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.strings.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

void (*NoteEditActivityEvent.strings.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.edits.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  return swift_bridgeObjectRetain();
}

uint64_t NoteEditActivityEvent.edits.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

void (*NoteEditActivityEvent.edits.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteEditActivityEvent.substrings.getter()
{
  type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v7 = v0;
  uint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = sub_1C3CBED8C(v1, (uint64_t (*)(char *, uint64_t))sub_1C3CBED84, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C3CBF054(v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_1C3CB8120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C3D53EF8(a2);
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_1C3CB4F3C(a2);
  uint64_t result = (char *)objc_msgSend(v6, sel_range);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v7 + 16);
  if (!v12)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(a3 + *(int *)(type metadata accessor for NoteEditActivityEvent(0) + 32));
    if (*(void *)(v16 + 16))
    {
      unint64_t v17 = sub_1C3D03C24(a1);
      if (v18)
      {
        id v19 = *(id *)(*(void *)(v16 + 56) + 8 * v17);
        id v20 = objc_msgSend(v19, sel_attributedSubstringFromRange_, v9, v11);

        return (char *)v20;
      }
    }

    return 0;
  }
  uint64_t v13 = (void *)(v7 + 40);
  while (1)
  {
    uint64_t v14 = &v9[v11];
    if (__OFADD__(v9, v11)) {
      break;
    }
    uint64_t v15 = *(v13 - 1);
    if (__OFADD__(v15, *v13)) {
      goto LABEL_19;
    }
    if ((uint64_t)v14 <= v15 + *v13) {
      uint64_t v14 = (char *)(v15 + *v13);
    }
    if ((uint64_t)v9 >= v15) {
      uint64_t v9 = (char *)*(v13 - 1);
    }
    uint64_t v11 = v14 - v9;
    if (__OFSUB__(v14, v9)) {
      goto LABEL_20;
    }
    v13 += 2;
    if (!--v12) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1C3CB8280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3872D8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v40 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v45 = 0;
  uint64_t v43 = a1;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v41 = v15;
  int64_t v42 = (unint64_t)(v17 + 63) >> 6;
  int64_t v40 = v42 - 1;
  id v20 = &qword_1EA3872E0;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v45 << 6);
LABEL_8:
      uint64_t v23 = v43;
      sub_1C3CBED1C(*(void *)(v43 + 48) + *(void *)(v44 + 72) * v22, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
      uint64_t v24 = *(void *)(v23 + 56);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v20);
      *(void *)&v10[*(int *)(v25 + 48)] = *(void *)(v24 + 8 * v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v26 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v26 < v42)
    {
      unint64_t v27 = *(void *)(v41 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v45 + 2;
      ++v45;
      if (v26 + 1 < v42)
      {
        unint64_t v27 = *(void *)(v41 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v45 = v26 + 1;
        if (v26 + 2 < v42)
        {
          unint64_t v27 = *(void *)(v41 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v45 = v26 + 2;
          if (v26 + 3 < v42)
          {
            unint64_t v27 = *(void *)(v41 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v45 = v26 + 3;
            if (v26 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    unint64_t v19 = 0;
LABEL_30:
    sub_1C3CB3BF8((uint64_t)v10, (uint64_t)v13, &qword_1EA3872D8);
    int64_t v30 = v20;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(v20);
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v13, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = *(int *)(v31 + 48);
    sub_1C3CC0350((uint64_t)v13, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    uint64_t v35 = *(void *)&v13[v34];
    sub_1C3D03C24((uint64_t)v6);
    LOBYTE(v34) = v36;
    sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_1C3CB636C(v37, v35);
    char v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    id v20 = v30;
    if ((v39 & 1) == 0) {
      return v33;
    }
  }
  unint64_t v27 = *(void *)(v41 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v45 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v42)
    {
      int64_t v45 = v40;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v41 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t NoteEditActivityEvent.hash(into:)(uint64_t a1)
{
  sub_1C3DB8AF8();
  sub_1C3CBF14C(&qword_1EA386470, MEMORY[0x1E4F27928]);
  sub_1C3DB9B18();
  uint64_t v3 = type metadata accessor for NoteEditActivityEvent(0);
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 36));
  swift_bridgeObjectRetain();
  sub_1C3CBB9C8(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t NoteEditActivityEvent.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = sub_1C3DBB648();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386CD8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for NoteEditActivityEvent(0);
  MEMORY[0x1F4188790](v8);
  sub_1C3CBED1C(v1, (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NoteEditActivityEvent);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3DD7270;
  *(void *)(v10 + 32) = 0x6D617473656D6974;
  *(void *)(v10 + 40) = 0xE900000000000070;
  uint64_t v11 = sub_1C3DB8AF8();
  *(void *)(v10 + 72) = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1, v1, v11);
  *(void *)(v10 + 80) = 0x7463656A626FLL;
  *(void *)(v10 + 88) = 0xE600000000000000;
  uint64_t v13 = v1 + v8[5];
  uint64_t v14 = *(void *)(v13 + 8);
  uint64_t v15 = *(void *)(v13 + 16);
  *(unsigned char *)(v10 + 96) = *(unsigned char *)v13;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 112) = v15;
  *(void *)(v10 + 120) = &type metadata for ActivityEventObject;
  *(void *)(v10 + 128) = 0x7069636974726170;
  *(void *)(v10 + 136) = 0xEB00000000746E61;
  uint64_t v16 = (uint64_t *)(v1 + v8[6]);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v20 = v16[2];
  uint64_t v19 = v16[3];
  *(void *)(v10 + 168) = &type metadata for ActivityEventParticipant;
  unint64_t v21 = (void *)swift_allocObject();
  *(void *)(v10 + 144) = v21;
  void v21[2] = v17;
  v21[3] = v18;
  void v21[4] = v20;
  v21[5] = v19;
  *(void *)(v10 + 176) = 1684957547;
  *(void *)(v10 + 184) = 0xE400000000000000;
  *(unsigned char *)(v10 + 192) = *(unsigned char *)(v2 + v8[7]);
  *(void *)(v10 + 216) = &type metadata for NoteEditActivityEvent.Kinds;
  *(void *)(v10 + 224) = 0x7374786574;
  *(void *)(v10 + 232) = 0xE500000000000000;
  uint64_t v22 = *(void *)(v2 + v8[9]);
  uint64_t v36 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1C3CBED8C(v22, (uint64_t (*)(char *, uint64_t))sub_1C3CC0AA8, (uint64_t)v35);
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C3CBF054(v24, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3CB51B0(v25);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v37 = v27;
  swift_bridgeObjectRetain();
  sub_1C3CBA1E8(&v37);
  swift_bridgeObjectRelease();
  uint64_t v28 = v37;
  *(void *)(v10 + 264) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  *(void *)(v10 + 240) = v28;
  uint64_t v29 = sub_1C3DBB628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 1, 1, v29);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FBC430], v33);
  return sub_1C3DBB678();
}

uint64_t NoteEditActivityEvent.hashValue.getter()
{
  return sub_1C3CB8CD8((void (*)(unsigned char *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1C3CB8CD8(void (*a1)(unsigned char *))
{
  sub_1C3DBB5D8();
  a1(v3);
  return sub_1C3DBB608();
}

uint64_t sub_1C3CB8D24(uint64_t a1, uint64_t a2)
{
  return sub_1C3CB8D3C(a1, a2, (void (*)(unsigned char *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1C3CB8D3C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1C3DBB5D8();
  a3(v5);
  return sub_1C3DBB608();
}

uint64_t sub_1C3CB8D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3CB8DA0(a1, a2, a3, (void (*)(unsigned char *))NoteEditActivityEvent.hash(into:));
}

uint64_t sub_1C3CB8DA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1C3DBB5D8();
  a4(v6);
  return sub_1C3DBB608();
}

uint64_t sub_1C3CB8DE8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C3CB5540(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C3C63E88(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C3CB8E58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a8;
  char v39 = a5;
  uint64_t v36 = a7;
  uint64_t v40 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v37 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v34 = (uint64_t)&v34 - v13;
  uint64_t v15 = sub_1C3DB8B98();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v41 = objc_msgSend(a4, sel_table);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  sub_1C3C376DC(v36, (uint64_t)v14);
  sub_1C3C376DC(v38, (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v23 = (v22 + v21 + 8) & ~v22;
  uint64_t v24 = (v11 + v22 + v23) & ~v22;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v19, v18, v15);
  uint64_t v27 = v39;
  uint64_t v26 = v40;
  *(void *)(v25 + v20) = v39;
  *(void *)(v25 + v21) = v26;
  sub_1C3CB3BF8(v34, v25 + v23, &qword_1EB6FB1B8);
  sub_1C3CB3BF8(v35, v25 + v24, &qword_1EB6FB1B8);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1C3CC08B4;
  *(void *)(v28 + 24) = v25;
  aBlock[4] = sub_1C3CC0AB0;
  void aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1C3CB93BC;
  aBlock[3] = &block_descriptor_23;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = a4;
  id v31 = v27;
  swift_retain();
  swift_release();
  id v32 = v41;
  objc_msgSend(v41, sel_enumerateRowsWithBlock_, v29);

  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v29) {
    __break(1u);
  }
  return result;
}

void sub_1C3CB91D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = objc_msgSend(a4, sel_table);
  uint64_t v32 = a5;
  unint64_t v19 = (void *)sub_1C3DB8B38();
  unint64_t v20 = (void *)sub_1C3DB8B38();
  id v21 = objc_msgSend(v18, sel_mergeableStringForColumnID_rowID_, v19, v20);

  if (v21)
  {
    uint64_t v31 = a9;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    uint64_t v23 = (char *)v17 + *(int *)(v22 + 48);
    uint64_t v24 = (char *)v17 + *(int *)(v22 + 64);
    *uint64_t v17 = a6;
    uint64_t v25 = sub_1C3DB8B98();
    v30[0] = a8;
    v30[1] = a7;
    uint64_t v26 = v25;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    v27(v23, v32, v25);
    v27(v24, a1, v26);
    swift_storeEnumTagMultiPayload();
    id v28 = a6;
    uint64_t v29 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v21, (uint64_t)v17, v30[0], v31);
    sub_1C3D79020(v29);

    sub_1C3CBECBC((uint64_t)v17, type metadata accessor for NoteEditActivityEvent.Parents);
  }
}

uint64_t sub_1C3CB93BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 32);
  sub_1C3DB8B58();
  v11(v10, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1C3CB94C0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v118 = a8;
  int v139 = a7;
  id v128 = a6;
  uint64_t v129 = a9;
  uint64_t v126 = a5;
  uint64_t v130 = a4;
  id v131 = a3;
  uint64_t v136 = sub_1C3DB8AF8();
  uint64_t v132 = *(void *)(v136 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v136);
  uint64_t v123 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v122 = (char *)&v117 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v127 = (char *)&v117 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v121 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v120 = (char *)&v117 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v119 = (uint64_t)&v117 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v125 = (char *)&v117 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v124 = (uint64_t)&v117 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v117 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v137 = (uint64_t)&v117 - v33;
  uint64_t v34 = sub_1C3DB8B98();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v117 - v39;
  id v41 = *a1;
  id v42 = objc_msgSend(*a1, sel_replicaID);
  sub_1C3DB8B58();

  LOBYTE(a2) = sub_1C3D40858((uint64_t)v40, a2);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v135 = v34;
  uint64_t v133 = v43;
  *(void *)&long long v134 = v35 + 8;
  v43(v40, v34);
  if ((a2 & 1) != 0
    || (id v44 = objc_msgSend(v41, sel_replicaID),
        sub_1C3DB8B58(),
        v44,
        int64_t v45 = (void *)sub_1C3DB8B38(),
        v133(v40, v135),
        unsigned int v46 = objc_msgSend(v131, sel_trustsTimestampsFromReplicaID_, v45),
        v45,
        v46))
  {
    uint64_t v47 = v41;
    id v48 = objc_msgSend(v41, sel_timestamp);
    if (v48)
    {
      uint64_t v49 = v48;
      sub_1C3DB8AC8();

      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v50 = 1;
    }
    uint64_t v51 = v132;
    uint64_t v52 = v130;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v132 + 56))(v32, v50, 1, v136);
    sub_1C3CB3BF8((uint64_t)v32, v137, &qword_1EB6FB1B8);
  }
  else
  {
    uint64_t v47 = v41;
    uint64_t v51 = v132;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))(v137, 1, 1, v136);
    uint64_t v52 = v130;
  }
  id v53 = objc_msgSend(v47, sel_replicaID);
  sub_1C3DB8B58();

  if (*(void *)(v52 + 16) && (unint64_t v54 = sub_1C3D03C90((uint64_t)v38), (v55 & 1) != 0))
  {
    uint64_t v56 = (uint64_t *)(*(void *)(v52 + 56) + 16 * v54);
    uint64_t v57 = v56[1];
    uint64_t v130 = *v56;
    id v131 = v47;
    swift_bridgeObjectRetain();
    v133(v38, v135);
  }
  else
  {
    uint64_t v58 = v135;
    double v59 = v133;
    v133(v38, v135);
    id v60 = objc_msgSend(v47, sel_replicaID);
    sub_1C3DB8B58();

    id v61 = (void *)sub_1C3DB8B38();
    v59(v40, v58);
    id v62 = objc_msgSend(v131, sel_userIDForReplicaID_, v61);

    if (!v62)
    {
      sub_1C3C2A448(v137, &qword_1EB6FB1B8);
LABEL_27:
      uint64_t v88 = type metadata accessor for NoteEditActivityEvent(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v129, 1, 1, v88);
    }
    id v131 = v47;
    uint64_t v130 = sub_1C3DB9C38();
    uint64_t v57 = v63;
  }
  uint64_t v64 = v124;
  sub_1C3C376DC(v126, v124);
  unint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  uint64_t v66 = v136;
  int v67 = v65(v64, 1, v136);
  uint64_t v68 = (uint64_t)v125;
  if (v67 == 1)
  {
    sub_1C3C2A448(v64, &qword_1EB6FB1B8);
  }
  else
  {
    uint64_t v69 = v64;
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
    v70(v127, v69, v66);
    sub_1C3C376DC(v137, v68);
    if (v65(v68, 1, v66) == 1)
    {
      uint64_t v71 = v122;
      sub_1C3DB8998();
      sub_1C3C2A448(v68, &qword_1EB6FB1B8);
    }
    else
    {
      uint64_t v72 = v122;
      v70(v122, v68, v66);
      uint64_t v71 = v72;
    }
    uint64_t v73 = v66;
    uint64_t v74 = v127;
    char v75 = sub_1C3DB8A98();
    uint64_t v76 = v71;
    char v77 = v75;
    uint64_t v78 = *(void (**)(char *, uint64_t))(v132 + 8);
    v78(v76, v73);
    v78(v74, v73);
    uint64_t v66 = v73;
    if ((v77 & 1) == 0)
    {
LABEL_26:
      sub_1C3C2A448(v137, &qword_1EB6FB1B8);
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  id result = objc_msgSend(v128, sel_attributedString);
  if (!result)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  id v80 = result;
  id v81 = objc_msgSend(v131, sel_range);
  id v83 = objc_msgSend(v80, sel_attributedSubstringFromRange_, v81, v82);

  id v84 = objc_msgSend(v83, sel_string);
  if (!v84)
  {
    sub_1C3DB9C38();
    id v84 = (id)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  unsigned int v85 = objc_msgSend(v84, sel_ic_containsNonWhitespaceCharacters);

  if (!v85) {
    goto LABEL_26;
  }
  uint64_t v86 = v119;
  sub_1C3C376DC(v137, v119);
  if (v65(v86, 1, v66) == 1)
  {
    sub_1C3DB8998();
    sub_1C3C2A448(v86, &qword_1EB6FB1B8);
    uint64_t v87 = v132;
  }
  else
  {
    uint64_t v87 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v123, v86, v66);
  }
  uint64_t v89 = (uint64_t)v121;
  uint64_t v90 = (uint64_t)v120;
  uint64_t v132 = v57;
  uint64_t v127 = a10;
  swift_bridgeObjectRetain();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  v133(v40, v135);
  swift_bridgeObjectRelease();
  sub_1C3C376DC(v137, v90);
  sub_1C3C376DC(a11, v89);
  sub_1C3CB75DC(v90, v89, (char *)&v140);
  LODWORD(v135) = v140;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387328);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
  unint64_t v92 = (*(unsigned __int8 *)(*(void *)(v91 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v91 - 8) + 80);
  uint64_t v93 = swift_allocObject();
  long long v134 = xmmword_1C3DD3D30;
  *(_OWORD *)(v93 + 16) = xmmword_1C3DD3D30;
  unint64_t v94 = v93 + v92;
  sub_1C3CBED1C(a12, v93 + v92, type metadata accessor for NoteEditActivityEvent.Parents);
  id result = objc_msgSend(v128, sel_attributedString);
  if (!result) {
    goto LABEL_38;
  }
  char v95 = v139 & 1;
  *(void *)(v94 + *(int *)(v91 + 48)) = result;
  unint64_t v96 = sub_1C3C81758(v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387330);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E68);
  unint64_t v98 = (*(unsigned __int8 *)(*(void *)(v97 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v97 - 8) + 80);
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = v134;
  unint64_t v100 = v99 + v98;
  sub_1C3CBED1C(a12, v99 + v98, type metadata accessor for NoteEditActivityEvent.Parents);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD7260;
  id v102 = v131;
  *(void *)(inited + 32) = v131;
  unint64_t v138 = inited;
  sub_1C3DBA038();
  unint64_t v103 = v138;
  if (v138 >> 62)
  {
    id v108 = v102;
    swift_bridgeObjectRetain();
    uint64_t v109 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v109) {
      goto LABEL_32;
    }
LABEL_34:
    uint64_t v107 = MEMORY[0x1E4FBC870];
    goto LABEL_35;
  }
  uint64_t v104 = *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v105 = v102;
  if (!v104) {
    goto LABEL_34;
  }
LABEL_32:
  sub_1C3C5BA4C(v103);
  uint64_t v107 = v106;
LABEL_35:
  swift_bridgeObjectRelease();
  *(void *)(v100 + *(int *)(v97 + 48)) = v107;
  unint64_t v110 = sub_1C3C81934(v99);
  sub_1C3C2A448(v137, &qword_1EB6FB1B8);
  uint64_t v111 = v129;
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 32))(v129, v123, v136);
  uint64_t v112 = (int *)type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v113 = v111 + v112[5];
  *(unsigned char *)uint64_t v113 = v95;
  uint64_t v114 = v127;
  *(void *)(v113 + 8) = v118;
  *(void *)(v113 + 16) = v114;
  unint64_t v115 = (uint64_t *)(v111 + v112[6]);
  uint64_t v116 = v132;
  uint64_t *v115 = v130;
  v115[1] = v116;
  v115[2] = 0;
  v115[3] = 0;
  *(unsigned char *)(v111 + v112[7]) = v135;
  *(void *)(v111 + v112[8]) = v96;
  *(void *)(v111 + v112[9]) = v110;
  return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v112 - 1) + 56))(v111, 0, 1, v112);
}

BOOL ICNote.hasRecentExternalEdits.getter()
{
  uint64_t v1 = ICCloudSyncingObject.editActivityEvents.getter();
  id v2 = v0;
  uint64_t v3 = sub_1C3CBE20C((uint64_t)v1, v2);
  swift_bridgeObjectRelease();

  id v4 = v2;
  uint64_t v5 = sub_1C3CBE6CC(v3, v4);
  swift_bridgeObjectRelease();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  return v6 != 0;
}

uint64_t sub_1C3CBA1E8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C3D70F9C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C3CBA254(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C3CBA254(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C3DBB228();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C3CBA940(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  id v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C3CBAA10((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C3D70EE8((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C3DBA0A8();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C3DBB3B8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C3DBB3B8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C3D70A34(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1C3D70A34((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            id v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        id v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        char v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unsigned int v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C3CBAA10((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        id v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C3DBB3B8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C3DBAF48();
  __break(1u);
  return result;
}

uint64_t sub_1C3CBA940(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C3DBB3B8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3CBAA10(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C3DBB3B8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C3DBB3B8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1C3D70E2C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

void sub_1C3CBACAC(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  BOOL v65 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1C3DB8B98();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v66 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v64 = &v48[-v14];
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387338);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = &v48[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = v16;
  if (!v16)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_22:
    sub_1C3C2A448((uint64_t)v9, &qword_1EB6FC060);
LABEL_23:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v17 = 0;
  uint64_t v60 = v11 + 56;
  uint64_t v56 = v11 + 48;
  uint64_t v57 = v11 + 16;
  char v67 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32);
  uint64_t v18 = (uint64_t *)(a2 + 40);
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v54 = v10;
  uint64_t v50 = v9;
  uint64_t v51 = v11;
  while (1)
  {
    if (v17 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      sub_1C3DBB538();
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v63 = *(void *)(v11 + 72);
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v11 + 16))(v9, v19 + v63 * v17, v10);
    uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v20(v9, 0, 1, v10);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_22;
    }
    uint64_t v49 = v20;
    uint64_t v21 = *v67;
    (*v67)(v64, v9, v10);
    unint64_t v22 = *(void *)(a2 + 16);
    if (v17 == v22)
    {
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v64, v10);
      goto LABEL_23;
    }
    if (v17 >= v22) {
      goto LABEL_26;
    }
    unint64_t v62 = v17;
    uint64_t v24 = *(v18 - 1);
    uint64_t v23 = *v18;
    uint64_t v25 = v58;
    uint64_t v26 = &v58[*(int *)(v59 + 48)];
    v21(v58, v64, v10);
    uint64_t v61 = v24;
    *uint64_t v26 = v24;
    v26[1] = v23;
    uint64_t v27 = v66;
    uint64_t v28 = v25;
    uint64_t v29 = v23;
    v21(v66, v28, v10);
    uint64_t v30 = (void *)*v65;
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1C3D03C90((uint64_t)v27);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      goto LABEL_27;
    }
    char v36 = v31;
    if (v30[3] < v35) {
      break;
    }
    unint64_t v39 = v62;
    if (a3)
    {
      if (v31) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_1C3D83BAC();
      if (v36) {
        goto LABEL_18;
      }
    }
LABEL_14:
    unint64_t v40 = v66;
    unint64_t v41 = (void *)*v65;
    *(void *)(*v65 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    uint64_t v10 = v54;
    v21((unsigned char *)(v41[6] + v32 * v63), v40, v54);
    id v42 = (void *)(v41[7] + 16 * v32);
    *id v42 = v61;
    v42[1] = v29;
    uint64_t v43 = v41[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_28;
    }
    unint64_t v17 = v39 + 1;
    v41[2] = v45;
    v18 += 2;
    a3 = 1;
    a2 = v52;
    a1 = v53;
    int64_t v9 = v50;
    uint64_t v11 = v51;
    if (v55 == v17)
    {
      v49(v50, 1, 1, v10);
      goto LABEL_22;
    }
  }
  sub_1C3D8545C(v35, a3 & 1);
  unint64_t v37 = sub_1C3D03C90((uint64_t)v66);
  unint64_t v39 = v62;
  if ((v36 & 1) != (v38 & 1)) {
    goto LABEL_29;
  }
  unint64_t v32 = v37;
  if ((v36 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_18:
  uint64_t v46 = (void *)swift_allocError();
  swift_willThrow();
  id v70 = v46;
  id v47 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v66, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_30:
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_1C3DBAC68();
  sub_1C3DB9D68();
  sub_1C3DBAEE8();
  sub_1C3DB9D68();
  sub_1C3DBAF58();
  __break(1u);
}

void sub_1C3CBB2C4(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v54 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v8 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3872F0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = -v14;
  uint64_t v58 = a1;
  uint64_t v59 = a1 + 64;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  uint64_t v60 = v15;
  uint64_t v61 = 0;
  uint64_t v62 = v18 & v16;
  uint64_t v63 = a2;
  uint64_t v64 = 0;
  char v65 = 0;
  swift_bridgeObjectRetain();
  uint64_t v55 = a2;
  swift_bridgeObjectRetain();
  sub_1C3CBC068((uint64_t)v13);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v13, 1, v19) == 1)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3C4C744();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v53 = v8;
  char v20 = a3;
  uint64_t v21 = *(int *)(v19 + 48);
  sub_1C3CC0350((uint64_t)v13, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
  unint64_t v22 = *(void **)&v13[v21];
  uint64_t v23 = (void *)*a4;
  unint64_t v25 = sub_1C3D03C24((uint64_t)v10);
  uint64_t v26 = v23[2];
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char v29 = v24;
  if (v23[3] >= v28)
  {
    if (v20)
    {
      if (v24) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1C3D84400();
      if (v29) {
        goto LABEL_13;
      }
    }
LABEL_16:
    BOOL v34 = (void *)*a4;
    *(void *)(*a4 + 8 * (v25 >> 6) + 64) |= 1 << v25;
    uint64_t v35 = *(void *)(v53 + 72);
    sub_1C3CC0350((uint64_t)v10, v34[6] + v35 * v25, type metadata accessor for NoteEditActivityEvent.Parents);
    *(void *)(v34[7] + 8 * v25) = v22;
    uint64_t v36 = v34[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (!v37)
    {
      _OWORD v34[2] = v38;
      while (1)
      {
        sub_1C3CBC068((uint64_t)v13);
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v13, 1, v39) == 1) {
          goto LABEL_5;
        }
        uint64_t v40 = *(int *)(v39 + 48);
        sub_1C3CC0350((uint64_t)v13, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
        unint64_t v22 = *(void **)&v13[v40];
        unint64_t v41 = (void *)*a4;
        unint64_t v43 = sub_1C3D03C24((uint64_t)v10);
        uint64_t v44 = v41[2];
        BOOL v45 = (v42 & 1) == 0;
        uint64_t v46 = v44 + v45;
        if (__OFADD__(v44, v45)) {
          goto LABEL_26;
        }
        char v47 = v42;
        if (v41[3] < v46)
        {
          sub_1C3D861F0(v46, 1);
          unint64_t v48 = sub_1C3D03C24((uint64_t)v10);
          if ((v47 & 1) != (v49 & 1)) {
            goto LABEL_28;
          }
          unint64_t v43 = v48;
        }
        if (v47) {
          goto LABEL_13;
        }
        uint64_t v50 = (void *)*a4;
        *(void *)(*a4 + 8 * (v43 >> 6) + 64) |= 1 << v43;
        sub_1C3CC0350((uint64_t)v10, v50[6] + v35 * v43, type metadata accessor for NoteEditActivityEvent.Parents);
        *(void *)(v50[7] + 8 * v43) = v22;
        uint64_t v51 = v50[2];
        BOOL v37 = __OFADD__(v51, 1);
        uint64_t v52 = v51 + 1;
        if (v37) {
          goto LABEL_27;
        }
        v50[2] = v52;
      }
    }
    goto LABEL_27;
  }
  sub_1C3D861F0(v28, v20 & 1);
  unint64_t v30 = sub_1C3D03C24((uint64_t)v10);
  if ((v29 & 1) != (v31 & 1))
  {
LABEL_28:
    sub_1C3DBB538();
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v25 = v30;
  if ((v29 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_13:
  unint64_t v32 = (void *)swift_allocError();
  swift_willThrow();
  id v66 = v32;
  id v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3CBECBC((uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
    sub_1C3C4C744();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_29:
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  sub_1C3DBAC68();
  sub_1C3DB9D68();
  sub_1C3DBAEE8();
  sub_1C3DB9D68();
  sub_1C3DBAF58();
  __break(1u);
}

void sub_1C3CBB874(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1C3DBAB38()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_1C3DBAB88();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1C3CBB9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3872D8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v38 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v40 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  int64_t v39 = v41 - 1;
  uint64_t v43 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v19 = 0;
  char v20 = &qword_1EA3872E0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v22 = v21 | (v19 << 6);
LABEL_5:
  uint64_t v23 = v43;
  sub_1C3CBED1C(*(void *)(v43 + 48) + *(void *)(v42 + 72) * v22, (uint64_t)v10, type metadata accessor for NoteEditActivityEvent.Parents);
  uint64_t v24 = *(void *)(*(void *)(v23 + 56) + 8 * v22);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v20);
  *(void *)&v10[*(int *)(v25 + 48)] = v24;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C3CB3BF8((uint64_t)v10, (uint64_t)v12, &qword_1EA3872D8);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v12, 1, v31) == 1)
    {
      swift_release();
      return sub_1C3DBB5E8();
    }
    uint64_t v32 = *(int *)(v31 + 48);
    sub_1C3CC0350((uint64_t)v12, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    id v33 = v20;
    uint64_t v34 = *(void *)&v12[v32];
    uint64_t v35 = *(void *)(a1 + 64);
    long long v36 = *(_OWORD *)(a1 + 16);
    v44[0] = *(_OWORD *)a1;
    v44[1] = v36;
    long long v37 = *(_OWORD *)(a1 + 48);
    void v44[2] = *(_OWORD *)(a1 + 32);
    v44[3] = v37;
    uint64_t v45 = v35;
    NoteEditActivityEvent.Parents.hash(into:)();
    sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent.Parents);
    sub_1C3CBBDF4((uint64_t)v44, v34);
    char v20 = v33;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C3DBB608();
    v18 ^= result;
    if (v16) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 < v41)
    {
      unint64_t v27 = *(void *)(v40 + 8 * v26);
      if (v27) {
        goto LABEL_9;
      }
      int64_t v28 = v19 + 2;
      ++v19;
      if (v26 + 1 < v41)
      {
        unint64_t v27 = *(void *)(v40 + 8 * v28);
        if (v27)
        {
          ++v26;
LABEL_9:
          unint64_t v16 = (v27 - 1) & v27;
          unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
          int64_t v19 = v26;
          goto LABEL_5;
        }
        int64_t v29 = v26 + 2;
        int64_t v19 = v26 + 1;
        if (v26 + 2 < v41) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
    unint64_t v16 = 0;
  }
  unint64_t v27 = *(void *)(v40 + 8 * v29);
  if (v27)
  {
    v26 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v26 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v26 >= v41)
    {
      int64_t v19 = v39;
      goto LABEL_21;
    }
    unint64_t v27 = *(void *)(v40 + 8 * v26);
    ++v29;
    if (v27) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C3CBBDF4(uint64_t a1, uint64_t a2)
{
  sub_1C3DBB608();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAAE8();
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
    sub_1C3CC03B8();
    sub_1C3DBA478();
    a2 = v21;
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    int64_t v5 = v24;
    unint64_t v6 = v25;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v3 = a2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v10 = 0;
  int64_t v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1C3DBAB78()) {
      goto LABEL_26;
    }
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
    swift_dynamicCast();
    uint64_t v15 = v20;
    if (!v20) {
      goto LABEL_26;
    }
    int64_t v14 = v5;
    uint64_t v12 = v6;
LABEL_10:
    uint64_t v17 = sub_1C3DBA8D8();

    v10 ^= v17;
    int64_t v5 = v14;
    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v14 = v5;
LABEL_9:
    uint64_t v15 = *(void **)(*(void *)(a2 + 48) + 8 * v13);
    char v20 = v15;
    id v16 = v15;
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v3 + 8 * v14);
    if (!v18)
    {
      int64_t v14 = v5 + 2;
      if (v5 + 2 >= v11) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v3 + 8 * v14);
      if (!v18)
      {
        int64_t v19 = v5 + 3;
        while (v11 != v19)
        {
          unint64_t v18 = *(void *)(v3 + 8 * v19++);
          if (v18)
          {
            int64_t v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1C3C4C744();
        sub_1C3DBB5E8();
        return;
      }
    }
LABEL_22:
    uint64_t v12 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

id sub_1C3CBC068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3872F8);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (unint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 56) != 1)
  {
    uint64_t v13 = *(void *)v1;
    uint64_t v14 = *(void *)(v1 + 8);
    uint64_t v15 = *(void *)(v1 + 16);
    int64_t v16 = *(void *)(v1 + 24);
    unint64_t v17 = *(void *)(v1 + 32);
    uint64_t v31 = v15;
    uint64_t v32 = a1;
    if (v17)
    {
      uint64_t v18 = (v17 - 1) & v17;
      unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_7:
      sub_1C3CBED1C(*(void *)(v13 + 48) + *(void *)(v7 + 72) * v19, v5, type metadata accessor for NoteEditActivityEvent.Parents);
      (*(void (**)(unint64_t, void, uint64_t, unint64_t))(v7 + 56))(v5, 0, 1, v6);
      int64_t v20 = v16;
      goto LABEL_27;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    int64_t v22 = (unint64_t)(v15 + 64) >> 6;
    int64_t v20 = v16;
    if (v21 < v22)
    {
      unint64_t v23 = *(void *)(v14 + 8 * v21);
      if (v23)
      {
LABEL_11:
        uint64_t v18 = (v23 - 1) & v23;
        unint64_t v19 = __clz(__rbit64(v23)) + (v21 << 6);
        int64_t v16 = v21;
        goto LABEL_7;
      }
      int64_t v24 = v16 + 2;
      int64_t v20 = v16 + 1;
      if (v16 + 2 < v22)
      {
        unint64_t v23 = *(void *)(v14 + 8 * v24);
        if (v23)
        {
LABEL_14:
          int64_t v21 = v24;
          goto LABEL_11;
        }
        int64_t v20 = v16 + 2;
        if (v16 + 3 < v22)
        {
          unint64_t v23 = *(void *)(v14 + 8 * (v16 + 3));
          if (v23)
          {
            int64_t v21 = v16 + 3;
            goto LABEL_11;
          }
          int64_t v24 = v16 + 4;
          int64_t v20 = v16 + 3;
          if (v16 + 4 < v22)
          {
            unint64_t v23 = *(void *)(v14 + 8 * v24);
            if (v23) {
              goto LABEL_14;
            }
            int64_t v21 = v16 + 5;
            int64_t v20 = v16 + 4;
            if (v16 + 5 < v22)
            {
              unint64_t v23 = *(void *)(v14 + 8 * v21);
              if (v23) {
                goto LABEL_11;
              }
              int64_t v20 = v22 - 1;
              int64_t v25 = v16 + 6;
              while (v22 != v25)
              {
                unint64_t v23 = *(void *)(v14 + 8 * v25++);
                if (v23)
                {
                  int64_t v21 = v25 - 1;
                  goto LABEL_11;
                }
              }
            }
          }
        }
      }
    }
    (*(void (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v7 + 56))(v5, 1, 1, v6);
    uint64_t v18 = 0;
LABEL_27:
    *(void *)uint64_t v1 = v13;
    *(void *)(v1 + 8) = v14;
    *(void *)(v1 + 16) = v31;
    *(void *)(v1 + 24) = v20;
    *(void *)(v1 + 32) = v18;
    if ((*(unsigned int (**)(unint64_t, uint64_t, unint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1C3C2A448(v5, &qword_1EA3872F8);
      uint64_t v13 = v32;
LABEL_32:
      *(unsigned char *)(v1 + 56) = 1;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 1, 1, v26);
    }
    id result = (id)sub_1C3CC0350(v5, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
    unint64_t v6 = *(void *)(v1 + 40);
    unint64_t v5 = *(void *)(v1 + 48);
    uint64_t v13 = v32;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C3DBAFB8();
      id result = (id)swift_bridgeObjectRelease();
      if (v5 == v27) {
        goto LABEL_31;
      }
    }
    else if (v5 == *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_31:
      sub_1C3CBECBC((uint64_t)v9, type metadata accessor for NoteEditActivityEvent.Parents);
      goto LABEL_32;
    }
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v5 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id result = *(id *)(v6 + 8 * v5 + 32);
        goto LABEL_38;
      }
      __break(1u);
      goto LABEL_45;
    }
LABEL_42:
    id result = (id)MEMORY[0x1C877C220](v5, v6);
LABEL_38:
    id v28 = result;
    if (!__OFADD__(v5, 1))
    {
      *(void *)(v1 + 48) = v5 + 1;
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
      uint64_t v30 = *(int *)(v29 + 48);
      sub_1C3CC0350((uint64_t)v9, v13, type metadata accessor for NoteEditActivityEvent.Parents);
      *(void *)(v13 + v30) = v28;
      return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 0, 1, v29);
    }
LABEL_45:
    __break(1u);
    return result;
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386E78);
  int64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  return (id)v11(a1, 1, 1, v10);
}

uint64_t sub_1C3CBC548(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s11NotesShared21NoteEditActivityEventV7ParentsO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = (char *)a1;
  uint64_t v62 = (char *)a2;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  uint64_t v60 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v55 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (void **)((char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  int64_t v20 = (void **)((char *)&v55 - v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387308);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  int64_t v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v25 = (void **)&v24[*(int *)(v22 + 56)];
  sub_1C3CBED1C((uint64_t)v61, (uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
  sub_1C3CBED1C((uint64_t)v62, (uint64_t)v25, type metadata accessor for NoteEditActivityEvent.Parents);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C3CBED1C((uint64_t)v24, (uint64_t)v20, type metadata accessor for NoteEditActivityEvent.Parents);
    unint64_t v48 = *v20;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v51 = *v25;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC780);
      char v46 = sub_1C3DBA8E8();

      goto LABEL_11;
    }

    goto LABEL_9;
  }
  uint64_t v61 = v6;
  uint64_t v62 = v14;
  uint64_t v58 = v9;
  uint64_t v26 = v60;
  sub_1C3CBED1C((uint64_t)v24, (uint64_t)v18, type metadata accessor for NoteEditActivityEvent.Parents);
  uint64_t v27 = *v18;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
  uint64_t v29 = *(int *)(v28 + 48);
  uint64_t v30 = (char *)v18 + v29;
  uint64_t v31 = *(int *)(v28 + 64);
  uint64_t v32 = (char *)v18 + v31;
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    char v49 = *(void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v50 = v59;
    v49(v32, v59);
    v49(v30, v50);
LABEL_9:
    sub_1C3C2A448((uint64_t)v24, &qword_1EA387308);
LABEL_15:
    char v46 = 0;
    return v46 & 1;
  }
  id v33 = *v25;
  uint64_t v34 = (char *)v25 + v29;
  uint64_t v56 = (char *)v25 + v31;
  unint64_t v57 = v33;
  uint64_t v35 = v26;
  long long v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  long long v37 = v30;
  uint64_t v38 = v59;
  v36(v62, v37, v59);
  int64_t v39 = v12;
  uint64_t v40 = v38;
  v36(v39, v32, v38);
  int64_t v41 = v58;
  v36(v58, v34, v38);
  uint64_t v42 = (uint64_t)v61;
  v36(v61, v56, v40);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC780);
  uint64_t v43 = v57;
  LOBYTE(v34) = sub_1C3DBA8E8();

  if ((v34 & 1) == 0)
  {
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v52(v42, v40);
    v52((uint64_t)v41, v40);
    v52((uint64_t)v39, v40);
    uint64_t v53 = (uint64_t)v62;
LABEL_14:
    v52(v53, v40);
    sub_1C3CBECBC((uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
    goto LABEL_15;
  }
  uint64_t v44 = (uint64_t)v62;
  if ((sub_1C3DB8B48() & 1) == 0)
  {
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v52((uint64_t)v61, v40);
    v52((uint64_t)v41, v40);
    v52((uint64_t)v39, v40);
    uint64_t v53 = v44;
    goto LABEL_14;
  }
  uint64_t v45 = (uint64_t)v61;
  char v46 = sub_1C3DB8B48();
  char v47 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v47(v45, v40);
  v47((uint64_t)v41, v40);
  v47((uint64_t)v39, v40);
  v47(v44, v40);
LABEL_11:
  sub_1C3CBECBC((uint64_t)v24, type metadata accessor for NoteEditActivityEvent.Parents);
  return v46 & 1;
}

uint64_t _s11NotesShared21NoteEditActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v4 = MEMORY[0x1F4188790](v51);
  unsigned int v6 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = &v45[-v8];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v45[-v11];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = &v45[-v14];
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = &v45[-v17];
  MEMORY[0x1F4188790](v16);
  int64_t v20 = &v45[-v19];
  char v21 = sub_1C3DB8AB8();
  sub_1C3CBED1C(a1, (uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBED1C(a2, (uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
  if ((v21 & 1) == 0) {
    goto LABEL_26;
  }
  char v47 = v15;
  unint64_t v48 = v12;
  char v49 = v9;
  uint64_t v50 = v6;
  uint64_t v22 = *(int *)(v51 + 20);
  int v23 = v20[v22];
  uint64_t v24 = *(void *)&v20[v22 + 8];
  uint64_t v25 = *(void *)&v20[v22 + 16];
  uint64_t v26 = &v18[v22];
  uint64_t v28 = *((void *)v26 + 1);
  uint64_t v27 = *((void *)v26 + 2);
  if (v23) {
    uint64_t v29 = 1702129518;
  }
  else {
    uint64_t v29 = 0x7265646C6F66;
  }
  if (v23) {
    unint64_t v30 = 0xE400000000000000;
  }
  else {
    unint64_t v30 = 0xE600000000000000;
  }
  if (*v26) {
    uint64_t v31 = 1702129518;
  }
  else {
    uint64_t v31 = 0x7265646C6F66;
  }
  if (*v26) {
    unint64_t v32 = 0xE400000000000000;
  }
  else {
    unint64_t v32 = 0xE600000000000000;
  }
  if (v29 == v31 && v30 == v32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_21:
    if (v24 == v28 && v25 == v27)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v9 = v49;
      unsigned int v6 = v50;
      uint64_t v36 = v51;
      uint64_t v15 = v47;
      uint64_t v12 = v48;
    }
    else
    {
      char v35 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v49;
      unsigned int v6 = v50;
      uint64_t v36 = v51;
      uint64_t v15 = v47;
      uint64_t v12 = v48;
      if ((v35 & 1) == 0) {
        goto LABEL_26;
      }
    }
    sub_1C3CBECBC((uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
    sub_1C3CBECBC((uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
    sub_1C3CBED1C(a1, (uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
    sub_1C3CBED1C(a2, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
    uint64_t v38 = *(int *)(v36 + 24);
    uint64_t v39 = *(void *)&v15[v38];
    uint64_t v40 = *(void *)&v15[v38 + 8];
    int64_t v41 = &v12[v38];
    uint64_t v42 = v36;
    if (v39 == *v41 && v40 == v41[1])
    {
      sub_1C3CBECBC((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBECBC((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBED1C(a1, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBED1C(a2, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
    }
    else
    {
      char v43 = sub_1C3DBB3B8();
      sub_1C3CBECBC((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBECBC((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBED1C(a1, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
      sub_1C3CBED1C(a2, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
      char v37 = 0;
      if ((v43 & 1) == 0) {
        goto LABEL_33;
      }
    }
    char v37 = sub_1C3CB8280(*(void *)&v9[*(int *)(v42 + 36)], *(void *)&v6[*(int *)(v42 + 36)]);
    goto LABEL_33;
  }
  int v46 = sub_1C3DBB3B8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v49;
  unsigned int v6 = v50;
  uint64_t v15 = v47;
  uint64_t v12 = v48;
LABEL_26:
  sub_1C3CBECBC((uint64_t)v18, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBECBC((uint64_t)v20, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBED1C(a1, (uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBED1C(a2, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBECBC((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBECBC((uint64_t)v15, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBED1C(a1, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBED1C(a2, (uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
  char v37 = 0;
LABEL_33:
  sub_1C3CBECBC((uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
  sub_1C3CBECBC((uint64_t)v6, type metadata accessor for NoteEditActivityEvent);
  return v37 & 1;
}

id sub_1C3CBD040(unint64_t a1, void *a2, void *a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return (id)MEMORY[0x1E4FBC860];
  }
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C3DBAFB8();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  for (uint64_t i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C877C220](i - 4, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * i);
    }
    uint64_t v8 = v7;
    uint64_t v9 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    id result = objc_msgSend(a3, sel_attributedString);
    if (!result) {
      break;
    }
    uint64_t v11 = result;
    id v12 = objc_msgSend(a2, sel_editsByAddingCheckmarkEditsToEdit_inAttributedString_, v8, result);

    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
    unint64_t v13 = sub_1C3DBA018();

    sub_1C3D78E8C(v13);
    if (v9 == v5)
    {
      swift_bridgeObjectRelease();
      return (id)v15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CBD1D4(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v2, 0);
    uint64_t v3 = v18;
    uint64_t v5 = *(void *)(sub_1C3DB8B98() - 8);
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    do
    {
      uint64_t v8 = (void *)sub_1C3DB8B38();
      id v9 = objc_msgSend(a2, sel_userIDForReplicaID_, v8);

      uint64_t v10 = sub_1C3DB9C38();
      uint64_t v12 = v11;

      unint64_t v14 = *(void *)(v18 + 16);
      unint64_t v13 = *(void *)(v18 + 24);
      if (v14 >= v13 >> 1) {
        sub_1C3C9D1E0(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = v18 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      v6 += v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v137 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v153 = (char *)&v127 - v11;
  uint64_t v12 = sub_1C3DB8B98();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v154 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v147 = (char *)&v127 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v159 = (char *)&v127 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v152 = (char *)&v127 - v21;
  MEMORY[0x1F4188790](v20);
  unint64_t v151 = (char *)&v127 - v22;
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387170);
  uint64_t v139 = *(void *)(v150 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v150);
  uint64_t v140 = (uint64_t)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v149 = (void (**)(char *, uint64_t))((char *)&v127 - v26);
  MEMORY[0x1F4188790](v25);
  unint64_t v157 = (uint64_t *)((char *)&v127 - v27);
  uint64_t v28 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v28);
  unint64_t v30 = (void **)((char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = a2;
  sub_1C3CBED1C(a2, (uint64_t)v30, type metadata accessor for NoteEditActivityEvent.Parents);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v32 = *v30;
  uint64_t v160 = v12;
  uint64_t v158 = v13;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    uint64_t v34 = v13;
    char v35 = (char *)v30 + *(int *)(v33 + 48);
    uint64_t v36 = (char *)v30 + *(int *)(v33 + 64);
    id v37 = objc_msgSend(v32, sel_note);

    uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v36, v12);
    v38(v35, v12);
    unint64_t v32 = v37;
    if (!v37) {
      return MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v39 = v32;
  ActivityEventObject.init(cloudSyncingObject:)(v39);
  if (!v162)
  {

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v133 = v162;
  uint64_t v134 = a4;
  uint64_t v132 = v161[1];
  uint64_t v131 = v161[0];
  id v40 = objc_msgSend(objc_allocWithZone((Class)ICTTTextEditGrouper), sel_initWithNote_, v39);
  id v41 = objc_msgSend(a1, sel_edits);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
  unint64_t v42 = sub_1C3DBA018();

  id v43 = v40;
  id v44 = a1;
  id v45 = sub_1C3CBD040(v42, v43, v44);
  swift_bridgeObjectRelease();
  id v130 = v43;

  uint64_t v128 = (uint64_t)v44;
  unint64_t v129 = (unint64_t)v45;
  v161[0] = sub_1C3CB49F4((unint64_t)v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387310);
  sub_1C3CC0A08();
  sub_1C3CBF14C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
  uint64_t v46 = sub_1C3DB9E98();
  swift_bridgeObjectRelease();
  char v47 = v39;
  uint64_t v48 = sub_1C3CBD1D4(v46, v47);
  uint64_t v135 = 0;
  uint64_t v136 = v47;

  v161[0] = MEMORY[0x1E4FBC860];
  uint64_t v49 = *(void *)(v48 + 16);
  swift_bridgeObjectRetain();
  uint64_t v50 = v158;
  uint64_t v51 = (uint64_t)v153;
  uint64_t v148 = v48;
  v155 = v10;
  if (v49)
  {
    unint64_t v52 = 0;
    uint64_t v144 = v158 + 16;
    v146 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56);
    uint64_t v143 = v158 + 48;
    uint64_t v142 = (void (**)(char *, uint64_t, uint64_t))(v158 + 32);
    v141 = (void (**)(char *, uint64_t))(v158 + 8);
    uint64_t v53 = (void *)(v48 + 40);
    unint64_t v145 = v46;
    do
    {
      if (v52 >= *(void *)(v48 + 16)) {
        goto LABEL_67;
      }
      unint64_t v55 = *(void *)(v46 + 16);
      if (v52 == v55)
      {
        (*v146)(v51, 1, 1, v160);
LABEL_25:
        sub_1C3C2A448(v51, &qword_1EB6FC060);
        break;
      }
      if (v52 >= v55) {
        goto LABEL_68;
      }
      uint64_t v56 = (void (*)(char *, uint64_t))*(v53 - 1);
      uint64_t v57 = *v53;
      unint64_t v58 = v46
          + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))
          + *(void *)(v50 + 72) * v52;
      uint64_t v59 = v160;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v50 + 16))(v51, v58, v160);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v59);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v59) == 1) {
        goto LABEL_25;
      }
      unint64_t v156 = v53;
      uint64_t v60 = v51;
      uint64_t v61 = *v142;
      uint64_t v62 = v151;
      (*v142)(v151, v60, v59);
      uint64_t v63 = (uint64_t)v149;
      uint64_t v64 = (char *)v149 + *(int *)(v150 + 48);
      *unint64_t v149 = v56;
      *(void *)(v63 + 8) = v57;
      v61(v64, (uint64_t)v62, v59);
      char v65 = v157;
      sub_1C3CB3BF8(v63, (uint64_t)v157, &qword_1EA387170);
      uint64_t v66 = *v65;
      uint64_t v67 = v65[1];
      uint64_t v68 = self;
      swift_bridgeObjectRetain();
      id v69 = objc_msgSend(v68, sel_CR_unknown);
      id v70 = v152;
      sub_1C3DB8B58();

      uint64_t v71 = sub_1C3DB8B28();
      uint64_t v73 = v72;
      (*v141)(v70, v59);
      if (v66 == v71 && v67 == v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v145;
      }
      else
      {
        char v74 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        uint64_t v46 = v145;
        if ((v74 & 1) == 0)
        {
          sub_1C3CB3BF8((uint64_t)v157, v140, &qword_1EA387170);
          uint64_t v75 = v161[0];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v54 = v156;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C3C9D388(0, *(void *)(v75 + 16) + 1, 1);
            uint64_t v75 = v161[0];
          }
          uint64_t v48 = v148;
          unint64_t v78 = *(void *)(v75 + 16);
          unint64_t v77 = *(void *)(v75 + 24);
          if (v78 >= v77 >> 1)
          {
            sub_1C3C9D388(v77 > 1, v78 + 1, 1);
            uint64_t v75 = v161[0];
          }
          *(void *)(v75 + 16) = v78 + 1;
          sub_1C3CB3BF8(v140, v75+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v78, &qword_1EA387170);
          uint64_t v50 = v158;
          uint64_t v51 = (uint64_t)v153;
          goto LABEL_8;
        }
      }
      sub_1C3C2A448((uint64_t)v157, &qword_1EA387170);
      uint64_t v50 = v158;
      uint64_t v51 = (uint64_t)v153;
      uint64_t v48 = v148;
      uint64_t v54 = v156;
LABEL_8:
      ++v52;
      uint64_t v53 = v54 + 2;
    }
    while (v49 != v52);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v80 = v135;
  unint64_t v157 = (uint64_t *)sub_1C3CB4C1C(v161[0]);
  swift_release();
  v161[0] = MEMORY[0x1E4FBC860];
  if (v49)
  {
    unint64_t v156 = v80;
    uint64_t v81 = self;
    uint64_t v82 = (void (**)(char *, uint64_t))(v50 + 8);
    unint64_t v83 = (uint64_t *)(v48 + 40);
    do
    {
      uint64_t v85 = *(v83 - 1);
      uint64_t v84 = *v83;
      swift_bridgeObjectRetain();
      id v86 = objc_msgSend(v81, sel_CR_unknown);
      uint64_t v87 = v159;
      sub_1C3DB8B58();

      uint64_t v88 = sub_1C3DB8B28();
      uint64_t v90 = v89;
      (*v82)(v87, v160);
      if (v85 == v88 && v84 == v90)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v92 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        if (v92)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v93 = v161[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C3C9D1E0(0, *(void *)(v93 + 16) + 1, 1);
            uint64_t v93 = v161[0];
          }
          unint64_t v95 = *(void *)(v93 + 16);
          unint64_t v94 = *(void *)(v93 + 24);
          if (v95 >= v94 >> 1)
          {
            sub_1C3C9D1E0(v94 > 1, v95 + 1, 1);
            uint64_t v93 = v161[0];
          }
          *(void *)(v93 + 16) = v95 + 1;
          uint64_t v96 = v93 + 16 * v95;
          *(void *)(v96 + 32) = v85;
          *(void *)(v96 + 40) = v84;
        }
      }
      v83 += 2;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    uint64_t v97 = v161[0];
    uint64_t v50 = v158;
    uint64_t v80 = v156;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v97 = MEMORY[0x1E4FBC860];
  }
  uint64_t v98 = (uint64_t)v157;
  if (*(void *)(v97 + 16) >= (unint64_t)v157[2]) {
    uint64_t v99 = v157[2];
  }
  else {
    uint64_t v99 = *(void *)(v97 + 16);
  }
  if (v99)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387320);
    uint64_t v100 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v100 = MEMORY[0x1E4FBC868];
  }
  unint64_t v101 = v147;
  v161[0] = v100;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1C3CBACAC(v98, v97, 1, v161);
  if (v80) {
    goto LABEL_69;
  }
  uint64_t v148 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  v146 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v161[0];
  v161[0] = MEMORY[0x1E4FBC860];
  id v102 = *(void **)(v98 + 16);
  uint64_t v159 = v136;
  unint64_t v156 = v102;
  if (!v102)
  {
    uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    uint64_t v105 = v160;
LABEL_63:
    uint64_t v108 = (uint64_t)v155;
    v109(v155, 1, 1, v105);
LABEL_64:
    swift_bridgeObjectRelease();
    sub_1C3C2A448(v108, &qword_1EB6FC060);
    id v119 = v159;

    uint64_t v120 = sub_1C3C63BE0(v161[0]);
    uint64_t v121 = swift_release();
    MEMORY[0x1F4188790](v121);
    unint64_t v122 = v130;
    *(&v127 - 10) = v120;
    *(&v127 - 9) = (uint64_t)v122;
    uint64_t v123 = v137;
    *(&v127 - 8) = (uint64_t)v146;
    *(&v127 - 7) = v123;
    *(&v127 - 6) = v128;
    *((unsigned char *)&v127 - 40) = v131 & 1;
    uint64_t v124 = v133;
    *(&v127 - 4) = v132;
    *(&v127 - 3) = v124;
    uint64_t v125 = v138;
    *(&v127 - 2) = v134;
    *(&v127 - 1) = v125;
    unint64_t v79 = sub_1C3CEC3A0((void (*)(id *))sub_1C3CC0A64, (uint64_t)(&v127 - 12), v129);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease();
    return v79;
  }
  unint64_t v103 = 0;
  unint64_t v151 = (char *)(v50 + 48);
  uint64_t v104 = (void (**)(char *, uint64_t, uint64_t))(v50 + 32);
  unint64_t v149 = (void (**)(char *, uint64_t))(v50 + 8);
  unint64_t v152 = (char *)(v50 + 56);
  v153 = (char *)(v50 + 16);
  unint64_t v145 = (v50 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v105 = v160;
  uint64_t v150 = v50 + 32;
  while (v103 < *(void *)(v98 + 16))
  {
    unint64_t v106 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v107 = *(void *)(v50 + 72);
    uint64_t v108 = (uint64_t)v155;
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v155, v98 + v106 + v107 * v103, v105);
    uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    v109((char *)v108, 0, 1, v105);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v108, 1, v105) == 1) {
      goto LABEL_64;
    }
    unint64_t v110 = *v104;
    (*v104)(v101, v108, v105);
    uint64_t v111 = v101;
    uint64_t v112 = (void *)sub_1C3DB8B38();
    unsigned int v113 = objc_msgSend(v159, sel_trustsTimestampsFromReplicaID_, v112);

    if (v113)
    {
      v110(v154, (uint64_t)v111, v105);
      uint64_t v114 = v161[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D34C(0, *(void *)(v114 + 16) + 1, 1);
        uint64_t v114 = v161[0];
      }
      unint64_t v116 = *(void *)(v114 + 16);
      unint64_t v115 = *(void *)(v114 + 24);
      uint64_t v117 = (uint64_t)v157;
      if (v116 >= v115 >> 1)
      {
        sub_1C3C9D34C(v115 > 1, v116 + 1, 1);
        uint64_t v114 = v161[0];
      }
      *(void *)(v114 + 16) = v116 + 1;
      unint64_t v118 = v114 + v106 + v116 * v107;
      uint64_t v105 = v160;
      uint64_t v104 = (void (**)(char *, uint64_t, uint64_t))v150;
      v110((char *)v118, (uint64_t)v154, v160);
      v161[0] = v114;
      unint64_t v101 = v147;
      uint64_t v98 = v117;
    }
    else
    {
      (*v149)(v111, v105);
      unint64_t v101 = v111;
      uint64_t v98 = (uint64_t)v157;
    }
    ++v103;
    uint64_t v50 = v158;
    if (v156 == (void *)v103) {
      goto LABEL_63;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C3CBE20C(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v42 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = (char *)v42 - v15;
  uint64_t v16 = type metadata accessor for NoteEditActivityEvent(0) - 8;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v52 = (uint64_t)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v42 - v20;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v55 = MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v24 = *(unsigned __int8 *)(v19 + 80);
    v42[1] = v2;
    uint64_t v43 = (v24 + 32) & ~v24;
    uint64_t v25 = a1 + v43;
    uint64_t v26 = *(void *)(v19 + 72);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v49 = v26;
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    char v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    id v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v50 = v7;
    uint64_t v51 = a2;
    uint64_t v53 = v14;
    uint64_t v28 = a2;
    while (1)
    {
      sub_1C3CBED1C(v25, (uint64_t)v21, type metadata accessor for NoteEditActivityEvent);
      (*v48)(v54, v21, v8);
      id v30 = objc_msgSend(v28, sel_lastActivityRecentUpdatesViewedDate);
      if (!v30) {
        break;
      }
      uint64_t v31 = v30;
      unint64_t v32 = v45;
      sub_1C3DB8AC8();

      uint64_t v33 = *v46;
      uint64_t v34 = v32;
      uint64_t v14 = v53;
      (*v46)(v7, v34, v8);
      (*v47)(v7, 0, 1, v8);
      if ((*v44)(v7, 1, v8) == 1) {
        goto LABEL_9;
      }
      v33(v14, v7, v8);
LABEL_10:
      char v35 = v54;
      char v36 = sub_1C3DB8A98();
      id v37 = *v27;
      (*v27)(v14, v8);
      v37(v35, v8);
      if (v36)
      {
        sub_1C3CC0350((uint64_t)v21, v52, type metadata accessor for NoteEditActivityEvent);
        uint64_t v38 = v55;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v49;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C3C9D3A8(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v55;
        }
        unint64_t v41 = *(void *)(v38 + 16);
        unint64_t v40 = *(void *)(v38 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_1C3C9D3A8(v40 > 1, v41 + 1, 1);
          uint64_t v38 = v55;
        }
        *(void *)(v38 + 16) = v41 + 1;
        sub_1C3CC0350(v52, v38 + v43 + v41 * v29, type metadata accessor for NoteEditActivityEvent);
        uint64_t v28 = v51;
        uint64_t v14 = v53;
      }
      else
      {
        sub_1C3CBECBC((uint64_t)v21, type metadata accessor for NoteEditActivityEvent);
        uint64_t v28 = v51;
        uint64_t v29 = v49;
      }
      v25 += v29;
      --v23;
      uint64_t v7 = v50;
      if (!v23) {
        return v55;
      }
    }
    (*v47)(v7, 1, 1, v8);
LABEL_9:
    sub_1C3DB8998();
    sub_1C3C2A448((uint64_t)v7, &qword_1EB6FB1B8);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1C3CBE6CC(uint64_t a1, void *a2)
{
  id v31 = a2;
  uint64_t v30 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v4 = MEMORY[0x1F4188790](v30);
  uint64_t v32 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = *(void *)(v6 + 72);
    v28[1] = v2;
    uint64_t v29 = (v11 + 32) & ~v11;
    uint64_t v13 = a1 + v29;
    while (1)
    {
      sub_1C3CBED1C(v13, (uint64_t)v8, type metadata accessor for NoteEditActivityEvent);
      uint64_t v14 = &v8[*(int *)(v30 + 24)];
      uint64_t v16 = *(void *)v14;
      uint64_t v15 = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      id v17 = objc_msgSend(v31, sel_cloudAccount);
      if (!v17) {
        break;
      }
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_userRecordName);

      uint64_t v20 = sub_1C3DB9C38();
      uint64_t v22 = v21;

      if (v16 == v20 && v15 == v22)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0) {
          goto LABEL_14;
        }
      }
      sub_1C3CBECBC((uint64_t)v8, type metadata accessor for NoteEditActivityEvent);
LABEL_5:
      v13 += v12;
      if (!--v10) {
        return v33;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1C3CC0350((uint64_t)v8, v32, type metadata accessor for NoteEditActivityEvent);
    uint64_t v25 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C3C9D3A8(0, *(void *)(v25 + 16) + 1, 1);
      uint64_t v25 = v33;
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1C3C9D3A8(v26 > 1, v27 + 1, 1);
      uint64_t v25 = v33;
    }
    *(void *)(v25 + 16) = v27 + 1;
    sub_1C3CC0350(v32, v25 + v29 + v27 * v12, type metadata accessor for NoteEditActivityEvent);
    goto LABEL_5;
  }
  return result;
}

uint64_t _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&aBlock[-1] - v11;
  id v13 = objc_msgSend(a1, sel_attachmentModel);
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = (void *)v14;
  uint64_t v31 = MEMORY[0x1E4FBC860];
  id v16 = v13;
  id v17 = objc_msgSend(v15, sel_table);
  sub_1C3C376DC(a2, (uint64_t)v12);
  sub_1C3C376DC(a3, (uint64_t)v10);
  uint64_t v18 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = (v18 + 40) & ~v18;
  uint64_t v20 = (v8 + v18 + v19) & ~v18;
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v15;
  v21[3] = a1;
  void v21[4] = &v31;
  sub_1C3CB3BF8((uint64_t)v12, (uint64_t)v21 + v19, &qword_1EB6FB1B8);
  sub_1C3CB3BF8((uint64_t)v10, (uint64_t)v21 + v20, &qword_1EB6FB1B8);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1C3CC05AC;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = sub_1C3CC067C;
  void aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1C3CB93BC;
  aBlock[3] = &block_descriptor_7;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v16;
  id v25 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_enumerateColumnsWithBlock_, v23);

  _Block_release(v23);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v28 = v31;
    swift_release();
    return v28;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NoteEditActivityEvent(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FBF48);
}

uint64_t sub_1C3CBECBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C3CBED1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_1C3CBED84(uint64_t a1, uint64_t a2)
{
  return sub_1C3CB8120(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C3CBED8C(uint64_t a1, uint64_t (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3872E0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = type metadata accessor for NoteEditActivityEvent.Parents(0);
    sub_1C3CBED1C(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v15, (uint64_t)v7, type metadata accessor for NoteEditActivityEvent.Parents);
    uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v15);
    *(void *)&v7[*(int *)(v5 + 48)] = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = a2(v7, v21);
    uint64_t result = sub_1C3C2A448((uint64_t)v7, &qword_1EA3872E0);
    if (v22)
    {
      MEMORY[0x1C877B4F0](result);
      if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C3DBA068();
      }
      sub_1C3DBA0C8();
      uint64_t result = sub_1C3DBA038();
    }
  }
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 >= v25) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v24 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v25) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v24 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v25) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v24 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 3;
  if (v16 + 3 >= v25) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v24 + 8 * v13);
  if (v17)
  {
LABEL_21:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v25)
  {
LABEL_26:
    swift_release();
    return v27;
  }
  unint64_t v17 = *(void *)(v24 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v25) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v24 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C3CBF054(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 >= v3) {
    uint64_t v4 = v3;
  }
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E80);
    uint64_t v5 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC868];
  }
  uint64_t v8 = v5;
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1C3CBB2C4(v6, a2, 1, &v8);
  return v8;
}

uint64_t sub_1C3CBF14C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CBF194()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1C3CBF1D8()
{
  unint64_t result = qword_1EA3872C0;
  if (!qword_1EA3872C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3872C0);
  }
  return result;
}

uint64_t sub_1C3CBF22C()
{
  return sub_1C3CBF14C(&qword_1EA3872C8, (void (*)(uint64_t))type metadata accessor for NoteEditActivityEvent.Parents);
}

uint64_t sub_1C3CBF274()
{
  return sub_1C3CBF14C(&qword_1EA3872D0, (void (*)(uint64_t))type metadata accessor for NoteEditActivityEvent);
}

void *initializeBufferWithCopyOfBuffer for NoteEditActivityEvent(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8AF8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    unint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    int64_t v13 = (void *)((char *)a1 + v9);
    unint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *int64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    id v13[2] = v14[2];
    v13[3] = v16;
    uint64_t v17 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NoteEditActivityEvent(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = (void *)(a1 + v8);
  int64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  unint64_t v12[2] = v13[2];
  uint64_t v12[3] = v15;
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[2] = *(void *)(v12 + 16);
  v11[3] = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (_OWORD *)(a1 + v8);
  uint64_t v12 = (_OWORD *)(a2 + v8);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for NoteEditActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *long long v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  id v13[2] = *(void *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoteEditActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3CBF8A0);
}

uint64_t sub_1C3CBF8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NoteEditActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3CBF978);
}

uint64_t sub_1C3CBF978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C3CBFA38()
{
  uint64_t result = sub_1C3DB8AF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NoteEditActivityEvent.Kinds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CBFBBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteEditActivityEvent.Kinds()
{
  return &type metadata for NoteEditActivityEvent.Kinds;
}

char *initializeBufferWithCopyOfBuffer for NoteEditActivityEvent.Parents(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    uint64_t v8 = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C3DB8B98();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      v14(&a1[*(int *)(v9 + 64)], (char *)a2 + *(int *)(v9 + 64), v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for NoteEditActivityEvent.Parents(id *a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();

  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    unsigned int v4 = (char *)a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1C3DB8B98();
    uint64_t v7 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
    ((void (*)(void *__return_ptr, char *, uint64_t))v7)((void *)(v5 - 8), v4, v5);
    unsigned int v6 = (char *)a1 + *(int *)(v3 + 64);
    v7(v6, v5);
  }
}

void **initializeWithCopy for NoteEditActivityEvent.Parents(void **a1, void **a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *a2;
  *a1 = *a2;
  id v6 = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C3DB8B98();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((char *)a1 + *(int *)(v7 + 64), (char *)a2 + *(int *)(v7 + 64), v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for NoteEditActivityEvent.Parents(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C3CBECBC((uint64_t)a1, type metadata accessor for NoteEditActivityEvent.Parents);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = *a2;
    *a1 = *a2;
    id v6 = v5;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C3DB8B98();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v9, v10, v11);
      v12((char *)a1 + *(int *)(v7 + 64), (char *)a2 + *(int *)(v7 + 64), v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for NoteEditActivityEvent.Parents(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_1C3DB8B98();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v11(&a1[*(int *)(v6 + 64)], &a2[*(int *)(v6 + 64)], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for NoteEditActivityEvent.Parents(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3CBECBC((uint64_t)a1, type metadata accessor for NoteEditActivityEvent.Parents);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_1C3DB8B98();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v11(&a1[*(int *)(v6 + 64)], &a2[*(int *)(v6 + 64)], v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C3CC029C()
{
  v2[4] = MEMORY[0x1E4FBAD78] + 64;
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C3CC0350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C3CC03B8()
{
  unint64_t result = qword_1EA3872E8;
  if (!qword_1EA3872E8)
  {
    sub_1C3C4C8B4(255, (unint64_t *)&qword_1EA388EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3872E8);
  }
  return result;
}

uint64_t sub_1C3CC0420(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3CC042C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (!v9(v0 + v5, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v5, v7);
  }
  return MEMORY[0x1F4186498](v0, v5 + v4, v2 | 7);
}

uint64_t sub_1C3CC05AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8) - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 40) & ~v8;
  uint64_t v10 = (void *)v3[2];
  uint64_t v11 = (void *)v3[3];
  uint64_t v12 = v3[4];
  uint64_t v13 = (uint64_t)v3 + ((*(void *)(v7 + 64) + v8 + v9) & ~v8);
  return sub_1C3CB8E58(a1, a2, a3, v10, v11, v12, (uint64_t)v3 + v9, v13);
}

uint64_t sub_1C3CC066C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CC067C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3CC06A4()
{
  uint64_t v1 = sub_1C3DB8B98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  unint64_t v10 = (v9 + v7 + v8) & ~v7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = v0 + v8;
  uint64_t v12 = sub_1C3DB8AF8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  if (!v14(v0 + v10, 1, v12)) {
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v10, v12);
  }
  return MEMORY[0x1F4186498](v0, v10 + v9, v3 | v7 | 7);
}

void sub_1C3CC08B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1C3DB8B98() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8) - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  sub_1C3CB91D4(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(void **)(v3 + v9), *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11), v3 + ((*(void *)(v10 + 64) + v11 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 8) & ~v11)) & ~v11));
}

uint64_t sub_1C3CC09F8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C3CC0A08()
{
  unint64_t result = qword_1EA387318;
  if (!qword_1EA387318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA387310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387318);
  }
  return result;
}

id sub_1C3CC0A64@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CB94C0(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(void *)(v2 + 64), a2, *(char **)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1C3CC0AB8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C3C9D200(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (void *)(a1 + 48);
    do
    {
      uint64_t v5 = sub_1C3CC427C(*(v4 - 2), *(v4 - 1), v4);
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_1C3C9D200(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      v4 += 7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3CC0B8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C3C9D200(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = v4[1];
      unint64_t v8 = v4[2];
      uint64_t v9 = v4[3];
      uint64_t v10 = v4[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C3CC3C34(v5, v6, v7, v8, v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C3C9D200(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v15 + 16) = v13 + 1;
      *(void *)(v15 + 8 * v13 + 32) = v11;
      v4 += 6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3CC0CB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1C3C9D1E0(v7 > 1, v8 + 1, 1);
      }
      v4 += 6;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3CC0D8C(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v32 = (*(uint64_t (**)(void))(a2 + 16))();
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v5 = sub_1C3DBA128();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870B0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1C3C34894((void (*)(char *, char *))sub_1C3CC5768, (uint64_t)v25, v5, v6, v7, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v28);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v12 = *(void *)(v9 + 16);
    if (v12)
    {
      unint64_t v13 = 0;
      uint64_t v14 = v9 + 32;
      while (v13 < *(void *)(v9 + 16))
      {
        sub_1C3CC5788(v14, (uint64_t)&v32);
        uint64_t v15 = *((void *)&v34 + 1);
        uint64_t v16 = v35;
        __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16))
        {
          uint64_t result = sub_1C3C2A448((uint64_t)&v32, &qword_1EA3870B0);
        }
        else
        {
          long long v28 = v32;
          long long v29 = v33;
          long long v30 = v34;
          uint64_t v31 = v35;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_1C3C9D2B0(0, *(void *)(v11 + 16) + 1, 1);
          }
          uint64_t v11 = v36;
          unint64_t v18 = *(void *)(v36 + 16);
          unint64_t v17 = *(void *)(v36 + 24);
          if (v18 >= v17 >> 1)
          {
            uint64_t result = sub_1C3C9D2B0(v17 > 1, v18 + 1, 1);
            uint64_t v11 = v36;
          }
          *(void *)(v11 + 16) = v18 + 1;
          uint64_t v19 = v11 + 56 * v18;
          *(_OWORD *)(v19 + 32) = v28;
          *(_OWORD *)(v19 + 48) = v29;
          *(_OWORD *)(v19 + 64) = v30;
          *(void *)(v19 + 80) = v31;
        }
        ++v13;
        v14 += 56;
        if (v12 == v13) {
          goto LABEL_13;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (!*(void *)(v11 + 16))
    {
      swift_release();
      return 0;
    }
    uint64_t v20 = sub_1C3CC0AB8(v11);
    swift_release();
    *(void *)&long long v28 = 0;
    *((void *)&v28 + 1) = 0xE000000000000000;
    *(void *)&long long v32 = 0;
    *((void *)&v32 + 1) = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v36 = 1;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    long long v28 = v32;
    sub_1C3DB9D68();
    *(void *)&long long v32 = 0;
    *((void *)&v32 + 1) = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v36 = 0;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t v21 = sub_1C3D783FC(v20);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = v21 + 32;
      unint64_t v24 = *(void *)(*(void *)(v21 + 32) + 16);
      while (*(void *)(*(void *)v23 + 16) == v24)
      {
        v23 += 8;
        if (!--v22) {
          goto LABEL_21;
        }
      }
LABEL_23:
      __break(1u);
      return result;
    }
    unint64_t v24 = 0;
LABEL_21:
    long long v32 = v24;
    *(void *)&long long v33 = v21;
    BYTE8(v33) = 0;
    *(void *)&long long v34 = 64;
    BYTE8(v34) = 0;
    sub_1C3C7B51C();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_1C3CC1210(uint64_t a1, uint64_t a2)
{
  Commands.defaultCommand()(a1, a2, v24);
  if (!v3)
  {
    uint64_t v6 = v25;
    uint64_t v7 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      uint64_t v12 = v25;
      uint64_t v13 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
    }
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    uint64_t v16 = sub_1C3CC39CC(v14, v15);
    uint64_t v18 = HIBYTE(v17) & 0xF;
    if ((v17 & 0x2000000000000000) == 0) {
      uint64_t v18 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v18)
    {
      sub_1C3DBAC68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 1;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 32))(a1);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      uint64_t v19 = v25;
      uint64_t v20 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C3DBAC68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 1;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 32))(a1);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      uint64_t v21 = v25;
      uint64_t v22 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 2;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v27 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
    }
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t v2 = 0;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  }
  return v2;
}

uint64_t sub_1C3CC1A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  uint64_t v5 = v4(a1, v3);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v3);
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    v4(a1, v3);
  }
  else
  {
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v3);
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
  }
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C3CC1DB0()
{
  return 0;
}

uint64_t sub_1C3CC3590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C3DBB668();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[3] = a1;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  sub_1C3DBB618();
  uint64_t v11 = sub_1C3DBB658();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = sub_1C3CC3750(v3, a1, a2);
  sub_1C3CC44D4(v11, (void (*)(void *__return_ptr, void, void, _OWORD *))v12);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DE0);
  uint64_t v13 = sub_1C3DBA078();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t (*sub_1C3CC3750(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1C3CC52C8;
}

uint64_t sub_1C3CC3870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v9[0] = a1;
  v9[1] = a2;
  sub_1C3C4BC70(a3, (uint64_t)v10);
  sub_1C3C4BC70((uint64_t)v10, (uint64_t)v8);
  swift_bridgeObjectRetain();
  sub_1C3CC5308(a1, a2, (uint64_t)v8, v11);
  sub_1C3C2A448((uint64_t)v9, &qword_1EA387348);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  return sub_1C3CC517C((uint64_t)v11, a4);
}

uint64_t sub_1C3CC3938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C3CC3590(a1, a2);
  sub_1C3CC0CB4(v2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3CC51E4();
  uint64_t v3 = sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C3CC39CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C3CC3590(a1, a2);
  uint64_t v3 = sub_1C3CC0B8C(v2);
  swift_bridgeObjectRelease();
  sub_1C3DBAC68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v4 = sub_1C3D783FC(v3);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = v4 + 32;
    while (*(void *)(*(void *)v7 + 16) == *(void *)(*(void *)(v4 + 32) + 16))
    {
      v7 += 8;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    sub_1C3C7B51C();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1C3CC3C34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C3DB9D68();
  if (a6)
  {
    sub_1C3C2A4A4();
    uint64_t v9 = sub_1C3DBA9D8();
    int64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v20 = MEMORY[0x1E4FBC860];
      sub_1C3C9D1E0(0, v10, 0);
      uint64_t v11 = v9 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        unint64_t v13 = *(void *)(v20 + 16);
        unint64_t v12 = *(void *)(v20 + 24);
        if (v13 >= v12 >> 1) {
          sub_1C3C9D1E0(v12 > 1, v13 + 1, 1);
        }
        v11 += 16;
        *(void *)(v20 + 16) = v13 + 1;
        uint64_t v14 = v20 + 16 * v13;
        *(void *)(v14 + 32) = 0x2020202020202020;
        *(void *)(v14 + 40) = 0xE800000000000000;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3CC51E4();
    sub_1C3DB9B88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C3DD5130;
    *(void *)(v16 + 32) = 538976288;
    *(void *)(v16 + 40) = 0xE400000000000000;
    *(void *)(v16 + 48) = 0;
    *(void *)(v16 + 56) = 0xE000000000000000;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_1C3DD5130;
    *(void *)(v15 + 32) = 538976288;
    *(void *)(v15 + 40) = 0xE400000000000000;
    if (a4) {
      uint64_t v17 = a3;
    }
    else {
      uint64_t v17 = 0;
    }
    unint64_t v18 = 0xE000000000000000;
    if (a4) {
      unint64_t v18 = a4;
    }
    *(void *)(v15 + 48) = v17;
    *(void *)(v15 + 56) = v18;
    swift_bridgeObjectRetain();
  }
  return v16;
}

uint64_t AnyCommand.argumentSummary(for:name:includingType:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_1C3CC4D90(a1, a2, a3, a4, v7);
  return sub_1C3CC517C((uint64_t)v7, a5);
}

uint64_t sub_1C3CC4050()
{
  uint64_t v1 = _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C3CC41D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X8>)
{
  uint64_t v9 = a4 + 2;
  *a4 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 32))(a1);
  a4[1] = v10;
  uint64_t result = (uint64_t)Commands.defaultCommand()(a1, a2, v9);
  if (v4)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1C3CC427C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9C98();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v4 = a3[3];
  uint64_t v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  sub_1C3CC3938(v4, v5);
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3DD5130;
  *(void *)(v6 + 32) = 538976288;
  *(void *)(v6 + 40) = 0xE400000000000000;
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  *(void *)(v6 + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  *(void *)(v6 + 56) = v9;
  return v6;
}

void *sub_1C3CC44D4(uint64_t a1, void (*a2)(void *__return_ptr, void, void, _OWORD *))
{
  swift_retain();
  sub_1C3DBAEA8();
  swift_release();
  sub_1C3DBB018();
  if (*((void *)&v21 + 1))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      long long v17 = v19;
      v18[0] = v20;
      v18[1] = v21;
      a2(v22, v19, *((void *)&v19 + 1), v18);
      if (v2) {
        break;
      }
      uint64_t v7 = v22[0];
      uint64_t v6 = v22[1];
      uint64_t v8 = v22[2];
      uint64_t v9 = v22[3];
      uint64_t v11 = v22[4];
      uint64_t v10 = v22[5];
      sub_1C3C2A448((uint64_t)&v17, &qword_1EA387348);
      sub_1C3CC517C((uint64_t)v22, (uint64_t)v23);
      if (v24)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v3 = sub_1C3D82620(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1C3D82620((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v4 = &v3[6 * v14];
        v4[4] = v7;
        v4[5] = v6;
        v4[6] = v8;
        v4[7] = v9;
        uint64_t v5 = v25;
        v4[8] = v11;
        v4[9] = v5;
      }
      sub_1C3DBB018();
      if (!*((void *)&v21 + 1)) {
        goto LABEL_13;
      }
    }
    sub_1C3C2A448((uint64_t)&v17, &qword_1EA387348);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
LABEL_13:
  swift_release();
  return v3;
}

uint64_t sub_1C3CC4694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(void))(a2 + 24);
  uint64_t v7 = *(void *)(v6() + 16);
  swift_bridgeObjectRelease();
  if (v7)
  {
    ((void (*)(uint64_t, uint64_t))v6)(a1, a2);
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3CC51E4();
    sub_1C3DB9B88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3DBAC68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t))(a2 + 8))(a1);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  }
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = result;
  a3[3] = v9;
  a3[4] = 0;
  a3[5] = 0;
  return result;
}

uint64_t sub_1C3CC4D90@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11))
  {
    unint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t result = 0;
    uint64_t v16 = 0;
  }
  else
  {
    if (a4)
    {
      uint64_t v17 = a1[3];
      uint64_t v18 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 72))(a2, a3, v17, v18);
    }
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xE000000000000000;
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
    uint64_t v14 = v21;
    uint64_t v22 = a1[3];
    uint64_t v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  }
  *a5 = 0;
  a5[1] = v12;
  a5[2] = v13;
  a5[3] = v14;
  a5[4] = result;
  a5[5] = v16;
  return result;
}

uint64_t sub_1C3CC517C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C3CC51E4()
{
  unint64_t result = qword_1EA385FC0;
  if (!qword_1EA385FC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EA386E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385FC0);
  }
  return result;
}

uint64_t sub_1C3CC5240()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C3CC52C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3CC3870(a1, a2, a3, a4);
}

uint64_t sub_1C3CC5308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = a1;
  v42[0] = a1;
  v42[1] = a2;
  sub_1C3C4BC70(a3, (uint64_t)v43);
  sub_1C3C4BC70((uint64_t)v43, (uint64_t)v41);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387350);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387358);
    if (swift_dynamicCast())
    {
      sub_1C3C4C684(&v40, (uint64_t)v37);
      if (a2)
      {
        uint64_t v44 = v5;
        uint64_t v45 = a2;
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1C3DB9E78();
        uint64_t v15 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v13, v14);
        sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v15, v16);
        swift_bridgeObjectRelease();
        uint64_t v17 = sub_1C3DB9C98();
        unint64_t v19 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v20 = sub_1C3CD2318(1uLL, v17, v19);
        uint64_t v22 = v21;
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        uint64_t v5 = MEMORY[0x1C877B1D0](v20, v22, v24, v26);
        uint64_t v10 = v27;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = 0;
      }
      uint64_t v28 = v38;
      uint64_t v29 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      if (v31)
      {
        uint64_t v32 = v30;
        uint64_t v33 = v31;
        swift_bridgeObjectRelease();
        uint64_t v5 = v32;
        uint64_t v10 = v33;
LABEL_12:
        uint64_t v44 = v5;
        uint64_t v45 = v10;
        uint64_t v34 = sub_1C3DB9E78();
        sub_1C3CC4D90(v37, v34, v35, 1, &v44);
        uint64_t v7 = v44;
        uint64_t v8 = v45;
        uint64_t v9 = v46;
        uint64_t v10 = v47;
        uint64_t v11 = v48;
        uint64_t v12 = v49;
        swift_bridgeObjectRelease();
        sub_1C3C2A448((uint64_t)v42, &qword_1EA387348);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
        goto LABEL_13;
      }
      if (v10) {
        goto LABEL_12;
      }
      sub_1C3C2A448((uint64_t)v42, &qword_1EA387348);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
    else
    {
      sub_1C3C2A448((uint64_t)v42, &qword_1EA387348);
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    goto LABEL_13;
  }
  sub_1C3CC4694(v40, *((uint64_t *)&v40 + 1), &v44);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v9 = v46;
  uint64_t v10 = v47;
  uint64_t v11 = v48;
  uint64_t v12 = v49;
  sub_1C3C2A448((uint64_t)v42, &qword_1EA387348);
LABEL_13:
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
  *a4 = v7;
  a4[1] = v8;
  a4[2] = v9;
  a4[3] = v10;
  a4[4] = v11;
  a4[5] = v12;
  return result;
}

uint64_t sub_1C3CC5768@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1C3CC41D8(*(void *)(v2 + 16), *(void *)(v2 + 24), a1, a2);
}

uint64_t sub_1C3CC5788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3CC57F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C3DB8298();
  if (!v4)
  {
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_13:
    sub_1C3CC623C((uint64_t)&v19);
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  sub_1C3DB9C38();
  sub_1C3DBABD8();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1C3D03DC8((uint64_t)v18), (v7 & 1) != 0))
  {
    sub_1C3C4BC70(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C3CC629C((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387378);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    uint64_t v13 = sub_1C3DB82A8();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
    goto LABEL_15;
  }
  uint64_t v8 = v18[0];
  uint64_t v9 = sub_1C3DB8298();
  if (!v9)
  {
    uint64_t v17 = sub_1C3DB82A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C3CC623C((uint64_t)&v19);
    goto LABEL_15;
  }
  uint64_t v10 = v9;
  sub_1C3DB9C38();
  sub_1C3DBABD8();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1C3D03DC8((uint64_t)v18), (v12 & 1) != 0))
  {
    sub_1C3C4BC70(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1C3DB82A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  sub_1C3CC629C((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_22;
  }
  sub_1C3CC62F0();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v16 = v18[0];
    *a2 = v8;
    a2[1] = v16;
    return result;
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t ICCloudConfiguration.Snapshot.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return static ICCloudConfiguration.overridableValue<A>(for:in:defaults:)(a1, *(void *)(v2 + 8), a2);
}

uint64_t ICCloudConfiguration.waitForConfigurationChange(where:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = sub_1C3DB82A8();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387368);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_1C3DBA7A8();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CC5C2C, 0, 0);
}

uint64_t sub_1C3CC5C2C()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  sub_1C3DBA7C8();

  sub_1C3DBA798();
  unint64_t v2 = sub_1C3CC6088();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C3CC5D30;
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  return MEMORY[0x1F4187C78](v4, v5, v2);
}

uint64_t sub_1C3CC5D30()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1C3CC6004;
  }
  else {
    unint64_t v2 = sub_1C3CC5E44;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3CC5E44()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  sub_1C3CC57F0(v4, v0 + 2);
  uint64_t v5 = v0[2];
  if (!v5) {
    goto LABEL_7;
  }
  unint64_t v6 = (uint64_t (*)(void *))v0[7];
  uint64_t v7 = (void *)v0[3];
  v0[4] = v5;
  v0[5] = v7;
  char v8 = v6(v0 + 4);
  sub_1C3CC60E0(v5, v7);
  if (v8)
  {
LABEL_4:
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
LABEL_7:
    unint64_t v11 = sub_1C3CC6088();
    char v12 = (void *)swift_task_alloc();
    v0[17] = v12;
    *char v12 = v0;
    v12[1] = sub_1C3CC5D30;
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[14];
    return MEMORY[0x1F4187C78](v13, v14, v11);
  }
}

uint64_t sub_1C3CC6004()
{
  *(void *)(v0 + 48) = *(void *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

unint64_t sub_1C3CC6088()
{
  unint64_t result = qword_1EA387370;
  if (!qword_1EA387370)
  {
    sub_1C3DBA7A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387370);
  }
  return result;
}

void sub_1C3CC60E0(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
}

void *_s8SnapshotVwCP(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void _s8SnapshotVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *_s8SnapshotVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s8SnapshotVwta(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ICCloudConfiguration.Snapshot()
{
  return &type metadata for ICCloudConfiguration.Snapshot;
}

uint64_t sub_1C3CC623C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3CC629C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C3CC62F0()
{
  unint64_t result = qword_1EA387380;
  if (!qword_1EA387380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387380);
  }
  return result;
}

uint64_t static TranscriptViewModelSegment.transcriptStringFromSegments(segments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C3DB85C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1C3DB85B8();
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C3CC93A8((uint64_t)v7, v10, v14);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t TranscriptViewModelSegment.init(text:timestamp:duration:speaker:callerOrigin:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  char v15 = *a5;
  uint64_t v16 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v17 = v16[9];
  unint64_t v18 = (void *)(a6 + v16[8]);
  uint64_t result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  long long v20 = (void *)(a6 + v16[5]);
  *long long v20 = a1;
  v20[1] = a2;
  *(double *)(a6 + v16[6]) = a7;
  *(double *)(a6 + v16[7]) = a8;
  void *v18 = a3;
  v18[1] = a4;
  *(unsigned char *)(a6 + v17) = v15;
  return result;
}

uint64_t CallerOrigin.defaultStringForParticipant.getter()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  return v3;
}

BOOL static TranscriptionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptionError.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t TranscriptionError.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CC66C8()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387388);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387388);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static SpeakerAttribute.name.getter()
{
  return 0x4C72656B61657053;
}

uint64_t sub_1C3CC67B0()
{
  return 0x4C72656B61657053;
}

uint64_t static TranscriptTextAttribute.name.getter()
{
  return 0x697263736E617254;
}

uint64_t sub_1C3CC6800()
{
  return 0x697263736E617254;
}

void sub_1C3CC682C()
{
  sub_1C3CD0218();
  JUMPOUT(0x1C8779950);
}

void sub_1C3CC6878()
{
  sub_1C3CD0218();
  JUMPOUT(0x1C8779960);
}

uint64_t sub_1C3CC68C4(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  return MEMORY[0x1F40E4530](v3, v3, a2);
}

uint64_t AttributedString.ic_transcriptionRangeMatching<A>(activeSegmentID:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a3;
  uint64_t v55 = (char *)a2;
  uint64_t v56 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873B8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873C0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1C3DB8568();
  uint64_t v49 = *(void *)(v14 - 8);
  uint64_t v50 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v42 - v15;
  uint64_t v16 = sub_1C3DB8578();
  uint64_t v46 = *(void *)(v16 - 8);
  uint64_t v47 = v16;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v19 = sub_1C3DB8558();
  uint64_t v54 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873C8);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1C3DB8B98();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v32;
  sub_1C3C8E848((uint64_t)v55, (uint64_t)v27, &qword_1EB6FC060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v33) == 1)
  {
    sub_1C3C2A448((uint64_t)v27, &qword_1EB6FC060);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, 1, 1, v57);
    return 0;
  }
  else
  {
    uint64_t v44 = v29;
    uint64_t v45 = v33;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v33);
    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56);
    uint64_t v55 = v24;
    v58 += 56;
    uint64_t v43 = v35;
    v35((uint64_t)v24, 1, 1, v57);
    sub_1C3DB8598();
    uint64_t v36 = v48;
    sub_1C3DB8588();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v47);
    uint64_t v37 = v50;
    MEMORY[0x1C8779A40](v50);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v37);
    while (1)
    {
      while (1)
      {
        sub_1C3DB8548();
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873D0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v13, 1, v38) == 1)
        {
          (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v19);
          (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
          uint64_t v34 = 0;
          uint64_t v40 = (uint64_t)v55;
          goto LABEL_11;
        }
        uint64_t v34 = *v13;
        sub_1C3CB3BF8((uint64_t)v13 + *(int *)(v38 + 48), (uint64_t)v10, &qword_1EA3873B8);
        if (v34) {
          break;
        }
        sub_1C3C2A448((uint64_t)v10, &qword_1EA3873B8);
      }
      swift_retain();
      char v39 = sub_1C3DB8B48();
      swift_release();
      if (v39) {
        break;
      }
      sub_1C3C2A448((uint64_t)v10, &qword_1EA3873B8);
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v19);
    uint64_t v40 = (uint64_t)v55;
    sub_1C3C2A448((uint64_t)v55, &qword_1EA3873C8);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
    sub_1C3CB3BF8((uint64_t)v10, v40, &qword_1EA3873B8);
    v43(v40, 0, 1, v57);
LABEL_11:
    sub_1C3CB3BF8(v40, v56, &qword_1EA3873C8);
  }
  return v34;
}

uint64_t AttributedString.ic_transcriptionNSRangeMatching<A>(activeSegmentID:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v26 = sub_1C3DB85C8();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873B8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873C8);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  unint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v23 - v19;
  uint64_t v21 = AttributedString.ic_transcriptionRangeMatching<A>(activeSegmentID:of:)((uint64_t)&v23 - v19, a1, a2, v27, v28);
  sub_1C3C8E848((uint64_t)v20, (uint64_t)v18, &qword_1EA3873C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) == 1)
  {
    sub_1C3C2A448((uint64_t)v20, &qword_1EA3873C8);
    swift_release();
    uint64_t v21 = 0;
    uint64_t v20 = v18;
  }
  else
  {
    sub_1C3CB3BF8((uint64_t)v18, (uint64_t)v14, &qword_1EA3873B8);
    sub_1C3C8E848((uint64_t)v14, (uint64_t)v12, &qword_1EA3873B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v25, v4, v26);
    sub_1C3C4BDB4(&qword_1EA3873D8, &qword_1EA3873B8);
    sub_1C3CCDF2C(&qword_1EA3873E0, MEMORY[0x1E4F273A8]);
    sub_1C3DBA918();
    sub_1C3C2A448((uint64_t)v14, &qword_1EA3873B8);
  }
  sub_1C3C2A448((uint64_t)v20, &qword_1EA3873C8);
  return v21;
}

BOOL static CallerOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CallerOrigin.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3CC7308()
{
  if (*v0) {
    return 0x65746F6D6572;
  }
  else {
    return 0x6C61636F6CLL;
  }
}

uint64_t sub_1C3CC733C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CCD378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3CC7364(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDE30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CC73A0(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDE30();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C3CC73DC()
{
  return 0;
}

uint64_t sub_1C3CC73E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1C3CC7418(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C3CC7424(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDED8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CC7460(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDED8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C3CC749C(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDE84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CC74D8(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDE84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CallerOrigin.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873E8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873F0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCDE30();
  sub_1C3DBB6D8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1C3CCDE84();
    uint64_t v14 = v18;
    sub_1C3DBB158();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1C3CCDED8();
    sub_1C3DBB158();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t CallerOrigin.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387418);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387420);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387428);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCDE30();
  uint64_t v11 = v32;
  sub_1C3DBB6B8();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_1C3DBB118();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1C3DBAD78();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0);
    *char v22 = &type metadata for CallerOrigin;
    sub_1C3DBB068();
    sub_1C3DBAD48();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1C3CCDE84();
    unint64_t v18 = v14;
    sub_1C3DBB058();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1C3CCDED8();
    sub_1C3DBB058();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0Tm(v23);
}

uint64_t sub_1C3CC7C14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CallerOrigin.init(from:)(a1, a2);
}

uint64_t sub_1C3CC7C2C(void *a1)
{
  return CallerOrigin.encode(to:)(a1);
}

uint64_t TranscriptViewModelSegment.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TranscriptViewModelSegment.text.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptViewModelSegment.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*TranscriptViewModelSegment.text.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

double TranscriptViewModelSegment.timestamp.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 24));
}

uint64_t TranscriptViewModelSegment.timestamp.setter(double a1)
{
  uint64_t result = type metadata accessor for TranscriptViewModelSegment(0);
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

void (*TranscriptViewModelSegment.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

double TranscriptViewModelSegment.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 28));
}

uint64_t TranscriptViewModelSegment.duration.setter(double a1)
{
  uint64_t result = type metadata accessor for TranscriptViewModelSegment(0);
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (*TranscriptViewModelSegment.duration.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TranscriptViewModelSegment.speaker.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TranscriptViewModelSegment.speaker.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TranscriptViewModelSegment(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*TranscriptViewModelSegment.speaker.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TranscriptViewModelSegment.origin.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TranscriptViewModelSegment(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t TranscriptViewModelSegment.origin.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for TranscriptViewModelSegment(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

void (*TranscriptViewModelSegment.origin.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t static TranscriptViewModelSegment.from(jsonData:)@<X0>(uint64_t a1@<X8>)
{
  sub_1C3DB8148();
  swift_allocObject();
  sub_1C3DB8138();
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment(0);
  sub_1C3CCDF2C(&qword_1EA387430, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
  sub_1C3DB8128();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 0, 1, v2);
}

uint64_t sub_1C3CC832C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C3DB84F8();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1C3DB85C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_1C3DB9348();
  sub_1C3DB84E8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C3CCDF2C((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
  uint64_t v7 = sub_1C3DB9E68();
  uint64_t v9 = v8;
  MEMORY[0x1C877A770](&v20);
  uint64_t v10 = sub_1C3DBA8A8();
  uint64_t v12 = v11;
  MEMORY[0x1C877A770](v21, v10);
  sub_1C3DBA8A8();
  uint64_t v14 = v13;
  uint64_t v15 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v16 = v15[9];
  char v17 = (void *)(a1 + v15[8]);
  uint64_t result = _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v19 = (uint64_t *)(a1 + v15[5]);
  *uint64_t v19 = v7;
  v19[1] = v9;
  *(void *)(a1 + v15[6]) = v12;
  *(void *)(a1 + v15[7]) = v14;
  *char v17 = 0;
  v17[1] = 0;
  *(unsigned char *)(a1 + v16) = 2;
  return result;
}

uint64_t sub_1C3CC8540(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v55 = a7;
  uint64_t v54 = a6;
  int v60 = a4;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v9 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v61 = *((void *)v9 - 1);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)&v51 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = sub_1C3DB84F8();
  MEMORY[0x1F4188790](v20);
  uint64_t v21 = sub_1C3DB8698();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v57 = sub_1C3DB85C8();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C3CB3BF8(a1, (uint64_t)v62, &qword_1EA3875E8);
  if ((v63 & 1) == 0)
  {
    uint64_t v53 = a5;
    long long v64 = v62[0];
    long long v65 = v62[1];
    long long v66 = v62[2];
    sub_1C3DBA8A8();
    double v26 = v25;
    sub_1C3DBA628();
    sub_1C3DBA8A8();
    double v28 = v27 - v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3873B8);
    sub_1C3C4BDB4(&qword_1EA3873D8, &qword_1EA3873B8);
    sub_1C3DB85E8();
    sub_1C3DB85F8();
    sub_1C3DB84E8();
    sub_1C3CCDF2C((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
    uint64_t v29 = (unint64_t *)sub_1C3DB9E68();
    unint64_t v31 = v30;
    if (v60)
    {
      unint64_t v32 = *v53;
      uint64_t v33 = *(void *)(*v53 + 16);
      if (v33)
      {
        unint64_t v34 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        uint64_t v35 = *(void *)(v61 + 72);
        sub_1C3C96704(v32 + v34 + v35 * (v33 - 1), (uint64_t)v19);
        if (v28 < 0.5 && *(double *)&v19[v9[6]] - v26 < 0.5)
        {
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v36 = *(void *)(v32 + 16);
            if (v36) {
              goto LABEL_8;
            }
          }
          else
          {
            unint64_t v32 = sub_1C3D70F24(v32);
            uint64_t v36 = *(void *)(v32 + 16);
            if (v36)
            {
LABEL_8:
              uint64_t v15 = (char *)v34;
              uint64_t v37 = v36 - 1;
              sub_1C3CCF188((uint64_t)&v15[v32 + (v36 - 1) * v35], type metadata accessor for TranscriptViewModelSegment);
              *(void *)(v32 + 16) = v37;
              uint64_t v38 = v53;
              *uint64_t v53 = v32;
              uint64_t v29 = v38;
              sub_1C3DB9D68();
              swift_bridgeObjectRelease();
              *(double *)&v19[v9[7]] = v28 + *(double *)&v19[v9[7]];
              uint64_t v12 = v52;
              sub_1C3C96704((uint64_t)v19, (uint64_t)v52);
              unint64_t v31 = *v29;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v29 = v31;
              if (isUniquelyReferenced_nonNull_native)
              {
LABEL_9:
                unint64_t v41 = *(void *)(v31 + 16);
                unint64_t v40 = *(void *)(v31 + 24);
                if (v41 >= v40 >> 1)
                {
                  unint64_t v31 = sub_1C3D82FC8(v40 > 1, v41 + 1, 1, v31);
                  *uint64_t v29 = v31;
                }
                *(void *)(v31 + 16) = v41 + 1;
                sub_1C3C57C4C((uint64_t)v12, (uint64_t)&v15[v31 + v41 * v35]);
LABEL_18:
                sub_1C3CCF188((uint64_t)v19, type metadata accessor for TranscriptViewModelSegment);
                return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v23, v57);
              }
LABEL_22:
              unint64_t v31 = sub_1C3D82FC8(0, *(void *)(v31 + 16) + 1, 1, v31);
              *uint64_t v29 = v31;
              goto LABEL_9;
            }
          }
          __break(1u);
          goto LABEL_22;
        }
        sub_1C3CCF188((uint64_t)v19, type metadata accessor for TranscriptViewModelSegment);
      }
    }
    uint64_t v42 = v9[9];
    uint64_t v43 = &v15[v9[8]];
    uint64_t v44 = v55;
    swift_bridgeObjectRetain();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    uint64_t v45 = (unint64_t **)&v15[v9[5]];
    *uint64_t v45 = v29;
    v45[1] = (unint64_t *)v31;
    *(double *)&v15[v9[6]] = v26;
    *(double *)&v15[v9[7]] = v28;
    *(void *)uint64_t v43 = v54;
    *((void *)v43 + 1) = v44;
    v15[v42] = 2;
    sub_1C3C96704((uint64_t)v15, (uint64_t)v12);
    uint64_t v46 = v53;
    unint64_t v47 = *v53;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v46 = v47;
    if ((v48 & 1) == 0)
    {
      unint64_t v47 = sub_1C3D82FC8(0, *(void *)(v47 + 16) + 1, 1, v47);
      *uint64_t v46 = v47;
    }
    unint64_t v50 = *(void *)(v47 + 16);
    unint64_t v49 = *(void *)(v47 + 24);
    if (v50 >= v49 >> 1)
    {
      unint64_t v47 = sub_1C3D82FC8(v49 > 1, v50 + 1, 1, v47);
      *uint64_t v46 = v47;
    }
    *(void *)(v47 + 16) = v50 + 1;
    sub_1C3C57C4C((uint64_t)v12, v47+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v50);
    uint64_t v19 = v15;
    goto LABEL_18;
  }
  return result;
}

uint64_t static TranscriptViewModelSegment.from(jsonString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C3DB9C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB9C68();
  uint64_t v6 = sub_1C3DB9C48();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    uint64_t v9 = type metadata accessor for TranscriptViewModelSegment(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    static TranscriptViewModelSegment.from(jsonData:)(a1);
    return sub_1C3CCDF74(v6, v8);
  }
}

uint64_t TranscriptViewModelSegment.debugDescription.getter()
{
  return 0;
}

uint64_t TranscriptViewModelSegment.hash(into:)()
{
  sub_1C3DB8B98();
  sub_1C3CCDF2C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
  return sub_1C3DB9B18();
}

uint64_t TranscriptViewModelSegment.json.getter()
{
  uint64_t v0 = sub_1C3DB9C78();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1C3DB8168();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C3DB81A8();
  swift_allocObject();
  sub_1C3DB8198();
  sub_1C3DB8158();
  sub_1C3DB8178();
  type metadata accessor for TranscriptViewModelSegment(0);
  sub_1C3CCDF2C(&qword_1EA387438, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
  uint64_t v2 = sub_1C3DB8188();
  unint64_t v4 = v3;
  sub_1C3DB9C68();
  uint64_t v5 = sub_1C3DB9C58();
  sub_1C3C58FC8(v2, v4);
  swift_release();
  return v5;
}

uint64_t TranscriptViewModelSegment.speakerLabelOrHandle.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 32));
  uint64_t v3 = *v2;
  if (v2[1])
  {
    int v4 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 36));
    if (v4 != 2 && (v4 & 1) == 0)
    {
      uint64_t v9 = self;
      uint64_t v10 = (void *)sub_1C3DB9BF8();
      id v11 = objc_msgSend(v9, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v10, 0, 0, 1);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _s11NotesShared33AudioTranscriptionContactsUtilityV015speakerNameFromE06handleSSSgSS_tFZ_0();
      if (v7)
      {
        uint64_t v8 = v6;
        if (sub_1C3DB9D18() >= 1)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
        swift_bridgeObjectRelease();
      }
      if (v4 == 2) {
        return v3;
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = self;
      uint64_t v10 = (void *)sub_1C3DB9BF8();
      id v11 = objc_msgSend(v12, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v10, 0, 0, 1);
    }
    id v13 = v11;

    uint64_t v3 = sub_1C3DB9C38();
  }
  return v3;
}

uint64_t sub_1C3CC93A8(uint64_t a1, uint64_t a2, void *a3)
{
  long long v65 = a3;
  uint64_t v67 = a2;
  uint64_t v68 = a1;
  uint64_t v3 = sub_1C3DB8658();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB85C8();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v58 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v66 = sub_1C3DB8B98();
  uint64_t v15 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TranscriptViewModelSegment(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C3DBA2F8();
  if ((result & 1) == 0)
  {
    int v60 = v12;
    uint64_t v61 = v14;
    uint64_t v63 = v6;
    long long v64 = v5;
    uint64_t v62 = v9;
    uint64_t v22 = v67;
    sub_1C3C96704(v67, (uint64_t)v20);
    type metadata accessor for TranscriptMetadata(0);
    uint64_t v23 = swift_allocObject();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v17, v66);
    sub_1C3C57C4C((uint64_t)v20, v23 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
    uint64_t v24 = (uint64_t *)(v22 + *(int *)(v18 + 32));
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    uint64_t v27 = TranscriptViewModelSegment.speakerLabelOrHandle.getter();
    uint64_t v29 = v18;
    if (v25 && v28)
    {
      uint64_t v66 = v27;
      unint64_t v30 = v65;
      uint64_t v31 = *v65;
      uint64_t v32 = v65[1];
      if (!*v65 && v32 == 0xE000000000000000 || (sub_1C3DBB3B8() & 1) != 0)
      {
        *unint64_t v30 = v26;
        v30[1] = v25;
        swift_bridgeObjectRelease();
        uint64_t v33 = v29;
        sub_1C3DB8648();
        unint64_t v34 = v61;
        sub_1C3DB85D8();
        uint64_t KeyPath = swift_getKeyPath();
        *(&v58 - 2) = MEMORY[0x1F4188790](KeyPath);
        swift_getKeyPath();
        uint64_t v70 = v23;
        sub_1C3CD0440();
        swift_retain();
        sub_1C3DB8508();
        sub_1C3DB8528();
        uint64_t v36 = v60;
        sub_1C3DB8518();
        sub_1C3DB8528();
        uint64_t v37 = *(void (**)(char *, uint64_t))(v69 + 8);
        uint64_t v38 = v63;
        v37(v36, v63);
        v37(v34, v38);
        uint64_t v29 = v33;
        goto LABEL_14;
      }
      if ((v26 != v31 || v25 != v32) && (sub_1C3DBB3B8() & 1) == 0)
      {
        uint64_t v53 = v61;
        sub_1C3DB8518();
        sub_1C3DB8528();
        uint64_t v59 = v26;
        uint64_t v54 = *(void (**)(char *, uint64_t))(v69 + 8);
        v54(v53, v63);
        *unint64_t v30 = v59;
        v30[1] = v25;
        swift_bridgeObjectRelease();
        sub_1C3DB8648();
        sub_1C3DB85D8();
        uint64_t v55 = swift_getKeyPath();
        *(&v58 - 2) = MEMORY[0x1F4188790](v55);
        swift_getKeyPath();
        uint64_t v70 = v23;
        sub_1C3CD0440();
        swift_retain();
        sub_1C3DB8508();
        sub_1C3DB8528();
        uint64_t v56 = v60;
        sub_1C3DB8518();
        sub_1C3DB8528();
        uint64_t v57 = v63;
        v54(v56, v63);
        v54(v53, v57);
        uint64_t v38 = v57;
LABEL_14:
        char v39 = (uint64_t *)(v22 + *(int *)(v29 + 20));
        uint64_t v41 = *v39;
        unint64_t v40 = v39[1];
        char v42 = sub_1C3CC9BAC(*v39, v40);
        swift_bridgeObjectRetain();
        uint64_t v43 = v23;
        if (v42)
        {
          uint64_t v44 = v69;
          uint64_t v45 = v62;
          goto LABEL_25;
        }
        sub_1C3D54048(v41, v40);
        uint64_t v47 = v46;
        swift_bridgeObjectRelease();
        uint64_t v45 = v62;
        if (v47)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_1C3C9392C(v41, v40);
          uint64_t v49 = v48;
          swift_bridgeObjectRelease();
          if (v49)
          {
            char v50 = sub_1C3DB9B38();
            swift_bridgeObjectRelease();
            if (v50)
            {
              swift_bridgeObjectRelease();
LABEL_22:
              swift_bridgeObjectRetain();
LABEL_24:
              uint64_t v44 = v69;
LABEL_25:
              if (sub_1C3DBA2F8())
              {
                swift_release();
                return swift_bridgeObjectRelease();
              }
              else
              {
                sub_1C3DB8648();
                sub_1C3DB85D8();
                uint64_t v52 = swift_getKeyPath();
                *(&v58 - 2) = MEMORY[0x1F4188790](v52);
                swift_getKeyPath();
                uint64_t v70 = v43;
                sub_1C3CD0334();
                swift_retain();
                sub_1C3DB8508();
                sub_1C3DB8528();
                sub_1C3DBA2F8();
                swift_release();
                return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v38);
              }
            }
            char v51 = sub_1C3DB9B38();
            swift_bridgeObjectRelease();
            if (v51) {
              goto LABEL_22;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v70 = v41;
        unint64_t v71 = v40;
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v63;
    goto LABEL_14;
  }
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3874F0);
}

uint64_t TranscriptMetadata.__allocating_init(segment:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3C57C4C(a1, v2 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  return v2;
}

uint64_t sub_1C3CC9BAC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C3DB9D28();
      uint64_t result = sub_1C3DB9E58();
      if (!((v5 & 0x2000000000000000) != 0 ? HIBYTE(v5) & 0xF : result & 0xFFFFFFFFFFFFLL)) {
        break;
      }
      if ((v5 & 0x1000000000000000) != 0)
      {
        int v7 = sub_1C3DBAC58();
      }
      else
      {
        if ((v5 & 0x2000000000000000) == 0 && (result & 0x1000000000000000) == 0) {
          sub_1C3DBADD8();
        }
        int v7 = sub_1C3DBADE8();
      }
      int v8 = v7;
      swift_bridgeObjectRelease();
      if ((v8 - 14) <= 0xFFFFFFFB && (v8 - 8232) >= 2 && v8 != 133)
      {
        BOOL v9 = ((sub_1C3DB9D28() ^ v3) & 0xFFFFFFFFFFFFC000) == 0;
        return !v9;
      }
      if (v3 < 0x4000) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    BOOL v9 = v2 == 0;
    return !v9;
  }
  return result;
}

uint64_t sub_1C3CC9D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1C3DB9BE8() & 1;
}

uint64_t sub_1C3CC9D7C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      uint64_t result = 0x72656B61657073;
      break;
    case 5:
      uint64_t result = 0x6E696769726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3CC9E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CCD690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3CC9E58(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDF88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CC9E94(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCDF88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TranscriptViewModelSegment.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387440);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCDF88();
  sub_1C3DBB6D8();
  v11[15] = 0;
  sub_1C3DB8B98();
  sub_1C3CCDF2C(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
  sub_1C3DBB1E8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for TranscriptViewModelSegment(0);
    v11[14] = 1;
    sub_1C3DBB1A8();
    v11[13] = 2;
    sub_1C3DBB1C8();
    v11[12] = 3;
    sub_1C3DBB1C8();
    v11[11] = 4;
    sub_1C3DBB178();
    v11[10] = *(unsigned char *)(v3 + *(int *)(v9 + 36));
    v11[9] = 5;
    sub_1C3CCDFDC();
    sub_1C3DBB198();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TranscriptViewModelSegment.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t TranscriptViewModelSegment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v30 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v32 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387458);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v10[*(int *)(v8 + 32)];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  unint64_t v34 = v11;
  uint64_t v12 = (unsigned char *)*(int *)(v8 + 36);
  v12[(void)v10] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCDF88();
  uint64_t v33 = v6;
  uint64_t v13 = (uint64_t)v35;
  sub_1C3DBB6B8();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = v12;
    uint64_t v14 = v10;
    uint64_t v15 = v30;
    uint64_t v35 = a1;
    char v42 = 0;
    sub_1C3CCDF2C(&qword_1EA386F28, MEMORY[0x1E4F27990]);
    uint64_t v16 = v31;
    sub_1C3DBB108();
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v14, v32, v3);
    char v41 = 1;
    uint64_t v17 = sub_1C3DBB0C8();
    uint64_t v18 = (uint64_t *)&v14[v7[5]];
    uint64_t *v18 = v17;
    v18[1] = v19;
    char v40 = 2;
    sub_1C3DBB0E8();
    uint64_t v20 = (uint64_t *)v34;
    *(void *)&v14[v7[6]] = v21;
    char v39 = 3;
    sub_1C3DBB0E8();
    *(void *)&v14[v7[7]] = v22;
    char v38 = 4;
    *uint64_t v20 = sub_1C3DBB078();
    v20[1] = v23;
    char v36 = 5;
    sub_1C3CCE030();
    sub_1C3DBB0A8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v16);
    uint64_t v24 = v28;
    *uint64_t v27 = v37;
    sub_1C3C96704(0, v24);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v35);
    return sub_1C3CCF188(0, type metadata accessor for TranscriptViewModelSegment);
  }
}

uint64_t sub_1C3CCA674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptViewModelSegment.init(from:)(a1, a2);
}

uint64_t sub_1C3CCA68C(void *a1)
{
  return TranscriptViewModelSegment.encode(to:)(a1);
}

uint64_t sub_1C3CCA6A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C3CCA714()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CCA79C()
{
  sub_1C3DB8B98();
  sub_1C3CCDF2C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
  return sub_1C3DB9B18();
}

uint64_t sub_1C3CCA820()
{
  return sub_1C3DBB608();
}

uint64_t SummarizationResult.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SummarizationResult.isSafe.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SummarizationResult.modelVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SummarizationResult.init(text:isSafe:modelVersion:)(NotesShared::SummarizationResult *__return_ptr retstr, Swift::String text, Swift::Bool isSafe, Swift::String_optional modelVersion)
{
  retstr->text = text;
  retstr->isSafe = isSafe;
  retstr->modelVersion = modelVersion;
}

uint64_t sub_1C3CCA924()
{
  uint64_t v1 = 0x656661537369;
  if (*v0 != 1) {
    uint64_t v1 = 0x7265566C65646F6DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_1C3CCA97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CCD538(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3CCA9A4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C3CCA9B0(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCE084();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CCA9EC(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCE084();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SummarizationResult.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387468);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  v10[1] = *(void *)(v1 + 32);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCE084();
  sub_1C3DBB6D8();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_1C3DBB1A8();
  if (!v8)
  {
    char v13 = 1;
    sub_1C3DBB1B8();
    char v12 = 2;
    sub_1C3DBB178();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SummarizationResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387478);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCE084();
  sub_1C3DBB6B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_1C3DBB0C8();
  uint64_t v11 = v10;
  char v21 = 1;
  swift_bridgeObjectRetain();
  int v19 = sub_1C3DBB0D8();
  char v20 = 2;
  uint64_t v12 = sub_1C3DBB078();
  uint64_t v15 = v14;
  v19 &= 1u;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v16(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CCAE18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SummarizationResult.init(from:)(a1, a2);
}

uint64_t sub_1C3CCAE30(void *a1)
{
  return SummarizationResult.encode(to:)(a1);
}

uint64_t static RecordingState.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = *a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      uint64_t v7 = *(void **)(v2 + 16);
      uint64_t v8 = *(void **)(v3 + 16);
      sub_1C3CCE110();
      sub_1C3CCE0D8(v3);
      sub_1C3CCE0D8(v2);
      id v9 = v7;
      id v10 = v8;
      char v6 = sub_1C3DBA8E8();

      goto LABEL_7;
    }
    goto LABEL_14;
  }
  if (v4 != 1)
  {
    if (v2 == 0x8000000000000000)
    {
      if (v3 != 0x8000000000000000) {
        goto LABEL_14;
      }
      sub_1C3CCE0F4(0x8000000000000000);
      unint64_t v11 = 0x8000000000000000;
    }
    else
    {
      if (v3 != 0x8000000000000008) {
        goto LABEL_14;
      }
      sub_1C3CCE0F4(0x8000000000000008);
      unint64_t v11 = 0x8000000000000008;
    }
    sub_1C3CCE0F4(v11);
    char v6 = 1;
    return v6 & 1;
  }
  if (v3 >> 62 != 1)
  {
LABEL_14:
    sub_1C3CCE0D8(*a2);
    sub_1C3CCE0D8(v2);
    sub_1C3CCE0F4(v2);
    sub_1C3CCE0F4(v3);
    char v6 = 0;
    return v6 & 1;
  }
  uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v13 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v14 = v5;
  sub_1C3CCE0D8(v3);
  sub_1C3CCE0D8(v2);
  char v6 = static RecordingState.== infix(_:_:)(&v14, &v13);
LABEL_7:
  sub_1C3CCE0F4(v2);
  sub_1C3CCE0F4(v3);
  return v6 & 1;
}

uint64_t TranscriptionModelState.localizedTitle.getter()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  return v3;
}

Swift::String_optional __swiftcall TranscriptionModelState.localizedMessage(callRecording:)(Swift::Bool callRecording)
{
  uint64_t v2 = *v1;
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  switch(v2)
  {
    case 2:
      objc_msgSend(self, sel_deviceIsWAPICapable);
      id v9 = self;
      uint64_t v7 = (void *)sub_1C3DB9BF8();
      id v8 = objc_msgSend(v9, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v7, 0, 0, 1);
      goto LABEL_6;
    case 3:
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_3;
    default:
      id v5 = objc_msgSend(self, sel_currentDevice);
      objc_msgSend(v5, sel_userInterfaceIdiom);

LABEL_3:
      char v6 = self;
      uint64_t v7 = (void *)sub_1C3DB9BF8();
      id v8 = objc_msgSend(v6, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v7, 0, 0, 1);
LABEL_6:
      id v10 = v8;

      uint64_t v3 = sub_1C3DB9C38();
      unint64_t v4 = v11;

LABEL_7:
      uint64_t v12 = v3;
      uint64_t v13 = v4;
      result.value._object = v13;
      result.value._uint64_t countAndFlagsBits = v12;
      return result;
  }
}

uint64_t TranscriptionModelState.action.getter()
{
  if (*v0) {
    return 0;
  }
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_1C3DB9BF8();
  id v4 = objc_msgSend(v2, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v3, 0, 0, 1);

  uint64_t v1 = sub_1C3DB9C38();
  return v1;
}

BOOL TranscriptionModelState.isIntermediate.getter()
{
  int v1 = *v0;
  return v1 == 1 || v1 == 4;
}

unint64_t TranscriptionModelState.systemImageName.getter()
{
  unint64_t result = 0;
  switch(*v0)
  {
    case 1:
    case 4:
      return result;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0xD000000000000015;
      break;
  }
  return result;
}

NotesShared::TranscriptionModelState_optional __swiftcall TranscriptionModelState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TranscriptionModelState.rawValue.getter()
{
  uint64_t result = 0x676E69646E6570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 2:
      uint64_t result = 0x656E696C66666FLL;
      break;
    case 3:
      uint64_t result = 0x64656C696166;
      break;
    case 4:
      uint64_t result = 0x697263736E617274;
      break;
    case 5:
      uint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3CCB8E0(unsigned __int8 *a1, char *a2)
{
  return sub_1C3CE6584(*a1, *a2);
}

uint64_t sub_1C3CCB8EC()
{
  return sub_1C3C8EC78();
}

uint64_t sub_1C3CCB8F4()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CCB9F4()
{
  return sub_1C3C8EE78();
}

NotesShared::TranscriptionModelState_optional sub_1C3CCB9FC(Swift::String *a1)
{
  return TranscriptionModelState.init(rawValue:)(*a1);
}

void sub_1C3CCBA08(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x676E69646E6570;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000676E69;
      uint64_t v3 = 0x64616F6C6E776F64;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656E696C66666FLL;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x64656C696166;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "transcribing");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 5:
      *(void *)a1 = 0x7974706D65;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C3CCBAE8()
{
  uint64_t result = sub_1C3DB9BF8();
  qword_1EA3873A0 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptSpeakerLabel.getter()
{
  return sub_1C3CCBBFC(&qword_1EA385880, (void **)&qword_1EA3873A0);
}

uint64_t sub_1C3CCBB44()
{
  uint64_t result = sub_1C3DB9BF8();
  qword_1EA3873A8 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptText.getter()
{
  return sub_1C3CCBBFC(&qword_1EA385888, (void **)&qword_1EA3873A8);
}

uint64_t sub_1C3CCBBA0()
{
  uint64_t result = sub_1C3DB9BF8();
  qword_1EA3873B0 = result;
  return result;
}

id static NSAttributedStringKey.ic_transcriptActiveSegment.getter()
{
  return sub_1C3CCBBFC(&qword_1EA385890, (void **)&qword_1EA3873B0);
}

id sub_1C3CCBBFC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

uint64_t TranscriptMetadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  uint64_t v4 = sub_1C3DB8B98();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t TranscriptMetadata.segment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3C96704(v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, a1);
}

uint64_t TranscriptMetadata.init(segment:)(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id, v6, v3);
  sub_1C3C57C4C(a1, v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  return v1;
}

uint64_t TranscriptMetadata.debugDescription.getter()
{
  return 0;
}

uint64_t TranscriptMetadata.hash(into:)()
{
  return sub_1C3DB9B18();
}

uint64_t static TranscriptMetadata.== infix(_:_:)()
{
  return sub_1C3DB8B48();
}

uint64_t sub_1C3CCBFA8()
{
  if (*v0) {
    return 0x746E656D676573;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1C3CCBFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CCD45C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3CCC000(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCE150();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CCC03C(uint64_t a1)
{
  unint64_t v2 = sub_1C3CCE150();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TranscriptMetadata.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  uint64_t v2 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1C3CCF188(v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, type metadata accessor for TranscriptViewModelSegment);
  return v0;
}

uint64_t TranscriptMetadata.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  uint64_t v2 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1C3CCF188(v0 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment, type metadata accessor for TranscriptViewModelSegment);
  return swift_deallocClassInstance();
}

uint64_t TranscriptMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387480);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCE150();
  sub_1C3DBB6D8();
  v8[15] = 0;
  sub_1C3DB8B98();
  sub_1C3CCDF2C(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
  sub_1C3DBB1E8();
  if (!v1)
  {
    v8[14] = 1;
    type metadata accessor for TranscriptViewModelSegment(0);
    sub_1C3CCDF2C(&qword_1EA387438, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TranscriptMetadata.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t TranscriptMetadata.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  TranscriptMetadata.init(from:)(a1);
  return v2;
}

uint64_t *TranscriptMetadata.init(from:)(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v20 = v2;
  uint64_t v21 = v4;
  uint64_t v5 = type metadata accessor for TranscriptViewModelSegment(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C3DB8B98();
  uint64_t v16 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v17 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387490);
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CCE150();
  uint64_t v12 = v20;
  sub_1C3DBB6B8();
  if (v12)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = v9;
    v15[1] = v5;
    char v23 = 0;
    sub_1C3CCDF2C(&qword_1EA386F28, MEMORY[0x1E4F27990]);
    sub_1C3DBB108();
    uint64_t v13 = *(void (**)(void))(v16 + 32);
    v15[0] = (char *)v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
    v13();
    char v22 = 1;
    sub_1C3CCDF2C(&qword_1EA387430, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
    sub_1C3DBB108();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    sub_1C3C57C4C((uint64_t)v7, (uint64_t)v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_segment);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t *sub_1C3CCC8AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = TranscriptMetadata.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C3CCC904(void *a1)
{
  return TranscriptMetadata.encode(to:)(a1);
}

uint64_t sub_1C3CCC928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11NotesShared18TranscriptMetadata_id;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C3CCC9A0()
{
  return TranscriptMetadata.debugDescription.getter();
}

uint64_t sub_1C3CCC9C4()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CCCA84()
{
  return sub_1C3DB9B18();
}

uint64_t sub_1C3CCCB34()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CCCBF0()
{
  return sub_1C3DB8B48();
}

double TranscriptPauseTextAttachment.duration.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration);
}

id TranscriptPauseTextAttachment.__allocating_init(duration:)(double a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(double *)&v3[OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_initWithData_ofType_, 0, 0);
}

id TranscriptPauseTextAttachment.init(duration:)(double a1)
{
  *(double *)&v1[OBJC_IVAR____TtC11NotesShared29TranscriptPauseTextAttachment_duration] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for TranscriptPauseTextAttachment();
  return objc_msgSendSuper2(&v3, sel_initWithData_ofType_, 0, 0);
}

id TranscriptPauseTextAttachment.__allocating_init(data:ofType:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    uint64_t v6 = (void *)sub_1C3DB8938();
    sub_1C3CCDF74(a1, a2);
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = 0;
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
LABEL_6:
  id v10 = objc_msgSend(objc_allocWithZone(v4), sel_initWithData_ofType_, v6, v7);

  return v10;
}

void TranscriptPauseTextAttachment.init(data:ofType:)()
{
}

id TranscriptPauseTextAttachment.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptPauseTextAttachment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3CCCE90@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TranscriptPauseTextAttachment();
  uint64_t result = sub_1C3DBACB8();
  *a1 = result;
  return result;
}

uint64_t _s11NotesShared26TranscriptViewModelSegmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C3DB8B48() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1C3DBB3B8(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) != *(double *)(a2 + v4[6]) || *(double *)(a1 + v4[7]) != *(double *)(a2 + v4[7])) {
      return 0;
    }
    uint64_t v12 = v4[8];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = *(void *)(a1 + v12 + 8);
    uint64_t v15 = (void *)(a2 + v12);
    uint64_t v16 = v15[1];
    if (v14)
    {
      if (v16)
      {
        if (*v13 != *v15 || v14 != v16)
        {
          char v18 = sub_1C3DBB3B8();
          uint64_t result = 0;
          if ((v18 & 1) == 0) {
            return result;
          }
        }
LABEL_18:
        uint64_t v19 = v4[9];
        int v20 = *(unsigned __int8 *)(a1 + v19);
        int v21 = *(unsigned __int8 *)(a2 + v19);
        if (v20 == 2)
        {
          if (v21 != 2) {
            return 0;
          }
        }
        else
        {
          int v22 = (v21 ^ v20) & 1;
          if (v21 == 2 || v22 != 0) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if (!v16)
    {
      goto LABEL_18;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C3CCCFF4(char *a1, void (*a2)(unsigned char *, char *), uint64_t a3)
{
  int v21 = a2;
  uint64_t v22 = a3;
  uint64_t v24 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875C0);
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875A8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875D0);
  uint64_t v20 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v24, v9);
  sub_1C3C4BDB4(&qword_1EA3875D8, &qword_1EA3875A8);
  sub_1C3DB9EA8();
  sub_1C3C4BDB4(&qword_1EA3875E0, &qword_1EA3875D0);
  uint64_t v24 = v15;
  uint64_t v16 = v3;
  sub_1C3DBA998();
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  while (v17(v8, 1, v16) != 1)
  {
    sub_1C3CB3BF8((uint64_t)v8, (uint64_t)v5, &qword_1EA3875C0);
    sub_1C3CB3BF8((uint64_t)v5, (uint64_t)v23, &qword_1EA3875E8);
    v21(v23, &v5[*(int *)(v16 + 48)]);
    sub_1C3C2A448((uint64_t)v5, &qword_1EA3875C0);
    sub_1C3DBA998();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v24, v13);
}

uint64_t sub_1C3CCD378(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C3CCD45C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656D676573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C3CCD538(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656661537369 && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265566C65646F6DLL && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C3CCD690(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656B61657073 && a2 == 0xE700000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E696769726FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporary11speakerName17overlapMitigationSayACG6Speech11TranscriberC18MultisegmentResultV_SbSSSgSbtFZ_0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  int v31 = a5;
  uint64_t v34 = a4;
  uint64_t v32 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875A8);
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C3DB8578();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875B0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C3DB85C8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v20 = sub_1C3DB9278();
    MEMORY[0x1F4188790](v20);
    *(&v30 - 2) = a1;
    uint64_t v21 = sub_1C3D20E7C((void (*)(uint64_t))sub_1C3CD0280, (uint64_t)(&v30 - 4), v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = sub_1C3DB9258();
    if (*(void *)(v22 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, v22 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1C3C2A448((uint64_t)v15, &qword_1EA3875B0);
      if (qword_1EA385878 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1C3DB9048();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EA387388);
      uint64_t v24 = sub_1C3DB9028();
      os_log_type_t v25 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1C3A61000, v24, v25, "got an empty result", v26, 2u);
        MEMORY[0x1C877E600](v26, -1, -1);
      }

      return MEMORY[0x1E4FBC860];
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_1C3DB8598();
      sub_1C3DB9338();
      sub_1C3CCDF2C(&qword_1EA3875B8, MEMORY[0x1E4F3C198]);
      sub_1C3DB8588();
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v10);
      MEMORY[0x1F4188790](v27);
      *(&v30 - 6) = (uint64_t)v19;
      *((unsigned char *)&v30 - 40) = v31 & 1;
      *(&v30 - 4) = (uint64_t)&v35;
      uint64_t v28 = v34;
      *(&v30 - 3) = v32;
      *(&v30 - 2) = v28;
      sub_1C3CCCFF4(v9, (void (*)(unsigned char *, char *))sub_1C3CD026C, (uint64_t)(&v30 - 8));
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v35;
    }
  }
  return v21;
}

unint64_t sub_1C3CCDE30()
{
  unint64_t result = qword_1EA387400;
  if (!qword_1EA387400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387400);
  }
  return result;
}

unint64_t sub_1C3CCDE84()
{
  unint64_t result = qword_1EA387408;
  if (!qword_1EA387408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387408);
  }
  return result;
}

unint64_t sub_1C3CCDED8()
{
  unint64_t result = qword_1EA387410;
  if (!qword_1EA387410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387410);
  }
  return result;
}

uint64_t sub_1C3CCDF2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CCDF74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C3C58FC8(a1, a2);
  }
  return a1;
}

unint64_t sub_1C3CCDF88()
{
  unint64_t result = qword_1EA387448;
  if (!qword_1EA387448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387448);
  }
  return result;
}

unint64_t sub_1C3CCDFDC()
{
  unint64_t result = qword_1EA387450;
  if (!qword_1EA387450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387450);
  }
  return result;
}

unint64_t sub_1C3CCE030()
{
  unint64_t result = qword_1EA387460;
  if (!qword_1EA387460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387460);
  }
  return result;
}

unint64_t sub_1C3CCE084()
{
  unint64_t result = qword_1EA387470;
  if (!qword_1EA387470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387470);
  }
  return result;
}

unint64_t sub_1C3CCE0D8(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1C3CCE0F4(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1C3CCE110()
{
  unint64_t result = qword_1EB6FC780;
  if (!qword_1EB6FC780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6FC780);
  }
  return result;
}

unint64_t sub_1C3CCE150()
{
  unint64_t result = qword_1EA387488;
  if (!qword_1EA387488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387488);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptPauseTextAttachment()
{
  return self;
}

unint64_t sub_1C3CCE1CC()
{
  unint64_t result = qword_1EA3874A0;
  if (!qword_1EA3874A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874A0);
  }
  return result;
}

uint64_t sub_1C3CCE220()
{
  return sub_1C3CCDF2C(&qword_1EA3874A8, (void (*)(uint64_t))type metadata accessor for TranscriptMetadata);
}

uint64_t type metadata accessor for TranscriptMetadata(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA387510);
}

unint64_t sub_1C3CCE28C()
{
  unint64_t result = qword_1EA3874B0;
  if (!qword_1EA3874B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874B0);
  }
  return result;
}

unint64_t sub_1C3CCE2E4()
{
  unint64_t result = qword_1EA3874B8;
  if (!qword_1EA3874B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874B8);
  }
  return result;
}

unint64_t sub_1C3CCE33C()
{
  unint64_t result = qword_1EA3874C0;
  if (!qword_1EA3874C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874C0);
  }
  return result;
}

uint64_t sub_1C3CCE390()
{
  return sub_1C3CCDF2C((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
}

uint64_t sub_1C3CCE3D8()
{
  return sub_1C3CCDF2C(&qword_1EA3874C8, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
}

unint64_t sub_1C3CCE424()
{
  unint64_t result = qword_1EA3874D0;
  if (!qword_1EA3874D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874D0);
  }
  return result;
}

unint64_t sub_1C3CCE47C()
{
  unint64_t result = qword_1EA3874D8;
  if (!qword_1EA3874D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874D8);
  }
  return result;
}

unint64_t sub_1C3CCE4D4()
{
  unint64_t result = qword_1EA3874E0;
  if (!qword_1EA3874E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3874E0);
  }
  return result;
}

uint64_t sub_1C3CCE528()
{
  return sub_1C3CCDF2C(&qword_1EA3874E8, (void (*)(uint64_t))type metadata accessor for TranscriptMetadata);
}

uint64_t sub_1C3CCE570()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t getEnumTagSinglePayload for TranscriptionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranscriptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CCE6D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionError()
{
  return &type metadata for TranscriptionError;
}

ValueMetadata *type metadata accessor for SpeakerAttribute()
{
  return &type metadata for SpeakerAttribute;
}

ValueMetadata *type metadata accessor for TranscriptTextAttribute()
{
  return &type metadata for TranscriptTextAttribute;
}

ValueMetadata *type metadata accessor for TranscriptionTextAttributes()
{
  return &type metadata for TranscriptionTextAttributes;
}

ValueMetadata *type metadata accessor for CallerOrigin()
{
  return &type metadata for CallerOrigin;
}

void *initializeBufferWithCopyOfBuffer for TranscriptViewModelSegment(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8B98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TranscriptViewModelSegment(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3CCEC1C);
}

uint64_t sub_1C3CCEC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptViewModelSegment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3CCECF4);
}

uint64_t sub_1C3CCECF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C3CCEDB4()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptionUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C3DB9288();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for TranscriptionUpdate(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1C3DB9288();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C3DB9288();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3CCF188((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C3DB9288();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C3CCF188(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for TranscriptionUpdate(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA387500);
}

void *initializeWithTake for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C3DB9288();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TranscriptionUpdate(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3CCF188((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C3DB9288();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C3CCF39C()
{
  uint64_t result = sub_1C3DB9288();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationState()
{
  return &type metadata for SummarizationState;
}

uint64_t destroy for SummarizationResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummarizationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummarizationResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SummarizationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationResult()
{
  return &type metadata for SummarizationResult;
}

unint64_t *initializeBufferWithCopyOfBuffer for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1C3CCE0D8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for RecordingState(unint64_t *a1)
{
  return sub_1C3CCE0F4(*a1);
}

unint64_t *assignWithCopy for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1C3CCE0D8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1C3CCE0F4(v4);
  return a1;
}

unint64_t *assignWithTake for RecordingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1C3CCE0F4(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RecordingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C3CCF798(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

unint64_t *sub_1C3CCF7B4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *__n128 result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for RecordingState()
{
  return &type metadata for RecordingState;
}

ValueMetadata *type metadata accessor for TranscriptionModelState()
{
  return &type metadata for TranscriptionModelState;
}

uint64_t sub_1C3CCF808()
{
  return type metadata accessor for TranscriptMetadata(0);
}

uint64_t sub_1C3CCF810()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptViewModelSegment(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for TranscriptMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscriptMetadata);
}

uint64_t dispatch thunk of TranscriptMetadata.__allocating_init(segment:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TranscriptMetadata.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for TranscriptPauseTextAttachment(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TranscriptPauseTextAttachment);
}

uint64_t dispatch thunk of TranscriptPauseTextAttachment.__allocating_init(duration:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for TranscriptMetadata.CodingKeys()
{
  return &type metadata for TranscriptMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SummarizationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CCFA38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationResult.CodingKeys()
{
  return &type metadata for SummarizationResult.CodingKeys;
}

unsigned char *_s11NotesShared23TranscriptionModelStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CCFB3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unsigned char *_s11NotesShared12CallerOriginOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CCFC40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallerOrigin.CodingKeys()
{
  return &type metadata for CallerOrigin.CodingKeys;
}

ValueMetadata *type metadata accessor for CallerOrigin.LocalCodingKeys()
{
  return &type metadata for CallerOrigin.LocalCodingKeys;
}

ValueMetadata *type metadata accessor for CallerOrigin.RemoteCodingKeys()
{
  return &type metadata for CallerOrigin.RemoteCodingKeys;
}

unint64_t sub_1C3CCFC9C()
{
  unint64_t result = qword_1EA387520;
  if (!qword_1EA387520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387520);
  }
  return result;
}

unint64_t sub_1C3CCFCF4()
{
  unint64_t result = qword_1EA387528;
  if (!qword_1EA387528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387528);
  }
  return result;
}

unint64_t sub_1C3CCFD4C()
{
  unint64_t result = qword_1EA387530;
  if (!qword_1EA387530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387530);
  }
  return result;
}

unint64_t sub_1C3CCFDA4()
{
  unint64_t result = qword_1EA387538;
  if (!qword_1EA387538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387538);
  }
  return result;
}

unint64_t sub_1C3CCFDFC()
{
  unint64_t result = qword_1EA387540;
  if (!qword_1EA387540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387540);
  }
  return result;
}

unint64_t sub_1C3CCFE54()
{
  unint64_t result = qword_1EA387548;
  if (!qword_1EA387548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387548);
  }
  return result;
}

unint64_t sub_1C3CCFEAC()
{
  unint64_t result = qword_1EA387550;
  if (!qword_1EA387550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387550);
  }
  return result;
}

unint64_t sub_1C3CCFF04()
{
  unint64_t result = qword_1EA387558;
  if (!qword_1EA387558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387558);
  }
  return result;
}

unint64_t sub_1C3CCFF5C()
{
  unint64_t result = qword_1EA387560;
  if (!qword_1EA387560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387560);
  }
  return result;
}

unint64_t sub_1C3CCFFB4()
{
  unint64_t result = qword_1EA387568;
  if (!qword_1EA387568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387568);
  }
  return result;
}

unint64_t sub_1C3CD000C()
{
  unint64_t result = qword_1EA387570;
  if (!qword_1EA387570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387570);
  }
  return result;
}

unint64_t sub_1C3CD0064()
{
  unint64_t result = qword_1EA387578;
  if (!qword_1EA387578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387578);
  }
  return result;
}

unint64_t sub_1C3CD00BC()
{
  unint64_t result = qword_1EA387580;
  if (!qword_1EA387580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387580);
  }
  return result;
}

unint64_t sub_1C3CD0114()
{
  unint64_t result = qword_1EA387588;
  if (!qword_1EA387588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387588);
  }
  return result;
}

unint64_t sub_1C3CD016C()
{
  unint64_t result = qword_1EA387590;
  if (!qword_1EA387590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387590);
  }
  return result;
}

unint64_t sub_1C3CD01C4()
{
  unint64_t result = qword_1EA387598;
  if (!qword_1EA387598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387598);
  }
  return result;
}

unint64_t sub_1C3CD0218()
{
  unint64_t result = qword_1EA3875A0;
  if (!qword_1EA3875A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3875A0);
  }
  return result;
}

uint64_t sub_1C3CD026C(uint64_t a1, uint64_t a2)
{
  return sub_1C3CC8540(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unint64_t **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1C3CD0280@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3CC832C(a1);
}

uint64_t sub_1C3CD02A0()
{
  unint64_t v0 = sub_1C3CD0334();
  return MEMORY[0x1F40E4530](&type metadata for TranscriptTextAttribute, &type metadata for TranscriptTextAttribute, v0);
}

uint64_t sub_1C3CD02D8()
{
  return 8;
}

uint64_t sub_1C3CD02E4()
{
  return swift_release();
}

uint64_t sub_1C3CD02EC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C3CD02F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3CC9D20(a1, a2, a3, &qword_1EA387608) & 1;
}

uint64_t sub_1C3CD031C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EA387608);
}

void *sub_1C3CD0328(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1C3CD0334()
{
  unint64_t result = qword_1EA3875F0;
  if (!qword_1EA3875F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3875F0);
  }
  return result;
}

uint64_t sub_1C3CD0388()
{
  unint64_t v0 = sub_1C3CD0440();
  return MEMORY[0x1F40E4530](&type metadata for SpeakerAttribute, &type metadata for SpeakerAttribute, v0);
}

uint64_t sub_1C3CD03C0()
{
  return 8;
}

uint64_t sub_1C3CD03CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3CC9D20(a1, a2, a3, &qword_1EA387600) & 1;
}

uint64_t sub_1C3CD03F0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EA387600);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C3DB9B28();
}

unint64_t sub_1C3CD0440()
{
  unint64_t result = qword_1EA3875F8;
  if (!qword_1EA3875F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3875F8);
  }
  return result;
}

id ICTTTextEditGroup.init(edits:latestTimestamp:userID:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3CD0750();
  uint64_t v14 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  sub_1C3C376DC(a2, (uint64_t)v13);
  uint64_t v15 = sub_1C3DB8AF8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) != 1)
  {
    uint64_t v17 = (void *)sub_1C3DB8A88();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  if (!a4)
  {
    id v18 = objc_msgSend(self, sel_CR_unknown);
    sub_1C3DB8B58();

    sub_1C3DB8B28();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  }
  id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v20 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v19, sel_initWithEdits_latestTimestamp_userID_range_, v14, v17, v20, v24, v25);

  sub_1C3C37744(a2);
  return v21;
}

unint64_t sub_1C3CD0750()
{
  unint64_t result = qword_1EA388EE0;
  if (!qword_1EA388EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388EE0);
  }
  return result;
}

uint64_t sub_1C3CD0790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void, uint64_t))(*(void *)(a3 - 8) + 32))(*(void *)(*(void *)(a2 + 64) + 40), a1);
  return swift_continuation_throwingResume();
}

uint64_t sub_1C3CD0808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v8, a1, a4);
  return MEMORY[0x1F4188208](a2, v7);
}

uint64_t sub_1C3CD089C@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1C3DBB688();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t ICLegacyContext.fetch<A>(_:)()
{
  id v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1C3DBA848();
  }
  else
  {
    type metadata accessor for ICError(0);
    uint64_t v3 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    *(void *)(inited + 32) = sub_1C3DB9C38();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD00000000000002ALL;
    *(void *)(inited + 56) = 0x80000001C3DF61D0;
    sub_1C3C81620(inited);
    sub_1C3C66618();
    sub_1C3DB8768();
    swift_willThrow();
  }
  return v3;
}

uint64_t ICLegacyContext.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C3CD0BA8, 0, 0);
}

uint64_t sub_1C3CD0BA8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v6 = (void *)swift_allocObject();
  v0[8] = v6;
  uint64_t v6[2] = v4;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v5;
  v6[6] = v3;
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v2;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C3CD0CE0;
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[2];
  return withUnsafeRethrowingContinuation<A>(_:rethrow:)(v10, (uint64_t)sub_1C3CD0FD4, (uint64_t)v6, (uint64_t)sub_1C3CD1170, v7, v9);
}

uint64_t sub_1C3CD0CE0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3CD0E28, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3CD0E28()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3CD0E94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  unint64_t v12[2] = a5;
  uint64_t v12[3] = a6;
  v12[4] = a3;
  v12[5] = a4;
  void v12[6] = a1;
  void v14[4] = sub_1C3CD1798;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1C3C9FDCC;
  v14[3] = &block_descriptor_14;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_performBlock_, v13);
  _Block_release(v13);
}

uint64_t sub_1C3CD0F94()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C3CD0FD4(uint64_t a1)
{
  sub_1C3CD0E94(a1, *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3CD0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(void))MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v15 - v12;
  v11();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, a5);
  (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(a3 + 64) + 40), v10, a5);
  swift_continuation_throwingResume();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a5);
}

id sub_1C3CD1170(void *a1)
{
  return sub_1C3C61330(a1);
}

uint64_t ICLegacyContext.performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  uint64_t v6[2] = a3;
  v6[3] = a4;
  return sub_1C3CD1214((uint64_t)sub_1C3CD11EC, (uint64_t)v7, (void (*)(void))sub_1C3CD1170, (uint64_t)v6, a3, a4, a5);
}

uint64_t sub_1C3CD11EC()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1C3CD1214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v28 = a5;
  uint64_t v29 = a2;
  uint64_t v24 = a4;
  uint64_t v27 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FC738);
  uint64_t v9 = sub_1C3DBB688();
  uint64_t v10 = sub_1C3DBA938();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))((char *)&v24 - v15, 1, 1, v9);
  id v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v28;
  v18[3] = a6;
  v18[4] = v16;
  void v18[5] = a1;
  v18[6] = v29;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C3CD16F8;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_1C3CD1720;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1C3D7A8B4;
  aBlock[3] = &block_descriptor_8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)aBlock[7], sel_performBlockAndWait_, v20, v24, v25);
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v20)
  {
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v9);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v22 = v26;
  sub_1C3C97070(v9, (uint64_t)aBlock, v27);
  if (v22)
  {
    uint64_t v23 = (void *)aBlock[0];
    v25(aBlock[0]);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return swift_release();
}

uint64_t sub_1C3CD1560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FC738);
  uint64_t v9 = sub_1C3DBB688();
  uint64_t v10 = sub_1C3DBA938();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v15 - v12;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  sub_1C3CD089C((void (*)(unsigned char *))sub_1C3CD1728, (uint64_t)&v15 - v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 0, 1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(v16, v13, v10);
}

uint64_t sub_1C3CD16E8()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3CD16F8()
{
  return sub_1C3CD17B0(sub_1C3CD1560);
}

uint64_t sub_1C3CD1710()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CD1720()
{
  return sub_1C3D7A88C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C3CD1728(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t sub_1C3CD1760()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3CD1798()
{
  return sub_1C3CD17B0(sub_1C3CD0FE4);
}

uint64_t sub_1C3CD17B0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t StringProtocol.converting(from:to:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)MEMORY[0x1F4188790](a1);
  char v35 = *v4;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  uint64_t v6 = sub_1C3DB9E78();
  unint64_t v8 = v7;
  if (v3)
  {
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1C3D5F1C8(1);
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1C3DBA948();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1C3CD2318(1uLL, v6, v8);
      unint64_t v14 = v13;
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v33 = v9;
      unint64_t v34 = v11;
      unint64_t v29 = v12;
      unint64_t v30 = v14;
      uint64_t v31 = v16;
      uint64_t v32 = v18;
      sub_1C3C7E654();
      swift_bridgeObjectRetain();
      sub_1C3DB9D48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v33;
      unint64_t v8 = v34;
    }
    else
    {
      id v19 = objc_allocWithZone((Class)type metadata accessor for CustomReplacementRegularExpression());
      id v20 = sub_1C3D76DB4(0xD000000000000012, 0x80000001C3DF6200, (uint64_t)sub_1C3CD1BAC, 0, 0);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      unint64_t v29 = v6;
      unint64_t v30 = v8;
      swift_bridgeObjectRetain();
      sub_1C3DB9E78();
      uint64_t v22 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRelease();
      uint64_t v23 = (void *)sub_1C3DB9BF8();
      id v24 = objc_msgSend(v20, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v22, 0, 0, v21, v23);

      uint64_t v6 = sub_1C3DB9C38();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();

      unint64_t v8 = v26;
    }
  }
  uint64_t v27 = sub_1C3CD1D08(v6, v8);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1C3CD1BAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[4];
  if (*(void *)(v2 + 16) != 2)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  uint64_t result = sub_1C3DB9E88();
  if (*(void *)(v2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    sub_1C3DB9E88();
    sub_1C3DBA958();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C3DB9D18();
    uint64_t v5 = sub_1C3DBA978();
    BOOL v6 = __OFADD__(v4, v5);
    uint64_t result = v4 + v5;
    if (!v6)
    {
      MEMORY[0x1C877B1F0](result);
      sub_1C3C7E654();
      sub_1C3DB9D48();
      sub_1C3DB9D48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CD1D08(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = a1;
  if (*v2)
  {
    if (*v2 == 1)
    {
      swift_bridgeObjectRetain();
      sub_1C3D5F1C8(1);
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1C3DBA958();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3CD2318(1uLL, v4, a2);
      swift_bridgeObjectRelease();
      sub_1C3C7E654();
      swift_bridgeObjectRetain();
      sub_1C3DB9D48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      uint64_t v6 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, a1, a2);
      sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v6, v7);
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_1C3DB9C98();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t String.Cases.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static String.Cases.allCases.getter()
{
  return &unk_1F1F28E80;
}

uint64_t String.Cases.rawValue.getter()
{
  uint64_t v1 = 0x6D61437265707075;
  if (*v0 != 1) {
    uint64_t v1 = 0x736143626162656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D61437265776F6CLL;
  }
}

uint64_t sub_1C3CD208C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C3CE61AC(*a1, *a2);
}

uint64_t sub_1C3CD2098()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CD2148()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CD21E4()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CD2290@<X0>(char *a1@<X8>)
{
  return String.Cases.init(rawValue:)(a1);
}

void sub_1C3CD229C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEE00657361436C65;
  int v3 = *v1;
  uint64_t v4 = 0x6D61437265707075;
  unint64_t v5 = 0xE900000000000065;
  if (v3 == 1) {
    unint64_t v5 = 0xEE00657361436C65;
  }
  else {
    uint64_t v4 = 0x736143626162656BLL;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0x6D61437265776F6CLL;
  }
  if (!v6) {
    unint64_t v2 = v5;
  }
  *a1 = v7;
  a1[1] = v2;
}

void sub_1C3CD2308(void *a1@<X8>)
{
  *a1 = &unk_1F1F28CC8;
}

unint64_t sub_1C3CD2318(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1C3DB9D38();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1C3DB9E88();
}

unint64_t sub_1C3CD23CC()
{
  unint64_t result = qword_1EA387618;
  if (!qword_1EA387618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387618);
  }
  return result;
}

unint64_t sub_1C3CD2424()
{
  unint64_t result = qword_1EA387620;
  if (!qword_1EA387620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA387628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387620);
  }
  return result;
}

unsigned char *_s5CasesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CD254CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for String.Cases()
{
  return &type metadata for String.Cases;
}

uint64_t NotificationSource.init(observing:object:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB28);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
  *(void *)(v10 + 32) = a1;
  uint64_t v13 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBAD0);
  sub_1C3CD293C();
  uint64_t result = NotificationSource.init<A>(observing:object:transform:)((uint64_t)&v13, a2, a3, a4, v11, &v14);
  *a5 = v14;
  return result;
}

uint64_t NotificationSource.init<A>(observing:object:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, void *a6@<X8>)
{
  unint64_t v30 = a6;
  uint64_t v31 = a2;
  uint64_t v10 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v24 - v14;
  id v16 = objc_allocWithZone((Class)type metadata accessor for NotificationSource.Observer());
  uint64_t v27 = a4;
  id v17 = sub_1C3CD7440(a3, a4);
  uint64_t v26 = v10;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v28 = a1;
  v18(v12, a1, a5);
  id v19 = v17;
  sub_1C3DB9EA8();
  uint64_t v29 = a5;
  swift_getAssociatedConformanceWitness();
  sub_1C3DBA998();
  for (uint64_t i = v32; v32; uint64_t i = v32)
  {
    id v21 = objc_msgSend(self, sel_defaultCenter);
    id v22 = objc_msgSend(v21, sel__addObserver_selector_name_object_options_, v19, sel_handleNotification_, i, v31, 0);

    swift_beginAccess();
    sub_1C3CD48BC(&v33, (uint64_t)v22);
    swift_endAccess();

    sub_1C3DBA998();
  }

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v29);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v15, AssociatedTypeWitness);
  *unint64_t v30 = v19;
  return result;
}

unint64_t sub_1C3CD293C()
{
  unint64_t result = qword_1EB6FBAD8;
  if (!qword_1EB6FBAD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FBAD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBAD8);
  }
  return result;
}

uint64_t type metadata accessor for NotificationSource.Observer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t NotificationSource.Iterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C3CD29D0, 0, 0);
}

uint64_t sub_1C3CD29D0()
{
  uint64_t v1 = **(void ***)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C3CD2ABC;
  v2[2] = *(void *)(v0 + 16);
  v2[3] = v1;
  v2[4] = *MEMORY[0x1E4FBC8C8] & *v1;
  return MEMORY[0x1F4188298](sub_1C3CD2C08, 0, 0);
}

uint64_t sub_1C3CD2ABC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3CD2BB0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *MEMORY[0x1E4FBC8C8] & *v1;
  return MEMORY[0x1F4188298](sub_1C3CD2C08, 0, 0);
}

uint64_t sub_1C3CD2C08()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = sub_1C3DBA938();
  *uint64_t v4 = v0;
  v4[1] = sub_1C3CD2D1C;
  uint64_t v6 = v0[2];
  return MEMORY[0x1F4188148](v6, &unk_1EA387670, v2, sub_1C3CD7948, v3, 0, 0, v5);
}

uint64_t sub_1C3CD2D1C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3CD2E48(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1C3CAD8DC;
  return MEMORY[0x1F4188298](sub_1C3CD29D0, 0, 0);
}

uint64_t sub_1C3CD2EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C3CD2FC0;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v12);
}

uint64_t sub_1C3CD2FC0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id NotificationSource.makeAsyncIterator()@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

void sub_1C3CD30C8(void **a1@<X8>)
{
  NotificationSource.makeAsyncIterator()(a1);
  uint64_t v2 = *v1;
}

uint64_t sub_1C3CD30F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_1C3DBA938();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v14 = *v3;
  if (!*((unsigned char *)v3 + 8))
  {
    uint64_t v18 = *v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    sub_1C3DBA128();
    uint64_t result = sub_1C3DBA0E8();
    *uint64_t v3 = v18;
LABEL_7:
    *((unsigned char *)v3 + 8) = 0;
    return result;
  }
  if (*((unsigned char *)v3 + 8) == 1)
  {
    *uint64_t v3 = 0;
    *((unsigned char *)v3 + 8) = 2;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, a1, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
    (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(v14 + 64) + 40), v10, v6);
    return swift_continuation_resume();
  }
  if (!v14)
  {
    sub_1C3C35B14(v5, v5);
    swift_allocObject();
    uint64_t v15 = sub_1C3DBA048();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v16, a1, v5);
    uint64_t result = v15;
    sub_1C3C3370C();
    *uint64_t v3 = v15;
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1C3CD337C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_1C3DBA938();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v3;
  if (*((unsigned char *)v3 + 8))
  {
    if (*((unsigned char *)v3 + 8) == 2)
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v5);
        (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(a1 + 64) + 40), v10, v6);
        return swift_continuation_resume();
      }
      else
      {
        *uint64_t v3 = a1;
        *((unsigned char *)v3 + 8) = 1;
      }
    }
    else
    {
      uint64_t result = sub_1C3DBAF58();
      __break(1u);
    }
  }
  else
  {
    uint64_t v20 = a1;
    uint64_t v22 = v15;
    sub_1C3DBA128();
    swift_getWitnessTable();
    sub_1C3DBA5E8();
    uint64_t v16 = v22;
    uint64_t v21 = v22;
    swift_getWitnessTable();
    if (sub_1C3DBA5A8())
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = 0;
      char v17 = 2;
    }
    else
    {
      char v17 = 0;
    }
    uint64_t v18 = v20;
    *uint64_t v3 = v16;
    *((unsigned char *)v3 + 8) = v17;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v10, v14, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
    (*(void (**)(void, char *, uint64_t))(v7 + 32))(*(void *)(*(void *)(v18 + 64) + 40), v10, v6);
    swift_continuation_resume();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v5);
  }
  return result;
}

uint64_t sub_1C3CD36B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_1C3DBA938();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void *)v1;
  uint64_t v8 = *(unsigned __int8 *)(v1 + 8);
  if (v8 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v6, v8, 1, v2);
    (*(void (**)(void, char *, uint64_t))(v4 + 32))(*(void *)(*(void *)(v7 + 64) + 40), v6, v3);
    uint64_t result = swift_continuation_resume();
  }
  else
  {
    uint64_t result = sub_1C3CD766C(*(void *)v1, v8);
  }
  *(void *)uint64_t v1 = 1;
  *(unsigned char *)(v1 + 8) = 2;
  return result;
}

void sub_1C3CD37F4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v17 = v0;
  uint64_t v1 = &v0[qword_1EA387630];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = v2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v13 >= v7) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_21;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 8 * v10);
    id v12 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v12, sel__removeObserver_, v11);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v7)
  {
LABEL_21:
    swift_release();
    v18.receiver = v17;
    v18.super_class = ObjectType;
    objc_msgSendSuper2(&v18, sel_dealloc);
    return;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
}

void sub_1C3CD39C0(void *a1)
{
  id v1 = a1;
  sub_1C3CD37F4();
}

uint64_t sub_1C3CD39E8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1C3CD3A48(uint64_t a1)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v4 = sub_1C3DBA938();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  int64_t v8 = &v16[-v7];
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = &v16[-v10];
  (*(void (**)(uint64_t))((char *)v1 + qword_1EA387658))(a1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v13 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v8, v3);
  uint64_t v14 = *(void *)((char *)v1 + qword_1EA387660);
  MEMORY[0x1F4188790](v13);
  *(void *)&v16[-16] = v3;
  *(void *)&v16[-8] = v11;
  type metadata accessor for NotificationSource.Observer.State();
  int64_t v15 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(void *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_1C3CD7814();
  os_unfair_lock_unlock(v15);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v3);
}

uint64_t sub_1C3CD3CE0(void *a1)
{
  uint64_t v2 = sub_1C3DB82A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8278();
  id v6 = a1;
  sub_1C3CD3A48((uint64_t)v5);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C3CD3DC8(uint64_t a1, void *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = *MEMORY[0x1E4FBC8C8] & *a2;
  return MEMORY[0x1F4188298](sub_1C3CD3E20, 0, 0);
}

uint64_t sub_1C3CD3E20()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA387678 + dword_1EA387678);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  sub_1C3DBA938();
  *uint64_t v3 = v0;
  v3[1] = sub_1C3CD3F18;
  uint64_t v4 = v0[2];
  return v6(v4, 0, 0, (uint64_t)sub_1C3CD7994, v2);
}

uint64_t sub_1C3CD3F18()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1C3CD402C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + qword_1EA387660);
  type metadata accessor for NotificationSource.Observer.State();
  uint64_t v3 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1C3CD799C();
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C3CD4100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1C3DBA168();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_1C3CD4194, v6, v8);
}

uint64_t sub_1C3CD4194()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1C3CD423C;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C3CD423C()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

void sub_1C3CD4314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_1EA387660);
  type metadata accessor for NotificationSource.Observer.State();
  uint64_t v2 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_1C3CD7950();
  os_unfair_lock_unlock(v2);
}

void sub_1C3CD43E8()
{
}

uint64_t sub_1C3CD4410(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C3C9239C((unint64_t *)&qword_1EB6FC050);
  swift_bridgeObjectRetain();
  unint64_t v34 = a2;
  uint64_t v11 = sub_1C3DB9B08();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    char v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1C3C9239C(&qword_1EB6FC058);
      char v22 = sub_1C3DB9BE8();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      uint64_t v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C3CD5208((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1C3CD470C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C3DBB5D8();
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  uint64_t v8 = sub_1C3DBB608();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C3DBB3B8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C3DBB3B8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C3CD5480(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C3CD48BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C3DBB5C8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C3CD561C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C3CD49B8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C3DBAB48();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C3C65A38();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C3DBAB38();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C3CD4F9C(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C3CDA35C(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C3CD5184((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C3DBA8D8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C3C65A38();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C3DBA8E8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C3DBA8E8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C3CD5740((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C3CD4C38(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C3DBB5D8();
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C3DBB608();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v20 = a2;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    char v18 = v20;
    sub_1C3CD58B8(v20, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v22;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_22;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = a2;
  while (2)
  {
    unint64_t v11 = 0x80000001C3DF1C70;
    unint64_t v12 = 0xD000000000000011;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x6C61636F6CLL;
        break;
      case 2:
        unint64_t v12 = 0x726F707075736E75;
        uint64_t v13 = 6579572;
        goto LABEL_7;
      case 3:
        unint64_t v12 = 0x6C6F686563616C70;
        uint64_t v13 = 7497060;
LABEL_7:
        unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        break;
      default:
        break;
    }
    unint64_t v14 = 0x80000001C3DF1C70;
    unint64_t v15 = 0xD000000000000011;
    switch(v10)
    {
      case 1:
        unint64_t v14 = 0xE500000000000000;
        if (v12 == 0x6C61636F6CLL) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v15 = 0x726F707075736E75;
        unint64_t v14 = 0xEB00000000646574;
        goto LABEL_12;
      case 3:
        unint64_t v14 = 0xEB00000000726564;
        if (v12 == 0x6C6F686563616C70) {
          goto LABEL_15;
        }
        goto LABEL_16;
      default:
LABEL_12:
        if (v12 != v15) {
          goto LABEL_16;
        }
LABEL_15:
        if (v11 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_21;
        }
LABEL_16:
        char v16 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_18;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_21:
        uint64_t result = 0;
        char v18 = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
LABEL_22:
        *a1 = v18;
        return result;
    }
  }
}

uint64_t sub_1C3CD4F9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3862E0);
    uint64_t v2 = sub_1C3DBAC18();
    uint64_t v15 = v2;
    sub_1C3DBAAE8();
    if (sub_1C3DBAB78())
    {
      sub_1C3C65A38();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C3CDA35C(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C3DBA8D8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C3DBAB78());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

unint64_t sub_1C3CD5184(uint64_t a1, uint64_t a2)
{
  sub_1C3DBA8D8();
  unint64_t result = sub_1C3DBAAC8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C3CD5208(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C3CD9A38();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C3CD5C28();
      goto LABEL_12;
    }
    sub_1C3CD6558();
  }
  uint64_t v12 = *v3;
  sub_1C3C9239C((unint64_t *)&qword_1EB6FC050);
  uint64_t v13 = sub_1C3DB9B08();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    BOOL v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    id v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C3C9239C(&qword_1EB6FC058);
      char v21 = sub_1C3DB9BE8();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C3DBB528();
  __break(1u);
  return result;
}

uint64_t sub_1C3CD5480(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C3CD9DF8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C3CD5ECC();
      goto LABEL_22;
    }
    sub_1C3CD68F4();
  }
  uint64_t v11 = *v4;
  sub_1C3DBB5D8();
  sub_1C3DB9D08();
  uint64_t result = sub_1C3DBB608();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C3DBB3B8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C3DBB528();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C3DBB3B8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C3CD561C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C3CDA0D8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C3CD6080();
      goto LABEL_14;
    }
    sub_1C3CD6BA4();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1C3DBB5C8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1C3DBB528();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_1C3CD5740(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C3CDA35C(v6 + 1);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C3CD6218();
      goto LABEL_14;
    }
    sub_1C3CD6E08();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1C3DBA8D8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C3C65A38();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1C3DBA8E8();

    if (v12)
    {
LABEL_13:
      sub_1C3DBB528();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1C3DBA8E8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1C3CD58B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  char v23 = result;
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C3CDA604();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_1C3CD63C4();
        goto LABEL_26;
      }
      sub_1C3CD7084();
    }
    uint64_t v9 = *v3;
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C3DBB608();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v6;
      while (2)
      {
        unint64_t v13 = 0x80000001C3DF1C70;
        unint64_t v14 = 0xD000000000000011;
        switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            unint64_t v14 = 0x6C61636F6CLL;
            break;
          case 2:
            unint64_t v14 = 0x726F707075736E75;
            uint64_t v15 = 6579572;
            goto LABEL_14;
          case 3:
            unint64_t v14 = 0x6C6F686563616C70;
            uint64_t v15 = 7497060;
LABEL_14:
            unint64_t v13 = v15 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0x80000001C3DF1C70;
        unint64_t v17 = 0xD000000000000011;
        switch(v12)
        {
          case 1:
            unint64_t v16 = 0xE500000000000000;
            if (v14 != 0x6C61636F6CLL) {
              goto LABEL_21;
            }
            goto LABEL_20;
          case 2:
            unint64_t v17 = 0x726F707075736E75;
            unint64_t v16 = 0xEB00000000646574;
            goto LABEL_19;
          case 3:
            unint64_t v16 = 0xEB00000000726564;
            if (v14 != 0x6C6F686563616C70) {
              goto LABEL_21;
            }
            goto LABEL_20;
          default:
LABEL_19:
            if (v14 != v17) {
              goto LABEL_21;
            }
LABEL_20:
            if (v13 == v16) {
              goto LABEL_29;
            }
LABEL_21:
            char v18 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v18) {
              goto LABEL_30;
            }
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_26:
  uint64_t v19 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v19 + 48) + a2) = v23;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease_n();
LABEL_30:
    sub_1C3DBB528();
    __break(1u);
    JUMPOUT(0x1C3CD5BF8);
  }
  *(void *)(v19 + 16) = v22;
  return result;
}

void *sub_1C3CD5C28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC360);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C3DBABF8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1C3CD5ECC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386320);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBABF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C3CD6080()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBABF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C3CD6218()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3862E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBABF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C3CD63C4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBABF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C3CD6558()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC360);
  uint64_t v7 = sub_1C3DBAC08();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C3C9239C((unint64_t *)&qword_1EB6FC050);
    uint64_t result = sub_1C3DB9B08();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3CD68F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386320);
  uint64_t v3 = sub_1C3DBAC08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C3DBB5D8();
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    uint64_t result = sub_1C3DBB608();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3CD6BA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB18);
  uint64_t result = sub_1C3DBAC08();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1C3DBB5C8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3CD6E08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3862E0);
  uint64_t v3 = sub_1C3DBAC08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1C3DBA8D8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3CD7084()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE20);
  uint64_t v2 = sub_1C3DBAC08();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v26) {
      break;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v26) {
        break;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v26) {
          break;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v9);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v26) {
            break;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_37;
              }
              if (v9 >= v26) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v9);
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C3DBB608();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1C3CD73B4);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
LABEL_35:
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1C3CD73C4()
{
  return sub_1C3DBADB8();
}

id sub_1C3CD7440(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[qword_1EA387630] = MEMORY[0x1E4FBC870];
  uint64_t v6 = qword_1EA387660;
  uint64_t v12 = 0;
  char v13 = 2;
  type metadata accessor for NotificationSource.Observer.State();
  unint64_t v7 = v2;
  uint64_t v8 = sub_1C3CD73C4();
  sub_1C3CD766C(0, 2);
  *(void *)&v2[v6] = v8;
  int64_t v9 = &v7[qword_1EA387658];
  *(void *)int64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_1C3CD7540()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_1C3CD754C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for NotificationSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for NotificationSource.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3CD7598()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C3CD75FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1C3CD7604(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C3CD764C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1C3CD764C(uint64_t a1, char a2)
{
  if (!a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C3CD765C(uint64_t a1)
{
  return sub_1C3CD766C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1C3CD766C(uint64_t a1, char a2)
{
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3CD767C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C3CD764C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C3CD766C(v5, v6);
  return a1;
}

uint64_t sub_1C3CD76D0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C3CD766C(v4, v5);
  return a1;
}

uint64_t sub_1C3CD7710(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1C3CD7758(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C3CD779C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C3CD77B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for NotificationSource.Observer.State()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C3CD77E4()
{
}

uint64_t sub_1C3CD7814()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for NotificationSource.Observer.State();
  return sub_1C3CD30F4(v1, v2);
}

uint64_t sub_1C3CD7860(uint64_t a1)
{
  int v4 = *(void **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  uint64_t v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1C3C3259C;
  v5[4] = *MEMORY[0x1E4FBC8C8] & *v4;
  return MEMORY[0x1F4188298](sub_1C3CD3E20, 0, 0);
}

void sub_1C3CD7948()
{
  sub_1C3CD4314(*(void *)(v0 + 16));
}

uint64_t sub_1C3CD7950()
{
  uint64_t v0 = type metadata accessor for NotificationSource.Observer.State();
  return sub_1C3CD36B0(v0);
}

void sub_1C3CD7994(uint64_t a1)
{
  sub_1C3CD402C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C3CD799C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for NotificationSource.Observer.State();
  return sub_1C3CD337C(v1, v2);
}

uint64_t sub_1C3CD79E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

uint64_t sub_1C3CD7A84()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387680);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387680);
  if (qword_1EA3856C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA386658);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id ICModernObjectProvider.context.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t ICModernObjectProvider.__allocating_init(context:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ICModernObjectProvider.init(context:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

double ICModernObjectProvider.object(for:)@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v4 = *a1;
  char v5 = *(void **)(v2 + 16);
  switch(v4 >> 62)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
      char v6 = (uint64_t *)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 16);
      break;
    default:
      char v6 = (uint64_t *)(v4 + 16);
      break;
  }
  uint64_t v7 = *v6;
  v23[0] = 0;
  id v8 = objc_msgSend(v5, sel_existingObjectWithID_error_, v7, v23);
  id v22 = v23[0];
  if (v8)
  {
    *(void *)(a2 + 24) = sub_1C3C4C8B4(0, &qword_1EA387698);
    *(void *)a2 = v8;
    id v9 = v22;
  }
  else
  {
    id v11 = v23[0];
    uint64_t v12 = (void *)sub_1C3DB8798();

    swift_willThrow();
    if (qword_1EA385898 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C3DB9048();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA387680);
    swift_retain_n();
    unint64_t v14 = sub_1C3DB9028();
    os_log_type_t v15 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)char v16 = 138412290;
      uint64_t v18 = (void *)v17;
      switch(v4 >> 62)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
          unint64_t v19 = (void **)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 16);
          break;
        default:
          unint64_t v19 = (void **)(v4 + 16);
          break;
      }
      unint64_t v20 = *v19;
      v23[0] = v20;
      id v21 = v20;
      sub_1C3DBA9A8();
      void *v18 = v20;
      swift_release_n();
      _os_log_impl(&dword_1C3A61000, v14, v15, "Modern Notes object does not exist in context {identifier: %@}", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v18, -1, -1);
      MEMORY[0x1C877E600](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t ICModernObjectProvider.performAndWait(task:)()
{
  return sub_1C3DBA838();
}

uint64_t ICModernObjectProvider.performAndWait<A>(task:)()
{
  return sub_1C3DBA838();
}

uint64_t ICModernObjectProvider.deinit()
{
  return v0;
}

uint64_t ICModernObjectProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

double sub_1C3CD7F94@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return ICModernObjectProvider.object(for:)(a1, a2);
}

uint64_t sub_1C3CD7FBC()
{
  return sub_1C3DBA838();
}

void ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)(void *a1@<X0>, char a2@<W1>, char a3@<W2>, unint64_t *a4@<X8>)
{
  self;
  id v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    ICObjectReferences<>.init(account:recursivelyIncludeChildren:)(v8, a2 & 1, &v24);
    unint64_t v9 = v24;
  }
  else
  {
    self;
    unint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10)
    {
      ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(v10, a2 & 1, (uint64_t *)&v24);
      unint64_t v9 = v24;
    }
    else
    {
      self;
      id v11 = (void *)swift_dynamicCastObjCClass();
      if (v11)
      {
        ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(v11, a2 & 1, a3 & 1, &v24);
        unint64_t v9 = v24;
      }
      else
      {
        self;
        uint64_t v12 = (void *)swift_dynamicCastObjCClass();
        if (v12)
        {
          ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v12, a2 & 1, &v24);
          unint64_t v9 = v24;
        }
        else
        {
          if (qword_1EA385898 != -1) {
            swift_once();
          }
          uint64_t v13 = sub_1C3DB9048();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EA387680);
          id v14 = a1;
          os_log_type_t v15 = sub_1C3DB9028();
          os_log_type_t v16 = sub_1C3DBA6B8();
          if (os_log_type_enabled(v15, v16))
          {
            uint64_t v17 = (uint8_t *)swift_slowAlloc();
            uint64_t v18 = swift_slowAlloc();
            unint64_t v24 = v18;
            *(_DWORD *)uint64_t v17 = 136315138;
            id v19 = objc_msgSend(v14, sel_identifier);
            if (v19)
            {
              unint64_t v20 = v19;
              uint64_t v21 = sub_1C3DB9C38();
              unint64_t v23 = v22;
            }
            else
            {
              unint64_t v23 = 0xA300000000000000;
              uint64_t v21 = 9732322;
            }
            sub_1C3C516D0(v21, v23, (uint64_t *)&v24);
            sub_1C3DBA9A8();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C3A61000, v15, v16, "Cannot create reference for object {identifier: %s}", v17, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C877E600](v18, -1, -1);
            MEMORY[0x1C877E600](v17, -1, -1);
          }
          else
          {
          }
          unint64_t v9 = 0xF000000000000007;
        }
      }
    }
  }
  *a4 = v9;
}

void ICObjectReferences<>.init(account:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v17 = (void *)swift_allocObject();
    _OWORD v17[2] = objc_msgSend(a1, sel_objectID);
    id v18 = objc_msgSend(a1, sel_name);
    uint64_t v19 = sub_1C3DB9C38();
    uint64_t v21 = v20;

    v17[3] = v19;
    void v17[4] = v21;

    v17[5] = MEMORY[0x1E4FBC860];
LABEL_17:
    *a3 = v17;
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD7260;
  *(void *)(inited + 32) = objc_msgSend(a1, sel_defaultFolder);
  sub_1C3DBA038();
  unint64_t v6 = inited;
  id v7 = objc_msgSend(a1, sel_visibleSubFolders);
  sub_1C3C4C8B4(0, &qword_1EA3876A0);
  unint64_t v8 = sub_1C3DBA018();

  unint64_t v27 = v6;
  sub_1C3D79948(v8);
  unint64_t v9 = v6;
  if (!(v6 >> 62))
  {
    uint64_t v10 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t v17 = (void *)swift_allocObject();
    _OWORD v17[2] = objc_msgSend(a1, sel_objectID);
    id v22 = objc_msgSend(a1, sel_name);
    uint64_t v23 = sub_1C3DB9C38();
    uint64_t v25 = v24;

    v17[3] = v23;
    void v17[4] = v25;
    v17[5] = v12;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C3DBAFB8();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C3C9D89C(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = 0;
    unint64_t v12 = v27;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C877C220](v11, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v11 + 32);
      }
      ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(v13, 1, &v26);
      uint64_t v14 = v26;
      unint64_t v27 = v12;
      unint64_t v16 = *(void *)(v12 + 16);
      unint64_t v15 = *(void *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C3C9D89C(v15 > 1, v16 + 1, 1);
        unint64_t v12 = v27;
      }
      ++v11;
      *(void *)(v12 + 16) = v16 + 1;
      *(void *)(v12 + 8 * v16 + 32) = v14;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  __break(1u);
}

void ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = objc_msgSend(a1, sel_objectID);
    id v14 = objc_msgSend(a1, sel_title);
    uint64_t v15 = sub_1C3DB9C38();
    uint64_t v17 = v16;

    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = v17;

    unint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_46:
    *(void *)(v13 + 40) = v18;
    *a3 = v13 | 0x4000000000000000;
    return;
  }
  id v4 = objc_msgSend(a1, sel_visibleSubFolders);
  sub_1C3C4C8B4(0, &qword_1EA3876A0);
  unint64_t v5 = sub_1C3DBA018();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1C3C9D89C(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v7 = 0;
  unint64_t v8 = v40;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1C877C220](v7, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * v7 + 32);
    }
    ICObjectReferences<>.init(folder:recursivelyIncludeChildren:)(&v39, v9, 1);
    uint64_t v10 = v39;
    unint64_t v40 = v8;
    unint64_t v12 = *(void *)(v8 + 16);
    unint64_t v11 = *(void *)(v8 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1C3C9D89C(v11 > 1, v12 + 1, 1);
      unint64_t v8 = v40;
    }
    ++v7;
    *(void *)(v8 + 16) = v12 + 1;
    *(void *)(v8 + 8 * v12 + 32) = v10;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
LABEL_16:
  id v19 = objc_msgSend(a1, sel_visibleNotes);
  sub_1C3C4C8B4(0, &qword_1EA3876A8);
  unint64_t v20 = sub_1C3DBA018();

  unint64_t v40 = MEMORY[0x1E4FBC860];
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_18:
      if (v21 >= 1)
      {
        for (uint64_t i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v23 = (id)MEMORY[0x1C877C220](i, v20);
          }
          else {
            id v23 = *(id *)(v20 + 8 * i + 32);
          }
          uint64_t v24 = v23;
          if (objc_msgSend(v23, sel_isEmpty))
          {
          }
          else
          {
            sub_1C3DBAE18();
            sub_1C3DBAE58();
            sub_1C3DBAE68();
            sub_1C3DBAE28();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v25 = v40;
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_44;
        }
        goto LABEL_31;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_44;
  }
LABEL_31:
  if ((v25 & 0x4000000000000000) == 0)
  {
    uint64_t v26 = *(void *)(v25 + 16);
    swift_retain();
    if (!v26)
    {
LABEL_45:
      swift_release_n();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = objc_msgSend(a1, sel_objectID);
      id v33 = objc_msgSend(a1, sel_title);
      uint64_t v34 = sub_1C3DB9C38();
      uint64_t v36 = v35;

      *(void *)(v13 + 24) = v34;
      *(void *)(v13 + 32) = v36;
      unint64_t v40 = v8;
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      sub_1C3D79B34(v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unint64_t v18 = v40;
      goto LABEL_46;
    }
    goto LABEL_33;
  }
LABEL_44:
  swift_retain();
  uint64_t v26 = sub_1C3DBAFB8();
  if (!v26) {
    goto LABEL_45;
  }
LABEL_33:
  if (v26 >= 1)
  {
    uint64_t v27 = 0;
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v25 & 0xC000000000000001) != 0) {
        id v29 = (id)MEMORY[0x1C877C220](v27, v25);
      }
      else {
        id v29 = *(id *)(v25 + 8 * v27 + 32);
      }
      ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(v29, 1, 0, &v40);
      unint64_t v30 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = sub_1C3D83270(0, v28[2] + 1, 1, v28);
      }
      unint64_t v32 = v28[2];
      unint64_t v31 = v28[3];
      if (v32 >= v31 >> 1) {
        uint64_t v28 = sub_1C3D83270((void *)(v31 > 1), v32 + 1, 1, v28);
      }
      ++v27;
      void v28[2] = v32 + 1;
      v28[v32 + 4] = v30;
    }
    while (v26 != v27);
    goto LABEL_45;
  }
LABEL_49:
  __break(1u);
}

void ICObjectReferences<>.init(note:recursivelyIncludeChildren:forPagesHandoff:)(id a1@<X0>, char a2@<W1>, char a3@<W2>, unint64_t *a4@<X8>)
{
  id v6 = a1;
  if ((a2 & 1) == 0 || objc_msgSend(a1, sel_isPasswordProtected) && (a3 & 1) == 0)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = objc_msgSend(v6, sel_objectID);
    uint64_t v10 = v6;
    id v11 = objc_msgSend(v6, sel_title);
    if (v11)
    {
      unint64_t v12 = v11;
      uint64_t v13 = sub_1C3DB9C38();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    *(void *)(v9 + 24) = v13;
    *(void *)(v9 + 32) = v15;

    uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_59:
    *(void *)(v9 + 40) = v16;
    *a4 = v9 | 0x8000000000000000;
    return;
  }
  id v17 = objc_msgSend(v6, sel_attachments);
  if (!v17)
  {
    uint64_t v34 = 0;
    goto LABEL_54;
  }
  unint64_t v18 = (unint64_t)v17;
  id v58 = v6;
  uint64_t v59 = a4;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
  sub_1C3CDB330(&qword_1EA3860B8, (unint64_t *)&qword_1EA388CA0);
  uint64_t v19 = sub_1C3DBA438();

  if ((v19 & 0xC000000000000001) == 0)
  {
    unint64_t v20 = sub_1C3CDA97C(v19, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C3CDACC4);
    unint64_t v35 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0)
    {
LABEL_33:
      uint64_t v36 = sub_1C3DBAB38();
      if (v36)
      {
LABEL_34:
        uint64_t v64 = MEMORY[0x1E4FBC860];
        sub_1C3C9D89C(0, v36 & ~(v36 >> 63), 0);
        if (v35)
        {
          uint64_t v37 = (void *)sub_1C3DBAAD8();
          char v39 = 1;
        }
        else
        {
          uint64_t v37 = (void *)sub_1C3CDB460(v20);
          char v39 = v40 & 1;
        }
        id v61 = v37;
        uint64_t v62 = (char **)v38;
        char v63 = v39;
        if (v36 < 0)
        {
          __break(1u);
        }
        else
        {
          while (1)
          {
LABEL_43:
            unint64_t v5 = (char **)v61;
            id v4 = v62;
            LOBYTE(v18) = v63;
            sub_1C3CDB014((uint64_t)v61, (uint64_t)v62, v63, v20, (unint64_t *)&qword_1EA388CA0);
            ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v46, 1, v60);
            unint64_t v47 = v60[0];
            uint64_t v48 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C3C9D89C(0, *(void *)(v48 + 16) + 1, 1);
              uint64_t v48 = v64;
            }
            unint64_t v50 = *(void *)(v48 + 16);
            unint64_t v49 = *(void *)(v48 + 24);
            if (v50 >= v49 >> 1)
            {
              sub_1C3C9D89C(v49 > 1, v50 + 1, 1);
              uint64_t v48 = v64;
            }
            *(void *)(v48 + 16) = v50 + 1;
            *(void *)(v48 + 8 * v50 + 32) = v47;
            if (!v35) {
              break;
            }
            if ((v18 & 1) == 0) {
              goto LABEL_60;
            }
            if (sub_1C3DBAAF8()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3876B0);
            char v51 = (void (*)(unint64_t *, void))sub_1C3DBA468();
            sub_1C3DBABA8();
            v51(v60, 0);
            if (!--v36) {
              goto LABEL_52;
            }
          }
        }
        char v41 = (void *)sub_1C3CDAF08((int64_t)v5, (int)v4, v18, v20);
        uint64_t v43 = v42;
        char v45 = v44;
        sub_1C3CC0420((uint64_t)v5, (uint64_t)v4, v18);
        id v61 = v41;
        uint64_t v62 = (char **)v43;
        char v63 = v45 & 1;
        if (--v36) {
          goto LABEL_43;
        }
LABEL_52:
        sub_1C3CC0420((uint64_t)v61, (uint64_t)v62, v63);
        swift_release();
        uint64_t v34 = v64;
        goto LABEL_53;
      }
LABEL_38:
      swift_release();
      uint64_t v34 = MEMORY[0x1E4FBC860];
LABEL_53:
      id v6 = v58;
      a4 = v59;
LABEL_54:
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = objc_msgSend(v6, sel_objectID);
      uint64_t v52 = v6;
      id v53 = objc_msgSend(v6, sel_title);
      if (v53)
      {
        uint64_t v54 = v53;
        uint64_t v55 = sub_1C3DB9C38();
        uint64_t v57 = v56;
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v57 = 0;
      }
      *(void *)(v9 + 24) = v55;
      *(void *)(v9 + 32) = v57;

      uint64_t v16 = MEMORY[0x1E4FBC860];
      if (v34) {
        uint64_t v16 = v34;
      }
      goto LABEL_59;
    }
LABEL_37:
    uint64_t v36 = *(void *)(v20 + 16);
    if (v36) {
      goto LABEL_34;
    }
    goto LABEL_38;
  }
  unint64_t v20 = MEMORY[0x1E4FBC870];
  v60[0] = MEMORY[0x1E4FBC870];
  sub_1C3DBAAE8();
  uint64_t v21 = sub_1C3DBAB78();
  if (!v21)
  {
LABEL_32:
    swift_release();
    unint64_t v35 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0) {
      goto LABEL_33;
    }
    goto LABEL_37;
  }
  id v4 = &selRef_isBeginningHashtagAtSelectionRange_inString_languageHasSpaces_;
  unint64_t v5 = &selRef_mutableFilePresenters;
  while (1)
  {
    uint64_t v64 = v21;
    swift_dynamicCast();
    LOBYTE(v18) = (_BYTE)v61;
    if ((objc_msgSend(v61, sel_needsInitialFetchFromCloud) & 1) == 0
      && (objc_msgSend(v61, sel_markedForDeletion) & 1) == 0)
    {
      unint64_t v18 = (unint64_t)objc_msgSend(v61, sel_parentAttachment);

      if (!v18) {
        break;
      }
    }

LABEL_16:
    uint64_t v21 = sub_1C3DBAB78();
    if (!v21)
    {
      unint64_t v20 = v60[0];
      goto LABEL_32;
    }
  }
  id v22 = v61;
  unint64_t v18 = v60[0];
  unint64_t v23 = *(void *)(v60[0] + 16);
  if (*(void *)(v60[0] + 24) <= v23)
  {
    sub_1C3CDA368(v23 + 1, &qword_1EA386328);
    unint64_t v18 = v60[0];
  }
  uint64_t v24 = sub_1C3DBA8D8();
  unint64_t v25 = v18 + 56;
  uint64_t v26 = -1 << *(unsigned char *)(v18 + 32);
  unint64_t v27 = v24 & ~v26;
  unint64_t v28 = v27 >> 6;
  if (((-1 << v27) & ~*(void *)(v18 + 56 + 8 * (v27 >> 6))) != 0)
  {
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v18 + 56 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v18 + 48) + 8 * v29) = v22;
    ++*(void *)(v18 + 16);
    goto LABEL_16;
  }
  char v30 = 0;
  unint64_t v31 = (unint64_t)(63 - v26) >> 6;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    BOOL v32 = v28 == v31;
    if (v28 == v31) {
      unint64_t v28 = 0;
    }
    v30 |= v32;
    uint64_t v33 = *(void *)(v25 + 8 * v28);
    if (v33 != -1)
    {
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(void *a1@<X0>, char a2@<W1>, unint64_t *a3@<X8>)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = objc_msgSend(a1, sel_objectID);
    id v25 = objc_msgSend(a1, sel_title);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_1C3DB9C38();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    *(void *)(v24 + 24) = v27;
    *(void *)(v24 + 32) = v29;
    *(unsigned char *)(v24 + 40) = 0;

    *(void *)(v24 + 48) = MEMORY[0x1E4FBC860];
    goto LABEL_57;
  }
  uint64_t v7 = (char *)objc_msgSend(a1, sel_subAttachments);
  if (!v7)
  {
    uint64_t v30 = 0;
LABEL_51:
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = objc_msgSend(a1, sel_objectID);
    id v47 = objc_msgSend(a1, sel_title);
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = sub_1C3DB9C38();
      uint64_t v51 = v50;
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v51 = 0;
    }
    *(void *)(v24 + 24) = v49;
    *(void *)(v24 + 32) = v51;

    uint64_t v52 = MEMORY[0x1E4FBC860];
    if (v30) {
      uint64_t v52 = v30;
    }
    *(void *)(v24 + 48) = v52;
    *(unsigned char *)(v24 + 40) = 0;
LABEL_57:
    *a3 = v24 | 0xC000000000000000;
    return;
  }
  unint64_t v8 = v7;
  id v53 = a3;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
  sub_1C3CDB330(&qword_1EA3860B8, (unint64_t *)&qword_1EA388CA0);
  uint64_t v9 = sub_1C3DBA438();

  if ((v9 & 0xC000000000000001) == 0)
  {
    uint64_t v10 = sub_1C3CDA97C(v9, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C3CDAAF4);
    unint64_t v31 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0)
    {
LABEL_30:
      uint64_t v32 = sub_1C3DBAB38();
      if (v32)
      {
LABEL_31:
        uint64_t v59 = MEMORY[0x1E4FBC860];
        sub_1C3C9D89C(0, v32 & ~(v32 >> 63), 0);
        if (v31)
        {
          uint64_t v33 = (void *)sub_1C3DBAAD8();
          char v35 = 1;
        }
        else
        {
          uint64_t v33 = (void *)sub_1C3CDB460(v10);
          char v35 = v36 & 1;
        }
        id v56 = v33;
        uint64_t v57 = (char **)v34;
        char v58 = v35;
        if (v32 < 0)
        {
          __break(1u);
        }
        else
        {
          while (1)
          {
LABEL_40:
            int64_t v4 = (int64_t)v56;
            uint64_t v3 = v57;
            LOBYTE(v8) = v58;
            sub_1C3CDB014((uint64_t)v56, (uint64_t)v57, v58, v10, (unint64_t *)&qword_1EA388CA0);
            ICObjectReferences<>.init(attachment:recursivelyIncludeChildren:)(v55);
            uint64_t v42 = v55[0];
            uint64_t v43 = v59;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C3C9D89C(0, *(void *)(v43 + 16) + 1, 1);
              uint64_t v43 = v59;
            }
            unint64_t v45 = *(void *)(v43 + 16);
            unint64_t v44 = *(void *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_1C3C9D89C(v44 > 1, v45 + 1, 1);
              uint64_t v43 = v59;
            }
            *(void *)(v43 + 16) = v45 + 1;
            *(void *)(v43 + 8 * v45 + 32) = v42;
            if (!v31) {
              break;
            }
            if ((v8 & 1) == 0) {
              goto LABEL_58;
            }
            if (sub_1C3DBAAF8()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3876B0);
            uint64_t v46 = (void (*)(void *, void))sub_1C3DBA468();
            sub_1C3DBABA8();
            v46(v55, 0);
            if (!--v32) {
              goto LABEL_49;
            }
          }
        }
        uint64_t v37 = (void *)sub_1C3CDAF08(v4, (int)v3, (char)v8, v10);
        uint64_t v39 = v38;
        char v41 = v40;
        sub_1C3CC0420(v4, (uint64_t)v3, (char)v8);
        id v56 = v37;
        uint64_t v57 = (char **)v39;
        char v58 = v41 & 1;
        if (--v32) {
          goto LABEL_40;
        }
LABEL_49:
        sub_1C3CC0420((uint64_t)v56, (uint64_t)v57, v58);
        swift_release();
        uint64_t v30 = v59;
        goto LABEL_50;
      }
LABEL_35:
      swift_release();
      uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_50:
      a3 = v53;
      goto LABEL_51;
    }
LABEL_34:
    uint64_t v32 = *(void *)(v10 + 16);
    if (v32) {
      goto LABEL_31;
    }
    goto LABEL_35;
  }
  uint64_t v10 = MEMORY[0x1E4FBC870];
  v55[0] = MEMORY[0x1E4FBC870];
  sub_1C3DBAAE8();
  uint64_t v11 = sub_1C3DBAB78();
  if (!v11)
  {
LABEL_29:
    swift_release();
    unint64_t v31 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_30;
    }
    goto LABEL_34;
  }
  uint64_t v3 = &selRef_isBeginningHashtagAtSelectionRange_inString_languageHasSpaces_;
  int64_t v4 = -1;
  while (1)
  {
    uint64_t v59 = v11;
    swift_dynamicCast();
    LOBYTE(v8) = (_BYTE)v56;
    if ((objc_msgSend(v56, sel_needsInitialFetchFromCloud) & 1) == 0
      && (objc_msgSend(v56, sel_markedForDeletion) & 1) == 0)
    {
      break;
    }

LABEL_7:
    uint64_t v11 = sub_1C3DBAB78();
    if (!v11)
    {
      uint64_t v10 = v55[0];
      goto LABEL_29;
    }
  }
  id v12 = v56;
  unint64_t v8 = (char *)v55[0];
  unint64_t v13 = *(void *)(v55[0] + 16);
  if (*(void *)(v55[0] + 24) <= v13)
  {
    sub_1C3CDA368(v13 + 1, &qword_1EA386328);
    unint64_t v8 = (char *)v55[0];
  }
  uint64_t v14 = sub_1C3DBA8D8();
  uint64_t v15 = v8 + 56;
  uint64_t v16 = -1 << v8[32];
  unint64_t v17 = v14 & ~v16;
  unint64_t v18 = v17 >> 6;
  if (((-1 << v17) & ~*(void *)&v8[8 * (v17 >> 6) + 56]) != 0)
  {
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)&v8[8 * (v17 >> 6) + 56])) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_22:
    *(void *)&v15[(v19 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v19;
    *(void *)(*((void *)v8 + 6) + 8 * v19) = v12;
    ++*((void *)v8 + 2);
    goto LABEL_7;
  }
  char v20 = 0;
  unint64_t v21 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v21 || (v20 & 1) == 0)
  {
    BOOL v22 = v18 == v21;
    if (v18 == v21) {
      unint64_t v18 = 0;
    }
    v20 |= v22;
    uint64_t v23 = *(void *)&v15[8 * v18];
    if (v23 != -1)
    {
      unint64_t v19 = __clz(__rbit64(~v23)) + (v18 << 6);
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t ICObjectReferences<>.recursivelyAddingChildren(using:)()
{
  return sub_1C3DBA838();
}

void sub_1C3CD9774(unint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v14 = (void *)a1;
  ICModernObjectProvider.object(for:)((unint64_t *)&v14, (uint64_t)v13);
  if (v13[3])
  {
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
    if (swift_dynamicCast())
    {
      ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)(v14, 1, 0, v13);
      unint64_t v4 = v13[0];
      if ((~v13[0] & 0xF000000000000007) == 0)
      {
        swift_retain();
        unint64_t v4 = a1;
      }
      *a2 = v4;
      return;
    }
  }
  else
  {
    sub_1C3CC623C((uint64_t)v13);
  }
  if (qword_1EA385898 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB9048();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EA387680);
  swift_retain_n();
  id v6 = sub_1C3DB9028();
  os_log_type_t v7 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 138412290;
    switch(a1 >> 62)
    {
      case 1uLL:
      case 2uLL:
      case 3uLL:
        uint64_t v9 = (void **)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 16);
        break;
      default:
        uint64_t v9 = (void **)(a1 + 16);
        break;
    }
    uint64_t v10 = *v9;
    v13[0] = (unint64_t)v10;
    id v11 = v10;
    sub_1C3DBA9A8();
    *id v12 = v10;
    swift_release_n();
    _os_log_impl(&dword_1C3A61000, v6, v7, "Cannot get object {identifier: %@}", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v12, -1, -1);
    MEMORY[0x1C877E600](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  *a2 = a1;
  swift_retain();
}

uint64_t sub_1C3CD9A10()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3CD9A38()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C3DB8B98();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC360);
  uint64_t v5 = sub_1C3DBAC08();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    char v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v39 = v4;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v2 + 72);
      uint64_t v25 = v2;
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 32);
      v26(v14, v23 + v24 * v18, v15);
      sub_1C3CDB408();
      uint64_t result = sub_1C3DB9B08();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v39;
      int64_t v13 = v40;
      uint64_t v2 = v25;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C3CD9DF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386320);
  uint64_t v3 = sub_1C3DBAC08();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      uint64_t result = sub_1C3DBB608();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C3CDA0D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB18);
  uint64_t result = sub_1C3DBAC08();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1C3DBB5C8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C3CDA35C(uint64_t a1)
{
  return sub_1C3CDA368(a1, &qword_1EA3862E0);
}

uint64_t sub_1C3CDA368(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1C3DBAC08();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1C3DBA8D8();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1C3CDA604()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE20);
  uint64_t v2 = sub_1C3DBAC08();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_37;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  BOOL v27 = (void *)(v1 + 56);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v13 >= v7) {
      break;
    }
    unint64_t v14 = v27[v13];
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        break;
      }
      unint64_t v14 = v27[v9];
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v7) {
          break;
        }
        unint64_t v14 = v27[v9];
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v7) {
            break;
          }
          unint64_t v14 = v27[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_39;
              }
              if (v9 >= v7) {
                goto LABEL_33;
              }
              unint64_t v14 = v27[v9];
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C3DBB608();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C3CDA96CLL);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
  if (v25 > 63) {
    bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v27 = -1 << v25;
  }
  *(void *)(v1 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1C3CDA97C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x1C877E600](v9, -1, -1);
  }
  return v8;
}

void sub_1C3CDAAF4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_18:
    id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    if (objc_msgSend(v15, sel_needsInitialFetchFromCloud))
    {
    }
    else
    {
      unsigned __int8 v16 = objc_msgSend(v15, sel_markedForDeletion);

      if ((v16 & 1) == 0)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v19++, 1);
        if (v12) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_27:
    swift_retain();
    sub_1C3D8FB18(a1, a2, v19, a3);
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1C3CDACC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
LABEL_4:
  uint64_t v20 = v4;
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v5 << 6);
LABEL_22:
    id v16 = *(id *)(*(void *)(a3 + 48) + 8 * v12);
    if (!objc_msgSend(v16, sel_needsInitialFetchFromCloud)
      && (objc_msgSend(v16, sel_markedForDeletion) & 1) == 0)
    {
      id v17 = objc_msgSend(v16, sel_parentAttachment);

      id v16 = v17;
      if (!v17)
      {
        *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        uint64_t v4 = v20 + 1;
        if (!__OFADD__(v20, 1)) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_28:
        swift_retain();
        sub_1C3D8FB18(a1, a2, v20, a3);
        return;
      }
    }
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v10) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  ++v5;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v5 = v13 + 1;
  if (v13 + 1 >= v10) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v5 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v5);
  if (v14)
  {
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

int64_t sub_1C3CDAF08(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1C3CDAFEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C3CDB000(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C3CDB014(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C877C060](a1, a2, v8);
      sub_1C3C4C8B4(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C3DBAB18() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C3DBAB28();
  sub_1C3C4C8B4(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1C3DBA8D8();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_1C3DBA8E8();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_1C3DBA8E8();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  id v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);
  id v17 = v16;
}

uint64_t sub_1C3CDB288()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C3CDB2D0(unint64_t *a1@<X8>)
{
  sub_1C3CD9774(*(void *)(v1 + 24), a1);
}

uint64_t sub_1C3CDB2EC()
{
  return sub_1C3CDB330(&qword_1EA3876B8, (unint64_t *)&qword_1EA388CF0);
}

uint64_t sub_1C3CDB330(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3C4C8B4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CDB374()
{
  return sub_1C3CDB330(qword_1EA3864F0, (unint64_t *)&qword_1EA388CF0);
}

uint64_t type metadata accessor for ICModernObjectProvider()
{
  return self;
}

uint64_t method lookup function for ICModernObjectProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ICModernObjectProvider);
}

uint64_t dispatch thunk of ICModernObjectProvider.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1C3CDB408()
{
  unint64_t result = qword_1EB6FC050;
  if (!qword_1EB6FC050)
  {
    sub_1C3DB8B98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC050);
  }
  return result;
}

uint64_t sub_1C3CDB460(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C3CDB4E8()
{
  return sub_1C3CD9A10();
}

uint64_t withUnsafeRethrowingContinuation<A>(_:rethrow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a4;
  void v6[4] = a5;
  uint64_t v6[2] = a1;
  uint64_t v13 = (char *)&dword_1EA3876D0 + dword_1EA3876D0;
  id v11 = (void *)swift_task_alloc();
  v6[5] = v11;
  *id v11 = v6;
  v11[1] = sub_1C3CDB5E0;
  return ((uint64_t (*)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))v13)(a1, 0, 0, a2, a3, a6);
}

uint64_t sub_1C3CDB5E0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3CDB714, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3CDB714()
{
  unint64_t v1 = *(void **)(v0 + 48);
  (*(void (**)(void *))(v0 + 24))(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3CDB7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a1;
  v6[11] = a4;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v7 = sub_1C3DBA168();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  return MEMORY[0x1F4188298](sub_1C3CDB83C, v7, v9);
}

uint64_t sub_1C3CDB83C()
{
  unint64_t v1 = v0 + 2;
  uint64_t v2 = v0[10];
  uint64_t v3 = (void (*)(void))v0[11];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1C3CDB90C;
  uint64_t v4 = (google::protobuf::io::ZeroCopyOutputStream *)swift_continuation_init();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v4);
  v3();
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_1C3CDB90C()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t withCheckedRethrowingContinuation<A>(_:rethrow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a4;
  void v6[4] = a5;
  uint64_t v6[2] = a1;
  uint64_t v13 = (char *)&dword_1EA3876E0 + dword_1EA3876E0;
  uint64_t v11 = (void *)swift_task_alloc();
  v6[5] = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_1C3CDBB0C;
  return ((uint64_t (*)(uint64_t, void, void, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))v13)(a1, 0, 0, 0xD00000000000002DLL, 0x80000001C3DF6310, a2, a3, a6);
}

uint64_t sub_1C3CDBB0C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3CDDB8C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3CDBC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *id v17 = v8;
  v17[1] = sub_1C3C4DAF4;
  return MEMORY[0x1F4188160](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C3CDBD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C3259C;
  return _TaskGroupProtocol.waitForResults()(a1, a2, a3);
}

uint64_t _TaskGroupProtocol.waitForResults()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getAssociatedTypeWitness();
  v4[7] = swift_task_alloc();
  v4[8] = *(void *)(a2 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CDBEDC, 0, 0);
}

uint64_t sub_1C3CDBEDC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[3];
  (*(void (**)(void, void, uint64_t))(v0[8] + 16))(v0[9], v0[5], v2);
  swift_getAssociatedConformanceWitness();
  sub_1C3DBA5F8();
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  uint64_t v5 = *(void *)(v1 + 16);
  *uint64_t v4 = v0;
  v4[1] = sub_1C3CDC008;
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[2];
  uint64_t v9 = v0[3];
  return MEMORY[0x1F4187E88](v8, v6, &unk_1EA3876F8, v3, v9, v7, v5);
}

uint64_t sub_1C3CDC008()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 24);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3CDC1DC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1C3CDC1DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3CDC24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[6] = AssociatedTypeWitness;
  v4[7] = *(void *)(AssociatedTypeWitness - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CDC324, 0, 0);
}

uint64_t sub_1C3CDC324()
{
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[3], v0[6]);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C3DBA5D8();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C3CDC410(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1C3C4DAF4;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3876F0 + dword_1EA3876F0);
  return v9(a1, a2, v7, v6);
}

uint64_t sub_1C3CDC4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C4DAF4;
  return _TaskGroupProtocol.waitForResults()(a1, a2, a3);
}

uint64_t sub_1C3CDC584(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3CAD8DC;
  return MEMORY[0x1F4187C50](a1, a2);
}

uint64_t sub_1C3CDC630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *unint64_t v10 = v5;
  v10[1] = sub_1C3CDDB90;
  return MEMORY[0x1F4187C48](a1, a2, a3, a5);
}

uint64_t ThrowingTaskGroup.waitForAll(cancelOnFirstError:)(char a1, void *a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 160) = a1;
  *(void *)(v3 + 32) = a2[2];
  uint64_t v5 = sub_1C3DBA938();
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = *(void *)(v5 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  uint64_t v6 = a2[3];
  *(void *)(v3 + 64) = v6;
  *(void *)(v3 + 72) = a2[4];
  uint64_t v7 = sub_1C3DBA358();
  *(void *)(v3 + 80) = v7;
  *(void *)(v3 + 88) = *(void *)(v7 - 8);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = *(void *)(v6 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  *(void *)(v3 + 128) = swift_task_alloc();
  *(void *)(v3 + 136) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CDC8BC, 0, 0);
}

uint64_t sub_1C3CDC8BC()
{
  if (*(unsigned char *)(v0 + 160) == 1)
  {
    sub_1C3DBA308();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1C3CDCA0C;
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = *(void *)(v0 + 56);
    return MEMORY[0x1F4187E48](v4, 0, 0, v3, v2);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA387708 + dword_1EA387708);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1C3CDCCC0;
    uint64_t v6 = *(void *)(v0 + 16);
    return v8(0, 0, v6);
  }
}

uint64_t sub_1C3CDCA0C()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1C3CDCE74;
  }
  else {
    uint64_t v1 = sub_1C3CDCB1C;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3CDCB1C()
{
  uint64_t v1 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v0[4] - 8) + 48))(v1, 1) == 1)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    (*(void (**)(uint64_t, void))(v0[6] + 8))(v1, v0[5]);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[18] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CDCA0C;
    uint64_t v5 = v0[16];
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[7];
    return MEMORY[0x1F4187E48](v7, 0, 0, v6, v5);
  }
}

uint64_t sub_1C3CDCCC0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3CDCE74()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[8];
  uint64_t v16 = v0[14];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v6(v2, v1, v5);
  v6(v3, v2, v5);
  sub_1C3DBA368();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v16, v3, v5);
  uint64_t v7 = sub_1C3DBB378();
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[8];
  if (v7)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[8]);
  }
  else
  {
    swift_allocError();
    v6(v10, v8, v9);
  }
  uint64_t v11 = v0[15];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[8];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1C3CDD064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(void *)(a3 + 16);
  uint64_t v6 = sub_1C3DBA938();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v7 = sub_1C3DBA168();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v4[10] = v7;
  v4[11] = v9;
  return MEMORY[0x1F4188298](sub_1C3CDD16C, v7, v9);
}

uint64_t sub_1C3CDD16C()
{
  uint64_t v1 = v0[4];
  v0[12] = *(void *)(v1 + 24);
  v0[13] = *(void *)(v1 + 32);
  if (sub_1C3DBA338())
  {
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[14] = 0;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA387750 + dword_1EA387750);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CDD280;
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[2];
    uint64_t v8 = v0[3];
    return v9(v5, v7, v8, v6);
  }
}

uint64_t sub_1C3CDD280()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_1C3CDD3BC;
  }
  else {
    uint64_t v5 = sub_1C3CDD4F0;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3CDD3BC()
{
  uint64_t v1 = (void *)v0[16];
  if (v0[14])
  {

    uint64_t v1 = (void *)v0[14];
  }
  if (sub_1C3DBA338())
  {
    if (v1) {
      swift_willThrow();
    }
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[14] = v1;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA387750 + dword_1EA387750);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C3CDD280;
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[2];
    uint64_t v8 = v0[3];
    return v9(v5, v7, v8, v6);
  }
}

uint64_t sub_1C3CDD4F0()
{
  uint64_t v1 = v0[9];
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0[6] - 8) + 48))(v1, 1);
  (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
  if (v2 == 1)
  {
    uint64_t v3 = v0[14];
    if (sub_1C3DBA338())
    {
      if (v3) {
        swift_willThrow();
      }
      swift_task_dealloc();
      uint64_t v4 = (uint64_t (*)(void))v0[1];
      return v4();
    }
    v0[14] = v3;
  }
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA387750 + dword_1EA387750);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C3CDD280;
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[2];
  uint64_t v10 = v0[3];
  return v11(v7, v9, v10, v8);
}

uint64_t sub_1C3CDD66C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3CDD688(uint64_t a1)
{
  return sub_1C3CDD6E0(a1);
}

uint64_t sub_1C3CDD6B4(uint64_t a1)
{
  return sub_1C3CDD6E0(a1);
}

uint64_t sub_1C3CDD6E0(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C3CDD72C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C4DAF4;
  return MEMORY[0x1F4187E38](a1, a2);
}

uint64_t sub_1C3CDD7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C3CDD8A0;
  return MEMORY[0x1F4187E30](a1, a2, a3, a5);
}

uint64_t sub_1C3CDD8A0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 16) = v0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t dispatch thunk of _TaskGroupProtocol.waitForResults()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C3259C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C3CDDAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C3C4DAF4;
  return MEMORY[0x1F4187E30](a1, a2, a3, a4);
}

uint64_t sub_1C3CDDB94()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387758);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387758);
  if (qword_1EA3857F0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA3869A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id ICQueryResultsController.managedObjectContext.getter()
{
  return *(id *)(v0 + OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext);
}

id ICQueryResultsController.query.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___ICQueryResultsControllerObjC_query);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void ICQueryResultsController.query.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___ICQueryResultsControllerObjC_query);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*ICQueryResultsController.query.modify())()
{
  return j__swift_endAccess;
}

id ICQueryResultsController.fetchRequest.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 1);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v3 = (void *)ICQueryType.predicate.getter();
  objc_msgSend(v2, sel_setPredicate_, v3);

  return v2;
}

id ICQueryResultsController.__allocating_init(managedObjectContext:query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext] = a1;
  *(void *)&v5[OBJC_IVAR___ICQueryResultsControllerObjC_query] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ICQueryResultsController.init(managedObjectContext:query:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___ICQueryResultsControllerObjC_managedObjectContext] = a1;
  *(void *)&v2[OBJC_IVAR___ICQueryResultsControllerObjC_query] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t ICQueryResultsController.performFetch()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  objc_msgSend(v2, sel_setResultType_, 1);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v3 = (void *)ICQueryType.predicate.getter();
  objc_msgSend(v2, sel_setPredicate_, v3);

  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
  unint64_t v4 = sub_1C3DBA848();

  uint64_t v5 = sub_1C3C63F20(v4);
  swift_bridgeObjectRelease();
  return v5;
}

id ICQueryResultsController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ICQueryResultsController.init()()
{
}

id ICQueryResultsController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ICQueryResultsController()
{
  return self;
}

uint64_t method lookup function for ICQueryResultsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ICQueryResultsController);
}

uint64_t dispatch thunk of ICQueryResultsController.__allocating_init(managedObjectContext:query:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1C3CDE5C0()
{
  unint64_t result = qword_1EA3864F0[0];
  if (!qword_1EA3864F0[0])
  {
    sub_1C3C4C8B4(255, (unint64_t *)&qword_1EA388CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA3864F0);
  }
  return result;
}

NotesShared::FolderID __swiftcall FolderID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static FolderID.uriTypeName.getter()
{
  return 0x7265646C6F66;
}

void FolderID.contextType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FolderID.contextType.setter(unsigned char *result)
{
  *id v1 = *result;
  return result;
}

void (*FolderID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FolderID.managedIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FolderID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*FolderID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FolderID.init(url:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = self;
  char v15 = (void *)sub_1C3DB8848();
  id v16 = objc_msgSend(v14, sel_objectIDURIRepresentationForFolderMentionedInLegacyShowFolderURL_, v15);

  if (v16)
  {
    sub_1C3DB8898();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v17(v13, v6, v7);
      uint64_t v18 = sub_1C3DB87E8();
      uint64_t v20 = v19;
      char v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v21(a1, v7);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v13, v7);
      *a2 = 2;
      a2[1] = v18;
      a2[2] = v20;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  uint64_t result = sub_1C3C36FB8((uint64_t)v6);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  return result;
}

uint64_t FolderID.hash(into:)()
{
  if (*v0 == 2)
  {
    sub_1C3DBB5F8();
  }
  else
  {
    sub_1C3DBB5F8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t FolderID.hashValue.getter()
{
  int v1 = *v0;
  sub_1C3DBB5D8();
  sub_1C3DBB5F8();
  if (v1 != 2)
  {
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

void sub_1C3CDEB30(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C3CDEB3C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unsigned char *sub_1C3CDEB6C@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1C3CDEB80()
{
  return 0x7265646C6F66;
}

uint64_t sub_1C3CDEB94()
{
  return sub_1C3D5B1C8(*v0, *((void *)v0 + 1), *((void *)v0 + 2));
}

uint64_t sub_1C3CDEBA0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C28574(*v0, *((void *)v0 + 1), *((void *)v0 + 2), (uint64_t)v3);
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C3C36FB8((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v6 = sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

uint64_t sub_1C3CDECD4()
{
  if (*v0 == 2)
  {
    sub_1C3DBB5F8();
  }
  else
  {
    sub_1C3DBB5F8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CDED98()
{
  int v1 = *v0;
  sub_1C3DBB5D8();
  sub_1C3DBB5F8();
  if (v1 != 2)
  {
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t _s11NotesShared8FolderIDV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  int v5 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a2 + 2);
  if (v2 == 2)
  {
    if (v5 == 2) {
      goto LABEL_25;
    }
    return 0;
  }
  if (v5 == 2) {
    return 0;
  }
  if (v2) {
    uint64_t v9 = 1819112552;
  }
  else {
    uint64_t v9 = 0x6E7265646F6DLL;
  }
  if (v2) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v5) {
    uint64_t v11 = 1819112552;
  }
  else {
    uint64_t v11 = 0x6E7265646F6DLL;
  }
  if (v5) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE600000000000000;
  }
  if (v9 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
LABEL_25:
  if (v3 == v6 && v4 == v7) {
    return 1;
  }
  return sub_1C3DBB3B8();
}

unint64_t sub_1C3CDEF8C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3CDEFBC();
  unint64_t result = sub_1C3CDF010();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3CDEFBC()
{
  unint64_t result = qword_1EA387788;
  if (!qword_1EA387788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387788);
  }
  return result;
}

unint64_t sub_1C3CDF010()
{
  unint64_t result = qword_1EA387790;
  if (!qword_1EA387790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387790);
  }
  return result;
}

unint64_t sub_1C3CDF064(void *a1)
{
  a1[1] = sub_1C3CDF09C();
  a1[2] = sub_1C3CDF0F0();
  unint64_t result = sub_1C3CDF144();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3CDF09C()
{
  unint64_t result = qword_1EA387798;
  if (!qword_1EA387798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387798);
  }
  return result;
}

unint64_t sub_1C3CDF0F0()
{
  unint64_t result = qword_1EA3877A0;
  if (!qword_1EA3877A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3877A0);
  }
  return result;
}

unint64_t sub_1C3CDF144()
{
  unint64_t result = qword_1EA3877A8;
  if (!qword_1EA3877A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3877A8);
  }
  return result;
}

unint64_t sub_1C3CDF19C()
{
  unint64_t result = qword_1EB6FB768;
  if (!qword_1EB6FB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FB768);
  }
  return result;
}

uint64_t destroy for ActivityEventObject()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11NotesShared19ActivityEventObjectVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityEventObject(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActivityEventObject(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventObject(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderID()
{
  return &type metadata for FolderID;
}

uint64_t NotesServiceAPIAsyncClient.__allocating_init(codeService:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t NotesServiceAPI.PingOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1C3CDF418(a1, &qword_1EA3877B0);
}

uint64_t NotesServiceAPI.PingOperation.init(request:)(uint64_t a1)
{
  return sub_1C3CDF500(a1, &qword_1EA3877B0);
}

void NotesServiceAPI.PingOperation.__allocating_init(functionName:request:)()
{
}

void NotesServiceAPI.PingOperation.init(functionName:request:)()
{
}

uint64_t NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1C3CDF418(a1, &qword_1EA3877B8);
}

uint64_t sub_1C3CDF418(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  sub_1C3C8E848(a1, (uint64_t)v7, a2);
  uint64_t v9 = sub_1C3DB8D88();
  sub_1C3C2A448(a1, a2);
  return v9;
}

uint64_t NotesServiceAPI.SendMentionNotificationV2Operation.init(request:)(uint64_t a1)
{
  return sub_1C3CDF500(a1, &qword_1EA3877B8);
}

uint64_t sub_1C3CDF500(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C3C8E848(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v6 = sub_1C3DB8D88();
  sub_1C3C2A448(a1, a2);
  return v6;
}

void NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(functionName:request:)()
{
}

void NotesServiceAPI.SendMentionNotificationV2Operation.init(functionName:request:)()
{
}

uint64_t NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1C3CDF418(a1, &qword_1EB6FB748);
}

uint64_t NotesServiceAPI.DidCompleteInstallOrUpdateOperation.init(request:)(uint64_t a1)
{
  return sub_1C3CDF500(a1, &qword_1EB6FB748);
}

void NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(functionName:request:)()
{
}

void NotesServiceAPI.DidCompleteInstallOrUpdateOperation.init(functionName:request:)()
{
}

uint64_t NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1C3CDF418(a1, &qword_1EA3877C0);
}

uint64_t NotesServiceAPI.RunGarbageCollectorOperation.init(request:)(uint64_t a1)
{
  return sub_1C3CDF500(a1, &qword_1EA3877C0);
}

void NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(functionName:request:)()
{
}

void sub_1C3CDF6DC()
{
}

void NotesServiceAPI.RunGarbageCollectorOperation.init(functionName:request:)()
{
}

uint64_t NotesServiceAPIAsync.ping(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PingRequest(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s11NotesShared11PingRequestVACycfC_0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a1, a2, a3, a4);
  return sub_1C3CE0104((uint64_t)v10, type metadata accessor for PingRequest);
}

uint64_t NotesServiceAPIAsync.sendMentionNotificationV2(recipientUserID:senderName:noteTitle:mentionSnippet:shareRecordName:shareOwnerUserID:noteRecordName:inlineAttachmentRecordName:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v29 = a8;
  uint64_t v28 = a7;
  uint64_t v27 = a6;
  uint64_t v31 = a14;
  uint64_t v30 = a15;
  uint64_t v32 = a16;
  void v26[2] = a11;
  v26[1] = a10;
  v26[0] = a9;
  uint64_t v22 = type metadata accessor for MentionNotificationRequestV2(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  uint64_t v40 = v29;
  long long v41 = a9;
  long long v42 = a10;
  long long v43 = a11;
  uint64_t v44 = a12;
  uint64_t v45 = a13;
  sub_1C3CE00BC(&qword_1EA3877C8, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
  sub_1C3DB8F58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a17 + 16))(v24, v31, v30, v32, a17);
  return sub_1C3CE0104((uint64_t)v24, type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3CDF9F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v22 = (void *)result;
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v22 = a2;
    v22[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    void v22[2] = a4;
    v22[3] = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v22[4] = a6;
    v22[5] = a7;
  }
  if (a9)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    void v22[6] = a8;
    v22[7] = a9;
  }
  if (a11)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v22[8] = a10;
    v22[9] = a11;
  }
  if (a13)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v22[10] = a12;
    v22[11] = a13;
  }
  if (a15)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v22[12] = a14;
    v22[13] = a15;
  }
  if (a17)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v22[14] = a16;
    v22[15] = a17;
  }
  return result;
}

uint64_t NotesServiceAPIAsync.didCompleteInstallOrUpdate(previousBuildNumber:previousVersion:currentBuildNumber:currentVersion:platformName:continuationToken:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v25 = a6;
  uint64_t v28 = a13;
  uint64_t v29 = a12;
  uint64_t v30 = a14;
  long long v24 = a9;
  uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = v25;
  uint64_t v37 = v26;
  uint64_t v38 = v27;
  long long v39 = a9;
  uint64_t v40 = a10;
  uint64_t v41 = a11;
  sub_1C3CE00BC(&qword_1EB6FB728, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
  sub_1C3DB8F58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a15 + 24))(v22, v29, v28, v30, a15);
  return sub_1C3CE0104((uint64_t)v22, type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3CDFD08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t v18 = (void *)result;
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    void *v18 = a2;
    v18[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    _OWORD v18[2] = a4;
    v18[3] = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v18[4] = a6;
    void v18[5] = a7;
  }
  if (a9)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v18[6] = a8;
    v18[7] = a9;
  }
  if (a11)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v18[8] = a10;
    v18[9] = a11;
  }
  if (a13 >> 60 != 15)
  {
    uint64_t v21 = v18[10];
    unint64_t v22 = v18[11];
    sub_1C3CE0C34(a12, a13);
    uint64_t result = sub_1C3C58FC8(v21, v22);
    v18[10] = a12;
    v18[11] = a13;
  }
  return result;
}

uint64_t NotesServiceAPIAsync.runGarbageCollector(continuationToken:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for RunGarbageCollectorRequest(0);
  MEMORY[0x1F4188790](v12);
  char v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  sub_1C3CE00BC(&qword_1EA3877D0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
  sub_1C3DB8F58();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 32))(v14, a3, a4, a5, a6);
  return sub_1C3CE0104((uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t *sub_1C3CDFF94(uint64_t *result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15)
  {
    uint64_t v5 = result;
    uint64_t v6 = *result;
    unint64_t v7 = result[1];
    sub_1C3CE0C34(a2, a3);
    uint64_t result = (uint64_t *)sub_1C3C58FC8(v6, v7);
    *uint64_t v5 = a2;
    v5[1] = a3;
  }
  return result;
}

uint64_t NotesServiceAPIAsyncClient.init(codeService:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1C3CE000C(uint64_t a1)
{
  return sub_1C3CDF9F8(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t sub_1C3CE005C(uint64_t a1)
{
  return sub_1C3CDFD08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t *sub_1C3CE00A0(uint64_t *a1)
{
  return sub_1C3CDFF94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3CE00BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CE0104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C3CE0164(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3877B0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1C3CE0828(a1, (uint64_t)&v11 - v6, type metadata accessor for PingRequest);
  uint64_t v8 = type metadata accessor for PingRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.PingOperation(0));
  sub_1C3C8E848((uint64_t)v7, (uint64_t)v5, &qword_1EA3877B0);
  uint64_t v9 = (void *)sub_1C3DB8D88();
  sub_1C3C2A448((uint64_t)v7, &qword_1EA3877B0);
  id v10 = v9;
  swift_retain();
  sub_1C3DB8D78();

  sub_1C3DBA658();
}

uint64_t type metadata accessor for NotesServiceAPI.PingOperation(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3877D8);
}

void sub_1C3CE0314(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3877B8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1C3CE0828(a1, (uint64_t)&v11 - v6, type metadata accessor for MentionNotificationRequestV2);
  uint64_t v8 = type metadata accessor for MentionNotificationRequestV2(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(0));
  sub_1C3C8E848((uint64_t)v7, (uint64_t)v5, &qword_1EA3877B8);
  uint64_t v9 = (void *)sub_1C3DB8D88();
  sub_1C3C2A448((uint64_t)v7, &qword_1EA3877B8);
  id v10 = v9;
  swift_retain();
  sub_1C3DB8D78();

  sub_1C3DBA658();
}

uint64_t type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3877E8);
}

void sub_1C3CE04D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB748);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1C3CE0828(a1, (uint64_t)&v11 - v6, type metadata accessor for DidCompleteInstallOrUpdateRequest);
  uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v7, 0, 1, updated);
  objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(0));
  sub_1C3C8E848((uint64_t)v7, (uint64_t)v5, &qword_1EB6FB748);
  uint64_t v9 = (void *)sub_1C3DB8D88();
  sub_1C3C2A448((uint64_t)v7, &qword_1EB6FB748);
  id v10 = v9;
  swift_retain();
  sub_1C3DB8D78();

  sub_1C3DBA658();
}

uint64_t type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FB718);
}

void sub_1C3CE068C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3877C0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1C3CE0828(a1, (uint64_t)&v11 - v6, type metadata accessor for RunGarbageCollectorRequest);
  uint64_t v8 = type metadata accessor for RunGarbageCollectorRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(0));
  sub_1C3C8E848((uint64_t)v7, (uint64_t)v5, &qword_1EA3877C0);
  uint64_t v9 = (void *)sub_1C3DB8D88();
  sub_1C3C2A448((uint64_t)v7, &qword_1EA3877C0);
  id v10 = v9;
  swift_retain();
  sub_1C3DB8D78();

  sub_1C3DBA658();
}

uint64_t sub_1C3CE0828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3877F8);
}

uint64_t NotesServiceAPIAsyncClient.deinit()
{
  return v0;
}

uint64_t NotesServiceAPIAsyncClient.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1C3CE0908(uint64_t a1)
{
}

void sub_1C3CE092C(uint64_t a1)
{
}

void sub_1C3CE0950(uint64_t a1)
{
}

void sub_1C3CE0974(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for NotesServiceAPI()
{
  return &type metadata for NotesServiceAPI;
}

uint64_t sub_1C3CE09A8()
{
  return sub_1C3CE0A8C();
}

uint64_t method lookup function for NotesServiceAPI.PingOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesServiceAPI.PingOperation);
}

uint64_t dispatch thunk of NotesServiceAPI.PingOperation.__allocating_init(request:)()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.PingOperation))();
}

uint64_t sub_1C3CE09E8()
{
  return type metadata accessor for NotesServiceAPI.PingOperation(0);
}

uint64_t sub_1C3CE09F0()
{
  return sub_1C3CE0A8C();
}

uint64_t method lookup function for NotesServiceAPI.SendMentionNotificationV2Operation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesServiceAPI.SendMentionNotificationV2Operation);
}

uint64_t dispatch thunk of NotesServiceAPI.SendMentionNotificationV2Operation.__allocating_init(request:)()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.SendMentionNotificationV2Operation))();
}

uint64_t sub_1C3CE0A30()
{
  return type metadata accessor for NotesServiceAPI.SendMentionNotificationV2Operation(0);
}

uint64_t sub_1C3CE0A38()
{
  return sub_1C3CE0A8C();
}

uint64_t method lookup function for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation);
}

uint64_t dispatch thunk of NotesServiceAPI.DidCompleteInstallOrUpdateOperation.__allocating_init(request:)()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.DidCompleteInstallOrUpdateOperation))();
}

uint64_t sub_1C3CE0A78()
{
  return type metadata accessor for NotesServiceAPI.DidCompleteInstallOrUpdateOperation(0);
}

uint64_t sub_1C3CE0A80()
{
  return sub_1C3CE0A8C();
}

uint64_t sub_1C3CE0A8C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for NotesServiceAPI.RunGarbageCollectorOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesServiceAPI.RunGarbageCollectorOperation);
}

uint64_t dispatch thunk of NotesServiceAPI.RunGarbageCollectorOperation.__allocating_init(request:)()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for NotesServiceAPI.RunGarbageCollectorOperation))();
}

uint64_t sub_1C3CE0AFC()
{
  return type metadata accessor for NotesServiceAPI.RunGarbageCollectorOperation(0);
}

uint64_t dispatch thunk of NotesServiceAPIAsync.ping(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.sendMentionNotificationV2(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.didCompleteInstallOrUpdate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of NotesServiceAPIAsync.runGarbageCollector(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t type metadata accessor for NotesServiceAPIAsyncClient()
{
  return self;
}

uint64_t method lookup function for NotesServiceAPIAsyncClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesServiceAPIAsyncClient);
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.__allocating_init(codeService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.ping(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.sendMentionNotificationV2(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.didCompleteInstallOrUpdate(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NotesServiceAPIAsyncClient.runGarbageCollector(_:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C3CE0C34(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

id sub_1C3CE0C8C()
{
  uint64_t v1 = OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = objc_msgSend(self, sel_sharedConnection);
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1C3CE1608(v4);
  }
  sub_1C3CE1618(v2);
  return v3;
}

id sub_1C3CE0D8C()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)ICDeviceManagementRestrictionsManager), sel_init);
  id result = objc_msgSend(v0, sel_registerObserver);
  qword_1EB6FC6A0 = (uint64_t)v0;
  return result;
}

void __swiftcall ICDeviceManagementRestrictionsManager.init()(ICDeviceManagementRestrictionsManager *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

id static ICDeviceManagementRestrictionsManager.shared.getter()
{
  if (qword_1EB6FC518 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EB6FC6A0;
  return v0;
}

Swift::Void __swiftcall ICDeviceManagementRestrictionsManager.registerObserver()()
{
  id v1 = sub_1C3CE0C8C();
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_registerObserver_, v0);
  }
  objc_msgSend(v0, sel_updateRestrictions);
}

Swift::Void __swiftcall ICDeviceManagementRestrictionsManager.updateRestrictions()()
{
  id v1 = sub_1C3CE0C8C();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (uint64_t)objc_msgSend(v1, sel_isMathPaperSolvingAllowed);
  }
  else
  {
    uint64_t v3 = 1;
  }
  objc_msgSend(v0, sel_setIsMathPaperSolvingAllowed_, v3);
  id v4 = sub_1C3CE0C8C();
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = (uint64_t)objc_msgSend(v4, sel_isKeyboardMathSolvingAllowed);
  }
  else
  {
    uint64_t v6 = 1;
  }
  objc_msgSend(v0, sel_setIsKeyboardMathSolvingAllowed_, v6);
}

uint64_t ICDeviceManagementRestrictionsManager.isMathPaperSolvingAllowed.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

uint64_t ICDeviceManagementRestrictionsManager.isKeyboardMathSolvingAllowed.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

void sub_1C3CE11CC(char *a1, uint64_t a2, char a3, void *a4, const char *a5)
{
  uint64_t v9 = &a1[*a4];
  swift_beginAccess();
  char v10 = *v9;
  *uint64_t v9 = a3;
  uint64_t v11 = a1;
  sub_1C3CE1250(v10, a4, a5);
}

void sub_1C3CE1250(char a1, void *a2, const char *a3)
{
  int v5 = a1 & 1;
  uint64_t v6 = &v3[*a2];
  swift_beginAccess();
  if (*v6 != v5)
  {
    if (qword_1EB6FBF80 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C3DB9048();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB6FC2C0);
    uint64_t v8 = v3;
    uint64_t v9 = sub_1C3DB9028();
    os_log_type_t v10 = sub_1C3DBA698();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 67109120;
      sub_1C3DBA9A8();

      _os_log_impl(&dword_1C3A61000, v9, v10, a3, v11, 8u);
      MEMORY[0x1C877E600](v11, -1, -1);
    }
    else
    {

      uint64_t v9 = v8;
    }
  }
}

id ICDeviceManagementRestrictionsManager.init()()
{
  *(void *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager____lazy_storage___connection) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR___ICDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed) = 1;
  v2.super_class = (Class)ICDeviceManagementRestrictionsManager;
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICDeviceManagementRestrictionsManager.profileConnectionDidReceiveEffectiveSettingsChangedNotification(_:userInfo:)()
{
  return objc_msgSend(v0, sel_updateRestrictions);
}

char *keypath_get_selector_isMathPaperSolvingAllowed()
{
  return sel_isMathPaperSolvingAllowed;
}

id sub_1C3CE1490@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isMathPaperSolvingAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C3CE14C4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsMathPaperSolvingAllowed_, *a1);
}

char *keypath_get_selector_isKeyboardMathSolvingAllowed()
{
  return sel_isKeyboardMathSolvingAllowed;
}

id sub_1C3CE14E4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isKeyboardMathSolvingAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C3CE1518(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsKeyboardMathSolvingAllowed_, *a1);
}

unint64_t type metadata accessor for ICDeviceManagementRestrictionsManager()
{
  unint64_t result = qword_1EA387828;
  if (!qword_1EA387828)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387828);
  }
  return result;
}

void sub_1C3CE1608(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1C3CE1618(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void String.height(_:_:)(void *a1, double a2)
{
  id v4 = (void *)sub_1C3DB9BF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387890);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v6 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1C3CE1760();
  *(void *)(inited + 40) = a1;
  id v7 = v6;
  id v8 = a1;
  sub_1C3C81B10(inited);
  type metadata accessor for Key(0);
  sub_1C3CE17A0();
  uint64_t v9 = (void *)sub_1C3DB9A88();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_boundingRectWithSize_options_attributes_context_, 3, v9, 0, a2, 1.79769313e308);
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;

  v18.origin.x = v11;
  v18.origin.y = v13;
  v18.size.width = v15;
  v18.size.height = v17;
  CGRectGetHeight(v18);
}

unint64_t sub_1C3CE1760()
{
  unint64_t result = qword_1EA387898;
  if (!qword_1EA387898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387898);
  }
  return result;
}

unint64_t sub_1C3CE17A0()
{
  unint64_t result = qword_1EA385AA0;
  if (!qword_1EA385AA0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385AA0);
  }
  return result;
}

uint64_t sub_1C3CE17FC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

Swift::Bool __swiftcall UnkeyedDecodingContainer.skip(count:)(Swift::Int count)
{
  if (count < 1)
  {
LABEL_11:
    __break(1u);
  }
  else
  {
    Swift::Int v1 = count;
    if (sub_1C3DBB298())
    {
      BOOL v2 = 0;
    }
    else
    {
      sub_1C3CE1940();
      LOBYTE(count) = sub_1C3DBB288();
      BOOL v2 = v1 == 1;
      uint64_t v3 = 1;
      while (!v2)
      {
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_11;
        }
        if (sub_1C3DBB298()) {
          break;
        }
        BOOL v2 = v3 + 1 == v1;
        LOBYTE(count) = sub_1C3DBB288();
        ++v3;
      }
    }
    LOBYTE(count) = v2;
  }
  return count;
}

unint64_t sub_1C3CE1940()
{
  unint64_t result = qword_1EA3878A0;
  if (!qword_1EA3878A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3878A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for _IgnoredDecodable()
{
  return &type metadata for _IgnoredDecodable;
}

uint64_t sub_1C3CE19A4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C3CE19D8();

  return v2;
}

uint64_t sub_1C3CE19D8()
{
  return sub_1C3DB9B28();
}

uint64_t sub_1C3CE1A50(uint64_t a1)
{
  swift_getObjectType();
  sub_1C3C499AC(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1C3CC623C((uint64_t)v5);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  char v2 = sub_1C3DB9BE8();

  return v2 & 1;
}

uint64_t sub_1C3CE1B74(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = sub_1C3CE1A50((uint64_t)v8);

  sub_1C3CC623C((uint64_t)v8);
  return v6 & 1;
}

void sub_1C3CE1BEC()
{
}

uint64_t sub_1C3CE1C6C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x60)
                                                       - 8)
                                           + 8))(&a1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x78)]);
}

uint64_t sub_1C3CE1CD4(_OWORD *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C3C2A5D8(a1, (_OWORD *)(v2 + 16));
  return v2;
}

uint64_t sub_1C3CE1D18()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t Cache.__allocating_init(name:)()
{
  uint64_t v0 = swift_allocObject();
  Cache.init(name:)();
  return v0;
}

uint64_t Cache.init(name:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FB1C0);
  type metadata accessor for Cache.KeyWrapper();
  type metadata accessor for Cache.ValueWrapper();
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setName_, v3);

  return v0;
}

uint64_t type metadata accessor for Cache.KeyWrapper()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Cache.ValueWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Cache.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = (void *)v2[2];
  uint64_t v6 = *(void *)(*v2 + 88);
  uint64_t v7 = *(void *)(*v2 + 96);
  v13[0] = *(void *)(*v2 + 80);
  v13[1] = v6;
  id v13[2] = v13[0];
  v13[3] = v7;
  unint64_t v13[4] = v7;
  id v8 = objc_allocWithZone((Class)type metadata accessor for Cache.KeyWrapper());
  id v9 = sub_1C3CE2B5C(a1);
  id v10 = objc_msgSend(v5, sel_objectForKey_, v9);

  if (!v10) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
  sub_1C3C4BC70((uint64_t)v10 + 16, (uint64_t)v13);
  swift_release();
  int v11 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, v11 ^ 1u, 1, v6);
}

uint64_t sub_1C3CE2054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = sub_1C3DBA938();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int v11 = (char *)&v16 - v10;
  MEMORY[0x1F4188790](v9);
  CGFloat v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - v12, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  return Cache.subscript.setter((uint64_t)v11, (uint64_t)v13);
}

uint64_t Cache.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 88);
  uint64_t v7 = sub_1C3DBA938();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  int v11 = (char *)&v28 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v28 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    CGFloat v15 = *(void (**)(char *, uint64_t))(v8 + 8);
    v15(v11, v7);
    uint64_t v16 = (void *)v2[2];
    uint64_t v17 = *(void *)(v5 + 80);
    uint64_t v18 = *(void *)(v5 + 96);
    *(void *)&long long v29 = v17;
    *((void *)&v29 + 1) = v6;
    uint64_t v30 = v17;
    uint64_t v31 = v18;
    uint64_t v32 = v18;
    id v19 = objc_allocWithZone((Class)type metadata accessor for Cache.KeyWrapper());
    id v20 = sub_1C3CE2B5C(a2);
    objc_msgSend(v16, sel_removeObjectForKey_, v20);

    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(a1, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v6);
    id v28 = (id)v2[2];
    uint64_t v22 = *(void *)(v5 + 80);
    uint64_t v23 = *(void *)(v5 + 96);
    type metadata accessor for Cache.ValueWrapper();
    uint64_t v31 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v29);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(boxed_opaque_existential_1, v14, v6);
    uint64_t v25 = swift_allocObject();
    sub_1C3C2A5D8(&v29, (_OWORD *)(v25 + 16));
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = v6;
    uint64_t v30 = v22;
    uint64_t v31 = v23;
    uint64_t v32 = v23;
    id v26 = objc_allocWithZone((Class)type metadata accessor for Cache.KeyWrapper());
    id v27 = sub_1C3CE2B5C(a2);
    objc_msgSend(v28, sel_setObject_forKey_, v25, v27);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a2, v22);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v6);
  }
}

void (*Cache.subscript.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x48uLL);
  *a1 = v5;
  *uint64_t v5 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C3DBA938();
  v5[1] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v5[2] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v5[3] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[4] = v10;
  uint64_t v11 = *(void *)(v6 + 80);
  v5[5] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  v5[6] = v12;
  size_t v14 = *(void *)(v12 + 64);
  void v5[7] = malloc(v14);
  v5[8] = malloc(v14);
  (*(void (**)(void))(v13 + 16))();
  Cache.subscript.getter(a2, (uint64_t)v10);
  return sub_1C3CE26F0;
}

void sub_1C3CE26F0(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  id v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    uint64_t v9 = v2[1];
    uint64_t v10 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    Cache.subscript.setter((uint64_t)v8, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    uint64_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    Cache.subscript.setter((uint64_t)v7, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t Cache.subscript.getter@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  uint64_t v27 = a4;
  uint64_t v26 = *(void *)(*(void *)v5 + 80);
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v10 = *(void *)(v9 + 88);
  uint64_t v11 = sub_1C3DBA938();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  CGFloat v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v22 - v16;
  Cache.subscript.getter(a1, (uint64_t)&v22 - v16);
  uint64_t v18 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v17, v10);
  }
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  uint64_t v20 = v27;
  v25(v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v8, a1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v15, v20, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v10);
  return Cache.subscript.setter((uint64_t)v15, (uint64_t)v8);
}

uint64_t Cache.name.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  uint64_t v2 = sub_1C3DB9C38();

  return v2;
}

Swift::Void __swiftcall Cache.removeAll()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t Cache.deinit()
{
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C3CE2B5C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x60)
                                                      - 8)
                                          + 16))(&v1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x78)], a1);
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1C3CE2C18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return Cache.subscript.getter(a1, a2);
}

uint64_t sub_1C3CE2C44()
{
  return 24;
}

__n128 sub_1C3CE2C50(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1C3CE2C64()
{
  return sub_1C3CE2D58();
}

uint64_t type metadata accessor for Cache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Cache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Cache);
}

uint64_t dispatch thunk of Cache.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C3CE2CB8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C3CE2D4C()
{
  return sub_1C3CE2D58();
}

uint64_t sub_1C3CE2D58()
{
  return swift_initClassMetadata2();
}

void sub_1C3CE2D94()
{
}

id ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  CGFloat v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v28 - v16;
  id v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v19 = v18;
  if (a1)
  {
    uint64_t v20 = (void *)sub_1C3DBA428();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  objc_msgSend(v18, sel_setAllowedUserIDs_, v20);

  if (a2)
  {
    uint64_t v21 = (void *)sub_1C3DBA428();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  objc_msgSend(v18, sel_setAllowedAttachmentIDs_, v21);

  objc_msgSend(v18, sel_setAllowsMissingTimestamps_, a3 & 1);
  objc_msgSend(v18, sel_setAllowsMissingUsers_, a4 & 1);
  sub_1C3C376DC(a5, (uint64_t)v17);
  uint64_t v22 = sub_1C3DB8AF8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v25 = 0;
  if (v24(v17, 1, v22) != 1)
  {
    uint64_t v25 = (void *)sub_1C3DB8A88();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  }
  objc_msgSend(v18, sel_setFromDate_, v25);

  sub_1C3C376DC(a6, (uint64_t)v15);
  if (v24(v15, 1, v22) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = (void *)sub_1C3DB8A88();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
  }
  objc_msgSend(v18, sel_setToDate_, v26);

  sub_1C3C37744(a6);
  sub_1C3C37744(a5);
  return v18;
}

void *sub_1C3CE3098(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C3DBAFB8())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C877C220](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_identifier);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_1C3DB9C38();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1C3D8288C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1C3D8288C((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        CGFloat v15 = &v3[2 * v14];
        void v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C3CE3230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t ObjectType = swift_getObjectType();
    id v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 64);
    uint64_t v19 = ObjectType;
    uint64_t v9 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      uint64_t v12 = *(v9 - 2);
      v20[0] = *(v9 - 3);
      v20[1] = v12;
      v20[2] = v10;
      v20[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = a3;
      uint64_t v14 = v18(v20, v19, a3);
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_bridgeObjectRelease();
      if (v14)
      {
        MEMORY[0x1C877B4F0](v15);
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C3DBA068();
        }
        sub_1C3DBA0C8();
        sub_1C3DBA038();
      }
      v9 += 4;
      --v7;
      a3 = v13;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v16 = v21;
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  swift_unknownObjectRelease();
  swift_release();
  return v16;
}

void __swiftcall ICTTTextEditFilter.init(mentions:)(ICTTTextEditFilter *__return_ptr retstr, Swift::OpaquePointer mentions)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v15[-v7];
  unint64_t v9 = sub_1C3CE49EC((unint64_t)mentions._rawValue, (SEL *)&selRef_isMentionAttachment);
  swift_bridgeObjectRelease();
  unint64_t v10 = sub_1C3CE49EC(v9, (SEL *)&selRef_isVisible);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C3CE3098(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1C3C63E88((uint64_t)v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C3DB8AF8();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v8, 1, 1, v13);
  v14(v6, 1, 1, v13);
  ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, v12, 1, 1, (uint64_t)v8, (uint64_t)v6);
}

id ICTTTextEditFilter.init(editEvent:)(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8268();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v24 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v24 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v16 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v17 = (void *)(a1 + *(int *)(v16 + 24));
  uint64_t v18 = v17[1];
  *(void *)(inited + 32) = *v17;
  *(void *)(inited + 40) = v18;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C3C5B048(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (*(unsigned char *)(a1 + *(int *)(v16 + 28)) && *(unsigned char *)(a1 + *(int *)(v16 + 28)) != 1) {
    uint64_t v25 = 1;
  }
  else {
    uint64_t v25 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  NoteEditActivityEvent.timeInterval.getter((uint64_t)v8);
  sub_1C3DB8258();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v24 = v3 + 8;
  v19(v8, v2);
  uint64_t v20 = sub_1C3DB8AF8();
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v14, 0, 1, v20);
  NoteEditActivityEvent.timeInterval.getter((uint64_t)v6);
  sub_1C3DB8228();
  v19(v6, v2);
  v21(v12, 0, 1, v20);
  id v22 = ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(v26, 0, v25 & 1, 0, (uint64_t)v14, (uint64_t)v12);
  sub_1C3CE4DAC(a1, type metadata accessor for NoteEditActivityEvent);
  return v22;
}

id ICTTTextEditFilter.init(persistedEvent:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v27[-v10];
  uint64_t v12 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)&v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for PersistedActivityEvent();
  sub_1C3CE4D44(a1 + *(int *)(v15 + 28), (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 6u:
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      uint64_t v18 = sub_1C3DB8B98();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v18 - 8) + 8))(v14, v18);
      return 0;
    case 7u:
      uint64_t v19 = *v14;
      swift_unknownObjectRetain();
      unint64_t v20 = sub_1C3CE3230(v19, a2, a3);
      swift_bridgeObjectRelease();
      unint64_t v21 = sub_1C3CE49EC(v20, (SEL *)&selRef_isMentionAttachment);
      swift_bridgeObjectRelease();
      unint64_t v22 = sub_1C3CE49EC(v21, (SEL *)&selRef_isVisible);
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1C3CE3098(v22);
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1C3C63E88((uint64_t)v23);
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_1C3DB8AF8();
      uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      v26(v11, 1, 1, v25);
      v26(v9, 1, 1, v25);
      id v16 = ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, v24, 1, 1, (uint64_t)v11, (uint64_t)v9);
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      return v16;
    case 8u:
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      return 0;
    default:
      swift_unknownObjectRelease();
      sub_1C3CE4DAC(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
LABEL_5:
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t ICTTTextEditFilter.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for ICTTTextEditFilter.Model();
  uint64_t v11 = a2 + *(int *)(v10 + 32);
  uint64_t v12 = sub_1C3DB8AF8();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v29 = v11;
  v13(v11, 1, 1, v12);
  uint64_t v14 = a2 + *(int *)(v10 + 36);
  v13(v14, 1, 1, v12);
  id v15 = objc_msgSend(a1, sel_allowedUserIDs);
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = sub_1C3DBA438();
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)a2 = v17;
  id v18 = objc_msgSend(a1, sel_allowedAttachmentIDs);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1C3DBA438();
  }
  else
  {
    uint64_t v20 = 0;
  }
  *(void *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 16) = objc_msgSend(a1, sel_allowsMissingTimestamps);
  *(unsigned char *)(a2 + 17) = objc_msgSend(a1, sel_allowsMissingUsers);
  id v21 = objc_msgSend(a1, sel_fromDate);
  if (v21)
  {
    unint64_t v22 = v21;
    sub_1C3DB8AC8();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  uint64_t v24 = 1;
  v13((uint64_t)v9, v23, 1, v12);
  sub_1C3CE4BA0((uint64_t)v9, v29);
  id v25 = objc_msgSend(a1, sel_toDate);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_1C3DB8AC8();

    uint64_t v24 = 0;
  }

  v13((uint64_t)v7, v24, 1, v12);
  return sub_1C3CE4BA0((uint64_t)v7, v14);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;

  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3878C8);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ICTTTextEditFilter.Model();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  id v15 = &v14[*(int *)(v12 + 40)];
  id v16 = sub_1C3DB8AF8();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v33 = (uint64_t)v15;
  v17(v15, 1, 1, v16);
  id v18 = (uint64_t)&v14[*(int *)(v12 + 44)];
  v17((char *)v18, 1, 1, v16);
  uint64_t v19 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1C3CE4C48();
  uint64_t v20 = v34;
  sub_1C3DBB6B8();
  if (v20)
  {
    id v21 = v33;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3C37744(v21);
    return sub_1C3C37744(v18);
  }
  else
  {
    uint64_t v34 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3878B8);
    uint64_t v35 = 0;
    sub_1C3CE4C9C(&qword_1EA3878D0);
    sub_1C3DBB0A8();
    *(void *)uint64_t v14 = v36;
    uint64_t v35 = 1;
    sub_1C3DBB0A8();
    *((void *)v14 + 1) = v36;
    LOBYTE(v36) = 2;
    unint64_t v22 = sub_1C3DBB0D8();
    uint64_t v23 = v33;
    v14[16] = v22 & 1;
    LOBYTE(v36) = 3;
    v14[17] = sub_1C3DBB0D8() & 1;
    LOBYTE(v36) = 4;
    sub_1C3CE4D00(&qword_1EA3864B0);
    uint64_t v24 = (uint64_t)v34;
    sub_1C3DBB0A8();
    sub_1C3CE4BA0(v24, v23);
    LOBYTE(v36) = 5;
    id v25 = v31;
    sub_1C3DBB0A8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v25);
    uint64_t v26 = (uint64_t)v32;
    sub_1C3CE4BA0(v29, v18);
    sub_1C3CE4D44((uint64_t)v14, v28, (uint64_t (*)(void))type metadata accessor for ICTTTextEditFilter.Model);
    __swift_destroy_boxed_opaque_existential_0Tm(v26);
    return sub_1C3CE4DAC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ICTTTextEditFilter.Model);
  }
}

id ICTTTextEditFilter.Model.filter.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - v5;
  sub_1C3CE4C08();
  uint64_t v7 = *(void *)(v0 + 8);
  char v8 = *(unsigned char *)(v0 + 16);
  char v9 = *(unsigned char *)(v0 + 17);
  uint64_t v10 = type metadata accessor for ICTTTextEditFilter.Model();
  sub_1C3C376DC(v0 + *(int *)(v10 + 32), (uint64_t)v6);
  sub_1C3C376DC(v0 + *(int *)(v10 + 36), (uint64_t)v4);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  return ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(v11, v7, v8, v9, (uint64_t)v6, (uint64_t)v4);
}

unint64_t sub_1C3CE4088(char a1)
{
  unint64_t result = 0x556465776F6C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x657461446D6F7266;
      break;
    case 5:
      unint64_t result = 0x657461446F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C3CE416C()
{
  return sub_1C3CE4088(*v0);
}

uint64_t sub_1C3CE4174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CE5EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3CE419C(uint64_t a1)
{
  unint64_t v2 = sub_1C3CE4C48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CE41D8(uint64_t a1)
{
  unint64_t v2 = sub_1C3CE4C48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICTTTextEditFilter.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3878A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CE4C48();
  sub_1C3DBB6D8();
  uint64_t v12 = *v3;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3878B8);
  sub_1C3CE4C9C(&qword_1EA3878C0);
  sub_1C3DBB198();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    sub_1C3DBB198();
    LOBYTE(v12) = 2;
    sub_1C3DBB1B8();
    LOBYTE(v12) = 3;
    sub_1C3DBB1B8();
    type metadata accessor for ICTTTextEditFilter.Model();
    LOBYTE(v12) = 4;
    sub_1C3DB8AF8();
    sub_1C3CE4D00(&qword_1EA386488);
    sub_1C3DBB198();
    LOBYTE(v12) = 5;
    sub_1C3DBB198();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C3CE49BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ICTTTextEditFilter.Model.init(from:)(a1, a2);
}

uint64_t sub_1C3CE49D4(void *a1)
{
  return ICTTTextEditFilter.Model.encode(to:)(a1);
}

uint64_t sub_1C3CE49EC(unint64_t a1, SEL *a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v10 = v4;
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x1C877C220](v5, a1);
LABEL_9:
        uint64_t v7 = v6;
        unint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if ([v6 *a2])
        {
          sub_1C3DBAE18();
          sub_1C3DBAE58();
          sub_1C3DBAE68();
          sub_1C3DBAE28();
          uint64_t v4 = v10;
        }
        else
        {
        }
        ++v5;
        if (v8 == v4) {
          return v11;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = sub_1C3DBAFB8();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for ICTTTextEditFilter.Model()
{
  uint64_t result = qword_1EA3878D8;
  if (!qword_1EA3878D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3CE4BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C3CE4C08()
{
  unint64_t result = qword_1EA385FB0;
  if (!qword_1EA385FB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA385FB0);
  }
  return result;
}

unint64_t sub_1C3CE4C48()
{
  unint64_t result = qword_1EA3878B0;
  if (!qword_1EA3878B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3878B0);
  }
  return result;
}

uint64_t sub_1C3CE4C9C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3878B8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CE4D00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3DB8AF8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CE4D44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3CE4DAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s5ModelVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v8);
    char v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1C3DB8AF8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(a3 + 36);
    id v15 = (void *)(v7 + v14);
    id v16 = (char *)a2 + v14;
    if (v12(v16, 1, v10))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
    }
  }
  return v7;
}

uint64_t _s5ModelVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v5 - 8);
  id v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    char v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t _s5ModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 32);
  __dst = (void *)(a1 + v7);
  uint64_t v8 = (const void *)(a2 + v7);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t _s5ModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t _s5ModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t _s5ModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t _s5ModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3CE5ABC);
}

uint64_t sub_1C3CE5ABC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t _s5ModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3CE5B90);
}

void *sub_1C3CE5B90(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C3CE5C3C()
{
  sub_1C3C73AE8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s5ModelV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CE5DACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5ModelV10CodingKeysOMa()
{
  return &_s5ModelV10CodingKeysON;
}

unint64_t sub_1C3CE5DE8()
{
  unint64_t result = qword_1EA3878E8;
  if (!qword_1EA3878E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3878E8);
  }
  return result;
}

unint64_t sub_1C3CE5E40()
{
  unint64_t result = qword_1EA3878F0;
  if (!qword_1EA3878F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3878F0);
  }
  return result;
}

unint64_t sub_1C3CE5E98()
{
  unint64_t result = qword_1EA3878F8;
  if (!qword_1EA3878F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3878F8);
  }
  return result;
}

uint64_t sub_1C3CE5EEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x556465776F6C6C61 && a2 == 0xEE00734449726573;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C3DF6870 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C3DF6890 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C3DF68B0 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657461446D6F7266 && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657461446F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1C3CE6174()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CE61AC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00657361436C65;
  uint64_t v3 = 0x6D61437265776F6CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6D61437265707075;
    }
    else {
      uint64_t v5 = 0x736143626162656BLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEE00657361436C65;
    }
    else {
      unint64_t v6 = 0xE900000000000065;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0x6D61437265776F6CLL;
    unint64_t v6 = 0xEE00657361436C65;
    int v7 = a2;
    if (!a2) {
      goto LABEL_14;
    }
  }
  if (v7 == 1) {
    uint64_t v3 = 0x6D61437265707075;
  }
  else {
    uint64_t v3 = 0x736143626162656BLL;
  }
  if (v7 != 1) {
    unint64_t v2 = 0xE900000000000065;
  }
LABEL_14:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C3CE62D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1819112552;
  }
  else {
    uint64_t v3 = 0x6E7265646F6DLL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1819112552;
  }
  else {
    uint64_t v5 = 0x6E7265646F6DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3CE6374(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7103859;
  }
  else {
    uint64_t v2 = 6580594;
  }
  if (a2) {
    uint64_t v3 = 7103859;
  }
  else {
    uint64_t v3 = 6580594;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1C3CE63E4(char a1, char a2)
{
  if (qword_1C3DD9420[a1] == qword_1C3DD9420[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1C3CE644C(char a1, char a2)
{
  if (qword_1C3DD9438[a1] == qword_1C3DD9438[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1C3CE64B4(char a1, char a2)
{
  if (qword_1C3DD9458[a1] == qword_1C3DD9458[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1C3CE651C(char a1, char a2)
{
  if (qword_1C3DD9478[a1] == qword_1C3DD9478[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1C3CE6584(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676E69646E6570;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676E69646E6570;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x64616F6C6E776F64;
      unint64_t v3 = 0xEB00000000676E69;
      break;
    case 2:
      uint64_t v5 = 0x656E696C66666FLL;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64656C696166;
      break;
    case 4:
      uint64_t v5 = 0x697263736E617274;
      unint64_t v3 = 0xEC000000676E6962;
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7974706D65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000676E69;
      if (v5 == 0x64616F6C6E776F64) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 0x656E696C66666FLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x64656C696166) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x697263736E617274;
      unint64_t v6 = 0xEC000000676E6962;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7974706D65) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C3CE6798(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1702129518;
  }
  else {
    uint64_t v3 = 0x7265646C6F66;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1702129518;
  }
  else {
    uint64_t v5 = 0x7265646C6F66;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3CE6834(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x657461657263;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x657461657263;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702260589;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 2037411683;
      break;
    case 3:
      unint64_t v5 = 0x656D616E6572;
      break;
    case 4:
      unint64_t v5 = 0x6574656C6564;
      break;
    case 5:
      unint64_t v5 = 0x6974726150646461;
      unint64_t v3 = 0xEE00746E61706963;
      break;
    case 6:
      unint64_t v3 = 0x80000001C3DF1CF0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v3 = 0x80000001C3DF1D10;
      break;
    case 8:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E6F69746E656DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1702260589) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 2037411683) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 0x656D616E6572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 0x6574656C6564) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEE00746E61706963;
      if (v5 != 0x6974726150646461) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0x80000001C3DF1CF0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0xD000000000000013;
      unint64_t v6 = 0x80000001C3DF1D10;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E6F69746E656DLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C3CE6AE8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746E65636572;
    }
    else {
      uint64_t v3 = 0x726568746FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746E65636572;
      }
      else {
        uint64_t v6 = 0x726568746FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    char v8 = sub_1C3DBB3B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C3CE6BF4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001C3DF1C70;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6C61636F6CLL;
      break;
    case 2:
      unint64_t v5 = 0x726F707075736E75;
      uint64_t v6 = 6579572;
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0x6C6F686563616C70;
      uint64_t v6 = 7497060;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001C3DF1C70;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      if (v5 == 0x6C61636F6CLL) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v2 = 0x726F707075736E75;
      unint64_t v7 = 0xEB00000000646574;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEB00000000726564;
      if (v5 == 0x6C6F686563616C70) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1C3CE6D94(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000044;
  uint64_t v3 = 0x455454414D524F46;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x4E49414C50;
    }
    else {
      uint64_t v5 = 1313821514;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x455454414D524F46;
  unint64_t v6 = 0xE900000000000044;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x4E49414C50;
    }
    else {
      uint64_t v3 = 1313821514;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t static ActivityEventObject.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  BOOL v6 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v7 = 1702129518;
  }
  else {
    uint64_t v7 = 0x7265646C6F66;
  }
  if (v6) {
    unint64_t v8 = 0xE600000000000000;
  }
  else {
    unint64_t v8 = 0xE400000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v9 = 1702129518;
  }
  else {
    uint64_t v9 = 0x7265646C6F66;
  }
  if (*(unsigned char *)a2) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE600000000000000;
  }
  if (v7 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    if (v2 != v4) {
      goto LABEL_24;
    }
  }
  else
  {
    char v12 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
    if (v2 != v4) {
      goto LABEL_24;
    }
  }
  if (v3 == v5) {
    return 1;
  }
LABEL_24:
  return sub_1C3DBB3B8();
}

NotesShared::ActivityEventObject_optional __swiftcall ActivityEventObject.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (!v8)
  {
    self;
    if (!swift_dynamicCastObjCClass())
    {
      if (qword_1EA3858B0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C3DB9048();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EA387900);
      int v19 = cloudSyncingObject;
      uint64_t v20 = sub_1C3DB9028();
      os_log_type_t v21 = sub_1C3DBA698();
      if (os_log_type_enabled(v20, v21))
      {
        unint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v22 = 138412290;
        id v27 = [(ICCloudSyncingObject *)v19 objectID];
        id v29 = v27;
        sub_1C3DBA9A8();
        *uint64_t v23 = v27;

        id v25 = "Object type is not supported — returning nil {objectID: %@}";
        goto LABEL_17;
      }
LABEL_18:

      goto LABEL_19;
    }
  }
  id v9 = [(ICCloudSyncingObject *)cloudSyncingObject identifier];
  if (!v9)
  {
LABEL_9:
    if (qword_1EA3858B0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C3DB9048();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EA387900);
    int v19 = cloudSyncingObject;
    uint64_t v20 = sub_1C3DB9028();
    os_log_type_t v21 = sub_1C3DBA698();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 138412290;
      id v24 = [(ICCloudSyncingObject *)v19 objectID];
      id v29 = v24;
      sub_1C3DBA9A8();
      *uint64_t v23 = v24;

      id v25 = "Object must have an identifier — returning nil {objectID: %@}";
LABEL_17:
      _os_log_impl(&dword_1C3A61000, v20, v21, v25, v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v23, -1, -1);
      MEMORY[0x1C877E600](v22, -1, -1);

LABEL_19:
      *uint64_t v3 = 0;
      v3[1] = 0;
      v3[2] = 0;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  unint64_t v10 = v9;
  uint64_t v11 = sub_1C3DB9C38();
  unint64_t v13 = v12;

  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  NotesShared::ActivityEventObject::Types v15 = swift_bridgeObjectRelease();
  *uint64_t v3 = v8 == 0;
  v3[1] = v11;
  v3[2] = v13;
LABEL_20:
  result.value.recordName._object = v17;
  result.value.recordName._uint64_t countAndFlagsBits = v16;
  result.value.type = v15;
  return result;
}

uint64_t sub_1C3CE73A4()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387900);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387900);
  if (qword_1EB6FC718 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC520);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

NotesShared::ActivityEventObject::Types_optional __swiftcall ActivityEventObject.Types.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ActivityEventObject.Types.rawValue.getter()
{
  if (*v0) {
    return 1702129518;
  }
  else {
    return 0x7265646C6F66;
  }
}

uint64_t sub_1C3CE7500(char *a1, char *a2)
{
  return sub_1C3CE6798(*a1, *a2);
}

uint64_t sub_1C3CE750C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CE7584()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CE75E8()
{
  return sub_1C3DBB608();
}

NotesShared::ActivityEventObject::Types_optional sub_1C3CE765C(Swift::String *a1)
{
  return ActivityEventObject.Types.init(rawValue:)(*a1);
}

void sub_1C3CE7668(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702129518;
  if (!*v1) {
    uint64_t v2 = 0x7265646C6F66;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C3CE769C()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3CE76FC()
{
  return sub_1C3DB9F58();
}

void ActivityEventObject.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ActivityEventObject.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

void (*ActivityEventObject.type.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventObject.recordName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventObject.recordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*ActivityEventObject.recordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::ActivityEventObject __swiftcall ActivityEventObject.init(type:recordName:)(NotesShared::ActivityEventObject::Types type, Swift::String recordName)
{
  object = recordName._object;
  uint64_t countAndFlagsBits = recordName._countAndFlagsBits;
  char v5 = (char *)type;
  uint64_t v6 = v2;
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *v5;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  NotesShared::ActivityEventObject::Types v12 = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v6 = v11;
  *(void *)(v6 + 8) = countAndFlagsBits;
  *(void *)(v6 + 16) = object;
  result.recordName._object = v14;
  result.recordName._uint64_t countAndFlagsBits = v13;
  result.type = v12;
  return result;
}

uint64_t ActivityEventObject.hash(into:)()
{
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CE79A0()
{
  if (*v0) {
    return 0x614E64726F636572;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1C3CE79D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3CE85EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3CE7A00(uint64_t a1)
{
  unint64_t v2 = sub_1C3CE8210();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3CE7A3C(uint64_t a1)
{
  unint64_t v2 = sub_1C3CE8210();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityEventObject.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387918);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  v11[0] = *((void *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CE8210();
  sub_1C3DBB6D8();
  char v14 = v8;
  char v13 = 0;
  sub_1C3CE8264();
  sub_1C3DBB1E8();
  if (!v2)
  {
    char v12 = 1;
    sub_1C3DBB1A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityEventObject.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t ActivityEventObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387930);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3CE8210();
  sub_1C3DBB6B8();
  if (!v2)
  {
    uint64_t v12 = v18;
    char v21 = 0;
    sub_1C3CE82B8();
    sub_1C3DBB108();
    int v19 = v22;
    char v20 = 1;
    uint64_t v14 = sub_1C3DBB0C8();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v14;
    *(void *)(v12 + 16) = v16;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CE7F24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityEventObject.init(from:)(a1, a2);
}

uint64_t sub_1C3CE7F3C(void *a1)
{
  return ActivityEventObject.encode(to:)(a1);
}

uint64_t sub_1C3CE7F54()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CE7FE8()
{
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DB9D08();
}

uint64_t sub_1C3CE806C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CE80FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_1C3CE6798(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1C3DBB3B8();
}

NotesShared::ActivityEventObject::Types_optional __swiftcall ActivityEventObject.Types.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  uint64_t v3 = v1;
  self;
  if (swift_dynamicCastObjCClass())
  {

    char v5 = 0;
  }
  else
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();

    if (v6) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  *uint64_t v3 = v5;
  return result;
}

unint64_t sub_1C3CE8210()
{
  unint64_t result = qword_1EA387920;
  if (!qword_1EA387920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387920);
  }
  return result;
}

unint64_t sub_1C3CE8264()
{
  unint64_t result = qword_1EA387928;
  if (!qword_1EA387928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387928);
  }
  return result;
}

unint64_t sub_1C3CE82B8()
{
  unint64_t result = qword_1EA387938;
  if (!qword_1EA387938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387938);
  }
  return result;
}

unint64_t sub_1C3CE8310()
{
  unint64_t result = qword_1EA387940;
  if (!qword_1EA387940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387940);
  }
  return result;
}

unint64_t sub_1C3CE8368()
{
  unint64_t result = qword_1EB6FC420;
  if (!qword_1EB6FC420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC420);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventObject()
{
  return &type metadata for ActivityEventObject;
}

ValueMetadata *type metadata accessor for ActivityEventObject.Types()
{
  return &type metadata for ActivityEventObject.Types;
}

unsigned char *_s11NotesShared19ActivityEventObjectV5TypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3CE84ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventObject.CodingKeys()
{
  return &type metadata for ActivityEventObject.CodingKeys;
}

unint64_t sub_1C3CE84E8()
{
  unint64_t result = qword_1EA387948;
  if (!qword_1EA387948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387948);
  }
  return result;
}

unint64_t sub_1C3CE8540()
{
  unint64_t result = qword_1EA387950;
  if (!qword_1EA387950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387950);
  }
  return result;
}

unint64_t sub_1C3CE8598()
{
  unint64_t result = qword_1EA387958;
  if (!qword_1EA387958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387958);
  }
  return result;
}

uint64_t sub_1C3CE85EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C3CE86DC()
{
  unint64_t result = qword_1EA387960;
  if (!qword_1EA387960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387960);
  }
  return result;
}

uint64_t RetryingLazy.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 1, 1, a3);
  uint64_t result = type metadata accessor for RetryingLazy();
  uint64_t v8 = (void *)(a4 + *(int *)(result + 28));
  *uint64_t v8 = a1;
  v8[1] = a2;
  return result;
}

uint64_t type metadata accessor for RetryingLazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t RetryingLazy.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v19 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_1C3DBA938();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - v11;
  char v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v18 - v11, v3, v6);
  uint64_t v14 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v5) == 1)
  {
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(uint64_t))(v3 + *(int *)(a1 + 28)))(v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v3, v10, v6);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v19, v3, v6);
  }
  else
  {
    uint64_t v17 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19, v12, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v5);
  }
}

uint64_t sub_1C3CE89E0()
{
  uint64_t result = sub_1C3DBA938();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3CE8A7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    uint64_t v11 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    char v13 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *char v13 = *v11;
    v13[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C3CE8BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return swift_release();
}

char *sub_1C3CE8CC0(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v13 = v12 + 7;
  unint64_t v14 = (unint64_t)&a1[v13];
  uint64_t v15 = (uint64_t *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = (void *)(v14 & 0xFFFFFFFFFFFFFFF8);
  void *v18 = v17;
  v18[1] = v16;
  swift_retain();
  return a1;
}

void *sub_1C3CE8DE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = v13 + 7;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1C3CE8F9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C3CE90C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C3CE926C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C3CE93F4);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_27:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v19 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    return (v19 + 1);
  }
  else
  {
    unsigned int v18 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v18 >= 2) {
      return v18 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1C3CE9408(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  size_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v11;
  }
  size_t v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 < a3)
  {
    unsigned int v13 = a3 - v10;
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v6 = v15;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v16 = a2 - v10;
    }
    else {
      int v16 = 1;
    }
    if (((v11 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v17 = ~v10 + a2;
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v16;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v12] = v16;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1C3CE9690);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v9 < 0x7FFFFFFF)
        {
          char v21 = (void *)((unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *char v21 = a2 ^ 0x80000000;
            v21[1] = 0;
          }
          else
          {
            *char v21 = a2 - 1;
          }
        }
        else if (v9 >= a2)
        {
          unsigned __int8 v22 = *(void (**)(void))(v7 + 56);
          v22();
        }
        else
        {
          if (v11 <= 3) {
            int v18 = ~(-1 << (8 * v11));
          }
          else {
            int v18 = -1;
          }
          if (v11)
          {
            int v19 = v18 & (~v9 + a2);
            if (v11 <= 3) {
              int v20 = v11;
            }
            else {
              int v20 = 4;
            }
            bzero(a1, v11);
            switch(v20)
            {
              case 2:
                *(_WORD *)a1 = v19;
                break;
              case 3:
                *(_WORD *)a1 = v19;
                a1[2] = BYTE2(v19);
                break;
              case 4:
                *(_DWORD *)a1 = v19;
                break;
              default:
                *a1 = v19;
                break;
            }
          }
        }
      }
      return;
  }
}