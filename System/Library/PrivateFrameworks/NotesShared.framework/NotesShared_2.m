void AccountID.Authority.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;

  if (objc_msgSend(a1, sel_isLocalAccount))
  {
    swift_unknownObjectRelease();
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v6 = objc_msgSend(a1, sel_emailAddress);
    if (v6)
    {
      v7 = v6;
      v4 = sub_1C3DB9C38();
      v5 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      v4 = 0;
      v5 = 0xE000000000000000;
    }
  }
  *a2 = v4;
  a2[1] = v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (objc_msgSend(a1, sel_isLocalAccount))
  {

    v4 = 0;
    v5 = 0;
  }
  else
  {
    v6 = objc_msgSend(a1, sel_userRecordName);
    v4 = sub_1C3DB9C38();
    v5 = v7;
  }
  *a2 = v4;
  a2[1] = v5;
}

__n128 AccountID.init(authority:contextType:)@<Q0>(__n128 *a1@<X0>, unsigned __int8 *a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int8 v3 = *a2;
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u8[0] = v3;
  return result;
}

uint64_t AccountID.Authority.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (objc_msgSend(a1, sel_isLocalAccount))
  {
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    id v7 = objc_msgSend(self, sel_emailAddressForAccount_, a1);
    uint64_t v5 = sub_1C3DB9C38();
    uint64_t v6 = v8;

    uint64_t result = swift_unknownObjectRelease();
  }
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t static AccountID.uriTypeName.getter()
{
  return 0x746E756F636361;
}

uint64_t AccountID.authority.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AccountID.authority.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

void (*AccountID.authority.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void AccountID.contextType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *AccountID.contextType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

void (*AccountID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AccountID.hash(into:)()
{
  if (*(void *)(v0 + 8))
  {
    sub_1C3DBB5E8();
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C3DBB5E8();
  }
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t AccountID.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t sub_1C3CE9A5C()
{
  return 0x746E756F636361;
}

uint64_t sub_1C3CE9A78()
{
  if (*(void *)(v0 + 8))
  {
    sub_1C3DBB5E8();
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C3DBB5E8();
  }
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3CE9B3C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t AccountID.description.getter()
{
  return AccountID.entityIdentifierString.getter();
}

uint64_t AccountID.entityIdentifierString.getter()
{
  if (*(void *)(v0 + 8))
  {
    uint64_t v3 = sub_1C3DB9C38();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
  }
  else
  {
    sub_1C3DBAC68();
    uint64_t v1 = sub_1C3DB9C38();
    swift_bridgeObjectRelease();
    uint64_t v3 = v1;
    sub_1C3DB9D68();
    sub_1C3DB9C38();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1C3CE9E2C()
{
  return AccountID.entityIdentifierString.getter();
}

unint64_t AccountID.debugDescription.getter()
{
  return 0xD000000000000015;
}

uint64_t static AccountID.entityIdentifier(for:)@<X0>(uint64_t *a1@<X8>)
{
  v153 = a1;
  uint64_t v137 = sub_1C3DB8218();
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  v135 = (char *)v121 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1C3DB82E8();
  uint64_t v133 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  v138 = (char *)v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387968);
  MEMORY[0x1F4188790](v3 - 8);
  v131 = (char *)v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB9418();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v141 = v5;
  uint64_t v142 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v132 = (char *)v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v140 = (char *)v121 - v9;
  uint64_t v10 = sub_1C3DB9398();
  uint64_t v148 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  v144 = (char *)v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  v143 = (char *)v121 - v13;
  uint64_t v145 = sub_1C3DB93A8();
  uint64_t v152 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  v146 = (char *)v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v18 = (char *)v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v147 = (uint64_t)v121 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v20 - 8);
  v22 = (char *)v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C3DB9438();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v150 = v23;
  uint64_t v151 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v27 = (char *)v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v149 = (char *)v121 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC788);
  MEMORY[0x1F4188790](v29 - 8);
  v31 = (char *)v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C3DB8408();
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  v134 = (char *)v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  v36 = (char *)v121 - v35;
  uint64_t v38 = v37;
  sub_1C3DB83D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v32) == 1)
  {
    uint64_t result = sub_1C3C2A448((uint64_t)v31, &qword_1EB6FC788);
LABEL_9:
    uint64_t v60 = 0;
    char v61 = 0;
    uint64_t v62 = 1;
LABEL_10:
    v63 = v153;
    uint64_t *v153 = v60;
    v63[1] = v62;
    *((unsigned char *)v63 + 16) = v61;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v36, v31, v32);
  sub_1C3DB83B8();
  v40 = v36;
  if (!v41)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v36, v32);
    goto LABEL_9;
  }
  uint64_t v130 = v38;
  v42 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  char v43 = ICIsNotesURLScheme(v42);

  if ((v43 & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v40, v32);
    goto LABEL_9;
  }
  uint64_t v128 = v32;
  v129 = v40;
  sub_1C3DB8358();
  v44 = v149;
  sub_1C3DB9448();
  uint64_t v45 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v22, 1, 1, v45);
  sub_1C3DB93D8();
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v27, v44, v150);
  v46 = v146;
  sub_1C3DB9388();
  uint64_t v47 = v152;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
  uint64_t v49 = v145;
  uint64_t v126 = v152 + 16;
  v125 = v48;
  v48(v18, (uint64_t)v46, v145);
  uint64_t v50 = sub_1C3C3869C(&qword_1EB6FC728, MEMORY[0x1E4FBCE10]);
  v51 = v143;
  sub_1C3DBA528();
  v52 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v152 = v47 + 8;
  v124 = v52;
  v52(v46, v49);
  uint64_t v53 = v148;
  (*(void (**)(char *, char *, uint64_t))(v148 + 32))(&v18[*(int *)(v15 + 36)], v51, v10);
  uint64_t v54 = v147;
  sub_1C3C38634((uint64_t)v18, v147);
  uint64_t v56 = v53 + 16;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v127 = v54 + *(int *)(v15 + 36);
  v123 = v55;
  ((void (*)(char *))v55)(v51);
  v57 = v144;
  sub_1C3DBA558();
  v121[4] = sub_1C3C3869C(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  LOBYTE(v44) = sub_1C3DB9BE8();
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v58 = v53 + 8;
  v59(v57, v10);
  v122 = v59;
  v59(v51, v10);
  if (v44)
  {
LABEL_6:
    sub_1C3C2A448(v54, &qword_1EB6FC540);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v129, v128);
    goto LABEL_9;
  }
  v121[2] = v56;
  uint64_t v148 = v58;
  v64 = (void (*)(uint64_t *, void))sub_1C3DBA5C8();
  uint64_t v65 = v141;
  uint64_t v66 = v142;
  v67 = *(void (**)(char *))(v142 + 16);
  v68 = v140;
  v121[1] = v142 + 16;
  v121[0] = v67;
  v67(v140);
  v64(&v156, 0);
  v69 = v146;
  v125(v146, v54, v49);
  v121[3] = v50;
  sub_1C3DBA568();
  v124(v69, v49);
  uint64_t v70 = sub_1C3DB9408();
  uint64_t v72 = v71;
  v73 = *(char **)(v66 + 8);
  uint64_t v142 = v66 + 8;
  v140 = v73;
  ((void (*)(char *, uint64_t))v73)(v68, v65);
  if (v70 == 0x746E756F636361 && v72 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v74 = v145;
    uint64_t v75 = v127;
  }
  else
  {
    char v76 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    uint64_t v54 = v147;
    uint64_t v74 = v145;
    uint64_t v75 = v127;
    if ((v76 & 1) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t v77 = sub_1C3DB8338();
  if (!v78)
  {
    v91 = v143;
    v123(v143, v75, v10);
    v92 = v144;
    uint64_t v54 = v147;
    sub_1C3DBA558();
    char v93 = sub_1C3DB9BE8();
    v94 = v92;
    v95 = v122;
    v122(v94, v10);
    v95(v91, v10);
    if ((v93 & 1) == 0)
    {
      v96 = (void (*)(uint64_t *, void))sub_1C3DBA5C8();
      v97 = v132;
      uint64_t v98 = v141;
      ((void (*)(char *))v121[0])(v132);
      v96(&v156, 0);
      v99 = v146;
      v125(v146, v54, v74);
      sub_1C3DBA568();
      v124(v99, v74);
      uint64_t v60 = sub_1C3DB9408();
      uint64_t v62 = v100;
      sub_1C3C2A448(v54, &qword_1EB6FC540);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v128);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v140)(v97, v98);
      char v61 = 0;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v79 = v77;
  uint64_t v80 = v78;
  uint64_t v156 = v77;
  uint64_t v157 = v78;
  uint64_t v154 = sub_1C3DB9C38();
  uint64_t v155 = v81;
  sub_1C3C2A4A4();
  uint64_t v82 = sub_1C3DBAA18();
  swift_bridgeObjectRelease();
  if (!v82)
  {
    swift_bridgeObjectRelease();
    v101 = v129;
    uint64_t v102 = sub_1C3DB8318();
    uint64_t v103 = v130;
    uint64_t v104 = v128;
    uint64_t v105 = v147;
    if (v102)
    {
      uint64_t v106 = *(void *)(v102 + 16);
      if (v106)
      {
        v107 = *(void (**)(char *, unint64_t, uint64_t))(v133 + 16);
        unint64_t v108 = v102 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
        v109 = (void (**)(char *, uint64_t))(v133 + 8);
        uint64_t v110 = *(void *)(v133 + 72);
        swift_bridgeObjectRetain();
        uint64_t v111 = v139;
        v112 = v138;
        while (1)
        {
          v107(v112, v108, v111);
          if (sub_1C3DB82C8() == 1701869940 && v113 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            goto LABEL_33;
          }
          char v114 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease();
          if (v114) {
            break;
          }
          v112 = v138;
          uint64_t v111 = v139;
          (*v109)(v138, v139);
          v108 += v110;
          --v106;
          uint64_t v103 = v130;
          if (!v106)
          {
            swift_bridgeObjectRelease();
            uint64_t v115 = 1;
            uint64_t v104 = v128;
            v101 = v129;
            uint64_t v105 = v147;
            goto LABEL_30;
          }
        }
        uint64_t v103 = v130;
LABEL_33:
        uint64_t v111 = v139;
        swift_bridgeObjectRelease();
        uint64_t v116 = v133;
        uint64_t v117 = (uint64_t)v131;
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v131, v138, v111);
        uint64_t v115 = 0;
        uint64_t v104 = v128;
        v101 = v129;
        uint64_t v105 = v147;
      }
      else
      {
        uint64_t v115 = 1;
        uint64_t v111 = v139;
LABEL_30:
        uint64_t v116 = v133;
        uint64_t v117 = (uint64_t)v131;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, v115, 1, v111);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v117, 1, v111) == 1)
      {
        sub_1C3C2A448(v117, &qword_1EA387968);
      }
      else
      {
        sub_1C3DB82D8();
        uint64_t v119 = v118;
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v117, v111);
        if (v119)
        {
          swift_bridgeObjectRetain();
          uint64_t v120 = sub_1C3DBB038();
          swift_bridgeObjectRelease();
          if (v120)
          {
            if (v120 != 1) {
              goto LABEL_40;
            }
            char v61 = 1;
          }
          else
          {
            char v61 = 0;
          }
          sub_1C3C2A448(v105, &qword_1EB6FC540);
          (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
          (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v104);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v60 = 0;
          uint64_t v62 = 0;
          goto LABEL_10;
        }
      }
    }
LABEL_40:
    sub_1C3C2A448(v105, &qword_1EB6FC540);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v104);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v60 = 0;
    uint64_t v62 = 0;
    char v61 = 0;
    goto LABEL_10;
  }
  v83 = v134;
  sub_1C3DB83F8();
  MEMORY[0x1C8779850](v79, v80);
  v84 = v129;
  sub_1C3DB8378();
  sub_1C3DB8388();
  sub_1C3DB8398();
  sub_1C3DB83A8();
  uint64_t result = sub_1C3DB83E8();
  uint64_t v86 = v128;
  uint64_t v87 = v147;
  if (v85)
  {
    uint64_t v156 = result;
    uint64_t v157 = v85;
    v88 = v135;
    sub_1C3DB81C8();
    uint64_t v60 = sub_1C3DBA9E8();
    uint64_t v62 = v89;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v88, v137);
    swift_bridgeObjectRelease();
    v90 = *(void (**)(char *, uint64_t))(v130 + 8);
    v90(v83, v86);
    sub_1C3C2A448(v87, &qword_1EB6FC540);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v150);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v90)(v84, v86);
    char v61 = 1;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t AccountID.Authority.description.getter()
{
  if (v0[1]) {
    uint64_t v1 = *v0;
  }
  else {
    uint64_t v1 = sub_1C3DB9C38();
  }
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t AccountID.Authority.debugDescription.getter()
{
  unint64_t v1 = 0xD000000000000019;
  if (*(void *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    sub_1C3DB9CA8();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    return 0xD00000000000001BLL;
  }
  return v1;
}

uint64_t AccountID.Authority.hash(into:)()
{
  if (!*(void *)(v0 + 8)) {
    return sub_1C3DBB5E8();
  }
  sub_1C3DBB5E8();
  return sub_1C3DB9D08();
}

uint64_t AccountID.Authority.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t sub_1C3CEB358()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t sub_1C3CEB3C8()
{
  if (!*(void *)(v0 + 8)) {
    return sub_1C3DBB5E8();
  }
  sub_1C3DBB5E8();
  return sub_1C3DB9D08();
}

uint64_t sub_1C3CEB440()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t sub_1C3CEB4AC()
{
  if (v0[1]) {
    uint64_t v1 = *v0;
  }
  else {
    uint64_t v1 = sub_1C3DB9C38();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s11NotesShared9AccountIDV9AuthorityO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_1C3DBB3B8();
}

uint64_t _s11NotesShared9AccountIDV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  if (!v3)
  {
    if (!v5)
    {
      swift_bridgeObjectRelease_n();
LABEL_12:
      if (v4) {
        uint64_t v9 = 1819112552;
      }
      else {
        uint64_t v9 = 0x6E7265646F6DLL;
      }
      if (v4) {
        unint64_t v10 = 0xE400000000000000;
      }
      else {
        unint64_t v10 = 0xE600000000000000;
      }
      if (v6) {
        uint64_t v11 = 1819112552;
      }
      else {
        uint64_t v11 = 0x6E7265646F6DLL;
      }
      if (v6) {
        unint64_t v12 = 0xE400000000000000;
      }
      else {
        unint64_t v12 = 0xE600000000000000;
      }
      if (v9 == v11 && v10 == v12) {
        char v8 = 1;
      }
      else {
        char v8 = sub_1C3DBB3B8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
    }
LABEL_10:
    char v8 = 0;
    return v8 & 1;
  }
  if (!v5) {
    goto LABEL_10;
  }
  if (*(void *)a1 == *(void *)a2 && v3 == v5) {
    goto LABEL_12;
  }
  char v8 = 0;
  if (sub_1C3DBB3B8()) {
    goto LABEL_12;
  }
  return v8 & 1;
}

unint64_t sub_1C3CEB700(void *a1)
{
  a1[1] = sub_1C3CEB738();
  a1[2] = sub_1C3CEB78C();
  unint64_t result = sub_1C3CEB7E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3CEB738()
{
  unint64_t result = qword_1EA387970;
  if (!qword_1EA387970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387970);
  }
  return result;
}

unint64_t sub_1C3CEB78C()
{
  unint64_t result = qword_1EA387978;
  if (!qword_1EA387978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387978);
  }
  return result;
}

unint64_t sub_1C3CEB7E0()
{
  unint64_t result = qword_1EA387980;
  if (!qword_1EA387980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387980);
  }
  return result;
}

unint64_t sub_1C3CEB838()
{
  unint64_t result = qword_1EA387988;
  if (!qword_1EA387988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387988);
  }
  return result;
}

unint64_t sub_1C3CEB890()
{
  unint64_t result = qword_1EA387990;
  if (!qword_1EA387990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387990);
  }
  return result;
}

uint64_t sub_1C3CEB8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountID(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountID()
{
  return &type metadata for AccountID;
}

uint64_t getEnumTagSinglePayload for AccountID.Authority(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AccountID.Authority(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1C3CEBB1C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C3CEBB34(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountID.Authority()
{
  return &type metadata for AccountID.Authority;
}

uint64_t static GroupSessionProvider<>.sharedGroupSessionProvider(for:share:container:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C3CEBC54(a1, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387998);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v8 = a2;
  id v9 = a3;
  return sub_1C3DB8DF8();
}

uint64_t sub_1C3CEBC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static GroupSessionProvider<>.personalGroupSessionProvider(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditNoteActivity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C3CEBC54(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBDF0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1C3DB8E08();
}

NotesShared::NoteID __swiftcall NoteID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static NoteID.uriTypeName.getter()
{
  return 1702129518;
}

void NoteID.contextType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *NoteID.contextType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void (*NoteID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteID.managedIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NoteID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*NoteID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NoteID.hash(into:)()
{
  if (*v0 == 2)
  {
    sub_1C3DBB5F8();
  }
  else
  {
    sub_1C3DBB5F8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t NoteID.hashValue.getter()
{
  int v1 = *v0;
  sub_1C3DBB5D8();
  sub_1C3DBB5F8();
  if (v1 != 2)
  {
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t sub_1C3CEBFDC()
{
  return 1702129518;
}

uint64_t sub_1C3CEBFEC()
{
  return sub_1C3D5B1F8(*v0, *((void *)v0 + 1), *((void *)v0 + 2));
}

uint64_t sub_1C3CEBFF8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C28D88(*v0, *((void *)v0 + 1), *((void *)v0 + 2), (uint64_t)v3);
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C3C36FB8((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v6 = sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1C3CEC12C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3CEC15C();
  unint64_t result = sub_1C3CEC1B0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3CEC15C()
{
  unint64_t result = qword_1EA3879A0;
  if (!qword_1EA3879A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879A0);
  }
  return result;
}

unint64_t sub_1C3CEC1B0()
{
  unint64_t result = qword_1EA3879A8;
  if (!qword_1EA3879A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879A8);
  }
  return result;
}

unint64_t sub_1C3CEC204(void *a1)
{
  a1[1] = sub_1C3CEC23C();
  a1[2] = sub_1C3CEC290();
  unint64_t result = sub_1C3CEC2E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3CEC23C()
{
  unint64_t result = qword_1EA3879B0;
  if (!qword_1EA3879B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879B0);
  }
  return result;
}

unint64_t sub_1C3CEC290()
{
  unint64_t result = qword_1EA3879B8;
  if (!qword_1EA3879B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879B8);
  }
  return result;
}

unint64_t sub_1C3CEC2E4()
{
  unint64_t result = qword_1EA3879C0;
  if (!qword_1EA3879C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879C0);
  }
  return result;
}

unint64_t sub_1C3CEC33C()
{
  unint64_t result = qword_1EB6FB260;
  if (!qword_1EB6FB260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FB260);
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteID()
{
  return &type metadata for NoteID;
}

unint64_t sub_1C3CEC3A0(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B38);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1C3DBAFB8())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x1C877C220](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_1C3C2A448((uint64_t)v7, &qword_1EA387B38);
      }
      else
      {
        uint64_t v17 = v22;
        sub_1C3CFE274((uint64_t)v7, v22, type metadata accessor for NoteEditActivityEvent);
        sub_1C3CFE274(v17, v26, type metadata accessor for NoteEditActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C3D8299C(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1C3D8299C(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_1C3CFE274(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for NoteEditActivityEvent);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C3CEC6F4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v40 = (char *)v37 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v37 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (char *)v37 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v54 = v3;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v19 = v6 + 16;
    v46 = v20;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    v37[1] = a3;
    unint64_t v38 = v21;
    uint64_t v22 = a3 + v21;
    uint64_t v23 = *(void *)(v19 + 56);
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    v52 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    char v43 = (void (**)(char *, uint64_t))(v19 - 8);
    v44 = v12;
    swift_bridgeObjectRetain();
    unint64_t v51 = MEMORY[0x1E4FBC860];
    uint64_t v24 = v50;
    v39 = v16;
    uint64_t v42 = v19;
    while (1)
    {
      v46(v24, v22, v5);
      uint64_t v41 = *v49;
      v41(v24, 0, 1, v5);
      unint64_t v25 = *v53;
      if ((*v53)(v24, 1, v5) == 1) {
        break;
      }
      uint64_t v26 = *v52;
      uint64_t v27 = v5;
      uint64_t v28 = (uint64_t)v16;
      id v29 = v44;
      (*v52)(v44, v24, v27);
      uint64_t v30 = v54;
      v47(v29);
      uint64_t v54 = v30;
      if (v30)
      {
        (*v43)(v29, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v51;
      }
      (*v43)(v29, v27);
      uint64_t v16 = (char *)v28;
      if (v25((char *)v28, 1, v27) == 1)
      {
        sub_1C3C2A448(v28, (uint64_t *)&unk_1EB6FC7E0);
        uint64_t v24 = v50;
        uint64_t v5 = v27;
      }
      else
      {
        v31 = v40;
        v26(v40, (char *)v28, v27);
        v26(v45, v31, v27);
        uint64_t v5 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v51 = sub_1C3D833AC(0, *(void *)(v51 + 16) + 1, 1, v51);
        }
        unint64_t v33 = *(void *)(v51 + 16);
        unint64_t v32 = *(void *)(v51 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v51 = sub_1C3D833AC(v32 > 1, v33 + 1, 1, v51);
        }
        unint64_t v34 = v51;
        *(void *)(v51 + 16) = v33 + 1;
        v26((char *)(v34 + v38 + v33 * v23), v45, v27);
        uint64_t v24 = v50;
        uint64_t v16 = v39;
      }
      v22 += v23;
      if (!--v18)
      {
        v41(v50, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    unint64_t v51 = MEMORY[0x1E4FBC860];
    v35(v50, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1C3CECB6C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    sub_1C3C2A448(a1, &qword_1EB6FC388);
    sub_1C3D04774(a2, (uint64_t)v9);
    uint64_t v7 = sub_1C3DB88F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1C3C2A448((uint64_t)v9, &qword_1EB6FC388);
  }
  else
  {
    sub_1C3CB3BF8(a1, (uint64_t)v9, &qword_1EB6FC380);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C3D05860((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C3DB88F8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
}

uint64_t sub_1C3CECC98()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EB6FC748);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC748);
  if (qword_1EB6FC710 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC6A8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

unint64_t sub_1C3CECD60()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v1 = (void *)*MEMORY[0x1E4F38DC8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F38DC8];
  sub_1C3C4C8B4(0, &qword_1EB6FBB08);
  id v2 = v1;
  *(void *)(inited + 40) = sub_1C3DBA8C8();
  unint64_t result = sub_1C3C81C40(inited);
  qword_1EA3879C8 = result;
  return result;
}

uint64_t SystemPaperDocumentError.init(rawValue:)()
{
  return 0;
}

unint64_t static SystemPaperDocumentError._nsErrorDomain.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C3CECE2C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3CECE90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C3CFDD80();
  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

void *sub_1C3CECEDC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C3CECEF4(uint64_t a1)
{
  unint64_t v2 = sub_1C3CFDD80();
  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1C3CECF30(uint64_t a1)
{
  unint64_t v2 = sub_1C3CFDD80();
  return MEMORY[0x1F40E3BA0](a1, v2);
}

unint64_t sub_1C3CECF6C()
{
  return 0xD000000000000024;
}

uint64_t sub_1C3CECF88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C3CFDD80();
  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

uint64_t SystemPaperSyncArchive.databaseArchive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive;
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SystemPaperSyncArchive.assetArchives.getter()
{
  return swift_bridgeObjectRetain();
}

id SystemPaperSyncArchive.__allocating_init(databaseArchive:assetArchives:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive];
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(void *)&v5[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id SystemPaperSyncArchive.init(databaseArchive:assetArchives:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = &v2[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive];
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(void *)&v2[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for SystemPaperSyncArchive();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for SystemPaperSyncArchive()
{
  uint64_t result = qword_1EB6FBF58;
  if (!qword_1EB6FBF58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3CED4E8()
{
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1C3DB88F8();
  sub_1C3CFE01C((unint64_t *)&qword_1EB6FC740, 255, MEMORY[0x1E4F276F0]);
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x1C877B530](v1, v0);
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6573616261746144;
}

void SystemPaperSyncArchive.init()()
{
}

id SystemPaperSyncArchive.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemPaperSyncArchive();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *static ICSystemPaperDocument.paperFastPath.getter()
{
  swift_beginAccess();
  uint64_t v0 = off_1EB6FB7A0;
  sub_1C3C4D848((uint64_t)off_1EB6FB7A0);
  return v0;
}

uint64_t static ICSystemPaperDocument.paperFastPath.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = off_1EB6FB7A0;
  off_1EB6FB7A0 = a1;
  qword_1EB6FB7A8 = a2;
  return sub_1C3C4D710((uint64_t)v4);
}

uint64_t (*static ICSystemPaperDocument.paperFastPath.modify())()
{
  return j__swift_endAccess;
}

uint64_t static ICSystemPaperDocument.activePaper(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = (void (*)(uint64_t))off_1EB6FB7A0;
  if (off_1EB6FB7A0)
  {
    swift_retain();
    v4(a1);
    return sub_1C3C4D710((uint64_t)v4);
  }
  else
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
}

id ICSystemPaperDocument.attachment.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
}

id ICSystemPaperDocument.coherenceContext.getter()
{
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  if (result)
  {
    objc_super v2 = result;
    MEMORY[0x1F4188790](result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310);
    sub_1C3DBA838();

    return (id)v3;
  }
  return result;
}

void sub_1C3CEDAC8(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB88F8();
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  objc_super v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  id v13 = objc_msgSend(v12, sel_note);
  if (!v13) {
    goto LABEL_4;
  }
  uint64_t v14 = v13;
  if ((objc_msgSend(v13, sel_isPasswordProtectedAndLocked) & 1) == 0)
  {
    uint64_t v34 = ObjectType;
    id v16 = objc_msgSend(v12, sel_attachmentModel);
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      unint64_t v32 = v2;
      unint64_t v33 = a2;
      id v19 = objc_msgSend(self, sel_sharedContext);
      if (v19)
      {
        uint64_t v20 = v19;
        unsigned int v21 = objc_msgSend(v19, sel_hasContextOptions_, 721457);

        if (v21)
        {
          if (objc_msgSend(self, sel_isMainThread))
          {
            id v22 = objc_msgSend(v18, sel_paperCoherenceContextURL);
            sub_1C3DB8898();

            if (objc_msgSend(v14, sel_isPasswordProtected))
            {
              *(void *)&long long v37 = v34;
              *((void *)&v37 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v23, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
              uint64_t v24 = a1;
            }
            else
            {
              a1 = 0;
              long long v36 = 0u;
              long long v37 = 0u;
            }
            id v29 = v32;
            a2 = v33;
            uint64_t v30 = v38;
            uint64_t v35 = a1;
            sub_1C3DB9A08();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v8, 1, 1, v9);
            uint64_t v31 = sub_1C3DB99D8();
            if (v29)
            {

              sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FC7E0);
              (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
              sub_1C3C2A448((uint64_t)&v35, (uint64_t *)&unk_1EB6FC770);
              uint64_t v15 = 0;
              goto LABEL_21;
            }
            uint64_t v15 = v31;

            sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FC7E0);
            (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
            goto LABEL_20;
          }
        }
      }
      if (objc_msgSend(v14, sel_isPasswordProtected))
      {
        *(void *)&long long v37 = v34;
        *((void *)&v37 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v25, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
        uint64_t v26 = a1;
      }
      else
      {
        a1 = 0;
        long long v36 = 0u;
        long long v37 = 0u;
      }
      a2 = v33;
      uint64_t v35 = a1;
      sub_1C3DB9A08();
      uint64_t v15 = MEMORY[0x1C877AED0](1, &v35);
    }
    else
    {

      if (objc_msgSend(v14, sel_isPasswordProtected))
      {
        *(void *)&long long v37 = v34;
        *((void *)&v37 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v27, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
        uint64_t v28 = a1;
      }
      else
      {
        a1 = 0;
        long long v36 = 0u;
        long long v37 = 0u;
      }
      uint64_t v35 = a1;
      sub_1C3DB9A08();
      uint64_t v15 = MEMORY[0x1C877AED0](1, &v35);
    }

LABEL_20:
    sub_1C3C2A448((uint64_t)&v35, (uint64_t *)&unk_1EB6FC770);
    goto LABEL_21;
  }

LABEL_4:
  uint64_t v15 = 0;
LABEL_21:
  *a2 = v15;
}

void sub_1C3CEDF80(uint64_t *a1@<X8>)
{
  sub_1C3CEDAC8(*(char **)(v1 + 16), a1);
}

id ICSystemPaperDocument.__allocating_init(paperAttachment:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ICSystemPaperDocument.init(paperAttachment:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t ICSystemPaperDocument.paper(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CEE130(a1, &qword_1EB6FBF88, &qword_1EB6FC308, &qword_1EB6FC300, (void (*)(uint64_t, char *))sub_1C3CEEBEC, a2);
}

uint64_t sub_1C3CEE0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CEE130(a1, &qword_1EB6FBF88, &qword_1EB6FC308, &qword_1EB6FC300, (void (*)(uint64_t, char *))sub_1C3CEEBEC, a2);
}

uint64_t sub_1C3CEE130@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X4>, void (*a5)(uint64_t, char *)@<X5>, uint64_t a6@<X8>)
{
  v44 = a4;
  uint64_t v45 = a5;
  uint64_t v49 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC030);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1C3DB88F8();
  uint64_t v50 = *(void *)(v53 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v53);
  v46 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v52 = (char *)v39 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  char v43 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unsigned int v21 = (char *)v39 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v39 - v22;
  id v24 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v26 = *(void *)(v25 - 8);
  id v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
  uint64_t v28 = v26 + 56;
  uint64_t v27 = v29;
  if (v24)
  {
    uint64_t v47 = v23;
    uint64_t v48 = a6;
    unint64_t v51 = a2;
    uint64_t v41 = v28;
    uint64_t v42 = v27;
    uint64_t v30 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v27)(v23, 1, 1, v25);
    MEMORY[0x1F4188790](v30);
    v39[-2] = v6;
    sub_1C3DBA838();
    uint64_t v31 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC028);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v31 - 1) + 48))(v12, 1, v31) == 1)
    {

      sub_1C3C2A448((uint64_t)v12, &qword_1EB6FC030);
      unint64_t v32 = v51;
      uint64_t v38 = (uint64_t)v47;
      uint64_t v37 = v48;
    }
    else
    {
      v39[0] = *(void *)&v12[v31[12]];
      char v34 = v12[v31[16]];
      v39[1] = *(void *)&v12[v31[20]];
      id v40 = v24;
      uint64_t v35 = v50;
      long long v36 = v52;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v52, v12, v53);
      if (v34)
      {
        __swift_instantiateConcreteTypeFromMangledName(v44);
        sub_1C3DB98B8();
        unint64_t v32 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v53);
        uint64_t v38 = (uint64_t)v47;
        sub_1C3C2A448((uint64_t)v47, v32);
        v42(v21, 0, 1, v25);
      }
      else
      {
        if (qword_1EB6FC138 != -1) {
          swift_once();
        }
        unsigned int v21 = v43;
        v45(v49, v36);
        unint64_t v32 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v53);
        uint64_t v38 = (uint64_t)v47;
        sub_1C3C2A448((uint64_t)v47, v32);
      }
      sub_1C3CB3BF8((uint64_t)v21, v38, v32);
      uint64_t v37 = v48;
    }
    return sub_1C3CB3BF8(v38, v37, v32);
  }
  else
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v27)(a6, 1, 1, v25);
  }
}

uint64_t ICSystemPaperDocument.paperDocument(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CEE130(a1, &qword_1EB6FC008, &qword_1EB6FC000, &qword_1EA387B30, (void (*)(uint64_t, char *))sub_1C3CEEE24, a2);
}

uint64_t sub_1C3CEE9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  id v4 = objc_msgSend(v3, sel_paperBundleModel);
  if (!v4) {
    goto LABEL_7;
  }
  objc_super v5 = v4;
  id v6 = objc_msgSend(v3, sel_note);
  if (!v6)
  {
    uint64_t v7 = v5;
    goto LABEL_6;
  }
  uint64_t v7 = v6;
  if (objc_msgSend(v6, sel_isPasswordProtectedAndLocked))
  {

LABEL_6:
LABEL_7:
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC028);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC028);
  uint64_t v20 = (uint64_t *)(a2 + v10[12]);
  uint64_t v21 = v10[16];
  uint64_t v22 = (uint64_t *)(a2 + v10[20]);
  id v11 = objc_msgSend(v5, sel_paperBundleURL);
  sub_1C3DB8898();

  id v12 = objc_msgSend(v7, sel_loggingDescription);
  uint64_t v13 = sub_1C3DB9C38();
  uint64_t v15 = v14;

  *uint64_t v20 = v13;
  v20[1] = v15;
  *(unsigned char *)(a2 + v21) = objc_msgSend(v3, sel_isPasswordProtected);
  id v16 = objc_msgSend(v3, sel_loggingDescription);
  uint64_t v17 = sub_1C3DB9C38();
  uint64_t v19 = v18;

  uint64_t *v22 = v17;
  v22[1] = v19;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v10 - 1) + 56))(a2, 0, 1, v10);
}

void sub_1C3CEEBEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v24 = a3;
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  id v12 = *(os_unfair_lock_s **)(v5 + 16);
  uint64_t v19 = a2;
  uint64_t v20 = v5;
  uint64_t v21 = a1;
  uint64_t v22 = v11;
  uint64_t v13 = (uint64_t *)&v12[4];
  uint64_t v14 = v12 + 8;
  os_unfair_lock_lock(v12 + 8);
  sub_1C3CFE064(v13);
  if (!v4)
  {
    os_unfair_lock_unlock(v14);
    uint64_t v15 = *(NSObject **)(v5 + 24);
    aBlock[4] = google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3D7A8B4;
    aBlock[3] = &block_descriptor_59_0;
    id v16 = _Block_copy(aBlock);
    swift_release();
    dispatch_sync(v15, v16);
    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      MEMORY[0x1F4188790](isEscapingClosureAtFileLocation);
      *(void *)&v18[-16] = a2;
      *(void *)&v18[-8] = v11;
      os_unfair_lock_lock(v14);
      sub_1C3CFE0A8(v13, v24);
      os_unfair_lock_unlock(v14);
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    __break(1u);
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

void sub_1C3CEEE24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v24 = a3;
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  id v12 = *(os_unfair_lock_s **)(v5 + 16);
  uint64_t v19 = a2;
  uint64_t v20 = v5;
  uint64_t v21 = a1;
  uint64_t v22 = v11;
  uint64_t v13 = (uint64_t *)&v12[4];
  uint64_t v14 = v12 + 8;
  os_unfair_lock_lock(v12 + 8);
  sub_1C3CFDF28(v13);
  if (!v4)
  {
    os_unfair_lock_unlock(v14);
    uint64_t v15 = *(NSObject **)(v5 + 24);
    aBlock[4] = google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3D7A8B4;
    aBlock[3] = &block_descriptor_49;
    id v16 = _Block_copy(aBlock);
    swift_release();
    dispatch_sync(v15, v16);
    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      MEMORY[0x1F4188790](isEscapingClosureAtFileLocation);
      *(void *)&v18[-16] = a2;
      *(void *)&v18[-8] = v11;
      os_unfair_lock_lock(v14);
      sub_1C3CFDF6C(v13, v24);
      os_unfair_lock_unlock(v14);
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
    __break(1u);
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

uint64_t sub_1C3CEF05C()
{
  type metadata accessor for ICSystemPaperDocument.PaperBundleReader();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1C3CEFE20();
  qword_1EB6FE8F8 = v0;
  return result;
}

uint64_t sub_1C3CEF098(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v47 = a8;
  uint64_t v46 = a7;
  uint64_t v45 = a6;
  uint64_t v59 = a2;
  uint64_t v57 = a5;
  uint64_t v49 = a3;
  uint64_t v58 = sub_1C3DB8B98();
  uint64_t v10 = *(void *)(v58 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v58);
  uint64_t v56 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (uint64_t)&v43 - v13;
  uint64_t v14 = sub_1C3DB9558();
  uint64_t v53 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C3DB95E8();
  uint64_t v51 = *(void *)(v16 - 8);
  uint64_t v52 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v48 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C3DB88F8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v23 = sub_1C3D03EA0(v59), (v24 & 1) != 0))
  {
    uint64_t v62 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
    if (!*(void *)(swift_bridgeObjectRetain() + 16)) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v62 = MEMORY[0x1E4FBC870];
    if (!*(void *)(MEMORY[0x1E4FBC870] + 16))
    {
LABEL_6:
      uint64_t v54 = v18;
      uint64_t v25 = v49;
      uint64_t v43 = *(void *)(v49 + 24);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v59, v54);
      uint64_t v26 = *(unsigned __int8 *)(v19 + 80);
      uint64_t v44 = v14;
      uint64_t v27 = (v26 + 24) & ~v26;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = a4;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v28 + v27, v21, v54);
      *(void *)(v28 + ((v20 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
      aBlock[4] = v46;
      aBlock[5] = v28;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C3C9FDCC;
      aBlock[3] = v47;
      uint64_t v47 = _Block_copy(aBlock);
      id v29 = a4;
      uint64_t v18 = v54;
      swift_retain();
      uint64_t v30 = v48;
      sub_1C3DB9598();
      uint64_t v60 = MEMORY[0x1E4FBC860];
      uint64_t v49 = sub_1C3CFE01C(&qword_1EB6FC2F8, 255, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
      sub_1C3C4BDB4((unint64_t *)&qword_1EB6FC320, &qword_1EB6FC318);
      uint64_t v31 = v50;
      sub_1C3DBAAA8();
      unint64_t v32 = v30;
      uint64_t v33 = v10;
      char v34 = v30;
      uint64_t v35 = v47;
      MEMORY[0x1C877BC60](0, v32, v31, v47);
      _Block_release(v35);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v44);
      long long v36 = v34;
      uint64_t v10 = v33;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
      swift_release();
    }
  }
  uint64_t v37 = v56;
  uint64_t v38 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v56, v57, v58);
  uint64_t v39 = v55;
  sub_1C3CD4410(v55, v37);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v59, v18);
  uint64_t v40 = v62;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1C3D05A30(v40, (uint64_t)v21, isUniquelyReferenced_nonNull_native);
  *a1 = aBlock[0];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_1C3CEF644()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1C3DB98B8();
  char v7 = 0;
  sub_1C3CB3BF8((uint64_t)v6, (uint64_t)v5, &qword_1EB6FC380);
  uint64_t v0 = sub_1C3CB3BF8((uint64_t)v5, (uint64_t)v6, &qword_1EB6FC380);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C3CFE324(v2);
  os_unfair_lock_unlock(v3);
  return sub_1C3C2A448((uint64_t)v6, &qword_1EB6FC380);
}

uint64_t sub_1C3CEF77C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B30);
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_1C3DB98B8();
  char v7 = 0;
  sub_1C3CB3BF8((uint64_t)v6, (uint64_t)v5, &qword_1EB6FC380);
  uint64_t v0 = sub_1C3CB3BF8((uint64_t)v5, (uint64_t)v6, &qword_1EB6FC380);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C3CFE000(v2);
  os_unfair_lock_unlock(v3);
  return sub_1C3C2A448((uint64_t)v6, &qword_1EB6FC380);
}

uint64_t sub_1C3CEF8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C3DB88F8();
  MEMORY[0x1F4188790](v5);
  char v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t))(v8 + 16))(v7, a2);
  sub_1C3C8E848(a3, (uint64_t)v11, &qword_1EB6FC380);
  return sub_1C3CECB6C((uint64_t)v11, (uint64_t)v7);
}

uint64_t sub_1C3CEF9B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v8 = sub_1C3DB88F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[1];
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1C3D03EA0(a2), (v17 & 1) != 0))
  {
    sub_1C3C8E848(*(void *)(v15 + 56) + 40 * v16, (uint64_t)v35, &qword_1EB6FC380);
  }
  else
  {
    memset(v35, 0, sizeof(v35));
    char v36 = -1;
  }
  uint64_t v18 = *a1;
  if (*(void *)(*a1 + 16))
  {
    unint64_t v19 = sub_1C3D03EA0(a2);
    if (v20)
    {
      *(void *)&v31[0] = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
      sub_1C3CFC284(a3, (uint64_t)v14);
      sub_1C3C2A448((uint64_t)v14, &qword_1EB6FC060);
      uint64_t v21 = *(void *)&v31[0];
      if (*(void *)(*(void *)&v31[0] + 16))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v33[0] = *a1;
        *a1 = 0x8000000000000000;
        sub_1C3D05A30(v21, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
        *a1 = *(void *)&v33[0];
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C3D04894(a2);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
        memset(v33, 0, sizeof(v33));
        char v34 = -1;
        sub_1C3CECB6C((uint64_t)v33, (uint64_t)v11);
      }
    }
  }
  sub_1C3C8E848((uint64_t)v35, (uint64_t)v31, &qword_1EB6FC388);
  if (v32 == 255)
  {
    sub_1C3C2A448((uint64_t)v35, &qword_1EB6FC388);
    sub_1C3C2A448((uint64_t)v31, &qword_1EB6FC388);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v29, 1, 1, v24);
  }
  else
  {
    sub_1C3CB3BF8((uint64_t)v31, (uint64_t)v33, &qword_1EB6FC380);
    sub_1C3C8E848((uint64_t)v33, (uint64_t)v31, &qword_1EB6FC380);
    if (v32)
    {
      uint64_t v37 = *(void *)&v31[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
      swift_willThrowTypedImpl();
      sub_1C3C2A448((uint64_t)v33, &qword_1EB6FC380);
      return sub_1C3C2A448((uint64_t)v35, &qword_1EB6FC388);
    }
    else
    {
      sub_1C3C2A5D8(v31, &v30);
      sub_1C3C2A448((uint64_t)v33, &qword_1EB6FC380);
      sub_1C3C2A448((uint64_t)v35, &qword_1EB6FC388);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v28);
      uint64_t v26 = v29;
      int v27 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v26, v27 ^ 1u, 1, v25);
    }
  }
}

uint64_t sub_1C3CEFDE0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C3CEFE20()
{
  v11[0] = sub_1C3DBA738();
  uint64_t v1 = *(void *)(v11[0] - 8);
  MEMORY[0x1F4188790](v11[0]);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C3DBA728();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C3DB95E8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  unint64_t v7 = sub_1C3C81D4C(MEMORY[0x1E4FBC860]);
  unint64_t v8 = sub_1C3C81F40(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC368);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 32) = 0;
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  *(void *)(v0 + 16) = v9;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC358);
  sub_1C3DB9598();
  v11[1] = v6;
  sub_1C3CFE01C(&qword_1EB6FC350, 255, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC330);
  sub_1C3C4BDB4(&qword_1EB6FC338, &qword_1EB6FC330);
  sub_1C3DBAAA8();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v11[0]);
  *(void *)(v0 + 24) = sub_1C3DBA768();
  return v0;
}

id ICSystemPaperDocument.archiveBundleForSync()()
{
  uint64_t v184 = *MEMORY[0x1E4F143B8];
  uint64_t v161 = sub_1C3DB8B98();
  v160 = *(void (***)(NSObject *, uint64_t))(v161 - 8);
  MEMORY[0x1F4188790](v161);
  v159 = ((char *)&v151 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = v3[8];
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  v158 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  v162 = (char *)&v151 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v166 = (char *)&v151 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v151 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  os_log_t v163 = (os_log_t)((char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v167 = ((char *)&v151 - v16);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v170 = (char *)&v151 - v18;
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v151 - v19;
  v169 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v3[7];
  v169((char *)&v151 - v19, 1, 1, v2);
  uint64_t v176 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void **)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  id v22 = objc_msgSend(v21, sel_ic_loggingIdentifier);
  uint64_t v172 = sub_1C3DB9C38();
  unint64_t v173 = v23;

  id v24 = objc_msgSend(v21, sel_paperBundleModel);
  if (!v24)
  {
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C3DB9048();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EB6FC748);
    unint64_t v40 = v173;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C3DB9028();
    os_log_type_t v42 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      aBlock = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_1C3C516D0(v172, v40, (uint64_t *)&aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v41, v42, "Cannot archive paper bundle %s because attachment model is missing", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v44, -1, -1);
      MEMORY[0x1C877E600](v43, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C3CF18B4();
    swift_allocError();
    *uint64_t v53 = 0;
    swift_willThrow();
    goto LABEL_26;
  }
  uint64_t v25 = v24;
  v171 = v20;
  uint64_t v155 = self;
  id v26 = [v155 defaultManager];
  id v168 = v25;
  id v27 = objc_msgSend(v25, sel_paperBundleURL);
  sub_1C3DB8898();

  sub_1C3DB88A8();
  uint64_t v157 = v3;
  uint64_t v28 = (void (*)(uint64_t, uint64_t))v3[1];
  uint64_t v154 = v11;
  uint64_t v165 = v2;
  uint64_t v29 = v2;
  long long v30 = (char *)(v3 + 1);
  uint64_t v156 = v28;
  v28((uint64_t)v11, v29);
  uint64_t v31 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LODWORD(v25) = objc_msgSend(v26, sel_fileExistsAtPath_, v31);

  if (!v25)
  {
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1C3DB9048();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EB6FC748);
    unint64_t v46 = v173;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C3DB9028();
    os_log_type_t v48 = sub_1C3DBA6A8();
    BOOL v49 = os_log_type_enabled(v47, v48);
    char v20 = v171;
    if (v49)
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      aBlock = v51;
      *(_DWORD *)uint64_t v50 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_1C3C516D0(v172, v46, (uint64_t *)&aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      uint64_t v52 = "Cannot archive paper bundle %s because the paper bundle does not exist";
LABEL_23:
      _os_log_impl(&dword_1C3A61000, v47, v48, v52, v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v51, -1, -1);
      MEMORY[0x1C877E600](v50, -1, -1);

LABEL_25:
      id v60 = v168;
      sub_1C3CF18B4();
      swift_allocError();
      *char v61 = 0;
      swift_willThrow();

LABEL_26:
      id v62 = 0;
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C3C2A448((uint64_t)v20, (uint64_t *)&unk_1EB6FC7E0);
      sub_1C3C4D710((uint64_t)v62);
      return v62;
    }
LABEL_24:

    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
  id v32 = objc_msgSend(v21, sel_cloudAccount);
  if (!v32)
  {
    uint64_t v36 = (uint64_t)v170;
    v169(v170, 1, 1, v165);
LABEL_19:
    sub_1C3C2A448(v36, (uint64_t *)&unk_1EB6FC7E0);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_1C3DB9048();
    __swift_project_value_buffer(v57, (uint64_t)qword_1EB6FC748);
    unint64_t v58 = v173;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C3DB9028();
    os_log_type_t v48 = sub_1C3DBA6A8();
    BOOL v59 = os_log_type_enabled(v47, v48);
    char v20 = v171;
    if (v59)
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      aBlock = v51;
      *(_DWORD *)uint64_t v50 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_1C3C516D0(v172, v58, (uint64_t *)&aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      uint64_t v52 = "Cannot archive paper bundle %s because we cannot determine an appropriate temporary directory";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v32, sel_temporaryDirectoryURL);

  uint64_t v35 = v165;
  uint64_t v36 = (uint64_t)v170;
  if (v34)
  {
    uint64_t v37 = (uint64_t)v167;
    sub_1C3DB8898();

    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 1;
    uint64_t v37 = (uint64_t)v167;
  }
  v169((char *)v37, v38, 1, v35);
  sub_1C3CB3BF8(v37, v36, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v54 = v157;
  uint64_t v56 = v157 + 6;
  isa = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v157[6].isa;
  if (isa(v36, 1, v35) == 1) {
    goto LABEL_19;
  }
  v167 = v56;
  uint64_t v64 = (uint64_t)&v54[4];
  uint64_t v65 = v54;
  uint64_t v66 = (uint64_t)v166;
  v169 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v54[4].isa;
  ((void (*)(char *, uint64_t, uint64_t))v169)(v166, v36, v35);
  id v67 = [v155 defaultManager];
  id v68 = v164;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)(v66, 1);
  if (v68)
  {

    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_1C3DB9048();
    __swift_project_value_buffer(v69, (uint64_t)qword_1EB6FC748);
    unint64_t v70 = v173;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1C3DB9028();
    os_log_type_t v72 = sub_1C3DBA6A8();
    BOOL v73 = os_log_type_enabled(v71, v72);
    char v20 = v171;
    if (v73)
    {
      v170 = v30;
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      aBlock = v75;
      *(_DWORD *)uint64_t v74 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_1C3C516D0(v172, v70, (uint64_t *)&aBlock);
      uint64_t v66 = (uint64_t)v166;
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v71, v72, "Cannot archive paper bundle %s because we cannot create a temporary directory", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v75, -1, -1);
      MEMORY[0x1C877E600](v74, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C3CF18B4();
    swift_allocError();
    *uint64_t v117 = 0;
    swift_willThrow();

    v156(v66, v165);
    id v62 = 0;
    goto LABEL_27;
  }
  uint64_t v152 = (unsigned int (*)(os_log_t, uint64_t, uint64_t))isa;

  aBlock = 0;
  unint64_t v179 = 0xE000000000000000;
  char v76 = v159;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v77 = sub_1C3DB8B28();
  unint64_t v79 = v78;
  v160[1](v76, v161);
  swift_bridgeObjectRelease();
  aBlock = v77;
  unint64_t v179 = v79;
  sub_1C3DB9D68();
  v159 = aBlock;
  uint64_t v155 = v179;
  id v164 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
  id v80 = objc_msgSend(v168, sel_paperBundleURL);
  uint64_t v81 = v154;
  sub_1C3DB8898();

  v160 = (void (**)(NSObject *, uint64_t))sub_1C3DB8848();
  uint64_t v82 = v165;
  v170 = v30;
  v156((uint64_t)v81, v165);
  v153 = (void (*)(char *, uint64_t, uint64_t))v65[2].isa;
  v153(v81, v66, v82);
  uint64_t v157 = v65 + 2;
  unint64_t v83 = (LOBYTE(v65[10].isa) + 16) & ~(unint64_t)LOBYTE(v65[10].isa);
  unint64_t v84 = (v4 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v85 = (v84 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v86 = (v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  v88 = v81;
  uint64_t v161 = v64;
  uint64_t v89 = (void (*)(char *, os_log_t, uint64_t))v169;
  ((void (*)(unint64_t, char *, uint64_t))v169)(v87 + v83, v88, v165);
  v90 = v89;
  v91 = (NSObject **)(v87 + v84);
  v92 = v155;
  char *v91 = v159;
  v91[1] = v92;
  uint64_t v93 = v172;
  *(void *)(v87 + v85) = v171;
  v94 = (uint64_t *)(v87 + v86);
  unint64_t v95 = v173;
  uint64_t *v94 = v93;
  v94[1] = v95;
  *(void *)(v87 + ((v86 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v176;
  uint64_t v96 = swift_allocObject();
  *(void *)(v96 + 16) = sub_1C3CFBE28;
  *(void *)(v96 + 24) = v87;
  v182 = sub_1C3CFBF00;
  uint64_t v183 = v96;
  aBlock = MEMORY[0x1E4F143A8];
  unint64_t v179 = 1107296256;
  v180 = sub_1C3C96F8C;
  v181 = &block_descriptor_9;
  os_log_t v97 = (os_log_t)_Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock = 0;
  uint64_t v98 = v160;
  objc_msgSend(v164, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v160, 0, &aBlock, v97);
  _Block_release(v97);

  v99 = aBlock;
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_56:
    swift_once();
    goto LABEL_37;
  }
  os_log_t v97 = v163;
  v160 = (void (**)(NSObject *, uint64_t))v99;
  if (!v99) {
    goto LABEL_42;
  }
  uint64_t v101 = qword_1EB6FC768;
  uint64_t isEscapingClosureAtFileLocation = v99;
  if (v101 != -1) {
    goto LABEL_56;
  }
LABEL_37:
  uint64_t v102 = sub_1C3DB9048();
  __swift_project_value_buffer(v102, (uint64_t)qword_1EB6FC748);
  unint64_t v103 = v173;
  swift_bridgeObjectRetain_n();
  id v104 = (id)isEscapingClosureAtFileLocation;
  uint64_t v105 = sub_1C3DB9028();
  os_log_type_t v106 = sub_1C3DBA6A8();
  v159 = v105;
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = swift_slowAlloc();
    uint64_t v155 = swift_slowAlloc();
    aBlock = v155;
    *(_DWORD *)uint64_t v107 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v177 = sub_1C3C516D0(v172, v103, (uint64_t *)&aBlock);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v107 + 12) = 2080;
    os_log_type_t v108 = v106;
    id v109 = objc_msgSend(v104, sel_localizedDescription, v107 + 14);
    uint64_t v110 = sub_1C3DB9C38();
    unint64_t v112 = v111;

    uint64_t v113 = v110;
    v99 = v160;
    uint64_t v177 = sub_1C3C516D0(v113, v112, (uint64_t *)&aBlock);
    sub_1C3DBA9A8();

    swift_bridgeObjectRelease();
    char v114 = v159;
    _os_log_impl(&dword_1C3A61000, v159, v108, "Failed to archive paper bundle %s to disk for sync due to file coordination error: %s", (uint8_t *)v107, 0x16u);
    uint64_t v115 = v155;
    swift_arrayDestroy();
    v90 = (void (*)(char *, os_log_t, uint64_t))v169;
    MEMORY[0x1C877E600](v115, -1, -1);
    uint64_t v116 = v107;
    os_log_t v97 = v163;
    MEMORY[0x1C877E600](v116, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_42:
  sub_1C3C8E848((uint64_t)v171, (uint64_t)v97, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v118 = v165;
  if (v152(v97, 1, v165) == 1)
  {
    sub_1C3C2A448((uint64_t)v97, (uint64_t *)&unk_1EB6FC7E0);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v119 = sub_1C3DB9048();
    __swift_project_value_buffer(v119, (uint64_t)qword_1EB6FC748);
    unint64_t v120 = v173;
    swift_bridgeObjectRetain();
    v121 = sub_1C3DB9028();
    os_log_type_t v122 = sub_1C3DBA6A8();
    BOOL v123 = os_log_type_enabled(v121, v122);
    char v20 = v171;
    if (v123)
    {
      v124 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      aBlock = v125;
      *(_DWORD *)v124 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v177 = sub_1C3C516D0(v172, v120, (uint64_t *)&aBlock);
      v99 = v160;
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v121, v122, "No database archive was produced when archiving a paper bundle %s for sync", v124, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v125, -1, -1);
      MEMORY[0x1C877E600](v124, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v142 = v168;
    v143 = v166;
    sub_1C3CF18B4();
    swift_allocError();
    void *v144 = 0;
    swift_willThrow();

    v156((uint64_t)v143, v165);
    id v62 = sub_1C3CFBE28;
    goto LABEL_27;
  }
  uint64_t v126 = v162;
  v90(v162, v97, v118);
  if (qword_1EB6FC768 != -1) {
    swift_once();
  }
  uint64_t v127 = sub_1C3DB9048();
  __swift_project_value_buffer(v127, (uint64_t)qword_1EB6FC748);
  uint64_t v128 = v158;
  v153(v158, (uint64_t)v126, v118);
  unint64_t v129 = v173;
  swift_bridgeObjectRetain();
  uint64_t v130 = sub_1C3DB9028();
  os_log_type_t v131 = sub_1C3DBA698();
  int v132 = v131;
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v133 = swift_slowAlloc();
    LODWORD(v169) = v132;
    uint64_t v134 = v133;
    v167 = swift_slowAlloc();
    aBlock = v167;
    *(_DWORD *)uint64_t v134 = 136315650;
    os_log_t v163 = v130;
    swift_bridgeObjectRetain();
    uint64_t v177 = sub_1C3C516D0(v172, v129, (uint64_t *)&aBlock);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v134 + 12) = 2080;
    sub_1C3CFE01C((unint64_t *)&qword_1EB6FC740, 255, MEMORY[0x1E4F276F0]);
    uint64_t v135 = sub_1C3DBB248();
    uint64_t v177 = sub_1C3C516D0(v135, v136, (uint64_t *)&aBlock);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    v156((uint64_t)v128, v118);
    *(_WORD *)(v134 + 22) = 2080;
    swift_beginAccess();
    uint64_t v137 = swift_bridgeObjectRetain();
    uint64_t v138 = MEMORY[0x1C877B530](v137, v118);
    unint64_t v140 = v139;
    swift_bridgeObjectRelease();
    uint64_t v174 = sub_1C3C516D0(v138, v140, (uint64_t *)&aBlock);
    sub_1C3DBA9A8();
    uint64_t v126 = v162;
    swift_bridgeObjectRelease();
    uint64_t v130 = v163;
    _os_log_impl(&dword_1C3A61000, v163, (os_log_type_t)v169, "Successfully archived paper bundle %s:\nDatabase: %s\nAssets: %s", (uint8_t *)v134, 0x20u);
    uint64_t v141 = v167;
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v141, -1, -1);
    MEMORY[0x1C877E600](v134, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v156((uint64_t)v128, v118);
  }

  uint64_t v145 = v154;
  v146 = (void (*)(char *, char *, uint64_t))v153;
  v153(v154, (uint64_t)v126, v118);
  swift_beginAccess();
  uint64_t v147 = v176;
  uint64_t v148 = (objc_class *)type metadata accessor for SystemPaperSyncArchive();
  v149 = (char *)objc_allocWithZone(v148);
  v146(&v149[OBJC_IVAR___ICSystemPaperSyncArchive_databaseArchive], v145, v118);
  *(void *)&v149[OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives] = v147;
  v175.receiver = v149;
  v175.super_class = v148;
  swift_bridgeObjectRetain();
  id v62 = objc_msgSendSuper2(&v175, sel_init);
  uint64_t v150 = (void (*)(char *, uint64_t))v156;
  v156((uint64_t)v145, v118);

  v150(v162, v118);
  v150(v166, v118);

  swift_bridgeObjectRelease();
  sub_1C3C2A448((uint64_t)v171, (uint64_t *)&unk_1EB6FC7E0);
  swift_release();
  return v62;
}

unint64_t sub_1C3CF18B4()
{
  unint64_t result = qword_1EA3879D8;
  if (!qword_1EA3879D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3879D8);
  }
  return result;
}

void sub_1C3CF1908(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v70 = a8;
  uint64_t v71 = a6;
  unint64_t v75 = a7;
  uint64_t v65 = a5;
  uint64_t v76 = a2;
  v79[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C3DB88F8();
  uint64_t v14 = *(void *)(v72 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v72);
  id v67 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  id v22 = (char *)&v62 - v21;
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)&v62 - v23;
  uint64_t v66 = a1;
  sub_1C3DB8858();
  sub_1C3DB8828();
  uint64_t v68 = (uint64_t)a3;
  uint64_t v69 = (uint64_t)a4;
  v79[0] = a3;
  v79[1] = a4;
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB8858();
  swift_bridgeObjectRelease();
  sub_1C3DB8868();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v64 = v19;
  id v26 = v19;
  uint64_t v27 = v72;
  uint64_t v77 = v25;
  v25(v26, v72);
  BOOL v73 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v73(v13, v24, v27);
  v63 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v63(v13, 0, 1, v27);
  uint64_t v74 = v22;
  uint64_t v28 = (void *)sub_1C3DB8848();
  uint64_t v29 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v27) != 1)
  {
    uint64_t v29 = (void *)sub_1C3DB8848();
    v77(v13, v27);
  }
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F836F0]), sel_initWithDestinationURL_baseURL_, v28, v29);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC470);
  unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C3DD3D30;
  v73((char *)(v32 + v31), v24, v27);
  uint64_t v33 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  v79[0] = 0;
  LODWORD(v31) = objc_msgSend(v30, sel_writeURLs_error_, v33, v79);

  if (v31)
  {
    id v34 = v79[0];
    uint64_t v35 = v77;
    v77(v24, v27);

    uint64_t v36 = v65;
    sub_1C3C2A448(v65, (uint64_t *)&unk_1EB6FC7E0);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v36, v74, v27);
    v63((char *)v36, 0, 1, v27);
    uint64_t v37 = v64;
    sub_1C3DB8858();
    uint64_t v38 = v67;
    sub_1C3DB8868();
    v35(v37, v27);
    id v39 = objc_msgSend(self, sel_defaultManager);
    unint64_t v40 = (void *)sub_1C3DBA668();

    if (!v40
      || (id v41 = objc_msgSend(v40, sel_allObjects),
          uint64_t v42 = sub_1C3DBA018(),
          v41,
          uint64_t v43 = sub_1C3CF2294(v42),
          uint64_t v44 = swift_bridgeObjectRelease(),
          !v43))
    {
      uint64_t v44 = swift_bridgeObjectRelease();
      uint64_t v43 = MEMORY[0x1E4FBC860];
    }
    MEMORY[0x1F4188790](v44);
    uint64_t v45 = v68;
    *(&v62 - 6) = v76;
    *(&v62 - 5) = v45;
    uint64_t v46 = v71;
    *(&v62 - 4) = v69;
    *(&v62 - 3) = v46;
    *(&v62 - 2) = v47;
    unint64_t v48 = sub_1C3CEC6F4((void (*)(char *))sub_1C3CFDEE8, (uint64_t)(&v62 - 8), v43);
    swift_bridgeObjectRelease();
    sub_1C3D79CC0(v48);

    v77(v38, v27);
  }
  else
  {
    id v49 = v79[0];
    uint64_t v50 = (void *)sub_1C3DB8798();

    swift_willThrow();
    uint64_t v51 = v77;
    v77(v74, v27);
    v51(v24, v27);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1C3DB9048();
    __swift_project_value_buffer(v52, (uint64_t)qword_1EB6FC748);
    unint64_t v53 = v75;
    swift_bridgeObjectRetain();
    id v54 = v50;
    swift_bridgeObjectRetain();
    id v55 = v50;
    uint64_t v56 = sub_1C3DB9028();
    os_log_type_t v57 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      BOOL v59 = (void *)swift_slowAlloc();
      v79[0] = v59;
      *(_DWORD *)uint64_t v58 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1C3C516D0(v71, v53, (uint64_t *)v79);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v58 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v60 = sub_1C3DBB568();
      uint64_t v78 = sub_1C3C516D0(v60, v61, (uint64_t *)v79);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C3A61000, v56, v57, "Failed archiving the database directory for paper bundle %s: %s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v59, -1, -1);
      MEMORY[0x1C877E600](v58, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t static ICSystemPaperDocument.databaseDirectory(at:)()
{
  return sub_1C3DB8858();
}

uint64_t static ICSystemPaperDocument.assetsDirectory(at:)()
{
  uint64_t v0 = sub_1C3DB88F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8858();
  sub_1C3DB8868();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C3CF2294(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (char *)&v24 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C3C9D8BC(0, v11, 0);
  if (!v11) {
    return v30;
  }
  uint64_t v12 = a1 + 32;
  uint64_t v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v26 = v6;
  uint64_t v27 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v25 = v9;
  while (1)
  {
    sub_1C3C4BC70(v12, (uint64_t)v29);
    int v15 = swift_dynamicCast();
    uint64_t v16 = *v13;
    if (!v15) {
      break;
    }
    v16(v4, 0, 1, v5);
    uint64_t v17 = *v14;
    uint64_t v18 = v28;
    (*v14)(v28, v4, v5);
    v17(v9, v18, v5);
    uint64_t v19 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C3C9D8BC(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v19 = v30;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_1C3C9D8BC(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v30;
    }
    *(void *)(v19 + 16) = v21 + 1;
    unint64_t v22 = v19
        + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + *(void *)(v26 + 72) * v21;
    uint64_t v9 = v25;
    v17((char *)v22, v25, v5);
    uint64_t v30 = v19;
    v12 += 32;
    if (!--v11) {
      return v19;
    }
  }
  v16(v4, 1, 1, v5);
  swift_release();
  sub_1C3C2A448((uint64_t)v4, (uint64_t *)&unk_1EB6FC7E0);
  return 0;
}

uint64_t sub_1C3CF2574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v45 = a6;
  uint64_t v44 = a5;
  unint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = a7;
  v52[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v9 - 8);
  int64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C3DB88F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v44 - v17;
  sub_1C3DB8828();
  v52[0] = v48;
  v52[1] = a4;
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB8858();
  swift_bridgeObjectRelease();
  sub_1C3DB8868();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v13 + 8);
  v46(v16, v12);
  uint64_t v47 = a1;
  sub_1C3DB8888();
  unint64_t v48 = *(void **)(v13 + 56);
  uint64_t v49 = v13 + 56;
  ((void (*)(char *, void, uint64_t, uint64_t))v48)(v11, 0, 1, v12);
  uint64_t v19 = (void *)sub_1C3DB8848();
  unint64_t v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    unint64_t v20 = (void *)sub_1C3DB8848();
    v46(v11, v12);
  }
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F836F0]), sel_initWithDestinationURL_baseURL_, v19, v20);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC470);
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v23 + v22, v47, v12);
  uint64_t v24 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  v52[0] = 0;
  uint64_t v25 = v12;
  unsigned int v26 = objc_msgSend(v21, sel_writeURLs_error_, v24, v52);

  if (v26)
  {
    id v27 = v52[0];

    uint64_t v28 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v50, v18, v25);
    uint64_t v29 = 0;
    uint64_t v30 = v25;
  }
  else
  {
    id v31 = v52[0];
    uint64_t v32 = (void *)sub_1C3DB8798();

    swift_willThrow();
    v46(v18, v25);
    uint64_t v30 = v25;
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C3DB9048();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EB6FC748);
    unint64_t v34 = v45;
    swift_bridgeObjectRetain();
    id v35 = v32;
    swift_bridgeObjectRetain();
    id v36 = v32;
    uint64_t v37 = sub_1C3DB9028();
    os_log_type_t v38 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      unint64_t v40 = (void *)swift_slowAlloc();
      v52[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C3C516D0(v44, v34, (uint64_t *)v52);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v41 = sub_1C3DBB568();
      uint64_t v51 = sub_1C3C516D0(v41, v42, (uint64_t *)v52);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C3A61000, v37, v38, "Failed archiving a paper bundle %s asset: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v40, -1, -1);
      MEMORY[0x1C877E600](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = 1;
    uint64_t v28 = v50;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v48)(v28, v29, 1, v30);
}

void ICSystemPaperDocument.writeNewVersionFromSyncArchive(_:)(void *a1)
{
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  v181 = (void (*)(char *, uint64_t))sub_1C3DB8B98();
  v180 = (void (**)(void, void))*((void *)v181 - 1);
  MEMORY[0x1F4188790](v181);
  unint64_t v179 = (char *)&v166 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  v182 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v186 = (char *)&v166 - v8;
  MEMORY[0x1F4188790](v7);
  v191 = (void (*)(void))((char *)&v166 - v9);
  uint64_t v10 = sub_1C3DB88F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  objc_super v175 = (char *)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v183 = (char *)&v166 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v166 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  v178 = (char *)&v166 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v166 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  v190 = (char *)&v166 - v25;
  uint64_t v174 = v26;
  MEMORY[0x1F4188790](v24);
  v188 = (char *)&v166 - v27;
  v193 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                   + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment);
  id v28 = objc_msgSend(v193, sel_ic_loggingIdentifier);
  uint64_t v29 = sub_1C3DB9C38();
  unint64_t v31 = v30;

  if (qword_1EB6FC768 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1C3DB9048();
  uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EB6FC748);
  swift_bridgeObjectRetain_n();
  id v34 = a1;
  v192 = (void *)v33;
  id v35 = sub_1C3DB9028();
  os_log_type_t v36 = sub_1C3DBA698();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v184 = v23;
  uint64_t v187 = v29;
  uint64_t v176 = v18;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v185 = v10;
    uint64_t v39 = v38;
    uint64_t v172 = (void *)swift_slowAlloc();
    unint64_t v173 = (void *)swift_slowAlloc();
    aBlock[0] = v173;
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v189 = v11;
    swift_bridgeObjectRetain();
    uint64_t v194 = sub_1C3C516D0(v29, v31, (uint64_t *)aBlock);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2112;
    uint64_t v194 = (uint64_t)v34;
    id v40 = v34;
    uint64_t v11 = v189;
    sub_1C3DBA9A8();
    uint64_t v41 = v172;
    *uint64_t v172 = v34;

    _os_log_impl(&dword_1C3A61000, v35, v36, "Writing new version of paper bundle %s from archive: %@", (uint8_t *)v39, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v41, -1, -1);
    unint64_t v42 = v173;
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v42, -1, -1);
    uint64_t v43 = v39;
    uint64_t v10 = v185;
    MEMORY[0x1C877E600](v43, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v44 = objc_msgSend(v193, sel_paperBundleURL);
  if (!v44)
  {
    uint64_t v47 = (uint64_t)v191;
    (*(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v11 + 56))(v191, 1, 1, v10);
    goto LABEL_14;
  }
  unint64_t v45 = v44;
  uint64_t v172 = v34;
  sub_1C3DB8898();

  uint64_t v46 = *(void (**)(void))(v11 + 32);
  uint64_t v47 = (uint64_t)v191;
  v46();
  unint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v48(v47, 0, 1, v10);
  unint64_t v173 = *(void **)(v11 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v47, 1, v10) == 1)
  {
LABEL_14:
    sub_1C3C2A448(v47, (uint64_t *)&unk_1EB6FC7E0);
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1C3DB9028();
    os_log_type_t v69 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = (void *)swift_slowAlloc();
      aBlock[0] = v71;
      *(_DWORD *)uint64_t v70 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_1C3C516D0(v187, v31, (uint64_t *)aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v68, v69, "Cannot write new paper bundle %s version because attachment paper bundle url is nil", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v71, -1, -1);
      MEMORY[0x1C877E600](v70, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C3CF18B4();
    swift_allocError();
    *uint64_t v72 = 0;
    swift_willThrow();
    return;
  }
  uint64_t v189 = v11;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v188, v47, v10);
  id v49 = objc_msgSend(v193, sel_cloudAccount);
  if (!v49)
  {
    uint64_t v58 = (uint64_t)v186;
    v48((uint64_t)v186, 1, 1, v10);
    goto LABEL_19;
  }
  uint64_t v50 = v49;
  uint64_t v171 = v11 + 32;
  v191 = v46;
  id v51 = objc_msgSend(v49, sel_systemPaperTemporaryDirectoryURL);

  v193 = v48;
  uint64_t v52 = v190;
  sub_1C3DB8898();

  unint64_t v53 = v179;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  ((void (**)(char *, void))v180)[1](v53, v181);
  id v54 = v178;
  sub_1C3DB8858();
  swift_bridgeObjectRelease();
  id v55 = *(void (**)(char *, uint64_t))(v189 + 8);
  uint64_t v56 = v52;
  uint64_t v57 = v189 + 8;
  v55(v56, v10);
  uint64_t v58 = (uint64_t)v186;
  sub_1C3DB8868();
  v55(v54, v10);
  v193(v58, 0, 1, v10);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v58, 1, v10) == 1)
  {
LABEL_19:
    sub_1C3C2A448(v58, (uint64_t *)&unk_1EB6FC7E0);
    swift_bridgeObjectRetain();
    BOOL v73 = sub_1C3DB9028();
    os_log_type_t v74 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v73, v74))
    {
      unint64_t v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = (void *)swift_slowAlloc();
      aBlock[0] = v76;
      *(_DWORD *)unint64_t v75 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_1C3C516D0(v187, v31, (uint64_t *)aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v73, v74, "Cannot write new paper bundle %s version because we cannot determine an appropriate temporary bundle", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v76, -1, -1);
      MEMORY[0x1C877E600](v75, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C3CF18B4();
    swift_allocError();
    *uint64_t v77 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v189 + 8))(v188, v10);
    return;
  }
  v181 = v55;
  uint64_t v59 = (uint64_t)v184;
  ((void (*)(char *, uint64_t, uint64_t))v191)(v184, v58, v10);
  uint64_t v60 = self;
  id v61 = objc_msgSend(v60, sel_defaultManager);
  uint64_t v62 = v177;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)(v59, 1);
  v180 = v62;
  if (v62)
  {

    swift_bridgeObjectRetain();
    v63 = sub_1C3DB9028();
    os_log_type_t v64 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      unint64_t v66 = v31;
      id v67 = (void *)swift_slowAlloc();
      aBlock[0] = v67;
      *(_DWORD *)uint64_t v65 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_1C3C516D0(v187, v66, (uint64_t *)aBlock);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C3A61000, v63, v64, "Cannot write new paper bundle %s version because we cannot create a temporary bundle", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v67, -1, -1);
      MEMORY[0x1C877E600](v65, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C3CF18B4();
    swift_allocError();
    void *v88 = 0;
    swift_willThrow();

    uint64_t v89 = v181;
    v181(v184, v10);
    v89(v188, v10);
  }
  else
  {
    id v169 = v60;
    unint64_t v179 = (char *)v31;

    sub_1C3DB8858();
    id v78 = objc_allocWithZone(MEMORY[0x1E4F836E8]);
    unint64_t v79 = (void *)sub_1C3DB8848();
    id v80 = (void *)sub_1C3DB8848();
    id v81 = objc_msgSend(v78, sel_initWithSourceURL_destinationURL_, v79, v80);

    objc_msgSend(v81, sel_setOverwrite_, 1);
    objc_msgSend(v81, sel_setSkipsInvisibleHeaders_, 1);
    objc_msgSend(v81, sel_setWritesTemporaryFilesInsideDestination_, 0);
    aBlock[0] = 0;
    if (objc_msgSend(v81, sel_unarchiveResultURLs_error_, 0, aBlock))
    {
      id v82 = aBlock[0];
      id v83 = objc_msgSend(v169, sel_defaultManager);
      unint64_t v84 = (void *)sub_1C3DB8848();
      aBlock[0] = 0;
      unsigned int v85 = objc_msgSend(v83, sel_removeItemAtURL_error_, v84, aBlock);

      if (v85)
      {
        id v86 = aBlock[0];
        uint64_t v87 = v181;
        v181(v176, v10);
      }
      else
      {
        id v103 = aBlock[0];
        id v104 = (void *)sub_1C3DB8798();

        swift_willThrow();
        uint64_t v87 = v181;
        v181(v176, v10);
        v180 = 0;
      }
      uint64_t v105 = v57;
      os_log_type_t v106 = v175;
      uint64_t v107 = v190;
      sub_1C3DB8858();
      sub_1C3DB8868();
      uint64_t v170 = v105;
      v87(v107, v10);
      uint64_t v108 = *(void *)((char *)v172 + OBJC_IVAR___ICSystemPaperSyncArchive_assetArchives);
      id v109 = *(char **)(v108 + 16);
      unint64_t v110 = (unint64_t)v179;
      uint64_t v185 = v10;
      uint64_t v166 = v108;
      if (v109)
      {
        uint64_t v177 = *(void (***)(void, void))(v189 + 16);
        uint64_t v111 = v108 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
        v178 = (char *)(v189 + 16);
        uint64_t v176 = *(char **)(v189 + 72);
        swift_bridgeObjectRetain();
        *(void *)&long long v112 = 136315394;
        long long v168 = v112;
        uint64_t v167 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v113 = v182;
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v177)(v113, v111, v10);
          v193((uint64_t)v113, 0, 1, v10);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v173)(v113, 1, v10) == 1) {
            break;
          }
          v186 = v109;
          ((void (*)(char *, char *, uint64_t))v191)(v106, v113, v10);
          id v115 = objc_allocWithZone(MEMORY[0x1E4F836E8]);
          uint64_t v116 = (void *)sub_1C3DB8848();
          uint64_t v117 = (void *)sub_1C3DB8848();
          id v118 = objc_msgSend(v115, sel_initWithSourceURL_destinationURL_, v116, v117, v166, v167);

          objc_msgSend(v118, sel_setOverwrite_, 1);
          objc_msgSend(v118, sel_setSkipsInvisibleHeaders_, 1);
          objc_msgSend(v118, sel_setWritesTemporaryFilesInsideDestination_, 0);
          aBlock[0] = 0;
          if (objc_msgSend(v118, sel_unarchiveResultURLs_error_, 0, aBlock))
          {
            id v119 = aBlock[0];
            id v120 = objc_msgSend(v169, sel_defaultManager);
            v121 = (void *)sub_1C3DB8848();
            aBlock[0] = 0;
            unsigned int v122 = objc_msgSend(v120, sel_removeItemAtURL_error_, v121, aBlock);

            if (v122)
            {
              id v114 = aBlock[0];
              uint64_t v10 = v185;
              v181(v106, v185);
            }
            else
            {
              id v123 = aBlock[0];
              v124 = (void *)sub_1C3DB8798();

              swift_willThrow();
              uint64_t v10 = v185;
              v181(v106, v185);
              v180 = 0;
            }
            unint64_t v110 = (unint64_t)v179;
          }
          else
          {
            id v125 = aBlock[0];
            uint64_t v126 = (void *)sub_1C3DB8798();

            swift_willThrow();
            v180 = 0;

            unint64_t v110 = (unint64_t)v179;
            swift_bridgeObjectRetain();
            id v127 = v126;
            swift_bridgeObjectRetain();
            id v128 = v126;
            unint64_t v129 = sub_1C3DB9028();
            os_log_type_t v130 = sub_1C3DBA6A8();
            if (os_log_type_enabled(v129, v130))
            {
              uint64_t v131 = swift_slowAlloc();
              uint64_t v172 = (void *)swift_slowAlloc();
              aBlock[0] = v172;
              *(_DWORD *)uint64_t v131 = v168;
              swift_bridgeObjectRetain();
              *(void *)(v131 + 4) = sub_1C3C516D0(v187, v110, (uint64_t *)aBlock);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v131 + 12) = 2080;
              swift_getErrorValue();
              uint64_t v132 = sub_1C3DBB568();
              *(void *)(v131 + 14) = sub_1C3C516D0(v132, v133, (uint64_t *)aBlock);
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_1C3A61000, v129, v130, "Failed to write new paper bundle %s asset version: %s", (uint8_t *)v131, 0x16u);
              uint64_t v134 = v172;
              swift_arrayDestroy();
              MEMORY[0x1C877E600](v134, -1, -1);
              uint64_t v135 = v131;
              os_log_type_t v106 = v175;
              MEMORY[0x1C877E600](v135, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }

            uint64_t v10 = v185;
            v181(v106, v185);
          }
          v111 += (uint64_t)v176;
          id v109 = v186 - 1;
          uint64_t v113 = v182;
          if (v186 == (char *)1) {
            goto LABEL_47;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v113 = v182;
LABEL_47:
        v193((uint64_t)v113, 1, 1, v10);
      }
      swift_bridgeObjectRelease();
      id v138 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
      uint64_t v139 = sub_1C3DB8848();
      unint64_t v140 = v190;
      uint64_t v141 = v189 + 16;
      (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v190, v184, v10);
      unint64_t v142 = (*(unsigned __int8 *)(v141 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 64);
      unint64_t v143 = (v174 + v142 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v144 = swift_allocObject();
      ((void (*)(unint64_t, char *, uint64_t))v191)(v144 + v142, v140, v10);
      uint64_t v145 = v138;
      v146 = (void *)(v144 + v143);
      uint64_t v147 = v187;
      void *v146 = v187;
      v146[1] = v110;
      uint64_t v148 = (void *)swift_allocObject();
      v148[2] = sub_1C3CFBFB0;
      v148[3] = v144;
      aBlock[4] = sub_1C3CFE368;
      aBlock[5] = v148;
      aBlock[0] = (id)MEMORY[0x1E4F143A8];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_1C3C96F8C;
      aBlock[3] = &block_descriptor_13;
      v149 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      objc_msgSend(v145, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v139, 0, aBlock, v149);
      _Block_release(v149);

      uint64_t v150 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))aBlock[0];
      LOBYTE(v139) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v139) {
        __break(1u);
      }
      if (v150)
      {
        uint64_t v151 = v150;
        unint64_t v152 = (unint64_t)v179;
        swift_bridgeObjectRetain();
        id v153 = v151;
        uint64_t v154 = sub_1C3DB9028();
        os_log_type_t v155 = sub_1C3DBA6A8();
        int v156 = v155;
        if (os_log_type_enabled(v154, v155))
        {
          uint64_t v157 = swift_slowAlloc();
          v192 = (void *)swift_slowAlloc();
          aBlock[0] = v192;
          *(_DWORD *)uint64_t v157 = 136315394;
          LODWORD(v191) = v156;
          swift_bridgeObjectRetain();
          uint64_t v194 = sub_1C3C516D0(v147, v152, (uint64_t *)aBlock);
          v193 = v150;
          sub_1C3DBA9A8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v157 + 12) = 2080;
          v190 = (char *)(v157 + 14);
          id v158 = objc_msgSend(v153, sel_localizedDescription);
          v159 = v154;
          uint64_t v160 = sub_1C3DB9C38();
          unint64_t v162 = v161;

          uint64_t v194 = sub_1C3C516D0(v160, v162, (uint64_t *)aBlock);
          uint64_t v150 = v193;
          sub_1C3DBA9A8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C3A61000, v159, (os_log_type_t)v191, "Failed to archive paper bundle %s to disk for sync due to file coordination error: %s", (uint8_t *)v157, 0x16u);
          os_log_t v163 = v192;
          swift_arrayDestroy();
          MEMORY[0x1C877E600](v163, -1, -1);
          MEMORY[0x1C877E600](v157, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      uint64_t v164 = v185;
      uint64_t v165 = v181;
      v181(v183, v185);
      v165(v184, v164);
      v165(v188, v164);
      swift_release();
    }
    else
    {
      id v90 = aBlock[0];
      v91 = (void *)sub_1C3DB8798();

      swift_willThrow();
      v181(v176, v10);
      id v92 = v91;
      unint64_t v93 = (unint64_t)v179;
      swift_bridgeObjectRetain();
      id v94 = v91;
      unint64_t v95 = sub_1C3DB9028();
      os_log_type_t v96 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v98 = (void *)swift_slowAlloc();
        uint64_t v185 = v10;
        v99 = v98;
        aBlock[0] = v98;
        *(_DWORD *)uint64_t v97 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v194 = sub_1C3C516D0(v187, v93, (uint64_t *)aBlock);
        sub_1C3DBA9A8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v97 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v100 = sub_1C3DBB568();
        uint64_t v194 = sub_1C3C516D0(v100, v101, (uint64_t *)aBlock);
        sub_1C3DBA9A8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C3A61000, v95, v96, "Cannot write new paper bundle %s version we failed to extract the database: %s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        uint64_t v102 = v99;
        uint64_t v10 = v185;
        MEMORY[0x1C877E600](v102, -1, -1);
        MEMORY[0x1C877E600](v97, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      sub_1C3CF18B4();
      swift_allocError();
      *unint64_t v136 = 0;
      swift_willThrow();

      uint64_t v137 = v181;
      v181(v184, v10);
      v137(v188, v10);
    }
  }
}

void sub_1C3CF4760(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v67 = a3;
  uint64_t v70 = 0;
  id v71 = a2;
  v73[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  os_log_type_t v69 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_defaultManager);
  sub_1C3DB88A8();
  uint64_t v14 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  unsigned int v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  unint64_t v68 = a4;
  if (!v15)
  {
    uint64_t v21 = (void (**)(char *, uint64_t))(v7 + 8);
LABEL_8:
    uint64_t v25 = *v21;
    (*v21)(v11, v6);
    goto LABEL_9;
  }
  uint64_t v66 = a1;
  id v16 = objc_msgSend(v12, sel_defaultManager);
  uint64_t v17 = (void *)sub_1C3DB8848();
  type metadata accessor for URLResourceKey(0);
  uint64_t v18 = (void *)sub_1C3DB9FF8();
  v73[0] = 0;
  id v19 = objc_msgSend(v16, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v17, v18, 0, v73);

  id v20 = v73[0];
  uint64_t v21 = (void (**)(char *, uint64_t))(v7 + 8);
  if (!v19)
  {
    id v31 = v73[0];
    uint64_t v32 = (void *)sub_1C3DB8798();

    swift_willThrow();
    uint64_t v70 = 0;
    goto LABEL_8;
  }
  uint64_t v22 = sub_1C3DBA018();
  id v23 = v20;

  uint64_t v24 = *(void *)(v22 + 16);
  swift_bridgeObjectRelease();
  uint64_t v25 = *v21;
  (*v21)(v11, v6);
  if (v24)
  {
    uint64_t v26 = self;
    uint64_t v27 = (void *)sub_1C3DB8848();
    v73[0] = 0;
    unsigned int v28 = objc_msgSend(v26, sel_removeOtherVersionsOfItemAtURL_error_, v27, v73);

    unint64_t v29 = v68;
    if (v28)
    {
      id v30 = v73[0];
    }
    else
    {
      id v60 = v73[0];
      id v61 = (void *)sub_1C3DB8798();

      swift_willThrow();
    }
    uint64_t v62 = (void *)sub_1C3DB8848();
    v63 = (void *)sub_1C3DB8848();
    v73[0] = 0;
    id v64 = objc_msgSend(v26, sel_ic_addVersionOfItemAtURL_withContentsOfURL_options_error_, v62, v63, 1, v73);

    id v46 = v73[0];
    if (v64)
    {
      id v65 = v73[0];

      return;
    }
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v33 = (uint64_t)v69;
  id v34 = objc_msgSend(v12, sel_defaultManager);
  sub_1C3DB8888();
  id v35 = v70;
  NSFileManager.createDirectory(at:withIntermediateDirectories:)(v33, 1);
  if (v35)
  {

    v25((char *)v33, v6);
  }
  else
  {
    v25((char *)v33, v6);
  }
  id v36 = objc_msgSend(v12, sel_defaultManager);
  BOOL v37 = (void *)sub_1C3DB8848();
  v73[0] = 0;
  unsigned int v38 = objc_msgSend(v36, sel_removeItemAtURL_error_, v37, v73);

  if (v38)
  {
    id v39 = v73[0];
  }
  else
  {
    id v40 = v73[0];
    uint64_t v41 = (void *)sub_1C3DB8798();

    swift_willThrow();
  }
  id v42 = objc_msgSend(v12, sel_defaultManager);
  uint64_t v43 = (void *)sub_1C3DB8848();
  id v44 = (void *)sub_1C3DB8848();
  v73[0] = 0;
  unsigned int v45 = objc_msgSend(v42, sel_moveItemAtURL_toURL_error_, v43, v44, v73);

  id v46 = v73[0];
  if (!v45)
  {
    unint64_t v29 = v68;
LABEL_20:
    id v71 = v46;
    id v48 = v46;
    id v49 = (void *)sub_1C3DB8798();

    swift_willThrow();
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1C3DB9048();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EB6FC748);
    swift_bridgeObjectRetain();
    id v51 = v49;
    swift_bridgeObjectRetain();
    id v52 = v49;
    unint64_t v53 = sub_1C3DB9028();
    unint64_t v54 = v29;
    os_log_type_t v55 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v53, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      v73[0] = v57;
      *(_DWORD *)uint64_t v56 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1C3C516D0(v67, v54, (uint64_t *)v73);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v56 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v58 = sub_1C3DBB568();
      uint64_t v72 = sub_1C3C516D0(v58, v59, (uint64_t *)v73);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C3A61000, v53, v55, "Failed to write new paper bundle %s version: %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v57, -1, -1);
      MEMORY[0x1C877E600](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  id v47 = v46;
}

void ICSystemPaperDocument.copyAndArchivePaperBundle(to:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v138 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v124 = *(void *)(v5 - 8);
  id v125 = (void (*)(char *, uint64_t, uint64_t))v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v110 - v12;
  uint64_t v14 = sub_1C3DB88F8();
  uint64_t v131 = *(uint8_t **)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  id v119 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v123 = (char *)&v110 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v120 = (char *)&v110 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v127 = (char *)&v110 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v110 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v110 - v26;
  id v122 = v3;
  unsigned int v28 = *(void **)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  id v29 = objc_msgSend(v28, sel_paperBundleModel);
  if (!v29)
  {
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_1C3DB9048();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EB6FC748);
    id v52 = sub_1C3DB9028();
    os_log_type_t v53 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v52, v53))
    {
      unint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v54 = 0;
      _os_log_impl(&dword_1C3A61000, v52, v53, "Cannot archive paper bundle because attachment model is missing", v54, 2u);
      MEMORY[0x1C877E600](v54, -1, -1);
    }

    return;
  }
  uint64_t v126 = v27;
  id v129 = v29;
  uint64_t v130 = v14;
  uint64_t v128 = v2;
  id v118 = self;
  id v30 = objc_msgSend(v118, sel_defaultManager);
  uint64_t v117 = a1;
  id v31 = (void *)sub_1C3DB8848();
  id v32 = objc_msgSend(v30, sel_ic_temporaryDirectoryAppropriateForDestination_, v31);

  if (!v32)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v131 + 7))(v13, 1, 1, v130);
    goto LABEL_14;
  }
  id v114 = v11;
  sub_1C3DB8898();

  uint64_t v34 = v130;
  uint64_t v33 = v131;
  id v35 = (void (*)(char *, char *, uint64_t))*((void *)v131 + 4);
  v35(v13, v25, v130);
  id v36 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v33 + 7);
  uint64_t v113 = v33 + 56;
  uint64_t v111 = v36;
  v36(v13, 0, 1, v34);
  long long v112 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v33 + 6);
  if (v112(v13, 1, v34) == 1)
  {
LABEL_14:
    sub_1C3C2A448((uint64_t)v13, (uint64_t *)&unk_1EB6FC7E0);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C3DB9048();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EB6FC748);
    uint64_t v56 = sub_1C3DB9028();
    os_log_type_t v57 = sub_1C3DBA6A8();
    BOOL v58 = os_log_type_enabled(v56, v57);
    id v59 = v129;
    if (v58)
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v60 = 0;
      _os_log_impl(&dword_1C3A61000, v56, v57, "Cannot archive paper bundle because we cannot create a temporary directory", v60, 2u);
      MEMORY[0x1C877E600](v60, -1, -1);
    }

    return;
  }
  v35(v126, v13, v34);
  id v37 = objc_msgSend(v118, sel_defaultManager);
  id v38 = objc_msgSend(v129, sel_paperBundleURL);
  sub_1C3DB8898();

  sub_1C3DB88A8();
  id v39 = (void (*)(uint64_t, uint64_t))*((void *)v33 + 1);
  uint64_t v116 = v33 + 8;
  id v115 = v39;
  v39((uint64_t)v25, v34);
  id v40 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  unsigned int v41 = objc_msgSend(v37, sel_fileExistsAtPath_, v40);

  if (v41)
  {
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1C3DB8B28();
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v124 + 8))(v7, v125);
    uint64_t v42 = (uint64_t)v127;
    sub_1C3DB8858();
    swift_bridgeObjectRelease();
    int v43 = (unsigned __int16)objc_msgSend(v28, sel_attachmentType);
    uint64_t v44 = v128;
    if ((v43 - 14) >= 2)
    {
      id v45 = v129;
      if (v43 != 13)
      {
        sub_1C3DBAF58();
        __break(1u);
        return;
      }
      id v69 = objc_msgSend(v129, sel_paperBundleURL);
      uint64_t v47 = (uint64_t)v120;
      sub_1C3DB8898();

      if (objc_msgSend(v28, sel_isPasswordProtected))
      {
        *(void *)&long long v137 = ObjectType;
        *((void *)&v137 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v70, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
        id v71 = v122;
        id v72 = v122;
      }
      else
      {
        id v71 = 0;
        long long v136 = 0u;
        long long v137 = 0u;
      }
      uint64_t v134 = 0;
      id v135 = v71;
      long long v132 = 0u;
      long long v133 = 0u;
      unint64_t v68 = &qword_1EB6FC300;
    }
    else
    {
      id v45 = v129;
      id v46 = objc_msgSend(v129, sel_paperBundleURL);
      uint64_t v47 = (uint64_t)v123;
      sub_1C3DB8898();

      if (objc_msgSend(v28, sel_isPasswordProtected))
      {
        *(void *)&long long v137 = ObjectType;
        *((void *)&v137 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v48, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
        id v49 = v122;
        id v50 = v122;
      }
      else
      {
        id v49 = 0;
        long long v136 = 0u;
        long long v137 = 0u;
      }
      uint64_t v134 = 0;
      id v135 = v49;
      long long v132 = 0u;
      long long v133 = 0u;
      unint64_t v68 = &qword_1EA387B30;
    }
    sub_1C3CF5EE8(v47, (uint64_t)&v135, v42, (uint64_t)&v132, v68);
    if (v44)
    {

      sub_1C3C2A448((uint64_t)&v132, (uint64_t *)&unk_1EB6FC770);
      uint64_t v73 = v130;
      os_log_type_t v74 = v115;
      v115(v47, v130);
      v74(v42, v73);
      v74((uint64_t)v126, v73);
      sub_1C3C2A448((uint64_t)&v135, (uint64_t *)&unk_1EB6FC770);
    }
    else
    {
      uint64_t v128 = 0;
      sub_1C3C2A448((uint64_t)&v132, (uint64_t *)&unk_1EB6FC770);
      uint64_t v75 = v130;
      v115(v47, v130);
      sub_1C3C2A448((uint64_t)&v135, (uint64_t *)&unk_1EB6FC770);
      uint64_t v76 = v131;
      uint64_t v77 = v114;
      id v125 = (void (*)(char *, uint64_t, uint64_t))*((void *)v131 + 2);
      v125(v114, v42, v75);
      v111(v77, 0, 1, v75);
      id v78 = (void *)sub_1C3DB8848();
      if (v112(v77, 1, v75) == 1)
      {
        unint64_t v79 = 0;
      }
      else
      {
        unint64_t v79 = (void *)sub_1C3DB8848();
        v115((uint64_t)v77, v75);
      }
      id v80 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F836F0]), sel_initWithDestinationURL_baseURL_, v78, v79);

      objc_msgSend(v80, sel_setUsesCompression_, 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC470);
      unint64_t v81 = (v76[80] + 32) & ~(unint64_t)v76[80];
      uint64_t v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = xmmword_1C3DD3D30;
      id v83 = v125;
      v125((char *)(v82 + v81), v42, v75);
      unint64_t v84 = (void *)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
      id v135 = 0;
      uint64_t v85 = v42;
      unsigned int v86 = objc_msgSend(v80, sel_writeURLs_error_, v84, &v135);

      if (v86)
      {
        uint64_t v87 = qword_1EB6FC768;
        id v88 = v135;
        if (v87 != -1) {
          swift_once();
        }
        uint64_t v89 = sub_1C3DB9048();
        __swift_project_value_buffer(v89, (uint64_t)qword_1EB6FC748);
        id v90 = v119;
        uint64_t v91 = v130;
        v83(v119, v117, v130);
        id v92 = sub_1C3DB9028();
        os_log_type_t v93 = sub_1C3DBA698();
        if (os_log_type_enabled(v92, v93))
        {
          id v94 = (uint8_t *)swift_slowAlloc();
          unint64_t v95 = (void *)swift_slowAlloc();
          id v135 = v95;
          *(_DWORD *)id v94 = 136315138;
          uint64_t v131 = v94 + 4;
          sub_1C3CFE01C((unint64_t *)&qword_1EB6FC740, 255, MEMORY[0x1E4F276F0]);
          uint64_t v96 = sub_1C3DBB248();
          *(void *)&long long v132 = sub_1C3C516D0(v96, v97, (uint64_t *)&v135);
          sub_1C3DBA9A8();
          swift_bridgeObjectRelease();
          v115((uint64_t)v90, v91);
          _os_log_impl(&dword_1C3A61000, v92, v93, "Successfully archived paper bundle to %s", v94, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C877E600](v95, -1, -1);
          MEMORY[0x1C877E600](v94, -1, -1);
        }
        else
        {
          v115((uint64_t)v90, v91);
        }

        id v100 = objc_msgSend(v118, sel_defaultManager);
        unint64_t v101 = (void *)sub_1C3DB8848();
        id v135 = 0;
        unsigned int v102 = objc_msgSend(v100, sel_removeItemAtURL_error_, v101, &v135);

        id v103 = v129;
        id v104 = v126;
        if (v102)
        {
          id v105 = v135;
        }
        else
        {
          id v106 = v135;
          uint64_t v107 = (void *)sub_1C3DB8798();

          swift_willThrow();
        }
        uint64_t v108 = v130;
        id v109 = (void (*)(char *, uint64_t))v115;
        v115((uint64_t)v127, v130);
        v109(v104, v108);
      }
      else
      {
        id v98 = v135;
        sub_1C3DB8798();

        swift_willThrow();
        v99 = (void (*)(char *, uint64_t))v115;
        v115(v85, v75);
        v99(v126, v75);
      }
    }
  }
  else
  {
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1C3DB9048();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EB6FC748);
    uint64_t v62 = sub_1C3DB9028();
    os_log_type_t v63 = sub_1C3DBA6A8();
    BOOL v64 = os_log_type_enabled(v62, v63);
    id v65 = v129;
    uint64_t v66 = v126;
    if (v64)
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_1C3A61000, v62, v63, "Cannot archive paper bundle because the paper bundle does not exist", v67, 2u);
      MEMORY[0x1C877E600](v67, -1, -1);
    }

    v115((uint64_t)v66, v130);
  }
}

void sub_1C3CF5EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v34 = a5;
  uint64_t v8 = sub_1C3DB88F8();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_sharedState);
  objc_msgSend(v12, sel_beginBlockingDeauthentication);

  sub_1C3DB9A08();
  id v13 = (void *)MEMORY[0x1C877AED0](1, a2);
  uint64_t v14 = (void *)MEMORY[0x1C877AED0](1, a4);
  __swift_instantiateConcreteTypeFromMangledName(v34);
  id v15 = v35;
  sub_1C3DB98A8();
  if (v15)
  {

    id v16 = objc_msgSend(v11, sel_sharedState);
  }
  else
  {
    uint64_t v34 = 0;
    id v35 = v11;
    uint64_t v17 = a3;
    uint64_t v18 = v33;
    uint64_t v19 = v8;
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C3DB9048();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB6FC748);
    uint64_t v21 = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v10, v17, v8);
    uint64_t v22 = sub_1C3DB9028();
    os_log_type_t v23 = sub_1C3DBA698();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v37 = v32;
      id v30 = v21;
      *(_DWORD *)uint64_t v24 = 136315138;
      id v31 = v24 + 4;
      sub_1C3CFE01C((unint64_t *)&qword_1EB6FC740, 255, MEMORY[0x1E4F276F0]);
      uint64_t v25 = sub_1C3DBB248();
      uint64_t v36 = sub_1C3C516D0(v25, v26, &v37);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v30, v19);
      _os_log_impl(&dword_1C3A61000, v22, v23, "Wrote copied PaperKit bundle to: %s", v24, 0xCu);
      uint64_t v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v27, -1, -1);
      MEMORY[0x1C877E600](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v19);
    }

    id v16 = objc_msgSend(v35, sel_sharedState);
  }
  id v28 = v16;
  objc_msgSend(v28, sel_endBlockingDeauthentication);
}

void ICSystemPaperDocument.restorePaperBundle(from:)(uint8_t *a1)
{
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1C3DB8B98();
  v99 = *(void (***)(char *, void))(v4 - 8);
  id v100 = (void *)v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C3DB88F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v97 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v95 = (char *)&v89 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v96 = (char *)&v89 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v101 = (char *)&v89 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v89 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v89 - v23;
  id v94 = v1;
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  id v26 = objc_msgSend(v25, sel_paperBundleModel);
  if (!v26)
  {
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1C3DB9048();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EB6FC748);
    uint64_t v55 = sub_1C3DB9028();
    os_log_type_t v56 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v55, v56))
    {
      os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v57 = 0;
      _os_log_impl(&dword_1C3A61000, v55, v56, "Cannot restore paper bundle because attachment model is missing", v57, 2u);
      MEMORY[0x1C877E600](v57, -1, -1);
    }

    return;
  }
  id v90 = v25;
  id v102 = v26;
  id v92 = v24;
  uint64_t v103 = v11;
  uint64_t v98 = v2;
  uint64_t v27 = self;
  id v28 = objc_msgSend(v27, sel_defaultManager);
  uint64_t v91 = a1;
  uint64_t v29 = (void *)sub_1C3DB8848();
  id v30 = objc_msgSend(v28, sel_ic_temporaryDirectoryAppropriateForDestination_, v29);

  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v9, 1, 1, v10);
    goto LABEL_15;
  }
  sub_1C3DB8898();

  uint64_t v31 = v103;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v103 + 32);
  v32(v9, v22, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v9, 1, v10) == 1)
  {
LABEL_15:
    sub_1C3C2A448((uint64_t)v9, (uint64_t *)&unk_1EB6FC7E0);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_1C3DB9048();
    __swift_project_value_buffer(v58, (uint64_t)qword_1EB6FC748);
    id v59 = sub_1C3DB9028();
    os_log_type_t v60 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_1C3A61000, v59, v60, "Cannot archive paper bundle because we cannot create a temporary directory", v61, 2u);
      MEMORY[0x1C877E600](v61, -1, -1);
    }

    return;
  }
  uint64_t v33 = v92;
  v32(v92, v9, v10);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  ((void (**)(char *, void *))v99)[1](v6, v100);
  uint64_t v34 = v101;
  sub_1C3DB8858();
  swift_bridgeObjectRelease();
  id v35 = objc_allocWithZone(MEMORY[0x1E4F836E8]);
  uint64_t v36 = (void *)sub_1C3DB8848();
  uint64_t v37 = (void *)sub_1C3DB8848();
  id v38 = objc_msgSend(v35, sel_initWithSourceURL_destinationURL_, v36, v37);

  objc_msgSend(v38, sel_setWritesTemporaryFilesInsideDestination_, 0);
  objc_msgSend(v38, sel_setOverwrite_, 1);
  objc_msgSend(v38, sel_setSkipsInvisibleHeaders_, 1);
  *(void *)&long long v107 = 0;
  uint64_t v39 = v10;
  if (!objc_msgSend(v38, sel_unarchiveResultURLs_error_, 0, &v107))
  {
    id v62 = (id)v107;
    sub_1C3DB8798();

    swift_willThrow();
    os_log_type_t v63 = *(void (**)(char *, uint64_t))(v103 + 8);
    v63(v34, v10);
    v63(v33, v10);
    return;
  }
  v99 = (void (**)(char *, void))v38;
  id v100 = v27;
  uint64_t v40 = qword_1EB6FC768;
  id v41 = (id)v107;
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1C3DB9048();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EB6FC748);
  uint64_t v43 = v103;
  uint64_t v44 = v96;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v96, v34, v39);
  id v45 = sub_1C3DB9028();
  os_log_type_t v46 = sub_1C3DBA698();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v89 = v39;
  if (v47)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(void *)&long long v107 = v49;
    *(_DWORD *)uint64_t v48 = 136315138;
    uint64_t v91 = v48 + 4;
    sub_1C3CFE01C((unint64_t *)&qword_1EB6FC740, 255, MEMORY[0x1E4F276F0]);
    uint64_t v50 = sub_1C3DBB248();
    uint64_t v104 = sub_1C3C516D0(v50, v51, (uint64_t *)&v107);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    id v52 = *(void (**)(char *, uint64_t))(v43 + 8);
    v52(v44, v39);
    _os_log_impl(&dword_1C3A61000, v45, v46, "Unarchived paper bundle to temporary directory: %s", v48, 0xCu);
    swift_arrayDestroy();
    uint64_t v53 = v49;
    uint64_t v34 = v101;
    MEMORY[0x1C877E600](v53, -1, -1);
    MEMORY[0x1C877E600](v48, -1, -1);
  }
  else
  {
    id v52 = *(void (**)(char *, uint64_t))(v43 + 8);
    v52(v44, v39);
  }

  BOOL v64 = v92;
  id v65 = v90;
  int v66 = (unsigned __int16)objc_msgSend(v90, sel_attachmentType);
  unint64_t v68 = v99;
  uint64_t v67 = v100;
  if ((v66 - 14) >= 2)
  {
    if (v66 != 13)
    {
      sub_1C3DBAF58();
      __break(1u);
      return;
    }
    uint64_t v109 = 0;
    long long v107 = 0u;
    long long v108 = 0u;
    id v76 = objc_msgSend(v102, sel_paperBundleURL);
    sub_1C3DB8898();

    if (objc_msgSend(v90, sel_isPasswordProtected))
    {
      *(void *)&long long v106 = ObjectType;
      *((void *)&v106 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v77, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
      uint64_t v78 = (uint64_t)v94;
      id v79 = v94;
    }
    else
    {
      uint64_t v78 = 0;
      long long v105 = 0u;
      long long v106 = 0u;
    }
    uint64_t v104 = v78;
    uint64_t v73 = &qword_1EB6FC300;
    uint64_t v74 = (uint64_t)v34;
    uint64_t v75 = (uint64_t)v95;
  }
  else
  {
    uint64_t v109 = 0;
    long long v107 = 0u;
    long long v108 = 0u;
    id v69 = objc_msgSend(v102, sel_paperBundleURL);
    sub_1C3DB8898();

    if (objc_msgSend(v65, sel_isPasswordProtected))
    {
      *(void *)&long long v106 = ObjectType;
      *((void *)&v106 + 1) = sub_1C3CFE01C(&qword_1EA3879E0, v70, (void (*)(uint64_t))type metadata accessor for ICSystemPaperDocument);
      uint64_t v71 = (uint64_t)v94;
      id v72 = v94;
    }
    else
    {
      uint64_t v71 = 0;
      long long v105 = 0u;
      long long v106 = 0u;
    }
    uint64_t v104 = v71;
    uint64_t v73 = &qword_1EA387B30;
    uint64_t v74 = (uint64_t)v34;
    uint64_t v75 = (uint64_t)v97;
  }
  uint64_t v80 = v98;
  sub_1C3CF5EE8(v74, (uint64_t)&v107, v75, (uint64_t)&v104, v73);
  if (v80)
  {

    uint64_t v81 = v89;
    v52((char *)v75, v89);
    sub_1C3C2A448((uint64_t)&v107, (uint64_t *)&unk_1EB6FC770);
    v52(v34, v81);
    v52(v64, v81);
    sub_1C3C2A448((uint64_t)&v104, (uint64_t *)&unk_1EB6FC770);
  }
  else
  {
    v52((char *)v75, v89);
    sub_1C3C2A448((uint64_t)&v107, (uint64_t *)&unk_1EB6FC770);
    sub_1C3C2A448((uint64_t)&v104, (uint64_t *)&unk_1EB6FC770);
    id v82 = objc_msgSend(v67, sel_defaultManager);
    id v83 = (void *)sub_1C3DB8848();
    *(void *)&long long v107 = 0;
    unsigned int v84 = objc_msgSend(v82, sel_removeItemAtURL_error_, v83, &v107);

    if (v84)
    {
      id v85 = (id)v107;
    }
    else
    {
      id v86 = (id)v107;
      uint64_t v87 = (void *)sub_1C3DB8798();

      swift_willThrow();
    }
    uint64_t v88 = v89;
    v52(v34, v89);
    v52(v92, v88);
  }
}

uint64_t sub_1C3CF6F84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  id v11 = a1;
  a5(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  return 1;
}

void static ICSystemPaperDocument.writePaperBundle<A>(_:model:url:)()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedState);
  objc_msgSend(v1, sel_beginBlockingDeauthentication);

  sub_1C3DB98E8();
  sub_1C3DB98C8();
  id v2 = objc_msgSend(v0, sel_sharedState);
  objc_msgSend(v2, sel_endBlockingDeauthentication);
}

uint64_t ICSystemPaperDocument.encrypt(_:)(uint64_t a1, unint64_t a2)
{
  sub_1C3CFED2C(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment));
  sub_1C3CE0C34(a1, a2);
  return a1;
}

NSObject *ICSystemPaperDocument.decrypt(_:)(NSObject *a1, unint64_t a2)
{
  return static ICEncryptionDelegateSupport.decrypt(attachment:data:)(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t ICSystemPaperDocument.encrypt(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static ICEncryptionDelegateSupport.encrypt(attachment:url:)(*(void **)(v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

void ICSystemPaperDocument.updateGraphDestinations(usingInlineAttachmentIdentifierMap:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v40 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C3DB88F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v41 = (char *)&v38 - v18;
  uint64_t v19 = *(void **)&v3[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  id v20 = objc_msgSend(v19, sel_managedObjectContext);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v38 = a1;
    uint64_t v39 = v14;
    MEMORY[0x1F4188790](v20);
    *(&v38 - 2) = (uint64_t)v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310);
    sub_1C3DBA838();

    uint64_t v22 = v42;
    if (v42)
    {
      id v23 = objc_msgSend(v19, sel_paperBundleModel);
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = objc_msgSend(v23, sel_paperBundleURL);

        sub_1C3DB8898();
        uint64_t v26 = v39;
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
        v27(v12, v17, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, v13);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, v13) != 1)
        {
          id v28 = v41;
          v27(v41, v12, v13);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
          uint64_t v30 = (uint64_t)v40;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v40, 1, 1, v29);
          uint64_t v31 = v28;
          uint64_t v32 = MEMORY[0x1C877ADA0](v22, v30, v28);
          sub_1C3C2A448(v30, &qword_1EB6FBF88);
          uint64_t v33 = (void *)swift_allocObject();
          _OWORD v33[2] = a2;
          v33[3] = a3;
          uint64_t v34 = v38;
          v33[4] = v4;
          v33[5] = v34;
          v33[6] = v32;
          sub_1C3C4D848((uint64_t)a2);
          id v35 = v4;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C3DB98D8();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v13);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, 1, 1, v13);
      }

      sub_1C3C2A448((uint64_t)v12, (uint64_t *)&unk_1EB6FC7E0);
    }
  }
  if (a2)
  {
    sub_1C3CF18B4();
    uint64_t v36 = (void *)swift_allocError();
    *uint64_t v37 = 0;
    a2();
  }
}

void sub_1C3CF7A34(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[1] = a6;
  id v28 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v27 - v18;
  sub_1C3C8E848(a1, (uint64_t)v12, &qword_1EB6FBF88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C3C2A448((uint64_t)v12, &qword_1EB6FBF88);
    id v20 = v28;
    if (v28)
    {
      sub_1C3CF18B4();
      uint64_t v21 = (void *)swift_allocError();
      void *v22 = 0;
      v20();
    }
  }
  else
  {
    uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    MEMORY[0x1F4188790](v23);
    v27[-2] = a4;
    v27[-1] = a5;
    sub_1C3DB9938();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = (uint64_t)v28;
    *(void *)(v24 + 16) = v28;
    *(void *)(v24 + 24) = a3;
    sub_1C3C4D848(v25);
    sub_1C3DB9848();
    swift_release();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v17, v13);
    v26(v19, v13);
  }
}

uint64_t sub_1C3CF7D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AC8);
  id v65 = *(void (***)(char *, uint64_t))(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C3DB96F8();
  uint64_t v49 = *(uint64_t (***)(char *, uint64_t))(v57 - 8);
  MEMORY[0x1F4188790](v57);
  os_log_type_t v56 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AD0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v72 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AD8);
  BOOL v47 = *(void (***)(char *, uint64_t))(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v55 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AE0);
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v63 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AE8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AF0);
  uint64_t v70 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v68 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_1C3DB9648();
  uint64_t v17 = *((void *)v68 - 1);
  MEMORY[0x1F4188790](v68);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AF8);
  uint64_t v46 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (void (**)(char *, uint64_t))((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3CFE01C((unint64_t *)&qword_1EB6FC460, 255, MEMORY[0x1E4F83C70]);
  uint64_t v60 = a1;
  sub_1C3DB9958();
  sub_1C3DB9618();
  uint64_t v23 = v19;
  uint64_t v24 = v20;
  (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t)))(v17 + 8))(v23, v68);
  sub_1C3DB97A8();
  v70[1](v16, v14);
  uint64_t v25 = v13;
  uint64_t v70 = v22;
  sub_1C3DB97D8();
  uint64_t v26 = v64;
  uint64_t v27 = v64 + 48;
  unint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
  if (v68(v13, 1, v9) != 1)
  {
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    int v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 6);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v47 + 4);
    ++v49;
    uint64_t v48 = v65 + 1;
    ++v47;
    id v65 = (void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v29 = v63;
    uint64_t v54 = v9;
    uint64_t v64 = v26 + 32;
    uint64_t v53 = v13;
    uint64_t v52 = v24;
    uint64_t v51 = v27;
    uint64_t v30 = v71;
    v67(v63, v13, v9);
    while (1)
    {
      uint64_t v31 = v72;
      sub_1C3DB9828();
      if ((*v66)(v31, 1, v71) == 1)
      {
        (*v65)(v29, v9);
        sub_1C3C2A448(v72, &qword_1EA387AD0);
      }
      else
      {
        uint64_t v32 = v55;
        (*v50)(v55, v72, v30);
        uint64_t v33 = v56;
        uint64_t v34 = v60;
        sub_1C3DB9918();
        id v35 = v58;
        sub_1C3DB96E8();
        uint64_t v36 = (*v49)(v33, v57);
        MEMORY[0x1F4188790](v36);
        uint64_t v37 = v61;
        *(&v46 - 4) = v34;
        *(&v46 - 3) = v37;
        *(&v46 - 2) = v62;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B00);
        uint64_t v38 = v59;
        uint64_t v39 = v69;
        uint64_t v40 = sub_1C3DB97B8();
        uint64_t v69 = v39;
        (*v48)(v35, v38);
        id v41 = (void (*)(char *, void))sub_1C3DB9908();
        uint64_t v42 = (void (*)(unsigned char *, void))sub_1C3DB96D8();
        sub_1C3DB97E8();
        v42(v73, 0);
        v41(v74, 0);
        uint64_t v75 = v40;
        uint64_t v43 = (void (*)(char *, void))sub_1C3DB9908();
        uint64_t v44 = (void (*)(unsigned char *, void))sub_1C3DB96D8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B08);
        sub_1C3C4BDB4(&qword_1EA387B10, &qword_1EA387B08);
        uint64_t v29 = v63;
        sub_1C3DB97C8();
        v44(v73, 0);
        uint64_t v9 = v54;
        v43(v74, 0);
        id v45 = v32;
        uint64_t v24 = v52;
        (*v47)(v45, v30);
        (*v65)(v29, v9);
        uint64_t v25 = v53;
        swift_bridgeObjectRelease();
      }
      sub_1C3DB97D8();
      if (v68(v25, 1, v9) == 1) {
        break;
      }
      v67(v29, v25, v9);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))((char *)v70, v24);
}

uint64_t sub_1C3CF8674@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB9778();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v15 - v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B00);
  sub_1C3DB9918();
  sub_1C3CF8898(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v13 = sub_1C3DB9A28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_1C3CFE01C(&qword_1EA387B20, 255, MEMORY[0x1E4F83CA8]);
  return sub_1C3DB98F8();
}

uint64_t sub_1C3CF8898@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v12[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B28);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1C3DB9748();
  uint64_t v8 = sub_1C3DB9758();
  if (*(void *)(a1 + 16) && (sub_1C3C2A4F8(v8, v9), (v10 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1C3DB8B28();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1C3DB9768();
  return sub_1C3DB9738();
}

Swift::Void __swiftcall ICSystemPaperDocument.removeStrokesFromStyleInventory()()
{
  id v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF68);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFE8);
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v78 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC010);
  MEMORY[0x1F4188790](v82);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC008);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v83 = *(void *)(v12 - 8);
  unsigned int v84 = (uint8_t *)v12;
  uint64_t v13 = *(void *)(v83 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v77 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v79 = (char *)&v67 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v72 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C3DB9648();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v69 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  uint64_t v75 = *(v26 - 1);
  id v76 = v26;
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void **)&v0[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment];
  id v30 = objc_msgSend(v29, sel_managedObjectContext);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v67 = v8;
    unint64_t v68 = v4;
    MEMORY[0x1F4188790](v30);
    *(&v67 - 2) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310);
    sub_1C3DBA838();

    uint64_t v32 = v86;
    if (v86)
    {
      int v33 = (unsigned __int16)objc_msgSend(v29, sel_attachmentType);
      if ((v33 - 14) >= 2)
      {
        if (v33 == 13)
        {
          sub_1C3CEE130((uint64_t)v32, &qword_1EB6FBF88, &qword_1EB6FC308, &qword_1EB6FC300, (void (*)(uint64_t, char *))sub_1C3CEEBEC, (uint64_t)v25);
          uint64_t v37 = v75;
          id v36 = v76;
          if ((*(unsigned int (**)(char *, uint64_t, id))(v75 + 48))(v25, 1, v76) == 1)
          {

            uint64_t v38 = &qword_1EB6FBF88;
          }
          else
          {
            (*(void (**)(char *, char *, id))(v37 + 32))(v28, v25, v36);
            sub_1C3CFE01C((unint64_t *)&qword_1EB6FC460, 255, MEMORY[0x1E4F83C70]);
            sub_1C3DB99A8();
            uint64_t v25 = v72;
            sub_1C3DB9628();
            (*(void (**)(char *, uint64_t))(v70 + 8))(v20, v71);
            uint64_t v63 = v73;
            uint64_t v62 = v74;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v25, 1, v74) != 1)
            {
              uint64_t v64 = v69;
              (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v69, v25, v62);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC4A8);
              unint64_t v65 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
              uint64_t v66 = swift_allocObject();
              *(_OWORD *)(v66 + 16) = xmmword_1C3DD3D30;
              (*(void (**)(unint64_t, char *, uint64_t))(v63 + 16))(v66 + v65, v64, v62);
              sub_1C3CFC88C((uint64_t)v28, v66);

              (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
              (*(void (**)(char *, id))(v37 + 8))(v28, v36);
              swift_bridgeObjectRelease();
              return;
            }
            (*(void (**)(char *, id))(v37 + 8))(v28, v36);

            uint64_t v38 = &qword_1EB6FBFF8;
          }
          sub_1C3C2A448((uint64_t)v25, v38);
          return;
        }
        if (qword_1EB6FC768 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_1C3DB9048();
        __swift_project_value_buffer(v52, (uint64_t)qword_1EB6FC748);
        uint64_t v53 = v1;
        uint64_t v54 = sub_1C3DB9028();
        os_log_type_t v55 = sub_1C3DBA6A8();
        if (os_log_type_enabled(v54, v55))
        {
          os_log_type_t v56 = (uint8_t *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          id v86 = (void *)v57;
          *(_DWORD *)os_log_type_t v56 = 136315138;
          unsigned int v84 = v56 + 4;
          id v58 = objc_msgSend(v29, sel_shortLoggingDescription);
          uint64_t v59 = sub_1C3DB9C38();
          unint64_t v61 = v60;

          uint64_t v85 = sub_1C3C516D0(v59, v61, (uint64_t *)&v86);
          sub_1C3DBA9A8();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C3A61000, v54, v55, "Can't remove strokes from style inventory - unsupported attachment type: %s", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C877E600](v57, -1, -1);
          MEMORY[0x1C877E600](v56, -1, -1);
        }
        else
        {
        }
      }
      else
      {
        sub_1C3CEE130((uint64_t)v32, &qword_1EB6FC008, &qword_1EB6FC000, &qword_1EA387B30, (void (*)(uint64_t, char *))sub_1C3CEEE24, (uint64_t)v11);
        uint64_t v34 = v83;
        id v35 = v84;
        if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v83 + 48))(v11, 1, v84) == 1)
        {

          sub_1C3C2A448((uint64_t)v11, &qword_1EB6FC008);
        }
        else
        {
          uint64_t v75 = *(void *)(v34 + 32);
          id v76 = v32;
          uint64_t v39 = (uint64_t)v79;
          ((void (*)(char *, char *, uint8_t *))v75)(v79, v11, v35);
          swift_getKeyPath();
          sub_1C3CFE01C(&qword_1EA3879E8, 255, MEMORY[0x1E4F83C98]);
          uint64_t v40 = v78;
          sub_1C3DB9988();
          swift_release();
          uint64_t v41 = v80;
          uint64_t v42 = v40;
          uint64_t v43 = v81;
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v68, v42, v81);
          uint64_t v44 = v77;
          (*(void (**)(char *, uint64_t, uint8_t *))(v34 + 16))(v77, v39, v35);
          unint64_t v45 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
          uint64_t v46 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint8_t *))v75)(v46 + v45, v44, v35);
          uint64_t v47 = (uint64_t)v67;
          uint64_t v48 = (uint64_t)v68;
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v67, v68, v43);
          uint64_t v49 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v47
                                                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3879F0)
                                                                                  + 44));
          *uint64_t v49 = sub_1C3CFD794;
          v49[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v46;
          uint64_t v50 = (BOOL (**)(uint64_t))(v47
                                              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3879F8)
                                                       + 36));
          *uint64_t v50 = sub_1C3CFC10C;
          v50[1] = 0;
          uint64_t v51 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v47 + *(int *)(v82 + 44));
          NSObject *v51 = sub_1C3CFC174;
          v51[1] = 0;
          sub_1C3C2A448(v48, &qword_1EB6FBF68);
          sub_1C3CFCCE0(v39, v47);

          sub_1C3C2A448(v47, &qword_1EB6FC010);
          (*(void (**)(uint64_t, uint8_t *))(v34 + 8))(v39, v35);
        }
      }
    }
  }
}

uint64_t sub_1C3CF96D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFE8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1C3DB96A8();
}

uint64_t sub_1C3CF979C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v97 = (char *)a2;
  uint64_t v98 = a3;
  uint64_t v4 = sub_1C3DB9648();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v85 = (char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A90);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v91 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB9798();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v88 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A98);
  MEMORY[0x1F4188790](v11 - 8);
  id v94 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v100 = *(void *)(v103 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v103);
  os_log_type_t v93 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v101 = (char *)v82 - v15;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AA0);
  uint64_t v99 = *(void *)(v102 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v102);
  id v92 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v104 = (char *)v82 - v18;
  uint64_t v19 = sub_1C3DB9668();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AA8);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v95 = (uint64_t)v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v105 = (uint64_t)v82 - v29;
  uint64_t v96 = a1;
  sub_1C3DB97F8();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AB0);
  uint64_t v31 = *(void *)(v30 - 8);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30);
  uint64_t v86 = v5;
  uint64_t v87 = v4;
  if (v32 == 1)
  {
    sub_1C3C2A448((uint64_t)v25, &qword_1EA387AA8);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v105, 1, 1, v33);
    uint64_t v35 = v102;
    uint64_t v34 = v103;
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v104;
    uint64_t v39 = v97;
  }
  else
  {
    sub_1C3DB96C8();
    sub_1C3CFE01C(&qword_1EA387A60, 255, MEMORY[0x1E4F83C98]);
    uint64_t v40 = v97;
    sub_1C3DB9928();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
    sub_1C3DB9658();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v35 = v102;
    uint64_t v34 = v103;
    uint64_t v37 = v99;
    uint64_t v36 = v100;
    uint64_t v38 = v104;
    uint64_t v39 = v40;
  }
  unint64_t v97 = *(char **)(v37 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v97)(v38, v96, v35);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  uint64_t v42 = v101;
  v41(v101, v39, v34);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v44 = *(void *)(v43 - 8);
  unint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v45(v105, 1, v43) == 1)
  {
    v82[0] = v44 + 48;
    uint64_t v83 = v45;
    unsigned int v84 = v41;
    v82[1] = v37 + 16;
    uint64_t v96 = v44;
    uint64_t v46 = (uint64_t)v94;
    uint64_t v47 = v104;
    sub_1C3DB9808();
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AB8);
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48) == 1)
    {
      sub_1C3C2A448(v46, &qword_1EA387A98);
      uint64_t v50 = v95;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v95, 1, 1, v43);
      uint64_t v52 = v102;
      uint64_t v51 = v103;
      uint64_t v53 = v101;
    }
    else
    {
      sub_1C3DB96C8();
      sub_1C3CFE01C(&qword_1EA387A60, 255, MEMORY[0x1E4F83C98]);
      os_log_type_t v56 = v47;
      uint64_t v57 = v88;
      uint64_t v53 = v101;
      sub_1C3DB9928();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v46, v48);
      uint64_t v50 = v95;
      sub_1C3DB9788();
      id v58 = v57;
      uint64_t v47 = v56;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v90);
      uint64_t v52 = v102;
      uint64_t v51 = v103;
    }
    uint64_t v59 = v92;
    unint64_t v60 = v93;
    ((void (*)(char *, char *, uint64_t))v97)(v92, v47, v52);
    v84(v60, v53, v51);
    if (v83(v50, 1, v43) == 1)
    {
      uint64_t v61 = (uint64_t)v91;
      uint64_t v62 = v59;
      sub_1C3DB9818();
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387AC0);
      uint64_t v64 = *(void *)(v63 - 8);
      int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63);
      uint64_t v66 = v99;
      if (v65 == 1)
      {
        uint64_t v67 = *(void (**)(char *, uint64_t))(v100 + 8);
        uint64_t v68 = v103;
        v67(v60, v103);
        uint64_t v69 = *(void (**)(char *, uint64_t))(v66 + 8);
        uint64_t v70 = v102;
        v69(v62, v102);
        v67(v101, v68);
        v69(v104, v70);
        sub_1C3C2A448(v61, &qword_1EA387A90);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v98, 1, 1, v43);
      }
      else
      {
        sub_1C3DB96C8();
        sub_1C3CFE01C(&qword_1EA387A60, 255, MEMORY[0x1E4F83C98]);
        uint64_t v77 = v85;
        sub_1C3DB9928();
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v61, v63);
        sub_1C3DB9628();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v77, v87);
        uint64_t v78 = *(void (**)(char *, uint64_t))(v100 + 8);
        uint64_t v79 = v103;
        v78(v60, v103);
        uint64_t v80 = *(void (**)(char *, uint64_t))(v66 + 8);
        uint64_t v81 = v102;
        v80(v59, v102);
        v78(v101, v79);
        v80(v104, v81);
      }
      sub_1C3C2A448(v95, &qword_1EB6FBFF8);
    }
    else
    {
      unint64_t v101 = (char *)v43;
      uint64_t v71 = v59;
      uint64_t v72 = *(void (**)(char *, uint64_t))(v100 + 8);
      v72(v60, v51);
      uint64_t v73 = *(void (**)(char *, uint64_t))(v99 + 8);
      v73(v71, v52);
      v72(v53, v51);
      v73(v47, v52);
      uint64_t v74 = v96;
      uint64_t v75 = v98;
      id v76 = v101;
      (*(void (**)(uint64_t, uint64_t, char *))(v96 + 32))(v98, v95, v101);
      (*(void (**)(uint64_t, void, uint64_t, char *))(v74 + 56))(v75, 0, 1, v76);
    }
    return sub_1C3C2A448(v105, &qword_1EB6FBFF8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v103);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v104, v102);
    uint64_t v54 = v98;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v98, v105, v43);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v54, 0, 1, v43);
  }
}

uint64_t ICSystemPaperDocument.toFallbackPDFData()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC008);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - v13;
  id v15 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), sel_managedObjectContext);
  if (!v15) {
    goto LABEL_8;
  }
  uint64_t v16 = v15;
  uint64_t v51 = v14;
  MEMORY[0x1F4188790](v15);
  *(&v46 - 2) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310);
  sub_1C3DBA838();

  uint64_t v17 = v52;
  if (!v52)
  {
LABEL_8:
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C3DB9048();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB6FC748);
    uint64_t v19 = sub_1C3DB9028();
    os_log_type_t v23 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v19, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1C3A61000, v19, v23, "ICSystemPaperDocument.toFallbackPDFData: Failed to create coherence context.", v24, 2u);
      MEMORY[0x1C877E600](v24, -1, -1);
    }
    goto LABEL_12;
  }
  sub_1C3CEE130((uint64_t)v52, &qword_1EB6FC008, &qword_1EB6FC000, &qword_1EA387B30, (void (*)(uint64_t, char *))sub_1C3CEEE24, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C3C2A448((uint64_t)v7, &qword_1EB6FC008);
    if (qword_1EB6FC768 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C3DB9048();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB6FC748);
    uint64_t v19 = sub_1C3DB9028();
    os_log_type_t v20 = sub_1C3DBA6A8();
    if (!os_log_type_enabled(v19, v20))
    {

      return 0;
    }
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1C3A61000, v19, v20, "ICSystemPaperDocument.toFallbackPDFData: Failed to create paper document.", v21, 2u);
    MEMORY[0x1C877E600](v21, -1, -1);

LABEL_12:
    return 0;
  }
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v27 = v51;
  v48(v51, v7, v8);
  dispatch_semaphore_t v47 = dispatch_semaphore_create(0);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  uint64_t v49 = (void **)(v28 + 16);
  sub_1C3DBA218();
  uint64_t v29 = sub_1C3DBA278();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 0, 1, v29);
  uint64_t v50 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v27, v8);
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v31 = (v10 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = 0;
  *((void *)v33 + 3) = 0;
  *((void *)v33 + 4) = v28;
  v48(&v33[v30], v12, v8);
  *(void *)&v33[v31] = v17;
  dispatch_semaphore_t v34 = v47;
  *(void *)&v33[v32] = v47;
  swift_retain();
  uint64_t v35 = v34;
  id v36 = v17;
  sub_1C3C5C22C((uint64_t)v4, (uint64_t)&unk_1EA387A08, (uint64_t)v33);
  swift_release();
  uint64_t v37 = sub_1C3DBA7F8();
  uint64_t v38 = (void *)MEMORY[0x1C877D750](v37);
  uint64_t v39 = v49;
  swift_beginAccess();
  uint64_t v40 = *v39;
  if (*v39)
  {
    uint64_t v41 = qword_1EA3858C0;
    id v42 = v40;
    if (v41 != -1) {
      swift_once();
    }
    sub_1C3CFAF40(qword_1EA3879C8);
    uint64_t v43 = (void *)sub_1C3DB9A88();
    swift_bridgeObjectRelease();
    id v44 = objc_msgSend(v42, sel_dataRepresentationWithOptions_, v43);

    uint64_t v45 = v50;
    if (v44)
    {
      uint64_t v25 = sub_1C3DB8958();
    }
    else
    {
      uint64_t v25 = 0;
    }
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v45 = v50;
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v51, v8);
  swift_release();
  return v25;
}

uint64_t sub_1C3CFAA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A58);
  v7[9] = swift_task_alloc();
  uint64_t v8 = sub_1C3DB96C8();
  v7[10] = v8;
  v7[11] = *(void *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3CFAB8C, 0, 0);
}

uint64_t sub_1C3CFAB8C()
{
  uint64_t v1 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F83C98];
  sub_1C3CFE01C(&qword_1EA3879E8, 255, MEMORY[0x1E4F83C98]);
  sub_1C3DB99A8();
  uint64_t v3 = sub_1C3DB9678();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = sub_1C3CFE01C(&qword_1EA387A60, 255, v2);
  *uint64_t v4 = v0;
  v4[1] = sub_1C3CFAD10;
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[6];
  uint64_t v8 = v0[7];
  return MEMORY[0x1F413A0E0](v8, v9, v6, v7, v5);
}

uint64_t sub_1C3CFAD10(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  sub_1C3C2A448(v5, &qword_1EA387A58);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1C3CFAE94, 0, 0);
}

uint64_t sub_1C3CFAE94()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[5];
  swift_beginAccess();
  uint64_t v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = v1;

  sub_1C3DBA808();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3CFAF40(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A48);
    uint64_t v2 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v28) {
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_26:
    uint64_t v16 = 8 * v12;
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + v16);
    *(void *)&v37[0] = *(void *)(*(void *)(a1 + 48) + v16);
    uint64_t v17 = *(void **)&v37[0];
    type metadata accessor for PDFDocumentWriteOption(0);
    id v19 = v17;
    v18;
    swift_dynamicCast();
    sub_1C3C4C8B4(0, &qword_1EB6FBB08);
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1C3C2A5D8(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1C3C2A5D8(v36, v37);
    sub_1C3C2A5D8(v37, &v33);
    uint64_t result = sub_1C3DBABB8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1C3C2A5D8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v28)
  {
LABEL_35:
    swift_release();
    swift_release();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v28) {
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3CFB2D4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A48);
    uint64_t v2 = sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1C3C4BC70(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    _OWORD v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C3C2A5D8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1C3C2A5D8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1C3C2A5D8(v36, v37);
    sub_1C3C2A5D8(v37, &v33);
    uint64_t result = sub_1C3DBABB8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1C3C2A5D8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1C3C4C744();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1C3CFB69C(uint64_t a1)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A38);
  uint64_t v2 = MEMORY[0x1F4188790](v44);
  uint64_t v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t *)((char *)&v39 - v5);
  uint64_t v45 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A40);
    uint64_t v7 = (void *)sub_1C3DBAFE8();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v8 = *(void *)(v45 + 64);
  uint64_t v42 = v45 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(v45 + 32);
  if (-v9 < 64) {
    uint64_t v10 = ~(-1 << -(char)v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v8;
  uint64_t v39 = -1 << *(unsigned char *)(v45 + 32);
  int64_t v41 = (unint64_t)(63 - v9) >> 6;
  uint64_t v43 = (long long *)v47;
  uint64_t v40 = v7 + 8;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v11) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v17 >= v41) {
    goto LABEL_32;
  }
  unint64_t v18 = *(void *)(v42 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v41) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v42 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v41) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v42 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v41) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v42 + 8 * v19);
        if (!v18)
        {
          int64_t v20 = i + 5;
          if (i + 5 < v41)
          {
            unint64_t v18 = *(void *)(v42 + 8 * v20);
            if (v18)
            {
              int64_t v19 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v19 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_36;
              }
              if (v19 >= v41) {
                break;
              }
              unint64_t v18 = *(void *)(v42 + 8 * v19);
              ++v20;
              if (v18) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1C3C4C744();
          return (unint64_t)v7;
        }
      }
    }
  }
LABEL_26:
  unint64_t v11 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    uint64_t v21 = *(void *)(v45 + 56);
    unint64_t v22 = (uint64_t *)(*(void *)(v45 + 48) + 16 * v16);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = type metadata accessor for PersistedActivityEvent();
    uint64_t v26 = v21 + *(void *)(*(void *)(v25 - 8) + 72) * v16;
    uint64_t v27 = v44;
    sub_1C3CFDDD4(v26, (uint64_t)v6 + *(int *)(v44 + 48));
    *uint64_t v6 = v23;
    v6[1] = v24;
    sub_1C3CB3BF8((uint64_t)v6, (uint64_t)v4, &qword_1EA387A38);
    uint64_t v28 = (uint64_t)v4 + *(int *)(v27 + 48);
    uint64_t v30 = *v4;
    uint64_t v29 = v4[1];
    v47[3] = v25;
    v47[4] = &protocol witness table for PersistedActivityEvent;
    uint64_t v31 = v43;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v43);
    sub_1C3CFE274(v28, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    sub_1C3C4C684(v31, (uint64_t)v49);
    sub_1C3C4C684(v49, (uint64_t)v50);
    sub_1C3C4C684(v50, (uint64_t)&v48);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C3C2A4F8(v30, v29);
    unint64_t v33 = result;
    if (v34)
    {
      int64_t v13 = (uint64_t *)(v7[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v13 = v30;
      v13[1] = v29;
      uint64_t v14 = v7[7] + 40 * v33;
      __swift_destroy_boxed_opaque_existential_0Tm(v14);
      unint64_t result = sub_1C3C4C684(&v48, v14);
      if (!v11) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v7[2] >= v7[3]) {
      break;
    }
    *(void *)((char *)v40 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v35 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v35 = v30;
    v35[1] = v29;
    unint64_t result = sub_1C3C4C684(&v48, v7[7] + 40 * result);
    uint64_t v36 = v7[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_34;
    }
    v7[2] = v38;
    if (!v11) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id ICSystemPaperDocument.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ICSystemPaperDocument.init()()
{
}

id ICSystemPaperDocument.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3CFBC60(uint64_t a1, unint64_t a2)
{
  sub_1C3CFED2C(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment));
  sub_1C3CE0C34(a1, a2);
  return a1;
}

NSObject *sub_1C3CFBD0C(NSObject *a1, unint64_t a2)
{
  return static ICEncryptionDelegateSupport.decrypt(attachment:data:)(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t sub_1C3CFBD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static ICEncryptionDelegateSupport.encrypt(attachment:url:)(*(void **)(*v2 + OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment), a1, a2);
}

uint64_t sub_1C3CFBD54()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C3CFBE28(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = *(void **)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v7);
  unint64_t v12 = *(void *)(v1 + v7 + 8);
  uint64_t v13 = *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_1C3CF1908(a1, v1 + v4, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C3CFBEF0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CFBF00(uint64_t a1)
{
  return sub_1C3C96F2C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C3CFBF08()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C3CFBFB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)(v1 + v4);
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  sub_1C3CF4760(a1, v5, v7, v8);
}

uint64_t sub_1C3CFC050()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t type metadata accessor for ICSystemPaperDocument()
{
  return self;
}

void sub_1C3CFC084(void *a1)
{
  sub_1C3CFECD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_1C3CFC0A4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C3CFC0FC(uint64_t a1)
{
  sub_1C3CF7A34(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

BOOL sub_1C3CFC10C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_1C3CFC174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C8E848(a1, (uint64_t)v6, &qword_1EB6FBFF8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3CFC284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C3CFE01C((unint64_t *)&qword_1EB6FC050, 255, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1C3DB9B08();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1C3CFE01C(&qword_1EB6FC058, 255, MEMORY[0x1E4F27990]);
      char v19 = sub_1C3DB9BE8();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C3CD5C28();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1C3CFC56C(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1C3CFC56C(int64_t a1)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1C3DBAAB8();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1C3CFE01C((unint64_t *)&qword_1EB6FC050, 255, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1C3DB9B08();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_1C3CFC88C(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC490);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC498);
  v32[3] = v12;
  v32[4] = sub_1C3C4BDB4(&qword_1EB6FC4A0, &qword_1EB6FC498);
  v32[0] = a2;
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v32, v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  uint64_t *boxed_opaque_existential_1 = *v15;
  boxed_opaque_existential_1[1] = 0;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  int64_t v20 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v26 = v5;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, AssociatedTypeWitness);
    sub_1C3DBA998();
    if ((*v18)(v11, 1, v5) == 1) {
      break;
    }
    (*v19)(v8, v11, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
    sub_1C3C4BDB4((unint64_t *)&qword_1EB6FC488, &qword_1EB6FBFF0);
    sub_1C3DB9948();
    id v21 = objc_allocWithZone((Class)sub_1C3DB9728());
    unint64_t v22 = (void *)sub_1C3DB9718();
    id v23 = objc_msgSend(v22, sel_strokes);
    if (!v23)
    {
      sub_1C3DB9A48();
      sub_1C3DBA018();
      id v23 = (id)sub_1C3DB9FF8();
      uint64_t v5 = v26;
      swift_bridgeObjectRelease();
    }
    objc_msgSend(self, sel_removeStrokesFromStyleInventory_, v23);

    (*v20)(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32);
}

uint64_t sub_1C3CFCCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC490);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFE8);
  uint64_t v11 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v34 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3879F0) - 8;
  MEMORY[0x1F4188790](v37);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3879F8) - 8;
  MEMORY[0x1F4188790](v35);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC010);
  uint64_t v45 = v33;
  uint64_t v46 = sub_1C3C4BDB4(&qword_1EA387A68, &qword_1EB6FC010);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v44);
  sub_1C3C8E848(a2, (uint64_t)boxed_opaque_existential_1, &qword_1EB6FC010);
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(v44, v45);
  MEMORY[0x1F4188790](v18);
  int64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v22 = __swift_allocate_boxed_opaque_existential_1(v41);
  sub_1C3CB3BF8((uint64_t)v20, (uint64_t)v16, &qword_1EA3879F8);
  sub_1C3CB3BF8((uint64_t)v16, (uint64_t)v14, &qword_1EA3879F0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v34, v14, v36);
  sub_1C3C4BDB4(&qword_1EA387A70, &qword_1EB6FBFE8);
  sub_1C3DB9EA8();
  uint64_t v23 = *(int *)(v37 + 52);
  *(_OWORD *)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A78) + 44)) = *(_OWORD *)&v14[v23];
  uint64_t v24 = *(int *)(v35 + 44);
  *(_OWORD *)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A80) + 36)) = *(_OWORD *)&v16[v24];
  uint64_t v25 = *(int *)(v33 + 44);
  *(_OWORD *)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387A88) + 44)) = *(_OWORD *)&v20[v25];
  uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  uint64_t v27 = (void (**)(char *, char *, uint64_t))(v38 + 32);
  for (int64_t i = (void (**)(char *, uint64_t))(v38 + 8); ; (*i)(v7, v5))
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, AssociatedTypeWitness);
    sub_1C3DBA998();
    if ((*v26)(v10, 1, v5) == 1) {
      break;
    }
    (*v27)(v7, v10, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
    sub_1C3C4BDB4((unint64_t *)&qword_1EB6FC488, &qword_1EB6FBFF0);
    sub_1C3DB9948();
    id v29 = objc_allocWithZone((Class)sub_1C3DB9728());
    uint64_t v30 = (void *)sub_1C3DB9718();
    id v31 = objc_msgSend(v30, sel_strokes);
    if (!v31)
    {
      sub_1C3DB9A48();
      sub_1C3DBA018();
      id v31 = (id)sub_1C3DB9FF8();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(self, sel_removeStrokesFromStyleInventory_, v31);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
}

void _s11NotesShared21ICSystemPaperDocumentC12closeContext3forySo6ICNoteC_tFZ_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v27 - v10;
  id v12 = objc_msgSend(a1, sel_paperCoherenceContextURL);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1C3DB8898();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v4, v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v14(v11, v4, v5);
      sub_1C3DB9A08();
      uint64_t v15 = sub_1C3DB99E8();
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        sub_1C3DB99F8();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_1C3C2A448((uint64_t)v4, (uint64_t *)&unk_1EB6FC7E0);
  if (qword_1EB6FC768 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C3DB9048();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB6FC748);
  id v18 = a1;
  uint64_t v19 = sub_1C3DB9028();
  os_log_type_t v20 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    id v23 = objc_msgSend(v18, sel_loggingDescription);
    uint64_t v24 = sub_1C3DB9C38();
    unint64_t v26 = v25;

    uint64_t v27 = sub_1C3C516D0(v24, v26, &v28);
    sub_1C3DBA9A8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, v19, v20, "No paperCoherenceContextURL available {attachment: %s}", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v22, -1, -1);
    MEMORY[0x1C877E600](v21, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C3CFD6D8()
{
  return sub_1C3DB9698();
}

uint64_t sub_1C3CFD700()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3CFD794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000) - 8);
  uint64_t v6 = (char *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  return sub_1C3CF979C(a1, v6, a2);
}

uint64_t sub_1C3CFD818()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3CFD850()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v7 + 8, v5);
}

uint64_t sub_1C3CFD954(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1C3C3259C;
  return sub_1C3CFAA98(a1, v7, v8, v9, v10, v11, v12);
}

unint64_t sub_1C3CFDAA0()
{
  unint64_t result = qword_1EA387A10;
  if (!qword_1EA387A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387A10);
  }
  return result;
}

unint64_t sub_1C3CFDAF8()
{
  unint64_t result = qword_1EA387A18;
  if (!qword_1EA387A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387A18);
  }
  return result;
}

unint64_t sub_1C3CFDB50()
{
  unint64_t result = qword_1EA387A20;
  if (!qword_1EA387A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387A20);
  }
  return result;
}

unint64_t sub_1C3CFDBA8()
{
  unint64_t result = qword_1EA387A28;
  if (!qword_1EA387A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemPaperDocumentError()
{
  return &type metadata for SystemPaperDocumentError;
}

uint64_t sub_1C3CFDC10()
{
  return type metadata accessor for SystemPaperSyncArchive();
}

uint64_t sub_1C3CFDC18()
{
  uint64_t result = sub_1C3DB88F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SystemPaperSyncArchive(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SystemPaperSyncArchive);
}

uint64_t dispatch thunk of SystemPaperSyncArchive.__allocating_init(databaseArchive:assetArchives:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for ICSystemPaperDocument(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ICSystemPaperDocument);
}

uint64_t dispatch thunk of ICSystemPaperDocument.__allocating_init(paperAttachment:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for ICSystemPaperDocument.PaperBundleReader()
{
  return self;
}

ValueMetadata *type metadata accessor for ICSystemPaperDocument.PaperBundleReader.State()
{
  return &type metadata for ICSystemPaperDocument.PaperBundleReader.State;
}

uint64_t sub_1C3CFDD40()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3CFDD78(uint64_t a1)
{
  sub_1C3D303A8(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C3CFDD80()
{
  unint64_t result = qword_1EA387A30;
  if (!qword_1EA387A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387A30);
  }
  return result;
}

uint64_t sub_1C3CFDDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3CFDE38(uint64_t a1)
{
  return sub_1C3CF7D1C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3CFDE54()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3CFDE94()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(0);
  }
  return result;
}

uint64_t sub_1C3CFDEC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3CF8674(*(void *)(v1 + 32), a1);
}

uint64_t sub_1C3CFDEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CF2574(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1C3CFDF0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3CEE9DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C3CFDF28(uint64_t *a1)
{
  return sub_1C3CEF098(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1F1F2D1E8, (uint64_t)sub_1C3CFDF94, &block_descriptor_55);
}

uint64_t sub_1C3CFDF6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CEF9B0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_1EB6FC000, a2);
}

uint64_t sub_1C3CFDF94()
{
  return sub_1C3CFE1D0((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1C3CEF77C);
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1C877E600);
  }
  return result;
}

uint64_t sub_1C3CFE000(uint64_t a1)
{
  return sub_1C3CEF8B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3CFE01C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3CFE064(uint64_t *a1)
{
  return sub_1C3CEF098(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), (uint64_t)&unk_1F1F2D260, (uint64_t)sub_1C3CFE1B8, &block_descriptor_65);
}

uint64_t sub_1C3CFE0A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3CEF9B0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_1EB6FC308, a2);
}

uint64_t objectdestroy_51Tm()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1C3CFE1B8()
{
  return sub_1C3CFE1D0((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1C3CEF644);
}

uint64_t sub_1C3CFE1D0(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(v4, v1 + v3, v5);
}

uint64_t sub_1C3CFE274(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C3CFE2DC(uint64_t *a1@<X8>)
{
}

uint64_t sub_1C3CFE2F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3CFDF0C(a1);
}

uint64_t sub_1C3CFE324(uint64_t a1)
{
  return sub_1C3CFE000(a1);
}

void sub_1C3CFE350(void *a1)
{
}

void __swiftcall ICQuery.filterSelection(_:accountObjectID:)(ICFilterSelection *__return_ptr retstr, NSManagedObjectContext _, NSManagedObjectID accountObjectID)
{
  swift_beginAccess();
  swift_retain();
  ICQueryType.filterSelection(managedObjectContext:accountObjectID:)(v5, _, accountObjectID);
  swift_release();
}

void __swiftcall ICQuery.tagSelection(_:)(ICTagSelection *__return_ptr retstr, NSManagedObjectContext_optional a2)
{
  isa = a2.value.super.isa;
  swift_beginAccess();
  swift_retain();
  v4.value.super.isa = isa;
  ICQueryType.tagSelection(managedObjectContext:)(v3, v4);
  swift_release();
}

uint64_t static ICEncryptionDelegateSupport.encrypt(attachment:data:)(void *a1, uint64_t a2, unint64_t a3)
{
  return a2;
}

NSObject *static ICEncryptionDelegateSupport.decrypt(attachment:data:)(void *a1, NSObject *a2, unint64_t a3)
{
  if ((objc_msgSend(a1, sel_ic_isDeallocating) & 1) == 0)
  {
    id v6 = objc_msgSend(a1, sel_managedObjectContext);
    if (v6)
    {
      uint64_t v7 = v6;
      if ((objc_msgSend(v6, sel_ic_isDeallocating) & 1) != 0
        || (id v8 = objc_msgSend(v7, sel_persistentStoreCoordinator)) == 0)
      {
        uint64_t v9 = v7;
      }
      else
      {
        uint64_t v9 = v8;
        id v10 = objc_msgSend(v8, sel_persistentStores);
        sub_1C3CFFE78();
        unint64_t v11 = sub_1C3DBA018();

        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_1C3DBAFB8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v13 = swift_bridgeObjectRelease();
        if (v12)
        {
          MEMORY[0x1F4188790](v13);
          sub_1C3CFED2C(a1);

          sub_1C3CE0C34((uint64_t)a2, a3);
          return a2;
        }
      }
    }
  }
  if (qword_1EA3858D0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C3DB9048();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EA387B40);
  a2 = sub_1C3DB9028();
  os_log_type_t v15 = sub_1C3DBA6A8();
  if (os_log_type_enabled(a2, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1C3A61000, a2, v15, "Failed decrypting because attachment is transitioning", v16, 2u);
    MEMORY[0x1C877E600](v16, -1, -1);
  }

  sub_1C3CFEFE4();
  swift_allocError();
  *uint64_t v17 = 0;
  swift_willThrow();
  sub_1C3CCDF74(0, 0xF000000000000000);
  return a2;
}

uint64_t static ICEncryptionDelegateSupport.encrypt(attachment:url:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = &v17[-v14];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v17[-v14], 1, 1, v6);
  uint64_t v18 = a2;
  uint64_t v19 = v15;
  sub_1C3CFED2C(a1);
  sub_1C3CFFF04((uint64_t)v15, (uint64_t)v13);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a3, v9, v6);
    sub_1C3C36FB8((uint64_t)v13);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a3, v13, v6);
  }
  return sub_1C3C36FB8((uint64_t)v15);
}

uint64_t sub_1C3CFEB9C()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387B40);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387B40);
  if (qword_1EA3856F0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA3866B8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

void sub_1C3CFEC64()
{
  id v0 = objc_msgSend(self, sel_sharedContext);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_workerManagedObjectContext);
  }
  else
  {
    id v2 = 0;
  }
  qword_1EA387B58 = (uint64_t)v2;
}

void sub_1C3CFECD4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
}

void sub_1C3CFECFC(void *a1)
{
  sub_1C3CFF038(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), (SEL *)&selRef_encryptSidecarData_, "Failed encrypting sidecar data for PaperKit attachment: %s");
}

void sub_1C3CFED2C(void *a1)
{
  if ((objc_msgSend(self, sel_isMainThread) & 1) == 0
    && (id v2 = objc_msgSend(a1, sel_managedObjectContext)) != 0
    && (unint64_t v3 = v2, v4 = objc_msgSend(v2, sel_concurrencyType), v3, v4 == (id)2))
  {
    id v5 = objc_msgSend(a1, sel_managedObjectContext);
    if (v5)
    {
      uint64_t v6 = v5;
      MEMORY[0x1F4188790](v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863E0);
      sub_1C3DBA838();
    }
  }
  else
  {
    id v7 = objc_msgSend(a1, sel_managedObjectContext);
    if (v7)
    {
      uint64_t v8 = v7;
      MEMORY[0x1F4188790](v7);
      sub_1C3DBA838();
    }
  }
}

unint64_t sub_1C3CFEFE4()
{
  unint64_t result = qword_1EA387B60;
  if (!qword_1EA387B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387B60);
  }
  return result;
}

void sub_1C3CFF038(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, SEL *a5, char *a6)
{
  if (objc_msgSend(a1, sel_isAuthenticated))
  {
    id v10 = objc_msgSend(a1, sel_cryptoStrategy);
    if (v10
      && (uint64_t v11 = v10,
          uint64_t v12 = (void *)sub_1C3DB8938(),
          id v13 = objc_msgSend(v11, *a5, v12),
          v12,
          swift_unknownObjectRelease(),
          v13))
    {
      uint64_t v14 = sub_1C3DB8958();
      uint64_t v16 = v15;

      uint64_t v17 = *a4;
      unint64_t v18 = a4[1];
      *a4 = v14;
      a4[1] = v16;
      sub_1C3CCDF74(v17, v18);
    }
    else
    {
      if (qword_1EA3858D0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C3DB9048();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EA387B40);
      id v20 = a1;
      uint64_t v21 = sub_1C3DB9028();
      os_log_type_t v22 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v21, v22))
      {
        format = a6;
        id v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v30 = v28;
        *(_DWORD *)id v23 = 136315138;
        id v24 = objc_msgSend(v20, sel_loggingDescription);
        uint64_t v25 = sub_1C3DB9C38();
        unint64_t v27 = v26;

        sub_1C3C516D0(v25, v27, &v30);
        sub_1C3DBA9A8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C3A61000, v21, v22, format, v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C877E600](v28, -1, -1);
        MEMORY[0x1C877E600](v23, -1, -1);
      }
      else
      {
      }
    }
  }
}

void sub_1C3CFF2C0(void *a1, uint64_t a2, uint8_t *a3)
{
  unsigned int v84 = a3;
  uint64_t v85 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v76 - v10;
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v76 - v12;
  uint64_t v14 = sub_1C3DB88F8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v86 = (char *)&v76 - v20;
  MEMORY[0x1F4188790](v19);
  os_log_type_t v22 = (char *)&v76 - v21;
  if (!objc_msgSend(a1, sel_isAuthenticated)) {
    return;
  }
  uint64_t v82 = v22;
  uint64_t v83 = v3;
  id v23 = objc_msgSend(a1, sel_cloudAccount);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_8:
    uint64_t v8 = v13;
LABEL_16:
    sub_1C3C36FB8((uint64_t)v8);
    if (qword_1EA3858D0 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1C3DB9048();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EA387B40);
    id v55 = a1;
    os_log_type_t v56 = sub_1C3DB9028();
    os_log_type_t v57 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v56, v57))
    {
      id v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v88 = v59;
      *(_DWORD *)id v58 = 136315138;
      uint64_t v86 = (char *)(v58 + 4);
      id v60 = objc_msgSend(v55, sel_loggingDescription);
      uint64_t v61 = sub_1C3DB9C38();
      unint64_t v63 = v62;

      uint64_t v87 = sub_1C3C516D0(v61, v63, &v88);
      sub_1C3DBA9A8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v56, v57, "Failed creating temporary file for encrypting sidecar file for PaperKit attachment: %s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v59, -1, -1);
      MEMORY[0x1C877E600](v58, -1, -1);
    }
    else
    {
    }
    return;
  }
  id v24 = v23;
  uint64_t v81 = v15;
  id v25 = objc_msgSend(v23, sel_temporaryDirectoryURL);

  if (v25)
  {
    sub_1C3DB8898();

    uint64_t v26 = v81;
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    uint64_t v28 = v11;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v26 = v81;
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    uint64_t v28 = v11;
    uint64_t v29 = 1;
  }
  uint64_t v80 = v27;
  v27(v28, v29, 1, v14);
  uint64_t v30 = v82;
  sub_1C3C2EF60((uint64_t)v11, (uint64_t)v13);
  id v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v31(v13, 1, v14) == 1) {
    goto LABEL_8;
  }
  uint64_t v32 = *(void (**)(void))(v26 + 32);
  uint64_t v77 = v31;
  uint64_t v78 = v26 + 32;
  id v76 = v32;
  ((void (*)(char *, char *, uint64_t))v32)(v30, v13, v14);
  id v79 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C3DD5130;
  *(void *)(v33 + 32) = sub_1C3DB88A8();
  *(void *)(v33 + 40) = v34;
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
  id v36 = objc_msgSend(v35, sel_UUIDString);

  uint64_t v37 = sub_1C3DB9C38();
  uint64_t v39 = v38;

  *(void *)(v33 + 48) = v37;
  *(void *)(v33 + 56) = v39;
  uint64_t v40 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(v79, sel_fileURLWithPathComponents_, v40);

  if (!v41)
  {
    uint64_t v44 = v81;
    v80(v8, 1, 1, v14);
    goto LABEL_15;
  }
  sub_1C3DB8898();

  uint64_t v42 = v76;
  ((void (*)(char *, char *, uint64_t))v76)(v8, v18, v14);
  uint64_t v43 = v81;
  v80(v8, 0, 1, v14);
  uint64_t v44 = v43;
  if (v77(v8, 1, v14) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v82, v14);
    goto LABEL_16;
  }
  uint64_t v45 = v86;
  v42();
  id v46 = objc_msgSend(a1, sel_cryptoStrategy);
  if (!v46) {
    goto LABEL_22;
  }
  dispatch_semaphore_t v47 = v46;
  long long v48 = v42;
  uint64_t v49 = (void *)sub_1C3DB8848();
  uint64_t v50 = (void *)sub_1C3DB8848();
  unsigned int v51 = objc_msgSend(v47, sel_encryptSidecarFileFromURL_toURL_, v49, v50);
  swift_unknownObjectRelease();

  uint64_t v52 = v48;
  uint64_t v44 = v81;

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v82, v14);
    uint64_t v53 = v84;
    sub_1C3C36FB8((uint64_t)v84);
    ((void (*)(uint8_t *, char *, uint64_t))v52)(v53, v45, v14);
    v80((char *)v53, 0, 1, v14);
  }
  else
  {
LABEL_22:
    if (qword_1EA3858D0 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1C3DB9048();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EA387B40);
    id v65 = a1;
    uint64_t v66 = sub_1C3DB9028();
    os_log_type_t v67 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v88 = v85;
      unsigned int v84 = v68;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v80 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v68 + 4);
      id v69 = objc_msgSend(v65, sel_loggingDescription);
      uint64_t v70 = sub_1C3DB9C38();
      unint64_t v72 = v71;

      uint64_t v87 = sub_1C3C516D0(v70, v72, &v88);
      sub_1C3DBA9A8();

      swift_bridgeObjectRelease();
      uint64_t v73 = v84;
      _os_log_impl(&dword_1C3A61000, v66, v67, "Failed encrypting sidecar file for PaperKit attachment: %s", v84, 0xCu);
      uint64_t v74 = v85;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v74, -1, -1);
      MEMORY[0x1C877E600](v73, -1, -1);

      uint64_t v75 = *(void (**)(char *, uint64_t))(v44 + 8);
      v75(v86, v14);
    }
    else
    {

      uint64_t v75 = *(void (**)(char *, uint64_t))(v44 + 8);
      v75(v45, v14);
    }
    v75(v82, v14);
  }
}

void sub_1C3CFFB80(void *a1@<X0>, void **a2@<X1>, unsigned char *a3@<X8>)
{
  if (objc_msgSend(a1, sel_ic_obtainPermanentObjectIDIfNecessary))
  {
    id v6 = objc_msgSend(a1, sel_objectID);
    uint64_t v7 = *a2;
    *a2 = v6;
  }
  else
  {
    if (qword_1EA3858D0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C3DB9048();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EA387B40);
    id v9 = a1;
    uint64_t v10 = sub_1C3DB9028();
    os_log_type_t v11 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      id v14 = objc_msgSend(v9, sel_loggingDescription);
      uint64_t v15 = sub_1C3DB9C38();
      unint64_t v18 = a3;
      unint64_t v17 = v16;

      sub_1C3C516D0(v15, v17, &v19);
      sub_1C3DBA9A8();

      a3 = v18;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v10, v11, "Cannot obtain permanent object ID for PaperKit attachment: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v13, -1, -1);
      MEMORY[0x1C877E600](v12, -1, -1);
    }
    else
    {
    }
  }
  *a3 = 0;
}

void sub_1C3CFFDB4(uint64_t a1, void (*a2)(void))
{
  if (qword_1EA3858D8 != -1) {
    swift_once();
  }
  if (qword_1EA387B58)
  {
    id v4 = objc_msgSend((id)qword_1EA387B58, sel_objectWithID_, a1);
    if (v4)
    {
      uint64_t v5 = v4;
      self;
      if (swift_dynamicCastObjCClass()) {
        a2();
      }
    }
  }
}

unint64_t sub_1C3CFFE78()
{
  unint64_t result = qword_1EA387B68;
  if (!qword_1EA387B68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387B68);
  }
  return result;
}

void sub_1C3CFFEB8(void *a1)
{
  sub_1C3CFF038(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), (SEL *)&selRef_decryptSidecarData_, "Failed decrypting sidecar data for PaperKit attachment: %s");
}

void sub_1C3CFFEE8(void *a1)
{
  sub_1C3CFF2C0(a1, *(void *)(v1 + 16), *(uint8_t **)(v1 + 24));
}

uint64_t sub_1C3CFFF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ICEncryptionDelegateSupport()
{
  return &type metadata for ICEncryptionDelegateSupport;
}

unsigned char *storeEnumTagSinglePayload for ICEncryptionDelegateSupport.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D00048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICEncryptionDelegateSupport.Error()
{
  return &type metadata for ICEncryptionDelegateSupport.Error;
}

unint64_t sub_1C3D00084()
{
  unint64_t result = qword_1EA387B70;
  if (!qword_1EA387B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387B70);
  }
  return result;
}

uint64_t sub_1C3D000D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_1C3D00108()
{
  sub_1C3CFFDB4(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1C3D00128@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

void sub_1C3D0015C(unsigned char *a1@<X8>)
{
  sub_1C3CFFB80(*(void **)(v1 + 16), *(void ***)(v1 + 24), a1);
}

unint64_t static MessageChunking.encodeAndChunk(_:size:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1C3D00190(a1, a2, a3);
}

unint64_t sub_1C3D00190(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v53 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E60);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (uint64_t)&v41 - v10;
  uint64_t v49 = sub_1C3DB8B98();
  MEMORY[0x1F4188790](v49);
  uint64_t v52 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 1) {
    goto LABEL_36;
  }
  uint64_t v13 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v13) = HIDWORD(v53) - v53;
      if (__OFSUB__(HIDWORD(v53), v53)) {
        goto LABEL_40;
      }
      uint64_t v13 = (int)v13;
LABEL_7:
      double v17 = ceil((double)v13 / (double)a3);
      if ((~*(void *)&v17 & 0x7FF0000000000000) == 0) {
        goto LABEL_37;
      }
      if (v17 <= -9.22337204e18) {
        goto LABEL_38;
      }
      if (v17 >= 9.22337204e18) {
        goto LABEL_39;
      }
      uint64_t v18 = (uint64_t)v17;
      if ((uint64_t)v17 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387D90);
        unint64_t v19 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        unint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1C3DD3D30;
        uint64_t v21 = (uint64_t *)(v20 + v19);
        uint64_t v22 = v53;
        *uint64_t v21 = v53;
        v21[1] = a2;
        swift_storeEnumTagMultiPayload();
        sub_1C3CE0C34(v22, a2);
        return v20;
      }
      uint64_t v41 = v3;
      uint64_t v42 = v11;
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      if (v18 >= 1)
      {
        uint64_t v23 = 0;
        uint64_t v43 = BYTE6(a2);
        uint64_t v44 = v53 >> 32;
        unint64_t v20 = MEMORY[0x1E4FBC860];
        uint64_t v45 = a3;
        id v46 = (void (**)(uint64_t, char *, uint64_t))(v42 + 16);
        unint64_t v47 = a2;
        unint64_t v48 = a2 >> 62;
        while (1)
        {
          uint64_t v24 = v23 * a3;
          if ((unsigned __int128)(v23 * (__int128)a3) >> 64 != (v23 * a3) >> 63) {
            break;
          }
          uint64_t v25 = 0;
          switch(v48)
          {
            case 1uLL:
              uint64_t v25 = v44;
              break;
            case 2uLL:
              uint64_t v25 = *(void *)(v53 + 24);
              break;
            case 3uLL:
              break;
            default:
              uint64_t v25 = v43;
              break;
          }
          if (__OFADD__(v24, a3)) {
            goto LABEL_34;
          }
          if (v24 + a3 >= v25) {
            uint64_t v26 = v25;
          }
          else {
            uint64_t v26 = v24 + a3;
          }
          if (v26 < v24) {
            goto LABEL_35;
          }
          uint64_t v27 = sub_1C3DB8978();
          uint64_t v54 = v28;
          uint64_t v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
          uint64_t v30 = v29[12];
          uint64_t v31 = v29[16];
          uint64_t v32 = (uint64_t)v9;
          unint64_t v33 = v20;
          uint64_t v34 = v55;
          id v35 = (uint64_t *)(v55 + v29[20]);
          (*v46)(v55, v52, v49);
          *(void *)(v34 + v30) = v23;
          *(void *)(v34 + v31) = v18;
          uint64_t v36 = v54;
          *id v35 = v27;
          v35[1] = v36;
          id v9 = (char *)v32;
          swift_storeEnumTagMultiPayload();
          uint64_t v37 = v34;
          unint64_t v20 = v33;
          sub_1C3D073E4(v37, v32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v20 = sub_1C3D834F0(0, *(void *)(v33 + 16) + 1, 1, v33);
          }
          unint64_t v39 = *(void *)(v20 + 16);
          unint64_t v38 = *(void *)(v20 + 24);
          if (v39 >= v38 >> 1) {
            unint64_t v20 = sub_1C3D834F0(v38 > 1, v39 + 1, 1, v20);
          }
          a3 = v45;
          *(void *)(v20 + 16) = v39 + 1;
          sub_1C3CB3BF8((uint64_t)v9, v20+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v39, &qword_1EA388E60);
          sub_1C3D0744C(v55);
          if (v18 == ++v23) {
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1C3D00650);
      }
      unint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_31:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v52, v49);
      return v20;
    case 2uLL:
      uint64_t v15 = *(void *)(v53 + 16);
      uint64_t v14 = *(void *)(v53 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v13 = v14 - v15;
      if (!v16) {
        goto LABEL_7;
      }
      goto LABEL_41;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v13 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t sub_1C3D00670(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v48 = a1;
  uint64_t v47 = type metadata accessor for MessageChunking.Message();
  uint64_t v5 = *(void *)(v47 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v47);
  uint64_t v44 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v35 - v8;
  uint64_t v45 = sub_1C3DB8B98();
  MEMORY[0x1F4188790](v45);
  id v46 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 1) {
    goto LABEL_30;
  }
  uint64_t v12 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(v48) - v48;
      if (__OFSUB__(HIDWORD(v48), v48)) {
        goto LABEL_34;
      }
      uint64_t v12 = (int)v12;
LABEL_7:
      double v16 = ceil((double)v12 / (double)a3);
      if ((~*(void *)&v16 & 0x7FF0000000000000) == 0) {
        goto LABEL_31;
      }
      if (v16 <= -9.22337204e18) {
        goto LABEL_32;
      }
      if (v16 >= 9.22337204e18) {
        goto LABEL_33;
      }
      uint64_t v17 = (uint64_t)v16;
      if ((uint64_t)v16 == 1)
      {
        sub_1C3DBB258();
        swift_allocObject();
        uint64_t v18 = sub_1C3DBA048();
        uint64_t v19 = v48;
        *unint64_t v20 = v48;
        v20[1] = a2;
        swift_storeEnumTagMultiPayload();
        sub_1C3C3370C();
        sub_1C3CE0C34(v19, a2);
        return v18;
      }
      uint64_t v36 = v10;
      unint64_t v43 = a2;
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      uint64_t v49 = sub_1C3DBA098();
      if (v17 >= 1)
      {
        uint64_t v22 = 0;
        uint64_t v37 = BYTE6(v43);
        uint64_t v38 = v48 >> 32;
        uint64_t v40 = (void (**)(char *, char *, uint64_t))(v5 + 16);
        uint64_t v41 = (void (**)(char *, char *, uint64_t))(v36 + 16);
        unint64_t v39 = (void (**)(char *, uint64_t))(v5 + 8);
        unint64_t v42 = a2 >> 62;
        while (1)
        {
          uint64_t v23 = v22 * a3;
          if ((unsigned __int128)(v22 * (__int128)a3) >> 64 != (v22 * a3) >> 63) {
            break;
          }
          uint64_t v24 = 0;
          switch(v42)
          {
            case 1uLL:
              uint64_t v24 = v38;
              break;
            case 2uLL:
              uint64_t v24 = *(void *)(v48 + 24);
              break;
            case 3uLL:
              break;
            default:
              uint64_t v24 = v37;
              break;
          }
          if (__OFADD__(v23, a3)) {
            goto LABEL_28;
          }
          if (v23 + a3 >= v24) {
            uint64_t v25 = v24;
          }
          else {
            uint64_t v25 = v23 + a3;
          }
          if (v25 < v23) {
            goto LABEL_29;
          }
          uint64_t v26 = sub_1C3DB8978();
          uint64_t v28 = v27;
          uint64_t v29 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
          uint64_t v30 = a3;
          uint64_t v31 = v29[12];
          uint64_t v32 = v29[16];
          unint64_t v33 = (uint64_t *)&v9[v29[20]];
          (*v41)(v9, v46, v45);
          *(void *)&v9[v31] = v22;
          a3 = v30;
          *(void *)&v9[v32] = v17;
          *unint64_t v33 = v26;
          v33[1] = v28;
          uint64_t v34 = v47;
          swift_storeEnumTagMultiPayload();
          (*v40)(v44, v9, v34);
          sub_1C3DBA128();
          sub_1C3DBA0E8();
          (*v39)(v9, v34);
          if (v17 == ++v22) {
            goto LABEL_25;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x1C3D00AFCLL);
      }
LABEL_25:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v46, v45);
      return v49;
    case 2uLL:
      uint64_t v14 = *(void *)(v48 + 16);
      uint64_t v13 = *(void *)(v48 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_7;
      }
      goto LABEL_35;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t static MessageChunking.encodeAndChunk<A>(_:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C3DB86F8();
  swift_allocObject();
  sub_1C3DB86E8();
  uint64_t v8 = sub_1C3DB86D8();
  if (!v5)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    a5 = sub_1C3D00670(v8, v9, a2);
    sub_1C3C58FC8(v10, v11);
  }
  swift_release();
  return a5;
}

uint64_t sub_1C3D00C00()
{
  uint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C3D00C54(char a1)
{
  if (a1) {
    return 1953653104;
  }
  else {
    return 1886220131;
  }
}

BOOL sub_1C3D00C74()
{
  uint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_1C3D00CBC()
{
  unint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C3D00D0C(char a1)
{
  return qword_1C3DDA0F0[a1];
}

uint64_t sub_1C3D00D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D00D98(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C3D00E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D00E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D00EE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D00C00();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D00F14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C3D00C54(*v1);
  *a1 = result;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_1C3D00F44()
{
  return sub_1C3D00C54(*v0);
}

uint64_t sub_1C3D00F64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D00C00();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D00F8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C592F4();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D00FC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C3D01014(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C3D01068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D010DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C3D01148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D011B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_1C3D01228@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C3D00C74();
  *a1 = result;
  return result;
}

void sub_1C3D01260(void *a1@<X8>)
{
  *a1 = 7562605;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3D01274()
{
  return 7562605;
}

BOOL sub_1C3D01284@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C3D00C74();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D012B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3C75194();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C3D012EC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C3D01340(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C3D01394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D01408(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C3D01474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D014E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D01554@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D00CBC();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D01584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C3D00D0C(*v1);
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1C3D015B4()
{
  return sub_1C3D00D0C(*v0);
}

uint64_t sub_1C3D015D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D00D08();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D015FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D07380();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D01630(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C3D01684(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t static MessageChunking.Message.== infix(_:_:)(char *a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v51 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MessageChunking.Message();
  unint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (uint64_t *)((char *)&v45 - v10);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unint64_t v52 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  BOOL v15 = (char *)&v45 - v14;
  double v16 = (uint64_t *)((char *)&v45 + *(int *)(v13 + 48) - v14);
  unint64_t v50 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v17((char *)&v45 - v14, v53, v5);
  v17((char *)v16, (char *)v54, v5);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v17((char *)v11, v15, v5);
    uint64_t v40 = *v11;
    unint64_t v41 = v11[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v42 = *v16;
      unint64_t v43 = v16[1];
      char v39 = sub_1C3D064D8(v40, v41, *v16, v43);
      sub_1C3C58FC8(v42, v43);
      sub_1C3C58FC8(v40, v41);
LABEL_13:
      unint64_t v35 = v50;
      goto LABEL_14;
    }
    sub_1C3C58FC8(v40, v41);
LABEL_10:
    char v39 = 0;
    unint64_t v35 = v52;
    uint64_t v5 = TupleTypeMetadata2;
    goto LABEL_14;
  }
  uint64_t v53 = v4;
  uint64_t v54 = v2;
  v17(v9, v15, v5);
  uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
  uint64_t v19 = v18[12];
  uint64_t v20 = *(void *)&v9[v19];
  uint64_t v21 = v18[16];
  uint64_t v48 = *(void *)&v9[v21];
  uint64_t v49 = v20;
  uint64_t v22 = v18[20];
  uint64_t v24 = *(void *)&v9[v22];
  unint64_t v23 = *(void *)&v9[v22 + 8];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C3C58FC8(v24, v23);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v54);
    goto LABEL_10;
  }
  unint64_t v52 = v23;
  uint64_t v46 = *(uint64_t *)((char *)v16 + v19);
  uint64_t v47 = v24;
  uint64_t v45 = *(uint64_t *)((char *)v16 + v21);
  uint64_t v25 = *(uint64_t *)((char *)v16 + v22);
  unint64_t v26 = *(uint64_t *)((char *)v16 + v22 + 8);
  uint64_t v27 = v51;
  uint64_t v28 = v53;
  uint64_t v29 = v54;
  (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v53, v16, v54);
  char v30 = sub_1C3DB8B48();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  v31(v9, v29);
  if ((v30 & 1) == 0 || (uint64_t v32 = v25, v33 = v26, v49 != v46))
  {
    v31(v28, v29);
    sub_1C3C58FC8(v25, v26);
    sub_1C3C58FC8(v47, v52);
    char v39 = 0;
    goto LABEL_13;
  }
  uint64_t v34 = v47;
  unint64_t v35 = v50;
  unint64_t v36 = v52;
  if (v48 == v45)
  {
    char v37 = sub_1C3D064D8(v47, v52, v32, v33);
    uint64_t v38 = v32;
    char v39 = v37;
    sub_1C3C58FC8(v38, v33);
    sub_1C3C58FC8(v34, v36);
    v31(v53, v29);
  }
  else
  {
    v31(v53, v29);
    sub_1C3C58FC8(v32, v33);
    sub_1C3C58FC8(v34, v36);
    char v39 = 0;
  }
LABEL_14:
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v5);
  return v39 & 1;
}

uint64_t type metadata accessor for MessageChunking.Message()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MessageChunking.Message.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageChunking.Message.PartialCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = v4;
  uint64_t v51 = sub_1C3DBB208();
  uint64_t v35 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  unint64_t v50 = (char *)&v34 - v5;
  uint64_t v46 = sub_1C3DB8B98();
  uint64_t v41 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MessageChunking.Message.CompleteCodingKeys();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = v7;
  uint64_t v40 = sub_1C3DBB208();
  uint64_t v36 = *(void *)(v40 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v40);
  char v39 = (char *)&v34 - v9;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MessageChunking.Message.CodingKeys();
  swift_getWitnessTable();
  uint64_t v47 = sub_1C3DBB208();
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v14 = (char *)&v34 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3DBB6D8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v12, v49, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    BOOL v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
    uint64_t v16 = *(uint64_t *)((char *)v12 + v15[12]);
    char v39 = *(char **)((char *)v12 + v15[16]);
    uint64_t v40 = v16;
    uint64_t v17 = (uint64_t *)((char *)v12 + v15[20]);
    unint64_t v18 = v17[1];
    uint64_t v49 = *v17;
    uint64_t v19 = v41;
    (*(void (**)(char *, uint64_t *, uint64_t))(v41 + 32))(v45, v12, v46);
    LOBYTE(v52) = 1;
    uint64_t v20 = v47;
    sub_1C3DBB158();
    LOBYTE(v52) = 0;
    sub_1C3D07514(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
    uint64_t v21 = v48;
    sub_1C3DBB1E8();
    if (v21)
    {
      sub_1C3C58FC8(v49, v18);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v50, v51);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v14, v20);
    }
    uint64_t v30 = v49;
    LOBYTE(v52) = 1;
    sub_1C3DBB1D8();
    LOBYTE(v52) = 2;
    sub_1C3DBB1D8();
    uint64_t v52 = v30;
    unint64_t v53 = v18;
    char v54 = 3;
    sub_1C3D067B8();
    sub_1C3DBB1E8();
    unint64_t v33 = v45;
    uint64_t v32 = v46;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v33, v32);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v20);
    uint64_t v28 = v30;
    unint64_t v29 = v18;
  }
  else
  {
    uint64_t v22 = v36;
    uint64_t v24 = *v12;
    unint64_t v23 = v12[1];
    LOBYTE(v52) = 0;
    uint64_t v25 = v39;
    uint64_t v26 = v47;
    sub_1C3DBB158();
    uint64_t v52 = v24;
    unint64_t v53 = v23;
    sub_1C3D067B8();
    uint64_t v27 = v40;
    sub_1C3DBB1E8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v26);
    uint64_t v28 = v24;
    unint64_t v29 = v23;
  }
  return sub_1C3C58FC8(v28, v29);
}

uint64_t MessageChunking.Message.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v76 = a1;
  uint64_t v66 = a2;
  uint64_t v2 = type metadata accessor for MessageChunking.Message.PartialCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v63 = v2;
  uint64_t v58 = sub_1C3DBB128();
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  id v65 = (char *)&v51 - v3;
  uint64_t v4 = type metadata accessor for MessageChunking.Message.CompleteCodingKeys();
  uint64_t v5 = swift_getWitnessTable();
  uint64_t v60 = v4;
  uint64_t v59 = v5;
  uint64_t v57 = sub_1C3DBB128();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v61 = (char *)&v51 - v6;
  type metadata accessor for MessageChunking.Message.CodingKeys();
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v69 = sub_1C3DBB128();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = type metadata accessor for MessageChunking.Message();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  BOOL v15 = (char *)&v51 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v51 - v16;
  __swift_project_boxed_opaque_existential_1(v76, v76[3]);
  uint64_t v68 = v8;
  uint64_t v18 = v71;
  sub_1C3DBB6B8();
  if (v18) {
    goto LABEL_9;
  }
  uint64_t v70 = 0;
  uint64_t v52 = v15;
  char v54 = v12;
  unint64_t v53 = v17;
  uint64_t v71 = v9;
  uint64_t v20 = v68;
  uint64_t v19 = v69;
  *(void *)&long long v72 = sub_1C3DBB118();
  sub_1C3DBA128();
  swift_getWitnessTable();
  *(void *)&long long v74 = sub_1C3DBAA98();
  *((void *)&v74 + 1) = v21;
  *(void *)&long long v75 = v22;
  *((void *)&v75 + 1) = v23;
  sub_1C3DBAA88();
  swift_getWitnessTable();
  sub_1C3DBA578();
  char v24 = v72;
  uint64_t v25 = v19;
  if (v72 == 2 || (v51 = v74, long long v72 = v74, v73 = v75, (sub_1C3DBA5A8() & 1) == 0))
  {
    uint64_t v31 = sub_1C3DBAD78();
    swift_allocError();
    unint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0);
    *unint64_t v33 = v71;
    sub_1C3DBB068();
    sub_1C3DBAD48();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBA70], v31);
    swift_willThrow();
LABEL_8:
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v25);
LABEL_9:
    uint64_t v30 = v76;
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
  }
  if (v24)
  {
    LOBYTE(v72) = 1;
    uint64_t v35 = v70;
    sub_1C3DBB058();
    uint64_t v28 = v66;
    if (!v35)
    {
      sub_1C3DB8B98();
      LOBYTE(v72) = 0;
      sub_1C3D07514(&qword_1EA386F28, MEMORY[0x1E4F27990]);
      uint64_t v38 = v58;
      sub_1C3DBB108();
      LOBYTE(v72) = 1;
      uint64_t v43 = sub_1C3DBB0F8();
      uint64_t v44 = v56;
      uint64_t v70 = v43;
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
      *(void *)&v54[*(int *)(v45 + 48)] = v70;
      LOBYTE(v72) = 2;
      uint64_t v46 = sub_1C3DBB0F8();
      uint64_t v47 = *(int *)(v45 + 64);
      uint64_t v48 = v54;
      *(void *)&v54[v47] = v46;
      LOBYTE(v72) = 3;
      sub_1C3D0680C();
      uint64_t v49 = v65;
      sub_1C3DBB108();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v38);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v25);
      unint64_t v50 = v48;
      uint64_t v40 = v71;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      uint64_t v42 = v53;
      v41(v53, v50, v40);
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  LOBYTE(v72) = 0;
  uint64_t v26 = v61;
  uint64_t v27 = v70;
  sub_1C3DBB058();
  uint64_t v28 = v66;
  uint64_t v29 = v64;
  if (v27)
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v19);
    uint64_t v30 = v76;
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
  }
  sub_1C3D0680C();
  uint64_t v36 = v57;
  sub_1C3DBB108();
  uint64_t v37 = v67;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v36);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v25);
  char v39 = v52;
  *(_OWORD *)uint64_t v52 = v72;
  uint64_t v40 = v71;
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v42 = v53;
  v41(v53, v39, v40);
LABEL_15:
  v41(v28, v42, v40);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
}

uint64_t sub_1C3D02C84@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return MessageChunking.Message.init(from:)(a1, a2);
}

uint64_t sub_1C3D02CA8(void *a1, uint64_t a2)
{
  return MessageChunking.Message.encode(to:)(a1, a2);
}

uint64_t sub_1C3D02CC0(char *a1, uint64_t a2)
{
  return static MessageChunking.Message.== infix(_:_:)(a1, a2);
}

unint64_t MessageChunking.UnsafeAppendingAccumulator.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C3C82140(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t MessageChunking.UnsafeAppendingAccumulator.process<A>(incoming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v53 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for MessageChunking.Message();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v46 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v46 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = a3;
    uint64_t v48 = a2;
    uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
    uint64_t v47 = *(uint64_t *)((char *)v16 + v18[12]);
    uint64_t v51 = *(uint64_t *)((char *)v16 + v18[16]);
    uint64_t v19 = (uint64_t *)((char *)v16 + v18[20]);
    uint64_t v20 = *v19;
    unint64_t v54 = v19[1];
    uint64_t v21 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    uint64_t v49 = v8;
    v21(v13, v16, v8);
    uint64_t v22 = v55;
    uint64_t v23 = *v55;
    uint64_t v24 = *(void *)(*v55 + 16);
    uint64_t v50 = a4;
    if (v24 && (unint64_t v25 = sub_1C3D03C90((uint64_t)v13), (v26 & 1) != 0))
    {
      uint64_t v27 = (uint64_t *)(*(void *)(v23 + 56) + 16 * v25);
      uint64_t v28 = *v27;
      unint64_t v29 = v27[1];
      sub_1C3CE0C34(*v27, v29);
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0xC000000000000000;
    }
    *(void *)&long long v57 = v28;
    *((void *)&v57 + 1) = v29;
    sub_1C3CE0C34(v28, v29);
    unint64_t v35 = v54;
    sub_1C3CE0C34(v20, v54);
    sub_1C3D06090(v20, v35);
    sub_1C3C58FC8(v20, v35);
    uint64_t result = sub_1C3C58FC8(v28, v29);
    uint64_t v36 = v52;
    if (__OFSUB__(v51, 1))
    {
      __break(1u);
    }
    else
    {
      long long v37 = v57;
      if (v47 == v51 - 1)
      {
        sub_1C3D0498C((uint64_t)v13, &v57);
        sub_1C3CCDF74(v57, *((unint64_t *)&v57 + 1));
        *(void *)&long long v57 = *v22;
        uint64_t v38 = sub_1C3DBA938();
        uint64_t v58 = v36;
        swift_bridgeObjectRetain();
        uint64_t WitnessTable = swift_getWitnessTable();
        sub_1C3D031F4(v37, *((unint64_t *)&v37 + 1), v38, WitnessTable, v50);
        sub_1C3C58FC8(v20, v54);
        sub_1C3C58FC8(v37, *((unint64_t *)&v37 + 1));
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v49);
      }
      else
      {
        uint64_t v40 = (uint64_t)v53;
        uint64_t v41 = v13;
        uint64_t v42 = v13;
        uint64_t v43 = v49;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v53, v41, v49);
        sub_1C3CE0C34(v37, *((unint64_t *)&v37 + 1));
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v57 = *v22;
        void *v22 = 0x8000000000000000;
        sub_1C3D05BD8(v37, *((uint64_t *)&v37 + 1), v40, isUniquelyReferenced_nonNull_native);
        void *v22 = v57;
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        v45(v40, v43);
        sub_1C3C58FC8(v20, v54);
        sub_1C3C58FC8(v37, *((unint64_t *)&v37 + 1));
        v45((uint64_t)v42, v43);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v50, 1, 1);
      }
    }
  }
  else
  {
    uint64_t v30 = *v16;
    unint64_t v31 = v16[1];
    uint64_t v32 = sub_1C3DBA938();
    uint64_t v56 = a3;
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_getWitnessTable();
    sub_1C3D031F4(v30, v31, v32, v33, a4);
    swift_bridgeObjectRelease();
    return sub_1C3C58FC8(v30, v31);
  }
  return result;
}

uint64_t sub_1C3D031F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v20[1] = a4;
  uint64_t v21 = a5;
  uint64_t v8 = sub_1C3DBA938();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = a1;
  v20[3] = a2;
  sub_1C3CE0C34(a1, a2);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, a3);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v18(v15, v12, a3);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v21, v15, a3);
  }
  else
  {
    v17(v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_1C3DB86C8();
    swift_allocObject();
    sub_1C3DB86B8();
    sub_1C3DB86A8();
    return swift_release();
  }
}

uint64_t MessageChunking.Message.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
    uint64_t v13 = *(uint64_t *)((char *)v10 + v12[12]);
    uint64_t v14 = *(uint64_t *)((char *)v10 + v12[16]);
    uint64_t v15 = (uint64_t *)((char *)v10 + v12[20]);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v8, v10, v4);
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, ".partial(t=");
    HIDWORD(v31[1]) = -352321536;
    uint64_t v30 = *(void *)(a1 + 16);
    swift_getMetatypeMetadata();
    sub_1C3DB9C88();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3D07514((unint64_t *)&qword_1EA385DC0, MEMORY[0x1E4F27990]);
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      JUMPOUT(0x1C3D0395CLL);
    }
    uint64_t v30 = v13 + 1;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t v30 = v14;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t v18 = 0;
    switch(v16 >> 62)
    {
      case 1uLL:
        LODWORD(v18) = HIDWORD(v17) - v17;
        if (__OFSUB__(HIDWORD(v17), v17)) {
          goto LABEL_19;
        }
        uint64_t v18 = (int)v18;
LABEL_14:
        uint64_t v30 = v18;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3C58FC8(v17, v16);
        uint64_t v25 = v31[0];
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        break;
      case 2uLL:
        uint64_t v27 = *(void *)(v17 + 16);
        uint64_t v26 = *(void *)(v17 + 24);
        BOOL v24 = __OFSUB__(v26, v27);
        uint64_t v18 = v26 - v27;
        if (!v24) {
          goto LABEL_14;
        }
        goto LABEL_20;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t v18 = BYTE6(v16);
        goto LABEL_14;
    }
  }
  else
  {
    uint64_t v19 = *v10;
    unint64_t v20 = v10[1];
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, ".complete(t=");
    BYTE5(v31[1]) = 0;
    HIWORD(v31[1]) = -5120;
    uint64_t v30 = *(void *)(a1 + 16);
    swift_getMetatypeMetadata();
    sub_1C3DB9C88();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    uint64_t v21 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v19) - v19;
        if (__OFSUB__(HIDWORD(v19), v19)) {
          goto LABEL_17;
        }
        uint64_t v21 = (int)v21;
LABEL_10:
        uint64_t v30 = v21;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9D68();
        sub_1C3C58FC8(v19, v20);
        uint64_t v25 = v31[0];
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_10;
        }
        goto LABEL_18;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v21 = BYTE6(v20);
        goto LABEL_10;
    }
  }
  return v25;
}

uint64_t static MessageChunking.Message<>.messageIdentifier.getter()
{
  return sub_1C3DB8E88();
}

uint64_t sub_1C3D039A4()
{
  return static MessageChunking.Message<>.messageIdentifier.getter();
}

uint64_t sub_1C3D039B0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C3CE0C34(a2, a3);
      uint64_t v10 = (char *)sub_1C3DB8418();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C3DB8438();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C3DB8428();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C3D03C14);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1C3C58FC8(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1C3DB8418();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C3DB8438();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C3DB8428();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

unint64_t sub_1C3D03C24(uint64_t a1)
{
  sub_1C3DBB5D8();
  NoteEditActivityEvent.Parents.hash(into:)();
  uint64_t v2 = sub_1C3DBB608();
  return sub_1C3D03FB8(a1, v2);
}

unint64_t sub_1C3D03C90(uint64_t a1)
{
  sub_1C3DB8B98();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C3D07514((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C3DB9B08();
  return sub_1C3D044C8(a1, v3, MEMORY[0x1E4F27990], &qword_1EB6FC058, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1C3D03D64(uint64_t a1)
{
  sub_1C3DBAF28();
  uint64_t v2 = sub_1C3DB9B08();
  return sub_1C3D040F0(a1, v2);
}

unint64_t sub_1C3D03DC8(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBABB8();
  return sub_1C3D04288(a1, v2);
}

unint64_t sub_1C3D03E0C(uint64_t a1)
{
  sub_1C3DB9C38();
  sub_1C3DBB5D8();
  sub_1C3DB9D08();
  uint64_t v2 = sub_1C3DBB608();
  swift_bridgeObjectRelease();
  return sub_1C3D04350(a1, v2);
}

unint64_t sub_1C3D03EA0(uint64_t a1)
{
  sub_1C3DB88F8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C3D07514(&qword_1EB6FC018, MEMORY[0x1E4F276F0]);
  uint64_t v3 = sub_1C3DB9B08();
  return sub_1C3D044C8(a1, v3, MEMORY[0x1E4F276F0], &qword_1EB6FC020, v2, MEMORY[0x1E4F27708]);
}

unint64_t sub_1C3D03F74(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBA8D8();
  return sub_1C3D04668(a1, v2);
}

unint64_t sub_1C3D03FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NoteEditActivityEvent.Parents(0) - 8;
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_1C3D0755C(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      char v13 = _s11NotesShared21NoteEditActivityEventV7ParentsO2eeoiySbAE_AEtFZ_0((uint64_t)v8, a1);
      sub_1C3D075C0((uint64_t)v8);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1C3D040F0(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1C3DBAF28();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1C3DB9BE8();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1C3D04288(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C3D07388(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C877C0D0](v9, a1);
      sub_1C3CC629C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C3D04350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C3DB9C38();
    uint64_t v8 = v7;
    if (v6 == sub_1C3DB9C38() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C3DB9C38();
          uint64_t v15 = v14;
          if (v13 == sub_1C3DB9C38() && v15 == v16) {
            break;
          }
          char v18 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C3D044C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  char v24 = a5;
  uint64_t v25 = a6;
  int v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    char v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1C3D07514(v23, v24);
      char v19 = sub_1C3DB9BE8();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1C3D04668(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C3C65A38();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1C3DBA8E8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1C3DBA8E8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

double sub_1C3D04774@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C3D03EA0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C3D84684();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C3DB88F8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1C3CB3BF8(*(void *)(v9 + 56) + 40 * v6, a2, &qword_1EB6FC380);
    sub_1C3D04C70(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 32) = -1;
  }
  return result;
}

uint64_t sub_1C3D04894(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C3D03EA0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C3D84944();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1C3DB88F8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1C3D04F94(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1C3D0498C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C3D03C90(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C3D84BDC();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C3DB8B98();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    *a2 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v6);
    sub_1C3D0528C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = xmmword_1C3DD97F0;
  }
  return result;
}

unint64_t sub_1C3D04A98(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C3DBAAB8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C3DBB5D8();
        swift_bridgeObjectRetain();
        sub_1C3DB9D08();
        uint64_t v9 = sub_1C3DBB608();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    char v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *char v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C3D04C70(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_1C3DBAAB8();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      long long v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v16 = v15;
      do
      {
        uint64_t v17 = v9;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v11;
        v38(v8, *(void *)(a2 + 48) + v16 * v11, v4);
        sub_1C3D07514(&qword_1EB6FC018, MEMORY[0x1E4F276F0]);
        uint64_t v20 = sub_1C3DB9B08();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v21 = v20 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v21 >= v39 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            uint64_t v16 = v18;
            unint64_t result = v24 + v18 * a1;
            if (v18 * a1 < v19 || result >= v24 + v19 + v18)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v9 = v17;
            }
            else
            {
              BOOL v25 = v18 * a1 == v19;
              uint64_t v9 = v17;
              if (!v25) {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v26 = *(void *)(a2 + 56);
            unint64_t v27 = v26 + 40 * a1;
            char v28 = (long long *)(v26 + 40 * v11);
            if (40 * a1 < (uint64_t)(40 * v11) || v27 >= (unint64_t)v28 + 40 || (BOOL v25 = a1 == v11, a1 = v11, !v25))
            {
              long long v29 = *v28;
              long long v30 = v28[1];
              *(void *)(v27 + 32) = *((void *)v28 + 4);
              *(_OWORD *)unint64_t v27 = v29;
              *(_OWORD *)(v27 + 16) = v30;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v39 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v17;
        uint64_t v16 = v18;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  uint64_t *v31 = v33 & v32;
  uint64_t v34 = *(void *)(a2 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C3D04F94(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1C3DBAAB8();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1C3D07514(&qword_1EB6FC018, MEMORY[0x1E4F276F0]);
        uint64_t v17 = sub_1C3DB9B08();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *int v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C3D0528C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1C3DBAAB8();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1C3D07514((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1C3DB9B08();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            int v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *int v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1C3D05584(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C3C2A4F8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C3D8405C();
      goto LABEL_7;
    }
    sub_1C3D85BC8(v15, a4 & 1);
    unint64_t v21 = sub_1C3C2A4F8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)sub_1C3DBB538();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    int64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
    return sub_1C3C2A5D8(a1, v19);
  }
LABEL_13:
  sub_1C3D05D90(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1C3D056D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1C3C2A4F8(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C3D84244();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C3D85EC8(v17, a5 & 1);
  unint64_t v23 = sub_1C3C2A4F8(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C3DBB538();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D05860(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C3DB88F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C3D03EA0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1C3D84684();
      goto LABEL_7;
    }
    sub_1C3D8686C(v17, a3 & 1);
    unint64_t v23 = sub_1C3D03EA0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1C3D05E4C(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1C3DBB538();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 40 * v14;
  return sub_1C3D074AC(a1, v21);
}

uint64_t sub_1C3D05A30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C3DB88F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C3D03EA0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C3D84944();
    goto LABEL_7;
  }
  sub_1C3D86CC0(v17, a3 & 1);
  unint64_t v23 = sub_1C3D03EA0(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C3DBB538();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C3D05F18(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1C3D05BD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = sub_1C3DB8B98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_1C3D03C90(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7] + 16 * v15;
      uint64_t result = sub_1C3C58FC8(*(void *)v22, *(void *)(v22 + 8));
      uint64_t v24 = v28;
      *(void *)uint64_t v22 = a1;
      *(void *)(v22 + 8) = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1C3D84BDC();
    goto LABEL_7;
  }
  sub_1C3D870E4(v18, a4 & 1);
  unint64_t v25 = sub_1C3D03C90(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C3DBB538();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  uint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1C3D05FD0(v15, (uint64_t)v12, a1, v28, v21);
}

_OWORD *sub_1C3D05D90(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C3C2A5D8(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1C3D05DFC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  unint64_t v6 = (void *)(a6[6] + 16 * result);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_1C3D05E4C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C3DB88F8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1C3CB3BF8(a3, a4[7] + 40 * a1, &qword_1EB6FC380);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1C3D05F18(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C3DB88F8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1C3D05FD0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1C3DB8B98();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_1C3D06090(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x1E4F143B8];
  v10[3] = MEMORY[0x1E4F277C0];
  v10[4] = MEMORY[0x1E4F277B0];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x1E4F277C0]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_1C3CE0C34(a1, a2);
      sub_1C3CE0C34(v5, v6);
      sub_1C3D062B4((int)v5, v5 >> 32);
      sub_1C3C58FC8(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_1C3CE0C34(a1, a2);
      swift_retain();
      swift_retain();
      sub_1C3D062B4(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_1C3CE0C34(a1, a2);
      sub_1C3DB8928();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
}

uint64_t sub_1C3D062B4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C3DB8418();
  if (!result || (uint64_t result = sub_1C3DB8438(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1C3DB8428();
      return sub_1C3DB8928();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D06348(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1C3D039B0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1C3D06420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C3DB8418();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C3DB8438();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C3DB8428();
  sub_1C3D039B0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C3D064D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C3D06740);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1C3CE0C34(a3, a4);
                  sub_1C3CE0C34(a1, a2);
                  char v17 = sub_1C3D06420((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1C3C58FC8(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1C3CE0C34(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1C3D06420(v21, v22, v20, a3, a4);
                  sub_1C3C58FC8(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1C3CE0C34(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1C3CE0C34(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1C3D06348(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1C3C58FC8(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t type metadata accessor for MessageChunking.Message.PartialCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MessageChunking.Message.CompleteCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MessageChunking.Message.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C3D067B8()
{
  unint64_t result = qword_1EA387B80;
  if (!qword_1EA387B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387B80);
  }
  return result;
}

unint64_t sub_1C3D0680C()
{
  unint64_t result = qword_1EA387B88[0];
  if (!qword_1EA387B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA387B88);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageChunking()
{
  return &type metadata for MessageChunking;
}

uint64_t sub_1C3D06870()
{
  int64_t v3 = &unk_1C3DD9C60;
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v4 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3D06930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C3DB8B98();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      char v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      uint64_t v8 = v7[20];
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      sub_1C3CE0C34(*v10, v12);
      *uint64_t v9 = v11;
      v9[1] = v12;
    }
    else
    {
      uint64_t v15 = *a2;
      unint64_t v14 = a2[1];
      sub_1C3CE0C34(v15, v14);
      *a1 = v15;
      a1[1] = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C3D06A84(uint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1C3DB8B98();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    a1 = (uint64_t *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78) + 80));
  }
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  return sub_1C3C58FC8(v3, v4);
}

uint64_t *sub_1C3D06B10(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1C3DB8B98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    int v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
    *(uint64_t *)((char *)a1 + v5[12]) = *(uint64_t *)((char *)a2 + v5[12]);
    *(uint64_t *)((char *)a1 + v5[16]) = *(uint64_t *)((char *)a2 + v5[16]);
    uint64_t v6 = v5[20];
    char v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    sub_1C3CE0C34(*v8, v10);
    *char v7 = v9;
    v7[1] = v10;
  }
  else
  {
    uint64_t v12 = *a2;
    unint64_t v11 = a2[1];
    sub_1C3CE0C34(v12, v11);
    *a1 = v12;
    a1[1] = v11;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1C3D06C14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1C3DB8B98();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
      *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
      *(uint64_t *)((char *)a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
      uint64_t v7 = v6[20];
      uint64_t v8 = (uint64_t *)((char *)a1 + v7);
      uint64_t v9 = (uint64_t *)((char *)a2 + v7);
      uint64_t v10 = *v9;
      unint64_t v11 = v9[1];
      sub_1C3CE0C34(*v9, v11);
      *uint64_t v8 = v10;
      v8[1] = v11;
    }
    else
    {
      uint64_t v13 = *a2;
      unint64_t v12 = a2[1];
      sub_1C3CE0C34(v13, v12);
      *a1 = v13;
      a1[1] = v12;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1C3D06D50(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C3DB8B98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
    *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
    *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
    *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1C3D06E38(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C3DB8B98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B78);
      *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
      *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
      *(_OWORD *)&a1[v7[20]] = *(_OWORD *)&a2[v7[20]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for MessageChunking.UnsafeAppendingAccumulator()
{
  return &type metadata for MessageChunking.UnsafeAppendingAccumulator;
}

unsigned char *sub_1C3D06F84(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D07050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICQueryEntity(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_1C3D070CC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3D07168);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1C3D07190(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D0725CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C3D07284()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D072A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D072BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D072D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D072F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D07310()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D0732C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D07348()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D07364()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D07380()
{
  return 4;
}

uint64_t sub_1C3D07388(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C3D073E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D0744C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3D074AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D07514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3D0755C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D075C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static DispatchTimeInterval.timeInterval(_:)(void *a1@<X8>, double a2@<D0>)
{
  double v3 = a2 * 1000000000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  *a1 = (uint64_t)v3;
  uint64_t v4 = *MEMORY[0x1E4FBCAA8];
  uint64_t v5 = sub_1C3DB9548();
  unsigned int v6 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  v6(a1, v4, v5);
}

uint64_t AnyCommand.isHidden.getter()
{
  return 0;
}

uint64_t AnyCommand.summary.getter()
{
  return 0;
}

uint64_t AnyCommand.prose.getter()
{
  return 0;
}

uint64_t sub_1C3D07708()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t AnyCommand.additionalArgumentSummaries.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3D07720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v33 = a10;
  uint64_t v34 = a11;
  objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  swift_bridgeObjectRetain();
  id v18 = sub_1C3D76A9C(a1, a2, a8);
  if (!v11)
  {
    unint64_t v19 = v18;
    MEMORY[0x1F4188790](v18);
    _OWORD v32[2] = &v33;
    uint64_t v21 = sub_1C3D75D48((void *(*)(uint64_t *__return_ptr, void *))sub_1C3D083B8, (uint64_t)v32, a3, a4, v20);
    uint64_t v24 = v33;
    uint64_t v23 = v34;
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      char v26 = 0;
    }
    else
    {
      char v26 = v21;
      uint64_t v27 = v22;
    }
    v32[4] = v24;
    void v32[5] = v23;
    swift_bridgeObjectRetain();
    sub_1C3DB9E78();
    uint64_t v28 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)sub_1C3DB9BF8();
    id v30 = objc_msgSend(v19, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v28, a9, v26, v27, v29);

    a7 = sub_1C3DB9C38();
  }
  return a7;
}

uint64_t Command.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C3D0793C, 0, 0);
}

uint64_t sub_1C3D0793C()
{
  unint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = *(int **)(v0[4] + 32);
  v1[3] = swift_getAssociatedTypeWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  uint64_t v8 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C3D07A68;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];
  return v8(boxed_opaque_existential_1, v6, v5);
}

uint64_t sub_1C3D07A68()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C3D07B9C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C3D07B9C()
{
  __swift_deallocate_boxed_opaque_existential_0(*(void *)(v0 + 16));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static AnyCommands.prose.getter()
{
  return 0;
}

uint64_t static Commands.commandNames.getter(uint64_t a1, uint64_t a2)
{
  v9[5] = (*(uint64_t (**)(void))(a2 + 16))();
  v9[2] = a1;
  v9[3] = a2;
  uint64_t v4 = sub_1C3DBA128();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C3C34894((void (*)(char *, char *))sub_1C3D07CDC, (uint64_t)v9, v4, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C3D07CDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(*(void *)(v1 + 24) + 8) + 32))(*(void *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static Commands<>.allCommands.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  sub_1C3DBAC98();
  swift_getAssociatedConformanceWitness();
  return sub_1C3DBA138();
}

uint64_t Commands<>.name.getter()
{
  sub_1C3DB9F38();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C3DB9E78();
  uint64_t v2 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v0, v1);
  sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C3DB9C98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t dispatch thunk of AnyCommand.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyCommand.isHidden.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyCommand.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyCommand.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyCommand.additionalArgumentSummaries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AnyCommand.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C3259C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of Command.run()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C4DAF4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of static AnyCommands.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static AnyCommands.prose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static AnyCommands.commandNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyCommands.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnyCommands.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of static Commands.allCommands.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C3D08328@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387DB0);
  sub_1C3D083D8();
  sub_1C3C2A4A4();
  uint64_t result = sub_1C3DBA928();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C3D083B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C3D08328(a1);
}

unint64_t sub_1C3D083D8()
{
  unint64_t result = qword_1EA387DB8;
  if (!qword_1EA387DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA387DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387DB8);
  }
  return result;
}

void __swiftcall ICQueryType.filterSelection(managedObjectContext:accountObjectID:)(ICFilterSelection *__return_ptr retstr, NSManagedObjectContext managedObjectContext, NSManagedObjectID accountObjectID)
{
  Class isa = accountObjectID.super.isa;
  unint64_t v97 = managedObjectContext.super.isa;
  uint64_t v92 = type metadata accessor for ICQueryType.DateRange(0);
  uint64_t v4 = MEMORY[0x1F4188790](v92);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v89 - v7;
  uint64_t v9 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v94 = (unsigned __int8 *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v93 = (unsigned __int8 *)&v89 - v12;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  unint64_t v103 = *v3;
  unint64_t v13 = v103;
  uint64_t v104 = MEMORY[0x1E4FBC860];
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t inited = swift_initStackObject();
  long long v101 = xmmword_1C3DD3D30;
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  *(void *)(inited + 32) = v13;
  uint64_t v100 = v13 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  sub_1C3D0AE7C(inited, (uint64_t)&v104);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v17 = v104;
  uint64_t v104 = v14;
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v90 = v8;
    uint64_t v91 = v6;
    uint64_t v19 = 0;
    uint64_t v96 = v18;
    uint64_t v98 = v17;
    do
    {
      char v20 = (ICTagSelection *)(v17 + 8 * v19);
      switch((unint64_t)v20->_managedObjectContext)
      {
        case 0uLL:
          unint64_t v103 = v13;
          v16.value.super.Class isa = v97;
          ICQueryType.tagSelection(managedObjectContext:)(v20, v16);
          uint64_t v22 = v21;
          if (objc_msgSend(v21, sel_isNonEmpty))
          {
            uint64_t v23 = v22;
            goto LABEL_20;
          }

          break;
        case 1uLL:
          unint64_t v102 = v13;
          uint64_t v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = v101;
          *(void *)(v24 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(1, v24, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          uint64_t v25 = v103;
          if ((~v103 & 0xF000000000000007) == 0) {
            goto LABEL_50;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) != 9)
          {
            sub_1C3D0BF34(v103);
LABEL_50:
            unint64_t v102 = v13;
            uint64_t v59 = swift_initStackObject();
            *(_OWORD *)(v59 + 16) = v101;
            *(void *)(v59 + 32) = v13;
            swift_retain();
            sub_1C3D09AC0(1, v59, &v103);
            swift_setDeallocating();
            swift_arrayDestroy();
            uint64_t v60 = (objc_class *)v103;
            if ((~v103 & 0xF000000000000007) == 0) {
              goto LABEL_55;
            }
            uint64_t v18 = v96;
            uint64_t v17 = v98;
            if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) == 8)
            {
              uint64_t v61 = swift_projectBox();
              uint64_t v62 = (uint64_t)v90;
              sub_1C3D0BF50(v61, (uint64_t)v90, type metadata accessor for ICQueryType.DateRange);
              sub_1C3D0BF34((uint64_t)v60);
              uint64_t v63 = ICDateCreatedFilterTypeSelection;
              goto LABEL_58;
            }
            goto LABEL_61;
          }
          uint64_t v26 = swift_projectBox();
          uint64_t v27 = v93;
          sub_1C3D0BF50(v26, (uint64_t)v93, type metadata accessor for ICQueryType.RelativeDateRange);
          sub_1C3D0BF34(v25);
          uint64_t v28 = *v27;
          int v29 = 0;
          uint64_t v18 = v96;
          uint64_t v17 = v98;
          switch(*v27)
          {
            case 1u:
              int v29 = 0;
              uint64_t v28 = 1;
              break;
            case 2u:
              int v29 = 0;
              uint64_t v28 = 2;
              break;
            case 3u:
              int v29 = 0;
              uint64_t v28 = 3;
              break;
            case 4u:
              int v29 = 0;
              uint64_t v28 = 4;
              break;
            case 5u:
              int v29 = 0;
              uint64_t v28 = 5;
              break;
            case 6u:
              int v29 = 1;
              uint64_t v28 = 7;
              break;
            default:
              break;
          }
          id v78 = objc_msgSend(objc_allocWithZone((Class)ICDateCreatedFilterTypeSelection), sel_initWithSelectionType_, v28);
          if (v29)
          {
            if (v27[16]) {
              id v79 = 0;
            }
            else {
              id v79 = (void *)sub_1C3DBA4A8();
            }
            objc_msgSend(v78, sel_setRelativeRangeAmount_, v79);

            uint64_t v80 = 1;
            switch(v27[1])
            {
              case 1u:
                uint64_t v80 = 2;
                goto LABEL_107;
              case 2u:
                uint64_t v80 = 3;
                goto LABEL_107;
              case 3u:
                uint64_t v80 = 4;
                goto LABEL_107;
              case 4u:
                uint64_t v80 = 5;
                goto LABEL_107;
              case 5u:
                break;
              default:
LABEL_107:
                objc_msgSend(v78, sel_setRelativeRangeSelectionType_, v80);
                break;
            }
          }
          id v84 = v78;
          MEMORY[0x1C877B4F0]();
          if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C3DBA068();
          }
          sub_1C3DBA0C8();
          sub_1C3DBA038();

          sub_1C3C6DB4C((uint64_t)v93, type metadata accessor for ICQueryType.RelativeDateRange);
          break;
        case 2uLL:
          unint64_t v102 = v13;
          uint64_t v30 = swift_initStackObject();
          *(_OWORD *)(v30 + 16) = v101;
          *(void *)(v30 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(2, v30, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          uint64_t v31 = v103;
          if ((~v103 & 0xF000000000000007) == 0) {
            goto LABEL_54;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) == 0xF)
          {
            uint64_t v32 = swift_projectBox();
            uint64_t v33 = v94;
            sub_1C3D0BF50(v32, (uint64_t)v94, type metadata accessor for ICQueryType.RelativeDateRange);
            sub_1C3D0BF34(v31);
            uint64_t v34 = *v33;
            int v35 = 0;
            uint64_t v18 = v96;
            uint64_t v17 = v98;
            switch(*v33)
            {
              case 1u:
                int v35 = 0;
                uint64_t v34 = 1;
                break;
              case 2u:
                int v35 = 0;
                uint64_t v34 = 2;
                break;
              case 3u:
                int v35 = 0;
                uint64_t v34 = 3;
                break;
              case 4u:
                int v35 = 0;
                uint64_t v34 = 4;
                break;
              case 5u:
                int v35 = 0;
                uint64_t v34 = 5;
                break;
              case 6u:
                int v35 = 1;
                uint64_t v34 = 7;
                break;
              default:
                break;
            }
            id v81 = objc_msgSend(objc_allocWithZone((Class)ICDateEditedFilterTypeSelection), sel_initWithSelectionType_, v34);
            if (v35)
            {
              if (v33[16]) {
                uint64_t v82 = 0;
              }
              else {
                uint64_t v82 = (void *)sub_1C3DBA4A8();
              }
              objc_msgSend(v81, sel_setRelativeRangeAmount_, v82);

              uint64_t v83 = 1;
              switch(v33[1])
              {
                case 1u:
                  uint64_t v83 = 2;
                  goto LABEL_114;
                case 2u:
                  uint64_t v83 = 3;
                  goto LABEL_114;
                case 3u:
                  uint64_t v83 = 4;
                  goto LABEL_114;
                case 4u:
                  uint64_t v83 = 5;
                  goto LABEL_114;
                case 5u:
                  break;
                default:
LABEL_114:
                  objc_msgSend(v81, sel_setRelativeRangeSelectionType_, v83);
                  break;
              }
            }
            id v85 = v81;
            MEMORY[0x1C877B4F0]();
            if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C3DBA068();
            }
            sub_1C3DBA0C8();
            sub_1C3DBA038();

            sub_1C3C6DB4C((uint64_t)v94, type metadata accessor for ICQueryType.RelativeDateRange);
          }
          else
          {
            sub_1C3D0BF34(v103);
LABEL_54:
            unint64_t v102 = v13;
            uint64_t v64 = swift_initStackObject();
            *(_OWORD *)(v64 + 16) = v101;
            *(void *)(v64 + 32) = v13;
            swift_retain();
            sub_1C3D09AC0(2, v64, &v103);
            swift_setDeallocating();
            swift_arrayDestroy();
            uint64_t v60 = (objc_class *)v103;
            if ((~v103 & 0xF000000000000007) == 0)
            {
LABEL_55:
              uint64_t v18 = v96;
              uint64_t v17 = v98;
              break;
            }
            uint64_t v18 = v96;
            uint64_t v17 = v98;
            if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) != 0xE)
            {
LABEL_61:
              v16.value.super.Class isa = v60;
              goto LABEL_81;
            }
            uint64_t v65 = swift_projectBox();
            uint64_t v62 = (uint64_t)v91;
            sub_1C3D0BF50(v65, (uint64_t)v91, type metadata accessor for ICQueryType.DateRange);
            sub_1C3D0BF34((uint64_t)v60);
            uint64_t v63 = ICDateEditedFilterTypeSelection;
LABEL_58:
            id v66 = objc_msgSend(objc_allocWithZone((Class)v63), sel_initWithSelectionType_, 7);
            uint64_t v67 = (void *)sub_1C3DB8A88();
            uint64_t v68 = (void *)sub_1C3DB8A88();
            objc_msgSend(v66, sel_setSpecificDateRangeFrom_to_, v67, v68);

            id v69 = v66;
            MEMORY[0x1C877B4F0]();
            if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C3DBA068();
            }
            sub_1C3DBA0C8();
            sub_1C3DBA038();

            sub_1C3C6DB4C(v62, type metadata accessor for ICQueryType.DateRange);
          }
          break;
        case 3uLL:
          unint64_t v103 = v13;
          uint64_t v36 = 3;
          goto LABEL_18;
        case 4uLL:
          unint64_t v103 = v13;
          uint64_t v36 = 4;
LABEL_18:
          v16.value.super.Class isa = (Class)ICQueryType.participantsSelection(filterType:managedObjectContext:accountObjectID:)(v36, (uint64_t)v97, (uint64_t)isa);
          if (!v16.value.super.isa) {
            break;
          }
          uint64_t v23 = v16.value.super.isa;
LABEL_20:
          long long v37 = v23;
          MEMORY[0x1C877B4F0]();
          if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C3DBA068();
          }
          goto LABEL_3;
        case 5uLL:
          unint64_t v102 = v13;
          uint64_t v38 = swift_initStackObject();
          *(_OWORD *)(v38 + 16) = v101;
          *(void *)(v38 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(5, v38, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v103 & 0xF000000000000007) == 0) {
            goto LABEL_63;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) == 5)
          {
            int v39 = *(unsigned __int8 *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1C3D0BF34(v103);
            if (v39) {
              uint64_t v40 = 0;
            }
            else {
              uint64_t v40 = 3;
            }
            objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, v40);
            goto LABEL_32;
          }
          sub_1C3D0BF34(v103);
LABEL_63:
          unint64_t v102 = v13;
          uint64_t v70 = swift_initStackObject();
          *(_OWORD *)(v70 + 16) = v101;
          *(void *)(v70 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(5, v70, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v103 & 0xF000000000000007) != 0)
          {
            int v71 = (v103 >> 59) & 0x1E | (v103 >> 2) & 1;
            sub_1C3D0BF34(v103);
            if (v71 == 6)
            {
              objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, 1);
              MEMORY[0x1C877B4F0]();
              uint64_t v18 = v96;
              uint64_t v17 = v98;
              if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                goto LABEL_80;
              }
              goto LABEL_66;
            }
          }
          unint64_t v102 = v13;
          uint64_t v72 = swift_initStackObject();
          *(_OWORD *)(v72 + 16) = v101;
          *(void *)(v72 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(5, v72, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          uint64_t v18 = v96;
          uint64_t v17 = v98;
          if ((~v103 & 0xF000000000000007) != 0)
          {
            int v73 = (v103 >> 59) & 0x1E | (v103 >> 2) & 1;
            sub_1C3D0BF34(v103);
            if (v73 == 7)
            {
              objc_msgSend(objc_allocWithZone((Class)ICChecklistsFilterTypeSelection), sel_initWithSelectionType_, 2);
              goto LABEL_79;
            }
          }
          break;
        case 6uLL:
          unint64_t v102 = v13;
          uint64_t v41 = swift_initStackObject();
          *(_OWORD *)(v41 + 16) = v101;
          *(void *)(v41 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(6, v41, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          if ((~v103 & 0xF000000000000007) == 0) {
            goto LABEL_71;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) == 4)
          {
            uint64_t v42 = *(__int16 *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1C3D0BF34(v103);
            objc_msgSend(objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection), sel_initWithAttachmentSection_, v42);
LABEL_32:
            MEMORY[0x1C877B4F0]();
            if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C3DBA068();
            }
            sub_1C3DBA0C8();
            sub_1C3DBA038();
            uint64_t v17 = v98;
          }
          else
          {
            sub_1C3D0BF34(v103);
LABEL_71:
            unint64_t v102 = v13;
            uint64_t v74 = swift_initStackObject();
            *(_OWORD *)(v74 + 16) = v101;
            *(void *)(v74 + 32) = v13;
            swift_retain();
            sub_1C3D09AC0(6, v74, &v103);
            swift_setDeallocating();
            swift_arrayDestroy();
            v16.value.super.Class isa = (Class)v103;
            if ((~v103 & 0xF000000000000007) != 0)
            {
              uint64_t v17 = v98;
              if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) == 3)
              {
                int v75 = *(unsigned __int8 *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                sub_1C3D0BF34(v103);
                if (v75) {
                  uint64_t v76 = 1;
                }
                else {
                  uint64_t v76 = 9;
                }
                id v77 = objc_allocWithZone((Class)ICAttachmentsFilterTypeSelection);
                objc_msgSend(v77, sel_initWithSelectionType_, v76);
LABEL_79:
                MEMORY[0x1C877B4F0]();
                if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_66:
                }
                  sub_1C3DBA068();
LABEL_80:
                sub_1C3DBA0C8();
                sub_1C3DBA038();
              }
              else
              {
LABEL_81:
                sub_1C3D0BF34((uint64_t)v16.value.super.isa);
              }
            }
            else
            {
              uint64_t v17 = v98;
            }
          }
          break;
        case 7uLL:
          unint64_t v103 = v13;
          uint64_t v43 = swift_initStackObject();
          *(_OWORD *)(v43 + 16) = v101;
          *(void *)(v43 + 32) = v13;
          swift_retain();
          uint64_t v44 = sub_1C3D0A1C0(v43, 0);
          uint64_t v46 = v45;
          swift_setDeallocating();
          swift_arrayDestroy();
          if (!v46) {
            break;
          }
          id v47 = objc_allocWithZone((Class)ICFoldersFilterTypeSelection);
          swift_bridgeObjectRetain();
          uint64_t v48 = v97;
          uint64_t v49 = (void *)sub_1C3DB9FF8();
          swift_bridgeObjectRelease();
          id v50 = objc_msgSend(v47, sel_initWithManagedObjectContext_inclusionType_folderIdentifiers_, v48, v44, v49);
          swift_bridgeObjectRelease();

          long long v37 = (objc_class *)v50;
          MEMORY[0x1C877B4F0]();
          if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C3DBA068();
          }
LABEL_3:
          sub_1C3DBA0C8();
          sub_1C3DBA038();

          break;
        case 8uLL:
          unint64_t v102 = v13;
          uint64_t v51 = swift_initStackObject();
          *(_OWORD *)(v51 + 16) = v101;
          *(void *)(v51 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(8, v51, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.Class isa = (Class)v103;
          if ((~v103 & 0xF000000000000007) == 0) {
            break;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) != 0x14) {
            goto LABEL_81;
          }
          char v52 = *(unsigned char *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1C3D0BF34(v103);
          BOOL v53 = (v52 & 1) == 0;
          unint64_t v54 = ICQuickNotesFilterTypeSelection;
          goto LABEL_47;
        case 9uLL:
          unint64_t v102 = v13;
          uint64_t v55 = swift_initStackObject();
          *(_OWORD *)(v55 + 16) = v101;
          *(void *)(v55 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(9, v55, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.Class isa = (Class)v103;
          if ((~v103 & 0xF000000000000007) == 0) {
            break;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) != 0x11) {
            goto LABEL_81;
          }
          char v56 = *(unsigned char *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1C3D0BF34(v103);
          BOOL v53 = (v56 & 1) == 0;
          unint64_t v54 = ICPinnedNotesFilterTypeSelection;
          goto LABEL_47;
        case 0xAuLL:
          unint64_t v102 = v13;
          uint64_t v57 = swift_initStackObject();
          *(_OWORD *)(v57 + 16) = v101;
          *(void *)(v57 + 32) = v13;
          swift_retain();
          sub_1C3D09AC0(10, v57, &v103);
          swift_setDeallocating();
          swift_arrayDestroy();
          v16.value.super.Class isa = (Class)v103;
          if ((~v103 & 0xF000000000000007) == 0) {
            break;
          }
          if (((v103 >> 59) & 0x1E | (v103 >> 2) & 1) != 0x10) {
            goto LABEL_81;
          }
          char v58 = *(unsigned char *)((v103 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1C3D0BF34(v103);
          BOOL v53 = (v58 & 1) == 0;
          unint64_t v54 = ICLockedNotesFilterTypeSelection;
LABEL_47:
          objc_msgSend(objc_allocWithZone((Class)v54), sel_initWithInclusionType_, v53);
          goto LABEL_79;
        default:
          break;
      }
      ++v19;
    }
    while (v18 != v19);
  }
  swift_bridgeObjectRelease();
  unint64_t v103 = v13;
  unint64_t v86 = sub_1C3D0A404();
  id v87 = objc_allocWithZone((Class)ICFilterSelection);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA387DC0);
  uint64_t v88 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_initWithFilterTypeSelections_joinOperator_, v88, v86);
}

void __swiftcall ICQueryType.tagSelection(managedObjectContext:)(ICTagSelection *__return_ptr retstr, NSManagedObjectContext_optional managedObjectContext)
{
  Class isa = managedObjectContext.value.super.isa;
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone((Class)ICTagSelection), sel_initWithManagedObjectContext_, managedObjectContext.value.super.isa);
  if (isa)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    *(void *)(inited + 32) = v4;
    swift_retain();
    uint64_t v7 = isa;
    sub_1C3D0A5BC(inited, v26);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v8 = v26[0];
    if ((~v26[0] & 0xF000000000000007) != 0)
    {
      objc_msgSend(v5, sel_setMode_, sub_1C3D0A87C());
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C3DD3D30;
      *(void *)(v9 + 32) = v8;
      swift_retain_n();
      sub_1C3D0A5BC(v9, v26);
      swift_setDeallocating();
      swift_arrayDestroy();
      if ((~v26[0] & 0xF000000000000007) != 0)
      {
        unint64_t v10 = v26[1];
        sub_1C3D0BF34(v26[0]);
      }
      else
      {
        unint64_t v10 = 1;
      }
      sub_1C3D0BF34(v8);
      objc_msgSend(v5, sel_setTagOperator_, v10);
      v26[0] = v8;
      uint64_t v11 = swift_retain();
      uint64_t v12 = sub_1C3D0BB9C(v11);
      uint64_t v13 = sub_1C3D0BFB8(v12);
      sub_1C3D0BF34(v8);
      swift_bridgeObjectRelease();
      v26[0] = v13;
      uint64_t v14 = v7;
      uint64_t v15 = swift_bridgeObjectRetain();
      unint64_t v16 = sub_1C3D0C1B4(v15, (uint64_t)v14, (uint64_t)v26);

      sub_1C3C63F20(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v26[0];
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
      sub_1C3CDE5C0();
      swift_bridgeObjectRetain();
      uint64_t v18 = (void *)sub_1C3DBA428();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setIncludedObjectIDs_, v18);
      swift_bridgeObjectRelease();

      sub_1C3C63E88(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = (void *)sub_1C3DBA428();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setUnresolvedIncludedTagIdentifiers_, v19);

      v26[0] = v8;
      v26[0] = sub_1C3D0A960();
      char v20 = v14;
      uint64_t v21 = swift_bridgeObjectRetain();
      unint64_t v22 = sub_1C3D0C1B4(v21, (uint64_t)v20, (uint64_t)v26);

      sub_1C3C63F20(v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v26[0];
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)sub_1C3DBA428();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setExcludedObjectIDs_, v24);
      swift_bridgeObjectRelease();

      sub_1C3C63E88(v23);
      swift_bridgeObjectRelease();
      uint64_t v25 = (void *)sub_1C3DBA428();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setUnresolvedExcludedTagIdentifiers_, v25);

      sub_1C3D0BF34(v8);
    }
    else
    {
    }
  }
}

uint64_t sub_1C3D09AC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v6 = result;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (2)
    {
      unint64_t v8 = *(void *)(a2 + 8 * v7 + 32);
      switch((v8 >> 59) & 0x1E | (v8 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_19;
        case 1uLL:
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
          *(void *)(inited + 32) = v9;
          swift_retain();
          swift_retain();
          sub_1C3D09AC0(&v13, v6, inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          unint64_t v8 = v13;
          unint64_t v11 = ~v13 & 0xF000000000000007;
          swift_release();
          if (!v11) {
            goto LABEL_4;
          }
          goto LABEL_29;
        case 2uLL:
          v8 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_19:
          uint64_t v12 = *(void *)(v8 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C3D09AC0(&v13, v6, v12);
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v8 = v13;
          if ((~v13 & 0xF000000000000007) != 0) {
            goto LABEL_29;
          }
          goto LABEL_4;
        case 3uLL:
        case 4uLL:
          if (v6 == 6) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 5uLL:
        case 6uLL:
        case 7uLL:
          if (v6 == 5) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 8uLL:
        case 9uLL:
          if (v6 == 1) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0xBuLL:
          if (v6 == 7) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0xCuLL:
        case 0xDuLL:
          if (v6 == 4) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0xEuLL:
        case 0xFuLL:
          if (v6 == 2) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0x10uLL:
          if (v6 == 10) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0x11uLL:
          if (v6 == 9) {
            goto LABEL_28;
          }
          goto LABEL_4;
        case 0x12uLL:
        case 0x13uLL:
          if (v6 != 3) {
            goto LABEL_4;
          }
          goto LABEL_28;
        case 0x14uLL:
          if (v6 != 8) {
            goto LABEL_4;
          }
LABEL_28:
          swift_retain();
LABEL_29:
          unint64_t result = swift_bridgeObjectRelease();
          goto LABEL_32;
        default:
LABEL_4:
          if (v4 != ++v7) {
            continue;
          }
          unint64_t result = swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  unint64_t v8 = 0xF000000000000007;
LABEL_32:
  *a3 = v8;
  return result;
}

id ICQueryType.participantsSelection(filterType:managedObjectContext:accountObjectID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *v3;
  if (a1 == 3)
  {
    uint64_t v6 = off_1E64A3940;
LABEL_5:
    id v7 = objc_msgSend(objc_allocWithZone((Class)*v6), sel_initWithManagedObjectContext_accountObjectID_, a2, a3);
    v33[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t inited = swift_initStackObject();
    uint64_t v32 = 1;
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    *(void *)(inited + 32) = v5;
    swift_retain();
    id v9 = v7;
    uint64_t v10 = sub_1C3D0AA8C(inited, a1);
    uint64_t v12 = v11;
    swift_setDeallocating();
    swift_arrayDestroy();
    if (v12)
    {
      if (v12[2] == 1 && v10 == 1)
      {
        self;
        uint64_t v14 = swift_dynamicCastObjCClass();
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          uint64_t v16 = v12[4];
          uint64_t v17 = v12[5];
          swift_bridgeObjectRetain();
          id v18 = v9;
          id v19 = objc_msgSend(v15, sel_currentUserID);
          if (v19)
          {
            char v20 = v19;
            uint64_t v32 = v16;
            uint64_t v21 = sub_1C3DB9C38();
            uint64_t v23 = v22;

            if (v17)
            {
              if (v23)
              {
                if (v32 == v21 && v23 == v17)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_38:
                  swift_bridgeObjectRelease();
                  objc_msgSend(v15, sel_setSelectionType_, 0);

                  return v7;
                }
                char v31 = sub_1C3DBB3B8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v31) {
                  goto LABEL_38;
                }

                goto LABEL_33;
              }
            }
            else if (!v23)
            {
              goto LABEL_38;
            }
          }
          else if (!v17)
          {
            goto LABEL_38;
          }

          swift_bridgeObjectRelease();
        }
      }
LABEL_33:
      objc_msgSend(v9, sel_setSelectionType_, 2, v32);
      objc_msgSend(v9, sel_setJoinOperator_, v10);
      sub_1C3C63E88((uint64_t)v12);
      swift_bridgeObjectRelease();
      int v29 = (void *)sub_1C3DBA428();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setParticipantUserIDs_, v29);

      goto LABEL_34;
    }
    if (a1 == 3)
    {
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C3DD3D30;
      *(void *)(v28 + 32) = v5;
      swift_retain();
      sub_1C3D09AC0(3, v28, v33);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v25 = v33[0];
      if ((~v33[0] & 0xF000000000000007) != 0)
      {
        if (((v33[0] >> 59) & 0x1E | (LODWORD(v33[0]) >> 2) & 1) == 0x12) {
          goto LABEL_22;
        }
LABEL_28:
        sub_1C3D0BF34(v25);
      }
    }
    else
    {
      uint64_t v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C3DD3D30;
      *(void *)(v24 + 32) = v5;
      swift_retain();
      sub_1C3D09AC0(4, v24, v33);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v25 = v33[0];
      if ((~v33[0] & 0xF000000000000007) != 0)
      {
        if (((v33[0] >> 59) & 0x1E | (LODWORD(v33[0]) >> 2) & 1) == 0xC)
        {
LABEL_22:
          int v26 = *(unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          sub_1C3D0BF34(v25);
          if (v26) {
            uint64_t v27 = 1;
          }
          else {
            uint64_t v27 = 3;
          }
          objc_msgSend(v9, sel_setSelectionType_, v27, 1);
          goto LABEL_34;
        }
        goto LABEL_28;
      }
    }
LABEL_34:

    return v7;
  }
  if (a1 == 4)
  {
    uint64_t v6 = off_1E64A3770;
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_1C3D0A1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    unint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
    int v7 = (v6 >> 59) & 0x1E | (v6 >> 2) & 1;
    if (!v7)
    {
      uint64_t v14 = *(void *)(v6 + 16);
      swift_retain();
      uint64_t v15 = sub_1C3D0A1C0(v14, a2);
      if (v16)
      {
        uint64_t v19 = v15;
        swift_bridgeObjectRelease();
        swift_release();
        return v19;
      }
      swift_release();
      goto LABEL_4;
    }
    if (v7 == 1)
    {
      uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
      uint64_t v9 = a2;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      *(void *)(inited + 32) = v8;
      swift_retain();
      swift_retain();
      uint64_t v11 = sub_1C3D0A1C0(inited, 1);
      uint64_t v13 = v12;
      swift_setDeallocating();
      a2 = v9;
      swift_arrayDestroy();
      swift_release();
      if (v13)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
      goto LABEL_4;
    }
    if (v7 == 2) {
      break;
    }
LABEL_4:
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)((v6 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  if (sub_1C3D0BA80(v18)[2] != *(void *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    a2 = sub_1C3D0A1C0(v18, a2);
  }
  swift_release();
  return a2;
}

unint64_t sub_1C3D0A404()
{
  if ((*(void *)v0 >> 59) & 0x1E | (*(void *)v0 >> 2) & 1) {
    return 0;
  }
  uint64_t v3 = *(void *)(*(void *)v0 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  unint64_t result = swift_bridgeObjectRetain();
  char v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = 0xF000000000000007;
  while (1)
  {
    unint64_t v8 = *(void *)(v3 + 16);
    unint64_t v9 = v6;
LABEL_7:
    if (v9 <= v8) {
      unint64_t v10 = *(void *)(v3 + 16);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v9 >= v8) {
      goto LABEL_39;
    }
    unint64_t result = *(void *)(v3 + 32 + 8 * v9);
    unint64_t v6 = v9 + 1;
    int v11 = (result >> 59) & 0x1E | (result >> 2) & 1;
    if (v11 == 10) {
      break;
    }
    if (v11)
    {
      if (v11 != 2) {
        goto LABEL_28;
      }
LABEL_26:
      unint64_t v15 = result;
    }
    else
    {
LABEL_24:
      unint64_t v15 = result;
    }
    swift_retain();
    unint64_t result = sub_1C3D0BF34(v7);
    unint64_t v7 = v15;
LABEL_28:
    if (v6 == v4)
    {
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        BOOL v1 = 0;
LABEL_36:
        sub_1C3D0BF34(v7);
        return v1;
      }
LABEL_34:
      if ((~v7 & 0xF000000000000007) == 0) {
        return 0;
      }
      BOOL v1 = ((v7 >> 59) & 0x1E | (v7 >> 2) & 1) == 2;
      goto LABEL_36;
    }
  }
  if (v6 == v4)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  unint64_t v12 = v10 - 1;
  while (v12 != v9)
  {
    unint64_t result = *(void *)(v3 + 40 + 8 * v9);
    int v13 = (result >> 59) & 0x1E | (result >> 2) & 1;
    if (v13 != 10)
    {
      if (!v13)
      {
        unint64_t v6 = v9 + 2;
        char v5 = 1;
        goto LABEL_24;
      }
      if (v13 == 2)
      {
        unint64_t v6 = v9 + 2;
        char v5 = 1;
        goto LABEL_26;
      }
      char v5 = 1;
      BOOL v14 = v4 - 2 == v9;
      v9 += 2;
      if (v14) {
        goto LABEL_33;
      }
      goto LABEL_7;
    }
    if (v4 - 1 == ++v9) {
      goto LABEL_33;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C3D0A5BC@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
    uint64_t v15 = 0;
    unint64_t v5 = 0xF000000000000007;
    goto LABEL_30;
  }
  uint64_t v3 = result;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  while (1)
  {
    unint64_t v5 = *(void *)(v3 + 8 * v4 + 32);
    int v6 = (v5 >> 59) & 0x1E | (v5 >> 2) & 1;
    if (v6 == 2) {
      break;
    }
    if (v6 == 1)
    {
      uint64_t v13 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
      *(void *)(inited + 32) = v13;
      swift_retain();
      swift_retain();
      sub_1C3D0A5BC(&v17, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
LABEL_20:
      unint64_t v5 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        uint64_t v15 = v18;
LABEL_27:
        swift_release();
        unint64_t result = swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      goto LABEL_13;
    }
    if (v6)
    {
      if (((v5 >> 59) & 0x1E) == 0x16) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(v5 + 16);
      if (*(void *)(v7 + 16))
      {
        unint64_t v8 = *(void *)(v7 + 32);
        unint64_t v9 = v8;
        if (((v8 >> 59) & 0x1E | (v8 >> 2) & 1) == 1) {
          unint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        }
        if (v9 >> 60 == 11)
        {
LABEL_25:
          swift_retain();
          unint64_t result = swift_bridgeObjectRelease();
          uint64_t v15 = 1;
          goto LABEL_29;
        }
        swift_retain();
        swift_retain();
        sub_1C3D0A5BC(&v17, v7);
        swift_release();
        unint64_t v5 = v17;
        if ((~v17 & 0xF000000000000007) != 0)
        {
          uint64_t v15 = v18;
          goto LABEL_27;
        }
LABEL_13:
        swift_release();
      }
    }
LABEL_4:
    if (v2 == ++v4)
    {
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = 0;
      unint64_t v5 = 0xF000000000000007;
      goto LABEL_29;
    }
  }
  uint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v10 + 32);
  unint64_t v12 = v11;
  if (((v11 >> 59) & 0x1E | (v11 >> 2) & 1) == 1) {
    unint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  }
  if (v12 >> 60 != 11)
  {
    swift_retain();
    swift_retain();
    sub_1C3D0A5BC(&v17, v10);
    swift_release();
    goto LABEL_20;
  }
  swift_retain();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = 2;
LABEL_29:
  a2 = v16;
LABEL_30:
  *a2 = v5;
  a2[1] = v15;
  return result;
}

uint64_t sub_1C3D0A87C()
{
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  *(void *)(inited + 32) = v4;
  swift_retain();
  sub_1C3D0BD24(inited, &v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  if ((~v5 & 0xF000000000000007) == 0) {
    return 0;
  }
  if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) != 0x17)
  {
    sub_1C3D0BF34(v5);
    return 0;
  }
  int v2 = *(unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1C3D0BF34(v5);
  if (v2) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1C3D0A960()
{
  uint64_t v1 = *v0;
  int v2 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    if (v2 == 1)
    {
      unint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      if (((v8 >> 59) & 0x1E | (v8 >> 2) & 1) != 0x16) {
        return ((uint64_t (*)(void))sub_1C3D0A960)();
      }
      uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v11 = *(void *)(v9 + 16);
      uint64_t v10 = *(void *)(v9 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
      *(void *)(v3 + 32) = v11;
      *(void *)(v3 + 40) = v10;
      swift_bridgeObjectRetain();
      return v3;
    }
    if (v2 != 2) {
      return v3;
    }
    v1 &= 0xFFFFFFFFFFFFFFBuLL;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 16);
  if (v4)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v7 = sub_1C3D0A960(v5);
      uint64_t v5 = sub_1C3D79560(v7);
    }
    swift_bridgeObjectRelease();
    return v13;
  }
  return v3;
}

uint64_t sub_1C3D0AA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v38 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v37 = v2;
  while (1)
  {
    unint64_t v5 = *(void *)(v38 + 8 * v4);
    int v6 = (v5 >> 59) & 0x1E | (v5 >> 2) & 1;
    if (v6 == 2) {
      break;
    }
    if (v6) {
      goto LABEL_4;
    }
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        unint64_t v12 = *(void *)(v7 + 8 * v9 + 32);
        if (a2 == 3)
        {
          if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) == 0x13) {
            goto LABEL_16;
          }
        }
        else if (a2 == 4 && ((v12 >> 59) & 0x1E | (v12 >> 2) & 1) == 0xD)
        {
LABEL_16:
          uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFBLL;
          uint64_t v15 = *(void *)(v13 + 16);
          uint64_t v14 = *(void *)(v13 + 24);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1C3D8288C(0, v10[2] + 1, 1, v10);
          }
          unint64_t v17 = v10[2];
          unint64_t v16 = v10[3];
          if (v17 >= v16 >> 1) {
            uint64_t v10 = sub_1C3D8288C((void *)(v16 > 1), v17 + 1, 1, v10);
          }
          v10[2] = v17 + 1;
          uint64_t v11 = &v10[2 * v17];
          v11[4] = v15;
          v11[5] = v14;
        }
        if (v8 == ++v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = *(void *)(v7 + 16);
          uint64_t v2 = v37;
          goto LABEL_36;
        }
      }
    }
    swift_retain();
    uint64_t v29 = 0;
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
LABEL_36:
    if (v10[2] == v29)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1C3D0AA8C(v7, a2);
    if (v32)
    {
      uint64_t v35 = v31;
      swift_bridgeObjectRelease();
      swift_release();
      return v35;
    }
LABEL_3:
    swift_release();
LABEL_4:
    if (++v4 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v18 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      unint64_t v23 = *(void *)(v18 + 8 * v20 + 32);
      if (a2 == 3)
      {
        if (((v23 >> 59) & 0x1E | (v23 >> 2) & 1) == 0x13) {
          goto LABEL_29;
        }
      }
      else if (a2 == 4 && ((v23 >> 59) & 0x1E | (v23 >> 2) & 1) == 0xD)
      {
LABEL_29:
        uint64_t v24 = v23 & 0xFFFFFFFFFFFFFFBLL;
        uint64_t v26 = *(void *)(v24 + 16);
        uint64_t v25 = *(void *)(v24 + 24);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1C3D8288C(0, v21[2] + 1, 1, v21);
        }
        unint64_t v28 = v21[2];
        unint64_t v27 = v21[3];
        if (v28 >= v27 >> 1) {
          uint64_t v21 = sub_1C3D8288C((void *)(v27 > 1), v28 + 1, 1, v21);
        }
        void v21[2] = v28 + 1;
        uint64_t v22 = &v21[2 * v28];
        v22[4] = v26;
        v22[5] = v25;
      }
      if (v19 == ++v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(v18 + 16);
        uint64_t v2 = v37;
        goto LABEL_40;
      }
    }
  }
  swift_retain();
  uint64_t v30 = 0;
  uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_40:
  if (v21[2] == v30)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 2;
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1C3D0AA8C(v18, a2);
  if (!v34) {
    goto LABEL_3;
  }
  uint64_t v35 = v33;
  swift_release();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1C3D0AE7C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = result + 32;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v8 = *(void *)(v4 + 8 * i);
      switch((v8 >> 59) & 0x1E | (v8 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_81;
        case 1uLL:
          uint64_t v35 = *(void *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
          *(void *)(inited + 32) = v35;
          swift_retain();
          swift_retain();
          sub_1C3D0AE7C(inited, a2);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_release();
          continue;
        case 2uLL:
          v8 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_81:
          uint64_t v37 = *(void *)(v8 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C3D0AE7C(v37, a2);
          swift_release();
          swift_bridgeObjectRelease();
          continue;
        case 3uLL:
        case 4uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v15 = *(void *)(*(void *)a2 + 16);
          if (!v15) {
            goto LABEL_26;
          }
          if (v9[4] == 6) {
            continue;
          }
          if (v15 == 1) {
            goto LABEL_26;
          }
          if (v9[5] == 6) {
            continue;
          }
          if (v15 == 2) {
            goto LABEL_26;
          }
          if (v9[6] == 6) {
            continue;
          }
          if (v15 == 3) {
            goto LABEL_26;
          }
          uint64_t v58 = 7;
          do
          {
            uint64_t v59 = v58 - 3;
            if (__OFADD__(v58 - 4, 1)) {
              goto LABEL_195;
            }
            if (v9[v58] == 6) {
              goto LABEL_6;
            }
            ++v58;
          }
          while (v59 != v15);
LABEL_26:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v15 + 1, 1, v9);
          }
          unint64_t v17 = v9[2];
          unint64_t v16 = v9[3];
          if (v17 >= v16 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v16 > 1), v17 + 1, 1, v9);
          }
          v9[2] = v17 + 1;
          int v6 = &v9[v17];
          uint64_t v7 = 6;
          goto LABEL_4;
        case 5uLL:
        case 6uLL:
        case 7uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v10 = *(void *)(*(void *)a2 + 16);
          if (!v10) {
            goto LABEL_19;
          }
          if (v9[4] == 5) {
            continue;
          }
          if (v10 == 1) {
            goto LABEL_19;
          }
          if (v9[5] == 5) {
            continue;
          }
          if (v10 == 2) {
            goto LABEL_19;
          }
          if (v9[6] == 5) {
            continue;
          }
          if (v10 == 3) {
            goto LABEL_19;
          }
          uint64_t v11 = 7;
          do
          {
            uint64_t v12 = v11 - 3;
            if (__OFADD__(v11 - 4, 1)) {
              goto LABEL_194;
            }
            if (v9[v11] == 5) {
              goto LABEL_6;
            }
            ++v11;
          }
          while (v12 != v10);
LABEL_19:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v10 + 1, 1, v9);
          }
          unint64_t v14 = v9[2];
          unint64_t v13 = v9[3];
          if (v14 >= v13 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v13 > 1), v14 + 1, 1, v9);
          }
          v9[2] = v14 + 1;
          int v6 = &v9[v14];
          uint64_t v7 = 5;
          goto LABEL_4;
        case 8uLL:
        case 9uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v18 = *(void *)(*(void *)a2 + 16);
          if (!v18) {
            goto LABEL_34;
          }
          if (v9[4] == 1) {
            continue;
          }
          if (v18 == 1) {
            goto LABEL_34;
          }
          if (v9[5] == 1) {
            continue;
          }
          if (v18 == 2) {
            goto LABEL_34;
          }
          if (v9[6] == 1) {
            continue;
          }
          if (v18 == 3) {
            goto LABEL_34;
          }
          uint64_t v60 = 7;
          do
          {
            uint64_t v61 = v60 - 3;
            if (__OFADD__(v60 - 4, 1)) {
              goto LABEL_196;
            }
            if (v9[v60] == 1) {
              goto LABEL_6;
            }
            ++v60;
          }
          while (v61 != v18);
LABEL_34:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v18 + 1, 1, v9);
          }
          unint64_t v20 = v9[2];
          unint64_t v19 = v9[3];
          if (v20 >= v19 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v19 > 1), v20 + 1, 1, v9);
          }
          v9[2] = v20 + 1;
          int v6 = &v9[v20];
          uint64_t v7 = 1;
          goto LABEL_4;
        case 0xBuLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v38 = *(void *)(*(void *)a2 + 16);
          if (!v38) {
            goto LABEL_93;
          }
          if (v9[4] == 7) {
            continue;
          }
          if (v38 == 1) {
            goto LABEL_93;
          }
          if (v9[5] == 7) {
            continue;
          }
          if (v38 == 2) {
            goto LABEL_93;
          }
          if (v9[6] == 7) {
            continue;
          }
          if (v38 == 3) {
            goto LABEL_93;
          }
          uint64_t v39 = 7;
          do
          {
            uint64_t v40 = v39 - 3;
            if (__OFADD__(v39 - 4, 1)) {
              goto LABEL_200;
            }
            if (v9[v39] == 7) {
              goto LABEL_6;
            }
            ++v39;
          }
          while (v40 != v38);
LABEL_93:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v38 + 1, 1, v9);
          }
          unint64_t v42 = v9[2];
          unint64_t v41 = v9[3];
          if (v42 >= v41 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v41 > 1), v42 + 1, 1, v9);
          }
          v9[2] = v42 + 1;
          int v6 = &v9[v42];
          uint64_t v7 = 7;
          goto LABEL_4;
        case 0xCuLL:
        case 0xDuLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v21 = *(void *)(*(void *)a2 + 16);
          if (!v21) {
            goto LABEL_42;
          }
          if (v9[4] == 4) {
            continue;
          }
          if (v21 == 1) {
            goto LABEL_42;
          }
          if (v9[5] == 4) {
            continue;
          }
          if (v21 == 2) {
            goto LABEL_42;
          }
          if (v9[6] == 4) {
            continue;
          }
          if (v21 == 3) {
            goto LABEL_42;
          }
          uint64_t v62 = 7;
          do
          {
            uint64_t v63 = v62 - 3;
            if (__OFADD__(v62 - 4, 1)) {
              goto LABEL_197;
            }
            if (v9[v62] == 4) {
              goto LABEL_6;
            }
            ++v62;
          }
          while (v63 != v21);
LABEL_42:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v21 + 1, 1, v9);
          }
          unint64_t v23 = v9[2];
          unint64_t v22 = v9[3];
          if (v23 >= v22 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v22 > 1), v23 + 1, 1, v9);
          }
          v9[2] = v23 + 1;
          int v6 = &v9[v23];
          uint64_t v7 = 4;
          goto LABEL_4;
        case 0xEuLL:
        case 0xFuLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v24 = *(void *)(*(void *)a2 + 16);
          if (!v24) {
            goto LABEL_50;
          }
          if (v9[4] == 2) {
            continue;
          }
          if (v24 == 1) {
            goto LABEL_50;
          }
          if (v9[5] == 2) {
            continue;
          }
          if (v24 == 2) {
            goto LABEL_50;
          }
          if (v9[6] == 2) {
            continue;
          }
          if (v24 == 3) {
            goto LABEL_50;
          }
          uint64_t v64 = 7;
          do
          {
            uint64_t v65 = v64 - 3;
            if (__OFADD__(v64 - 4, 1)) {
              goto LABEL_198;
            }
            if (v9[v64] == 2) {
              goto LABEL_6;
            }
            ++v64;
          }
          while (v65 != v24);
LABEL_50:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v24 + 1, 1, v9);
          }
          unint64_t v26 = v9[2];
          unint64_t v25 = v9[3];
          if (v26 >= v25 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v25 > 1), v26 + 1, 1, v9);
          }
          v9[2] = v26 + 1;
          int v6 = &v9[v26];
          uint64_t v7 = 2;
          goto LABEL_4;
        case 0x10uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v43 = *(void *)(*(void *)a2 + 16);
          if (!v43) {
            goto LABEL_109;
          }
          if (v9[4] == 10) {
            continue;
          }
          if (v43 == 1) {
            goto LABEL_109;
          }
          if (v9[5] == 10) {
            continue;
          }
          if (v43 == 2) {
            goto LABEL_109;
          }
          if (v9[6] == 10) {
            continue;
          }
          if (v43 == 3) {
            goto LABEL_109;
          }
          uint64_t v44 = 7;
          do
          {
            uint64_t v45 = v44 - 3;
            if (__OFADD__(v44 - 4, 1)) {
              goto LABEL_201;
            }
            if (v9[v44] == 10) {
              goto LABEL_6;
            }
            ++v44;
          }
          while (v45 != v43);
LABEL_109:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v43 + 1, 1, v9);
          }
          unint64_t v47 = v9[2];
          unint64_t v46 = v9[3];
          if (v47 >= v46 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v46 > 1), v47 + 1, 1, v9);
          }
          v9[2] = v47 + 1;
          int v6 = &v9[v47];
          uint64_t v7 = 10;
          goto LABEL_4;
        case 0x11uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v48 = *(void *)(*(void *)a2 + 16);
          if (!v48) {
            goto LABEL_125;
          }
          if (v9[4] == 9) {
            continue;
          }
          if (v48 == 1) {
            goto LABEL_125;
          }
          if (v9[5] == 9) {
            continue;
          }
          if (v48 == 2) {
            goto LABEL_125;
          }
          if (v9[6] == 9) {
            continue;
          }
          if (v48 == 3) {
            goto LABEL_125;
          }
          uint64_t v49 = 7;
          do
          {
            uint64_t v50 = v49 - 3;
            if (__OFADD__(v49 - 4, 1)) {
              goto LABEL_202;
            }
            if (v9[v49] == 9) {
              goto LABEL_6;
            }
            ++v49;
          }
          while (v50 != v48);
LABEL_125:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v48 + 1, 1, v9);
          }
          unint64_t v52 = v9[2];
          unint64_t v51 = v9[3];
          if (v52 >= v51 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v51 > 1), v52 + 1, 1, v9);
          }
          v9[2] = v52 + 1;
          int v6 = &v9[v52];
          uint64_t v7 = 9;
          goto LABEL_4;
        case 0x12uLL:
        case 0x13uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v27 = *(void *)(*(void *)a2 + 16);
          if (!v27) {
            goto LABEL_58;
          }
          if (v9[4] == 3) {
            continue;
          }
          if (v27 == 1) {
            goto LABEL_58;
          }
          if (v9[5] == 3) {
            continue;
          }
          if (v27 == 2) {
            goto LABEL_58;
          }
          if (v9[6] == 3) {
            continue;
          }
          if (v27 == 3) {
            goto LABEL_58;
          }
          uint64_t v66 = 7;
          do
          {
            uint64_t v67 = v66 - 3;
            if (__OFADD__(v66 - 4, 1)) {
              goto LABEL_199;
            }
            if (v9[v66] == 3) {
              goto LABEL_6;
            }
            ++v66;
          }
          while (v67 != v27);
LABEL_58:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v27 + 1, 1, v9);
          }
          unint64_t v29 = v9[2];
          unint64_t v28 = v9[3];
          if (v29 >= v28 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v28 > 1), v29 + 1, 1, v9);
          }
          v9[2] = v29 + 1;
          int v6 = &v9[v29];
          uint64_t v7 = 3;
          goto LABEL_4;
        case 0x14uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v53 = *(void *)(*(void *)a2 + 16);
          if (!v53) {
            goto LABEL_141;
          }
          if (v9[4] == 8) {
            continue;
          }
          if (v53 == 1) {
            goto LABEL_141;
          }
          if (v9[5] == 8) {
            continue;
          }
          if (v53 == 2) {
            goto LABEL_141;
          }
          if (v9[6] == 8) {
            continue;
          }
          if (v53 == 3) {
            goto LABEL_141;
          }
          uint64_t v54 = 7;
          do
          {
            uint64_t v55 = v54 - 3;
            if (__OFADD__(v54 - 4, 1)) {
              goto LABEL_203;
            }
            if (v9[v54] == 8) {
              goto LABEL_6;
            }
            ++v54;
          }
          while (v55 != v53);
LABEL_141:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v53 + 1, 1, v9);
          }
          unint64_t v57 = v9[2];
          unint64_t v56 = v9[3];
          if (v57 >= v56 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v56 > 1), v57 + 1, 1, v9);
          }
          v9[2] = v57 + 1;
          int v6 = &v9[v57];
          uint64_t v7 = 8;
LABEL_4:
          uint64_t v6[4] = v7;
          goto LABEL_5;
        case 0x16uLL:
        case 0x17uLL:
          uint64_t v9 = *(void **)a2;
          uint64_t v30 = *(void *)(*(void *)a2 + 16);
          if (!v30) {
            goto LABEL_74;
          }
          if (!v9[4]) {
            continue;
          }
          if (v30 == 1) {
            goto LABEL_74;
          }
          if (!v9[5]) {
            continue;
          }
          if (v30 == 2) {
            goto LABEL_74;
          }
          if (!v9[6]) {
            continue;
          }
          if (v30 == 3) {
            goto LABEL_74;
          }
          uint64_t v31 = 7;
          break;
        default:
          continue;
      }
      while (1)
      {
        uint64_t v32 = v31 - 3;
        if (__OFADD__(v31 - 4, 1))
        {
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
          JUMPOUT(0x1C3D0BA20);
        }
        if (!v9[v31]) {
          break;
        }
        ++v31;
        if (v32 == v30)
        {
LABEL_74:
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D833E0(0, v30 + 1, 1, v9);
          }
          unint64_t v34 = v9[2];
          unint64_t v33 = v9[3];
          if (v34 >= v33 >> 1) {
            uint64_t v9 = sub_1C3D833E0((void *)(v33 > 1), v34 + 1, 1, v9);
          }
          v9[2] = v34 + 1;
          v9[v34 + 4] = 0;
LABEL_5:
          swift_release();
          *(void *)a2 = v9;
          break;
        }
      }
LABEL_6:
      ;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1C3D0BA80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v6 = *(void *)(a1 + 8 * v3 + 32);
    if (((v6 >> 59) & 0x1E | (v6 >> 2) & 1) == 0xB)
    {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v9 = *(void *)(v7 + 16);
      uint64_t v8 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1C3D8288C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v11 = v4[2];
      unint64_t v10 = v4[3];
      if (v11 >= v10 >> 1) {
        uint64_t v4 = sub_1C3D8288C((void *)(v10 > 1), v11 + 1, 1, v4);
      }
      v4[2] = v11 + 1;
      unint64_t v5 = &v4[2 * v11];
      void v5[4] = v9;
      v5[5] = v8;
    }
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C3D0BB9C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      uint64_t v3 = sub_1C3D0BB9C(a1);
      break;
    case 2uLL:
      v2 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_4:
      uint64_t v12 = MEMORY[0x1E4FBC860];
      uint64_t v4 = *(void *)(*(void *)(v2 + 16) + 16);
      if (v4)
      {
        uint64_t v5 = swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v4; ++i)
        {
          uint64_t v7 = sub_1C3D0BB9C(v5);
          uint64_t v5 = sub_1C3D79560(v7);
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = v12;
      }
      break;
    case 0x16uLL:
      uint64_t v8 = v2 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v10 = *(void *)(v8 + 16);
      uint64_t v9 = *(void *)(v8 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
      *(void *)(v3 + 32) = v10;
      *(void *)(v3 + 40) = v9;
      swift_bridgeObjectRetain();
      break;
    default:
      return v3;
  }
  return v3;
}

uint64_t sub_1C3D0BD24@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(result + 32);
    while (2)
    {
      unint64_t v6 = *v4++;
      unint64_t v5 = v6;
      switch((v6 >> 59) & 0x1E | (v6 >> 2) & 1)
      {
        case 0uLL:
          goto LABEL_8;
        case 1uLL:
          uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
          *(void *)(inited + 32) = v7;
          swift_retain();
          swift_retain();
          sub_1C3D0BD24(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          return swift_release();
        case 2uLL:
          v5 &= 0xFFFFFFFFFFFFFFBuLL;
LABEL_8:
          uint64_t v9 = *(void *)(v5 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C3D0BD24(v9);
          swift_release();
          unint64_t result = swift_bridgeObjectRelease();
          break;
        case 0x17uLL:
          *a2 = v5;
          unint64_t result = swift_retain();
          break;
        default:
          if (--v3) {
            continue;
          }
          goto LABEL_5;
      }
      break;
    }
  }
  else
  {
LABEL_5:
    *a2 = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1C3D0BF34(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C3D0BF50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3D0BFB8(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = 0;
  uint64_t v22 = result + 32;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  do
  {
    if (v2 <= v1) {
      unint64_t v3 = v1;
    }
    else {
      unint64_t v3 = v2;
    }
    unint64_t v23 = v3;
    while (1)
    {
      if (v2 == v23) {
        goto LABEL_35;
      }
      uint64_t v4 = (uint64_t *)(v22 + 16 * v2);
      uint64_t v6 = *v4;
      uint64_t v5 = v4[1];
      ++v2;
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_1C3D0A960();
      uint64_t v8 = v7;
      uint64_t v9 = v7[2];
      if (!v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      unint64_t v10 = v1;
      if (v7[4] != v6 || v7[5] != v5)
      {
        unint64_t result = sub_1C3DBB3B8();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_7:
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v1 = v10;
      if (v2 == v10) {
        return v21;
      }
    }
    if (v9 != 1)
    {
      uint64_t v12 = v8 + 7;
      uint64_t v13 = 1;
      while (1)
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (*(v12 - 1) == v6 && *v12 == v5) {
          goto LABEL_7;
        }
        unint64_t result = sub_1C3DBB3B8();
        if (result) {
          goto LABEL_7;
        }
        v12 += 2;
        ++v13;
        if (v14 == v9) {
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    unint64_t v1 = v10;
LABEL_26:
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v21;
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1C3C9D1E0(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v16 = v21;
    }
    uint64_t v17 = v16;
    unint64_t v19 = *(void *)(v16 + 16);
    unint64_t v18 = *(void *)(v16 + 24);
    if (v19 >= v18 >> 1)
    {
      unint64_t result = sub_1C3C9D1E0(v18 > 1, v19 + 1, 1);
      uint64_t v17 = v21;
    }
    *(void *)(v17 + 16) = v19 + 1;
    uint64_t v21 = v17;
    uint64_t v20 = v17 + 16 * v19;
    *(void *)(v20 + 32) = v6;
    *(void *)(v20 + 40) = v5;
  }
  while (v2 != v1);
  return v21;
}

uint64_t sub_1C3D0C1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v29 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v27 = a2;
  id v28 = self;
  uint64_t v8 = 0;
  uint64_t v26 = a3;
  while (1)
  {
    uint64_t v9 = (uint64_t *)(v29 + 16 * v8);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1C3DB9BF8();
    id v13 = objc_msgSend(v28, sel_hashtagObjectIDWithStandardizedContent_context_, v12, a2);

    if (v13) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v8 == v5)
    {
      swift_bridgeObjectRelease();
      return v30;
    }
  }
  uint64_t v14 = *(void **)a3;
  uint64_t v15 = *(void *)(*(void *)a3 + 16);
  if (!v15)
  {
LABEL_17:
    uint64_t v21 = swift_bridgeObjectRelease();
    MEMORY[0x1C877B4F0](v21);
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C3DBA068();
    }
    sub_1C3DBA0C8();
    sub_1C3DBA038();
    goto LABEL_4;
  }
  BOOL v16 = v14[4] == v11 && v14[5] == v10;
  if (v16 || (sub_1C3DBB3B8() & 1) != 0)
  {
    unint64_t v17 = 0;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v22 = v14 + 7;
    uint64_t v23 = 1;
    do
    {
      if (v15 == v23)
      {
        a3 = v26;
        goto LABEL_16;
      }
      unint64_t v17 = v23;
      if (*(v22 - 1) == v11 && *v22 == v10) {
        break;
      }
      char v25 = sub_1C3DBB3B8();
      uint64_t v23 = v17 + 1;
      v22 += 2;
    }
    while ((v25 & 1) == 0);
    a3 = v26;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
  }
  uint64_t v14 = sub_1C3D70F10(v14);
LABEL_13:
  unint64_t v18 = v14[2];
  if (v17 < v18)
  {
    unint64_t v19 = v18 - 1;
    uint64_t v20 = v18 - 1 - v17;
    if (v20 < 0) {
      goto LABEL_33;
    }
    memmove(&v14[2 * v17 + 4], &v14[2 * v17 + 6], 16 * v20);
    v14[2] = v19;
    *(void *)a3 = v14;
    swift_bridgeObjectRelease();
LABEL_16:
    a2 = v27;
    goto LABEL_17;
  }
  __break(1u);
LABEL_33:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D0C44C(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    unint64_t v18 = v17 | 0x9000000000000004;
    unint64_t v19 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v20 = (char *)objc_allocWithZone(v19);
    *(void *)&v20[OBJC_IVAR___ICQueryObjC_type] = v18;
    v26.receiver = v20;
    v26.super_class = v19;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = (char *)objc_msgSendSuper2(&v26, sel_init);
    uint64_t v22 = &v21[OBJC_IVAR___ICQueryObjC_type];
    swift_beginAccess();
    uint64_t v23 = *(void *)v22;
    swift_retain();
    swift_bridgeObjectRelease();

    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C3D82FFC(0, v8[2] + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    unint64_t v25 = v8[2];
    unint64_t v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C3D82FFC((void *)(v24 > 1), v25 + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    v8[2] = v25 + 1;
    v8[v25 + 4] = v23;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C3D0C6E4(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    uint64_t v18 = v17 | 0x6000000000000004;
    unint64_t v19 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v20 = (char *)objc_allocWithZone(v19);
    *(void *)&v20[OBJC_IVAR___ICQueryObjC_type] = v18;
    v26.receiver = v20;
    v26.super_class = v19;
    swift_bridgeObjectRetain_n();
    uint64_t v21 = (char *)objc_msgSendSuper2(&v26, sel_init);
    uint64_t v22 = &v21[OBJC_IVAR___ICQueryObjC_type];
    swift_beginAccess();
    uint64_t v23 = *(void *)v22;
    swift_retain();
    swift_bridgeObjectRelease();

    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C3D82FFC(0, v8[2] + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    unint64_t v25 = v8[2];
    unint64_t v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C3D82FFC((void *)(v24 > 1), v25 + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    v8[2] = v25 + 1;
    v8[v25 + 4] = v23;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void (*sub_1C3D0C97C())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3D0C998(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C3D0CA08@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *a1 = *v3;
  return swift_retain();
}

uint64_t sub_1C3D0CA64(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *uint64_t v3 = v2;
  return swift_release();
}

uint64_t (*sub_1C3D0CAC8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C3D0CB78()
{
  return sub_1C3D0CD08(ICQueryType.minimumSupportedVersion.getter);
}

uint64_t sub_1C3D0CBE8()
{
  uint64_t v0 = swift_beginAccess();
  return ICQueryType.canBeEdited.getter(v0) & 1;
}

uint64_t sub_1C3D0CC78()
{
  return 0x65746F4E4349;
}

uint64_t sub_1C3D0CCF0()
{
  return sub_1C3D0CD08((uint64_t (*)(uint64_t))ICQueryType.predicate.getter);
}

uint64_t sub_1C3D0CD08(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = swift_beginAccess();
  return a1(v2);
}

id ICQuery.__allocating_init(entity:type:)(uint64_t a1, void *a2)
{
  unint64_t v4 = (char *)objc_allocWithZone(v2);
  *(void *)&v4[OBJC_IVAR___ICQueryObjC_type] = *a2;
  v6.receiver = v4;
  v6.super_class = v2;
  return objc_msgSendSuper2(&v6, sel_init);
}

id ICQuery.init(entity:type:)(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR___ICQueryObjC_type] = *a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ICQuery();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ICQuery()
{
  return self;
}

uint64_t sub_1C3D0CE88()
{
  sub_1C3DBAC68();
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ICQuery();
  id v1 = objc_msgSendSuper2(&v3, sel_debugDescription);
  sub_1C3DB9C38();

  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DBAEE8();
  sub_1C3DB9D68();
  swift_beginAccess();
  sub_1C3DBAEE8();
  return v4;
}

uint64_t sub_1C3D0CFD4(uint64_t a1)
{
  sub_1C3C499AC(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1C3C2A448((uint64_t)v10, qword_1EB6FB1D8);
    goto LABEL_5;
  }
  type metadata accessor for ICQuery();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v5 = 0;
    return v5 & 1;
  }
  uint64_t v2 = v8;
  objc_super v3 = (uint64_t *)&v8[OBJC_IVAR___ICQueryObjC_type];
  swift_beginAccess();
  uint64_t v9 = *v3;
  uint64_t v4 = (unint64_t *)(v1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  unint64_t v7 = *v4;
  swift_retain();
  swift_retain();
  char v5 = static ICQueryType.== infix(_:_:)(&v9, &v7);
  swift_release();
  swift_release();

  return v5 & 1;
}

id ICQuery.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ICQuery.init()()
{
}

uint64_t sub_1C3D0D204()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x797469746E65;
  }
}

uint64_t sub_1C3D0D234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D10AC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D0D25C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D10944();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D0D298(uint64_t a1)
{
  unint64_t v2 = sub_1C3D10944();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ICQuery.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3D0D320(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387DD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D10944();
  sub_1C3DBB6D8();
  char v13 = 0;
  sub_1C3D10998();
  sub_1C3DBB1E8();
  if (!v2)
  {
    uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR___ICQueryObjC_type);
    swift_beginAccess();
    uint64_t v12 = *v9;
    v11[15] = 1;
    sub_1C3C72594();
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id ICQuery.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ICQuery.init(from:)(a1);
}

id ICQuery.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387DE8);
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D10944();
  uint64_t v8 = v1;
  id v9 = v7;
  sub_1C3DBB6B8();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    type metadata accessor for ICQuery();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v15;
    LOBYTE(v19) = 0;
    sub_1C3D109EC();
    uint64_t v11 = v16;
    sub_1C3DBB108();
    char v18 = 1;
    sub_1C3C72400();
    sub_1C3DBB108();
    *(void *)&v8[OBJC_IVAR___ICQueryObjC_type] = v19;

    char v13 = (objc_class *)type metadata accessor for ICQuery();
    v17.receiver = v8;
    v17.super_class = v13;
    id v9 = objc_msgSendSuper2(&v17, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v9;
}

id sub_1C3D0D738@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ICQuery());
  id result = ICQuery.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C3D0D78C(void *a1)
{
  return sub_1C3D0D320(a1);
}

id static ICQuery.makeQueryForNotesMatching(_:)(void *a1)
{
  id v3 = objc_msgSend(a1, sel_filterTypeSelections);
  sub_1C3D10A40();
  unint64_t v4 = sub_1C3DBA018();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_1C3DBAFB8();
    uint64_t v5 = (uint64_t)result;
    id v22 = a1;
    if (result) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  id v22 = a1;
  if (!v5) {
    goto LABEL_16;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1C877C220](v7, v4);
    }
    else {
      id v9 = *(id *)(v4 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    unint64_t v25 = v9;
    sub_1C3D0DA54(&v25, v1, &v24);

    uint64_t v11 = v24;
    if ((~v24 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1C3D82FFC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v13 = v8[2];
      unint64_t v12 = v8[3];
      if (v13 >= v12 >> 1) {
        uint64_t v8 = sub_1C3D82FFC((void *)(v12 > 1), v13 + 1, 1, v8);
      }
      v8[2] = v13 + 1;
      v8[v13 + 4] = v11;
    }
    ++v7;
  }
  while (v5 != v7);
LABEL_17:
  swift_bridgeObjectRelease_n();
  id v14 = objc_msgSend(v22, sel_joinOperator);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v8;
  if (v14) {
    uint64_t v16 = v15 | 0x1000000000000000;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C3DD5130;
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = objc_msgSend(v22, sel_includeRecentlyDeleted);
  *(void *)(v18 + 32) = v19 | 0x5000000000000000;
  *(void *)(v18 + 40) = v16;
  *(void *)(v17 + 16) = v18;
  uint64_t v20 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  *(void *)&v21[OBJC_IVAR___ICQueryObjC_type] = v17;
  v23.receiver = v21;
  v23.super_class = v20;
  return objc_msgSendSuper2(&v23, sel_init);
}

void sub_1C3D0DA54(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  v422 = a3;
  id v421 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v420 = (uint64_t)&v388 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v409 = (char *)&v388 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v400 = (char *)&v388 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v408 = (char *)&v388 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v399 = (char *)&v388 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v407 = (char *)&v388 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v415 = (char *)&v388 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v414 = (char *)&v388 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v405 = (char *)&v388 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v413 = (char *)&v388 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v404 = (char *)&v388 - v26;
  MEMORY[0x1F4188790](v25);
  v412 = (char *)&v388 - v27;
  uint64_t v28 = sub_1C3DB8AF8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v417 = v28;
  uint64_t v418 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v398 = (char *)&v388 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v401 = (char *)&v388 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v395 = (char *)&v388 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v403 = (char *)&v388 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v394 = (char *)&v388 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v402 = (char *)&v388 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v406 = (char *)&v388 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v411 = (char *)&v388 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v397 = (char *)&v388 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  v410 = (char *)&v388 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v396 = (char *)&v388 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v416 = (char *)&v388 - v53;
  MEMORY[0x1F4188790](v52);
  uint64_t v55 = (char *)&v388 - v54;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386AB0);
  uint64_t v57 = MEMORY[0x1F4188790](v56 - 8);
  uint64_t v59 = (char *)&v388 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v57);
  uint64_t v61 = (char *)&v388 - v60;
  uint64_t v62 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  v419 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v62 - 8);
  uint64_t v63 = MEMORY[0x1F4188790](v62);
  uint64_t v65 = (char *)&v388 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v63);
  uint64_t v67 = (char *)&v388 - v66;
  uint64_t v68 = *a1;
  self;
  uint64_t v69 = swift_dynamicCastObjCClass();
  if (v69)
  {
    uint64_t v70 = (void *)v69;
    id v71 = v68;
    uint64_t v72 = _s11NotesShared7ICQueryC012makeQueryForA8MatchingyACSo14ICTagSelectionCFZ_0(v70);

    uint64_t v73 = OBJC_IVAR___ICQueryObjC_type;
LABEL_3:
    uint64_t v74 = (uint64_t *)&v72[v73];
    swift_beginAccess();
    uint64_t v75 = *v74;
    swift_retain();

    goto LABEL_135;
  }
  v392 = v67;
  v393 = v61;
  v390 = v65;
  v391 = v59;
  v389 = v55;
  uint64_t v76 = v420;
  self;
  uint64_t v77 = swift_dynamicCastObjCClass();
  if (v77)
  {
    id v78 = (void *)v77;
    id v79 = v68;
    id v80 = objc_msgSend(v78, sel_selectionType);
    id v81 = v419;
    switch((unint64_t)v80)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 7uLL:
        uint64_t v82 = (uint64_t)v393;
        sub_1C3D1017C(v78, (uint64_t)v393);
        if (v81[6](v82, 1, v62) == 1)
        {

          goto LABEL_12;
        }
        uint64_t v87 = (uint64_t)v392;
        sub_1C3D11FA4(v82, (uint64_t)v392);
        uint64_t v88 = swift_allocBox();
        sub_1C3D12008(v87, v89);
        uint64_t v90 = v88 | 0x4000000000000004;
        uint64_t v91 = (objc_class *)type metadata accessor for ICQuery();
        uint64_t v92 = (char *)objc_allocWithZone(v91);
        *(void *)&v92[OBJC_IVAR___ICQueryObjC_type] = v90;
        v424.receiver = v92;
        v424.super_class = v91;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v424, sel_init);

        goto LABEL_17;
      case 6uLL:
        id v110 = objc_msgSend(v78, sel_primaryDate);
        if (!v110)
        {
          uint64_t v115 = (uint64_t)v413;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v413, 1, 1, v417);
          goto LABEL_60;
        }
        uint64_t v111 = v110;
        uint64_t v420 = (uint64_t)v78;
        long long v112 = v416;
        sub_1C3DB8AC8();

        uint64_t v113 = v417;
        id v114 = (void *)v418;
        uint64_t v115 = (uint64_t)v413;
        v419 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v418 + 32);
        ((void (*)(char *, char *, uint64_t))v419)(v413, v112, v417);
        v415 = (char *)v114[7];
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v415)(v115, 0, 1, v113);
        uint64_t v116 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v114[6];
        if (v116(v115, 1, v113) == 1) {
          goto LABEL_60;
        }
        id v421 = v79;
        uint64_t v117 = v115;
        id v118 = v410;
        ((void (*)(char *, uint64_t, uint64_t))v419)(v410, v117, v113);
        id v119 = objc_msgSend((id)v420, sel_secondaryDate);
        uint64_t v120 = v113;
        if (!v119)
        {
          id v123 = v405;
          goto LABEL_75;
        }
        v121 = v119;
        id v122 = v416;
        sub_1C3DB8AC8();

        id v123 = v405;
        uint64_t v124 = v122;
        id v118 = v410;
        ((void (*)(char *, char *, uint64_t))v419)(v405, v124, v120);
        ((void (*)(char *, void, uint64_t, uint64_t))v415)(v123, 0, 1, v120);
        if (v116((uint64_t)v123, 1, v120) == 1) {
          goto LABEL_76;
        }
        id v125 = v397;
        ((void (*)(char *, char *, uint64_t))v419)(v397, v123, v120);
        uint64_t v126 = v120;
        uint64_t v127 = type metadata accessor for ICQueryType.DateRange(0);
        uint64_t v128 = swift_allocBox();
        id v129 = v118;
        uint64_t v131 = v130;
        long long v132 = (void (*)(uint64_t, char *, uint64_t))v114[2];
        v132(v130, v129, v126);
        v132(v131 + *(int *)(v127 + 20), v125, v126);
        long long v133 = (objc_class *)type metadata accessor for ICQuery();
        uint64_t v134 = (char *)objc_allocWithZone(v133);
        *(void *)&v134[OBJC_IVAR___ICQueryObjC_type] = v128 | 0x4000000000000000;
        v426.receiver = v134;
        v426.super_class = v133;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v426, sel_init);

        id v135 = (void (*)(char *, uint64_t))v114[1];
        v135(v125, v126);
        long long v136 = v410;
        goto LABEL_50;
      case 8uLL:
        id v137 = objc_msgSend(v78, sel_primaryDate);
        if (v137)
        {
          uint64_t v138 = v137;
          uint64_t v420 = (uint64_t)v78;
          uint64_t v139 = v416;
          sub_1C3DB8AC8();

          uint64_t v140 = v417;
          id v114 = (void *)v418;
          uint64_t v115 = (uint64_t)v412;
          v419 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v418 + 32);
          ((void (*)(char *, char *, uint64_t))v419)(v412, v139, v417);
          v415 = (char *)v114[7];
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v415)(v115, 0, 1, v140);
          uint64_t v141 = (unsigned int (*)(char *, uint64_t, uint64_t))v114[6];
          if (v141((char *)v115, 1, v140) != 1)
          {
            id v421 = v79;
            uint64_t v142 = v115;
            id v118 = v389;
            ((void (*)(char *, uint64_t, uint64_t))v419)(v389, v142, v140);
            id v143 = objc_msgSend((id)v420, sel_secondaryDate);
            uint64_t v120 = v140;
            if (v143)
            {
              uint64_t v144 = v143;
              uint64_t v145 = v416;
              sub_1C3DB8AC8();

              id v123 = v404;
              v146 = v145;
              id v118 = v389;
              ((void (*)(char *, char *, uint64_t))v419)(v404, v146, v120);
              ((void (*)(char *, void, uint64_t, uint64_t))v415)(v123, 0, 1, v120);
              if (v141(v123, 1, v120) != 1)
              {
                uint64_t v147 = v396;
                ((void (*)(char *, char *, uint64_t))v419)(v396, v123, v120);
                uint64_t v126 = v120;
                uint64_t v148 = type metadata accessor for ICQueryType.DateRange(0);
                uint64_t v149 = swift_allocBox();
                uint64_t v150 = v118;
                uint64_t v152 = v151;
                id v153 = (void (*)(uint64_t, char *, uint64_t))v114[2];
                v153(v151, v150, v126);
                v153(v152 + *(int *)(v148 + 20), v147, v126);
                uint64_t v154 = (objc_class *)type metadata accessor for ICQuery();
                os_log_type_t v155 = (char *)objc_allocWithZone(v154);
                *(void *)&v155[OBJC_IVAR___ICQueryObjC_type] = v149 | 0x4000000000000000;
                v425.receiver = v155;
                v425.super_class = v154;
                uint64_t v72 = (char *)objc_msgSendSuper2(&v425, sel_init);

                id v135 = (void (*)(char *, uint64_t))v114[1];
                v135(v147, v126);
                long long v136 = v389;
                goto LABEL_50;
              }
            }
            else
            {
              id v123 = v404;
LABEL_75:
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v415)(v123, 1, 1, v120);
            }
LABEL_76:

            ((void (*)(char *, uint64_t))v114[1])(v118, v120);
            uint64_t v115 = (uint64_t)v123;
LABEL_77:
            sub_1C3C2A448(v115, &qword_1EB6FB1B8);
            goto LABEL_134;
          }
        }
        else
        {
          uint64_t v115 = (uint64_t)v412;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v412, 1, 1, v417);
        }
LABEL_60:

        goto LABEL_77;
      case 9uLL:
        id v421 = v79;
        id v156 = objc_msgSend(v78, sel_primaryDate);
        if (!v156)
        {
          uint64_t v162 = (uint64_t)v414;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v414, 1, 1, v417);
          goto LABEL_70;
        }
        uint64_t v157 = v156;
        id v158 = v416;
        sub_1C3DB8AC8();

        uint64_t v160 = v417;
        uint64_t v159 = v418;
        unint64_t v161 = *(void (**)(char *, char *, uint64_t))(v418 + 32);
        uint64_t v162 = (uint64_t)v414;
        v161(v414, v158, v417);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v162, 0, 1, v160);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v162, 1, v160) == 1) {
          goto LABEL_70;
        }
        os_log_t v163 = v411;
        v161(v411, (char *)v162, v160);
        uint64_t v164 = type metadata accessor for ICQueryType.DateRange(0);
        uint64_t v420 = swift_allocBox();
        uint64_t v166 = v165;
        sub_1C3DB8998();
        (*(void (**)(char *, char *, uint64_t))(v159 + 16))(&v166[*(int *)(v164 + 20)], v163, v160);
        v161(v166, v158, v160);
        unint64_t v167 = v420 | 0x4000000000000000;
        long long v168 = (objc_class *)type metadata accessor for ICQuery();
        id v169 = (char *)objc_allocWithZone(v168);
        *(void *)&v169[OBJC_IVAR___ICQueryObjC_type] = v167;
        v427.receiver = v169;
        v427.super_class = v168;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v427, sel_init);

        uint64_t v170 = *(void (**)(char *, uint64_t))(v159 + 8);
        uint64_t v171 = v411;
        goto LABEL_57;
      case 0xAuLL:
        id v421 = v79;
        id v172 = objc_msgSend(v78, sel_primaryDate);
        if (!v172)
        {
          uint64_t v162 = (uint64_t)v415;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v415, 1, 1, v417);
          goto LABEL_70;
        }
        unint64_t v173 = v172;
        uint64_t v174 = v416;
        sub_1C3DB8AC8();

        uint64_t v175 = v417;
        uint64_t v176 = v418;
        uint64_t v177 = *(void (**)(char *, char *, uint64_t))(v418 + 32);
        uint64_t v162 = (uint64_t)v415;
        v177(v415, v174, v417);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v176 + 56))(v162, 0, 1, v175);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v162, 1, v175) == 1) {
          goto LABEL_70;
        }
        v178 = v406;
        v177(v406, (char *)v162, v175);
        uint64_t v179 = type metadata accessor for ICQueryType.DateRange(0);
        uint64_t v420 = swift_allocBox();
        uint64_t v181 = v180;
        sub_1C3DB8A08();
        (*(void (**)(uint64_t, char *, uint64_t))(v176 + 16))(v181, v178, v175);
        v182 = v174;
        uint64_t v183 = v175;
        v177((char *)(v181 + *(int *)(v179 + 20)), v182, v175);
        unint64_t v184 = v420 | 0x4000000000000000;
        uint64_t v185 = (objc_class *)type metadata accessor for ICQuery();
        v186 = (char *)objc_allocWithZone(v185);
        *(void *)&v186[OBJC_IVAR___ICQueryObjC_type] = v184;
        v428.receiver = v186;
        v428.super_class = v185;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v428, sel_init);

        (*(void (**)(char *, uint64_t))(v176 + 8))(v178, v183);
        goto LABEL_18;
      default:
        goto LABEL_133;
    }
  }
  self;
  uint64_t v83 = swift_dynamicCastObjCClass();
  id v84 = v419;
  if (v83)
  {
    id v85 = (void *)v83;
    id v86 = v68;
    switch((unint64_t)objc_msgSend(v85, sel_selectionType))
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 7uLL:
        uint64_t v82 = (uint64_t)v391;
        sub_1C3D1017C(v85, (uint64_t)v391);
        if (v84[6](v82, 1, v62) == 1)
        {

LABEL_12:
          sub_1C3C2A448(v82, &qword_1EA386AB0);
          goto LABEL_134;
        }
        uint64_t v87 = (uint64_t)v390;
        sub_1C3D11FA4(v82, (uint64_t)v390);
        uint64_t v100 = swift_allocBox();
        sub_1C3D12008(v87, v101);
        uint64_t v102 = v100 | 0x7000000000000004;
        unint64_t v103 = (objc_class *)type metadata accessor for ICQuery();
        uint64_t v104 = (char *)objc_allocWithZone(v103);
        *(void *)&v104[OBJC_IVAR___ICQueryObjC_type] = v102;
        v429.receiver = v104;
        v429.super_class = v103;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v429, sel_init);

LABEL_17:
        sub_1C3D1206C(v87);
        goto LABEL_18;
      case 6uLL:
        id v421 = v86;
        id v192 = objc_msgSend(v85, sel_primaryDate);
        if (!v192)
        {
          uint64_t v162 = (uint64_t)v408;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v408, 1, 1, v417);
          goto LABEL_70;
        }
        v193 = v192;
        uint64_t v194 = v416;
        sub_1C3DB8AC8();

        uint64_t v195 = v417;
        v196 = (void *)v418;
        uint64_t v162 = (uint64_t)v408;
        uint64_t v420 = *(void *)(v418 + 32);
        ((void (*)(char *, char *, uint64_t))v420)(v408, v194, v417);
        v419 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v196[7];
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v419)(v162, 0, 1, v195);
        v197 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v196[6];
        if (v197(v162, 1, v195) == 1) {
          goto LABEL_70;
        }
        ((void (*)(char *, uint64_t, uint64_t))v420)(v403, v162, v195);
        id v198 = objc_msgSend(v85, sel_secondaryDate);
        if (v198)
        {
          v199 = v198;
          v200 = v416;
          sub_1C3DB8AC8();

          uint64_t v162 = (uint64_t)v400;
          v201 = v200;
          v202 = v403;
          ((void (*)(char *, char *, uint64_t))v420)(v400, v201, v195);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v419)(v162, 0, 1, v195);
          if (v197(v162, 1, v195) != 1)
          {
            v203 = v395;
            ((void (*)(char *, uint64_t, uint64_t))v420)(v395, v162, v195);
            uint64_t v126 = v195;
            uint64_t v204 = type metadata accessor for ICQueryType.DateRange(0);
            uint64_t v205 = swift_allocBox();
            v206 = v202;
            uint64_t v208 = v207;
            v209 = (void (*)(uint64_t, char *, uint64_t))v196[2];
            v209(v207, v206, v126);
            v209(v208 + *(int *)(v204 + 20), v203, v126);
            v210 = (objc_class *)type metadata accessor for ICQuery();
            v211 = (char *)objc_allocWithZone(v210);
            *(void *)&v211[OBJC_IVAR___ICQueryObjC_type] = v205 | 0x7000000000000000;
            v431.receiver = v211;
            v431.super_class = v210;
            uint64_t v72 = (char *)objc_msgSendSuper2(&v431, sel_init);

            id v135 = (void (*)(char *, uint64_t))v196[1];
            v135(v203, v126);
            long long v136 = v403;
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v162 = (uint64_t)v400;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v419)(v400, 1, 1, v195);
          v202 = v403;
        }

        ((void (*)(char *, uint64_t))v196[1])(v202, v195);
        goto LABEL_71;
      case 8uLL:
        id v421 = v86;
        id v212 = objc_msgSend(v85, sel_primaryDate);
        if (!v212)
        {
          uint64_t v162 = (uint64_t)v407;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v407, 1, 1, v417);
          goto LABEL_70;
        }
        v213 = v212;
        v214 = v416;
        sub_1C3DB8AC8();

        uint64_t v215 = v417;
        v216 = (void *)v418;
        uint64_t v162 = (uint64_t)v407;
        uint64_t v420 = *(void *)(v418 + 32);
        ((void (*)(char *, char *, uint64_t))v420)(v407, v214, v417);
        v419 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v216[7];
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v419)(v162, 0, 1, v215);
        v217 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v216[6];
        if (v217(v162, 1, v215) == 1) {
          goto LABEL_70;
        }
        ((void (*)(char *, uint64_t, uint64_t))v420)(v402, v162, v215);
        id v218 = objc_msgSend(v85, sel_secondaryDate);
        if (v218)
        {
          v219 = v218;
          v220 = v416;
          sub_1C3DB8AC8();

          uint64_t v162 = (uint64_t)v399;
          ((void (*)(char *, char *, uint64_t))v420)(v399, v220, v215);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v419)(v162, 0, 1, v215);
          if (v217(v162, 1, v215) != 1)
          {
            v221 = v394;
            ((void (*)(char *, uint64_t, uint64_t))v420)(v394, v162, v215);
            uint64_t v126 = v215;
            uint64_t v222 = type metadata accessor for ICQueryType.DateRange(0);
            uint64_t v223 = swift_allocBox();
            uint64_t v225 = v224;
            v226 = (void (*)(uint64_t, char *, uint64_t))v216[2];
            v226(v224, v402, v126);
            v226(v225 + *(int *)(v222 + 20), v221, v126);
            v227 = (objc_class *)type metadata accessor for ICQuery();
            v228 = (char *)objc_allocWithZone(v227);
            *(void *)&v228[OBJC_IVAR___ICQueryObjC_type] = v223 | 0x7000000000000000;
            v430.receiver = v228;
            v430.super_class = v227;
            uint64_t v72 = (char *)objc_msgSendSuper2(&v430, sel_init);

            id v135 = (void (*)(char *, uint64_t))v216[1];
            v135(v221, v126);
            long long v136 = v402;
LABEL_50:
            v135(v136, v126);
LABEL_18:
            uint64_t v73 = OBJC_IVAR___ICQueryObjC_type;
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v162 = (uint64_t)v399;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v419)(v399, 1, 1, v215);
        }

        ((void (*)(char *, uint64_t))v216[1])(v402, v215);
        goto LABEL_71;
      case 9uLL:
        id v421 = v86;
        id v229 = objc_msgSend(v85, sel_primaryDate);
        if (!v229)
        {
          uint64_t v162 = (uint64_t)v409;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v409, 1, 1, v417);
          goto LABEL_70;
        }
        v230 = v229;
        v231 = v416;
        sub_1C3DB8AC8();

        uint64_t v160 = v417;
        uint64_t v232 = v418;
        v233 = *(void (**)(char *, char *, uint64_t))(v418 + 32);
        uint64_t v162 = (uint64_t)v409;
        v233(v409, v231, v417);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v232 + 56))(v162, 0, 1, v160);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v232 + 48))(v162, 1, v160) == 1) {
          goto LABEL_70;
        }
        v234 = v401;
        v233(v401, (char *)v162, v160);
        uint64_t v235 = type metadata accessor for ICQueryType.DateRange(0);
        uint64_t v420 = swift_allocBox();
        v237 = v236;
        sub_1C3DB8998();
        (*(void (**)(char *, char *, uint64_t))(v232 + 16))(&v237[*(int *)(v235 + 20)], v234, v160);
        v233(v237, v231, v160);
        unint64_t v238 = v420 | 0x7000000000000000;
        v239 = (objc_class *)type metadata accessor for ICQuery();
        v240 = (char *)objc_allocWithZone(v239);
        *(void *)&v240[OBJC_IVAR___ICQueryObjC_type] = v238;
        v432.receiver = v240;
        v432.super_class = v239;
        uint64_t v72 = (char *)objc_msgSendSuper2(&v432, sel_init);

        uint64_t v170 = *(void (**)(char *, uint64_t))(v232 + 8);
        uint64_t v171 = v401;
        goto LABEL_57;
      case 0xAuLL:
        id v421 = v86;
        id v241 = objc_msgSend(v85, sel_primaryDate);
        if (v241)
        {
          v242 = v241;
          v243 = v416;
          sub_1C3DB8AC8();

          uint64_t v160 = v417;
          uint64_t v244 = v418;
          v245 = *(void (**)(uint64_t, char *, uint64_t))(v418 + 32);
          uint64_t v162 = v76;
          v245(v76, v243, v417);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56))(v76, 0, 1, v160);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48))(v76, 1, v160) != 1)
          {
            v246 = v398;
            v245((uint64_t)v398, (char *)v162, v160);
            uint64_t v247 = type metadata accessor for ICQueryType.DateRange(0);
            uint64_t v420 = swift_allocBox();
            uint64_t v249 = v248;
            sub_1C3DB8A08();
            (*(void (**)(uint64_t, char *, uint64_t))(v244 + 16))(v249, v246, v160);
            v245(v249 + *(int *)(v247 + 20), v243, v160);
            unint64_t v250 = v420 | 0x7000000000000000;
            v251 = (objc_class *)type metadata accessor for ICQuery();
            v252 = (char *)objc_allocWithZone(v251);
            *(void *)&v252[OBJC_IVAR___ICQueryObjC_type] = v250;
            v433.receiver = v252;
            v433.super_class = v251;
            uint64_t v72 = (char *)objc_msgSendSuper2(&v433, sel_init);

            uint64_t v170 = *(void (**)(char *, uint64_t))(v244 + 8);
            uint64_t v171 = v246;
LABEL_57:
            v170(v171, v160);
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v162 = v76;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v418 + 56))(v76, 1, 1, v417);
        }
LABEL_70:

LABEL_71:
        sub_1C3C2A448(v162, &qword_1EB6FB1B8);
        goto LABEL_134;
      default:
        goto LABEL_133;
    }
  }
  self;
  uint64_t v93 = swift_dynamicCastObjCClass();
  if (v93)
  {
    id v94 = (void *)v93;
    uint64_t v95 = swift_allocObject();
    id v96 = v68;
    *(unsigned char *)(v95 + 16) = objc_msgSend(v94, sel_inclusionType) == 0;
    unint64_t v97 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v98 = (char *)objc_allocWithZone(v97);
    *(void *)&v98[OBJC_IVAR___ICQueryObjC_type] = v95 | 0x8000000000000004;
    v434.receiver = v98;
    v434.super_class = v97;
    uint64_t v99 = (char *)objc_msgSendSuper2(&v434, sel_init);
LABEL_39:
    uint64_t v72 = v99;

    uint64_t v73 = OBJC_IVAR___ICQueryObjC_type;
    goto LABEL_3;
  }
  self;
  uint64_t v105 = swift_dynamicCastObjCClass();
  if (v105)
  {
    long long v106 = (void *)v105;
    uint64_t v107 = swift_allocObject();
    id v96 = v68;
    *(unsigned char *)(v107 + 16) = objc_msgSend(v106, sel_inclusionType) == 0;
    long long v108 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v109 = (char *)objc_allocWithZone(v108);
    *(void *)&v109[OBJC_IVAR___ICQueryObjC_type] = v107 | 0x8000000000000000;
    v435.receiver = v109;
    v435.super_class = v108;
    uint64_t v99 = (char *)objc_msgSendSuper2(&v435, sel_init);
    goto LABEL_39;
  }
  self;
  uint64_t v187 = swift_dynamicCastObjCClass();
  if (v187)
  {
    v188 = (void *)v187;
    uint64_t v189 = swift_allocObject();
    id v96 = v68;
    *(unsigned char *)(v189 + 16) = objc_msgSend(v188, sel_inclusionType) == 0;
    v190 = (objc_class *)type metadata accessor for ICQuery();
    v191 = (char *)objc_allocWithZone(v190);
    *(void *)&v191[OBJC_IVAR___ICQueryObjC_type] = v189 | 0xA000000000000000;
    v436.receiver = v191;
    v436.super_class = v190;
    uint64_t v99 = (char *)objc_msgSendSuper2(&v436, sel_init);
    goto LABEL_39;
  }
  self;
  uint64_t v253 = swift_dynamicCastObjCClass();
  if (v253)
  {
    v254 = (void *)v253;
    id v255 = v68;
    switch((unint64_t)objc_msgSend(v254, sel_selectionType))
    {
      case 0uLL:
        uint64_t v256 = swift_allocObject();
        *(unsigned char *)(v256 + 16) = 1;
        uint64_t v257 = v256 | 0x2000000000000004;
        v258 = (objc_class *)type metadata accessor for ICQuery();
        v259 = (char *)objc_allocWithZone(v258);
        *(void *)&v259[OBJC_IVAR___ICQueryObjC_type] = v257;
        v437.receiver = v259;
        v437.super_class = v258;
        v260 = (char *)objc_msgSendSuper2(&v437, sel_init);
        goto LABEL_96;
      case 1uLL:
        uint64_t v289 = swift_allocObject();
        *(unsigned char *)(v289 + 16) = 1;
        uint64_t v290 = v289 | 0x3000000000000000;
        v291 = (objc_class *)type metadata accessor for ICQuery();
        v292 = (char *)objc_allocWithZone(v291);
        *(void *)&v292[OBJC_IVAR___ICQueryObjC_type] = v290;
        v438.receiver = v292;
        v438.super_class = v291;
        v260 = (char *)objc_msgSendSuper2(&v438, sel_init);
        goto LABEL_96;
      case 2uLL:
        uint64_t v293 = swift_allocObject();
        *(unsigned char *)(v293 + 16) = 1;
        uint64_t v294 = v293 | 0x3000000000000004;
        v295 = (objc_class *)type metadata accessor for ICQuery();
        v296 = (char *)objc_allocWithZone(v295);
        *(void *)&v296[OBJC_IVAR___ICQueryObjC_type] = v294;
        v439.receiver = v296;
        v439.super_class = v295;
        v260 = (char *)objc_msgSendSuper2(&v439, sel_init);
        goto LABEL_96;
      case 3uLL:
        uint64_t v297 = swift_allocObject();
        *(unsigned char *)(v297 + 16) = 0;
        uint64_t v298 = v297 | 0x2000000000000004;
        v299 = (objc_class *)type metadata accessor for ICQuery();
        v300 = (char *)objc_allocWithZone(v299);
        *(void *)&v300[OBJC_IVAR___ICQueryObjC_type] = v298;
        v440.receiver = v300;
        v440.super_class = v299;
        v260 = (char *)objc_msgSendSuper2(&v440, sel_init);
        goto LABEL_96;
      default:
        goto LABEL_133;
    }
  }
  self;
  uint64_t v261 = swift_dynamicCastObjCClass();
  if (v261)
  {
    v262 = (void *)v261;
    id v255 = v68;
    switch((unint64_t)objc_msgSend(v262, sel_selectionType))
    {
      case 1uLL:
        uint64_t v263 = swift_allocObject();
        *(unsigned char *)(v263 + 16) = 1;
        uint64_t v264 = v263 | 0x1000000000000004;
        v265 = (objc_class *)type metadata accessor for ICQuery();
        v266 = (char *)objc_allocWithZone(v265);
        *(void *)&v266[OBJC_IVAR___ICQueryObjC_type] = v264;
        v441.receiver = v266;
        v441.super_class = v265;
        v260 = (char *)objc_msgSendSuper2(&v441, sel_init);
        goto LABEL_96;
      case 2uLL:
        uint64_t v310 = swift_allocObject();
        *(_WORD *)(v310 + 16) = 1;
        uint64_t v311 = v310 | 0x2000000000000000;
        v312 = (objc_class *)type metadata accessor for ICQuery();
        v313 = (char *)objc_allocWithZone(v312);
        *(void *)&v313[OBJC_IVAR___ICQueryObjC_type] = v311;
        v443.receiver = v313;
        v443.super_class = v312;
        v260 = (char *)objc_msgSendSuper2(&v443, sel_init);
        goto LABEL_96;
      case 3uLL:
        uint64_t v314 = swift_allocObject();
        *(_WORD *)(v314 + 16) = 7;
        uint64_t v315 = v314 | 0x2000000000000000;
        v316 = (objc_class *)type metadata accessor for ICQuery();
        v317 = (char *)objc_allocWithZone(v316);
        *(void *)&v317[OBJC_IVAR___ICQueryObjC_type] = v315;
        v444.receiver = v317;
        v444.super_class = v316;
        v260 = (char *)objc_msgSendSuper2(&v444, sel_init);
        goto LABEL_96;
      case 4uLL:
        uint64_t v318 = swift_allocObject();
        *(_WORD *)(v318 + 16) = 2;
        uint64_t v319 = v318 | 0x2000000000000000;
        v320 = (objc_class *)type metadata accessor for ICQuery();
        v321 = (char *)objc_allocWithZone(v320);
        *(void *)&v321[OBJC_IVAR___ICQueryObjC_type] = v319;
        v445.receiver = v321;
        v445.super_class = v320;
        v260 = (char *)objc_msgSendSuper2(&v445, sel_init);
        goto LABEL_96;
      case 5uLL:
        uint64_t v322 = swift_allocObject();
        *(_WORD *)(v322 + 16) = 3;
        uint64_t v323 = v322 | 0x2000000000000000;
        v324 = (objc_class *)type metadata accessor for ICQuery();
        v325 = (char *)objc_allocWithZone(v324);
        *(void *)&v325[OBJC_IVAR___ICQueryObjC_type] = v323;
        v446.receiver = v325;
        v446.super_class = v324;
        v260 = (char *)objc_msgSendSuper2(&v446, sel_init);
        goto LABEL_96;
      case 6uLL:
        uint64_t v326 = swift_allocObject();
        *(_WORD *)(v326 + 16) = 4;
        uint64_t v327 = v326 | 0x2000000000000000;
        v328 = (objc_class *)type metadata accessor for ICQuery();
        v329 = (char *)objc_allocWithZone(v328);
        *(void *)&v329[OBJC_IVAR___ICQueryObjC_type] = v327;
        v447.receiver = v329;
        v447.super_class = v328;
        v260 = (char *)objc_msgSendSuper2(&v447, sel_init);
        goto LABEL_96;
      case 7uLL:
        uint64_t v330 = swift_allocObject();
        *(_WORD *)(v330 + 16) = 5;
        uint64_t v331 = v330 | 0x2000000000000000;
        v332 = (objc_class *)type metadata accessor for ICQuery();
        v333 = (char *)objc_allocWithZone(v332);
        *(void *)&v333[OBJC_IVAR___ICQueryObjC_type] = v331;
        v448.receiver = v333;
        v448.super_class = v332;
        v260 = (char *)objc_msgSendSuper2(&v448, sel_init);
        goto LABEL_96;
      case 8uLL:
        uint64_t v334 = swift_allocObject();
        *(_WORD *)(v334 + 16) = 6;
        uint64_t v335 = v334 | 0x2000000000000000;
        v336 = (objc_class *)type metadata accessor for ICQuery();
        v337 = (char *)objc_allocWithZone(v336);
        *(void *)&v337[OBJC_IVAR___ICQueryObjC_type] = v335;
        v449.receiver = v337;
        v449.super_class = v336;
        v260 = (char *)objc_msgSendSuper2(&v449, sel_init);
        goto LABEL_96;
      case 9uLL:
        uint64_t v338 = swift_allocObject();
        *(unsigned char *)(v338 + 16) = 0;
        uint64_t v339 = v338 | 0x1000000000000004;
        v340 = (objc_class *)type metadata accessor for ICQuery();
        v341 = (char *)objc_allocWithZone(v340);
        *(void *)&v341[OBJC_IVAR___ICQueryObjC_type] = v339;
        v442.receiver = v341;
        v442.super_class = v340;
        v260 = (char *)objc_msgSendSuper2(&v442, sel_init);
        goto LABEL_96;
      default:
        goto LABEL_133;
    }
  }
  self;
  uint64_t v267 = swift_dynamicCastObjCClass();
  if (!v267)
  {
    self;
    uint64_t v303 = swift_dynamicCastObjCClass();
    if (!v303)
    {
      self;
      uint64_t v345 = swift_dynamicCastObjCClass();
      if (v345)
      {
        v346 = (void *)v345;
        id v255 = v68;
        switch((unint64_t)objc_msgSend(v346, sel_selectionType))
        {
          case 0uLL:
            id v347 = objc_msgSend(v346, sel_currentUserID);
            if (!v347) {
              goto LABEL_133;
            }
            v348 = v347;
            uint64_t v349 = sub_1C3DB9C38();
            uint64_t v351 = v350;

            uint64_t v352 = swift_allocObject();
            *(void *)(v352 + 16) = v349;
            *(void *)(v352 + 24) = v351;
            uint64_t v353 = v352 | 0x6000000000000004;
            v354 = (objc_class *)type metadata accessor for ICQuery();
            v355 = (char *)objc_allocWithZone(v354);
            *(void *)&v355[OBJC_IVAR___ICQueryObjC_type] = v353;
            v454.receiver = v355;
            v454.super_class = v354;
            v260 = (char *)objc_msgSendSuper2(&v454, sel_init);
            goto LABEL_96;
          case 1uLL:
            uint64_t v370 = swift_allocObject();
            *(unsigned char *)(v370 + 16) = 1;
            uint64_t v371 = v370 | 0x6000000000000000;
            v372 = (objc_class *)type metadata accessor for ICQuery();
            v373 = (char *)objc_allocWithZone(v372);
            *(void *)&v373[OBJC_IVAR___ICQueryObjC_type] = v371;
            v455.receiver = v373;
            v455.super_class = v372;
            v260 = (char *)objc_msgSendSuper2(&v455, sel_init);
            goto LABEL_96;
          case 2uLL:
            if ((char *)objc_msgSend(v346, sel_joinOperator) - 1 > (char *)1) {
              goto LABEL_133;
            }
            id v374 = objc_msgSend(v346, sel_participantUserIDs);
            uint64_t v375 = sub_1C3DBA438();

            uint64_t v376 = v423;
            uint64_t v377 = sub_1C3D0C6E4(v375);
            uint64_t v423 = v376;
            swift_bridgeObjectRelease();
            id v378 = objc_msgSend(v346, sel_joinOperator);
            uint64_t v379 = swift_allocObject();
            *(void *)(v379 + 16) = v377;
            if (v378 == (id)1) {
              uint64_t v380 = v379;
            }
            else {
              uint64_t v380 = v379 | 0x1000000000000000;
            }
            v381 = (objc_class *)type metadata accessor for ICQuery();
            v382 = (char *)objc_allocWithZone(v381);
            *(void *)&v382[OBJC_IVAR___ICQueryObjC_type] = v380;
            v456.receiver = v382;
            v456.super_class = v381;
            swift_retain();
            v369 = (char *)objc_msgSendSuper2(&v456, sel_init);
            goto LABEL_132;
          case 3uLL:
            uint64_t v384 = swift_allocObject();
            *(unsigned char *)(v384 + 16) = 0;
            uint64_t v385 = v384 | 0x6000000000000000;
            v386 = (objc_class *)type metadata accessor for ICQuery();
            v387 = (char *)objc_allocWithZone(v386);
            *(void *)&v387[OBJC_IVAR___ICQueryObjC_type] = v385;
            v457.receiver = v387;
            v457.super_class = v386;
            v260 = (char *)objc_msgSendSuper2(&v457, sel_init);
            goto LABEL_96;
          default:
            goto LABEL_133;
        }
      }
      goto LABEL_134;
    }
    v304 = (void *)v303;
    id v255 = v68;
    id v305 = objc_msgSend(v304, sel_selectionType);
    if (v305 != (id)3)
    {
      if (v305 == (id)2)
      {
        if ((char *)objc_msgSend(v304, sel_joinOperator) - 1 <= (char *)1)
        {
          id v360 = objc_msgSend(v304, sel_participantUserIDs);
          uint64_t v361 = sub_1C3DBA438();

          uint64_t v362 = v423;
          uint64_t v363 = sub_1C3D0C44C(v361);
          uint64_t v423 = v362;
          swift_bridgeObjectRelease();
          id v364 = objc_msgSend(v304, sel_joinOperator);
          uint64_t v365 = swift_allocObject();
          *(void *)(v365 + 16) = v363;
          if (v364 == (id)1) {
            uint64_t v366 = v365;
          }
          else {
            uint64_t v366 = v365 | 0x1000000000000000;
          }
          v367 = (objc_class *)type metadata accessor for ICQuery();
          v368 = (char *)objc_allocWithZone(v367);
          *(void *)&v368[OBJC_IVAR___ICQueryObjC_type] = v366;
          v452.receiver = v368;
          v452.super_class = v367;
          swift_retain();
          v369 = (char *)objc_msgSendSuper2(&v452, sel_init);
LABEL_132:
          v301 = v369;
          swift_release();

          v383 = (uint64_t *)&v301[OBJC_IVAR___ICQueryObjC_type];
          swift_beginAccess();
          uint64_t v75 = *v383;
          goto LABEL_97;
        }
      }
      else if (v305 == (id)1)
      {
        uint64_t v306 = swift_allocObject();
        *(unsigned char *)(v306 + 16) = 1;
        unint64_t v307 = v306 | 0x9000000000000000;
        v308 = (objc_class *)type metadata accessor for ICQuery();
        v309 = (char *)objc_allocWithZone(v308);
        *(void *)&v309[OBJC_IVAR___ICQueryObjC_type] = v307;
        v451.receiver = v309;
        v451.super_class = v308;
        v260 = (char *)objc_msgSendSuper2(&v451, sel_init);
LABEL_96:
        v301 = v260;

        v302 = (uint64_t *)&v301[OBJC_IVAR___ICQueryObjC_type];
        swift_beginAccess();
        uint64_t v75 = *v302;
LABEL_97:
        swift_retain();

        goto LABEL_135;
      }
LABEL_133:

      goto LABEL_134;
    }
    uint64_t v356 = swift_allocObject();
    *(unsigned char *)(v356 + 16) = 0;
    unint64_t v357 = v356 | 0x9000000000000000;
    v358 = (objc_class *)type metadata accessor for ICQuery();
    v359 = (char *)objc_allocWithZone(v358);
    *(void *)&v359[OBJC_IVAR___ICQueryObjC_type] = v357;
    v453.receiver = v359;
    v453.super_class = v358;
    v260 = (char *)objc_msgSendSuper2(&v453, sel_init);
    goto LABEL_96;
  }
  v268 = (void *)v267;
  id v269 = v68;
  id v270 = objc_msgSend(v268, sel_folderIdentifiers);
  uint64_t v271 = sub_1C3DBA018();

  uint64_t v272 = *(void *)(v271 + 16);
  swift_bridgeObjectRelease();
  if (!v272)
  {

LABEL_134:
    uint64_t v75 = 0xF000000000000007;
    goto LABEL_135;
  }
  uint64_t v420 = (uint64_t)v268;
  id v421 = v269;
  id v273 = objc_msgSend(v268, sel_folderIdentifiers);
  uint64_t v274 = sub_1C3DBA018();

  int64_t v275 = *(void *)(v274 + 16);
  if (v275)
  {
    uint64_t v458 = MEMORY[0x1E4FBC860];
    sub_1C3C9D4A4(0, v275, 0);
    uint64_t v276 = v458;
    v419 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v274;
    v277 = (uint64_t *)(v274 + 40);
    do
    {
      uint64_t v279 = *(v277 - 1);
      uint64_t v278 = *v277;
      uint64_t v280 = swift_allocObject();
      *(void *)(v280 + 16) = v279;
      *(void *)(v280 + 24) = v278;
      uint64_t v281 = v280 | 0x5000000000000004;
      v282 = (objc_class *)type metadata accessor for ICQuery();
      v283 = (char *)objc_allocWithZone(v282);
      *(void *)&v283[OBJC_IVAR___ICQueryObjC_type] = v281;
      v450.receiver = v283;
      v450.super_class = v282;
      swift_bridgeObjectRetain_n();
      v284 = (char *)objc_msgSendSuper2(&v450, sel_init);
      v285 = &v284[OBJC_IVAR___ICQueryObjC_type];
      swift_beginAccess();
      uint64_t v286 = *(void *)v285;
      swift_retain();
      swift_bridgeObjectRelease();

      uint64_t v458 = v276;
      unint64_t v288 = *(void *)(v276 + 16);
      unint64_t v287 = *(void *)(v276 + 24);
      if (v288 >= v287 >> 1)
      {
        sub_1C3C9D4A4(v287 > 1, v288 + 1, 1);
        uint64_t v276 = v458;
      }
      v277 += 2;
      *(void *)(v276 + 16) = v288 + 1;
      *(void *)(v276 + 8 * v288 + 32) = v286;
      --v275;
    }
    while (v275);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v276 = MEMORY[0x1E4FBC860];
  }
  uint64_t v342 = swift_allocObject();
  *(void *)(v342 + 16) = v276;
  uint64_t v75 = v342 | 0x1000000000000000;
  id v343 = objc_msgSend((id)v420, sel_inclusionType);

  if (v343 == (id)1)
  {
    uint64_t v344 = swift_allocObject();
    *(void *)(v344 + 16) = v75;
    uint64_t v75 = v344 | 4;
  }
LABEL_135:
  uint64_t *v422 = v75;
}

uint64_t sub_1C3D1017C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = 1;
  switch((unint64_t)objc_msgSend(a1, sel_selectionType))
  {
    case 0uLL:
      char v4 = 0;
      goto LABEL_7;
    case 1uLL:
      goto LABEL_7;
    case 2uLL:
      char v4 = 2;
      goto LABEL_7;
    case 3uLL:
      char v4 = 3;
      goto LABEL_7;
    case 4uLL:
      char v4 = 4;
      goto LABEL_7;
    case 5uLL:
      char v4 = 5;
LABEL_7:
      uint64_t v5 = type metadata accessor for ICQueryType.RelativeDateRange(0);
      uint64_t v6 = a2 + *(int *)(v5 + 28);
      uint64_t v7 = sub_1C3DB8AF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
      *(unsigned char *)a2 = v4;
      *(unsigned char *)(a2 + 1) = 5;
      *(void *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = 1;
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
      uint64_t v9 = a2;
      uint64_t v10 = 0;
      uint64_t v11 = v5;
      goto LABEL_12;
    case 7uLL:
      if ((char *)objc_msgSend(a1, sel_relativeRangeSelectionType) - 1 < (char *)5)
      {
        id v12 = objc_msgSend(a1, sel_relativeRangeAmount);
        if (v12)
        {
          uint64_t v13 = v12;
          sub_1C3DBA4B8();
        }
      }
      goto LABEL_11;
    default:
LABEL_11:
      uint64_t v14 = type metadata accessor for ICQueryType.RelativeDateRange(0);
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      uint64_t v11 = v14;
      uint64_t v9 = a2;
      uint64_t v10 = 1;
LABEL_12:
      return v8(v9, v10, 1, v11);
  }
}

id static ICQuery.makeQueryForNonDeletedNotes()()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  uint64_t v1 = v0 | 0x5000000000000000;
  uint64_t v2 = (objc_class *)type metadata accessor for ICQuery();
  id v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR___ICQueryObjC_type] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ICQuery.replacing(tagIdentifier:withNewTagIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t *)(v4 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  uint64_t v15 = *v9;
  swift_retain();
  sub_1C3C6DC14(a1, a2, a3, a4, &v16);
  swift_release();
  uint64_t v10 = v16;
  uint64_t v11 = (objc_class *)type metadata accessor for ICQuery();
  id v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR___ICQueryObjC_type] = v10;
  v14.receiver = v12;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_init);
}

id ICQuery.removing(tagIdentifier:)(uint64_t a1, uint64_t a2)
{
  objc_super v5 = (uint64_t *)(v2 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  uint64_t v11 = *v5;
  swift_retain();
  sub_1C3C6DEF8(a1, a2, &v12);
  swift_release();
  id result = 0;
  uint64_t v7 = v12;
  if ((~v12 & 0xF000000000000007) != 0)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v9 = (char *)objc_allocWithZone(v8);
    *(void *)&v9[OBJC_IVAR___ICQueryObjC_type] = v7;
    v10.receiver = v9;
    v10.super_class = v8;
    return objc_msgSendSuper2(&v10, sel_init);
  }
  return result;
}

unint64_t sub_1C3D10944()
{
  unint64_t result = qword_1EA387DD8;
  if (!qword_1EA387DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387DD8);
  }
  return result;
}

unint64_t sub_1C3D10998()
{
  unint64_t result = qword_1EA387DE0;
  if (!qword_1EA387DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387DE0);
  }
  return result;
}

unint64_t sub_1C3D109EC()
{
  unint64_t result = qword_1EA387DF0;
  if (!qword_1EA387DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387DF0);
  }
  return result;
}

unint64_t sub_1C3D10A40()
{
  unint64_t result = qword_1EA387DC0;
  if (!qword_1EA387DC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387DC0);
  }
  return result;
}

uint64_t sub_1C3D10A80()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D10AB8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3D10AC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797469746E65 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_1C3D10BA4(char a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  unint64_t v5 = v4 | 0xB000000000000004;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
    *(void *)(v7 + 32) = v5;
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = 0;
    *(void *)(v7 + 40) = v8 | 0x5000000000000000;
    *(void *)(v6 + 16) = v7;
    unint64_t v5 = v6;
  }
  uint64_t v9 = (objc_class *)type metadata accessor for ICQuery();
  objc_super v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

char *_s11NotesShared7ICQueryC012makeQueryForA8MatchingyACSo14ICTagSelectionCFZ_0(void *a1)
{
  uint64_t v1 = a1;
  id v2 = objc_msgSend(a1, sel_mode);
  if (v2)
  {
    if (v2 == (id)2)
    {
      char v3 = objc_msgSend(v1, sel_allowsRecentlyDeleted);
      char v4 = 0;
    }
    else
    {
      if (v2 != (id)1)
      {
        unint64_t result = (char *)sub_1C3DBAF58();
        __break(1u);
        return result;
      }
      char v3 = objc_msgSend(v1, sel_allowsRecentlyDeleted);
      char v4 = 1;
    }
    return (char *)sub_1C3D10BA4(v4, v3);
  }
  else
  {
    id v5 = objc_msgSend(v1, sel_includedTagIdentifiers);
    uint64_t v6 = sub_1C3DBA018();

    int64_t v7 = *(void *)(v6 + 16);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v9 = &qword_1EA387000;
    objc_super v10 = &selRef_ic_endOfDay;
    id v60 = v1;
    if (v7)
    {
      uint64_t v65 = MEMORY[0x1E4FBC860];
      sub_1C3C9D4A4(0, v7, 0);
      uint64_t v11 = v65;
      objc_super v12 = (uint64_t *)(v6 + 40);
      do
      {
        uint64_t v14 = *(v12 - 1);
        uint64_t v13 = *v12;
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = v14;
        *(void *)(v15 + 24) = v13;
        unint64_t v16 = v15 | 0xB000000000000000;
        uint64_t v17 = (objc_class *)type metadata accessor for ICQuery();
        uint64_t v18 = (char *)objc_allocWithZone(v17);
        *(void *)&v18[OBJC_IVAR___ICQueryObjC_type] = v16;
        v67.receiver = v18;
        v67.super_class = v17;
        swift_bridgeObjectRetain_n();
        uint64_t v19 = (char *)objc_msgSendSuper2(&v67, sel_init);
        uint64_t v20 = &v19[OBJC_IVAR___ICQueryObjC_type];
        swift_beginAccess();
        uint64_t v21 = *(void *)v20;
        swift_retain();
        swift_bridgeObjectRelease();

        uint64_t v65 = v11;
        unint64_t v23 = *(void *)(v11 + 16);
        unint64_t v22 = *(void *)(v11 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1C3C9D4A4(v22 > 1, v23 + 1, 1);
          uint64_t v11 = v65;
        }
        v12 += 2;
        *(void *)(v11 + 16) = v23 + 1;
        *(void *)(v11 + 8 * v23 + 32) = v21;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      objc_super v10 = &selRef_ic_endOfDay;
      uint64_t v1 = v60;
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    uint64_t v68 = v11;
    id v25 = objc_msgSend(v1, sel_excludedTagIdentifiers);
    uint64_t v26 = sub_1C3DBA018();

    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v62 = v8;
      sub_1C3C9D4A4(0, v27, 0);
      uint64_t v28 = (uint64_t *)(v26 + 40);
      do
      {
        uint64_t v30 = *(v28 - 1);
        uint64_t v29 = *v28;
        uint64_t v31 = swift_allocObject();
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v30;
        *(void *)(v32 + 24) = v29;
        unint64_t v33 = v32 | 0xB000000000000000;
        uint64_t v34 = (objc_class *)type metadata accessor for ICQuery();
        uint64_t v35 = (char *)objc_allocWithZone(v34);
        *(void *)&v35[v9[441]] = v33;
        v66.receiver = v35;
        v66.super_class = v34;
        uint64_t v36 = v9;
        uint64_t v37 = v10;
        uint64_t v38 = v10[218];
        swift_bridgeObjectRetain_n();
        uint64_t v39 = (char *)objc_msgSendSuper2(&v66, v38);
        uint64_t v40 = &v39[v36[441]];
        swift_beginAccess();
        *(void *)(v31 + 16) = *(void *)v40;
        swift_retain();

        objc_super v10 = v37;
        uint64_t v9 = v36;
        uint64_t v41 = (char *)objc_allocWithZone(v34);
        *(void *)&v41[v36[441]] = v31 | 4;
        v64.receiver = v41;
        v64.super_class = v34;
        uint64_t v42 = (char *)objc_msgSendSuper2(&v64, (SEL)v10 + 1560);
        uint64_t v43 = &v42[v36[441]];
        swift_beginAccess();
        uint64_t v44 = *(void *)v43;
        swift_retain();
        swift_bridgeObjectRelease();

        uint64_t v62 = v8;
        unint64_t v46 = *(void *)(v8 + 16);
        unint64_t v45 = *(void *)(v8 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_1C3C9D4A4(v45 > 1, v46 + 1, 1);
          uint64_t v8 = v62;
        }
        v28 += 2;
        *(void *)(v8 + 16) = v46 + 1;
        *(void *)(v8 + 8 * v46 + 32) = v44;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      uint64_t v1 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1C3D79EA0(v8);
    id v47 = objc_msgSend(v1, sel_tagOperator);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v68;
    if (v47 == (id)1) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = v48 | 0x1000000000000000;
    }
    uint64_t v50 = (objc_class *)type metadata accessor for ICQuery();
    uint64_t v51 = (char *)objc_allocWithZone(v50);
    *(void *)&v51[v9[441]] = v49;
    v63.receiver = v51;
    v63.super_class = v50;
    uint64_t v52 = v10[218];
    swift_retain();
    uint64_t v53 = (char *)objc_msgSendSuper2(&v63, v52);
    if (objc_msgSend(v1, sel_allowsRecentlyDeleted))
    {

      swift_release();
    }
    else
    {
      uint64_t v54 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1C3DD5130;
      uint64_t v56 = swift_allocObject();
      *(unsigned char *)(v56 + 16) = 0;
      *(void *)(v55 + 32) = v56 | 0x5000000000000000;
      uint64_t v57 = &v53[v9[441]];
      swift_beginAccess();
      *(void *)(v55 + 40) = *(void *)v57;
      swift_retain();

      *(void *)(v54 + 16) = v55;
      uint64_t v58 = (char *)objc_allocWithZone(v50);
      *(void *)&v58[v9[441]] = v54;
      v61.receiver = v58;
      v61.super_class = v50;
      id v59 = objc_msgSendSuper2(&v61, v10[218]);
      swift_release();

      return (char *)v59;
    }
    return v53;
  }
}

id _s11NotesShared7ICQueryC023makeQueryForSystemPaperA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 1;
  unint64_t v3 = v2 | 0xA000000000000000;
  if ((a1 & 1) == 0)
  {
    uint64_t v4 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C3DD5130;
    *(void *)(v5 + 32) = v3;
    uint64_t v6 = swift_allocObject();
    *(unsigned char *)(v6 + 16) = 0;
    *(void *)(v5 + 40) = v6 | 0x5000000000000000;
    *(void *)(v4 + 16) = v5;
    unint64_t v3 = v4;
  }
  int64_t v7 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR___ICQueryObjC_type] = v3;
  v10.receiver = v8;
  v10.super_class = v7;
  return objc_msgSendSuper2(&v10, sel_init);
}

id _s11NotesShared7ICQueryC016makeQueryForMathA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3DD5130;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C3DB9C38();
  *(void *)(v4 + 24) = v5;
  *(void *)(v3 + 32) = v4 | 0xA000000000000004;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C3DB9C38();
  *(void *)(v6 + 24) = v7;
  *(void *)(v3 + 40) = v6 | 0xA000000000000004;
  *(void *)(v2 + 16) = v3;
  uint64_t v8 = v2 | 0x1000000000000000;
  if ((a1 & 1) == 0)
  {
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3DD5130;
    *(void *)(v10 + 32) = v8;
    uint64_t v11 = swift_allocObject();
    *(unsigned char *)(v11 + 16) = 0;
    *(void *)(v10 + 40) = v11 | 0x5000000000000000;
    *(void *)(v9 + 16) = v10;
    uint64_t v8 = v9;
  }
  objc_super v12 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR___ICQueryObjC_type] = v8;
  v15.receiver = v13;
  v15.super_class = v12;
  return objc_msgSendSuper2(&v15, sel_init);
}

id _s11NotesShared7ICQueryC016makeQueryForCallA021allowsRecentlyDeletedACSb_tFZ_0(char a1)
{
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C3DB9C38();
  *(void *)(v4 + 24) = v5;
  *(void *)(v3 + 32) = v4 | 0xA000000000000004;
  *(void *)(v2 + 16) = v3;
  uint64_t v6 = v2 | 0x1000000000000000;
  if ((a1 & 1) == 0)
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C3DD5130;
    *(void *)(v8 + 32) = v6;
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = 0;
    *(void *)(v8 + 40) = v9 | 0x5000000000000000;
    *(void *)(v7 + 16) = v8;
    uint64_t v6 = v7;
  }
  uint64_t v10 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR___ICQueryObjC_type] = v6;
  v13.receiver = v11;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, sel_init);
}

id _s11NotesShared7ICQueryC031makeQueryForRecentlyDeletedMathA0ACyFZ_0()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C3DD5130;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1C3DB9C38();
  *(void *)(v2 + 24) = v3;
  *(void *)(v1 + 32) = v2 | 0xA000000000000004;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C3DB9C38();
  *(void *)(v4 + 24) = v5;
  *(void *)(v1 + 40) = v4 | 0xA000000000000004;
  *(void *)(v0 + 16) = v1;
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
  *(void *)(v7 + 32) = v0 | 0x1000000000000000;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 1;
  *(void *)(v7 + 40) = v8 | 0x5000000000000000;
  *(void *)(v6 + 16) = v7;
  uint64_t v9 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICQueryObjC_type] = v6;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

id _s11NotesShared7ICQueryC018makeQueryForPinnedA0_21allowsRecentlyDeletedACSb_SbtFZ_0(char a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  unint64_t v5 = v4 | 0x8000000000000004;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
    *(void *)(v7 + 32) = v5;
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = 0;
    *(void *)(v7 + 40) = v8 | 0x5000000000000000;
    *(void *)(v6 + 16) = v7;
    unint64_t v5 = v6;
  }
  uint64_t v9 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

id _s11NotesShared7ICQueryC012makeQueryForbA0_21allowsRecentlyDeletedACSb_SbtFZ_0(char a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  unint64_t v5 = v4 | 0x9000000000000000;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB20);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C3DD5130;
    *(void *)(v7 + 32) = v5;
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = 0;
    *(void *)(v7 + 40) = v8 | 0x5000000000000000;
    *(void *)(v6 + 16) = v7;
    unint64_t v5 = v6;
  }
  uint64_t v9 = (objc_class *)type metadata accessor for ICQuery();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICQueryObjC_type] = v5;
  v12.receiver = v10;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1C3D11A08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___ICQueryObjC_type);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t method lookup function for ICQuery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ICQuery);
}

uint64_t dispatch thunk of ICQuery.entity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ICQuery.entity.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ICQuery.entity.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ICQuery.type.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ICQuery.type.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ICQuery.type.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ICQuery.minimumSupportedVersion.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ICQuery.canBeEdited.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ICQuery.entityName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ICQuery.predicate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ICQuery.__allocating_init(entity:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ICQuery.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ICQuery.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

unsigned char *storeEnumTagSinglePayload for ICQuery.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D11DDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQuery.CodingKeys()
{
  return &type metadata for ICQuery.CodingKeys;
}

unint64_t sub_1C3D11E18()
{
  unint64_t result = qword_1EA387DF8;
  if (!qword_1EA387DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387DF8);
  }
  return result;
}

unint64_t sub_1C3D11E70()
{
  unint64_t result = qword_1EA387E00;
  if (!qword_1EA387E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387E00);
  }
  return result;
}

unint64_t sub_1C3D11EC8()
{
  unint64_t result = qword_1EA387E08;
  if (!qword_1EA387E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387E08);
  }
  return result;
}

uint64_t sub_1C3D11F1C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D11F54()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D11F94()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

uint64_t sub_1C3D11FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D12008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D1206C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICQueryType.RelativeDateRange(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C3D120D0(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v97)(long long *__return_ptr, char *);
  uint64_t v98;
  uint64_t v99;
  int v100;
  void *v101;
  uint64_t v102;
  char *v103;
  long long v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115[2];
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  void *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  long long v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;

  uint64_t v6 = sub_1C3DB9418();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v118 = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1C3DB9398();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v131);
  id v129 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v128 = (char *)v115 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  long long v133 = (uint64_t)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v132 = (char *)v115 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v127 = (char *)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1C3DB93A8();
  id v137 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  long long v136 = (char *)v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D0);
  MEMORY[0x1F4188790](v124);
  id v125 = (char *)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8);
  MEMORY[0x1F4188790](v126);
  uint64_t v141 = (char *)v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v21 - 8);
  id v123 = (char *)v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C3DB9438();
  uint64_t v139 = *(void *)(v23 - 8);
  uint64_t v140 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  id v122 = (char *)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v138 = (char *)v115 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C3DB88F8();
  id v135 = *(char **)(v30 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  id v119 = (char *)v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)v115 - v33;
  uint64_t v35 = a1;
  uint64_t v148 = a1;
  uint64_t v149 = a2;
  unint64_t v36 = a2;
  v146 = 58;
  uint64_t v147 = 0xE100000000000000;
  unint64_t v37 = sub_1C3C3182C();
  uint64_t v134 = (void (*)(char *, uint64_t, uint64_t))sub_1C3C31880();
  sub_1C3DB9B68();
  if (v143)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  v115[1] = v37;
  uint64_t v116 = v7;
  uint64_t v117 = v6;
  uint64_t v120 = a3;
  v115[0] = *((void *)&v142 + 1);
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C3DB9E88();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  MEMORY[0x1C877B1D0](v38, v40, v42, v44);
  swift_bridgeObjectRelease();
  unint64_t v45 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LOBYTE(v38) = ICIsNotesURLScheme(v45);

  if ((v38 & 1) == 0)
  {
    uint64_t v49 = v120;
    *uint64_t v120 = 0;
    v49[1] = 0;
    long long v49[2] = 0;
    return;
  }
  sub_1C3DB88C8();
  unint64_t v46 = v135;
  int v47 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v135 + 6))(v29, 1, v30);
  uint64_t v48 = v120;
  if (v47 == 1)
  {
    sub_1C3C2A448((uint64_t)v29, (uint64_t *)&unk_1EB6FC7E0);
  }
  else
  {
    (*((void (**)(char *, char *, uint64_t))v46 + 4))(v34, v29, v30);
    uint64_t v50 = (uint64_t)v119;
    (*((void (**)(char *, char *, uint64_t))v46 + 2))(v119, v34, v30);
    FolderID.init(url:)(v50, &v142);
    (*((void (**)(char *, uint64_t))v46 + 1))(v34, v30);
    uint64_t v51 = v143;
    if (v143)
    {
      *(_OWORD *)uint64_t v48 = v142;
      v48[2] = v51;
      return;
    }
  }
  v146 = v35;
  uint64_t v147 = v36;
  uint64_t v144 = 63;
  uint64_t v145 = 0xE100000000000000;
  uint64_t v52 = v35;
  sub_1C3DB9B68();
  uint64_t v53 = v139;
  uint64_t v54 = v140;
  uint64_t v56 = v136;
  uint64_t v55 = v137;
  if (v143)
  {
    swift_bridgeObjectRetain();
    unint64_t v57 = sub_1C3C30610(v115[0], v52, v36);
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = v57;
    uint64_t v65 = v59;
    uint64_t v66 = v61;
    uint64_t v67 = v63;
  }
  else
  {
    if ((unint64_t)v142 >> 14 < v115[0] >> 14)
    {
      __break(1u);
      return;
    }
    uint64_t v64 = sub_1C3DB9E88();
  }
  uint64_t v68 = MEMORY[0x1C877B1D0](v64, v65, v66, v67);
  unint64_t v70 = v69;
  uint64_t v71 = v121;
  swift_bridgeObjectRelease();
  uint64_t v148 = v68;
  uint64_t v149 = v70;
  swift_bridgeObjectRetain();
  char v72 = sub_1C3DB9E28();
  swift_bridgeObjectRelease();
  if (v72) {
    sub_1C3C3065C(2);
  }
  uint64_t v73 = v138;
  sub_1C3DB9448();
  uint64_t v74 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v123, 1, 1, v74);
  sub_1C3DB93D8();
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v122, v73, v54);
  sub_1C3DB9388();
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v76 = (uint64_t)v127;
  v75(v127, v56, v71);
  uint64_t v77 = v125;
  uint64_t v134 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  v134(v125, v76, v71);
  id v78 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v77[*(int *)(v124 + 44)];
  *id v78 = sub_1C3C306E4;
  v78[1] = 0;
  sub_1C3C2A448(v76, &qword_1EB6FC7D8);
  v75(v56, v77, v71);
  uint64_t v79 = v71;
  id v80 = (void (*)(uint64_t))MEMORY[0x1E4FBCE10];
  sub_1C3C318D4(&qword_1EB6FC720, MEMORY[0x1E4FBCE10]);
  id v81 = v141;
  sub_1C3DB9EA8();
  long long v82 = *(_OWORD *)v78;
  id v135 = &v81[*(int *)(v126 + 44)];
  *(_OWORD *)id v135 = v82;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v84 = v130;
  id v85 = *(void (**)(char *))(v130 + 16);
  id v86 = v128;
  uint64_t v127 = &v81[*(int *)(v83 + 36)];
  uint64_t v87 = v131;
  v85(v128);
  sub_1C3C318D4(&qword_1EB6FC728, v80);
  uint64_t v88 = v129;
  sub_1C3DBA558();
  sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  LOBYTE(v73) = sub_1C3DB9BE8();
  uint64_t v89 = *(void (**)(char *, uint64_t))(v84 + 8);
  v89(v88, v87);
  v89(v86, v87);
  uint64_t v90 = 1;
  uint64_t v91 = v132;
  if ((v73 & 1) == 0)
  {
    uint64_t v92 = v141;
    uint64_t v93 = (void (*)(long long *, void))sub_1C3DBA5C8();
    (*(void (**)(char *))(v116 + 16))(v91);
    v93(&v142, 0);
    id v94 = v136;
    v134(v136, (uint64_t)v92, v79);
    sub_1C3DBA568();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v94, v79);
    uint64_t v90 = 0;
  }
  uint64_t v95 = v116;
  uint64_t v96 = v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v91, v90, 1, v117);
  unint64_t v97 = *(void (**)(long long *__return_ptr, char *))v135;
  uint64_t v98 = (uint64_t)v91;
  uint64_t v99 = v133;
  sub_1C3C3191C(v98, v133);
  uint64_t v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v99, 1, v96);
  uint64_t v101 = v120;
  uint64_t v102 = (uint64_t)v141;
  if (v100 == 1) {
    goto LABEL_25;
  }
  unint64_t v103 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v118, v99, v96);
  v97(&v142, v103);
  uint64_t v104 = v142;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v103, v96);
  if (v104 == __PAIR128__(0xE600000000000000, 0x7265646C6F66))
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v105 = sub_1C3DBB3B8();
  swift_bridgeObjectRelease();
  if ((v105 & 1) == 0)
  {
LABEL_25:
    sub_1C3C2A448(v102, &qword_1EB6FC7C8);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v140);
LABEL_26:
    char *v101 = 0;
    v101[1] = 0;
    v101[2] = 0;
    return;
  }
LABEL_21:
  long long v106 = sub_1C3C30A24();
  if (!v107) {
    goto LABEL_25;
  }
  long long v108 = v106;
  uint64_t v109 = v107;
  swift_bridgeObjectRetain();
  id v110 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v110 <= 1)
  {
    uint64_t v111 = v139;
    long long v112 = v140;
    swift_bridgeObjectRelease();
    uint64_t v113 = sub_1C3C30A24();
    if (v114)
    {
      *(unsigned char *)uint64_t v101 = v110;
      v101[1] = v113;
      v101[2] = v114;
      sub_1C3C2A448(v102, &qword_1EB6FC7C8);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v138, v112);
      return;
    }
    sub_1C3C2A448(v102, &qword_1EB6FC7C8);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v138, v112);
    goto LABEL_26;
  }
  *(unsigned char *)uint64_t v101 = 0;
  v101[1] = v108;
  v101[2] = v109;
  sub_1C3C2A448(v102, &qword_1EB6FC7C8);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v140);
}

void sub_1C3D12F10(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned char *v96;
  unsigned char *v97;
  unsigned char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unsigned char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  uint64_t v6 = sub_1C3DB9418();
  id v114 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB9398();
  uint64_t v111 = *(void *)(v9 - 8);
  long long v112 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v109 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v108 = (char *)&v99 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v113 = (uint64_t)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v115 = (char *)&v99 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v107 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v110 = sub_1C3DB93A8();
  uint64_t v117 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v116 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D0);
  MEMORY[0x1F4188790](v104);
  uint64_t v105 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8);
  MEMORY[0x1F4188790](v106);
  v121 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v103 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C3DB9438();
  id v119 = *(void *)(v24 - 8);
  uint64_t v120 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  id v118 = (char *)&v99 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v129 = a1;
  uint64_t v130 = a2;
  uint64_t v127 = 58;
  uint64_t v128 = 0xE100000000000000;
  sub_1C3C3182C();
  sub_1C3C31880();
  sub_1C3DB9B68();
  if (v124)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  uint64_t v99 = v8;
  uint64_t v100 = v6;
  uint64_t v102 = a3;
  uint64_t v101 = v123;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C3DB9E88();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  MEMORY[0x1C877B1D0](v32, v34, v36, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LOBYTE(v32) = ICIsNotesURLScheme(v39);

  if ((v32 & 1) == 0) {
    goto LABEL_22;
  }
  sub_1C3DB88C8();
  sub_1C3C2A448((uint64_t)v31, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v127 = a1;
  uint64_t v128 = a2;
  id v125 = 63;
  uint64_t v126 = 0xE100000000000000;
  sub_1C3DB9B68();
  if (v124)
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1C3C30610(v101, a1, a2);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x1C877B1D0](v40, v42, v44, v46);
    unint64_t v49 = v48;
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
  }
  else
  {
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
    if (v122 >> 14 < v101 >> 14)
    {
      __break(1u);
      return;
    }
    uint64_t v53 = sub_1C3DB9E88();
    uint64_t v47 = MEMORY[0x1C877B1D0](v53);
    unint64_t v49 = v54;
  }
  swift_bridgeObjectRelease();
  id v129 = v47;
  uint64_t v130 = v49;
  swift_bridgeObjectRetain();
  char v55 = sub_1C3DB9E28();
  swift_bridgeObjectRelease();
  uint64_t v56 = v110;
  if (v55) {
    sub_1C3C3065C(2);
  }
  unint64_t v57 = v118;
  sub_1C3DB9448();
  uint64_t v58 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v103, 1, 1, v58);
  sub_1C3DB93D8();
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v27, v57, v50);
  sub_1C3DB9388();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  uint64_t v60 = (uint64_t)v107;
  v59(v107, v52, v56);
  uint64_t v61 = v105;
  unint64_t v103 = *(char **)(v51 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v103)(v105, v60, v56);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v104 + 44)];
  *uint64_t v62 = sub_1C3C306E4;
  v62[1] = 0;
  sub_1C3C2A448(v60, &qword_1EB6FC7D8);
  v59(v52, v61, v56);
  uint64_t v63 = (void (*)(uint64_t))MEMORY[0x1E4FBCE10];
  sub_1C3C318D4(&qword_1EB6FC720, MEMORY[0x1E4FBCE10]);
  uint64_t v64 = v121;
  sub_1C3DB9EA8();
  long long v65 = *(_OWORD *)v62;
  uint64_t v107 = &v64[*(int *)(v106 + 44)];
  *(_OWORD *)uint64_t v107 = v65;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v67 = v111;
  uint64_t v68 = *(void (**)(char *))(v111 + 16);
  unint64_t v69 = v108;
  long long v106 = (uint64_t)&v64[*(int *)(v66 + 36)];
  uint64_t v70 = v112;
  v68(v108);
  sub_1C3C318D4(&qword_1EB6FC728, v63);
  uint64_t v71 = v109;
  sub_1C3DBA558();
  sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  LOBYTE(v59) = sub_1C3DB9BE8();
  char v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v71, v70);
  v72(v69, v70);
  uint64_t v73 = 1;
  uint64_t v74 = v114;
  uint64_t v75 = v100;
  if ((v59 & 1) == 0)
  {
    uint64_t v76 = v121;
    uint64_t v77 = (void (*)(unint64_t *, void))sub_1C3DBA5C8();
    (*(void (**)(char *))(v74 + 16))(v115);
    v77(&v122, 0);
    id v78 = v116;
    ((void (*)(char *, char *, uint64_t))v103)(v116, v76, v56);
    sub_1C3DBA568();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v78, v56);
    uint64_t v73 = 0;
  }
  uint64_t v79 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v115, v73, 1, v75);
  id v80 = *(void (**)(unint64_t *__return_ptr, char *))v107;
  id v81 = v113;
  sub_1C3C3191C(v79, v113);
  long long v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v81, 1, v75);
  uint64_t v83 = (uint64_t)v121;
  if (v82 != 1)
  {
    uint64_t v84 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v99, v81, v75);
    v80(&v122, v84);
    id v86 = v122;
    id v85 = v123;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v75);
    if (v86 == 1702129518 && v85 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v87 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v87)
    {
LABEL_17:
      uint64_t v88 = sub_1C3C30A24();
      if (v89)
      {
        uint64_t v90 = v88;
        uint64_t v91 = v89;
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1C3DBB038();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          uint64_t v98 = v102;
          *uint64_t v102 = 0;
          *((void *)v98 + 1) = v90;
          *((void *)v98 + 2) = v91;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
          return;
        }
        uint64_t v93 = v120;
        swift_bridgeObjectRelease();
        id v94 = sub_1C3C30A24();
        if (v95)
        {
          uint64_t v96 = v102;
          *uint64_t v102 = v92;
          *((void *)v96 + 1) = v94;
          *((void *)v96 + 2) = v95;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
          return;
        }
        sub_1C3C2A448(v83, &qword_1EB6FC7C8);
        (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1C3C2A448(v83, &qword_1EB6FC7C8);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
LABEL_22:
  unint64_t v97 = v102;
  *(void *)uint64_t v102 = 0;
  *((void *)v97 + 1) = 0;
  *((void *)v97 + 2) = 0;
}

void sub_1C3D13BA4(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned char *v96;
  unsigned char *v97;
  unsigned char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unsigned char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  uint64_t v6 = sub_1C3DB9418();
  id v114 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB9398();
  uint64_t v111 = *(void *)(v9 - 8);
  long long v112 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v109 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v108 = (char *)&v99 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v113 = (uint64_t)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v115 = (char *)&v99 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v107 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v110 = sub_1C3DB93A8();
  uint64_t v117 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v116 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D0);
  MEMORY[0x1F4188790](v104);
  uint64_t v105 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8);
  MEMORY[0x1F4188790](v106);
  v121 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v103 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C3DB9438();
  id v119 = *(void *)(v24 - 8);
  uint64_t v120 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  id v118 = (char *)&v99 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v129 = a1;
  uint64_t v130 = a2;
  uint64_t v127 = 58;
  uint64_t v128 = 0xE100000000000000;
  sub_1C3C3182C();
  sub_1C3C31880();
  sub_1C3DB9B68();
  if (v124)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  uint64_t v99 = v8;
  uint64_t v100 = v6;
  uint64_t v102 = a3;
  uint64_t v101 = v123;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C3DB9E88();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  MEMORY[0x1C877B1D0](v32, v34, v36, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LOBYTE(v32) = ICIsNotesURLScheme(v39);

  if ((v32 & 1) == 0) {
    goto LABEL_22;
  }
  sub_1C3DB88C8();
  sub_1C3C2A448((uint64_t)v31, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v127 = a1;
  uint64_t v128 = a2;
  id v125 = 63;
  uint64_t v126 = 0xE100000000000000;
  sub_1C3DB9B68();
  if (v124)
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1C3C30610(v101, a1, a2);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x1C877B1D0](v40, v42, v44, v46);
    unint64_t v49 = v48;
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
  }
  else
  {
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
    if (v122 >> 14 < v101 >> 14)
    {
      __break(1u);
      return;
    }
    uint64_t v53 = sub_1C3DB9E88();
    uint64_t v47 = MEMORY[0x1C877B1D0](v53);
    unint64_t v49 = v54;
  }
  swift_bridgeObjectRelease();
  id v129 = v47;
  uint64_t v130 = v49;
  swift_bridgeObjectRetain();
  char v55 = sub_1C3DB9E28();
  swift_bridgeObjectRelease();
  uint64_t v56 = v110;
  if (v55) {
    sub_1C3C3065C(2);
  }
  unint64_t v57 = v118;
  sub_1C3DB9448();
  uint64_t v58 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v103, 1, 1, v58);
  sub_1C3DB93D8();
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v27, v57, v50);
  sub_1C3DB9388();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  uint64_t v60 = (uint64_t)v107;
  v59(v107, v52, v56);
  uint64_t v61 = v105;
  unint64_t v103 = *(char **)(v51 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v103)(v105, v60, v56);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v104 + 44)];
  *uint64_t v62 = sub_1C3C306E4;
  v62[1] = 0;
  sub_1C3C2A448(v60, &qword_1EB6FC7D8);
  v59(v52, v61, v56);
  uint64_t v63 = (void (*)(uint64_t))MEMORY[0x1E4FBCE10];
  sub_1C3C318D4(&qword_1EB6FC720, MEMORY[0x1E4FBCE10]);
  uint64_t v64 = v121;
  sub_1C3DB9EA8();
  long long v65 = *(_OWORD *)v62;
  uint64_t v107 = &v64[*(int *)(v106 + 44)];
  *(_OWORD *)uint64_t v107 = v65;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v67 = v111;
  uint64_t v68 = *(void (**)(char *))(v111 + 16);
  unint64_t v69 = v108;
  long long v106 = (uint64_t)&v64[*(int *)(v66 + 36)];
  uint64_t v70 = v112;
  v68(v108);
  sub_1C3C318D4(&qword_1EB6FC728, v63);
  uint64_t v71 = v109;
  sub_1C3DBA558();
  sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  LOBYTE(v59) = sub_1C3DB9BE8();
  char v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v71, v70);
  v72(v69, v70);
  uint64_t v73 = 1;
  uint64_t v74 = v114;
  uint64_t v75 = v100;
  if ((v59 & 1) == 0)
  {
    uint64_t v76 = v121;
    uint64_t v77 = (void (*)(unint64_t *, void))sub_1C3DBA5C8();
    (*(void (**)(char *))(v74 + 16))(v115);
    v77(&v122, 0);
    id v78 = v116;
    ((void (*)(char *, char *, uint64_t))v103)(v116, v76, v56);
    sub_1C3DBA568();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v78, v56);
    uint64_t v73 = 0;
  }
  uint64_t v79 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v115, v73, 1, v75);
  id v80 = *(void (**)(unint64_t *__return_ptr, char *))v107;
  id v81 = v113;
  sub_1C3C3191C(v79, v113);
  long long v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v81, 1, v75);
  uint64_t v83 = (uint64_t)v121;
  if (v82 != 1)
  {
    uint64_t v84 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v99, v81, v75);
    v80(&v122, v84);
    id v86 = v122;
    id v85 = v123;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v75);
    if (v86 == 0x656D686361747461 && v85 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v87 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v87)
    {
LABEL_17:
      uint64_t v88 = sub_1C3C30A24();
      if (v89)
      {
        uint64_t v90 = v88;
        uint64_t v91 = v89;
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1C3DBB038();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          uint64_t v98 = v102;
          *uint64_t v102 = 0;
          *((void *)v98 + 1) = v90;
          *((void *)v98 + 2) = v91;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
          return;
        }
        uint64_t v93 = v120;
        swift_bridgeObjectRelease();
        id v94 = sub_1C3C30A24();
        if (v95)
        {
          uint64_t v96 = v102;
          *uint64_t v102 = v92;
          *((void *)v96 + 1) = v94;
          *((void *)v96 + 2) = v95;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
          return;
        }
        sub_1C3C2A448(v83, &qword_1EB6FC7C8);
        (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1C3C2A448(v83, &qword_1EB6FC7C8);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
LABEL_22:
  unint64_t v97 = v102;
  *(void *)uint64_t v102 = 0;
  *((void *)v97 + 1) = 0;
  *((void *)v97 + 2) = 0;
}

void sub_1C3D14854(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v80)(unint64_t *__return_ptr, char *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned char *v96;
  unsigned char *v97;
  unsigned char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unsigned char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;

  uint64_t v6 = sub_1C3DB9418();
  id v114 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB9398();
  uint64_t v111 = *(void *)(v9 - 8);
  long long v112 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v109 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v108 = (char *)&v99 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v113 = (uint64_t)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v115 = (char *)&v99 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v107 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v110 = sub_1C3DB93A8();
  uint64_t v117 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v116 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D0);
  MEMORY[0x1F4188790](v104);
  uint64_t v105 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8);
  MEMORY[0x1F4188790](v106);
  v121 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v103 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C3DB9438();
  id v119 = *(void *)(v24 - 8);
  uint64_t v120 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  id v118 = (char *)&v99 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v129 = a1;
  uint64_t v130 = a2;
  uint64_t v127 = 58;
  uint64_t v128 = 0xE100000000000000;
  sub_1C3C3182C();
  sub_1C3C31880();
  sub_1C3DB9B68();
  if (v124)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  uint64_t v99 = v8;
  uint64_t v100 = v6;
  uint64_t v102 = a3;
  uint64_t v101 = v123;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C3DB9E88();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  MEMORY[0x1C877B1D0](v32, v34, v36, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LOBYTE(v32) = ICIsNotesURLScheme(v39);

  if ((v32 & 1) == 0) {
    goto LABEL_22;
  }
  sub_1C3DB88C8();
  sub_1C3C2A448((uint64_t)v31, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v127 = a1;
  uint64_t v128 = a2;
  id v125 = 63;
  uint64_t v126 = 0xE100000000000000;
  sub_1C3DB9B68();
  if (v124)
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1C3C30610(v101, a1, a2);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x1C877B1D0](v40, v42, v44, v46);
    unint64_t v49 = v48;
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
  }
  else
  {
    uint64_t v50 = v120;
    uint64_t v52 = v116;
    uint64_t v51 = v117;
    if (v122 >> 14 < v101 >> 14)
    {
      __break(1u);
      return;
    }
    uint64_t v53 = sub_1C3DB9E88();
    uint64_t v47 = MEMORY[0x1C877B1D0](v53);
    unint64_t v49 = v54;
  }
  swift_bridgeObjectRelease();
  id v129 = v47;
  uint64_t v130 = v49;
  swift_bridgeObjectRetain();
  char v55 = sub_1C3DB9E28();
  swift_bridgeObjectRelease();
  uint64_t v56 = v110;
  if (v55) {
    sub_1C3C3065C(2);
  }
  unint64_t v57 = v118;
  sub_1C3DB9448();
  uint64_t v58 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v103, 1, 1, v58);
  sub_1C3DB93D8();
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v27, v57, v50);
  sub_1C3DB9388();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  uint64_t v60 = (uint64_t)v107;
  v59(v107, v52, v56);
  uint64_t v61 = v105;
  unint64_t v103 = *(char **)(v51 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v103)(v105, v60, v56);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v61[*(int *)(v104 + 44)];
  *uint64_t v62 = sub_1C3C306E4;
  v62[1] = 0;
  sub_1C3C2A448(v60, &qword_1EB6FC7D8);
  v59(v52, v61, v56);
  uint64_t v63 = (void (*)(uint64_t))MEMORY[0x1E4FBCE10];
  sub_1C3C318D4(&qword_1EB6FC720, MEMORY[0x1E4FBCE10]);
  uint64_t v64 = v121;
  sub_1C3DB9EA8();
  long long v65 = *(_OWORD *)v62;
  uint64_t v107 = &v64[*(int *)(v106 + 44)];
  *(_OWORD *)uint64_t v107 = v65;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v67 = v111;
  uint64_t v68 = *(void (**)(char *))(v111 + 16);
  unint64_t v69 = v108;
  long long v106 = (uint64_t)&v64[*(int *)(v66 + 36)];
  uint64_t v70 = v112;
  v68(v108);
  sub_1C3C318D4(&qword_1EB6FC728, v63);
  uint64_t v71 = v109;
  sub_1C3DBA558();
  sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  LOBYTE(v59) = sub_1C3DB9BE8();
  char v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v71, v70);
  v72(v69, v70);
  uint64_t v73 = 1;
  uint64_t v74 = v114;
  uint64_t v75 = v100;
  if ((v59 & 1) == 0)
  {
    uint64_t v76 = v121;
    uint64_t v77 = (void (*)(unint64_t *, void))sub_1C3DBA5C8();
    (*(void (**)(char *))(v74 + 16))(v115);
    v77(&v122, 0);
    id v78 = v116;
    ((void (*)(char *, char *, uint64_t))v103)(v116, v76, v56);
    sub_1C3DBA568();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v78, v56);
    uint64_t v73 = 0;
  }
  uint64_t v79 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v115, v73, 1, v75);
  id v80 = *(void (**)(unint64_t *__return_ptr, char *))v107;
  id v81 = v113;
  sub_1C3C3191C(v79, v113);
  long long v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v81, 1, v75);
  uint64_t v83 = (uint64_t)v121;
  if (v82 != 1)
  {
    uint64_t v84 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v99, v81, v75);
    v80(&v122, v84);
    id v86 = v122;
    id v85 = v123;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v84, v75);
    if (v86 == 0x656C626174 && v85 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v87 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v87)
    {
LABEL_17:
      uint64_t v88 = sub_1C3C30A24();
      if (v89)
      {
        uint64_t v90 = v88;
        uint64_t v91 = v89;
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1C3DBB038();
        swift_bridgeObjectRelease();
        if (v92 > 1)
        {
          uint64_t v98 = v102;
          *uint64_t v102 = 0;
          *((void *)v98 + 1) = v90;
          *((void *)v98 + 2) = v91;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
          return;
        }
        uint64_t v93 = v120;
        swift_bridgeObjectRelease();
        id v94 = sub_1C3C30A24();
        if (v95)
        {
          uint64_t v96 = v102;
          *uint64_t v102 = v92;
          *((void *)v96 + 1) = v94;
          *((void *)v96 + 2) = v95;
          sub_1C3C2A448(v83, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
          return;
        }
        sub_1C3C2A448(v83, &qword_1EB6FC7C8);
        (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v93);
        goto LABEL_22;
      }
    }
  }
  sub_1C3C2A448(v83, &qword_1EB6FC7C8);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
LABEL_22:
  unint64_t v97 = v102;
  *(void *)uint64_t v102 = 0;
  *((void *)v97 + 1) = 0;
  *((void *)v97 + 2) = 0;
}

uint64_t static ICAppURLUtilities.entityURI(for:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C3C38C4C(v17);
  sub_1C3C28D88(v17[0], v18, v19, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
    uint64_t v11 = 1;
  }
  else
  {
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v12(v10, v6, v7);
    id v13 = objc_msgSend(a1, sel_ownerRecordName);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v16 = sub_1C3DB9C38();

      __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FC548);
      sub_1C3DB82E8();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C3DD3D30;
      sub_1C3DB82B8();
      swift_bridgeObjectRelease();
      sub_1C3DB88B8();
      swift_bridgeObjectRelease();
    }
    v12(a2, v10, v7);
    uint64_t v11 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v11, 1, v7);
}

uint64_t static ICAppURLUtilities.isModernNoteEntityURI(_:)(uint64_t a1)
{
  return sub_1C3D16414(a1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C3D12F10) & 1;
}

uint64_t sub_1C3D1593C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  LOBYTE(a4) = sub_1C3D16414((uint64_t)v8, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t static ICAppURLUtilities.objectIDURIRepresentation(forHTMLNoteEntityURI:context:)@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C3DB87E8();
  sub_1C3D12F10(v4, v5, v17);
  swift_bridgeObjectRelease();
  if (!v17[2]) {
    goto LABEL_5;
  }
  if (LOBYTE(v17[0]) == 2 || (v17[0] & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = sub_1C3DB88F8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
    goto LABEL_6;
  }
  uint64_t v12 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a1, sel_noteForIdentifier_, v12);

  if (!v13) {
    goto LABEL_5;
  }
  id v14 = objc_msgSend(v13, sel_objectID);
  id v15 = objc_msgSend(v14, sel_URIRepresentation);

  sub_1C3DB8898();
  swift_unknownObjectRelease();

  uint64_t v16 = sub_1C3DB88F8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v8 = v16;
  uint64_t v9 = a2;
  uint64_t v10 = 0;
LABEL_6:
  return v7(v9, v10, 1, v8);
}

uint64_t sub_1C3D15E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  LOBYTE(a4) = a4(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a4 & 1;
}

uint64_t static ICAppURLUtilities.isModernFolderEntityURI(_:)(uint64_t a1)
{
  return sub_1C3D16414(a1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C3D120D0) & 1;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE19isHTMLNoteEntityURIySb10Foundation3URLVFZ_0()
{
  uint64_t v0 = sub_1C3DB87E8();
  sub_1C3D12F10(v0, v1, &v5);
  swift_bridgeObjectRelease();
  uint64_t result = v6;
  if (v6)
  {
    uint64_t v3 = v5;
    swift_bridgeObjectRelease();
    if (v3 == 2)
    {
      return 0;
    }
    else if (v3)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v4 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
  }
  return result;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE20modernNoteIdentifier13fromEntityURISSSg10Foundation3URLV_tFZ_0()
{
  uint64_t v0 = sub_1C3DB87E8();
  sub_1C3D12F10(v0, v1, v3);
  swift_bridgeObjectRelease();
  if (!v3[2]) {
    return 0;
  }
  if (LOBYTE(v3[0]) != 2 && (v3[0] & 1) == 0) {
    return v3[1];
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSo17ICAppURLUtilitiesC11NotesSharedE21isHTMLFolderEntityURIySb10Foundation3URLVFZ_0()
{
  uint64_t v0 = sub_1C3DB87E8();
  sub_1C3D120D0(v0, v1, v5);
  swift_bridgeObjectRelease();
  if (!v5[2])
  {
LABEL_6:
    char v2 = 0;
    return v2 & 1;
  }
  if (LOBYTE(v5[0]) != 2)
  {
    if (v5[0])
    {
      char v3 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v2 = v3 ^ 1;
      return v2 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  char v2 = 1;
  return v2 & 1;
}

uint64_t sub_1C3D16414(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v3 = sub_1C3DB87E8();
  a2(&v7, v3);
  swift_bridgeObjectRelease();
  uint64_t result = v8;
  if (v8)
  {
    uint64_t v5 = v7;
    swift_bridgeObjectRelease();
    if (v5 == 2)
    {
      return 0;
    }
    else if (v5)
    {
      char v6 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      return v6 & 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return result;
}

id _sSo17ICAppURLUtilitiesC11NotesSharedE8objectID22forHTMLFolderEntityURI7contextSo015NSManagedObjectF0CSg10Foundation3URLVSg_So15ICLegacyContext_ptFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_1C3DB88F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v33 - v15;
  sub_1C3CFFF04(a1, (uint64_t)v9);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    uint64_t v18 = (uint64_t)v9;
LABEL_3:
    sub_1C3C2A448(v18, (uint64_t *)&unk_1EB6FC7E0);
    return 0;
  }
  uint64_t v34 = v14;
  id v35 = a2;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  uint64_t v20 = sub_1C3DB87E8();
  sub_1C3D120D0(v20, v21, v36);
  swift_bridgeObjectRelease();
  if (!v36[2]) {
    goto LABEL_10;
  }
  if (LOBYTE(v36[0]) != 2)
  {
    if (v36[0])
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRelease();
      id v31 = objc_msgSend(v35, sel_folderForIdentifier_, v30);

      if (v31)
      {
        id v22 = objc_msgSend(v31, sel_objectID);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v22 = 0;
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v22;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1C3DB88C8();
  swift_bridgeObjectRelease();
  if (v17(v7, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v18 = (uint64_t)v7;
    goto LABEL_3;
  }
  v19(v34, v7, v10);
  id v24 = objc_msgSend(v35, sel_managedObjectContext);
  if (v24
    && (uint64_t v25 = v24,
        id v26 = objc_msgSend(v24, sel_persistentStoreCoordinator),
        v25,
        v26))
  {
    uint64_t v27 = v34;
    uint64_t v28 = (void *)sub_1C3DB8848();
    id v22 = objc_msgSend(v26, sel_managedObjectIDForURIRepresentation_, v28);
    swift_bridgeObjectRelease();

    uint64_t v29 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v22 = 0;
    uint64_t v29 = v34;
  }
  uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v29, v10);
  v32(v16, v10);
  return v22;
}

id _sSo17ICAppURLUtilitiesC11NotesSharedE8objectID24forModernFolderEntityURI11noteContextSo015NSManagedObjectF0CSg10Foundation3URLVSg_So06ICNoteM0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3CFFF04(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v12 = sub_1C3DB87E8();
    sub_1C3D120D0(v12, v13, v19);
    swift_bridgeObjectRelease();
    if (v19[2])
    {
      if (LOBYTE(v19[0]) == 2 || (v19[0] & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        id v14 = objc_msgSend(a2, sel_managedObjectContext);
        uint64_t v15 = (void *)sub_1C3DB9BF8();
        swift_bridgeObjectRelease();
        id v16 = objc_msgSend(self, sel_folderWithIdentifier_context_, v15, v14);

        if (v16)
        {
          id v11 = objc_msgSend(v16, sel_objectID);
        }
        else
        {
          id v11 = 0;
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return 0;
    }
  }
  return v11;
}

uint64_t static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E30);
  v3[10] = swift_task_alloc();
  uint64_t v4 = sub_1C3DB8B98();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E38);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1C3DB9068();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_1C3DB9088();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E40);
  v3[21] = v7;
  v3[22] = *(void *)(v7 - 8);
  v3[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D16D98, 0, 0);
}

uint64_t sub_1C3D16D98()
{
  sub_1C3DBA868();
  unint64_t v1 = (void *)sub_1C3DBA858();
  unsigned int v2 = objc_msgSend(v1, sel_supportsGreymatter);

  if (v2 && (_s11NotesShared20SummarizationManagerC12canSummarize10transcriptSbSS_tFZ_0(v0[8], v0[9]) & 1) != 0)
  {
    sub_1C3DB9128();
    swift_allocObject();
    v0[24] = sub_1C3DB9118();
    if (qword_1EA3858E0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C3DB9048();
    v0[25] = __swift_project_value_buffer(v3, (uint64_t)qword_1EA387E10);
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C3DB9028();
    os_log_type_t v5 = sub_1C3DBA698();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      v0[6] = sub_1C3DB9D18();
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v4, v5, "Generating top line summary, transcriptLength: %ld}", v6, 0xCu);
      MEMORY[0x1C877E600](v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v10 = v0[14];
    uint64_t v12 = v0[12];
    uint64_t v11 = v0[13];
    uint64_t v13 = v0[11];
    (*(void (**)(void, void, void))(v0[16] + 104))(v0[17], *MEMORY[0x1E4F99C28], v0[15]);
    uint64_t v14 = sub_1C3DB9058();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
    sub_1C3DB9078();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    uint64_t v15 = sub_1C3DB8B28();
    uint64_t v17 = v16;
    v0[26] = v16;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[27] = v18;
    void *v18 = v0;
    v18[1] = sub_1C3D1712C;
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[20];
    uint64_t v21 = v0[8];
    uint64_t v22 = v0[9];
    return MEMORY[0x1F414A690](v19, v21, v22, v20, v15, v17);
  }
  else
  {
    uint64_t v7 = v0[7];
    *(void *)(v7 + 32) = 0;
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1C3D1712C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 160);
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v5 = sub_1C3D175CC;
  }
  else {
    os_log_type_t v5 = sub_1C3D172C0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C3D172C0()
{
  id v26 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[10];
  MEMORY[0x1C877A5D0](v1);
  uint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  MEMORY[0x1C877A5C0](v1);
  uint64_t v5 = sub_1C3DB9148();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5);
  uint64_t v8 = v0[10];
  if (v7 == 1)
  {
    sub_1C3C2A448(v0[10], &qword_1EA387E30);
    uint64_t v9 = 0;
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v9 = sub_1C3DB9138();
    uint64_t v24 = v10;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1C3DB9028();
  os_log_type_t v12 = sub_1C3DBA698();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[21];
  uint64_t v16 = v0[22];
  if (v13)
  {
    uint64_t v23 = v0[23];
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = v15;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = v18;
    *(_DWORD *)uint64_t v17 = 136642819;
    swift_bridgeObjectRetain();
    v0[5] = sub_1C3C516D0(v4, v3, &v25);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v11, v12, "Finished generating top line summary {summary: %{sensitive}s}", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v18, -1, -1);
    MEMORY[0x1C877E600](v17, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v23, v22);
  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v19 = (uint64_t *)v0[7];
  *uint64_t v19 = v4;
  v19[1] = v3;
  v19[2] = 1;
  void v19[3] = v9;
  v19[4] = v24;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1C3D175CC()
{
  uint64_t v1 = (void *)v0[28];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[28];
    int v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)int v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v10;
    sub_1C3DBA9A8();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C3A61000, v4, v5, "Could not generate topline summary: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
    swift_release();
  }
  else
  {
    uint64_t v11 = (void *)v0[28];
    swift_release();
  }
  uint64_t v12 = v0[7];
  *(void *)(v12 + 32) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C3D177F0()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387E10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387E10);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static SummarizationManager.generateSynopsis(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E30);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E50);
  v3[16] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E58);
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E60);
  v3[21] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E68);
  v3[22] = v5;
  v3[23] = *(void *)(v5 - 8);
  v3[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E70);
  v3[25] = swift_task_alloc();
  uint64_t v6 = sub_1C3DB8B98();
  v3[26] = v6;
  v3[27] = *(void *)(v6 - 8);
  v3[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E38);
  v3[29] = swift_task_alloc();
  uint64_t v7 = sub_1C3DB9068();
  v3[30] = v7;
  v3[31] = *(void *)(v7 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v8 = sub_1C3DB9088();
  v3[33] = v8;
  v3[34] = *(void *)(v8 - 8);
  v3[35] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E78);
  v3[36] = v9;
  v3[37] = *(void *)(v9 - 8);
  v3[38] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E80);
  v3[39] = v10;
  v3[40] = *(void *)(v10 - 8);
  v3[41] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E88);
  v3[42] = v11;
  v3[43] = *(void *)(v11 - 8);
  v3[44] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E90);
  v3[45] = v12;
  v3[46] = *(void *)(v12 - 8);
  v3[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E98);
  v3[48] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D17DA8, 0, 0);
}

uint64_t sub_1C3D17DA8()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v14 = v0[42];
  uint64_t v20 = v0[38];
  uint64_t v24 = v0[37];
  uint64_t v21 = v0[34];
  uint64_t v22 = v0[33];
  uint64_t v23 = v0[36];
  uint64_t v4 = v0[31];
  uint64_t v15 = v0[32];
  uint64_t v16 = v0[30];
  uint64_t v5 = v0[28];
  uint64_t v17 = v0[29];
  uint64_t v6 = v0[27];
  uint64_t v18 = v0[35];
  uint64_t v19 = v0[26];
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  sub_1C3DB9128();
  swift_allocObject();
  v0[49] = sub_1C3DB9118();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v3, *MEMORY[0x1E4FBD120], v14);
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_1C3DBA3D8();
  swift_task_dealloc();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v15, *MEMORY[0x1E4F99C28], v16);
  uint64_t v9 = sub_1C3DB9058();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v17, 1, 1, v9);
  sub_1C3DB9078();
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v19);
  sub_1C3DB90A8();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v22);
  sub_1C3DBA2B8();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v20, v23);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[50] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C3D180B4;
  uint64_t v11 = v0[39];
  uint64_t v12 = v0[25];
  return MEMORY[0x1F4187ED8](v12, 0, 0, v11, v0 + 9);
}

uint64_t sub_1C3D180B4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1C3D187AC;
  }
  else {
    uint64_t v1 = sub_1C3D181C4;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3D181C4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = *(void *)(v0 + 384);
  if (v4 == 1)
  {
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 144);
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    {
      swift_release();
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 144);
      uint64_t v14 = *(void *)(v0 + 152);
      uint64_t v16 = *(void *)(v0 + 136);
      (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v14, *(void *)(v0 + 384), v16);
      *(void *)(v0 + 88) = 0;
      sub_1C3DBA3A8();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    uint64_t v17 = *(void *)(v0 + 384);
    (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32))(*(void *)(v0 + 96), *(void *)(v0 + 376), *(void *)(v0 + 360));
    sub_1C3C2A448(v17, &qword_1EA387E98);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 144);
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 192), v1, v2);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
    uint64_t v11 = *(void *)(v0 + 176);
    if (v10)
    {
      uint64_t v12 = *(void *)(v0 + 168);
      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EA0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 128);
      (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 16))(*(void *)(v0 + 160), *(void *)(v0 + 384), *(void *)(v0 + 136));
      MEMORY[0x1C877A600](v11);
      uint64_t v46 = *(void *)(v0 + 64);
      uint64_t v47 = *(void *)(v0 + 56);
      sub_1C3DB90D8();
      uint64_t v21 = sub_1C3DB9168();
      uint64_t v22 = *(void *)(v21 - 8);
      int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
      uint64_t v24 = *(void *)(v0 + 128);
      if (v23 == 1)
      {
        sub_1C3C2A448(*(void *)(v0 + 128), &qword_1EA387E50);
        char v25 = 1;
      }
      else
      {
        char v25 = sub_1C3DB9158();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
      }
      uint64_t v26 = *(void *)(v0 + 120);
      MEMORY[0x1C877A5F0](*(void *)(v0 + 176));
      uint64_t v27 = sub_1C3DB9148();
      uint64_t v28 = *(void *)(v27 - 8);
      int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
      uint64_t v30 = *(void *)(v0 + 120);
      if (v29 == 1)
      {
        sub_1C3C2A448(*(void *)(v0 + 120), &qword_1EA387E30);
        uint64_t v31 = 0;
        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v31 = sub_1C3DB9138();
        uint64_t v32 = v33;
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
      }
      char v34 = v25;
      uint64_t v35 = *(void *)(v0 + 184);
      uint64_t v36 = *(void *)(v0 + 192);
      uint64_t v38 = *(void *)(v0 + 168);
      uint64_t v37 = *(void *)(v0 + 176);
      uint64_t v39 = *(void *)(v0 + 160);
      uint64_t v41 = *(void *)(v0 + 136);
      uint64_t v40 = *(void *)(v0 + 144);
      *(void *)(v0 + 16) = v47;
      *(void *)(v0 + 24) = v46;
      *(unsigned char *)(v0 + 32) = v34 & 1;
      *(void *)(v0 + 40) = v31;
      *(void *)(v0 + 48) = v32;
      sub_1C3DBA398();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EA0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v38, 0, 1, v42);
    }
    sub_1C3C2A448(*(void *)(v0 + 168), &qword_1EA387E60);
    uint64_t v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v43;
    *uint64_t v43 = v0;
    v43[1] = sub_1C3D180B4;
    uint64_t v44 = *(void *)(v0 + 312);
    uint64_t v45 = *(void *)(v0 + 200);
    return MEMORY[0x1F4187ED8](v45, 0, 0, v44, v0 + 72);
  }
}

uint64_t sub_1C3D187AC()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  (*(void (**)(void, void))(v0[40] + 8))(v0[41], v0[39]);
  int v4 = (void *)v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    swift_release();
  }
  else
  {
    uint64_t v6 = v0[18];
    uint64_t v5 = v0[19];
    uint64_t v7 = v0[17];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v5, v0[48], v7);
    v0[10] = v4;
    id v8 = v4;
    sub_1C3DBA3A8();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v9 = v0[48];
  (*(void (**)(void, void, void))(v0[46] + 32))(v0[12], v0[47], v0[45]);
  sub_1C3C2A448(v9, &qword_1EA387E98);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C3D189DC(uint64_t a1, uint64_t a2)
{
  sub_1C3C2A448(a2, &qword_1EA387E98);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E58);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

uint64_t SummarizationManager.deinit()
{
  return v0;
}

uint64_t SummarizationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s11NotesShared20SummarizationManagerC12canSummarize10transcriptSbSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387E38);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB9068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C3DB9088();
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v24 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DBA868();
  uint64_t v16 = (void *)sub_1C3DBA858();
  unsigned int v17 = objc_msgSend(v16, sel_supportsGreymatter, v21, v22);

  if (v17)
  {
    sub_1C3DB9128();
    swift_allocObject();
    sub_1C3DB9118();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F99C28], v9);
    uint64_t v18 = sub_1C3DB9058();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    sub_1C3DB9078();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1C3DB8B28();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    char v19 = sub_1C3DB9098();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v24);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1C3D18FB0(uint64_t a1)
{
  return sub_1C3D189DC(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for SummarizationManager()
{
  return self;
}

uint64_t method lookup function for SummarizationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummarizationManager);
}

uint64_t sub_1C3D18FF4()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D19040()
{
  return sub_1C3DB9D08();
}

uint64_t sub_1C3D19050()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D19098@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C3D190EC(void *a1@<X8>)
{
  *a1 = 1685218162;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1C3D19100()
{
  return 1685218162;
}

uint64_t sub_1C3D19110@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C3D19168(uint64_t a1)
{
  unint64_t v2 = sub_1C3D19368();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D191A4(uint64_t a1)
{
  unint64_t v2 = sub_1C3D19368();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FastSync.NoteContentMessage.recordBatchData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C3CE0C34(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t FastSync.NoteContentMessage.init(recordBatchData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FastSync.NoteContentMessage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D19368();
  sub_1C3DBB6D8();
  v10[0] = v8;
  v10[1] = v7;
  sub_1C3D067B8();
  sub_1C3DBB1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C3D19368()
{
  unint64_t result = qword_1EA387EB0;
  if (!qword_1EA387EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387EB0);
  }
  return result;
}

uint64_t FastSync.NoteContentMessage.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D19368();
  sub_1C3DBB6B8();
  if (!v2)
  {
    sub_1C3D0680C();
    sub_1C3DBB108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1C3D19528(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3D19558();
  unint64_t result = sub_1C3D195AC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3D19558()
{
  unint64_t result = qword_1EA387EC0;
  if (!qword_1EA387EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387EC0);
  }
  return result;
}

unint64_t sub_1C3D195AC()
{
  unint64_t result = qword_1EA387EC8;
  if (!qword_1EA387EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387EC8);
  }
  return result;
}

uint64_t sub_1C3D19600@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FastSync.NoteContentMessage.init(from:)(a1, a2);
}

uint64_t sub_1C3D19618(void *a1)
{
  return FastSync.NoteContentMessage.encode(to:)(a1);
}

uint64_t *_s18NoteContentMessageVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C3CE0C34(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s18NoteContentMessageVwxx(uint64_t a1)
{
  return sub_1C3C58FC8(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s18NoteContentMessageVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C3CE0C34(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1C3C58FC8(v5, v6);
  return a1;
}

uint64_t *_s18NoteContentMessageVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C3C58FC8(v3, v4);
  return a1;
}

uint64_t _s18NoteContentMessageVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s18NoteContentMessageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSync.NoteContentMessage()
{
  return &type metadata for FastSync.NoteContentMessage;
}

unsigned char *_s18NoteContentMessageV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3D1984CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s18NoteContentMessageV10CodingKeysOMa()
{
  return &_s18NoteContentMessageV10CodingKeysON;
}

unint64_t sub_1C3D19888()
{
  unint64_t result = qword_1EA387ED0;
  if (!qword_1EA387ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387ED0);
  }
  return result;
}

unint64_t sub_1C3D198E0()
{
  unint64_t result = qword_1EA387ED8;
  if (!qword_1EA387ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387ED8);
  }
  return result;
}

unint64_t sub_1C3D19938()
{
  unint64_t result = qword_1EA387EE0;
  if (!qword_1EA387EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387EE0);
  }
  return result;
}

uint64_t RecordingActivityAttributes.ContentState.recording.getter()
{
  return *v0;
}

uint64_t RecordingActivityAttributes.ContentState.currentTime.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t RecordingActivityAttributes.ContentState.hash(into:)()
{
  return sub_1C3DBB5E8();
}

BOOL static RecordingActivityAttributes.ContentState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

uint64_t sub_1C3D19A0C()
{
  if (*v0) {
    return 0x54746E6572727563;
  }
  else {
    return 0x6E6964726F636572;
  }
}

uint64_t sub_1C3D19A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D1A8B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D19A7C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D19C64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D19AB8(uint64_t a1)
{
  unint64_t v2 = sub_1C3D19C64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecordingActivityAttributes.ContentState.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EE8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D19C64();
  sub_1C3DBB6D8();
  char v11 = 0;
  sub_1C3DBB1B8();
  if (!v2)
  {
    char v10 = 1;
    sub_1C3DBB1D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C3D19C64()
{
  unint64_t result = qword_1EA387EF0;
  if (!qword_1EA387EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387EF0);
  }
  return result;
}

uint64_t RecordingActivityAttributes.ContentState.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t RecordingActivityAttributes.ContentState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D19C64();
  sub_1C3DBB6B8();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_1C3DBB0D8();
    char v13 = 1;
    uint64_t v10 = sub_1C3DBB0F8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1C3D19EBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RecordingActivityAttributes.ContentState.init(from:)(a1, a2);
}

uint64_t sub_1C3D19ED4(void *a1)
{
  return RecordingActivityAttributes.ContentState.encode(to:)(a1);
}

uint64_t sub_1C3D19EEC()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D19F4C()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3D19F8C()
{
  return sub_1C3DBB608();
}

BOOL sub_1C3D19FE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

uint64_t sub_1C3D1A014(uint64_t a1)
{
  unint64_t v2 = sub_1C3D1A19C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D1A050(uint64_t a1)
{
  unint64_t v2 = sub_1C3D1A19C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecordingActivityAttributes.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387F00);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D1A19C();
  sub_1C3DBB6D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1C3D1A19C()
{
  unint64_t result = qword_1EA387F08;
  if (!qword_1EA387F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F08);
  }
  return result;
}

uint64_t RecordingActivityAttributes.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

unint64_t sub_1C3D1A21C()
{
  unint64_t result = qword_1EA387F10;
  if (!qword_1EA387F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F10);
  }
  return result;
}

unint64_t sub_1C3D1A274()
{
  unint64_t result = qword_1EB6FBC08;
  if (!qword_1EB6FBC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBC08);
  }
  return result;
}

unint64_t sub_1C3D1A2CC()
{
  unint64_t result = qword_1EB6FBC00;
  if (!qword_1EB6FBC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBC00);
  }
  return result;
}

unint64_t sub_1C3D1A324()
{
  unint64_t result = qword_1EA387F18;
  if (!qword_1EA387F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F18);
  }
  return result;
}

unint64_t sub_1C3D1A37C()
{
  unint64_t result = qword_1EA387F20;
  if (!qword_1EA387F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F20);
  }
  return result;
}

unint64_t sub_1C3D1A3D4()
{
  unint64_t result = qword_1EA387F28;
  if (!qword_1EA387F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F28);
  }
  return result;
}

uint64_t sub_1C3D1A428(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387F00);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D1A19C();
  sub_1C3DBB6D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes()
{
  return &type metadata for RecordingActivityAttributes;
}

uint64_t getEnumTagSinglePayload for RecordingActivityAttributes.ContentState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordingActivityAttributes.ContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.ContentState()
{
  return &type metadata for RecordingActivityAttributes.ContentState;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.CodingKeys()
{
  return &type metadata for RecordingActivityAttributes.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RecordingActivityAttributes.ContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D1A6C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for RecordingActivityAttributes.ContentState.CodingKeys;
}

unint64_t sub_1C3D1A704()
{
  unint64_t result = qword_1EA387F30;
  if (!qword_1EA387F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F30);
  }
  return result;
}

unint64_t sub_1C3D1A75C()
{
  unint64_t result = qword_1EA387F38;
  if (!qword_1EA387F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F38);
  }
  return result;
}

unint64_t sub_1C3D1A7B4()
{
  unint64_t result = qword_1EA387F40;
  if (!qword_1EA387F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F40);
  }
  return result;
}

unint64_t sub_1C3D1A80C()
{
  unint64_t result = qword_1EA387F48;
  if (!qword_1EA387F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F48);
  }
  return result;
}

unint64_t sub_1C3D1A864()
{
  unint64_t result = qword_1EA387F50;
  if (!qword_1EA387F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F50);
  }
  return result;
}

uint64_t sub_1C3D1A8B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6964726F636572 && a2 == 0xE900000000000067;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E6572727563 && a2 == 0xEB00000000656D69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1C3D1A9D0(void *a1, void *a2)
{
  int v3 = v2;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  id v6 = objc_msgSend(a1, sel_format);
  sub_1C3D1AF0C();
  if (sub_1C3DBA8E8())
  {
    id v7 = a1;

    return v7;
  }
  char v9 = (void *)v2[2];
  if (!v9) {
    goto LABEL_6;
  }
  id v10 = objc_msgSend(v9, sel_outputFormat);
  if (!v10
    || (char v11 = v10,
        id v12 = a2,
        id v13 = v11,
        char v14 = sub_1C3DBA8E8(),
        v13,
        v13,
        v12,
        (v14 & 1) == 0))
  {
LABEL_6:
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15370]), sel_initFromFormat_toFormat_, v6, a2);
    uint64_t v16 = (void *)v3[2];
    v3[2] = v15;

    unsigned int v17 = (void *)v3[2];
    if (!v17) {
      goto LABEL_16;
    }
    objc_msgSend(v17, sel_setPrimeMethod_, 2);
  }
  uint64_t v18 = (void *)v3[2];
  if (v18)
  {
    id v19 = v18;
    id v20 = objc_msgSend(v19, sel_outputFormat);
    objc_msgSend(v20, sel_sampleRate);
    double v22 = v21;

    id v23 = objc_msgSend(v19, sel_inputFormat);
    objc_msgSend(v23, sel_sampleRate);
    double v25 = v24;

    double v26 = ceil(v22 / v25 * (double)objc_msgSend(a1, sel_frameLength));
    if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -1.0)
      {
        if (v26 < 4294967300.0)
        {
          uint64_t v27 = v26;
          id v28 = objc_msgSend(v19, sel_outputFormat);
          int v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v28, v27);

          if (v3)
          {
            uint64_t v29 = swift_allocObject();
            *(unsigned char *)(v29 + 16) = 0;
            uint64_t v30 = (void *)swift_allocObject();
            v30[2] = v29;
            v30[3] = a1;
            aBlock[4] = sub_1C3D1AFF0;
            aBlock[5] = v30;
            aBlock[0] = (id)MEMORY[0x1E4F143A8];
            aBlock[1] = (id)1107296256;
            aBlock[2] = sub_1C3C9BE78;
            aBlock[3] = &block_descriptor_10;
            uint64_t v31 = _Block_copy(aBlock);
            swift_retain();
            id v32 = a1;
            swift_release();
            aBlock[0] = 0;
            id v33 = objc_msgSend(v19, sel_convertToBuffer_error_withInputFromBlock_, v3, aBlock, v31);
            _Block_release(v31);
            id v34 = aBlock[0];
            uint64_t v35 = v34;
            if (v33 == (id)3)
            {
              sub_1C3D1AF4C();
              swift_allocError();
              void *v36 = v35;
              id v37 = v35;
              swift_willThrow();

              swift_release();
            }
            else
            {

              swift_release();
            }
          }
          else
          {
            sub_1C3D1AF4C();
            swift_allocError();
            void *v39 = 2;
            swift_willThrow();
          }
          return v3;
        }
LABEL_22:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_16:
  sub_1C3D1AF4C();
  swift_allocError();
  *uint64_t v38 = 1;
  swift_willThrow();

  return v3;
}

void *sub_1C3D1AE20(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  id v7 = (unsigned char *)(a3 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(a3 + 16))
  {
    a4 = 0;
    uint64_t v8 = 1;
  }
  else
  {
    id v9 = a4;
    uint64_t v8 = 0;
  }
  *a2 = v8;
  swift_beginAccess();
  *id v7 = 1;
  return a4;
}

uint64_t sub_1C3D1AEB0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BufferConverter()
{
  return self;
}

unint64_t sub_1C3D1AF0C()
{
  unint64_t result = qword_1EA387F58;
  if (!qword_1EA387F58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA387F58);
  }
  return result;
}

unint64_t sub_1C3D1AF4C()
{
  unint64_t result = qword_1EA387F60;
  if (!qword_1EA387F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F60);
  }
  return result;
}

uint64_t sub_1C3D1AFA0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3D1AFB0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C3D1AFF0(uint64_t a1, uint64_t *a2)
{
  return sub_1C3D1AE20(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void *initializeBufferWithCopyOfBuffer for BufferConverter.Error(void *a1, void **a2)
{
  int v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    unsigned int v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for BufferConverter.Error(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void **assignWithCopy for BufferConverter.Error(void **a1, void **a2)
{
  int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    unsigned int v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = v7;
      id v10 = v7;
      return a1;
    }
LABEL_12:
    *a1 = v7;
    return a1;
  }
  if (v8 > 1)
  {

    id v7 = *a2;
    goto LABEL_12;
  }
  *a1 = v7;
  id v9 = v7;

  return a1;
}

void **assignWithTake for BufferConverter.Error(void **a1, void **a2)
{
  int v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    unsigned int v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for BufferConverter.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BufferConverter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BufferConverter.Error()
{
  return &type metadata for BufferConverter.Error;
}

uint64_t sub_1C3D1B234()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t PersistedActivityEvent.Activities.type.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3D1B560(v2, (uint64_t)v6);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 1;
      goto LABEL_11;
    case 2:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 2;
      goto LABEL_11;
    case 3:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 4;
      goto LABEL_11;
    case 4:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 5;
      goto LABEL_11;
    case 5:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 6;
      goto LABEL_11;
    case 6:
      *a1 = 7;
      uint64_t v9 = sub_1C3DB8B98();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    case 7:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      char v8 = 8;
      goto LABEL_11;
    case 8:
      char v8 = 3;
LABEL_11:
      *a1 = v8;
      break;
    default:
      uint64_t result = sub_1C3D1B5C4((uint64_t)v6);
      *a1 = 0;
      break;
  }
  return result;
}

uint64_t type metadata accessor for PersistedActivityEvent.Activities()
{
  uint64_t result = qword_1EB6FC6C0;
  if (!qword_1EB6FC6C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3D1B560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D1B5C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersistedActivityEvent.Activities();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PersistedActivityEvent.Activities.participants.getter()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (void *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3D1B560(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = MEMORY[0x1E4FBC860];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 4:
    case 5:
      uint64_t v7 = v3[2];
      uint64_t v6 = v3[3];
      long long v10 = *(_OWORD *)v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
      uint64_t result = swift_allocObject();
      long long v8 = v10;
      *(_OWORD *)(result + 16) = xmmword_1C3DD3D30;
      *(_OWORD *)(result + 32) = v8;
      *(void *)(result + 48) = v7;
      *(void *)(result + 56) = v6;
      return result;
    case 6:
      uint64_t v9 = sub_1C3DB8B98();
      (*(void (**)(void *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      return MEMORY[0x1E4FBC860];
    case 7:
      return *v3;
    case 8:
      return result;
    default:
LABEL_5:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
  }
}

uint64_t PersistedActivityEvent.Activities.Types.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 9;
  if (v2 < 9) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t PersistedActivityEvent.Activities.Types.rawValue.getter()
{
  unint64_t result = 0x657461657263;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1702260589;
      break;
    case 2:
      unint64_t result = 2037411683;
      break;
    case 3:
      unint64_t result = 0x656D616E6572;
      break;
    case 4:
      unint64_t result = 0x6574656C6564;
      break;
    case 5:
      unint64_t result = 0x6974726150646461;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x6E6F69746E656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3D1B930(char a1)
{
  uint64_t result = 0x657261506D6F7266;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      uint64_t result = 0x746E657261506E69;
      break;
    case 3:
      uint64_t result = 0x656E6F447369;
      break;
    case 4:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    case 5:
    case 6:
      uint64_t result = 0x7069636974726170;
      break;
    case 7:
      uint64_t result = 0x746E657261506F74;
      break;
    case 8:
      uint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3D1BA54(unsigned __int8 *a1, char *a2)
{
  return sub_1C3CE6834(*a1, *a2);
}

uint64_t sub_1C3D1BA60()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D1BAA8()
{
  return sub_1C3D1B234();
}

uint64_t sub_1C3D1BAB0()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D1BAF4@<X0>(char *a1@<X8>)
{
  return PersistedActivityEvent.Activities.Types.init(rawValue:)(a1);
}

unint64_t sub_1C3D1BB00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PersistedActivityEvent.Activities.Types.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C3D1BB28()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3D1BB88()
{
  return sub_1C3DB9F58();
}

uint64_t sub_1C3D1BBD8()
{
  return sub_1C3D1B930(*v0);
}

uint64_t sub_1C3D1BBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D1FC30(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3D1BC08(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C3D1BC14(uint64_t a1)
{
  unint64_t v2 = sub_1C3D1EBA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D1BC50(uint64_t a1)
{
  unint64_t v2 = sub_1C3D1EBA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersistedActivityEvent.Activities.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387F68);
  uint64_t v80 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v6 = MEMORY[0x1F4188790](v74);
  uint64_t v79 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v78 = (char *)&v71 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v77 = (char *)&v71 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v76 = (char *)&v71 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v71 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v71 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  double v22 = (char *)&v71 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  double v25 = (char *)&v71 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = a1[3];
  uint64_t v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1C3D1EBA0();
  long long v82 = v5;
  uint64_t v29 = (uint64_t)v84;
  sub_1C3DBB6B8();
  if (v29)
  {
    uint64_t v36 = (uint64_t)v83;
  }
  else
  {
    char v72 = v25;
    uint64_t v73 = v16;
    uint64_t v30 = v76;
    uint64_t v71 = v22;
    id v32 = v77;
    uint64_t v31 = v78;
    id v33 = v79;
    uint64_t v34 = v80;
    uint64_t v84 = v27;
    LOBYTE(v87) = 8;
    sub_1C3D1EBF4();
    uint64_t v35 = v81;
    sub_1C3DBB108();
    switch((char)v89)
    {
      case 1:
        uint64_t v41 = v34;
        LOBYTE(v87) = 0;
        sub_1C3C64258();
        uint64_t v42 = v82;
        sub_1C3DBB0A8();
        uint64_t v53 = v35;
        uint64_t v54 = v89;
        char v55 = v90;
        uint64_t v56 = v91;
        LOBYTE(v85) = 7;
        sub_1C3DBB0A8();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v53);
        uint64_t v66 = v88;
        uint64_t v67 = v71;
        *uint64_t v71 = v54;
        v67[1] = v55;
        v67[2] = v56;
        *(_OWORD *)(v67 + 3) = v87;
        v67[5] = v66;
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v67;
        goto LABEL_16;
      case 2:
        LOBYTE(v87) = 4;
        sub_1C3C64258();
        uint64_t v43 = v82;
        sub_1C3DBB108();
        char v57 = v89;
        uint64_t v58 = v35;
        uint64_t v60 = v90;
        uint64_t v59 = v91;
        LOBYTE(v85) = 0;
        sub_1C3DBB0A8();
        id v78 = v60;
        uint64_t v76 = (char *)*((void *)&v87 + 1);
        uint64_t v77 = (char *)v87;
        uint64_t v79 = v88;
        char v92 = 7;
        sub_1C3DBB0A8();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v58);
        uint64_t v69 = v86;
        *id v19 = v57;
        *((void *)v19 + 1) = v78;
        *((void *)v19 + 2) = v59;
        uint64_t v70 = v76;
        *((void *)v19 + 3) = v77;
        *((void *)v19 + 4) = v70;
        *((void *)v19 + 5) = v79;
        *((_OWORD *)v19 + 3) = v85;
        *((void *)v19 + 8) = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v19;
        goto LABEL_16;
      case 3:
        (*(void (**)(char *, uint64_t))(v34 + 8))(v82, v35);
        uint64_t v44 = (uint64_t)v84;
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      case 4:
        LOBYTE(v87) = 0;
        sub_1C3C64258();
        uint64_t v45 = v82;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v35);
        uint64_t v46 = v90;
        uint64_t v47 = v91;
        id v33 = v73;
        unsigned char *v73 = v89;
        v33[1] = v46;
        unint64_t v33[2] = v47;
        goto LABEL_15;
      case 5:
        LOBYTE(v87) = 5;
        sub_1C3C642AC();
        uint64_t v48 = v82;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v48, v35);
        uint64_t v61 = v90;
        *(void *)uint64_t v30 = v89;
        *((void *)v30 + 1) = v61;
        *((_OWORD *)v30 + 1) = v91;
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v30;
        goto LABEL_16;
      case 6:
        LOBYTE(v87) = 5;
        sub_1C3C642AC();
        unint64_t v49 = v82;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v35);
        uint64_t v62 = v90;
        *(void *)id v32 = v89;
        *((void *)v32 + 1) = v62;
        *((_OWORD *)v32 + 1) = v91;
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v32;
        goto LABEL_16;
      case 7:
        uint64_t v50 = v34;
        sub_1C3DB8B98();
        LOBYTE(v89) = 1;
        sub_1C3D1EDA8(&qword_1EA386F28, MEMORY[0x1E4F27990]);
        uint64_t v51 = v82;
        sub_1C3DBB108();
        LOBYTE(v89) = 3;
        char v64 = sub_1C3DBB0D8();
        uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90) + 48);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v35);
        v31[v65] = v64 & 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v31;
        goto LABEL_16;
      case 8:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD8);
        LOBYTE(v87) = 6;
        sub_1C3D1EC9C(&qword_1EA387F80, &qword_1EA385FD8, (void (*)(void))sub_1C3C642AC);
        uint64_t v52 = v82;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v52, v35);
        *id v33 = v89;
        goto LABEL_15;
      default:
        LOBYTE(v87) = 2;
        sub_1C3C64258();
        uint64_t v38 = v82;
        sub_1C3DBB108();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v35);
        uint64_t v39 = v90;
        uint64_t v40 = v91;
        id v33 = v72;
        *char v72 = v89;
        v33[1] = v39;
        unint64_t v33[2] = v40;
LABEL_15:
        swift_storeEnumTagMultiPayload();
        uint64_t v68 = (uint64_t)v33;
LABEL_16:
        uint64_t v44 = (uint64_t)v84;
        sub_1C3C640F8(v68, (uint64_t)v84);
LABEL_17:
        uint64_t v63 = (uint64_t)v83;
        sub_1C3C640F8(v44, v75);
        uint64_t v36 = v63;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v36);
}

uint64_t PersistedActivityEvent.Activities.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387F88);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D1EBA0();
  uint64_t v13 = v9;
  sub_1C3DBB6D8();
  PersistedActivityEvent.Activities.type.getter((char *)&v45);
  char v48 = 8;
  sub_1C3D1EC48();
  uint64_t v14 = v44;
  sub_1C3DBB1E8();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v13);
  }
  uint64_t v17 = v42;
  uint64_t v16 = v43;
  sub_1C3D1B560(v2, (uint64_t)v8);
  uint64_t v18 = v10;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = v12;
      uint64_t v28 = *((void *)v8 + 2);
      uint64_t v27 = *((void *)v8 + 3);
      uint64_t v29 = *((void *)v8 + 5);
      uint64_t v43 = *((void *)v8 + 4);
      uint64_t v44 = v27;
      long long v45 = *(_OWORD *)v8;
      uint64_t v46 = v28;
      char v48 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387FA0);
      sub_1C3D1EC9C(&qword_1EA387FA8, &qword_1EA387FA0, (void (*)(void))sub_1C3C641B0);
      sub_1C3DBB1E8();
      swift_bridgeObjectRelease();
      *(void *)&long long v45 = v44;
      *((void *)&v45 + 1) = v43;
      uint64_t v46 = v29;
      char v48 = 7;
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v13);
      break;
    case 2u:
      char v30 = *v8;
      uint64_t v31 = *((void *)v8 + 1);
      uint64_t v32 = *((void *)v8 + 2);
      uint64_t v33 = *((void *)v8 + 3);
      uint64_t v34 = *((void *)v8 + 5);
      uint64_t v43 = *((void *)v8 + 4);
      uint64_t v44 = v33;
      uint64_t v35 = v12;
      uint64_t v37 = *((void *)v8 + 6);
      uint64_t v36 = *((void *)v8 + 7);
      uint64_t v38 = *((void *)v8 + 8);
      LOBYTE(v45) = v30;
      *((void *)&v45 + 1) = v31;
      uint64_t v46 = v32;
      char v48 = 4;
      sub_1C3C641B0();
      sub_1C3DBB1E8();
      uint64_t v41 = v36;
      uint64_t v42 = v37;
      swift_bridgeObjectRelease();
      *(void *)&long long v45 = v44;
      *((void *)&v45 + 1) = v43;
      uint64_t v46 = v34;
      char v48 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387FA0);
      sub_1C3D1EC9C(&qword_1EA387FA8, &qword_1EA387FA0, (void (*)(void))sub_1C3C641B0);
      sub_1C3DBB1E8();
      swift_bridgeObjectRelease();
      *(void *)&long long v45 = v42;
      *((void *)&v45 + 1) = v41;
      uint64_t v46 = v38;
      char v48 = 7;
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v13);
      break;
    case 3u:
      uint64_t v39 = *((void *)v8 + 1);
      uint64_t v40 = *((void *)v8 + 2);
      LOBYTE(v45) = *v8;
      *((void *)&v45 + 1) = v39;
      uint64_t v46 = v40;
      char v48 = 0;
      sub_1C3C641B0();
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v13);
      break;
    case 4u:
    case 5u:
      id v19 = v12;
      uint64_t v20 = *((void *)v8 + 1);
      uint64_t v21 = *((void *)v8 + 2);
      uint64_t v22 = *((void *)v8 + 3);
      *(void *)&long long v45 = *(void *)v8;
      *((void *)&v45 + 1) = v20;
      uint64_t v46 = v21;
      uint64_t v47 = v22;
      char v48 = 5;
      sub_1C3C64204();
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v13);
      swift_bridgeObjectRelease();
      break;
    case 6u:
      LODWORD(v44) = v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v6, v8, v16);
      LOBYTE(v45) = 1;
      sub_1C3D1EDA8(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
      sub_1C3DBB1E8();
      LOBYTE(v45) = 3;
      sub_1C3DBB1B8();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v13);
    case 7u:
      *(void *)&long long v45 = *(void *)v8;
      char v48 = 6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD8);
      sub_1C3D1EC9C(&qword_1EA387F98, &qword_1EA385FD8, (void (*)(void))sub_1C3C64204);
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v13);
      break;
    case 8u:
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v13);
    default:
      uint64_t v23 = v13;
      uint64_t v24 = *((void *)v8 + 1);
      uint64_t v25 = *((void *)v8 + 2);
      LOBYTE(v45) = *v8;
      *((void *)&v45 + 1) = v24;
      uint64_t v46 = v25;
      char v48 = 2;
      sub_1C3C641B0();
      sub_1C3DBB1E8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
      break;
  }
  return swift_bridgeObjectRelease();
}

uint64_t PersistedActivityEvent.Activities.isSharedRootActivity.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v17 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  sub_1C3D1B560(v1, (uint64_t)&v17 - v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
    case 5u:
      sub_1C3D1B5C4((uint64_t)v10);
      sub_1C3D1B560(v1, (uint64_t)v8);
      uint64_t v11 = 1;
      goto LABEL_14;
    case 6u:
      uint64_t v12 = sub_1C3DB8B98();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
      goto LABEL_3;
    case 8u:
      goto LABEL_3;
    default:
      sub_1C3D1B5C4((uint64_t)v10);
LABEL_3:
      sub_1C3D1B560(v1, (uint64_t)v8);
      sub_1C3D1B560((uint64_t)v8, (uint64_t)v5);
      uint64_t v11 = 0;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v13 = *((void *)v5 + 5);
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_10;
          }
          goto LABEL_8;
        case 2u:
          uint64_t v14 = *((void *)v5 + 8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14)
          {
LABEL_10:
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v11 = 0;
          }
          else
          {
LABEL_8:
            uint64_t v11 = 1;
          }
          break;
        case 3u:
          sub_1C3D1B5C4((uint64_t)v5);
          uint64_t v11 = 1;
          break;
        case 6u:
          uint64_t v15 = sub_1C3DB8B98();
          (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
          goto LABEL_13;
        case 8u:
          break;
        default:
          sub_1C3D1B5C4((uint64_t)v5);
          goto LABEL_13;
      }
LABEL_14:
      sub_1C3D1B5C4((uint64_t)v8);
      return v11;
  }
}

uint64_t PersistedActivityEvent.Activities.isParticipantActivity.getter()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3D1B560(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 4:
    case 5:
      sub_1C3D1B5C4((uint64_t)v3);
      uint64_t result = 1;
      break;
    case 6:
      uint64_t v6 = sub_1C3DB8B98();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
      goto LABEL_3;
    case 8:
      return result;
    default:
      sub_1C3D1B5C4((uint64_t)v3);
LABEL_3:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t PersistedActivityEvent.Activities.isRemoveActivity.getter()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3D1B560(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v6 = *((void *)v3 + 5);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_6;
      }
      return 1;
    case 2:
      uint64_t v7 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v7) {
        return 1;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      return 0;
    case 3:
      sub_1C3D1B5C4((uint64_t)v3);
      return 1;
    case 6:
      uint64_t v8 = sub_1C3DB8B98();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
      return 0;
    case 8:
      return result;
    default:
      sub_1C3D1B5C4((uint64_t)v3);
      return 0;
  }
}

uint64_t PersistedActivityEvent.Activities.isAddActivity.getter()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3D1B560(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v6 = *((void *)v3 + 2);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_7;
      }
      return 1;
    case 2:
      uint64_t v7 = *((void *)v3 + 5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v7) {
        return 1;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      return 0;
    case 3:
    case 4:
    case 5:
    case 7:
      sub_1C3D1B5C4((uint64_t)v3);
      return 0;
    case 6:
      uint64_t v8 = sub_1C3DB8B98();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
      return 0;
    case 8:
      return result;
    default:
      sub_1C3D1B5C4((uint64_t)v3);
      return 1;
  }
}

uint64_t PersistedActivityEvent.Activities.isNoteActivity.getter()
{
  uint64_t v1 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3D1B560(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 6:
      uint64_t v6 = sub_1C3DB8B98();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
      goto LABEL_5;
    case 7:
      sub_1C3D1B5C4((uint64_t)v3);
LABEL_5:
      uint64_t result = 1;
      break;
    case 8:
      return result;
    default:
      sub_1C3D1B5C4((uint64_t)v3);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t PersistedActivityEvent.Activities.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3D1B560(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = v8[2];
      uint64_t v10 = v8[5];
      sub_1C3DBB5E8();
      if (v9)
      {
        sub_1C3DBB5F8();
        swift_bridgeObjectRetain();
        sub_1C3DB9D08();
        swift_bridgeObjectRelease();
        sub_1C3DB9D08();
        swift_bridgeObjectRelease_n();
        if (v10) {
          goto LABEL_19;
        }
        return sub_1C3DBB5F8();
      }
      sub_1C3DBB5F8();
      if (!v10) {
        return sub_1C3DBB5F8();
      }
      goto LABEL_19;
    case 2u:
      uint64_t v12 = v8[5];
      uint64_t v11 = v8[6];
      v18[1] = v8[4];
      v18[2] = v11;
      uint64_t v13 = v8[8];
      v18[3] = v8[7];
      sub_1C3DBB5E8();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      sub_1C3DBB5F8();
      if (v12)
      {
        swift_bridgeObjectRetain();
        sub_1C3DB9D08();
        swift_bridgeObjectRelease();
        sub_1C3DB9D08();
        swift_bridgeObjectRelease_n();
      }
      if (!v13) {
        return sub_1C3DBB5F8();
      }
LABEL_19:
      sub_1C3DBB5F8();
      swift_bridgeObjectRetain();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      sub_1C3DB9D08();
      return swift_bridgeObjectRelease_n();
    case 4u:
    case 5u:
      sub_1C3DBB5E8();
      swift_bridgeObjectRetain();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
      (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
      sub_1C3DBB5E8();
      sub_1C3D1EDA8((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
      sub_1C3DB9B18();
      sub_1C3DBB5F8();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    case 7u:
      uint64_t v15 = *v8;
      sub_1C3DBB5E8();
      sub_1C3DBB5E8();
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        uint64_t v17 = v15 + 56;
        do
        {
          v17 += 32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          sub_1C3DB9D08();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          --v16;
        }
        while (v16);
      }
      return swift_bridgeObjectRelease();
    case 8u:
      return sub_1C3DBB5E8();
    default:
      sub_1C3DBB5E8();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      sub_1C3DB9D08();
      return swift_bridgeObjectRelease();
  }
}

uint64_t PersistedActivityEvent.Activities.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D1DD24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersistedActivityEvent.Activities.init(from:)(a1, a2);
}

uint64_t sub_1C3D1DD3C(void *a1)
{
  return PersistedActivityEvent.Activities.encode(to:)(a1);
}

uint64_t sub_1C3D1DD54()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D1DD98()
{
  return sub_1C3DBB608();
}

uint64_t _s11NotesShared22PersistedActivityEventV10ActivitiesO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v134 = a1;
  id v135 = (char *)a2;
  uint64_t v2 = sub_1C3DB8B98();
  uint64_t v132 = *(void *)(v2 - 8);
  uint64_t v133 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v130 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v131 = (uint64_t)&v126 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v126 - v11);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (uint64_t *)((char *)&v126 - v14);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (unsigned __int8 *)&v126 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (unsigned __int8 *)&v126 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v126 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (unsigned __int8 *)&v126 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387FE0);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  char v30 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t *)&v30[*(int *)(v28 + 56)];
  sub_1C3D1B560(v134, (uint64_t)v30);
  sub_1C3D1B560((uint64_t)v135, (uint64_t)v31);
  id v135 = v30;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v24);
      char v36 = *v24;
      uint64_t v38 = *((void *)v24 + 1);
      uint64_t v37 = *((void *)v24 + 2);
      char v39 = v24[24];
      uint64_t v41 = *((void *)v24 + 4);
      uint64_t v40 = *((void *)v24 + 5);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = (uint64_t)v135;
        goto LABEL_74;
      }
      uint64_t v43 = v31[2];
      uint64_t v42 = v31[3];
      uint64_t v44 = v31[4];
      uint64_t v45 = v31[5];
      if (v37)
      {
        if (v43)
        {
          uint64_t v133 = v31[5];
          uint64_t v134 = v44;
          uint64_t v46 = *v31;
          uint64_t v47 = v31[1];
          if (v36) {
            uint64_t v48 = 1702129518;
          }
          else {
            uint64_t v48 = 0x7265646C6F66;
          }
          if (v36) {
            unint64_t v49 = 0xE400000000000000;
          }
          else {
            unint64_t v49 = 0xE600000000000000;
          }
          if (v46) {
            uint64_t v50 = 1702129518;
          }
          else {
            uint64_t v50 = 0x7265646C6F66;
          }
          if (v46) {
            unint64_t v51 = 0xE400000000000000;
          }
          else {
            unint64_t v51 = 0xE600000000000000;
          }
          BOOL v52 = v48 == v50 && v49 == v51;
          uint64_t v132 = v42;
          if (v52)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v53 = sub_1C3DBB3B8();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v53 & 1) == 0)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v54 = (uint64_t)v135;
LABEL_156:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_157;
            }
          }
          if (v38 == v47 && v37 == v43)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            uint64_t v54 = (uint64_t)v135;
            LOBYTE(v42) = v132;
            uint64_t v45 = v133;
          }
          else
          {
            char v108 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            uint64_t v54 = (uint64_t)v135;
            LOBYTE(v42) = v132;
            uint64_t v45 = v133;
            if ((v108 & 1) == 0) {
              goto LABEL_156;
            }
          }
          goto LABEL_135;
        }
        uint64_t v54 = (uint64_t)v135;
      }
      else
      {
        uint64_t v134 = v31[4];
        uint64_t v54 = (uint64_t)v135;
        if (!v43)
        {
LABEL_135:
          if (v40)
          {
            if (!v45) {
              goto LABEL_156;
            }
            if (v39) {
              uint64_t v109 = 1702129518;
            }
            else {
              uint64_t v109 = 0x7265646C6F66;
            }
            if (v39) {
              unint64_t v110 = 0xE400000000000000;
            }
            else {
              unint64_t v110 = 0xE600000000000000;
            }
            if (v42) {
              uint64_t v111 = 1702129518;
            }
            else {
              uint64_t v111 = 0x7265646C6F66;
            }
            if (v42) {
              unint64_t v112 = 0xE400000000000000;
            }
            else {
              unint64_t v112 = 0xE600000000000000;
            }
            if (v109 == v111 && v110 == v112)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v114 = sub_1C3DBB3B8();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v114 & 1) == 0)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
LABEL_157:
                sub_1C3D1B5C4(v54);
                goto LABEL_75;
              }
            }
            if (v41 == v134 && v40 == v45)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v123 = sub_1C3DBB3B8();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              if ((v123 & 1) == 0) {
                goto LABEL_157;
              }
            }
          }
          else if (v45)
          {
            goto LABEL_156;
          }
          uint64_t v99 = v54;
          goto LABEL_97;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_156;
    case 2u:
      uint64_t v32 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v21);
      uint64_t v56 = *((void *)v21 + 1);
      uint64_t v55 = *((void *)v21 + 2);
      unsigned __int8 v57 = v21[24];
      uint64_t v58 = *((void *)v21 + 5);
      uint64_t v134 = *((void *)v21 + 4);
      LODWORD(v133) = v21[48];
      uint64_t v60 = (char *)*((void *)v21 + 7);
      uint64_t v59 = *((void *)v21 + 8);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      uint64_t v132 = v59;
      int v61 = *v21;
      int v62 = *(unsigned __int8 *)v31;
      uint64_t v64 = v31[1];
      uint64_t v63 = v31[2];
      uint64_t v129 = v31[3];
      uint64_t v130 = v60;
      uint64_t v65 = v31[5];
      uint64_t v128 = v31[4];
      uint64_t v127 = v31[6];
      uint64_t v126 = v31[7];
      uint64_t v131 = v31[8];
      if (v61) {
        uint64_t v66 = 1702129518;
      }
      else {
        uint64_t v66 = 0x7265646C6F66;
      }
      if (v61) {
        unint64_t v67 = 0xE400000000000000;
      }
      else {
        unint64_t v67 = 0xE600000000000000;
      }
      if (v62) {
        uint64_t v68 = 1702129518;
      }
      else {
        uint64_t v68 = 0x7265646C6F66;
      }
      if (v62) {
        unint64_t v69 = 0xE400000000000000;
      }
      else {
        unint64_t v69 = 0xE600000000000000;
      }
      if (v66 == v68 && v67 == v69)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v71 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v71 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_123:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C3D1B5C4((uint64_t)v135);
          goto LABEL_75;
        }
      }
      if (v56 == v64 && v55 == v63)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v101 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v101 & 1) == 0) {
          goto LABEL_123;
        }
      }
      uint64_t v102 = (uint64_t)v135;
      if (!v58)
      {
        unint64_t v103 = v130;
        if (!v65) {
          goto LABEL_163;
        }
LABEL_128:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_181;
      }
      unint64_t v103 = v130;
      if (!v65) {
        goto LABEL_128;
      }
      if (v57) {
        uint64_t v104 = 1702129518;
      }
      else {
        uint64_t v104 = 0x7265646C6F66;
      }
      if (v57) {
        unint64_t v105 = 0xE400000000000000;
      }
      else {
        unint64_t v105 = 0xE600000000000000;
      }
      if (v129) {
        uint64_t v106 = 1702129518;
      }
      else {
        uint64_t v106 = 0x7265646C6F66;
      }
      if (v129) {
        unint64_t v107 = 0xE400000000000000;
      }
      else {
        unint64_t v107 = 0xE600000000000000;
      }
      if (v104 == v106 && v105 == v107)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v115 = sub_1C3DBB3B8();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v115 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_181;
        }
      }
      if (v134 == v128 && v58 == v65)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v116 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v116 & 1) == 0) {
          goto LABEL_181;
        }
      }
LABEL_163:
      uint64_t v117 = v132;
      if (!v132)
      {
        if (!v131)
        {
LABEL_195:
          uint64_t v99 = v102;
          goto LABEL_97;
        }
        goto LABEL_181;
      }
      uint64_t v118 = v131;
      if (!v131)
      {
LABEL_181:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_182;
      }
      if (v133) {
        uint64_t v119 = 1702129518;
      }
      else {
        uint64_t v119 = 0x7265646C6F66;
      }
      if (v133) {
        unint64_t v120 = 0xE400000000000000;
      }
      else {
        unint64_t v120 = 0xE600000000000000;
      }
      if (v127) {
        uint64_t v121 = 1702129518;
      }
      else {
        uint64_t v121 = 0x7265646C6F66;
      }
      if (v127) {
        unint64_t v122 = 0xE400000000000000;
      }
      else {
        unint64_t v122 = 0xE600000000000000;
      }
      if (v119 == v121 && v120 == v122)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v124 = sub_1C3DBB3B8();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v124 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_182;
        }
      }
      if (v103 == (char *)v126 && v117 == v118)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_195;
      }
      char v125 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (v125) {
        goto LABEL_195;
      }
LABEL_182:
      sub_1C3D1B5C4(v102);
LABEL_75:
      char v84 = 0;
      return v84 & 1;
    case 3u:
      uint64_t v32 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v18);
      uint64_t v34 = *((void *)v18 + 1);
      uint64_t v33 = *((void *)v18 + 2);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_73;
      }
      int v35 = *v18;
      goto LABEL_46;
    case 4u:
      uint64_t v32 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v15);
      uint64_t v81 = *v15;
      uint64_t v80 = v15[1];
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_65;
      }
      goto LABEL_72;
    case 5u:
      uint64_t v32 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v12);
      uint64_t v81 = *v12;
      uint64_t v80 = v12[1];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
LABEL_72:
        swift_bridgeObjectRelease();
LABEL_73:
        swift_bridgeObjectRelease();
        goto LABEL_74;
      }
LABEL_65:
      if (v81 == *v31 && v80 == v31[1])
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v83 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v83 & 1) == 0) {
          goto LABEL_94;
        }
      }
      goto LABEL_96;
    case 6u:
      uint64_t v32 = (uint64_t)v135;
      uint64_t v85 = v131;
      sub_1C3D1B560((uint64_t)v135, v131);
      uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90) + 48);
      char v87 = *(unsigned char *)(v85 + v86);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v85, v133);
        goto LABEL_74;
      }
      char v88 = *((unsigned char *)v31 + v86);
      uint64_t v90 = v132;
      uint64_t v89 = v133;
      long long v91 = v130;
      (*(void (**)(char *, uint64_t *, uint64_t))(v132 + 32))(v130, v31, v133);
      char v92 = sub_1C3DB8B48();
      uint64_t v93 = *(void (**)(char *, uint64_t))(v90 + 8);
      v93(v91, v89);
      v93((char *)v85, v89);
      if ((v92 & 1) == 0) {
        goto LABEL_94;
      }
      sub_1C3D1B5C4(v32);
      char v84 = v87 ^ v88 ^ 1;
      return v84 & 1;
    case 7u:
      uint64_t v94 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v7);
      uint64_t v95 = *v7;
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        char v84 = sub_1C3C6ECA4(v95, *v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C3D1B5C4(v94);
        return v84 & 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = v94;
LABEL_74:
      sub_1C3D20034(v32);
      goto LABEL_75;
    case 8u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v32 = (uint64_t)v135;
      if (EnumCaseMultiPayload == 8) {
        goto LABEL_96;
      }
      goto LABEL_74;
    default:
      uint64_t v32 = (uint64_t)v135;
      sub_1C3D1B560((uint64_t)v135, (uint64_t)v26);
      uint64_t v34 = *((void *)v26 + 1);
      uint64_t v33 = *((void *)v26 + 2);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_73;
      }
      int v35 = *v26;
LABEL_46:
      uint64_t v73 = v31[1];
      uint64_t v72 = v31[2];
      if (v35) {
        uint64_t v74 = 1702129518;
      }
      else {
        uint64_t v74 = 0x7265646C6F66;
      }
      if (v35) {
        unint64_t v75 = 0xE400000000000000;
      }
      else {
        unint64_t v75 = 0xE600000000000000;
      }
      if (*(unsigned char *)v31) {
        uint64_t v76 = 1702129518;
      }
      else {
        uint64_t v76 = 0x7265646C6F66;
      }
      if (*(unsigned char *)v31) {
        unint64_t v77 = 0xE400000000000000;
      }
      else {
        unint64_t v77 = 0xE600000000000000;
      }
      if (v74 == v76 && v75 == v77)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v79 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v79 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_94:
          sub_1C3D1B5C4(v32);
          goto LABEL_75;
        }
      }
      if (v34 == v73 && v33 == v72)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v98 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v98 & 1) == 0) {
          goto LABEL_94;
        }
      }
LABEL_96:
      uint64_t v99 = v32;
LABEL_97:
      sub_1C3D1B5C4(v99);
      char v84 = 1;
      return v84 & 1;
  }
}

unint64_t sub_1C3D1EBA0()
{
  unint64_t result = qword_1EA387F70;
  if (!qword_1EA387F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F70);
  }
  return result;
}

unint64_t sub_1C3D1EBF4()
{
  unint64_t result = qword_1EA387F78;
  if (!qword_1EA387F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F78);
  }
  return result;
}

unint64_t sub_1C3D1EC48()
{
  unint64_t result = qword_1EA387F90;
  if (!qword_1EA387F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387F90);
  }
  return result;
}

uint64_t sub_1C3D1EC9C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3D1ED0C()
{
  unint64_t result = qword_1EA387FB0;
  if (!qword_1EA387FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387FB0);
  }
  return result;
}

uint64_t sub_1C3D1ED60()
{
  return sub_1C3D1EDA8(&qword_1EA387FB8, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent.Activities);
}

uint64_t sub_1C3D1EDA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s10ActivitiesOwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v10 = a2[2];
        a1[1] = a2[1];
        a1[2] = v10;
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v11 = a2[4];
        uint64_t v12 = a2[5];
        a1[4] = v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v13 = a2[2];
        a1[1] = a2[1];
        a1[2] = v13;
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        uint64_t v15 = a2[7];
        uint64_t v16 = a2[8];
        a1[7] = v15;
        a1[8] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        uint64_t v18 = a2[2];
        uint64_t v19 = a2[3];
        a1[2] = v18;
        a1[3] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v20 = sub_1C3DB8B98();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
        *((unsigned char *)a1 + *(int *)(v21 + 48)) = *((unsigned char *)a2 + *(int *)(v21 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s10ActivitiesOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 7:
      goto LABEL_7;
    case 1:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6:
      uint64_t v3 = sub_1C3DB8B98();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *_s10ActivitiesOwcp(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v8 = a2[4];
      uint64_t v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
      uint64_t v12 = a2[7];
      uint64_t v13 = a2[8];
      a1[7] = v12;
      a1[8] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4u:
    case 5u:
      uint64_t v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      uint64_t v15 = a2[2];
      uint64_t v16 = a2[3];
      a1[2] = v15;
      a1[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 6u:
      uint64_t v17 = sub_1C3DB8B98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
      *((unsigned char *)a1 + *(int *)(v18 + 48)) = *((unsigned char *)a2 + *(int *)(v18 + 48));
      goto LABEL_9;
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *_s10ActivitiesOwca(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3D1B5C4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        a1[7] = a2[7];
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 6u:
        uint64_t v6 = sub_1C3DB8B98();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
        *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
        goto LABEL_10;
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *_s10ActivitiesOwtk(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = sub_1C3DB8B98();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *_s10ActivitiesOwta(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C3D1B5C4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = sub_1C3DB8B98();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C3D1F8A8()
{
  v2[4] = &unk_1C3DDAA50;
  v2[5] = &unk_1C3DDAA68;
  v2[6] = &unk_1C3DDAA80;
  v2[7] = &unk_1C3DDAA50;
  v2[8] = &unk_1C3DDAA98;
  v2[9] = &unk_1C3DDAA98;
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[10] = v2;
    v2[11] = MEMORY[0x1E4FBAD80] + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistedActivityEvent.Activities.Types()
{
  return &type metadata for PersistedActivityEvent.Activities.Types;
}

uint64_t _s10ActivitiesO5TypesOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10ActivitiesO5TypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D1FAF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10ActivitiesO10CodingKeysOMa()
{
  return &_s10ActivitiesO10CodingKeysON;
}

unint64_t sub_1C3D1FB2C()
{
  unint64_t result = qword_1EA387FC0;
  if (!qword_1EA387FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387FC0);
  }
  return result;
}

unint64_t sub_1C3D1FB84()
{
  unint64_t result = qword_1EA387FC8;
  if (!qword_1EA387FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387FC8);
  }
  return result;
}

unint64_t sub_1C3D1FBDC()
{
  unint64_t result = qword_1EA387FD0;
  if (!qword_1EA387FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387FD0);
  }
  return result;
}

uint64_t sub_1C3D1FC30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x657261506D6F7266 && a2 == 0xEA0000000000746ELL || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E657261506E69 && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6F447369 && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEC00000073746E61 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E657261506F74 && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_1C3D1FFE0()
{
  unint64_t result = qword_1EA387FD8;
  if (!qword_1EA387FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA387FD8);
  }
  return result;
}

uint64_t sub_1C3D20034(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387FE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSAttributedString __swiftcall ICTTMergeableAttributedString.authorAttributedString(for:object:)(__C::_NSRange a1, ICCloudSyncingObject *object)
{
  int v3 = v2;
  Swift::Int length = a1.length;
  Swift::Int location = a1.location;
  result.super.Class isa = (Class)objc_msgSend(v3, sel_attributedString);
  if (result.super.isa)
  {
    Class isa = result.super.isa;
    id v9 = -[objc_class attributedSubstringFromRange:](result.super.isa, sel_attributedSubstringFromRange_, location, length);

    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v9);
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v3;
    v11[3] = v10;
    v11[4] = object;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1C3D207BC;
    *(void *)(v12 + 24) = v11;
    void v18[4] = sub_1C3D207D8;
    v18[5] = v12;
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 1107296256;
    v18[2] = sub_1C3D20800;
    v18[3] = &block_descriptor_11;
    uint64_t v13 = _Block_copy(v18);
    id v14 = v3;
    id v15 = v10;
    uint64_t v16 = object;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_enumerateEditsInRange_usingBlock_, location, length, v13);
    _Block_release(v13);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result.super.Class isa = (Class)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (NSAttributedString)v15;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D20290(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v52 = a5;
  id v57 = a4;
  uint64_t v55 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(v58 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v58);
  uint64_t v54 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v53 = (char *)&v51 - v12;
  uint64_t v13 = sub_1C3DB8B98();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v51 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v51 - v21;
  id v23 = objc_msgSend(a1, sel_replicaID);
  sub_1C3DB8B58();

  id v24 = objc_msgSend(self, sel_CR_unserialized);
  sub_1C3DB8B58();

  char v25 = sub_1C3DB8B48();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v17, v13);
  uint64_t v56 = v13;
  uint64_t v27 = v13;
  uint64_t v28 = a1;
  v26(v20, v27);
  if (v25) {
    uint64_t v29 = v55;
  }
  else {
    uint64_t v29 = a1;
  }
  char v30 = &selRef_replicaUUID;
  if ((v25 & 1) == 0) {
    char v30 = &selRef_replicaID;
  }
  id v31 = [v29 *v30];
  sub_1C3DB8B58();

  uint64_t v32 = ICTTAttributeNameReplicaID;
  uint64_t v33 = (void *)sub_1C3DB8B38();
  id v34 = objc_msgSend(v28, sel_range);
  objc_msgSend(v57, sel_addAttribute_value_range_, v32, v33, v34, v35);

  id v36 = objc_msgSend(v28, sel_timestamp);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v58);
    goto LABEL_12;
  }
  uint64_t v37 = v36;
  uint64_t v38 = v54;
  sub_1C3DB8AC8();

  char v39 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v40 = v38;
  uint64_t v41 = v58;
  v39(v8, v40, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v41);
  uint64_t v42 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v41) == 1)
  {
LABEL_12:
    v26(v22, v56);
    return sub_1C3C2A448((uint64_t)v8, &qword_1EB6FB1B8);
  }
  uint64_t v43 = v53;
  v39(v53, v8, v58);
  uint64_t v44 = (void *)sub_1C3DB8B38();
  unsigned int v45 = objc_msgSend(v52, sel_trustsTimestampsFromReplicaID_, v44);

  if (v45)
  {
    uint64_t v46 = ICTTAttributeNameTimestamp;
    sub_1C3DB8AA8();
    uint64_t v47 = (void *)sub_1C3DBA3E8();
    id v48 = objc_msgSend(v28, sel_range);
    objc_msgSend(v57, sel_addAttribute_value_range_, v46, v47, v48, v49);
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v58);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v56);
}

uint64_t sub_1C3D20774()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D207BC(void *a1, uint64_t a2)
{
  return sub_1C3D20290(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C3D207C8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D207D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1C3D20800(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

Swift::Void __swiftcall ICTTMergeableAttributedString.insertAuthorAttributedString(_:at:)(NSAttributedString _, Swift::Int at)
{
  Swift::Int v14 = at;
  unsigned int v4 = ICTTAttributeNameReplicaID;
  id v5 = [(objc_class *)_.super.isa ic_range];
  uint64_t v7 = v6;
  int v8 = (NSAttributedString *)swift_allocObject();
  v8[2].super.Class isa = v2;
  v8[3].super.Class isa = _.super.isa;
  v8[4].super.Class isa = (Class)&v14;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C3D20D98;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1C3D20DB4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3D20DDC;
  aBlock[3] = &block_descriptor_12;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v2;
  Class v12 = _.super.isa;
  swift_retain();
  swift_release();
  -[objc_class enumerateAttribute:inRange:options:usingBlock:](v12, sel_enumerateAttribute_inRange_options_usingBlock_, v4, v5, v7, 0, v10);

  _Block_release(v10);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v12) {
    __break(1u);
  }
}

uint64_t sub_1C3D20A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C3DB8B98();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C499AC(a1, (uint64_t)v39);
  uint64_t v37 = a3;
  uint64_t v38 = a7;
  uint64_t v36 = a2;
  if (v40)
  {
    int v20 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, v20 ^ 1u, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C3C2A448((uint64_t)v39, qword_1EB6FB1D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  id v21 = objc_msgSend(a5, sel_replicaUUID);
  sub_1C3DB8B58();

  sub_1C3C2A448((uint64_t)v15, &qword_1EB6FC060);
LABEL_6:
  id v22 = objc_msgSend(a5, sel_serialize);
  uint64_t v23 = sub_1C3DB8958();
  unint64_t v25 = v24;

  id v26 = objc_allocWithZone((Class)ICTTMergeableAttributedString);
  uint64_t v27 = (void *)sub_1C3DB8938();
  uint64_t v28 = a5;
  uint64_t v29 = (void *)sub_1C3DB8B38();
  id v30 = objc_msgSend(v26, sel_initWithData_replicaID_, v27, v29);

  sub_1C3C58FC8(v23, v25);
  uint64_t v31 = v37;
  id v32 = objc_msgSend(a6, sel_attributedSubstringFromRange_, v36, v37);
  uint64_t v33 = v38;
  objc_msgSend(v30, sel_insertAttributedString_atIndex_, v32, *v38);

  objc_msgSend(v28, sel_mergeWithString_, v30);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (__OFADD__(*v33, v31)) {
    __break(1u);
  }
  else {
    *v33 += v31;
  }
  return result;
}

uint64_t sub_1C3D20D58()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D20D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D20A14(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1C3D20DA4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D20DB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3D20DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1C3C2A448((uint64_t)&v11, qword_1EB6FB1D8);
}

uint64_t sub_1C3D20E7C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C3C9D860(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(sub_1C3DB9358() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C3C9D860(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C3D2B1B4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for TranscriptViewModelSegment);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C3D21078()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA387FE8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA387FE8);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL static TranscriptSegmentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptSegmentType.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t TranscriptSegmentType.hashValue.getter()
{
  return sub_1C3DBB608();
}

BOOL static TranscriptUpdateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TranscriptUpdateType.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t TranscriptUpdateType.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t (*sub_1C3D21254())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C3D212A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D21368()
{
  return swift_release();
}

uint64_t sub_1C3D21448()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LiveTranscriptionCoordinator()
{
  uint64_t result = qword_1EA3880D8;
  if (!qword_1EA3880D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3D21554()
{
  return swift_release();
}

uint64_t sub_1C3D21628(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D21690()
{
  return sub_1C3D21628(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1C3D216AC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D21254();
  return sub_1C3D217C8;
}

void sub_1C3D217C8(void *a1)
{
}

uint64_t (*sub_1C3D217D4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C3D21828@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D218E8()
{
  return swift_release();
}

uint64_t sub_1C3D219C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D21A88()
{
  return swift_release();
}

uint64_t sub_1C3D21B5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D21BC4()
{
  return sub_1C3D21B5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1C3D21BE0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D217D4();
  return sub_1C3D21CFC;
}

void sub_1C3D21CFC(void *a1)
{
}

uint64_t (*sub_1C3D21D08())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C3D21D5C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D21E1C()
{
  return swift_release();
}

uint64_t sub_1C3D21EFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C3D21FBC()
{
  return swift_release();
}

void (*sub_1C3D22090(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D21D08();
  return sub_1C3D221AC;
}

void sub_1C3D221AC(void *a1)
{
}

id sub_1C3D221B8()
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 48);
  return v1;
}

id sub_1C3D22268@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 48);
  *a2 = v4;
  return v4;
}

uint64_t sub_1C3D22320(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  id v2 = v1;
  sub_1C3DB8D08();

  return swift_release();
}

uint64_t (*sub_1C3D223FC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C3D22450@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 56);
  return result;
}

uint64_t sub_1C3D2250C()
{
  return swift_release();
}

uint64_t sub_1C3D225DC()
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1C3D22698()
{
  return swift_release();
}

uint64_t sub_1C3D22768()
{
  return sub_1C3D2B5A0();
}

void (*sub_1C3D22780(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D223FC();
  return sub_1C3D2289C;
}

void sub_1C3D2289C(void *a1)
{
}

uint64_t (*sub_1C3D228A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C3D228FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  return sub_1C3C8E848(v3 + 64, a2, &qword_1EA388010);
}

uint64_t sub_1C3D229C8(uint64_t a1)
{
  sub_1C3C8E848(a1, (uint64_t)v2, &qword_1EA388010);
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D08();
  swift_release();
  return sub_1C3C2A448((uint64_t)v2, &qword_1EA388010);
}

uint64_t sub_1C3D22AB8@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  return sub_1C3C8E848(v1 + 64, a1, &qword_1EA388010);
}

uint64_t sub_1C3D22B8C(uint64_t a1)
{
  return sub_1C3C2A448(a1, &qword_1EA388010);
}

uint64_t sub_1C3D22C68(uint64_t a1, uint64_t a2)
{
  sub_1C3C8E848(a2, (uint64_t)v4, &qword_1EA388010);
  swift_beginAccess();
  sub_1C3D2B538((uint64_t)v4, a1 + 64);
  return swift_endAccess();
}

uint64_t sub_1C3D22CDC()
{
  return sub_1C3D22C68(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_1C3D22CF8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D228A8();
  return sub_1C3D22E14;
}

void sub_1C3D22E14(void *a1)
{
}

uint64_t sub_1C3D22E20()
{
  return swift_retain();
}

uint64_t sub_1C3D22EC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *a2 = *(void *)(v3 + 128);
  return swift_retain();
}

uint64_t sub_1C3D22F70()
{
  return swift_release();
}

id LiveTranscriptionCoordinator.__allocating_init(attachmentModel:)(void *a1)
{
  swift_allocObject();
  id v2 = sub_1C3D29C58(a1);

  return v2;
}

id LiveTranscriptionCoordinator.init(attachmentModel:)(void *a1)
{
  id v2 = sub_1C3D29C58(a1);

  return v2;
}

uint64_t sub_1C3D230C8(uint64_t a1)
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D08();
  swift_release();
  uint64_t v2 = sub_1C3DB85C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C3D231CC()
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C3D79344(v2);
  swift_getKeyPath();
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1C3D79344(v3);
  return v1;
}

uint64_t (*sub_1C3D2334C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C3D233A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  swift_beginAccess();
  uint64_t v5 = sub_1C3DB85C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C3D234A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C3DB85C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D08();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C3D2362C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  swift_beginAccess();
  uint64_t v4 = sub_1C3DB85C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C3D23728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB85C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v8 = a1 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

void (*sub_1C3D23848(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_1C3DB8D38();
  swift_release();
  v3[7] = sub_1C3D2334C();
  return sub_1C3D23964;
}

void sub_1C3D23964(void *a1)
{
}

void sub_1C3D23970(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  sub_1C3DB8D28();
  swift_release();
  free(v1);
}

uint64_t sub_1C3D239FC()
{
  uint64_t v1 = sub_1C3DB84F8();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = sub_1C3DB85C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v9 = v0;
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v6 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C3DB84E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C3D2A0BC((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
  return sub_1C3DB9E68();
}

uint64_t sub_1C3D23C14()
{
  uint64_t v1 = sub_1C3D231CC();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  swift_retain();
  sub_1C3C4CC4C((uint64_t)&unk_1EA388028, v2);
  return swift_release();
}

uint64_t sub_1C3D23C9C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_1C3DB85C8();
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  v2[7] = *(void *)(v4 + 64);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D23DB0, 0, 0);
}

uint64_t sub_1C3D23DB0()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[2];
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_1C3DB85B8();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[2];
    uint64_t v4 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
    uint64_t v5 = v3 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C3CC93A8(v0[9], v5, v22);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  uint64_t v11 = v0[4];
  uint64_t v20 = v11;
  uint64_t v21 = *(void (**)(uint64_t))(v10 + 32);
  v21(v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1C3DBA278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
  sub_1C3DBA1F8();
  swift_retain();
  uint64_t v14 = sub_1C3DBA1E8();
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBCFD8];
  v16[2] = v14;
  v16[3] = v17;
  v16[4] = v13;
  ((void (*)(char *, uint64_t, uint64_t))v21)((char *)v16 + v15, v8, v9);
  swift_release();
  sub_1C3C5C22C(v20, (uint64_t)&unk_1EA388120, (uint64_t)v16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1C3D240B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  uint64_t v6 = sub_1C3DB85C8();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  sub_1C3DBA1F8();
  v5[28] = sub_1C3DBA1E8();
  uint64_t v8 = sub_1C3DBA168();
  return MEMORY[0x1F4188298](sub_1C3D241AC, v8, v7);
}

uint64_t sub_1C3D241AC()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v4 = v0[26];
    uint64_t v3 = v0[27];
    uint64_t v5 = v0[25];
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v3, v0[24], v5);
    swift_getKeyPath();
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v2;
    *(void *)(v6 + 24) = v3;
    v0[21] = v2;
    sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
    sub_1C3DB8D08();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v7 = swift_weakLoadStrong();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_getKeyPath();
    v0[22] = v8;
    sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
    sub_1C3DB8D18();
    swift_release();
    swift_beginAccess();
    sub_1C3C8E848(v8 + 64, (uint64_t)(v0 + 2), &qword_1EA388010);
    swift_release();
    if (v0[5])
    {
      sub_1C3C49A14((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
      sub_1C3C2A448((uint64_t)(v0 + 2), &qword_1EA388010);
      uint64_t v9 = v0[10];
      uint64_t v10 = v0[11];
      __swift_project_boxed_opaque_existential_1(v0 + 7, v9);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
    }
    else
    {
      sub_1C3C2A448((uint64_t)(v0 + 2), &qword_1EA388010);
    }
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C3D244AC(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  sub_1C3DBA1F8();
  v2[17] = sub_1C3DBA1E8();
  uint64_t v4 = sub_1C3DBA168();
  v2[18] = v4;
  v2[19] = v3;
  return MEMORY[0x1F4188298](sub_1C3D24544, v4, v3);
}

uint64_t sub_1C3D24544()
{
  sub_1C3DBA868();
  uint64_t v1 = (void *)sub_1C3DBA858();
  unsigned int v2 = objc_msgSend(v1, sel_supportsGeneralASR);

  if (v2)
  {
    uint64_t v3 = v0[16];
    swift_getKeyPath();
    uint64_t v4 = swift_task_alloc();
    *(void *)(v4 + 16) = v3;
    *(unsigned char *)(v4 + 24) = 0;
    v0[20] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
    v0[6] = v3;
    v0[21] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
    sub_1C3DB8D08();
    swift_release();
    swift_task_dealloc();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[22] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1C3D24718;
    return SiriTranscriptionMethod.finishTranscription()();
  }
  else
  {
    swift_release();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1C3D24718()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_1C3D24D88;
  }
  else {
    uint64_t v5 = sub_1C3D24854;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

id sub_1C3D24854()
{
  uint64_t v1 = v0[16];
  swift_release();
  swift_getKeyPath();
  v0[5] = v1;
  sub_1C3DB8D18();
  swift_release();
  uint64_t v2 = (unint64_t *)(v1 + 24);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 24) + 16)) {
    goto LABEL_10;
  }
  uint64_t v3 = (void *)v0[23];
  uint64_t v4 = v0[16];
  swift_getKeyPath();
  v0[7] = v4;
  sub_1C3DB8D18();
  swift_release();
  unint64_t v5 = *v2;
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_sharedConfiguration);
  uint64_t v8 = sub_1C3C93C70(v5, 0, v7);
  if (v3)
  {
    uint64_t v9 = v0[16];
    swift_bridgeObjectRelease();

    swift_getKeyPath();
    v0[8] = v9;
    sub_1C3DB8D18();
    swift_release();
    v10._rawValue = (void *)*v2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v10._rawValue = (void *)v8;
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (ICAttachment *)v0[15];
  uint64_t v12 = v0[16];
  swift_getKeyPath();
  v0[9] = v12;
  sub_1C3DB8D18();
  swift_release();
  id v13 = *(id *)(v12 + 48);
  ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)(v10, v11, 0);
  if (!v14)
  {
    uint64_t v16 = v0[16];

    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v0[10] = v16;
    sub_1C3DB8D18();
    swift_release();
    uint64_t v31 = v12;
    id result = objc_msgSend(*(id *)(v12 + 48), sel_attachment);
    if (result)
    {
      uint64_t v18 = result;
      uint64_t v19 = v0[16];
      id v20 = objc_msgSend(result, sel_managedObjectContext);

      objc_msgSend(v20, sel_ic_save);
      swift_getKeyPath();
      uint64_t v21 = swift_task_alloc();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      *(void *)(v21 + 16) = v19;
      *(void *)(v21 + 24) = v22;
      v0[11] = v19;
      sub_1C3DB8D08();
      swift_release();
      swift_task_dealloc();
      swift_getKeyPath();
      uint64_t v23 = swift_task_alloc();
      *(void *)(v23 + 16) = v19;
      *(void *)(v23 + 24) = v22;
      v0[12] = v19;
      sub_1C3DB8D08();
      swift_release();
      swift_task_dealloc();
      swift_getKeyPath();
      v0[13] = v19;
      sub_1C3DB8D18();
      swift_release();
      id result = objc_msgSend(*(id *)(v31 + 48), sel_audioDocument);
      if (result)
      {
        uint64_t v24 = result;
        uint64_t v25 = v0[16];
        uint64_t v26 = ICTTAudioDocument.transcriptViewModelSegments.getter();

        swift_getKeyPath();
        uint64_t v27 = swift_task_alloc();
        *(void *)(v27 + 16) = v25;
        *(void *)(v27 + 24) = v26;
        v0[14] = v25;
        sub_1C3DB8D08();
        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
LABEL_10:
        uint64_t v28 = v0[16];
        uint64_t v29 = sub_1C3D231CC();
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v29;
        *(void *)(v30 + 24) = v28;
        swift_retain();
        sub_1C3C4CC4C((uint64_t)&unk_1EA388038, v30);
        swift_release();
        unint64_t v15 = (uint64_t (*)(void))v0[1];
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }

  swift_bridgeObjectRelease();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return (id)v15();
}

uint64_t sub_1C3D24D88()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D24DEC(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3875B0);
  v2[26] = swift_task_alloc();
  uint64_t v3 = sub_1C3DB9558();
  v2[27] = v3;
  v2[28] = *(void *)(v3 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v4 = sub_1C3DB95E8();
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  uint64_t v5 = sub_1C3DB9308();
  v2[33] = v5;
  v2[34] = *(void *)(v5 - 8);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  uint64_t v6 = sub_1C3DB9288();
  v2[37] = v6;
  v2[38] = *(void *)(v6 - 8);
  v2[39] = swift_task_alloc();
  unsigned char v2[40] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for TranscriptionUpdate(0);
  v2[41] = v7;
  v2[42] = *(void *)(v7 - 8);
  v2[43] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388048);
  v2[44] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388050);
  v2[45] = v8;
  v2[46] = *(void *)(v8 - 8);
  v2[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v2[48] = swift_task_alloc();
  uint64_t v9 = sub_1C3DB88F8();
  v2[49] = v9;
  v2[50] = *(void *)(v9 - 8);
  v2[51] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388058);
  v2[52] = v10;
  v2[53] = *(void *)(v10 - 8);
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  uint64_t v11 = sub_1C3DB9048();
  v2[57] = v11;
  v2[58] = *(void *)(v11 - 8);
  v2[59] = swift_task_alloc();
  v2[60] = sub_1C3DBA1F8();
  v2[61] = sub_1C3DBA1E8();
  uint64_t v13 = sub_1C3DBA168();
  v2[62] = v13;
  v2[63] = v12;
  return MEMORY[0x1F4188298](sub_1C3D25298, v13, v12);
}

uint64_t sub_1C3D25298()
{
  uint64_t v42 = v0;
  sub_1C3DBA868();
  uint64_t v1 = (void *)sub_1C3DBA858();
  unsigned int v2 = objc_msgSend(v1, sel_supportsGeneralASR);

  if (!v2)
  {
LABEL_4:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  uint64_t v3 = v0[25];
  swift_getKeyPath();
  uint64_t v4 = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  v0[20] = v3;
  v0[64] = v4;
  v0[65] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  id v5 = objc_msgSend(*(id *)(v3 + 48), sel_audioDocument);
  if (!v5)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = v5;
  unsigned __int8 v7 = objc_msgSend(v5, sel_isCallRecording);

  if (v7) {
    goto LABEL_4;
  }
  if (qword_1EA3858E8 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[58];
  uint64_t v10 = v0[59];
  uint64_t v12 = v0[57];
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA387FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
  swift_retain_n();
  uint64_t v14 = sub_1C3DB9028();
  os_log_type_t v15 = sub_1C3DBA698();
  if (!os_log_type_enabled(v14, v15))
  {
    uint64_t v25 = v0[58];
    uint64_t v24 = v0[59];
    uint64_t v26 = v0[57];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    goto LABEL_16;
  }
  os_log_type_t v40 = v15;
  uint64_t v16 = v0[25];
  uint64_t v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v38 = swift_slowAlloc();
  uint64_t v41 = v38;
  *(_DWORD *)uint64_t v17 = 136315138;
  swift_getKeyPath();
  v0[22] = v16;
  sub_1C3DB8D18();
  swift_release();
  id v18 = objc_msgSend(*(id *)(v3 + 48), sel_attachment);
  if (!v18)
  {
LABEL_24:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_identifier);

  if (v20)
  {
    uint64_t v21 = sub_1C3DB9C38();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  uint64_t v27 = v38;
  uint64_t v28 = v0[58];
  uint64_t v37 = v0[57];
  uint64_t v39 = v0[59];
  v0[23] = sub_1C3C516D0(v21, v23, &v41);
  sub_1C3DBA9A8();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C3A61000, v14, v40, "Transcribing from live recording for attachment %s", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C877E600](v27, -1, -1);
  MEMORY[0x1C877E600](v17, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, v37);
LABEL_16:
  uint64_t v29 = v0[49];
  uint64_t v30 = v0[50];
  uint64_t v31 = v0[48];
  sub_1C3C8E848(v0[24], v31, (uint64_t *)&unk_1EB6FC7E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v29) == 1)
  {
    sub_1C3C2A448(v0[48], (uint64_t *)&unk_1EB6FC7E0);
    uint64_t v32 = (void *)swift_task_alloc();
    v0[68] = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1C3D25CF4;
    uint64_t v33 = v0[54];
    return SiriTranscriptionMethod.prepareForTranscription()(v33);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[50] + 32))(v0[51], v0[48], v0[49]);
    id v34 = (void *)swift_task_alloc();
    v0[66] = v34;
    *id v34 = v0;
    v34[1] = sub_1C3D258AC;
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[51];
    return sub_1C3C5DA64(v35, v36);
  }
}

uint64_t sub_1C3D258AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 504);
  uint64_t v4 = *(void *)(v2 + 496);
  if (v0) {
    id v5 = sub_1C3D26E14;
  }
  else {
    id v5 = sub_1C3D259E8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D259E8()
{
  (*(void (**)(void, void))(*(void *)(v0 + 400) + 8))(*(void *)(v0 + 408), *(void *)(v0 + 392));
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 200);
  (*(void (**)(void, void, void))(*(void *)(v0 + 424) + 32))(*(void *)(v0 + 448), *(void *)(v0 + 440), *(void *)(v0 + 416));
  swift_getKeyPath();
  *(void *)(v0 + 120) = v2;
  sub_1C3DB8D18();
  swift_release();
  id v3 = objc_msgSend(*(id *)(v2 + 48), sel_audioDocument);
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v9 = ICTTAudioDocument.transcriptViewModelSegments.getter();

    swift_getKeyPath();
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    *(void *)(v0 + 88) = v8;
    sub_1C3DB8D08();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v11 = sub_1C3D231CC();
    *(void *)(v0 + 560) = *(void *)(v8 + 120);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v8;
    swift_retain();
    sub_1C3C4CC4C((uint64_t)&unk_1EA388060, v12);
    swift_release();
    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v8;
    *(unsigned char *)(v13 + 24) = 1;
    *(void *)(v0 + 96) = v8;
    sub_1C3DB8D08();
    swift_release();
    swift_task_dealloc();
    sub_1C3DBA2B8();
    *(_DWORD *)(v0 + 608) = *MEMORY[0x1E4F3C0D0];
    *(_DWORD *)(v0 + 612) = *MEMORY[0x1E4F3C0B8];
    *(void *)(v0 + 568) = v1;
    uint64_t v14 = sub_1C3DBA1E8();
    *(void *)(v0 + 576) = v14;
    os_log_type_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v15;
    *os_log_type_t v15 = v0;
    v15[1] = sub_1C3D26128;
    id v3 = *(id *)(v0 + 352);
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v5 = MEMORY[0x1E4FBCFD8];
    uint64_t v4 = v14;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4187D58](v3, v4, v5, v6);
}

uint64_t sub_1C3D25CF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 504);
  uint64_t v4 = *(void *)(v2 + 496);
  if (v0) {
    uint64_t v5 = sub_1C3D26F78;
  }
  else {
    uint64_t v5 = sub_1C3D25E30;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D25E30()
{
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 200);
  (*(void (**)(void, void, void))(*(void *)(v0 + 424) + 32))(*(void *)(v0 + 448), *(void *)(v0 + 432), *(void *)(v0 + 416));
  swift_getKeyPath();
  *(void *)(v0 + 120) = v2;
  sub_1C3DB8D18();
  swift_release();
  id v3 = objc_msgSend(*(id *)(v2 + 48), sel_audioDocument);
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v9 = ICTTAudioDocument.transcriptViewModelSegments.getter();

    swift_getKeyPath();
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    *(void *)(v0 + 88) = v8;
    sub_1C3DB8D08();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v11 = sub_1C3D231CC();
    *(void *)(v0 + 560) = *(void *)(v8 + 120);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v8;
    swift_retain();
    sub_1C3C4CC4C((uint64_t)&unk_1EA388060, v12);
    swift_release();
    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v8;
    *(unsigned char *)(v13 + 24) = 1;
    *(void *)(v0 + 96) = v8;
    sub_1C3DB8D08();
    swift_release();
    swift_task_dealloc();
    sub_1C3DBA2B8();
    *(_DWORD *)(v0 + 608) = *MEMORY[0x1E4F3C0D0];
    *(_DWORD *)(v0 + 612) = *MEMORY[0x1E4F3C0B8];
    *(void *)(v0 + 568) = v1;
    uint64_t v14 = sub_1C3DBA1E8();
    *(void *)(v0 + 576) = v14;
    os_log_type_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v15;
    *os_log_type_t v15 = v0;
    v15[1] = sub_1C3D26128;
    id v3 = *(id *)(v0 + 352);
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v5 = MEMORY[0x1E4FBCFD8];
    uint64_t v4 = v14;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4187D58](v3, v4, v5, v6);
}

uint64_t sub_1C3D26128()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 504);
  uint64_t v3 = *(void *)(v1 + 496);
  return MEMORY[0x1F4188298](sub_1C3D2626C, v3, v2);
}

uint64_t sub_1C3D2626C()
{
  uint64_t v1 = v0[44];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[42] + 48))(v1, 1, v0[41]) == 1)
  {
    (*(void (**)(void, void))(v0[46] + 8))(v0[47], v0[45]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[74] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C3D26B7C;
    return sub_1C3D27220();
  }
  sub_1C3D2B1B4(v1, v0[43], type metadata accessor for TranscriptionUpdate);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *((unsigned int *)v0 + 152);
    uint64_t v5 = v0[40];
    uint64_t v6 = v0[38];
    uint64_t v56 = v0[37];
    uint64_t v58 = v0[39];
    uint64_t v8 = v0[35];
    uint64_t v7 = v0[36];
    uint64_t v9 = v0[33];
    uint64_t v10 = v0[34];
    (*(void (**)(uint64_t, void))(v6 + 32))(v5, v0[43]);
    sub_1C3DB9248();
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104);
    v54(v8, v4, v9);
    LOBYTE(v4) = sub_1C3DB92F8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v8, v9);
    v11(v7, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v58, v5, v56);
    if (v4)
    {
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0[38] + 8);
      v12(v0[39], v0[37]);
    }
    else
    {
      uint64_t v14 = *((unsigned int *)v0 + 153);
      uint64_t v16 = v0[38];
      uint64_t v15 = v0[39];
      uint64_t v17 = v0[36];
      uint64_t v59 = v0[37];
      uint64_t v18 = v0[35];
      uint64_t v19 = v0[33];
      sub_1C3DB9248();
      v54(v18, v14, v19);
      LOBYTE(v14) = sub_1C3DB92F8();
      v11(v18, v19);
      v11(v17, v19);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v12(v15, v59);
      if ((v14 & 1) == 0)
      {
        uint64_t v13 = v0[71];
        uint64_t v60 = v12;
        uint64_t v25 = v0[70];
        uint64_t v26 = v0[40];
        uint64_t v50 = v0[32];
        uint64_t v55 = v0[31];
        uint64_t v57 = v0[30];
        uint64_t v52 = v0[29];
        uint64_t v27 = v0[25];
        uint64_t v53 = v0[28];
        uint64_t v51 = v0[27];
        uint64_t v28 = sub_1C3DB9278();
        uint64_t v29 = swift_task_alloc();
        *(void *)(v29 + 16) = v26;
        uint64_t v30 = sub_1C3D20E7C((void (*)(uint64_t))sub_1C3CD0280, v29, v28);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_getKeyPath();
        uint64_t v31 = swift_task_alloc();
        *(void *)(v31 + 16) = v27;
        *(void *)(v31 + 24) = v30;
        v0[14] = v27;
        sub_1C3DB8D08();
        swift_release();
        uint64_t v12 = v60;
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        uint64_t v32 = sub_1C3D231CC();
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        *(void *)(v33 + 24) = v27;
        id v34 = (void *)swift_allocObject();
        v34[2] = v25;
        v34[3] = &unk_1EA388070;
        v34[4] = v33;
        v0[6] = sub_1C3C4DA08;
        v0[7] = v34;
        v0[2] = MEMORY[0x1E4F143A8];
        v0[3] = 1107296256;
        v0[4] = sub_1C3C9FDCC;
        v0[5] = &block_descriptor_12;
        uint64_t v35 = _Block_copy(v0 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C3DB9598();
        v0[16] = MEMORY[0x1E4FBC860];
        sub_1C3D2A0BC(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
        sub_1C3D2A104();
        sub_1C3DBAAA8();
        MEMORY[0x1C877BC60](0, v50, v52, v35);
        _Block_release(v35);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v51);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v50, v57);
        swift_release();
        goto LABEL_16;
      }
    }
    uint64_t v20 = sub_1C3DB9258();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = sub_1C3DB85C8();
    uint64_t v23 = *(void *)(v22 - 8);
    if (v21)
    {
      (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v0[26], v20+ ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80)), v22);
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = 1;
    }
    uint64_t v36 = v0[26];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v36, v24, 1, v22);
    swift_bridgeObjectRelease();
    int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v36, 1, v22);
    sub_1C3C2A448(v36, &qword_1EA3875B0);
    uint64_t v13 = v0[71];
    if (v37 == 1) {
      goto LABEL_17;
    }
    uint64_t v38 = v0[40];
    uint64_t v39 = v0[25];
    swift_getKeyPath();
    uint64_t v40 = swift_task_alloc();
    uint64_t v41 = MEMORY[0x1E4FBC860];
    *(void *)(v40 + 16) = v39;
    *(void *)(v40 + 24) = v41;
    v0[17] = v39;
    sub_1C3DB8D08();
    swift_release();
    swift_task_dealloc();
    uint64_t v42 = _s11NotesShared26TranscriptViewModelSegmentV4from6result9temporary11speakerName17overlapMitigationSayACG6Speech11TranscriberC18MultisegmentResultV_SbSSSgSbtFZ_0(v38, 0, 0, 0, 0);
    swift_getKeyPath();
    v0[18] = v39;
    sub_1C3DB8D18();
    swift_release();
    v0[19] = v39;
    swift_getKeyPath();
    sub_1C3DB8D38();
    swift_release();
    swift_beginAccess();
    sub_1C3D79344(v42);
    swift_endAccess();
    v0[21] = v39;
    swift_getKeyPath();
    sub_1C3DB8D28();
    swift_release();
    uint64_t v43 = sub_1C3D231CC();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v43;
    *(void *)(v44 + 24) = v39;
    swift_retain();
    sub_1C3C4CC4C((uint64_t)&unk_1EA388078, v44);
LABEL_16:
    swift_release();
LABEL_17:
    v12(v0[40], v0[37]);
    goto LABEL_18;
  }
  uint64_t v13 = v0[71];
LABEL_18:
  v0[71] = v13;
  uint64_t v45 = sub_1C3DBA1E8();
  v0[72] = v45;
  uint64_t v46 = (void *)swift_task_alloc();
  v0[73] = v46;
  void *v46 = v0;
  v46[1] = sub_1C3D26128;
  uint64_t v47 = v0[44];
  uint64_t v48 = v0[45];
  uint64_t v49 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187D58](v47, v45, v49, v48);
}

uint64_t sub_1C3D26B7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 600) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 504);
  uint64_t v4 = *(void *)(v2 + 496);
  if (v0) {
    uint64_t v5 = sub_1C3D270BC;
  }
  else {
    uint64_t v5 = sub_1C3D26CB8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D26CB8()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[53];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3D26E14()
{
  uint64_t v2 = v0[50];
  uint64_t v1 = v0[51];
  uint64_t v3 = v0[49];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3D26F78()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D270BC()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[53];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3D27220()
{
  v1[4] = v0;
  sub_1C3DBA1F8();
  v1[5] = sub_1C3DBA1E8();
  uint64_t v3 = sub_1C3DBA168();
  v1[6] = v3;
  v1[7] = v2;
  return MEMORY[0x1F4188298](sub_1C3D272B8, v3, v2);
}

uint64_t sub_1C3D272B8()
{
  uint64_t v1 = v0[4];
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 0;
  v0[8] = OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  v0[2] = v1;
  v0[9] = sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D08();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C3D2741C;
  return SiriTranscriptionMethod.finishTranscription()();
}

uint64_t sub_1C3D2741C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_1C3D27648;
  }
  else {
    uint64_t v5 = sub_1C3D27558;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

id sub_1C3D27558()
{
  uint64_t v1 = v0[4];
  swift_release();
  swift_getKeyPath();
  v0[3] = v1;
  sub_1C3DB8D18();
  swift_release();
  id result = objc_msgSend(*(id *)(v1 + 48), sel_attachment);
  if (result)
  {
    uint64_t v3 = result;
    id v4 = objc_msgSend(result, sel_objectID);

    sub_1C3D279E8(v4);
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return (id)v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3D27648()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D276AC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_1C3DBA1F8();
  v2[4] = sub_1C3DBA1E8();
  uint64_t v4 = sub_1C3DBA168();
  v2[5] = v4;
  v2[6] = v3;
  return MEMORY[0x1F4188298](sub_1C3D27744, v4, v3);
}

uint64_t sub_1C3D27744()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D277E4;
  uint64_t v2 = *(void *)(v0 + 16);
  return SiriTranscriptionMethod.receiveAudio(_:)(v2);
}

uint64_t sub_1C3D277E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1C3D27984;
  }
  else {
    uint64_t v5 = sub_1C3D27920;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D27920()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D27984()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3D279E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  id v7 = objc_msgSend(*(id *)(v1 + 48), sel_attachment);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_managedObjectContext);

    if (v9)
    {
      uint64_t v10 = sub_1C3DBA278();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
      sub_1C3DBA1F8();
      swift_retain();
      id v11 = v9;
      id v12 = a1;
      uint64_t v13 = sub_1C3DBA1E8();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = MEMORY[0x1E4FBCFD8];
      v14[2] = v13;
      v14[3] = v15;
      v14[4] = v2;
      v14[5] = v11;
      v14[6] = v12;
      sub_1C3C5C22C((uint64_t)v6, (uint64_t)&unk_1EA388090, (uint64_t)v14);

      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C3D27BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[27] = a5;
  v6[28] = a6;
  v6[26] = a4;
  v6[29] = sub_1C3DB84F8();
  v6[30] = swift_task_alloc();
  uint64_t v7 = sub_1C3DB85C8();
  v6[31] = v7;
  v6[32] = *(void *)(v7 - 8);
  v6[33] = swift_task_alloc();
  sub_1C3DBA1F8();
  v6[34] = sub_1C3DBA1E8();
  uint64_t v9 = sub_1C3DBA168();
  v6[35] = v9;
  v6[36] = v8;
  return MEMORY[0x1F4188298](sub_1C3D27D0C, v9, v8);
}

uint64_t sub_1C3D27D0C()
{
  sub_1C3DBA868();
  uint64_t v1 = (void *)sub_1C3DBA858();
  unsigned int v2 = objc_msgSend(v1, sel_supportsGreymatter);

  if (v2)
  {
    uint64_t v3 = v0[32];
    uint64_t v4 = v0[33];
    uint64_t v5 = v0[31];
    uint64_t v6 = v0[26];
    type metadata accessor for SummarizationManager();
    swift_getKeyPath();
    v0[25] = v6;
    sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
    sub_1C3DB8D18();
    swift_release();
    uint64_t v7 = v6 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v7, v5);
    sub_1C3DB84E8();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
    sub_1C3D2A0BC((unint64_t *)&qword_1EA386188, MEMORY[0x1E4F27270]);
    uint64_t v8 = sub_1C3DB9E68();
    uint64_t v10 = v9;
    v0[37] = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[38] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1C3D27FA4;
    return static SummarizationManager.generateTopLineTranscriptSummary(transcript:)((uint64_t)(v0 + 16), v8, v10);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1C3D27FA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 280);
    uint64_t v4 = *(void *)(v2 + 288);
    uint64_t v5 = sub_1C3D2882C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 280);
    uint64_t v4 = *(void *)(v2 + 288);
    uint64_t v5 = sub_1C3D280C0;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C3D280C0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 216);
    uint64_t v2 = *(void **)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 128);
    char v7 = *(unsigned char *)(v0 + 144) & 1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 320) = v8;
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v2;
    *(void *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v1;
    *(unsigned char *)(v8 + 48) = v7;
    *(_DWORD *)(v8 + 49) = *(_DWORD *)(v0 + 336);
    *(_DWORD *)(v8 + 52) = *(_DWORD *)(v0 + 339);
    *(void *)(v8 + 56) = v5;
    *(void *)(v8 + 64) = v4;
    id v9 = v3;
    id v10 = v2;
    return MEMORY[0x1F4188298](sub_1C3D281F4, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1C3D281F4()
{
  id v1 = *(id *)(v0 + 216);
  swift_retain();
  return MEMORY[0x1F4188298](sub_1C3D2826C, 0, 0);
}

uint64_t sub_1C3D2826C()
{
  id v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0[40];
  uint64_t v6 = (void *)v0[27];
  v1[2] = v2;
  v1[3] = sub_1C3D283D8;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1C3D2B15C;
  v8[3] = v5;
  v8[4] = v7;
  v1[14] = sub_1C3CB3CDC;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_139;
  id v9 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3D283D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 328) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C3D2858C;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {

    swift_release_n();
    uint64_t v4 = *(void *)(v1 + 280);
    uint64_t v5 = *(void *)(v1 + 288);
    uint64_t v3 = sub_1C3D28518;
  }
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C3D28518()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D2858C()
{
  uint64_t v1 = (void *)v0[27];
  swift_willThrow();

  swift_release();
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  return MEMORY[0x1F4188298](sub_1C3D28608, v2, v3);
}

uint64_t sub_1C3D28608()
{
  swift_release();
  swift_release();
  uint64_t v1 = (void *)v0[41];
  if (qword_1EA3858E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387FE8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C3DB9028();
  os_log_type_t v6 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v10;
    sub_1C3DBA9A8();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C3A61000, v5, v6, "failed to generate topline summary: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C3D2882C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[39];
  if (qword_1EA3858E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA387FE8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C3DB9028();
  os_log_type_t v6 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v10;
    sub_1C3DBA9A8();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C3A61000, v5, v6, "failed to generate topline summary: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void sub_1C3D28A50(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  os_log_type_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6 && (id v7 = objc_msgSend(v6, sel_audioModel)) != 0)
  {
    uint64_t v8 = v7;
    long long v9 = *(_OWORD *)(a3 + 16);
    v15.text = *(Swift::String *)a3;
    *(_OWORD *)&v15.isSafe = v9;
    v15.modelVersion.value._object = *(void **)(a3 + 32);
    ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summarizationResult:)(&v15);
    if (v10)
    {
    }
    else
    {
      objc_msgSend(a1, sel_ic_save);
    }
  }
  else
  {

    if (qword_1EA3858E8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C3DB9048();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EA387FE8);
    id v12 = sub_1C3DB9028();
    os_log_type_t v13 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1C3A61000, v12, v13, "could not fetch attachment to generate topline summary", v14, 2u);
      MEMORY[0x1C877E600](v14, -1, -1);
    }
  }
}

uint64_t sub_1C3D28BF0()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388098);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3880A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = ICInternalSettingsIsAudioMastihaEnabled();
  if (result)
  {
    uint64_t v19 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3880A8);
    LOBYTE(v18[0]) = 1;
    v18[1] = 0;
    uint64_t v13 = sub_1C3DB8AF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    sub_1C3D1A324();
    sub_1C3D1A37C();
    sub_1C3D1A3D4();
    sub_1C3DB8CE8();
    uint64_t v14 = sub_1C3DB8CF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    uint64_t v15 = sub_1C3DB8CB8();
    sub_1C3C2A448((uint64_t)v4, &qword_1EA388098);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!v1)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath);
      uint64_t v17 = v19;
      v18[-2] = v19;
      v18[-1] = v15;
      v18[0] = v17;
      sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
      sub_1C3DB8D08();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C3D28F40(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3880A0);
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  *(unsigned char *)(v2 + 128) = *(unsigned char *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = v6;
  sub_1C3DBA1F8();
  *(void *)(v2 + 88) = sub_1C3DBA1E8();
  uint64_t v8 = sub_1C3DBA168();
  *(void *)(v2 + 96) = v8;
  *(void *)(v2 + 104) = v7;
  return MEMORY[0x1F4188298](sub_1C3D29078, v8, v7);
}

uint64_t sub_1C3D29078()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_getKeyPath();
  *(void *)(v0 + 32) = v1;
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  *(void *)(v0 + 112) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = *(void *)(v0 + 48);
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 128);
    *(void *)(v0 + 24) = v3;
    uint64_t v5 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1C3D1A324();
    sub_1C3D1A37C();
    sub_1C3D1A3D4();
    swift_retain();
    sub_1C3DB8CE8();
    uint64_t v10 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x1E4F17BD0] + MEMORY[0x1E4F17BD0]);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C3D292B4;
    uint64_t v7 = *(void *)(v0 + 72);
    return v10(v7);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1C3D292B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *(void *)(*v0 + 64);
  uint64_t v4 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 96);
  return MEMORY[0x1F4188298](sub_1C3D29454, v6, v5);
}

uint64_t sub_1C3D29454()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D294CC()
{
  v1[5] = v0;
  uint64_t v2 = sub_1C3DB8CD8();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3880C0);
  v1[10] = swift_task_alloc();
  sub_1C3DBA1F8();
  v1[11] = sub_1C3DBA1E8();
  uint64_t v4 = sub_1C3DBA168();
  v1[12] = v4;
  v1[13] = v3;
  return MEMORY[0x1F4188298](sub_1C3D29620, v4, v3);
}

uint64_t sub_1C3D29620()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_getKeyPath();
  *(void *)(v0 + 32) = v1;
  sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  *(void *)(v0 + 112) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 80);
    *(unsigned char *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    swift_retain();
    _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
    uint64_t v5 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    sub_1C3D1A324();
    sub_1C3D1A37C();
    sub_1C3D1A3D4();
    sub_1C3DB8CE8();
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3880A0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 0, 1, v6);
    sub_1C3DB8CC8();
    id v12 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E4F17BC0] + MEMORY[0x1E4F17BC0]);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C3D298B4;
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 64);
    return v12(v8, v9);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1C3D298B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = *(void *)(*v0 + 64);
  uint64_t v4 = *(void *)(*v0 + 56);
  uint64_t v5 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C3C2A448(v2, &qword_1EA3880C0);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 96);
  return MEMORY[0x1F4188298](sub_1C3D29A80, v7, v6);
}

uint64_t sub_1C3D29A80()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t LiveTranscriptionCoordinator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C3C2A448(v0 + 64, &qword_1EA388010);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript;
  uint64_t v2 = sub_1C3DB85C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator___observationRegistrar;
  uint64_t v4 = sub_1C3DB8D58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t LiveTranscriptionCoordinator.__deallocating_deinit()
{
  LiveTranscriptionCoordinator.deinit();
  return swift_deallocClassInstance();
}

id sub_1C3D29C58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C3DB85C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = v8;
  *(void *)(v1 + 32) = v8;
  *(unsigned char *)(v1 + 56) = 0;
  type metadata accessor for CancellableTaskQueue();
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  swift_allocObject();
  *(void *)(v1 + 112) = sub_1C3C4CA10(0xD00000000000002ALL, 0x80000001C3DF6EB0);
  swift_allocObject();
  *(void *)(v1 + 120) = sub_1C3C4CA10(0xD000000000000025, 0x80000001C3DF6EE0);
  *(void *)(v1 + 128) = 0;
  sub_1C3DB85B8();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v1 + OBJC_IVAR____TtC11NotesShared28LiveTranscriptionCoordinator__transcript, v7, v4);
  sub_1C3DB8D48();
  *(void *)(v1 + 48) = a1;
  type metadata accessor for SiriTranscriptionMethod();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  uint64_t v10 = v9 + OBJC_IVAR____TtC11NotesShared23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386358);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)(v2 + 40) = v9;
  id result = objc_msgSend(a1, sel_audioDocument);
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = ICTTAudioDocument.transcriptViewModelSegments.getter();

    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    v18[-2] = v2;
    v18[-1] = v14;
    v18[1] = v2;
    sub_1C3D2A0BC(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
    sub_1C3DB8D08();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v16 = sub_1C3D231CC();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v2;
    swift_retain();
    sub_1C3C4CC4C((uint64_t)&unk_1EA388128, v17);
    swift_release();
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3D29FB0()
{
  return sub_1C3D23728(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C3D29FD0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3C4DAF4;
  return sub_1C3D23C9C(v2, v3);
}

uint64_t sub_1C3D2A07C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D2A0BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3D2A104()
{
  unint64_t result = qword_1EB6FC320;
  if (!qword_1EB6FC320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FC318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC320);
  }
  return result;
}

uint64_t sub_1C3D2A164()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3D2A1B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C3C4DAF4;
  return sub_1C3D27BE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C3D2A284()
{
  return sub_1C3D2B0D0();
}

unint64_t sub_1C3D2A2A0()
{
  unint64_t result = qword_1EA3880C8;
  if (!qword_1EA3880C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3880C8);
  }
  return result;
}

unint64_t sub_1C3D2A2F8()
{
  unint64_t result = qword_1EA3880D0;
  if (!qword_1EA3880D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3880D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptSegmentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D2A418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSegmentType()
{
  return &type metadata for TranscriptSegmentType;
}

unsigned char *storeEnumTagSinglePayload for TranscriptUpdateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D2A51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptUpdateType()
{
  return &type metadata for TranscriptUpdateType;
}

uint64_t dispatch thunk of TranscriptChangeDelegate.transcriptChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C3D2A568()
{
  return type metadata accessor for LiveTranscriptionCoordinator();
}

uint64_t sub_1C3D2A570()
{
  uint64_t result = sub_1C3DB85C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C3DB8D58();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for LiveTranscriptionCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LiveTranscriptionCoordinator);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.tempSegments.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finalizedSegments.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.fetchedSegments.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.isTranscribing.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptChangeDelegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.__allocating_init(attachmentModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcriptSegments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.rawTranscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.updateCachedTranscript()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.updateTranscriptFromModel(subattachment:)(uint64_t a1)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 648) + **(int **)(*(void *)v1 + 648));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1C3C4DAF4;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.transcribe(file:)(uint64_t a1)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 664) + **(int **)(*(void *)v1 + 664));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1C3C4DAF4;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.finishTranscription()()
{
  unsigned int v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 672) + **(int **)(*(void *)v0 + 672));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C3C4DAF4;
  return v4();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.receiveAudio(_:)(uint64_t a1)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 680) + **(int **)(*(void *)v1 + 680));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1C3C4DAF4;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.generateFinalTopLineSummary(attachmentID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.startLiveActivity()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.updateLiveActivity(state:)(uint64_t a1)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 704) + **(int **)(*(void *)v1 + 704));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1C3C4DAF4;
  return v6(a1);
}

uint64_t dispatch thunk of LiveTranscriptionCoordinator.stopLiveActivity()()
{
  unsigned int v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 712) + **(int **)(*(void *)v0 + 712));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C3C3259C;
  return v4();
}

uint64_t sub_1C3D2B0D0()
{
  *(void *)(*(void *)(v0 + 16) + 128) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1C3D2B10C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1C3D2B15C()
{
  sub_1C3D28A50(*(void **)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_1C3D2B17C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D2B1B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C3D2B21C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  int v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = v2;
  id v4 = v2;
}

uint64_t sub_1C3D2B254()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D2B28C()
{
  uint64_t v1 = sub_1C3DB85C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3D2B360(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C3DB85C8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C3C4DAF4;
  return sub_1C3D240B8(a1, v5, v6, v7, v8);
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D2B4A0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3C3259C;
  return sub_1C3D23C9C(v2, v3);
}

uint64_t sub_1C3D2B538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D2B5A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t sub_1C3D2B5FC()
{
  return sub_1C3D21BC4();
}

uint64_t sub_1C3D2B614()
{
  return sub_1C3D21690();
}

uint64_t sub_1C3D2B62C()
{
  return sub_1C3C9FB40();
}

uint64_t sub_1C3D2B644()
{
  return sub_1C3D29FB0();
}

uint64_t sub_1C3D2B65C()
{
  return sub_1C3D22CDC();
}

void *Commands.defaultCommand()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (qword_1EA385838 != -1) {
    swift_once();
  }
  uint64_t v7 = off_1EA386D10;
  uint64_t v8 = (char *)off_1EA386D10 + 16;
  swift_beginAccess();
  v7[16] = 1;
  uint64_t result = (*(void *(**)(long long *__return_ptr, void, uint64_t))(*(void *)(a2 + 8) + 40))(&v15, MEMORY[0x1E4FBC860], a1);
  if (!v3)
  {
    sub_1C3C49A14((uint64_t)&v15, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388130);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388138);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
      sub_1C3C4C684(&v15, (uint64_t)a3);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(&v15, v16);
      uint64_t DynamicType = swift_getDynamicType();
      uint64_t v11 = v17;
      id v12 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      a3[3] = DynamicType;
      a3[4] = v11;
      __swift_allocate_boxed_opaque_existential_1(a3);
      v12(DynamicType, v11);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v15);
    }
    uint64_t v8 = (char *)off_1EA386D10 + 16;
    uint64_t result = (void *)swift_beginAccess();
  }
  *uint64_t v8 = 0;
  return result;
}

uint64_t static Commands.helpCommandName.getter()
{
  return 1886152040;
}

uint64_t static Commands.command(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v65 = &v55[-v12];
  uint64_t v13 = (void *)MEMORY[0x1F4188790](v11);
  uint64_t v72 = &v55[-v16];
  uint64_t v17 = v13[2];
  if (!v17) {
    goto LABEL_27;
  }
  uint64_t v57 = v15;
  uint64_t v61 = v5;
  uint64_t v62 = v4;
  uint64_t v58 = v14;
  uint64_t v18 = v13;
  uint64_t v19 = (uint64_t)(v13 + 4);
  uint64_t v66 = v13[4];
  uint64_t v20 = v13[5];
  sub_1C3DBB428();
  swift_bridgeObjectRetain_n();
  uint64_t v67 = v20;
  swift_bridgeObjectRetain();
  uint64_t v63 = (uint64_t)v18;
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = *(void *)(v21 + 16);
  swift_release();
  if (v22 == v17 - 1)
  {
    uint64_t v23 = swift_dynamicCastClass();
    if (!v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v53 = (2 * v17) | 1;
    uint64_t v54 = v63;
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1C3C56B08(v54, v19, 1, v53);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v62;
  if (*(void *)(v23 + 16)) {
    BOOL v25 = sub_1C3D2BF0C();
  }
  else {
    BOOL v25 = 0;
  }
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t v68 = a3;
  uint64_t v27 = v26(a2, a3);
  if (!MEMORY[0x1C877B610](v27, a2))
  {
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
LABEL_26:
    BOOL v40 = sub_1C3D2BF0C();
    swift_bridgeObjectRelease();
    if (!v40)
    {
      google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v24);
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      a4[3] = type metadata accessor for UnknownCommand();
      a4[4] = &off_1F1F297A0;
      *a4 = v46;
      a4[1] = v48;
      return swift_bridgeObjectRetain();
    }
LABEL_27:
    sub_1C3C692F0();
    uint64_t v42 = v41;
    char v44 = v43;
    uint64_t result = type metadata accessor for GroupHelpCommand();
    a4[3] = result;
    a4[4] = &off_1F1F2A060;
    *a4 = v42;
    *((unsigned char *)a4 + 8) = v44 & 1;
    return result;
  }
  uint64_t v60 = v23;
  BOOL v56 = v25;
  uint64_t v59 = a4;
  uint64_t v28 = 0;
  uint64_t v64 = (void (**)(unsigned char *, long long *, uint64_t))(v9 + 16);
  uint64_t v29 = (void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32);
  a4 = (void *)(v9 + 8);
  while (1)
  {
    uint64_t v24 = sub_1C3DBA0B8();
    sub_1C3DBA058();
    if (v24)
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v9 + 16))(v72, v27+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, a2);
      uint64_t v30 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t result = sub_1C3DBAD08();
      if (v57 != 8)
      {
        __break(1u);
        return result;
      }
      uint64_t v24 = result;
      *(void *)&v71[0] = result;
      (*v64)(v72, v71, a2);
      swift_unknownObjectRelease();
      uint64_t v30 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    uint64_t v31 = *v29;
    uint64_t v32 = v65;
    (*v29)((uint64_t)v65, v72, a2);
    if (sub_1C3D2BF7C(v66, v67, a2, v68)) {
      break;
    }
    ((void (*)(unsigned char *, uint64_t))*a4)(v32, a2);
    ++v28;
    if (v30 == MEMORY[0x1C877B610](v27, a2))
    {
      swift_release();
      swift_bridgeObjectRelease();
      a4 = v59;
      uint64_t v24 = v62;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v34 = v61;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(*(void *)(v68 + 8) + 40))(v71, v60, a2);
  uint64_t v35 = v32;
  if (v34)
  {
    swift_release();
    if (v56)
    {

      uint64_t v36 = v58;
      v31(v58, v35, a2);
      uint64_t v37 = type metadata accessor for HelpCommand();
      uint64_t v38 = v59;
      v59[3] = v37;
      v38[4] = (uint64_t)&off_1F1F29F90;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
      return sub_1C3C662A8(v36, a2, (uint64_t)boxed_opaque_existential_1);
    }
    else
    {
      swift_willThrow();
      return ((uint64_t (*)(unsigned char *, uint64_t))*a4)(v32, a2);
    }
  }
  else
  {
    swift_release();
    sub_1C3C49A14((uint64_t)v71, (uint64_t)v70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388130);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388138);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v69);
    }
    else if (v56)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v71);
      uint64_t v49 = v58;
      v31(v58, v35, a2);
      uint64_t v50 = type metadata accessor for HelpCommand();
      uint64_t v51 = v59;
      v59[3] = v50;
      v51[4] = (uint64_t)&off_1F1F29F90;
      uint64_t v52 = __swift_allocate_boxed_opaque_existential_1(v51);
      return sub_1C3C662A8(v49, a2, (uint64_t)v52);
    }
    ((void (*)(unsigned char *, uint64_t))*a4)(v32, a2);
    return sub_1C3C4C684(v71, (uint64_t)v59);
  }
}

BOOL sub_1C3D2BF0C()
{
  sub_1C3C2A4A4();
  uint64_t v0 = sub_1C3DBAA18();
  swift_bridgeObjectRelease();
  return v0 == 0;
}

BOOL sub_1C3D2BF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t))(*(void *)(a4 + 8) + 32))(a3);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C3DB9E78();
  uint64_t v6 = sub_1C3D07720(0xD000000000000011, 0x80000001C3DF5100, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v4, v5);
  sub_1C3D07720(0xD000000000000017, 0x80000001C3DF5190, 0, 0, 1, 0x32242D3124, 0xE500000000000000, 0, 0, v6, v7);
  swift_bridgeObjectRelease();
  sub_1C3DB9C98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3C2A4A4();
  uint64_t v8 = sub_1C3DBAA18();
  swift_bridgeObjectRelease();
  return v8 == 0;
}

uint64_t Commands.decode<A>(_:from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  if (qword_1EA385838 != -1) {
    swift_once();
  }
  return ArgumentDecoder.decode<A>(_:from:)(a1, a2, a3, *(void *)(a4 + 16), a5);
}

uint64_t Commands.decode<A>(_:from:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, void *a4@<X8>)
{
  return static Commands.command(from:)(a1, a2, a3, a4);
}

uint64_t NSFileManager.itemExists(at:)()
{
  uint64_t v1 = (unsigned char *)swift_slowAlloc();
  sub_1C3DB88A8();
  char v2 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  unsigned int v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, v1);

  if (v3)
  {
    if (*v1) {
      int v4 = 256;
    }
    else {
      int v4 = 0;
    }
  }
  else
  {
    int v4 = 0;
  }
  return v4 | v3;
}

id NSFileManager.createDirectory(at:withIntermediateDirectories:)(uint64_t a1, char a2)
{
  unsigned int v3 = v2;
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1C3DB8848();
  v8[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, a2 & 1, 0, v8);

  if (v3) {
    return v8[0];
  }
  id v7 = v8[0];
  sub_1C3DB8798();

  return (id)swift_willThrow();
}

void *NSFileManager.contentsOfDirectory(at:)()
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1C3DB8848();
  type metadata accessor for URLResourceKey(0);
  char v2 = (void *)sub_1C3DB9FF8();
  v8[0] = 0;
  id v3 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, v2, 0, v8);

  id v4 = v8[0];
  if (v3)
  {
    sub_1C3DB88F8();
    uint64_t v1 = (void *)sub_1C3DBA018();
    id v5 = v4;
  }
  else
  {
    id v6 = v8[0];
    sub_1C3DB8798();

    swift_willThrow();
  }
  return v1;
}

void NSFileManager.url(for:)(uint64_t a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v2 = objc_msgSend(v1, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a1, 1, 0, 1, v7);
  id v3 = v7[0];
  if (v2)
  {
    id v4 = v2;
    sub_1C3DB8898();
    id v5 = v3;
  }
  else
  {
    id v6 = v7[0];
    sub_1C3DB8798();

    swift_willThrow();
  }
}

id NSFileManager.subdirectoriesOfDirectory(at:)()
{
  v59[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v49 = sub_1C3DB8638();
  uint64_t v0 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v54 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v48 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (char *)&v38 - v9;
  uint64_t v10 = (void *)sub_1C3DB8848();
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387110);
  uint64_t v11 = swift_allocObject();
  long long v52 = xmmword_1C3DD3D30;
  *(_OWORD *)(v11 + 16) = xmmword_1C3DD3D30;
  uint64_t v12 = (void *)*MEMORY[0x1E4F1C628];
  *(void *)(v11 + 32) = *MEMORY[0x1E4F1C628];
  type metadata accessor for URLResourceKey(0);
  uint64_t v14 = v13;
  id v50 = v12;
  uint64_t v51 = v14;
  uint64_t v15 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  v59[0] = 0;
  id v16 = objc_msgSend(v56, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v10, v15, 0, v59);

  id v17 = v59[0];
  if (v16)
  {
    uint64_t v55 = v5;
    uint64_t v18 = sub_1C3DBA018();
    id v19 = v17;

    v59[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v44 = *(void *)(v18 + 16);
    if (v44)
    {
      unint64_t v20 = 0;
      uint64_t v47 = v6 + 16;
      uint64_t v45 = v6 + 48;
      BOOL v56 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v41 = (void (**)(char *, uint64_t))(v0 + 8);
      uint64_t v39 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v46 = v6 + 56;
      unint64_t v38 = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v21 = v55;
      uint64_t v42 = v6;
      uint64_t v43 = v18;
      uint64_t v22 = v57;
      while (1)
      {
        if (v20 >= *(void *)(v18 + 16)) {
          __break(1u);
        }
        unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        uint64_t v24 = *(void *)(v6 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, v18 + v23 + v24 * v20, v21);
        BOOL v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v40(v4, 0, 1, v21);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v21) == 1) {
          break;
        }
        BOOL v25 = *v56;
        uint64_t v26 = v4;
        (*v56)(v22, v4, v21);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v52;
        uint64_t v28 = v50;
        *(void *)(inited + 32) = v50;
        id v29 = v28;
        sub_1C3C5B81C(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v30 = v54;
        uint64_t v31 = v58;
        sub_1C3DB87F8();
        uint64_t v58 = v31;
        if (v31)
        {
          swift_bridgeObjectRelease();
          (*v39)(v57, v55);
          swift_bridgeObjectRelease();
          return (id)swift_release();
        }
        swift_bridgeObjectRelease();
        char v32 = sub_1C3DB8608();
        (*v41)(v30, v49);
        if (v32)
        {
          v25(v48, v57, v55);
          uint64_t v33 = (char *)v59[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C3C9D8BC(0, *((void *)v33 + 2) + 1, 1);
            uint64_t v33 = (char *)v59[0];
          }
          unint64_t v35 = *((void *)v33 + 2);
          unint64_t v34 = *((void *)v33 + 3);
          if (v35 >= v34 >> 1)
          {
            sub_1C3C9D8BC(v34 > 1, v35 + 1, 1);
            uint64_t v33 = (char *)v59[0];
          }
          *((void *)v33 + 2) = v35 + 1;
          uint64_t v21 = v55;
          v25(&v33[v23 + v35 * v24], v48, v55);
          v59[0] = v33;
        }
        else
        {
          uint64_t v21 = v55;
          (*v39)(v57, v55);
        }
        id v4 = v26;
        ++v20;
        uint64_t v6 = v42;
        uint64_t v18 = v43;
        if (v44 == v20)
        {
          v40(v4, 1, 1, v21);
          break;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v55);
    }
    swift_bridgeObjectRelease();
    sub_1C3C36FB8((uint64_t)v4);
    return v59[0];
  }
  else
  {
    id v36 = v59[0];
    sub_1C3DB8798();

    return (id)swift_willThrow();
  }
}

uint64_t NSFileManager.createFile(at:contents:)()
{
  return sub_1C3DB8968();
}

uint64_t NSFileManager.contents(of:)()
{
  return sub_1C3DB8908();
}

void sub_1C3D2CC8C(uint64_t a1)
{
}

void *sub_1C3D2CCA4()
{
  return NSFileManager.contentsOfDirectory(at:)();
}

id sub_1C3D2CCBC()
{
  return NSFileManager.subdirectoriesOfDirectory(at:)();
}

id sub_1C3D2CCD4(uint64_t a1, char a2)
{
  return NSFileManager.createDirectory(at:withIntermediateDirectories:)(a1, a2);
}

uint64_t sub_1C3D2CCEC()
{
  return sub_1C3DB8968();
}

id sub_1C3D2CD10()
{
  return sub_1C3D2CD28();
}

id sub_1C3D2CD28()
{
  uint64_t v1 = v0;
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1C3DB8848();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if (v1) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_1C3DB8798();

  return (id)swift_willThrow();
}

id sub_1C3D2CDEC()
{
  return sub_1C3D2CE04();
}

id sub_1C3D2CE04()
{
  uint64_t v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1C3DB8848();
  uint64_t v3 = (void *)sub_1C3DB8848();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_copyItemAtURL_toURL_error_, v2, v3, v6);

  if (v1) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_1C3DB8798();

  return (id)swift_willThrow();
}

uint64_t sub_1C3D2CEE8()
{
  uint64_t v1 = (unsigned char *)swift_slowAlloc();
  sub_1C3DB88A8();
  uint64_t v2 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  unsigned int v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, v1);

  if (v3)
  {
    if (*v1) {
      int v4 = 256;
    }
    else {
      int v4 = 0;
    }
  }
  else
  {
    int v4 = 0;
  }
  return v4 | v3;
}

uint64_t sub_1C3D2CF7C()
{
  return sub_1C3DB8908();
}

uint64_t dispatch thunk of ICFileManaging.url(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ICFileManaging.contentsOfDirectory(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ICFileManaging.subdirectoriesOfDirectory(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ICFileManaging.createFile(at:contents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ICFileManaging.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ICFileManaging.copyItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ICFileManaging.itemExists(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v3 = (*(uint64_t (**)(void))(a3 + 64))();
  return v3 & 1 | ((HIBYTE(v3) & 1) << 8);
}

uint64_t dispatch thunk of ICFileManaging.contents(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

unint64_t FastSyncError.errorDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  switch(*((unsigned char *)v0 + 32))
  {
    case 1:
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000020;
      goto LABEL_6;
    case 2:
    case 3:
      swift_bridgeObjectRetain();
      return v1;
    case 4:
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000013;
      sub_1C3DB9D68();
      goto LABEL_8;
    case 6:
      unint64_t v8 = 0;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      goto LABEL_8;
    case 7:
      if (!(v4 | v2 | v1 | v3)) {
        return 0xD000000000000033;
      }
      uint64_t v7 = v4 | v2 | v3;
      if (v1 == 1 && !v7) {
        return 0xD000000000000035;
      }
      if (v1 == 2 && v7 == 0) {
        return 0xD000000000000036;
      }
      return 0xD000000000000020;
    default:
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000028;
LABEL_6:
      unint64_t v8 = v5;
LABEL_8:
      sub_1C3DB9D68();
      return v8;
  }
}

unint64_t sub_1C3D2D3F0()
{
  unint64_t result = qword_1EA388140;
  if (!qword_1EA388140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388140);
  }
  return result;
}

uint64_t sub_1C3D2D454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 6u)
  {
    if (a5 != 6) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FastSyncError(uint64_t a1)
{
  return sub_1C3D2D4C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1C3D2D4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 6u)
  {
    if (a5 != 6) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FastSyncError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C3D2D454(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FastSyncError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C3D2D454(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C3D2D4C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FastSyncError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C3D2D4C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FastSyncError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FastSyncError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C3D2D6DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 6u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_1C3D2D6F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)uint64_t result = a2 - 7;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 7;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FastSyncError()
{
  return &type metadata for FastSyncError;
}

uint64_t URL.fileSize.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388148);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  unsigned int v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v13 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v7 = (void *)*MEMORY[0x1E4F1C5F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C5F8];
  id v8 = v7;
  sub_1C3C5B81C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1C3DB87F8();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C3DB8638();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  sub_1C3C8E848((uint64_t)v5, (uint64_t)v3, &qword_1EA388148);
  sub_1C3DB8638();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_1C3C2A448((uint64_t)v5, &qword_1EA388148);
    sub_1C3C2A448((uint64_t)v3, &qword_1EA388148);
    return 0;
  }
  else
  {
    uint64_t v11 = sub_1C3DB8628();
    sub_1C3C2A448((uint64_t)v5, &qword_1EA388148);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  return v11;
}

uint64_t URL.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  sub_1C3DBACC8();
  sub_1C3DB88C8();
  swift_bridgeObjectRelease();
  sub_1C3C8E848((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v8 = sub_1C3DB88F8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
  {
    uint64_t result = sub_1C3C2A448((uint64_t)v5, (uint64_t *)&unk_1EB6FC7E0);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
    return sub_1C3C2A448((uint64_t)v7, (uint64_t *)&unk_1EB6FC7E0);
  }
  return result;
}

uint64_t sub_1C3D2DB2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1C3DBACC8();
  sub_1C3DB88C8();
  swift_bridgeObjectRelease();
  sub_1C3C8E848((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t v10 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, a1) == 1)
  {
    uint64_t result = sub_1C3C2A448((uint64_t)v7, (uint64_t *)&unk_1EB6FC7E0);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, a1);
    return sub_1C3C2A448((uint64_t)v9, (uint64_t *)&unk_1EB6FC7E0);
  }
  return result;
}

uint64_t URL.deletingFragment()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1C3DB88D8();
  if (v9)
  {
    sub_1C3DB87E8();
    sub_1C3DB87E8();
    uint64_t v10 = sub_1C3DB9D18();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1C3DB9D18();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 - v11;
    if (__OFSUB__(v10, v11))
    {
      __break(1u);
    }
    else if (!__OFSUB__(v12, 1))
    {
      uint64_t v13 = sub_1C3D5F1C8(v12 - 1);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      MEMORY[0x1C877B1D0](v13, v15, v17, v19);
      swift_bridgeObjectRelease();
      sub_1C3DB88C8();
      swift_bridgeObjectRelease();
      sub_1C3C8E848((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
      uint64_t v20 = sub_1C3DB88F8();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a1, v6, v20);
        return sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FC7E0);
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_11:
    uint64_t result = sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
    __break(1u);
    return result;
  }
  uint64_t v23 = sub_1C3DB88F8();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  return v24(a1, v1, v23);
}

id sub_1C3D2DF24(void *a1)
{
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  id v6 = a1;
  uint64_t v7 = URL.fileSize.getter();
  char v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v10 = 0;
  if ((v9 & 1) == 0) {
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v7);
  }

  return v10;
}

id NSURL.fileSize.getter()
{
  uint64_t v0 = sub_1C3DB88F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  uint64_t v4 = URL.fileSize.getter();
  char v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id result = 0;
  if ((v6 & 1) == 0) {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v4);
  }
  return result;
}

uint64_t NSURL.deletingFragment()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB8898();
  URL.deletingFragment()(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1C3D2E228(void *a1)
{
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  sub_1C3DB8898();
  id v9 = a1;
  URL.deletingFragment()((uint64_t)v8);
  id v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);

  uint64_t v11 = (void *)sub_1C3DB8848();
  v10(v8, v2);
  return v11;
}

uint64_t sub_1C3D2E360()
{
  return sub_1C3D2E3D4(&qword_1EA388150);
}

uint64_t sub_1C3D2E394()
{
  return MEMORY[0x1E4FBBA08];
}

uint64_t sub_1C3D2E3A0()
{
  return sub_1C3D2E3D4(&qword_1EA388158);
}

uint64_t sub_1C3D2E3D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C3DB88F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3D2E418()
{
  return MEMORY[0x1E4FBBA20];
}

uint64_t sub_1C3D2E424()
{
  return MEMORY[0x1E4FBBA18];
}

uint64_t dispatch thunk of static EntityID.uriTypeName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C3D2E444()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA388160);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA388160);
  if (qword_1EA3857F0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA3869A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id ICFolder.smartFolderQuery.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB9C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v1, sel_smartFolderQueryJSON);
  if (result)
  {
    uint64_t v7 = result;
    sub_1C3DB9C38();

    sub_1C3DB9C68();
    uint64_t v8 = sub_1C3DB9C48();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v10 >> 60 == 15)
    {
      if (qword_1EA3858F0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1C3DB9048();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EA388160);
      uint64_t v12 = sub_1C3DB9028();
      os_log_type_t v13 = sub_1C3DBA698();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1C3A61000, v12, v13, "Could not create JSON data from smartFolderQueryJSON", v14, 2u);
        MEMORY[0x1C877E600](v14, -1, -1);
      }

      return 0;
    }
    else
    {
      sub_1C3DB8148();
      swift_allocObject();
      sub_1C3DB8138();
      type metadata accessor for ICQuery();
      sub_1C3D2F750(&qword_1EA388178);
      sub_1C3DB8128();
      swift_release();
      sub_1C3CCDF74(v8, v10);
      return (id)v15[1];
    }
  }
  return result;
}

id ICFolder.smartFolderQuery.setter(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C3DB9C78();
  MEMORY[0x1F4188790](v4 - 8);
  if (a1)
  {
    sub_1C3DB81A8();
    swift_allocObject();
    id v5 = a1;
    sub_1C3DB8198();
    type metadata accessor for ICQuery();
    sub_1C3D2F750(&qword_1EA388180);
    uint64_t v7 = sub_1C3DB8188();
    unint64_t v9 = v8;
    sub_1C3DB9C68();
    sub_1C3DB9C58();
    if (v10)
    {
      uint64_t v11 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
    }
    objc_msgSend(v2, sel_setSmartFolderQueryJSON_, v11);

    sub_1C3C58FC8(v7, v9);
    return (id)swift_release();
  }
  else
  {
    return objc_msgSend(v2, sel_setSmartFolderQueryJSON_, 0);
  }
}

uint64_t ICFolder.smartFolderDescription.getter()
{
  uint64_t v1 = v0;
  unsigned int v2 = objc_msgSend(v0, sel_isSmartFolder);
  uint64_t v3 = 0;
  if (!v2) {
    return v3;
  }
  id v4 = objc_msgSend(v1, sel_smartFolderQueryObjC);
  if (!v4) {
    return 0;
  }
  id v5 = v4;
  swift_beginAccess();
  swift_retain();
  v34.value.super.Class isa = (Class)objc_msgSend(v1, sel_managedObjectContext);
  Class isa = v34.value.super.isa;
  ICQueryType.tagSelection(managedObjectContext:)(v7, v34);
  unint64_t v9 = v8;

  id v10 = objc_msgSend(v9, sel_tagIdentifiers);
  uint64_t v11 = (void *)sub_1C3DBA018();

  if (!v11[2] || (id v12 = objc_msgSend(v1, sel_managedObjectContext)) == 0)
  {

    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  id v13 = v12;
  id v14 = objc_msgSend(self, sel_canonicalHashtagsInContext_, v12);
  sub_1C3C4C8B4(0, &qword_1EA388188);
  unint64_t v15 = sub_1C3DBA018();

  unint64_t v16 = sub_1C3D2F794(v15, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v33 = v13;
    if (v17) {
      goto LABEL_7;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3CC51E4();
    uint64_t v3 = sub_1C3DB9B88();
    swift_bridgeObjectRelease();

    swift_release();
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C3DBAFB8();
  uint64_t v17 = result;
  uint64_t v33 = v13;
  if (!result) {
    goto LABEL_23;
  }
LABEL_7:
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x1C877C220](v19, v16);
      }
      else {
        id v21 = *(id *)(v16 + 8 * v19 + 32);
      }
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_displayText, v33);
      if (v23)
      {
        uint64_t v24 = v23;
        sub_1C3DB9C38();

        uint64_t v25 = (void *)sub_1C3DB9BF8();
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(v25, sel_ic_withHashtagPrefix);

        uint64_t v27 = sub_1C3DB9C38();
        uint64_t v29 = v28;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_1C3D8288C(0, v20[2] + 1, 1, v20);
        }
        unint64_t v31 = v20[2];
        unint64_t v30 = v20[3];
        if (v31 >= v30 >> 1) {
          uint64_t v20 = sub_1C3D8288C((void *)(v30 > 1), v31 + 1, 1, v20);
        }
        v20[2] = v31 + 1;
        char v32 = &v20[2 * v31];
        v32[4] = v27;
        void v32[5] = v29;
      }
      else
      {
      }
      ++v19;
    }
    while (v17 != v19);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id sub_1C3D2EFA0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    uint64_t v7 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7;
}

char *ICFolder.smartFolderShortDescription.getter()
{
  if (!objc_msgSend(v0, sel_isSmartFolder)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_smartFolderQueryObjC);
  if (!v1) {
    return 0;
  }
  unsigned int v2 = v1;
  swift_beginAccess();
  swift_retain();
  v18.value.super.Class isa = (Class)objc_msgSend(v0, sel_managedObjectContext);
  Class isa = v18.value.super.isa;
  ICQueryType.tagSelection(managedObjectContext:)(v4, v18);
  uint64_t v6 = v5;

  if (!objc_msgSend(v6, sel_isNonEmpty))
  {

    swift_release();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  id v8 = objc_msgSend(v6, sel_selectedTagCount);
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(inited + 56) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v8;
  id v10 = self;
  uint64_t v11 = (void *)sub_1C3DB9BF8();
  id v12 = objc_msgSend(v10, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v11, 0, 0, 0);

  uint64_t v13 = sub_1C3DB9C38();
  uint64_t v15 = v14;

  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1C3D2F9C4(inited, v13, v15);
  swift_bridgeObjectRelease_n();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
  swift_arrayDestroy();

  swift_release();
  return v16;
}

id static ICFolder.makeSmartFolder(with:titleComponents:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_newFolderInAccount_, a3);
  objc_msgSend(v5, sel_setSmartFolderQueryObjC_, a1);
  if (*(void *)(a2 + 16))
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_1C3DB9FF8();
    id v8 = objc_msgSend(v6, sel_objc_defaultSmartFolderTitleWithComponents_, v7);

    objc_msgSend(v5, sel_setTitle_, v8);
  }
  return v5;
}

id static ICFolder.makeSmartFolder(with:in:)(uint64_t a1, uint64_t a2)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v5 = (void *)sub_1C3DB9FF8();
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_objc_smartFolderWithQuery_titleComponents_account_, a1, v5, a2);

  return v6;
}

id sub_1C3D2F5D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[3];
  if (v7)
  {
    id v8 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    uint64_t v9 = *(void *)(v7 - 8);
    MEMORY[0x1F4188790](v8);
    uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = sub_1C3DBB3A8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a3);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFormat_locale_arguments_, v6, v12, a4);

  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_1C3D2F750(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ICQuery();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3D2F794(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v22 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v26 = v4;
      uint64_t v27 = (void *)(v3 + 32);
      id v23 = a2 + 7;
      uint64_t v24 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          id v8 = (id)MEMORY[0x1C877C220](v5, v22);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          id v8 = (id)v27[v5];
        }
        uint64_t v9 = v8;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_33;
        }
        id v11 = objc_msgSend(v8, sel_standardizedContent);
        if (v11) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return v28;
        }
      }
      uint64_t v12 = v11;
      uint64_t v13 = sub_1C3DB9C38();
      unint64_t v3 = (unint64_t)v14;

      uint64_t v15 = (void *)a2[2];
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      unint64_t v16 = a2;
      BOOL v17 = a2[4] == v13 && a2[5] == v3;
      if (v17 || (sub_1C3DBB3B8() & 1) != 0) {
        break;
      }
      if (v15 == (void *)1)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      NSManagedObjectContext_optional v18 = v23;
      uint64_t v19 = 1;
      while (1)
      {
        a2 = (void *)(v19 + 1);
        if (__OFADD__(v19, 1)) {
          break;
        }
        BOOL v20 = *(v18 - 1) == v13 && *v18 == v3;
        if (v20 || (sub_1C3DBB3B8() & 1) != 0) {
          goto LABEL_17;
        }
        v18 += 2;
        ++v19;
        if (a2 == v15) {
          goto LABEL_29;
        }
      }
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v4 = sub_1C3DBAFB8();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C3DBAE18();
    sub_1C3DBAE58();
    sub_1C3DBAE68();
    unint64_t v3 = (unint64_t)&v28;
    sub_1C3DBAE28();
LABEL_18:
    unint64_t v6 = v25;
    uint64_t v4 = v26;
    a2 = v16;
    uint64_t v7 = v24;
    goto LABEL_5;
  }
  return MEMORY[0x1E4FBC860];
}

char *sub_1C3D2F9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C3DBAED8();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 8;
  v4[3] = 0;
  unint64_t v5 = v4 + 3;
  v4[4] = 0;
  v4[5] = 0;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    uint64_t v22 = sub_1C3DBAEC8();
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA386240);
    uint64_t v28 = sub_1C3DB8C48();
    __swift_allocate_boxed_opaque_existential_1(v27);
    swift_bridgeObjectRetain();
    sub_1C3DB8BF8();
    id v23 = sub_1C3D2F5D8(a2, a3, v27, v22);
    uint64_t v24 = sub_1C3DB9C38();
    swift_release();

    return (char *)v24;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    sub_1C3C49A14(v8 + 40 * v7, (uint64_t)v27);
    __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t result = (char *)sub_1C3DBB698();
    uint64_t v10 = *v5;
    uint64_t v11 = *((void *)result + 2);
    BOOL v12 = __OFADD__(*v5, v11);
    uint64_t v13 = *v5 + v11;
    if (v12) {
      break;
    }
    uint64_t v14 = result;
    uint64_t v15 = v4[4];
    if (v15 >= v13) {
      goto LABEL_18;
    }
    if (v15 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    unint64_t v16 = (char *)v4[5];
    if (2 * v15 > v13) {
      uint64_t v13 = 2 * v15;
    }
    v4[4] = v13;
    if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    uint64_t result = (char *)swift_slowAlloc();
    v4[5] = result;
    if (v16)
    {
      if (result != v16 || result >= &v16[8 * v10]) {
        memmove(result, v16, 8 * v10);
      }
      sub_1C3DBAEB8();
LABEL_18:
      uint64_t result = (char *)v4[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v18 = *((void *)v14 + 2);
    if (v18)
    {
      uint64_t v19 = (uint64_t *)(v14 + 32);
      uint64_t v20 = *v5;
      while (1)
      {
        uint64_t v21 = *v19++;
        *(void *)&result[8 * v20] = v21;
        uint64_t v20 = *v5 + 1;
        if (__OFADD__(*v5, 1)) {
          break;
        }
        *unint64_t v5 = v20;
        if (!--v18) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    if (v7 == v6) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _sSo8ICFolderC11NotesSharedE23defaultSmartFolderTitle10componentsSSSaySSG_tFZ_0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 <= 2)
  {
    uint64_t v16 = a1;
    swift_bridgeObjectRetain();
    sub_1C3CBA1E8(&v16);
    uint64_t v11 = v16;
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DF8]), sel_init);
    sub_1C3D7886C(v11);
    swift_release();
    uint64_t v13 = (void *)sub_1C3DB9FF8();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_stringFromItems_, v13);

    if (v14)
    {
      uint64_t v10 = sub_1C3DB9C38();
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    uint64_t v3 = MEMORY[0x1E4FBB5C8];
    *(void *)(inited + 56) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 64) = v3;
    *(void *)(inited + 32) = v1;
    uint64_t v4 = self;
    unint64_t v5 = (void *)sub_1C3DB9BF8();
    id v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 0);

    uint64_t v7 = sub_1C3DB9C38();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t)sub_1C3D2F9C4(inited, v7, v9);
    swift_bridgeObjectRelease_n();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
    swift_arrayDestroy();
  }
  return v10;
}

char *keypath_get_selector_smartFolderQueryObjC()
{
  return sel_smartFolderQueryObjC;
}

id sub_1C3D2FE34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_smartFolderQueryObjC);
  *a2 = result;
  return result;
}

id sub_1C3D2FE70(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSmartFolderQueryObjC_, *a1);
}

Swift::Void __swiftcall ICHashtag.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  unsigned int v2 = v1;
  id v3 = objc_msgSend(v1, sel_displayText);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C3DB9C38();

    sub_1C3DB9C38();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    sub_1C3DB9D68();
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease_n();
    id v5 = objc_msgSend(v2, sel_displayText);
    if (v5)
    {
      id v6 = v5;
      sub_1C3DB9C38();
    }
    sub_1C3C29C88(MEMORY[0x1E4FBC860]);
    sub_1C3DBA888();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

Swift::String __swiftcall Duration.formattedTime(fractionalSeconds:)(Swift::Bool fractionalSeconds)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  v22[1] = fractionalSeconds;
  uint64_t v5 = sub_1C3DBB388();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C3DBB718();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C3DBB728();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  uint64_t v16 = sub_1C3DBB748();
  BOOL v17 = (void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v18 = *MEMORY[0x1E4FBBEB0];
  if (v16 >= 3600)
  {
    (*v17)(v8, v18, v5);
    sub_1C3DBB708();
  }
  else
  {
    (*v17)(v8, v18, v5);
    sub_1C3DBB6F8();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C3DB8118();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  sub_1C3D30350();
  sub_1C3DBB738();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v19 = v26;
  uint64_t v20 = v27;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

unint64_t sub_1C3D30350()
{
  unint64_t result = qword_1EA388190;
  if (!qword_1EA388190)
  {
    sub_1C3DBB728();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388190);
  }
  return result;
}

void sub_1C3D303A8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1C3DB8788();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t NotesInvernessClient.Environments.init(rawValue:)(uint64_t result)
{
  if ((unint64_t)(result - 4) < 0xFFFFFFFFFFFFFFFDLL) {
    return 0;
  }
  return result;
}

uint64_t sub_1C3D30424()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D3046C()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3D30498()
{
  return sub_1C3DBB608();
}

uint64_t *sub_1C3D304DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  unint64_t v3 = *result - 4;
  BOOL v4 = __CFADD__(v3, 3);
  BOOL v5 = v3 < 0xFFFFFFFFFFFFFFFDLL;
  if (!v4) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

id NotesInvernessClient.container.getter()
{
  return *(id *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_container);
}

uint64_t NotesInvernessClient.environment.getter()
{
  return *(void *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_environment);
}

uint64_t NotesInvernessClient.localURLString.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C3D305D8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_environment);
  if ((unint64_t)(v1 - 1) >= 3)
  {
    uint64_t result = sub_1C3DBB508();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_container);
    unsigned __int8 v4 = v1 - 1;
    return sub_1C3D32300(v2, &v4, *(void *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString), *(void *)(v0 + OBJC_IVAR___ICNotesInvernessClientObjc_localURLString + 8));
  }
  return result;
}

id NotesInvernessClient.__allocating_init(container:environment:localURLString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___ICNotesInvernessClientObjc_container] = a1;
  *(void *)&v9[OBJC_IVAR___ICNotesInvernessClientObjc_environment] = a2;
  uint64_t v10 = &v9[OBJC_IVAR___ICNotesInvernessClientObjc_localURLString];
  *(void *)uint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id NotesInvernessClient.init(container:environment:localURLString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___ICNotesInvernessClientObjc_container] = a1;
  *(void *)&v4[OBJC_IVAR___ICNotesInvernessClientObjc_environment] = a2;
  BOOL v5 = &v4[OBJC_IVAR___ICNotesInvernessClientObjc_localURLString];
  *(void *)BOOL v5 = a3;
  *((void *)v5 + 1) = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for NotesInvernessClient();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for NotesInvernessClient()
{
  return self;
}

uint64_t sub_1C3D307E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v28 = a8;
  uint64_t v27 = a7;
  uint64_t v29 = a14;
  uint64_t v30 = a15;
  unint64_t v26[2] = a11;
  v26[1] = a10;
  v26[0] = a9;
  uint64_t v21 = type metadata accessor for MentionNotificationRequestV2(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = v27;
  uint64_t v38 = v28;
  long long v39 = a9;
  long long v40 = a10;
  long long v41 = a11;
  uint64_t v42 = a12;
  uint64_t v43 = a13;
  sub_1C3D31328(&qword_1EA3877C8, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
  sub_1C3DB8F58();
  sub_1C3D305D8();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v29;
  *(void *)(v24 + 24) = v30;
  swift_retain();
  sub_1C3CE0314((uint64_t)v23);
  swift_release();
  swift_release();
  return sub_1C3D32B44((uint64_t)v23, type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D30A08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a4;
  a1[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a6;
  a1[5] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a8;
  a1[7] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a10;
  a1[9] = a11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a12;
  a1[11] = a13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a14;
  a1[13] = a15;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  a1[14] = a16;
  a1[15] = a17;
  return result;
}

uint64_t sub_1C3D30B7C(void *a1)
{
  return sub_1C3D32A44(a1);
}

void sub_1C3D30B94(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881C0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void **)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3C8E848(a1, (uint64_t)v6, &qword_1EA3881C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    objc_super v7 = *v6;
  }
  else
  {
    sub_1C3C2A448((uint64_t)v6, &qword_1EA3881C0);
    objc_super v7 = 0;
  }
  a2(v7);
}

uint64_t sub_1C3D30C78()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C3D30CB0(uint64_t a1)
{
  sub_1C3D30B94(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1C3D31014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v26 = a6;
  uint64_t v25 = a8;
  uint64_t v27 = a12;
  uint64_t v28 = a13;
  long long v24 = a9;
  uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a7;
  uint64_t v34 = v25;
  uint64_t v35 = a5;
  uint64_t v36 = v26;
  long long v37 = a9;
  uint64_t v38 = a10;
  uint64_t v39 = a11;
  sub_1C3D31328(&qword_1EB6FB728, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
  sub_1C3DB8F58();
  sub_1C3D305D8();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v27;
  *(void *)(v22 + 24) = v28;
  swift_retain();
  sub_1C3CE04D0((uint64_t)v21);
  swift_release();
  swift_release();
  return sub_1C3D32B44((uint64_t)v21, type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D311EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a4;
  a1[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a6;
  a1[7] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a8;
  a1[5] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a10;
  a1[9] = a11;
  uint64_t v19 = a1[10];
  unint64_t v20 = a1[11];
  sub_1C3CE0C34(a12, a13);
  uint64_t result = sub_1C3C58FC8(v19, v20);
  a1[10] = a12;
  a1[11] = a13;
  return result;
}

uint64_t sub_1C3D31310(void *a1)
{
  return sub_1C3D329C0(a1);
}

uint64_t sub_1C3D31328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C3D31370(uint64_t a1, void (*a2)(void *, void, unint64_t, void), uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8D98();
  uint64_t v36 = *(void **)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB798);
  MEMORY[0x1F4188790](v15);
  BOOL v17 = (void **)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C3C8E848(a1, (uint64_t)v17, &qword_1EB6FB798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = *v17;
    id v19 = v18;
    a2(v18, 0, 0xF000000000000000, 0);
  }
  else
  {
    unint64_t v20 = v36;
    sub_1C3D32AE0((uint64_t)v17, (uint64_t)v14);
    uint64_t v21 = v14[2];
    uint64_t v38 = MEMORY[0x1E4FBC860];
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v32 = v14;
      uint64_t v33 = a3;
      uint64_t v34 = a2;
      unint64_t v23 = sub_1C3D32A04();
      uint64_t v25 = (void *)v20[2];
      long long v24 = (char *)(v20 + 2);
      uint64_t v36 = v25;
      unint64_t v37 = v23;
      uint64_t v26 = v21 + ((v24[64] + 32) & ~(unint64_t)v24[64]);
      uint64_t v35 = *((void *)v24 + 7);
      uint64_t v31 = v21;
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v27 = (void (*)(char *, char *, uint64_t))v36;
        ((void (*)(char *, uint64_t, uint64_t))v36)(v11, v26, v6);
        v27(v9, v11, v6);
        uint64_t v28 = sub_1C3DBA8B8();
        uint64_t v29 = (*((uint64_t (**)(char *, uint64_t))v24 - 1))(v11, v6);
        if (v28)
        {
          MEMORY[0x1C877B4F0](v29);
          if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C3DBA068();
          }
          sub_1C3DBA0C8();
          sub_1C3DBA038();
        }
        v26 += v35;
        --v22;
      }
      while (v22);
      uint64_t v30 = v38;
      a2 = v34;
      uint64_t v14 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    a2(0, *v14, v14[1], v30);
    swift_bridgeObjectRelease();
    sub_1C3D32B44((uint64_t)v14, type metadata accessor for DidCompleteInstallOrUpdateResponse);
  }
}

void sub_1C3D316F4(uint64_t a1)
{
  sub_1C3D31370(a1, *(void (**)(void *, void, unint64_t, void))(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C3D319D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    uint64_t v8 = (void *)sub_1C3DB8788();
  }
  else {
    uint64_t v8 = 0;
  }
  if (a3 >> 60 == 15)
  {
    uint64_t v9 = 0;
    if (a4)
    {
LABEL_6:
      sub_1C3D32A04();
      uint64_t v10 = sub_1C3DB9FF8();
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v9 = (void *)sub_1C3DB8938();
    if (a4) {
      goto LABEL_6;
    }
  }
  uint64_t v10 = 0;
LABEL_9:
  id v11 = (id)v10;
  (*(void (**)(uint64_t, void *, void *))(a5 + 16))(a5, v8, v9);
}

void sub_1C3D31AAC(void *a1, void (*a2)(id), uint64_t a3)
{
}

void sub_1C3D31B54(void *a1, uint64_t a2, unint64_t a3, void (*a4)(id), uint64_t a5)
{
  uint64_t v11 = type metadata accessor for RunGarbageCollectorRequest(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v26 - v15);
  if (a1 && (objc_msgSend(a1, sel_isCancelled) & 1) != 0)
  {
    sub_1C3DB9C38();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v18 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, 3072, 0);

    id v27 = v19;
    a4(v19);

    id v20 = v27;
  }
  else
  {
    _s11NotesShared11PingRequestVACycfC_0();
    if (a3 >> 60 == 15) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = a2;
    }
    unint64_t v22 = 0xC000000000000000;
    if (a3 >> 60 != 15) {
      unint64_t v22 = a3;
    }
    *uint64_t v16 = v21;
    v16[1] = v22;
    sub_1C3D328F4(a2, a3);
    sub_1C3D305D8();
    sub_1C3D32918((uint64_t)v16, (uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
    unint64_t v23 = (void *)swift_allocObject();
    v23[2] = v5;
    v23[3] = a1;
    v23[4] = a4;
    v23[5] = a5;
    id v24 = v5;
    id v25 = a1;
    swift_retain();
    sub_1C3CE068C((uint64_t)v14);
    swift_release();
    swift_release();
    sub_1C3D32B44((uint64_t)v14, type metadata accessor for RunGarbageCollectorRequest);
    sub_1C3D32B44((uint64_t)v16, type metadata accessor for RunGarbageCollectorRequest);
  }
}

void sub_1C3D31DD0(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id), uint64_t a5)
{
  uint64_t v9 = type metadata accessor for RunGarbageCollectorResponse(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881B8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void **)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  id v17 = (id *)((char *)&v21 - v16);
  sub_1C3C8E848(a1, (uint64_t)&v21 - v16, &qword_1EA3881B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_1C3D32918((uint64_t)v17, (uint64_t)v11, type metadata accessor for RunGarbageCollectorResponse);
    uint64_t v18 = *v11;
    unint64_t v19 = v11[1];
    switch(v19 >> 62)
    {
      case 1uLL:
        if ((int)v18 != v18 >> 32) {
          goto LABEL_5;
        }
        goto LABEL_9;
      case 2uLL:
        if (*(void *)(v18 + 16) == *(void *)(v18 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_5;
      case 3uLL:
        goto LABEL_9;
      default:
        if ((v19 & 0xFF000000000000) != 0)
        {
LABEL_5:
          sub_1C3D31B54(a3, v18, v19, a4, a5);
          sub_1C3D32B44((uint64_t)v11, type metadata accessor for RunGarbageCollectorResponse);
          sub_1C3D32B44((uint64_t)v17, type metadata accessor for RunGarbageCollectorResponse);
          return;
        }
LABEL_9:
        sub_1C3D32B44((uint64_t)v11, type metadata accessor for RunGarbageCollectorResponse);
        sub_1C3D32B44((uint64_t)v17, type metadata accessor for RunGarbageCollectorResponse);
        break;
    }
  }
  sub_1C3C8E848(a1, (uint64_t)v15, &qword_1EA3881B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v20 = *v15;
  }
  else
  {
    sub_1C3C2A448((uint64_t)v15, &qword_1EA3881B8);
    id v20 = 0;
  }
  a4(v20);
}

id NotesInvernessClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NotesInvernessClient.init()()
{
}

id NotesInvernessClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotesInvernessClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C3D32120()
{
  unint64_t result = qword_1EA3881B0;
  if (!qword_1EA3881B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3881B0);
  }
  return result;
}

uint64_t method lookup function for NotesInvernessClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotesInvernessClient);
}

uint64_t dispatch thunk of NotesInvernessClient.__allocating_init(container:environment:localURLString:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NotesInvernessClient.sendMentionNotification(recipientUserId:senderName:noteTitle:mentionSnippet:shareRecordName:shareOwnerUserId:noteRecordName:inlineAttachmentRecordName:callback:)()
{
  objc_super v2 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78);
  return v2();
}

uint64_t dispatch thunk of NotesInvernessClient.didCompleteInstallOrUpdate(previousBuildNumber:previousVersion:currentBuildNumber:currentVersion:platformName:continuationToken:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NotesInvernessClient.runGarbageCollector(progress:callback:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

ValueMetadata *type metadata accessor for NotesInvernessClient.Environments()
{
  return &type metadata for NotesInvernessClient.Environments;
}

uint64_t sub_1C3D32300(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB88F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2 + 1;
  strcpy((char *)v22, "NotesService");
  HIBYTE(v22[6]) = 0;
  v22[7] = -5120;
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1C3DB9BF8();
  id v15 = objc_msgSend(a1, sel_codeServiceWithName_databaseScope_, v14, 2, v20, v21);

  if (v13 != 3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_1C3DB88C8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v16 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    id v17 = (void *)sub_1C3DB8848();
    id v18 = objc_msgSend(a1, sel_codeServiceWithName_databaseScope_serviceInstanceURL_, v16, 2, v17);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v15 = v18;
LABEL_5:
    type metadata accessor for NotesServiceAPIAsyncClient();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v15;
    return result;
  }
  sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FC7E0);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

void sub_1C3D32620(void *a1, uint64_t a2, unint64_t a3, void *a4, void (**a5)(void, void))
{
  uint64_t v10 = type metadata accessor for RunGarbageCollectorRequest(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (uint64_t *)((char *)&v27 - v14);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  if (a1)
  {
    _Block_copy(a5);
    if (objc_msgSend(a1, sel_isCancelled))
    {
      sub_1C3DB9C38();
      id v17 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      id v18 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, 3072, 0);

      id v20 = v19;
      uint64_t v28 = sub_1C3DB8788();
      a5[2](a5, v28);
      swift_release();

      uint64_t v21 = (void *)v28;

      return;
    }
  }
  else
  {
    _Block_copy(a5);
  }
  _s11NotesShared11PingRequestVACycfC_0();
  if (a3 >> 60 == 15) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = a2;
  }
  unint64_t v23 = 0xC000000000000000;
  if (a3 >> 60 != 15) {
    unint64_t v23 = a3;
  }
  *id v15 = v22;
  v15[1] = v23;
  sub_1C3D328F4(a2, a3);
  sub_1C3D305D8();
  sub_1C3D32918((uint64_t)v15, (uint64_t)v13, type metadata accessor for RunGarbageCollectorRequest);
  id v24 = (void *)swift_allocObject();
  v24[2] = a4;
  v24[3] = a1;
  v24[4] = sub_1C3CFDD78;
  v24[5] = v16;
  id v25 = a4;
  id v26 = a1;
  swift_retain();
  sub_1C3CE068C((uint64_t)v13);
  swift_release();
  swift_release();
  sub_1C3D32B44((uint64_t)v13, type metadata accessor for RunGarbageCollectorRequest);
  sub_1C3D32B44((uint64_t)v15, type metadata accessor for RunGarbageCollectorRequest);
  swift_release();
}

uint64_t sub_1C3D328F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C3CE0C34(a1, a2);
  }
  return a1;
}

void sub_1C3D3290C(uint64_t a1)
{
  sub_1C3D31DD0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C3D32918(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3D32980()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3D329B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_1C3D319D4(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1C3D329C0(void *a1)
{
  return sub_1C3D311EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

unint64_t sub_1C3D32A04()
{
  unint64_t result = qword_1EB6FB790;
  if (!qword_1EB6FB790)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6FB790);
  }
  return result;
}

uint64_t sub_1C3D32A44(void *a1)
{
  return sub_1C3D30A08(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3D32AE0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_1C3D32B44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static NSBundle.sharedFramework.getter()
{
  id v1 = (id)ICSharedFrameworkBundleIdentifier();
  sub_1C3DB9C38();

  objc_super v2 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v2);

  if (v3)
  {
    *((void *)&v6 + 1) = v0;
    *(void *)&long long v5 = v3;
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  castOrFatalError<A>(_:as:)((uint64_t)&v5, v0, v0, (uint64_t)&v7);
  sub_1C3CC623C((uint64_t)&v5);
  return v7;
}

uint64_t ICQueryEntity.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t ICQueryEntity.rawValue.getter()
{
  return 1702129518;
}

unint64_t sub_1C3D32CF8()
{
  unint64_t result = qword_1EA3881C8;
  if (!qword_1EA3881C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3881C8);
  }
  return result;
}

uint64_t sub_1C3D32D4C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D32D98()
{
  return sub_1C3DB9D08();
}

uint64_t sub_1C3D32DA8()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D32DF0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C3D32E44(void *a1@<X8>)
{
  *a1 = 1702129518;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1C3D32E58()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3D32EB8()
{
  return sub_1C3DB9F58();
}

unsigned char *storeEnumTagSinglePayload for ICQueryEntity(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3D32FA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ICQueryEntity()
{
  return &type metadata for ICQueryEntity;
}

unint64_t sub_1C3D32FDC()
{
  unint64_t result = qword_1EA3881D0;
  if (!qword_1EA3881D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3881D0);
  }
  return result;
}

uint64_t sub_1C3D33030(void (*a1)(void))
{
  a1();
  return swift_continuation_throwingResume();
}

uint64_t static ICPaperAttachmentCreationHelper.copyNewPaperBundle(to:from:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = sub_1C3DB88F8();
  v3[19] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[20] = v5;
  v3[21] = *(void *)(v5 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D331D0, 0, 0);
}

uint64_t sub_1C3D331D0()
{
  id v1 = sub_1C3D3382C(*(char **)(v0 + 192), *(void **)(v0 + 128));
  *(void *)(v0 + 208) = v1;
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = v1;
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 136);
  id v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v20(v2, *(void *)(v0 + 192), v8);
  id v19 = objc_msgSend(self, sel_ic_fileCoordinationOperationQueue);
  *(void *)(v0 + 216) = v19;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v9(v4, v18, v8);
  v9(v3, v2, v8);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  unint64_t v12 = (v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (v10 + v12 + 8) & ~v10;
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 224) = v14;
  v20(v14 + v11, v4, v8);
  *(void *)(v14 + v12) = v5;
  v20(v14 + v13, v3, v8);
  id v15 = v5;
  id v16 = v19;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1C3D333FC, 0, 0);
}

uint64_t sub_1C3D333FC()
{
  id v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v7 = v0 + 27;
  uint64_t v6 = (void *)v0[27];
  uint64_t v5 = v7[1];
  v1[2] = v2;
  v1[3] = sub_1C3D33564;
  uint64_t v8 = swift_continuation_init();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_1C3D33CE0;
  v9[3] = v5;
  v9[4] = v8;
  v1[14] = sub_1C3CB3CDC;
  v1[15] = v9;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_13;
  uint64_t v10 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_addOperationWithBlock_, v10);
  _Block_release(v10);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3D33564()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C3D33750;
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 216);

    swift_release_n();
    uint64_t v3 = sub_1C3D33698;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C3D33698()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C3D33750()
{
  uint64_t v2 = (void *)v0[26];
  uint64_t v1 = (void *)v0[27];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[20];
  swift_willThrow();

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id sub_1C3D3382C(char *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a2, sel_paperBundleModel);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    goto LABEL_7;
  }
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_paperBundleURL);

  sub_1C3DB8898();
  id v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v12, v9, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
LABEL_7:
    sub_1C3C2A448((uint64_t)v12, (uint64_t *)&unk_1EB6FC7E0);
    id v23 = a2;
    sub_1C3D92EF8(1, v23);

    swift_willThrow();
    return v3;
  }
  v16(a1, v12, v6);
  id v17 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a2;
  v25.receiver = v18;
  v25.super_class = v17;
  id v19 = a2;
  id v20 = (char *)objc_msgSendSuper2(&v25, sel_init);
  id v21 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v21
    && (uint64_t v22 = v21,
        MEMORY[0x1F4188790](v21),
        *((void *)&v25 - 2) = v20,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310),
        sub_1C3DBA838(),
        v22,
        (id v3 = v26) != 0))
  {
  }
  else
  {
    id v3 = v19;
    sub_1C3D92EF8(2, v3);

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
  }
  return v3;
}

uint64_t sub_1C3D33B90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  uint64_t result = sub_1C3DB9888();
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3D33C08()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  id v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  unint64_t v8 = (v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v4 + v8 + 8) & ~v4;
  uint64_t v10 = v9 + v6;
  v3(v0 + v5, v1);

  v3(v0 + v9, v1);
  return MEMORY[0x1F4186498](v0, v10, v7);
}

uint64_t sub_1C3D33CE0()
{
  return sub_1C3D33B90();
}

uint64_t sub_1C3D33F08(void *a1, uint64_t a2, const void *a3)
{
  v3[2] = a1;
  uint64_t v6 = sub_1C3DB88F8();
  void v3[3] = v6;
  v3[4] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a3);
  sub_1C3DB8898();
  swift_getObjCClassMetadata();
  id v8 = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[7] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C3D34050;
  return static ICPaperAttachmentCreationHelper.copyNewPaperBundle(to:from:)((uint64_t)v8, v7);
}

uint64_t sub_1C3D34050()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v7 = *(void *)(*v1 + 24);
  id v8 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);

  uint64_t v10 = *(void *)(v3 + 48);
  if (v2)
  {
    uint64_t v11 = (void *)sub_1C3DB8788();

    (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);
  }
  else
  {
    (*(void (**)(void, void))(v10 + 16))(*(void *)(v3 + 48), 0);
  }
  _Block_release(*(const void **)(v4 + 48));
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881E8);
  v3[20] = swift_task_alloc();
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0) - 8);
  v3[21] = v4;
  v3[22] = *(void *)(v4 + 64);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  uint64_t v5 = sub_1C3DB88F8();
  v3[25] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[26] = v6;
  v3[27] = *(void *)(v6 + 64);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D343C8, 0, 0);
}

uint64_t sub_1C3D343C8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 128), sel_managedObjectContext);
  uint64_t v2 = *(void *)(v0 + 160);
  if (!v1)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    goto LABEL_5;
  }
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  sub_1C3DBA838();
  uint64_t v8 = *(void *)(v0 + 160);

  swift_task_dealloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881F0);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (v10 == 1)
  {
LABEL_5:
    sub_1C3C2A448(*(void *)(v0 + 160), &qword_1EA3881E8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v15 = *(void *)(v0 + 224);
  uint64_t v17 = *(void *)(v0 + 200);
  uint64_t v16 = *(void *)(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 184);
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v19 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 168);
  uint64_t v30 = v15;
  uint64_t v31 = *(void *)(v0 + 136);
  uint64_t v37 = *(void *)(v0 + 144);
  uint64_t v38 = *(void **)(v19 + *(int *)(v9 + 48));
  *(void *)(v0 + 248) = v38;
  uint64_t v20 = v19 + *(int *)(v9 + 64);
  uint64_t v36 = *(void (**)(uint64_t))(v16 + 32);
  v36(v14);
  sub_1C3C2EF60(v20, v18);
  id v35 = objc_msgSend(self, sel_ic_fileCoordinationOperationQueue);
  *(void *)(v0 + 256) = v35;
  id v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v21(v13, v14, v17);
  v21(v15, v31, v17);
  sub_1C3CFFF04(v18, v32);
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v23 = (v22 + 24) & ~v22;
  uint64_t v24 = (v33 + v22 + v23) & ~v22;
  unint64_t v25 = (v33 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (*(unsigned __int8 *)(v34 + 80) + v25 + 8) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 264) = v27;
  *(void *)(v27 + 16) = v37;
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v27 + v23, v13, v17);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v27 + v24, v30, v17);
  *(void *)(v27 + v25) = v38;
  sub_1C3C2EF60(v32, v27 + v26);
  id v28 = v38;
  id v29 = v35;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1C3D347E0, 0, 0);
}

uint64_t sub_1C3D347E0()
{
  id v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v7 = v0 + 32;
  uint64_t v6 = (void *)v0[32];
  uint64_t v5 = v7[1];
  v1[2] = v2;
  v1[3] = sub_1C3D34948;
  uint64_t v8 = swift_continuation_init();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_1C3D350BC;
  v9[3] = v5;
  v9[4] = v8;
  v1[14] = sub_1C3CB46B0;
  v1[15] = v9;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_15_0;
  int v10 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_addOperationWithBlock_, v10);
  _Block_release(v10);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3D34948()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C3D34B5C;
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + 256);

    swift_release_n();
    uint64_t v3 = sub_1C3D34A7C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C3D34A7C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 192);

  sub_1C3C2A448(v4, (uint64_t *)&unk_1EB6FC7E0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1C3D34B5C()
{
  uint64_t v2 = (void *)v0[31];
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[24];
  swift_willThrow();

  swift_release_n();
  sub_1C3C2A448(v6, (uint64_t *)&unk_1EB6FC7E0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id sub_1C3D34C6C@<X0>(void *a1@<X1>, char *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_1C3DB88F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  id result = sub_1C3D3382C(v14, a1);
  if (!v2)
  {
    id v26 = result;
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v25(v16, v14, v10);
    id v18 = objc_msgSend(a1, sel_fallbackPDFURL);
    if (v18)
    {
      uint64_t v19 = v18;
      sub_1C3DB8898();

      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = 1;
    }
    id v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, v20, 1, v10);
    sub_1C3C2EF60((uint64_t)v7, (uint64_t)v9);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3881F0);
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = (uint64_t)&v21[*(int *)(v22 + 64)];
    v25(v21, v16, v10);
    *(void *)&v21[v23] = v26;
    sub_1C3C2EF60((uint64_t)v9, v24);
    return (id)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  return result;
}

id sub_1C3D34EEC@<X0>(char *a1@<X8>)
{
  return sub_1C3D34C6C(*(void **)(v1 + 24), a1);
}

uint64_t sub_1C3D34F08()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  unint64_t v7 = (v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);
  uint64_t v11 = *(void **)(v0 + v7);
  uint64_t v12 = (v9 + v7 + 8) & ~v9;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v12, 1, v1)) {
    v10(v0 + v12, v1);
  }
  return MEMORY[0x1F4186498](v0, v12 + v14, v3 | v9 | 7);
}

uint64_t sub_1C3D350BC()
{
  uint64_t v1 = *(void *)(sub_1C3DB88F8() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0) - 8);
  return sub_1C3D3656C(v0 + v3, v0 + v5, *(void *)(v0 + v6), v0 + ((*(unsigned __int8 *)(v7 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t sub_1C3D351A8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D35360(void *a1, uint64_t a2, const void *a3)
{
  v3[2] = a1;
  uint64_t v6 = sub_1C3DB88F8();
  void v3[3] = v6;
  v3[4] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a3);
  sub_1C3DB8898();
  swift_getObjCClassMetadata();
  id v8 = a1;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[7] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C3D37078;
  return static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)((uint64_t)v8, v7);
}

id static ICPaperAttachmentCreationHelper.createPaperDocument(for:fromLegacyMediaAt:)(void *a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - v12;
  id result = sub_1C3D3382C(v11, a1);
  if (!v2)
  {
    id v19 = result;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    id v15 = objc_msgSend(a1, sel_managedObjectContext);
    if (v15)
    {
      uint64_t v16 = v15;
      MEMORY[0x1F4188790](v15);
      *(&v18 - 2) = (uint64_t)a1;
      sub_1C3DBA838();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    uint64_t v17 = v19;
    sub_1C3D3656C((uint64_t)v13, v20, (uint64_t)v19, (uint64_t)v6);

    sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_1C3D3570C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_fallbackPDFURL);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C3DB8898();

    uint64_t v5 = sub_1C3DB88F8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
  else
  {
    uint64_t v7 = sub_1C3DB88F8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

id static ICPaperAttachmentCreationHelper.createSystemPaperAttachment(with:in:)(void *a1, void *a2)
{
  id v29 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)&v26 - v10;
  uint64_t v11 = sub_1C3DB8B98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v15 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(a2, sel_addSystemPaperAttachmentWithIdentifier_, v15);

  id v17 = sub_1C3D3382C(v9, v16);
  uint64_t v31 = v3;
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v9, v6);
  sub_1C3DB9728();
  sub_1C3DB9A58();
  uint64_t v20 = (void *)sub_1C3DB9708();
  id v29 = v16;
  id v21 = v20;
  sub_1C3DB9978();
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_sharedState);
  objc_msgSend(v23, sel_beginBlockingDeauthentication);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC300);
  sub_1C3DB98C8();
  id v24 = objc_msgSend(v22, sel_sharedState);
  objc_msgSend(v24, sel_endBlockingDeauthentication);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v31);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v6);
  return v29;
}

ICPaperAttachmentCreationHelper __swiftcall ICPaperAttachmentCreationHelper.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (ICPaperAttachmentCreationHelper)objc_msgSend(v0, sel_init);
}

id ICPaperAttachmentCreationHelper.init()()
{
  v1.super_class = (Class)ICPaperAttachmentCreationHelper;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_1C3D360D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_1C3DB88F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388240);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v19 = a1;
  v10(v6, a1, v3);
  swift_retain();
  sub_1C3DB99B8();
  sub_1C3DB9688();
  uint64_t v11 = sub_1C3DB96C8();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18, v9, v11);
  }
  sub_1C3C2A448((uint64_t)v9, &qword_1EA388240);
  type metadata accessor for ICPaperDocumentError(0);
  uint64_t v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  *(void *)(inited + 32) = sub_1C3DB9C38();
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 72) = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  v10((char *)boxed_opaque_existential_1, v19, v3);
  sub_1C3C81620(inited);
  sub_1C3D37024((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  sub_1C3DB8768();
  return swift_willThrow();
}

void sub_1C3D3638C()
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = self;
  id v1 = objc_msgSend(v0, sel_defaultManager);
  uint64_t v2 = (void *)sub_1C3DB8848();
  uint64_t v3 = (void *)sub_1C3DB8848();
  v14[0] = 0;
  unsigned int v4 = objc_msgSend(v1, sel_linkItemAtURL_toURL_error_, v2, v3, v14);

  if (v4)
  {
    id v5 = v14[0];
  }
  else
  {
    id v6 = v14[0];
    uint64_t v7 = (void *)sub_1C3DB8798();

    swift_willThrow();
    id v8 = objc_msgSend(v0, sel_defaultManager);
    uint64_t v9 = (void *)sub_1C3DB8848();
    uint64_t v10 = (void *)sub_1C3DB8848();
    v14[0] = 0;
    unsigned int v11 = objc_msgSend(v8, sel_copyItemAtURL_toURL_error_, v9, v10, v14);

    if (v11)
    {
      id v12 = v14[0];
    }
    else
    {
      id v13 = v14[0];
      sub_1C3DB8798();

      swift_willThrow();
    }
  }
}

uint64_t sub_1C3D3656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a1;
  uint64_t v28 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB88F8();
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C3DB9A28();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC000);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB9A18();
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v30 = a3;
  sub_1C3DB96C8();
  sub_1C3D37024(&qword_1EA3879E8, MEMORY[0x1E4F83C98]);
  uint64_t v17 = v32;
  uint64_t result = sub_1C3DB9998();
  if (!v17)
  {
    uint64_t v26 = v11;
    uint64_t v27 = v14;
    uint64_t v32 = v13;
    uint64_t v19 = self;
    id v20 = objc_msgSend(v19, sel_sharedState);
    objc_msgSend(v20, sel_beginBlockingDeauthentication);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387B30);
    sub_1C3DB98C8();
    id v21 = objc_msgSend(v19, sel_sharedState);
    objc_msgSend(v21, sel_endBlockingDeauthentication);

    sub_1C3CFFF04(v28, (uint64_t)v8);
    uint64_t v22 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v32);
      return sub_1C3C2A448((uint64_t)v8, (uint64_t *)&unk_1EB6FC7E0);
    }
    else
    {
      id v23 = v26;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v8, v9);
      sub_1C3D3638C();
      uint64_t v24 = v32;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v24);
    }
  }
  return result;
}

uint64_t sub_1C3D36B60@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D3570C(*(void **)(v1 + 16), a1);
}

uint64_t type metadata accessor for ICPaperAttachmentCreationHelper(uint64_t a1)
{
  return sub_1C3C4C8B4(a1, &qword_1EA3881F8);
}

uint64_t sub_1C3D36B94()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  unsigned int v4 = (const void *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_1C3C4DAF4;
  uint64_t v6 = (uint64_t (*)(void *, uint64_t, const void *))((char *)&dword_1EA388200 + dword_1EA388200);
  return v6(v2, v3, v4);
}

uint64_t sub_1C3D36C58()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unsigned int v4 = (int *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_1C3C4DAF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA388600 + dword_1EA388600);
  return v6(v2, v3, v4);
}

uint64_t sub_1C3D36D1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C3C4DAF4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA388608 + dword_1EA388608);
  return v8(a1, v4, v5, v6);
}

uint64_t objectdestroy_18Tm()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3D36E34()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (const void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1C3C4DAF4;
  uint64_t v6 = (uint64_t (*)(void *, uint64_t, const void *))((char *)&dword_1EA388220 + dword_1EA388220);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_22Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3D36F3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C3C3259C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA388608 + dword_1EA388608);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1C3D37008@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D360D0(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C3D37024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NotesShared::TableFormat::Formats_optional sub_1C3D3707C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.value = TableFormat.Formats.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t ArgumentDecodable<>.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a6;
  uint64_t v10 = sub_1C3DBA938();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v33 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1C3DBA938();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v15);
  id v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v30 - v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, v35, AssociatedTypeWitness, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v24 = *(void *)(a3 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v17, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, AssociatedTypeWitness);
    uint64_t v25 = v34;
    sub_1C3DB9F48();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, AssociatedTypeWitness);
    uint64_t v24 = *(void *)(a3 - 8);
    uint64_t v26 = v24;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v25, 1, a3))
    {
      uint64_t v28 = v36;
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v36, v25, a3);
      uint64_t v27 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  }
  uint64_t v26 = v24;
  uint64_t v27 = 1;
  uint64_t v28 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
}

uint64_t static ArgumentDecodable<>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = &v20[-v14];
  sub_1C3DBAC98();
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = sub_1C3C34894((void (*)(char *, char *))sub_1C3D396B0, (uint64_t)v20, AssociatedTypeWitness, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], AssociatedConformanceWitness, MEMORY[0x1E4FBC278], v17);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  uint64_t v29 = v18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3D3BFE4((unint64_t *)&qword_1EA385FC0);
  sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  uint64_t v26 = 0;
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  uint64_t v29 = v27;
  unint64_t v30 = v28;
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  uint64_t v26 = 0;
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t static Optional<A>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D38C84(a1, a2, a3, a4);
}

uint64_t static Bool.defaultArgument.getter()
{
  return 0;
}

void sub_1C3D377D4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C3D377DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSb11NotesSharedE12fromArgumentSbSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t static String.defaultArgument.getter()
{
  return 0;
}

void sub_1C3D37818(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1C3D37824@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static Int.defaultArgument.getter()
{
  return 0;
}

Swift::Int_optional __swiftcall Int.init(fromArgument:)(Swift::String fromArgument)
{
  Swift::Int v1 = sub_1C3D3A7CC(fromArgument._countAndFlagsBits, (unint64_t)fromArgument._object);
  Swift::Bool v3 = v2 & 1;
  result.value = v1;
  result.is_nil = v3;
  return result;
}

uint64_t static Int.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

void sub_1C3D3787C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C3D37884@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1C3D3A7CC(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1C3D378B4()
{
  return sub_1C3D3BCF0();
}

uint64_t static Int64.defaultArgument.getter()
{
  return 0;
}

uint64_t static Int64.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

uint64_t sub_1C3D37910()
{
  return sub_1C3D3BCF0();
}

double static Float.defaultArgument.getter()
{
  return 0.0;
}

void __swiftcall Float.init(fromArgument:)(Swift::Float_optional *__return_ptr retstr, Swift::String fromArgument)
{
  unint64_t object = (unint64_t)fromArgument._object;
  if (((uint64_t)fromArgument._object & 0x1000000000000000) != 0
    || !((uint64_t)fromArgument._object & 0x2000000000000000 | fromArgument._countAndFlagsBits & 0x1000000000000000))
  {
    sub_1C3DBAC48();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x1F4188790](fromArgument._countAndFlagsBits);
    if ((object & 0x2000000000000000) != 0)
    {
      if (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0) {
        _swift_stdlib_strtof_clocale();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (object & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1C3DBADD8();
      }
      sub_1C3D3A124(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1C3D3BF24);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t static Float.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

void sub_1C3D37B0C(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C3D37B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v8 = 0;
  id v7[2] = &v8;
  char v4 = sub_1C3D3A00C((uint64_t)sub_1C3D3BEF8, (uint64_t)v7, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  int v6 = v8;
  if ((v4 & 1) == 0) {
    int v6 = 0;
  }
  *(_DWORD *)a3 = v6;
  *(unsigned char *)(a3 + 4) = (v4 & 1) == 0;
  return result;
}

uint64_t sub_1C3D37BA4()
{
  return sub_1C3D3BCF0();
}

double static Double.defaultArgument.getter()
{
  return 0.0;
}

Swift::Double_optional __swiftcall Double.init(fromArgument:)(Swift::String fromArgument)
{
  unint64_t object = (unint64_t)fromArgument._object;
  if (((uint64_t)fromArgument._object & 0x1000000000000000) != 0
    || !((uint64_t)fromArgument._object & 0x2000000000000000 | fromArgument._countAndFlagsBits & 0x1000000000000000))
  {
    sub_1C3DBAC48();
    swift_bridgeObjectRelease();
    char v5 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](fromArgument._countAndFlagsBits);
    if ((object & 0x2000000000000000) != 0)
    {
      char v5 = (v2 > 0x20u || ((0x100003E01uLL >> v2) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v2 & 0x1000000000000000) != 0)
      {
        uint64_t v3 = (object & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v3 = sub_1C3DBADD8();
      }
      char v5 = sub_1C3D3A124(v3, v4, (void (*)(uint64_t *__return_ptr))sub_1C3D3BF24);
      swift_bridgeObjectRelease();
    }
  }
  if (v5) {
    Swift::Bool v8 = 0;
  }
  else {
    Swift::Bool v8 = 0;
  }
  result.value = v6;
  result.is_nil = v8;
  return result;
}

uint64_t static Double.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

uint64_t sub_1C3D37D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  id v7[2] = &v8;
  char v4 = sub_1C3D3A00C((uint64_t)sub_1C3D3BF3C, (uint64_t)v7, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = v8;
  if ((v4 & 1) == 0) {
    uint64_t v6 = 0;
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = (v4 & 1) == 0;
  return result;
}

uint64_t sub_1C3D37E24()
{
  return sub_1C3D3BCF0();
}

uint64_t static Data.defaultArgument.getter()
{
  return 0;
}

uint64_t Data.init(fromArgument:)()
{
  uint64_t v0 = sub_1C3DB8918();
  unint64_t v2 = v1;
  sub_1C3D328F4(v0, v1);
  swift_bridgeObjectRelease();
  if (v2 >> 60 != 15) {
    sub_1C3CCDF74(v0, v2);
  }
  return v0;
}

uint64_t static Data.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

double sub_1C3D37EEC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C3DDB380;
  return result;
}

uint64_t sub_1C3D37EFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C3DB8918();
  unint64_t v4 = v3;
  sub_1C3D328F4(v2, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 >> 60 != 15) {
    uint64_t result = sub_1C3CCDF74(v2, v4);
  }
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C3D37F60()
{
  return sub_1C3D3BCF0();
}

uint64_t Date.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v38 = sub_1C3DB8988();
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3DB8A68();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v40 = (char *)&v37 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  long long v41 = (char *)&v37 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v42 = (char *)&v37 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_1C3DB8AF8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  uint64_t v24 = sub_1C3DB9C98();
  uint64_t v25 = v23;
  if (v24 == 1953718640 && v23 == 0xE400000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v43;
    swift_bridgeObjectRelease();
    sub_1C3DB8998();
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v21, v18);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
  }
  if (v24 == 7827310 && v25 == 0xE300000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v43;
    swift_bridgeObjectRelease();
    _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
    goto LABEL_5;
  }
  if (v24 == 0x657275747566 && v25 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1C3DB8A08();
    uint64_t v26 = v43;
    goto LABEL_5;
  }
  char v28 = sub_1C3DBB3B8();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_14;
  }
  uint64_t v44 = v22;
  uint64_t v45 = a2;
  swift_bridgeObjectRetain();
  sub_1C3DB8308();
  sub_1C3D3C15C(&qword_1EA388248, MEMORY[0x1E4F278A8]);
  sub_1C3DB8B08();
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v30 = v29(v17, 0, 1, v18);
  uint64_t v31 = (uint64_t)v41;
  uint64_t v32 = (uint64_t)v39;
  uint64_t v44 = v22;
  uint64_t v45 = a2;
  MEMORY[0x1C8779800](v30);
  sub_1C3D3C15C(&qword_1EA388250, MEMORY[0x1E4F27860]);
  sub_1C3DB8B08();
  uint64_t v33 = (uint64_t)v40;
  uint64_t v34 = (uint64_t)v42;
  v29(v42, 0, 1, v18);
  sub_1C3C49904((uint64_t)v17, v33);
  sub_1C3C49904(v34, v32);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v35(v33, 1, v18) == 1)
  {
    sub_1C3C49904(v32, v31);
    sub_1C3C2A448(v33, &qword_1EB6FB1B8);
    if (v35(v31, 1, v18) != 1)
    {
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
LABEL_20:
      uint64_t v26 = v43;
      v36(v21, v31, v18);
      goto LABEL_5;
    }
  }
  else
  {
    sub_1C3C2A448(v32, &qword_1EB6FB1B8);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v36((char *)v31, v33, v18);
    v29((char *)v31, 0, 1, v18);
    if (v35(v31, 1, v18) != 1) {
      goto LABEL_20;
    }
  }
  sub_1C3C2A448(v31, &qword_1EB6FB1B8);
  return v29(v43, 1, 1, v18);
}

uint64_t static URL.defaultArgument.getter()
{
  return MEMORY[0x1F40E4938](47, 0xE100000000000000);
}

uint64_t URL.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C3D38704(a1, a2, (uint64_t *)&unk_1EB6FC7E0, MEMORY[0x1E4F276E8], MEMORY[0x1E4F276F0], a3);
}

uint64_t static URL.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

uint64_t sub_1C3D38678()
{
  return MEMORY[0x1F40E4938](47, 0xE100000000000000);
}

uint64_t sub_1C3D38684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3D388B4(a1, a2, a3, (uint64_t *)&unk_1EB6FC7E0, MEMORY[0x1E4F276E8], a4);
}

uint64_t sub_1C3D386A4()
{
  return sub_1C3D3BCF0();
}

uint64_t UUID.init(fromArgument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C3D38704(a1, a2, &qword_1EB6FC060, MEMORY[0x1E4F27970], MEMORY[0x1E4F27990], a3);
}

uint64_t sub_1C3D38704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v15 = a5(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1C3C2A448((uint64_t)v14, a3);
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a6, v14, v15);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a6, v17, 1, v15);
}

uint64_t static UUID.typeSummary(forName:)()
{
  return sub_1C3D3BCF0();
}

uint64_t sub_1C3D38894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3D388B4(a1, a2, a3, &qword_1EB6FC060, MEMORY[0x1E4F27970], a4);
}

uint64_t sub_1C3D388B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, void (*a5)(uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3))
  {
    sub_1C3C2A448((uint64_t)v14, a4);
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a6, v14, a3);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a6, v16, 1, a3);
}

uint64_t sub_1C3D38A08()
{
  return sub_1C3D3BCF0();
}

uint64_t static Optional<A>.defaultArgument.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t Optional<A>.init(fromArgument:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  (*(void (**)(void))(a1 + 24))();
  uint64_t v3 = sub_1C3DBA938();
  unint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 0, 1, v3);
}

uint64_t sub_1C3D38AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Optional<A>.defaultArgument.getter(*(void *)(a1 + 16), a2);
}

uint64_t sub_1C3D38AF8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return Optional<A>.init(fromArgument:)(*(void *)(a1 - 8), a2);
}

uint64_t sub_1C3D38B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.typeSummary(forName:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t static Array<A>.defaultArgument.getter()
{
  return sub_1C3DBA098();
}

uint64_t Array<A>.init(fromArgument:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1C3C811E0(MEMORY[0x1E4FBC860]);
  type metadata accessor for ArgumentDecoder.Decoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = sub_1C3C81304(v4);
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v7 = swift_retain();
  sub_1C3C8DCAC(v7, v4, a1, a2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3D3BFE4(&qword_1EA388258);
  uint64_t v8 = sub_1C3DB9EC8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static Array<A>.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D38C84(a1, a2, a3, a4);
}

uint64_t sub_1C3D38C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a4 + 32))();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C3D38E30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Array<A>.defaultArgument.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D38E5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Array<A>.init(fromArgument:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D38E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Array<A>.typeSummary(forName:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t static Set<>.defaultArgument.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C3DBA098();
  if (MEMORY[0x1C877B620](v5, a1)) {
    uint64_t v6 = sub_1C3D3AA9C(v5, a1, a3);
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Set<>.init(fromArgument:)(uint64_t a1, unint64_t a2)
{
  uint64_t result = Array<A>.init(fromArgument:)(a1, a2);
  if (result)
  {
    sub_1C3DBA128();
    swift_getWitnessTable();
    return sub_1C3DBA498();
  }
  return result;
}

uint64_t sub_1C3D38F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = static Set<>.defaultArgument.getter(*(void *)(a1 + 16), a2, *(void *)(a1 + 24));
  *a3 = result;
  return result;
}

uint64_t sub_1C3D38FC4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Set<>.init(fromArgument:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D38FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Set<>.typeSummary(forName:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t static ArgumentDecodable<>.defaultArgument.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = sub_1C3DBA938();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(AssociatedTypeWitness, a2);
  sub_1C3DB9F48();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v14 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, a1) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v11, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_1C3D3924C()
{
  return 0;
}

uint64_t sub_1C3D39450@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v10 = a2;
  v9[1] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v5 = (char *)v9 - v4;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  uint64_t v15 = 35;
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9F38();
  sub_1C3DBB398();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  uint64_t v15 = 0;
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v7 = v14;
  uint64_t v8 = v10;
  *uint64_t v10 = v13;
  v8[1] = v7;
  return result;
}

uint64_t sub_1C3D396B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C3D39450(a1, a2);
}

void *sub_1C3D396D8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC4B0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C3D39740(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C3DB9E18();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C877B2C0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1C3D397BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C3DB9E78();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C3D39B20();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1C3DBADD8();
  }
LABEL_7:
  uint64_t v11 = sub_1C3D398A4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C3D398A4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C3D39B20()
{
  unint64_t v0 = sub_1C3DB9E88();
  uint64_t v4 = sub_1C3D39BA0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C3D39BA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1C3D39CF8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1C3D396D8(v9, 0);
      unint64_t v12 = sub_1C3D39DF8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C3DBADD8();
LABEL_4:
        JUMPOUT(0x1C877B200);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C877B200](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C877B200]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1C3D39CF8(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1C3D39740(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1C3D39740(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1C3D39DF8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1C3D39740(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1C3DB9DD8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1C3DBADD8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1C3D39740(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C3DB9DA8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C3D3A00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[2];
  uint64_t v13;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    unint64_t v10 = sub_1C3DBAC48();
    if (!v4) {
      unint64_t v10 = BYTE1(v13);
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v12[0] = v5;
      v12[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v10 = v7(&v13, v12);
      if (!v4) {
        unint64_t v10 = v13;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_1C3DBADD8();
      }
      unint64_t v10 = sub_1C3D3A124(v8, v9, (void (*)(uint64_t *__return_ptr))sub_1C3D3BF24);
    }
  }
  return v10 & 1;
}

uint64_t sub_1C3D3A124(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t _sSS11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  return 0;
}

uint64_t _sSb11NotesSharedE12fromArgumentSbSgSS_tcfC_0()
{
  uint64_t v0 = sub_1C3DB9C98();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 7562617 && v2 == 0xE300000000000000
    || (sub_1C3DBB3B8() & 1) != 0
    || v0 == 1702195828 && v2 == 0xE400000000000000
    || (sub_1C3DBB3B8() & 1) != 0
    || v0 == 49 && v2 == 0xE100000000000000
    || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v0 == 28526 && v2 == 0xE200000000000000 {
         || (sub_1C3DBB3B8() & 1) != 0
  }
         || v0 == 0x65736C6166 && v2 == 0xE500000000000000
         || (sub_1C3DBB3B8() & 1) != 0
         || v0 == 48 && v2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v4 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v4 & 1) == 0) {
      return 2;
    }
  }
  return result;
}

uint64_t sub_1C3D3A7CC(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1C3DBADD8();
      }
      uint64_t v7 = (uint64_t)sub_1C3D398A4(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_44;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_57;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v10 = v3 - 3;
        if (v10)
        {
          uint64_t v11 = (unsigned __int8 *)v23 + 3;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              goto LABEL_31;
            }
            uint64_t v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_31;
            }
            uint64_t v7 = v13 + v12;
            if (__OFADD__(v13, v12)) {
              goto LABEL_31;
            }
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v9 = 0;
              uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v7 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v18 = v3 - 3;
              if (!v18) {
                goto LABEL_43;
              }
              char v19 = (unsigned __int8 *)v23 + 3;
              while (1)
              {
                unsigned int v20 = *v19 - 48;
                if (v20 > 9) {
                  break;
                }
                uint64_t v21 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  break;
                }
                uint64_t v7 = v21 - v20;
                if (__OFSUB__(v21, v20)) {
                  break;
                }
                char v9 = 0;
                ++v19;
                if (!--v18) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v14 = v3 - 2;
        if (v14)
        {
          uint64_t v15 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              goto LABEL_31;
            }
            uint64_t v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_31;
            }
            uint64_t v7 = v17 + v16;
            if (__OFADD__(v17, v16)) {
              goto LABEL_31;
            }
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v9 = 0;
    goto LABEL_44;
  }
  uint64_t v7 = (uint64_t)sub_1C3D397BC(result, a2, 10);
  char v9 = v22;
LABEL_44:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1C3D3AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  char v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1C877B5E0](v13))
  {
    sub_1C3DBAC38();
    uint64_t v16 = sub_1C3DBAC28();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1C877B620](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_1C3DBA0B8();
    sub_1C3DBA058();
    if (v18)
    {
      char v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1C3DBAD08();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      char v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1C3DB9B08();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1C3DB9BE8();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t _s10Foundation4DateV11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  return 0;
}

uint64_t sub_1C3D3B5E4()
{
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C3C9D1E0(0, 3, 0);
  uint64_t v0 = v20;
  uint64_t v1 = sub_1C3D3924C();
  uint64_t v3 = v2;
  unint64_t v5 = *(void *)(v20 + 16);
  unint64_t v4 = *(void *)(v20 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1C3C9D1E0(v4 > 1, v5 + 1, 1);
    uint64_t v0 = v20;
  }
  *(void *)(v0 + 16) = v5 + 1;
  uint64_t v6 = v0 + 16 * v5;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = sub_1C3D3924C();
  uint64_t v9 = v8;
  unint64_t v11 = *(void *)(v0 + 16);
  unint64_t v10 = *(void *)(v0 + 24);
  if (v11 >= v10 >> 1) {
    sub_1C3C9D1E0(v10 > 1, v11 + 1, 1);
  }
  *(void *)(v0 + 16) = v11 + 1;
  uint64_t v12 = v0 + 16 * v11;
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v9;
  uint64_t v13 = sub_1C3D3924C();
  uint64_t v15 = v14;
  unint64_t v17 = *(void *)(v0 + 16);
  unint64_t v16 = *(void *)(v0 + 24);
  if (v17 >= v16 >> 1) {
    sub_1C3C9D1E0(v16 > 1, v17 + 1, 1);
  }
  *(void *)(v0 + 16) = v17 + 1;
  uint64_t v18 = v0 + 16 * v17;
  *(void *)(v18 + 32) = v13;
  *(void *)(v18 + 40) = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3D3BFE4((unint64_t *)&qword_1EA385FC0);
  sub_1C3DB9B88();
  swift_release();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _sSb11NotesSharedE11typeSummary7forNameS2S_tFZ_0()
{
  return 0;
}

uint64_t sub_1C3D3BCF0()
{
  return 0;
}

unsigned char *sub_1C3D3BEF8@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C3D3C2DC(a1, MEMORY[0x1E4FBC880], a2);
}

void *sub_1C3D3BF24@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C3D3C354(a1);
}

unsigned char *sub_1C3D3BF3C@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C3D3C2DC(a1, MEMORY[0x1E4FBC878], a2);
}

uint64_t sub_1C3D3BF68(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_bridgeObjectRetain();
  return v6(v4, v5, v2, v3);
}

uint64_t sub_1C3D3BFE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EA386E30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C3D3C02C(uint64_t a1)
{
  unint64_t result = sub_1C3D0680C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C054(uint64_t a1)
{
  uint64_t result = sub_1C3D3C15C(&qword_1EA3864B0, MEMORY[0x1E4F27928]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C0AC(uint64_t a1)
{
  uint64_t result = sub_1C3D3C15C(&qword_1EA388260, MEMORY[0x1E4F276F0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C104(uint64_t a1)
{
  uint64_t result = sub_1C3D3C15C(&qword_1EA386F28, MEMORY[0x1E4F27990]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C15C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3D3C1A4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C1F8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C3D3C24C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of static ArgumentDecodable.defaultArgument.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArgumentDecodable.init(fromArgument:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static ArgumentDecodable.typeSummary(forName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unsigned char *sub_1C3D3C2DC@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  v8 = v7 && (uint64_t result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_1C3D3C354@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t RealtimeCollaborationSelectionDocument.localParticipantID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_localParticipantID;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id RealtimeCollaborationSelectionDocument.__allocating_init(identity:localParticipantID:)(char *a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  return RealtimeCollaborationSelectionDocument.init(identity:localParticipantID:)(a1, a2);
}

id RealtimeCollaborationSelectionDocument.init(identity:localParticipantID:)(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections] = MEMORY[0x1E4FBC860];
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v3[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_localParticipantID], a2, v7);
  id v11 = objc_msgSend(objc_allocWithZone((Class)ICCRVectorTimestamp), sel_init);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v12 = (void *)sub_1C3DB8B38();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  v24.receiver = v3;
  v24.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v24, sel_initWithVersion_startVersion_rootObject_replica_, v11, 0, 0, v12);

  void v23[3] = ObjectType;
  v23[0] = v14;
  id v15 = v14;
  unint64_t v16 = (void *)sub_1C3C47950((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  type metadata accessor for RealtimeCollaborationSelectionDocument.State();
  id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v18 = v15;
  id v19 = v16;
  uint64_t v20 = (void *)sub_1C3DB8B38();
  id v21 = objc_msgSend(v17, sel_initWithDocument_identity_, v19, v20);

  objc_msgSend(v18, sel_setRootObject_, v21);
  v13(a2, v7);
  v13(a1, v7);
  return v18;
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*RealtimeCollaborationSelectionDocument.ParticipantSelection.participantID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1
                  + *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0)
                           + 20));
  return swift_retain();
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, qword_1EB6FBD60);
}

uint64_t RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0) + 20);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = v2;
  return result;
}

void (*RealtimeCollaborationSelectionDocument.ParticipantSelection.selection.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t static RealtimeCollaborationSelectionDocument.ParticipantSelection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_1C3DB8B48())
  {
    uint64_t v4 = *(int *)(type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0) + 20);
    uint64_t v5 = *(void *)(a1 + v4);
    unint64_t v8 = *(void *)(a2 + v4);
    uint64_t v9 = v5;
    char v6 = _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0(&v9, &v8);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C3D3C8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1C3DB8B48())
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = *(void *)(a1 + v6);
    unint64_t v10 = *(void *)(a2 + v6);
    uint64_t v11 = v7;
    char v8 = _s11NotesShared38RealtimeCollaborationSelectionDocumentC0E0O2eeoiySbAE_AEtFZ_0(&v11, &v10);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t RealtimeCollaborationSelectionDocument.selections.getter()
{
  return swift_bridgeObjectRetain();
}

void RealtimeCollaborationSelectionDocument.mergeLocalSelection(_:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *a1;
  id v6 = objc_msgSend(v2, sel_rootObject);
  if (v6
    && (uint64_t v7 = v6,
        id v8 = objc_msgSend(v6, sel_participantIDsToSelectionRegisters),
        v7,
        uint64_t v9 = (void *)sub_1C3DB8B38(),
        id v10 = objc_msgSend(v8, sel_objectForKeyedSubscript_, v9),
        v8,
        v9,
        v10))
  {
    id v11 = objc_msgSend(v10, sel_contents);

    if (v11)
    {
      long long v47 = xmmword_1C3DD97F0;
      sub_1C3DB8948();

      id v11 = 0;
    }
  }
  else
  {
    id v11 = 0;
  }
  if ((~v5 & 0xF000000000000007) != 0)
  {
    *(void *)&long long v47 = v5;
    uint64_t v12 = sub_1C3C911D8();
    unint64_t v13 = v14;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  id v15 = objc_msgSend(v2, sel_rootObject);
  if (!v15)
  {
    sub_1C3CCDF74(v12, v13);
    sub_1C3CCDF74((uint64_t)v11, 0xF000000000000000);
    return;
  }
  unint64_t v16 = v15;
  if (v13 >> 60 == 15)
  {

    return;
  }
  sub_1C3D328F4(v12, v13);
  sub_1C3D328F4((uint64_t)v11, 0xF000000000000000);
  sub_1C3CCDF74(v12, v13);
  sub_1C3CCDF74((uint64_t)v11, 0xF000000000000000);
  uint64_t v46 = (uint64_t)v11;
  uint64_t v44 = ObjectType;
  id v17 = objc_msgSend(v2, sel_version);
  objc_msgSend(v17, sel_copy);

  sub_1C3DBAA68();
  swift_unknownObjectRelease();
  uint64_t v45 = (void *)sub_1C3C47BB0((uint64_t)&v47);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
  id v18 = objc_msgSend(v16, sel_participantIDsOrder);
  id v19 = (void *)sub_1C3DB8B38();
  unsigned int v20 = objc_msgSend(v18, sel_containsObject_, v19);

  id v21 = objc_msgSend(v16, sel_participantIDsOrder);
  uint64_t v22 = (void *)sub_1C3DB8B38();
  if (v20)
  {
    id v23 = objc_msgSend(v16, sel_participantIDsOrder);
    objc_super v24 = (char *)objc_msgSend(v23, sel_count);

    if (__OFSUB__(v24, 1))
    {
      __break(1u);
      return;
    }
    objc_msgSend(v21, sel_moveObject_toIndex_, v22, v24 - 1);
  }
  else
  {
    objc_msgSend(v21, sel_addObject_, v22);
  }

  id v25 = objc_msgSend(v16, sel_participantIDsToSelectionRegisters);
  unint64_t v26 = (void *)sub_1C3DB8B38();
  id v27 = objc_msgSend(v25, sel_objectForKeyedSubscript_, v26);

  if (v27)
  {
    sub_1C3D328F4(v12, v13);
    id v28 = v27;
    id v29 = (id)sub_1C3DB8938();
    sub_1C3CCDF74(v12, v13);
    objc_msgSend(v28, sel_setContents_, v29);
  }
  else
  {
    uint64_t v48 = v44;
    *(void *)&long long v47 = v2;
    uint64_t v30 = v2;
    uint64_t v31 = (void *)sub_1C3C47950((uint64_t)&v47);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v47);
    id v28 = objc_msgSend(v16, sel_participantIDsToSelectionRegisters);
    char v32 = (void *)sub_1C3DB8B38();
    sub_1C3CE0C34(v12, v13);
    uint64_t v33 = (void *)sub_1C3DB8938();
    sub_1C3CCDF74(v12, v13);
    id v29 = objc_msgSend(objc_allocWithZone((Class)ICCRRegisterLatest), sel_initWithContents_document_, v33, v31);

    objc_msgSend(v28, sel_setObject_forKeyedSubscript_, v29, v32);
  }

  id v34 = objc_msgSend(v2, sel_deltaSince_, v45);
  if (v34)
  {
    unint64_t v35 = v34;
    sub_1C3DB8958();
  }
  id v36 = objc_msgSend(v2, sel_rootObject);
  if (v36)
  {
    uint64_t v37 = v36;
    id v38 = objc_msgSend(v36, sel_participantIDsOrder);

    id v39 = objc_msgSend(v38, sel_allObjects);
    sub_1C3D3DD68();
    unint64_t v40 = sub_1C3DBA018();

    uint64_t v41 = v2;
    unint64_t v42 = sub_1C3D3DDA8(v40, v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v42 = MEMORY[0x1E4FBC860];
  }
  uint64_t v43 = (unint64_t *)&v2[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *uint64_t v43 = v42;

  swift_bridgeObjectRelease();
  sub_1C3CCDF74(v12, v13);
  sub_1C3CCDF74(v46, 0xF000000000000000);
}

uint64_t RealtimeCollaborationSelectionDocument.removeSelection(forParticipantID:)()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_rootObject);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_participantIDsOrder);
  uint64_t v5 = (void *)sub_1C3DB8B38();
  unsigned int v6 = objc_msgSend(v4, sel_containsObject_, v5);

  if (!v6)
  {

    return 0;
  }
  id v7 = objc_msgSend(v0, sel_version);
  objc_msgSend(v7, sel_copy);

  sub_1C3DBAA68();
  swift_unknownObjectRelease();
  id v8 = (void *)sub_1C3C47BB0((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  id v9 = objc_msgSend(v3, sel_participantIDsOrder);
  id v10 = (void *)sub_1C3DB8B38();
  objc_msgSend(v9, sel_removeObject_, v10);

  id v11 = objc_msgSend(v3, sel_participantIDsToSelectionRegisters);
  uint64_t v12 = (void *)sub_1C3DB8B38();
  objc_msgSend(v11, sel_setObject_forKeyedSubscript_, 0, v12);

  id v13 = objc_msgSend(v1, sel_deltaSince_, v8);
  if (v13)
  {
    unint64_t v14 = v13;
    uint64_t v15 = sub_1C3DB8958();
  }
  else
  {

    uint64_t v15 = 0;
  }
  id v16 = objc_msgSend(v1, sel_rootObject);
  if (v16)
  {
    id v17 = v16;
    id v18 = objc_msgSend(v16, sel_participantIDsOrder);

    id v19 = objc_msgSend(v18, sel_allObjects);
    sub_1C3D3DD68();
    unint64_t v20 = sub_1C3DBA018();

    id v21 = v1;
    unint64_t v22 = sub_1C3D3DDA8(v20, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v22 = MEMORY[0x1E4FBC860];
  }
  id v23 = (unint64_t *)&v1[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *id v23 = v22;

  swift_bridgeObjectRelease();
  return v15;
}

id RealtimeCollaborationSelectionDocument.merge(with:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = (void *)sub_1C3DB8938();
  v13.receiver = v0;
  v13.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v13, sel_mergeWithData_, v2);

  id v4 = objc_msgSend(v0, sel_rootObject);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_participantIDsOrder);

    id v7 = objc_msgSend(v6, sel_allObjects);
    sub_1C3D3DD68();
    unint64_t v8 = sub_1C3DBA018();

    id v9 = v0;
    unint64_t v10 = sub_1C3D3DDA8(v8, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  id v11 = (unint64_t *)&v0[OBJC_IVAR____TtC11NotesShared38RealtimeCollaborationSelectionDocument_selections];
  swift_beginAccess();
  *id v11 = v10;
  swift_bridgeObjectRelease();
  return v3;
}

id RealtimeCollaborationSelectionDocument.__allocating_init(replica:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  id v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4) != 1)
  {
    id v6 = (void *)sub_1C3DB8B38();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  id v7 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReplica_, v6);

  return v7;
}

void RealtimeCollaborationSelectionDocument.init(replica:)()
{
}

id RealtimeCollaborationSelectionDocument.__allocating_init(version:rootObject:replica:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a3, 1, v8) != 1)
  {
    unint64_t v10 = (void *)sub_1C3DB8B38();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  id v11 = objc_msgSend(objc_allocWithZone(v4), sel_initWithVersion_rootObject_replica_, a1, a2, v10);

  return v11;
}

void RealtimeCollaborationSelectionDocument.init(version:rootObject:replica:)()
{
}

id RealtimeCollaborationSelectionDocument.__allocating_init(version:startVersion:rootObject:replica:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C3DB8B98();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a4, 1, v10) != 1)
  {
    uint64_t v12 = (void *)sub_1C3DB8B38();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  }
  id v13 = objc_msgSend(objc_allocWithZone(v5), sel_initWithVersion_startVersion_rootObject_replica_, a1, a2, a3, v12);

  return v13;
}

void RealtimeCollaborationSelectionDocument.init(version:startVersion:rootObject:replica:)()
{
}

id RealtimeCollaborationSelectionDocument.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RealtimeCollaborationSelectionDocument.init()()
{
}

id RealtimeCollaborationSelectionDocument.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C3D3DD68()
{
  unint64_t result = qword_1EA388268;
  if (!qword_1EA388268)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388268);
  }
  return result;
}

unint64_t sub_1C3D3DDA8(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  id v40 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388280);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0);
  uint64_t v35 = *(void *)(v42 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v42);
  uint64_t v39 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (uint64_t)&v31 - v10;
  unint64_t v32 = a1;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1C3DBAFB8())
  {
    unint64_t v31 = v3;
    unint64_t v3 = v32;
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    unint64_t v38 = v32 & 0xC000000000000001;
    id v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    long long v33 = xmmword_1C3DD97F0;
    while (1)
    {
      id v14 = v38 ? (id)MEMORY[0x1C877C220](v13 - 4, v3) : *(id *)(v3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v17 = objc_msgSend(v40, sel_rootObject);
      if (!v17) {
        goto LABEL_14;
      }
      id v18 = v17;
      id v19 = objc_msgSend(v17, sel_participantIDsToSelectionRegisters);

      id v20 = objc_msgSend(v19, sel_objectForKeyedSubscript_, v15);
      if (!v20) {
        goto LABEL_14;
      }
      id v21 = objc_msgSend(v20, sel_contents);

      if (v21
        && (long long v41 = v33,
            sub_1C3DB8948(),
            v21,
            unint64_t v22 = *((void *)&v41 + 1),
            *((void *)&v41 + 1) >> 60 != 15))
      {
        uint64_t v28 = v41;
        sub_1C3CE0C34(v41, *((unint64_t *)&v41 + 1));
        sub_1C3C91484(v28, v22, &v41);
        uint64_t v29 = v41;
        if ((~(void)v41 & 0xF000000000000007) != 0)
        {
          sub_1C3DB8B58();
          sub_1C3CCDF74(v28, v22);
          uint64_t v23 = 0;
          *(void *)&v7[*(int *)(v42 + 20)] = v29;
        }
        else
        {
          sub_1C3CCDF74(v28, v22);
          uint64_t v23 = 1;
        }
        unint64_t v3 = v32;
      }
      else
      {
LABEL_14:
        uint64_t v23 = 1;
      }
      uint64_t v24 = v42;
      (*v37)(v7, v23, 1, v42);

      if ((*v36)(v7, 1, v24) == 1)
      {
        sub_1C3D3E8A0((uint64_t)v7);
      }
      else
      {
        uint64_t v25 = v34;
        sub_1C3D3E900((uint64_t)v7, v34);
        sub_1C3D3E900(v25, v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C3D83504(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v27 = *(void *)(v12 + 16);
        unint64_t v26 = *(void *)(v12 + 24);
        if (v27 >= v26 >> 1) {
          unint64_t v12 = sub_1C3D83504(v26 > 1, v27 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v27 + 1;
        sub_1C3D3E900(v39, v12+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v27);
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3D3E1F0()
{
  return type metadata accessor for RealtimeCollaborationSelectionDocument(0);
}

uint64_t type metadata accessor for RealtimeCollaborationSelectionDocument(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA388270);
}

uint64_t sub_1C3D3E218()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RealtimeCollaborationSelectionDocument(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RealtimeCollaborationSelectionDocument);
}

uint64_t dispatch thunk of RealtimeCollaborationSelectionDocument.__allocating_init(identity:localParticipantID:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C3DB8B98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D3E658);
}

uint64_t sub_1C3D3E658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    int v11 = (v10 >> 57) & 0x18 | v10 & 7;
    unsigned int v12 = 128 - (((v10 >> 57) >> 5) | (4 * v11));
    if (v11) {
      return v12;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for RealtimeCollaborationSelectionDocument.ParticipantSelection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D3E740);
}

uint64_t sub_1C3D3E740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (-(int)a2 >> 2) & 0x1F | (32 * (-(int)a2 & 0x7F));
    *(void *)(a1 + *(int *)(a4 + 20)) = (v11 | (v11 << 57)) & 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1C3D3E80C()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C3D3E8A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3D3E900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static CommandRunner.commandLineArguments.getter()
{
  uint64_t v0 = sub_1C3DBABE8();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C3DBB428();
  swift_unknownObjectRetain_n();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(v2 + 16);
  swift_release();
  if (v3 == v1 - (v1 != 0))
  {
    uint64_t v4 = swift_dynamicCastClass();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C3C56B08(v0, v0 + 32, v1 != 0, (2 * v1) | 1);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CommandRunner.commands.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CommandRunner.__allocating_init(for:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t CommandRunner.init(for:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t CommandRunner.run(arguments:)(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  v2[23] = *v1;
  return MEMORY[0x1F4188298](sub_1C3D3EAD8, 0, 0);
}

uint64_t sub_1C3D3EAD8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[21];
  uint64_t v3 = *(void *)(v1 + 80);
  v0[24] = v3;
  uint64_t v4 = *(void *)(v1 + 88);
  v0[25] = v4;
  static Commands.command(from:)(v2, v3, v4, v0 + 2);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v5);
  uint64_t v9 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 48) + **(int **)(v6 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[26] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C3D3ECE0;
  return v9(v0 + 17, v5, v6);
}

uint64_t sub_1C3D3ECE0()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3D3EF84;
  }
  else {
    uint64_t v2 = sub_1C3D3EDF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D3EDF4()
{
  sub_1C3C49A14(v0 + 16, v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388138);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
    sub_1C3D3F098(v0 + 136);
    if (v1)
    {
      uint64_t v2 = 1;
      uint64_t v3 = (FILE *)sub_1C3DB9188();
LABEL_6:
      sub_1C3DB9D68();
      uint64_t v5 = sub_1C3DB9CB8();
      swift_bridgeObjectRelease();
      fputs((const char *)(v5 + 32), v3);
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
      swift_release();
      goto LABEL_10;
    }
    uint64_t v2 = 1;
  }
  else
  {
    sub_1C3D3F098(v0 + 136);
    if (v4)
    {
      uint64_t v3 = (FILE *)sub_1C3DB9198();
      uint64_t v2 = 0;
      goto LABEL_6;
    }
    uint64_t v2 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
LABEL_10:
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v2);
}

uint64_t sub_1C3D3EF84()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 216);
  sub_1C3D40094(v1);
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v2 = (FILE *)sub_1C3DB9188();
  uint64_t v3 = sub_1C3DB9CB8();
  swift_bridgeObjectRelease();
  fputs((const char *)(v3 + 32), v2);

  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(1);
}

uint64_t CommandRunner.deinit()
{
  return v0;
}

uint64_t CommandRunner.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C3D3F098(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v32 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v32 - v10;
  sub_1C3C4BC70(a1, (uint64_t)v33);
  uint64_t v12 = 0;
  if (swift_dynamicCast()) {
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    if (LOBYTE(v32[0])) {
      uint64_t v12 = 5457241;
    }
    else {
      uint64_t v12 = 20302;
    }
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v15 = v32[0];
    unint64_t v14 = v32[1];
    swift_bridgeObjectRelease();
    uint64_t v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16)
    {
      uint64_t v12 = 0;
      goto LABEL_6;
    }
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v11, v2);
    if (sub_1C3DB87B8())
    {
      uint64_t v12 = sub_1C3DB88A8();
      id v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v9, v2);
      v17(v11, v2);
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v9, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      uint64_t v12 = sub_1C3DB87E8();
      v31(v6, v2);
    }
    goto LABEL_6;
  }
  sub_1C3C4BC70(a1, (uint64_t)v32);
  uint64_t v12 = sub_1C3DB9C88();
  unint64_t v19 = v18;
  if ((sub_1C3DB9E28() & 1) == 0 || (sub_1C3DB9E38() & 1) == 0) {
    goto LABEL_6;
  }
  unint64_t v20 = sub_1C3DB9D18();
  unint64_t v21 = sub_1C3CD2318(v20, v12, v19);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C3DB9D18();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1C3DBA968();
    if (v22) {
      unint64_t v23 = v21;
    }
    else {
      unint64_t v23 = result;
    }
    if (v23 >> 14 >= v21 >> 14)
    {
      uint64_t v24 = sub_1C3DBA988();
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x1C877B1D0](v24, v26, v28, v30);
      swift_bridgeObjectRelease();
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      return v12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D3F4A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v12;
    do
    {
      sub_1C3C49A14(v4, (uint64_t)&v13);
      __swift_project_boxed_opaque_existential_1(&v13, v15);
      uint64_t v5 = sub_1C3DBB758();
      uint64_t v7 = v6;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D1E0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v12;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C3C9D1E0(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v12;
      }
      *(void *)(v2 + 16) = v9 + 1;
      uint64_t v10 = v2 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  uint64_t v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3CC51E4();
  sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C3DB9D68();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9B58();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1C3D3F864(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = 0xD00000000000001ELL;
  uint64_t v3 = sub_1C3DBAD68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DBAD78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (long long *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  int v11 = (*(uint64_t (**)(long long *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x1E4FBBA70] || v11 == *MEMORY[0x1E4FBBA80])
  {
    (*(void (**)(long long *, uint64_t))(v8 + 96))(v10, v7);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, (char *)v10 + *(int *)(v12 + 48), v3);
    unint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1C3DBAC68();
    uint64_t v13 = sub_1C3DBAD58();
    uint64_t v14 = sub_1C3D3F4A0(v13);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v31 = v14;
    unint64_t v32 = v16;
    sub_1C3DB9D68();
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v28 = 35;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DBB798();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    uint64_t v28 = 0;
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    unint64_t v2 = v31;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else if (v11 == *MEMORY[0x1E4FBBA68])
  {
    (*(void (**)(long long *, uint64_t))(v8 + 96))(v10, v7);
    unint64_t v18 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388318) + 48);
    sub_1C3C4C684(v10, (uint64_t)&v31);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v18, v3);
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1C3DBAC68();
    uint64_t v19 = sub_1C3DBAD58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386EE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    sub_1C3C49A14((uint64_t)&v31, inited + 32);
    uint64_t v29 = v19;
    sub_1C3D791BC(inited);
    uint64_t v21 = sub_1C3D3F4A0(v29);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v21;
    unint64_t v30 = v23;
    sub_1C3DB9D68();
    unint64_t v2 = v29;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v31);
  }
  else if (v11 == *MEMORY[0x1E4FBBA78])
  {
    (*(void (**)(long long *, uint64_t))(v8 + 96))(v10, v7);
    (*(void (**)(char *, long long *, uint64_t))(v4 + 32))(v6, v10, v3);
    unint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1C3DBAC68();
    uint64_t v24 = sub_1C3DBAD58();
    uint64_t v25 = sub_1C3D3F4A0(v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v31 = v25;
    unint64_t v32 = v27;
    sub_1C3DB9D68();
    unint64_t v2 = v31;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(long long *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v2;
}

uint64_t sub_1C3D40094(void *a1)
{
  uint64_t v2 = sub_1C3DBAD78();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18[-1] - v7;
  *(void *)&long long v19 = a1;
  id v9 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    unint64_t v10 = sub_1C3D3F864((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {

    id v20 = a1;
    id v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388310);
    if (swift_dynamicCast())
    {
      sub_1C3C4C684(&v19, (uint64_t)v18);
      __swift_project_boxed_opaque_existential_1(v18, v18[3]);
      uint64_t v12 = sub_1C3DB8468();
      if (!v13)
      {
        id v17 = a1;
        id v14 = a1;
        uint64_t v12 = sub_1C3DB9C88();
      }
      unint64_t v10 = v12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
    }
    else
    {

      *(void *)&long long v19 = a1;
      id v15 = a1;
      return sub_1C3DB9C88();
    }
  }
  return v10;
}

uint64_t sub_1C3D402D8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CommandRunner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CommandRunner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CommandRunner);
}

uint64_t dispatch thunk of CommandRunner.__allocating_init(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t DispatchQoS.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBA278();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v17 - v7, a1, v2);
  sub_1C3DBA208();
  sub_1C3D40678();
  char v9 = sub_1C3DB9BE8();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  if (v9)
  {
    v10(v8, v2);
    sub_1C3DB9588();
  }
  else
  {
    sub_1C3DBA228();
    char v11 = sub_1C3DB9BE8();
    v10(v6, v2);
    if (v11 & 1) != 0 || (sub_1C3DBA228(), char v12 = sub_1C3DB9BE8(), v10(v6, v2), (v12))
    {
      v10(v8, v2);
      sub_1C3DB95C8();
    }
    else
    {
      sub_1C3DBA258();
      char v14 = sub_1C3DB9BE8();
      v10(v6, v2);
      if (v14)
      {
        v10(v8, v2);
        sub_1C3DB95B8();
      }
      else
      {
        sub_1C3DBA218();
        char v15 = sub_1C3DB9BE8();
        v10(v6, v2);
        if (v15)
        {
          v10(v8, v2);
        }
        else
        {
          sub_1C3DBA218();
          char v16 = sub_1C3DB9BE8();
          v10(v6, v2);
          v10(v8, v2);
          if ((v16 & 1) == 0)
          {
            sub_1C3DB9598();
            return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v2);
          }
        }
        sub_1C3DB95A8();
      }
    }
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v2);
}

unint64_t sub_1C3D40678()
{
  unint64_t result = qword_1EB6FBAC8;
  if (!qword_1EB6FBAC8)
  {
    sub_1C3DBA278();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBAC8);
  }
  return result;
}

uint64_t dispatch thunk of ICObjectProviding.object(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ICObjectProviding.performAndWait(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1C3D40720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    uint64_t v6 = sub_1C3DBB608();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C3DBB3B8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          char v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C3DBB3B8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C3D40858(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C3DB8B98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1C3D465B4((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]),
        uint64_t v7 = sub_1C3DB9B08(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1C3D465B4(&qword_1EB6FC058, MEMORY[0x1E4F27990]);
      char v15 = sub_1C3DB9BE8();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id SiriSpeechRecognitionManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t static SiriSpeechRecognitionManager.asrModelNeedsDownload(NGASR:)(char a1)
{
  uint64_t v5 = (uint64_t (*)(char))((char *)&dword_1EA388340 + dword_1EA388340);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C3D40B48;
  return v5(a1);
}

uint64_t sub_1C3D40B48(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t static SiriSpeechRecognitionManager.downloadASRModel(NGASR:progress:)(char a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_1EA388350 + dword_1EA388350);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C3C3259C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C3D40D10()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA388320);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA388320);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1C3D40DD8(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F0);
  v2[10] = swift_task_alloc();
  sub_1C3DB9218();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3863F8);
  void v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386400);
  v2[13] = swift_task_alloc();
  uint64_t v3 = sub_1C3DB8C48();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388360);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388368);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388370);
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388378);
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388380);
  v2[28] = v6;
  v2[29] = *(void *)(v6 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D41114, 0, 0);
}

uint64_t sub_1C3D41114()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v60 = v0[25];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v8 = v0[21];
  uint64_t v62 = v0[20];
  uint64_t v58 = v0[28];
  uint64_t v59 = v0[19];
  uint64_t v61 = v0[9];
  sub_1C3DB92E8();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, *MEMORY[0x1E4FBD028], v6);
  sub_1C3DBA288();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v57(v8, v1, v58);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v59, v4, v60);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v59, 0, 1, v60);
  uint64_t v9 = v61 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputSequence;
  swift_beginAccess();
  sub_1C3D45FB8(v8, v9, &qword_1EA388368);
  swift_endAccess();
  uint64_t v10 = v61 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1C3D45FB8(v59, v10, &qword_1EA388360);
  swift_endAccess();
  sub_1C3C8E848(v9, v62, &qword_1EA388368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v62, 1, v58) == 1)
  {
    uint64_t v11 = v0[20];
    BOOL v12 = &qword_1EA388368;
LABEL_5:
    sub_1C3C2A448(v11, v12);
    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v17 = 15;
    swift_willThrow();
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v13 = v0[25];
  uint64_t v14 = v0[26];
  uint64_t v15 = v0[18];
  v57(v0[30], v0[20], v0[28]);
  sub_1C3C8E848(v10, v15, &qword_1EA388360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
  {
    uint64_t v16 = v0[18];
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
    BOOL v12 = &qword_1EA388360;
    uint64_t v11 = v16;
    goto LABEL_5;
  }
  sub_1C3C2A448(v0[18], &qword_1EA388360);
  if (ICInternalSettingsDisableGASRAvailabilityCheck()) {
    sub_1C3DB8BA8();
  }
  else {
    sub_1C3DB8BF8();
  }
  uint64_t v21 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v63 = v0[9];
  (*(void (**)(void))(v0[15] + 16))();
  uint64_t v22 = *MEMORY[0x1E4F3C210];
  uint64_t v23 = sub_1C3DB9378();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104))(v20, v22, v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
  uint64_t v25 = sub_1C3DB9228();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 1, 1, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386408);
  uint64_t v26 = sub_1C3DB9238();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 72);
  unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C3DD5130;
  unint64_t v31 = v30 + v29;
  unint64_t v32 = *(void (**)(unint64_t, void, uint64_t))(v27 + 104);
  v32(v31, *MEMORY[0x1E4F3BFD8], v26);
  v32(v31 + v28, *MEMORY[0x1E4F3BFD0], v26);
  sub_1C3C5B1EC(v30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386410);
  uint64_t v33 = sub_1C3DB9368();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C3DD3D30;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x1E4F3C1A8], v33);
  sub_1C3C5B504(v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386418);
  uint64_t v37 = sub_1C3DB9298();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void *)(v38 + 72);
  unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C3DD5140;
  unint64_t v42 = v41 + v40;
  uint64_t v43 = *(void (**)(unint64_t, void, uint64_t))(v38 + 104);
  v43(v42, *MEMORY[0x1E4F3C028], v37);
  v43(v42 + v39, *MEMORY[0x1E4F3C030], v37);
  v43(v42 + 2 * v39, *MEMORY[0x1E4F3C048], v37);
  sub_1C3D44540(v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C3DB92C8();
  swift_allocObject();
  uint64_t v44 = sub_1C3DB92B8();
  uint64_t v45 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber;
  *(void *)(v63 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber) = v44;
  swift_release();
  uint64_t v46 = *(void *)(v63 + v45);
  v0[32] = v46;
  if (!v46)
  {
    uint64_t v51 = v0[29];
    uint64_t v50 = v0[30];
    uint64_t v52 = v0[28];
    uint64_t v53 = v0[17];
    uint64_t v54 = v0[14];
    uint64_t v55 = v0[15];
    sub_1C3C2F090();
    swift_allocError();
    *BOOL v56 = 15;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    goto LABEL_6;
  }
  v0[33] = sub_1C3DB91F8();
  v0[34] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386420);
  uint64_t v47 = swift_allocObject();
  v0[35] = v47;
  *(_OWORD *)(v47 + 16) = xmmword_1C3DD3D30;
  uint64_t v48 = sub_1C3D465B4(&qword_1EA386428, MEMORY[0x1E4F3C0B0]);
  v0[36] = v48;
  *(void *)(v47 + 32) = v46;
  *(void *)(v47 + 40) = v48;
  swift_retain_n();
  uint64_t v49 = (void *)swift_task_alloc();
  v0[37] = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_1C3D41B04;
  return MEMORY[0x1F40F7648](v47, 0);
}

uint64_t sub_1C3D41B04(uint64_t a1)
{
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C3D41C24, 0, 0);
}

uint64_t sub_1C3D41C24()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat);
  *(void *)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat) = v0[38];

  uint64_t v4 = *(void **)(v1 + v2);
  v0[39] = v4;
  if (v4)
  {
    uint64_t v26 = v0[36];
    uint64_t v5 = v0[32];
    uint64_t v7 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v9 = v0[28];
    uint64_t v8 = v0[29];
    uint64_t v27 = v0[10];
    uint64_t v29 = v0[9];
    id v28 = v4;
    id v10 = (id)ICNotesAppBundleIdentifier();
    sub_1C3DB9C38();

    sub_1C3DB9208();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C3DD3D30;
    *(void *)(v11 + 32) = v5;
    *(void *)(v11 + 40) = v26;
    uint64_t v12 = sub_1C3DB9328();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v27, 1, 1, v12);
    id v13 = objc_allocWithZone((Class)sub_1C3DB9318());
    swift_retain();
    id v14 = v28;
    objc_msgSend(v13, sel_init);
    sub_1C3D45F5C();
    *(void *)(v29 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer) = sub_1C3DB91D8();
    swift_release();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[40] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1C3D41FD4;
    uint64_t v16 = v0[8];
    return sub_1C3D4313C(v16);
  }
  else
  {
    uint64_t v18 = v0[29];
    uint64_t v19 = v0[30];
    uint64_t v20 = v0[28];
    uint64_t v21 = v0[17];
    uint64_t v22 = v0[14];
    uint64_t v23 = v0[15];
    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v24 = 15;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_1C3D41FD4()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3D4225C;
  }
  else {
    uint64_t v2 = sub_1C3D420E8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D420E8()
{
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 112);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C3D4225C()
{
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1C3D423D0(void *a1)
{
  unint64_t v32 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883B8);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  id v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1C3DB92E8();
  uint64_t v27 = *(void *)(v31 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388360);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388378);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1C3C8E848(v16, (uint64_t)v11, &qword_1EA388360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1C3C2A448((uint64_t)v11, &qword_1EA388360);
LABEL_7:
    sub_1C3C2F090();
    swift_allocError();
    unsigned char *v22 = 17;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_7;
  }
  id v18 = v17;
  swift_retain();
  id v19 = v33;
  uint64_t v20 = sub_1C3D1A9D0(v32, v18);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    return swift_release();
  }
  else
  {
    uint64_t v23 = v20;
    swift_release();
    id v33 = v23;
    sub_1C3DB92D8();
    uint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v6, v8, v31);
    unint64_t v32 = v18;
    uint64_t v25 = v28;
    sub_1C3DBA298();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v30);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_1C3D42804()
{
  v1[11] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D0);
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388378);
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388360);
  v1[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D42998, 0, 0);
}

uint64_t sub_1C3D42998()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[11] + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder;
  swift_beginAccess();
  sub_1C3C8E848(v4, v1, &qword_1EA388360);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[20];
  if (v5)
  {
    sub_1C3C2A448(v0[20], &qword_1EA388360);
  }
  else
  {
    uint64_t v8 = v0[18];
    uint64_t v7 = v0[19];
    uint64_t v9 = v0[17];
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 16))(v7, v0[20], v9);
    sub_1C3C2A448(v6, &qword_1EA388360);
    sub_1C3DBA2A8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  uint64_t v10 = v0[11];
  uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer);
  v0[21] = v11;
  if (v11)
  {
    swift_retain();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[22] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1C3D42D3C;
    return MEMORY[0x1F40F7658]();
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask;
    if (*(void *)(v10 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask))
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
      sub_1C3DBA2E8();
      swift_release();
      uint64_t v14 = v0[11];
    }
    else
    {
      uint64_t v14 = v10;
    }
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[12];
    uint64_t v17 = v0[13];
    *(void *)(v10 + v13) = 0;
    swift_release();
    uint64_t v18 = v14 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
    swift_beginAccess();
    sub_1C3C8E848(v18, v15, &qword_1EA3883D8);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
    uint64_t v20 = v0[16];
    if (v19)
    {
      sub_1C3C2A448(v0[16], &qword_1EA3883D8);
    }
    else
    {
      uint64_t v22 = v0[13];
      uint64_t v21 = v0[14];
      uint64_t v23 = v0[12];
      (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v21, v0[16], v23);
      sub_1C3C2A448(v20, &qword_1EA3883D8);
      sub_1C3DBA2A8();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    uint64_t v24 = v0[15];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[13] + 56))(v24, 1, 1, v0[12]);
    swift_beginAccess();
    sub_1C3D45FB8(v24, v18, &qword_1EA3883D8);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_1C3D42D3C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C3D43094;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C3D42E58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D42E58()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    sub_1C3DBA2E8();
    swift_release();
  }
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  *(void *)(v1 + v2) = 0;
  swift_release();
  uint64_t v7 = v3 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  sub_1C3C8E848(v7, v4, &qword_1EA3883D8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  uint64_t v9 = v0[16];
  if (v8)
  {
    sub_1C3C2A448(v0[16], &qword_1EA3883D8);
  }
  else
  {
    uint64_t v11 = v0[13];
    uint64_t v10 = v0[14];
    uint64_t v12 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v10, v0[16], v12);
    sub_1C3C2A448(v9, &qword_1EA3883D8);
    sub_1C3DBA2A8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[13] + 56))(v13, 1, 1, v0[12]);
  swift_beginAccess();
  sub_1C3D45FB8(v13, v7, &qword_1EA3883D8);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1C3D43094()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D4313C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388448);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D43230, 0, 0);
}

uint64_t sub_1C3D43230()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  sub_1C3DB9288();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBD028], v3);
  *(void *)(swift_task_alloc() + 16) = v4;
  sub_1C3DBA2D8();
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber);
  if (v5 && (uint64_t v6 = (char *)v0[3], *(void *)&v6[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer]))
  {
    uint64_t v7 = v0[4];
    uint64_t v8 = sub_1C3DBA278();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = 0;
    v9[3] = 0;
    v9[4] = v5;
    v9[5] = v6;
    swift_retain();
    uint64_t v10 = v6;
    swift_retain_n();
    *(void *)&v10[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask] = sub_1C3C980BC(v7, (uint64_t)&unk_1EA388458, (uint64_t)v9);
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v12 = v0[2];
    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v13 = 15;
    swift_willThrow();
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386378);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
  }
  return v11();
}

uint64_t sub_1C3D434BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D0);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  sub_1C3D45FB8((uint64_t)v6, v9, &qword_1EA3883D8);
  return swift_endAccess();
}

uint64_t sub_1C3D435F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D0);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D8);
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388460);
  v5[12] = swift_task_alloc();
  uint64_t v7 = sub_1C3DB9288();
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386440);
  v5[17] = swift_task_alloc();
  v5[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386448);
  v5[19] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386450);
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D4384C, 0, 0);
}

uint64_t sub_1C3D4384C()
{
  sub_1C3DB92A8();
  v0[23] = swift_getOpaqueTypeConformance2();
  sub_1C3DBA378();
  v0[24] = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation;
  swift_beginAccess();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[25] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C3D439A8;
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[17];
  return MEMORY[0x1F4187C80](v4, 0, 0, v0 + 5, v3, AssociatedConformanceWitness);
}

uint64_t sub_1C3D439A8()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1C3D43E54;
  }
  else {
    uint64_t v1 = sub_1C3D43AB8;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C3D43AB8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[8];
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[7] + v0[24];
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[16], v1, v2);
    sub_1C3C8E848(v9, v6, &qword_1EA3883D8);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    uint64_t v11 = v0[16];
    if (v10)
    {
      uint64_t v12 = v0[11];
      uint64_t v13 = v0[12];
      (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[13]);
      sub_1C3C2A448(v12, &qword_1EA3883D8);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388468);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    }
    else
    {
      uint64_t v16 = v0[14];
      uint64_t v15 = v0[15];
      uint64_t v17 = v0[12];
      uint64_t v18 = v0[13];
      uint64_t v20 = v0[10];
      uint64_t v19 = v0[11];
      uint64_t v21 = v0[8];
      uint64_t v22 = v0[9];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v19, v21);
      sub_1C3C2A448(v19, &qword_1EA3883D8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v11, v18);
      sub_1C3DBA298();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v18);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388468);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 0, 1, v23);
    }
    sub_1C3C2A448(v0[12], &qword_1EA388460);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[25] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1C3D439A8;
    uint64_t v26 = v0[20];
    uint64_t v27 = v0[17];
    return MEMORY[0x1F4187C80](v27, 0, 0, v0 + 5, v26, AssociatedConformanceWitness);
  }
}

uint64_t sub_1C3D43E54()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  uint64_t v1 = (void *)v0[5];
  if (qword_1EA3858F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA388320);
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C3A61000, v3, v4, "speech recognition failed", v5, 2u);
    MEMORY[0x1C877E600](v5, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t static SiriSpeechRecognitionManager.generalASRLanguageIdentifier()()
{
  return 28261;
}

uint64_t sub_1C3D44004(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1C3D44058(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    uint64_t v8 = sub_1C3DB9C38();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C3D44114(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_1C3DBA438();
  return swift_continuation_resume();
}

uint64_t static SiriSpeechRecognitionManager.removeGeneralASRModel()()
{
  return MEMORY[0x1F4188298](sub_1C3D4419C, 0, 0);
}

uint64_t sub_1C3D4419C()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F3C258]);
  uint64_t v2 = (void *)sub_1C3DB9BF8();
  id v3 = objc_msgSend(v1, sel_initWithLanguage_taskHint_, v2, 1009);

  id v4 = (id)ICNotesAppBundleIdentifier();
  if (!v4)
  {
    sub_1C3DB9C38();
    id v4 = (id)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(self, sel_unsubscribeFromAssetWithConfig_clientIdentifier_error_, v3, v4, 0);

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

id SiriSpeechRecognitionManager.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_audioTaskContinuation];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3883D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  id v3 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputSequence];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388380);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_inputBuilder];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388378);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_transcriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_recognizerTask] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_converter;
  type metadata accessor for BufferConverter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)&v0[v7] = v8;
  *(void *)&v0[OBJC_IVAR____TtC11NotesShared28SiriSpeechRecognitionManager_analyzerFormat] = 0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SiriSpeechRecognitionManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

id SiriSpeechRecognitionManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriSpeechRecognitionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3D44540(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB9298();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388470);
    uint64_t v9 = sub_1C3DBAC28();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    unint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_1C3D465B4(&qword_1EA388478, MEMORY[0x1E4F3C050]);
      uint64_t v15 = sub_1C3DB9B08();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_1C3D465B4(&qword_1EA388480, MEMORY[0x1E4F3C050]);
          char v23 = sub_1C3DB9BE8();
          uint64_t v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      uint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC870];
  }
  return result;
}

uint64_t _s11NotesShared28SiriSpeechRecognitionManagerC25siriASRlanguageIdentifier3forSSSg10Foundation6LocaleV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8C48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388430);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DB8C28();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388438);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (ICInternalSettingsDisableGASRAvailabilityCheck()) {
    return 0x53552D6E65;
  }
  uint64_t v41 = v5;
  uint64_t v42 = v3;
  uint64_t v43 = v2;
  sub_1C3DB8C38();
  sub_1C3DB8C08();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v15, v9);
  uint64_t v21 = a1;
  uint64_t v22 = sub_1C3DB8BC8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22) == 1)
  {
    uint64_t v24 = &qword_1EA388438;
    uint64_t v25 = (uint64_t)v18;
  }
  else
  {
    uint64_t v39 = sub_1C3DB8BB8();
    uint64_t v40 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
    sub_1C3DB8C38();
    sub_1C3DB8C18();
    v20(v13, v9);
    uint64_t v27 = sub_1C3DB8BE8();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v27) != 1)
    {
      sub_1C3DB8BB8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
      v44[0] = v39;
      v44[1] = v40;
      swift_bridgeObjectRetain();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44[0];
    }
    swift_bridgeObjectRelease();
    uint64_t v24 = &qword_1EA388430;
    uint64_t v25 = (uint64_t)v8;
  }
  sub_1C3C2A448(v25, v24);
  uint64_t v29 = v43;
  if (qword_1EA3858F8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C3DB9048();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EA388320);
  unint64_t v32 = v41;
  uint64_t v31 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v21, v29);
  uint64_t v33 = sub_1C3DB9028();
  os_log_type_t v34 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v44[0] = v36;
    *(_DWORD *)unint64_t v35 = 136315138;
    sub_1C3D465B4(&qword_1EA388440, MEMORY[0x1E4F27A78]);
    uint64_t v37 = sub_1C3DBB248();
    v44[2] = sub_1C3C516D0(v37, v38, v44);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v29);
    _os_log_impl(&dword_1C3A61000, v33, v34, "could not fetch language code for ASR model download in locale: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v36, -1, -1);
    MEMORY[0x1C877E600](v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v29);
  }

  return 0;
}

uint64_t sub_1C3D44E34(char a1)
{
  *(unsigned char *)(v1 + 184) = a1;
  uint64_t v2 = sub_1C3DB8C48();
  *(void *)(v1 + 144) = v2;
  *(void *)(v1 + 152) = *(void *)(v2 - 8);
  *(void *)(v1 + 160) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D44EF4, 0, 0);
}

uint64_t sub_1C3D44EF4()
{
  if (*(unsigned char *)(v0 + 184) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 152);
    uint64_t v1 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 144);
    sub_1C3DB8BF8();
    uint64_t v4 = _s11NotesShared28SiriSpeechRecognitionManagerC25siriASRlanguageIdentifier3forSSSg10Foundation6LocaleV_tFZ_0(v1);
    unint64_t v6 = v5;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    if (!v6)
    {
      if (qword_1EA3858F8 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C3DB9048();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EA388320);
      uint64_t v15 = sub_1C3DB9028();
      os_log_type_t v16 = sub_1C3DBA6A8();
      if (!os_log_type_enabled(v15, v16)) {
        goto LABEL_23;
      }
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      unint64_t v18 = "could not fetch language code for Siri ASR model download";
      goto LABEL_22;
    }
    sub_1C3DBA868();
    uint64_t v7 = (void *)sub_1C3DBA858();
    unsigned __int8 v8 = objc_msgSend(v7, sel_supportsCallTranscription);

    if (v8)
    {
      uint64_t v9 = 1001;
LABEL_7:
      *(void *)(v0 + 168) = v4;
      *(void *)(v0 + 176) = v6;
      uint64_t v12 = self;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 120;
      *(void *)(v0 + 24) = sub_1C3D45320;
      uint64_t v13 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_1C3D44114;
      *(void *)(v0 + 104) = &block_descriptor_43;
      *(void *)(v0 + 112) = v13;
      objc_msgSend(v12, sel_installedLanguagesForTaskHint_completion_, v9, v0 + 80);
      return MEMORY[0x1F41881E8](v0 + 16);
    }
    swift_bridgeObjectRelease();
    if (qword_1EA3858F8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C3DB9048();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA388320);
    uint64_t v15 = sub_1C3DB9028();
    os_log_type_t v16 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      unint64_t v18 = "device does not support call transcription";
      goto LABEL_22;
    }
  }
  else
  {
    sub_1C3DBA868();
    uint64_t v10 = (void *)sub_1C3DBA858();
    unsigned __int8 v11 = objc_msgSend(v10, sel_supportsGeneralASR);

    if (v11)
    {
      unint64_t v6 = 0xE200000000000000;
      uint64_t v4 = 28261;
      uint64_t v9 = 1009;
      goto LABEL_7;
    }
    if (qword_1EA3858F8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C3DB9048();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EA388320);
    uint64_t v15 = sub_1C3DB9028();
    os_log_type_t v16 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      unint64_t v18 = "device does not support general ASR";
LABEL_22:
      _os_log_impl(&dword_1C3A61000, v15, v16, v18, v17, 2u);
      MEMORY[0x1C877E600](v17, -1, -1);
    }
  }
LABEL_23:

  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v21 = 4;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22(0);
}

uint64_t sub_1C3D45320()
{
  return MEMORY[0x1F4188298](sub_1C3D45400, 0, 0);
}

uint64_t sub_1C3D45400()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[15];
  if (qword_1EA3858F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C3DB9048();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA388320);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1C3DB9028();
  os_log_type_t v4 = sub_1C3DBA698();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v20 = v6;
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBA448();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[17] = sub_1C3C516D0(v7, v9, &v20);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v3, v4, "Speech installed languages: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v6, -1, -1);
    MEMORY[0x1C877E600](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1C3DB9028();
  os_log_type_t v11 = sub_1C3DBA698();
  BOOL v12 = os_log_type_enabled(v10, v11);
  unint64_t v13 = v0[22];
  if (v12)
  {
    uint64_t v14 = v0[21];
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    v0[16] = sub_1C3C516D0(v14, v13, &v20);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v10, v11, "languageID: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v16, -1, -1);
    MEMORY[0x1C877E600](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v17 = sub_1C3D40720(v0[21], v0[22], v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v18 = (uint64_t (*)(BOOL))v0[1];
  return v18((v17 & 1) == 0);
}

uint64_t sub_1C3D45770(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 184) = a2;
  *(void *)(v3 + 192) = a3;
  *(unsigned char *)(v3 + 256) = a1;
  uint64_t v4 = sub_1C3DB8C48();
  *(void *)(v3 + 200) = v4;
  *(void *)(v3 + 208) = *(void *)(v4 - 8);
  *(void *)(v3 + 216) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D45834, 0, 0);
}

uint64_t sub_1C3D45834()
{
  int v1 = *((unsigned __int8 *)v0 + 256);
  sub_1C3DBA868();
  uint64_t v2 = (void *)sub_1C3DBA858();
  uint64_t v3 = v2;
  if (v1 != 1)
  {
    unsigned __int8 v11 = objc_msgSend(v2, sel_supportsGeneralASR);

    if (v11)
    {
      uint64_t v10 = 1009;
      goto LABEL_7;
    }
    if (qword_1EA3858F8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C3DB9048();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EA388320);
    uint64_t v20 = sub_1C3DB9028();
    os_log_type_t v21 = sub_1C3DBA6A8();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_21;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "device does not support general ASR";
    goto LABEL_20;
  }
  unsigned __int8 v4 = objc_msgSend(v2, sel_supportsCallTranscription);

  if ((v4 & 1) == 0)
  {
    if (qword_1EA3858F8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C3DB9048();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EA388320);
    uint64_t v20 = sub_1C3DB9028();
    os_log_type_t v21 = sub_1C3DBA6A8();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_21;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "device does not support call transcription";
LABEL_20:
    _os_log_impl(&dword_1C3A61000, v20, v21, v23, v22, 2u);
    MEMORY[0x1C877E600](v22, -1, -1);
LABEL_21:

    sub_1C3C2F090();
    uint64_t v26 = (void *)swift_allocError();
    char v27 = 5;
    goto LABEL_22;
  }
  uint64_t v6 = v0[26];
  uint64_t v5 = v0[27];
  uint64_t v7 = v0[25];
  sub_1C3DB8BF8();
  _s11NotesShared28SiriSpeechRecognitionManagerC25siriASRlanguageIdentifier3forSSSg10Foundation6LocaleV_tFZ_0(v5);
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v9)
  {
    uint64_t v10 = 1001;
LABEL_7:
    uint64_t v31 = v10;
    uint64_t v12 = sub_1C3DB9BF8();
    v0[28] = v12;
    swift_bridgeObjectRelease();
    id v13 = (id)ICNotesAppBundleIdentifier();
    if (!v13)
    {
      sub_1C3DB9C38();
      id v13 = (id)sub_1C3DB9BF8();
      swift_bridgeObjectRelease();
    }
    v0[29] = v13;
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v16 = self;
    v0[14] = v15;
    v0[15] = v14;
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 1107296256;
    v0[12] = sub_1C3D44004;
    v0[13] = &block_descriptor_14;
    char v17 = _Block_copy(v0 + 10);
    v0[30] = v17;
    swift_retain();
    swift_release();
    v0[2] = v0;
    v0[7] = v0 + 21;
    v0[3] = sub_1C3D45CF0;
    uint64_t v18 = swift_continuation_init();
    v0[16] = MEMORY[0x1E4F143A8];
    v0[17] = 0x40000000;
    v0[18] = sub_1C3D44058;
    v0[19] = &block_descriptor_41;
    v0[20] = v18;
    objc_msgSend(v16, sel_fetchAssetsForLanguage_taskHint_clientIdentifier_progress_completion_, v12, v31, v13, v17, v0 + 16);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  sub_1C3C2F090();
  uint64_t v26 = (void *)swift_allocError();
  char v27 = 20;
LABEL_22:
  *uint64_t v25 = v27;
  swift_willThrow();
  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v28 = 5;
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_1C3D45CF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3D45E8C;
  }
  else {
    uint64_t v2 = sub_1C3D45E00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D45E00()
{
  uint64_t v2 = (void *)v0[29];
  uint64_t v1 = (const void *)v0[30];
  uint64_t v3 = (void *)v0[28];
  swift_bridgeObjectRelease();
  _Block_release(v1);

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C3D45E8C()
{
  uint64_t v1 = (const void *)v0[30];
  uint64_t v3 = (void *)v0[28];
  uint64_t v2 = (void *)v0[29];
  swift_willThrow();
  _Block_release(v1);

  uint64_t v4 = (void *)v0[31];
  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v5 = 5;
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

unint64_t sub_1C3D45F5C()
{
  unint64_t result = qword_1EA3883A0;
  if (!qword_1EA3883A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3883A0);
  }
  return result;
}

uint64_t sub_1C3D45FB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SiriSpeechRecognitionManager()
{
  uint64_t result = qword_1EA3883F8;
  if (!qword_1EA3883F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C3D46068()
{
  return type metadata accessor for SiriSpeechRecognitionManager();
}

void sub_1C3D46070()
{
  sub_1C3D46454(319, &qword_1EA388418, &qword_1EA3883D0);
  if (v0 <= 0x3F)
  {
    sub_1C3D46454(319, &qword_1EA388420, &qword_1EA388380);
    if (v1 <= 0x3F)
    {
      sub_1C3D46454(319, &qword_1EA388428, &qword_1EA388378);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SiriSpeechRecognitionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriSpeechRecognitionManager);
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.setUpAudioTask()(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x150);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C3259C;
  return v7(a1);
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.appendAudioBuffer(buffer:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of SiriSpeechRecognitionManager.finish()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C3C4DAF4;
  return v5();
}

void sub_1C3D46454(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1C3DBA938();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C3D464A4(uint64_t a1)
{
  return sub_1C3D434BC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C3D464AC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C3D464F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C3C4DAF4;
  return sub_1C3D435F8(a1, v4, v5, v7, v6);
}

uint64_t sub_1C3D465B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall ICAccount.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  id v2 = objc_msgSend(v1, sel_objectID);
  if ((objc_msgSend(v2, sel_ic_isModernType) & 1) == 0) {
    objc_msgSend(v2, sel_ic_isLegacyType);
  }

  id v3 = v1;
  if (objc_msgSend(v3, sel_isLocalAccount)
    || (id v4 = objc_msgSend(v3, sel_emailAddress)) == 0)
  {
  }
  else
  {
    uint64_t v5 = v4;
    sub_1C3DB9C38();
  }
  AccountID.entityIdentifierString.getter();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_localizedName);
  sub_1C3DB9C38();

  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA878();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id CloudRecordSnapshot.id.getter()
{
  uint64_t v0 = (void *)sub_1C3D46F5C();
  return v0;
}

void CloudRecordSnapshot.init(record:id:data:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
}

id sub_1C3D46868@<X0>(void *a1@<X8>)
{
  id v2 = (void *)sub_1C3D46F5C();
  *a1 = v2;
  return v2;
}

uint64_t static NSObject<>.record(from:)()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ic_systemFieldsValueTransformer);
  uint64_t v1 = (void *)sub_1C3DB8938();
  id v2 = objc_msgSend(v0, sel_reverseTransformedValue_, v1);

  if (!v2) {
    return 0;
  }
  sub_1C3DBAA68();
  swift_unknownObjectRelease();
  sub_1C3C2A5D8(&v15, v17);
  sub_1C3C4BC70((uint64_t)v17, (uint64_t)&v15);
  if (!swift_dynamicCast())
  {
    sub_1C3C4BC70((uint64_t)v17, (uint64_t)&v15);
    if (qword_1EA3856D0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C3DB9048();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EA386670);
    os_log_type_t v5 = sub_1C3DBA6B8();
    id v6 = sub_1C3DB9028();
    os_log_type_t v7 = v5;
    if (os_log_type_enabled(v6, v5))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v14 = v9;
      *(_DWORD *)uint64_t v8 = 136315650;
      uint64_t v10 = sub_1C3DBACC8();
      sub_1C3C516D0(v10, v11, &v14);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      sub_1C3DBA9A8();
      *(_WORD *)(v8 + 22) = 2080;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      __swift_project_boxed_opaque_existential_1(&v15, v16);
      swift_getDynamicType();
      sub_1C3DBB798();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DBB798();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3C516D0(0, 0xE000000000000000, &v14);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v6, v7, "Failed assertion at %s:%lu: %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v9, -1, -1);
      MEMORY[0x1C877E600](v8, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v15);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
    return 0;
  }
  uint64_t v3 = v13;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return v3;
}

void NSObject<>.makeSnapshot()(void *a1@<X8>)
{
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_ic_systemFieldsValueTransformer);
  id v4 = objc_msgSend(v3, sel_transformedValue_, v1);

  if (v4)
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1C3D46F64((uint64_t)v15, (uint64_t)&v16);
  if (v18)
  {
    if (swift_dynamicCast())
    {
      *a1 = objc_msgSend(v1, sel_recordID);
      a1[1] = v13;
      a1[2] = v14;
      return;
    }
  }
  else
  {
    sub_1C3CC623C((uint64_t)&v16);
  }
  if (qword_1EA3856D0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB9048();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EA386670);
  os_log_type_t v6 = sub_1C3DBA6B8();
  os_log_type_t v7 = sub_1C3DB9028();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v15[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v11 = sub_1C3DBACC8();
    uint64_t v16 = sub_1C3C516D0(v11, v12, (uint64_t *)v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    uint64_t v16 = 38;
    sub_1C3DBA9A8();
    *(_WORD *)(v9 + 22) = 2080;
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    uint64_t v16 = 0xD00000000000002FLL;
    unint64_t v17 = 0x80000001C3DF7750;
    sub_1C3DBB798();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C3C516D0(v16, v17, (uint64_t *)v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, v7, v8, "Failed assertion at %s:%lu: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v10, -1, -1);
    MEMORY[0x1C877E600](v9, -1, -1);
  }

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_1C3D46F5C()
{
  return *(void *)v0;
}

uint64_t sub_1C3D46F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C3D46FD0()
{
  unint64_t result = qword_1EA388488;
  if (!qword_1EA388488)
  {
    sub_1C3D47028();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388488);
  }
  return result;
}

unint64_t sub_1C3D47028()
{
  unint64_t result = qword_1EA388490;
  if (!qword_1EA388490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388490);
  }
  return result;
}

uint64_t sub_1C3D4706C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  return sub_1C3C58FC8(v2, v3);
}

void *sub_1C3D470A8(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  id v6 = v3;
  sub_1C3CE0C34(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t sub_1C3D470F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v8 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_1C3CE0C34(v8, v7);
  uint64_t v9 = *(void *)(a1 + 8);
  unint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  sub_1C3C58FC8(v9, v10);
  return a1;
}

uint64_t sub_1C3D47154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C3C58FC8(v5, v6);
  return a1;
}

uint64_t type metadata accessor for CloudRecordSnapshot()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3D471B4()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA388498);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA388498);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1C3D4727C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C3D472FC(unint64_t *a1, void **a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3CCE0D8(v2);
  id v4 = v3;
  return sub_1C3DB94E8();
}

uint64_t sub_1C3D47374()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  return swift_release();
}

uint64_t sub_1C3D473F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C3DB94E8();
}

uint64_t (*sub_1C3D47460(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

uint64_t sub_1C3D474F0()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EA3884B8);
}

uint64_t sub_1C3D47504(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA3884C0, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EA3884B8);
}

uint64_t (*sub_1C3D47520(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884C0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884B8);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

double sub_1C3D47634@<D0>(double *a1@<X8>)
{
  return sub_1C3D4786C(a1);
}

uint64_t sub_1C3D47648(uint64_t a1, void **a2)
{
  return sub_1C3D478FC(a1, a2);
}

double sub_1C3D4765C()
{
  return sub_1C3D47984();
}

uint64_t sub_1C3D47678()
{
  return sub_1C3D47A0C();
}

uint64_t (*sub_1C3D4768C(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

uint64_t sub_1C3D47718()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D4772C(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA3884D8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration, &qword_1EA3884D0);
}

uint64_t (*sub_1C3D47748(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884D8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884D0);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

double sub_1C3D47858@<D0>(double *a1@<X8>)
{
  return sub_1C3D4786C(a1);
}

double sub_1C3D4786C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1C3D478E8(uint64_t a1, void **a2)
{
  return sub_1C3D478FC(a1, a2);
}

uint64_t sub_1C3D478FC(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_1C3DB94E8();
}

double sub_1C3D47970()
{
  return sub_1C3D47984();
}

double sub_1C3D47984()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C3D479F8()
{
  return sub_1C3D47A0C();
}

uint64_t sub_1C3D47A0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C3DB94E8();
}

uint64_t (*sub_1C3D47A78(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

uint64_t sub_1C3D47B04()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D47B18(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA3884D8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration, &qword_1EA3884D0);
}

uint64_t (*sub_1C3D47B34(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884D8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884D0);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

uint64_t sub_1C3D47C44@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C3D47CC4(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_1C3DB94E8();
}

uint64_t sub_1C3D47D3C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C3D47DB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C3DB94E8();
}

uint64_t (*sub_1C3D47E24(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

uint64_t sub_1C3D47EB0()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EA3884E8);
}

uint64_t sub_1C3D47EC4(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA3884F0, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EA3884E8);
}

uint64_t (*sub_1C3D47EE0(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884F0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884E8);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

uint64_t sub_1C3D47FF0@<X0>(void *a1@<X8>)
{
  return sub_1C3D4F78C(a1);
}

uint64_t sub_1C3D48004(void **a1, void **a2)
{
  unint64_t v2 = *a1;
  id v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return sub_1C3DB94E8();
}

uint64_t sub_1C3D48078()
{
  return sub_1C3D4B790();
}

uint64_t sub_1C3D48094()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C3DB94E8();
}

uint64_t (*sub_1C3D48100(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

uint64_t sub_1C3D4818C()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime, &qword_1EA3884F8);
}

uint64_t sub_1C3D481A0(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA388500, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime, &qword_1EA3884F8);
}

uint64_t (*sub_1C3D481BC(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388500);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884F8);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

double sub_1C3D482CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  if (!v3) {
    return 0.0;
  }
  double v0 = 0.0;
  if (objc_msgSend(v3, sel_isHostTimeValid))
  {
    sub_1C3D4837C();
    double v0 = v1;
  }

  return v0;
}

id sub_1C3D4837C()
{
  id result = objc_msgSend(v0, sel_isHostTimeValid);
  if (result)
  {
    uint64_t v2 = mach_absolute_time();
    id result = objc_msgSend(v0, sel_hostTime);
    BOOL v3 = v2 >= (unint64_t)result;
    unint64_t v4 = v2 - (void)result;
    if (v3)
    {
      if (qword_1EA385910 == -1) {
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    id result = (id)swift_once();
LABEL_5:
    if (!is_mul_ok(v4, qword_1EA3884B0)) {
      __break(1u);
    }
  }
  return result;
}

uint64_t AudioRecordingManager.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

id AudioRecordingManager.__allocating_init(liveTranscriptionCoordinator:attachmentModel:)(uint64_t a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return AudioRecordingManager.init(liveTranscriptionCoordinator:attachmentModel:)(a1, a2);
}

id AudioRecordingManager.init(liveTranscriptionCoordinator:attachmentModel:)(uint64_t a1, void *a2)
{
  uint64_t v52 = a2;
  uint64_t v48 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884F8);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884E8);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3884B8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v2[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState];
  aBlock[0] = 0x8000000000000000;
  unint64_t v17 = v2;
  sub_1C3DB9498();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  uint64_t v18 = &v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration];
  aBlock[0] = 0;
  sub_1C3DB9498();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v18, v11, v8);
  uint64_t v20 = &v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration];
  aBlock[0] = 0;
  sub_1C3DB9498();
  uint64_t v21 = v8;
  uint64_t v22 = v48;
  v19(v20, v11, v21);
  uint64_t v23 = &v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples];
  aBlock[0] = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC328);
  sub_1C3DB9498();
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v23, v7, v47);
  uint64_t v24 = &v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime];
  aBlock[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC468);
  uint64_t v25 = v49;
  sub_1C3DB9498();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v24, v25, v51);
  *(void *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_timeObserver] = 0;
  *(void *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_waveformBuffer] = 0;
  v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_appBackgroundOccurred] = 0;
  v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_noteMultitaskingOccurred] = 0;
  *(void *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator] = v22;
  uint64_t v26 = v52;
  *(void *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel] = v52;
  type metadata accessor for AVAudioEngineRecordingMethod(0);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v27 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_outputContinuation;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(void *)(v27 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_assetWriter) = 0;
  id v30 = objc_allocWithZone(MEMORY[0x1E4F15380]);
  swift_retain();
  id v31 = v26;
  id v32 = objc_msgSend(v30, sel_init);
  *(void *)(v27 + OBJC_IVAR____TtC11NotesShared28AVAudioEngineRecordingMethod_audioEngine) = v32;
  *(void *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_recordingMethod] = v27;
  id result = objc_msgSend(v31, sel_attachment);
  if (result)
  {
    os_log_type_t v34 = result;
    id v35 = objc_msgSend(result, sel_identifier);

    if (v35)
    {
      uint64_t v36 = sub_1C3DB9C38();
      unint64_t v38 = v37;
    }
    else
    {
      uint64_t v36 = 0;
      unint64_t v38 = 0xE000000000000000;
    }
    uint64_t v39 = (uint64_t *)&v17[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_identifier];
    uint64_t *v39 = v36;
    v39[1] = v38;

    uint64_t v40 = (objc_class *)type metadata accessor for AudioRecordingManager(0);
    v54.receiver = v17;
    v54.super_class = v40;
    id v41 = objc_msgSendSuper2(&v54, sel_init);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    aBlock[4] = sub_1C3D48DFC;
    aBlock[5] = v42;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3D48EA0;
    aBlock[3] = &block_descriptor_15;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = v41;
    swift_release();
    objc_msgSend(v31, sel_assetWithCompletion_, v43);
    swift_release();

    _Block_release(v43);
    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for AudioRecordingManager(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FC078);
}

uint64_t sub_1C3D48AEC(void *a1, void *a2)
{
  uint64_t v4 = sub_1C3DB9558();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB95E8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19[0] = result;
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC358);
    id v13 = a1;
    uint64_t v14 = (void *)sub_1C3DBA748();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = v13;
    aBlock[4] = sub_1C3D52390;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3C9FDCC;
    aBlock[3] = &block_descriptor_142;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v13;
    id v18 = a2;
    sub_1C3DB9598();
    v19[1] = MEMORY[0x1E4FBC860];
    sub_1C3D52398(&qword_1EB6FC2F8, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC318);
    sub_1C3D2A104();
    sub_1C3DBAAA8();
    MEMORY[0x1C877BC60](0, v12, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, void))(v9 + 8))(v12, v19[0]);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C3D48DC4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D48DFC(void *a1)
{
  return sub_1C3D48AEC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C3D48E04(void *a1, id a2)
{
  objc_msgSend(a2, sel_duration);
  sub_1C3DBA8A8();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a1;
  return sub_1C3DB94E8();
}

void sub_1C3D48EA0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1C3D48F0C()
{
  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v1[6] = swift_task_alloc();
  v1[7] = sub_1C3DBA1F8();
  v1[8] = sub_1C3DBA1E8();
  uint64_t v2 = sub_1C3DBA168();
  v1[9] = v2;
  v1[10] = v3;
  return MEMORY[0x1F4188298](sub_1C3D4900C, v2, v3);
}

uint64_t sub_1C3D4900C()
{
  uint64_t v1 = (void *)v0[5];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = 0x8000000000000008;
  id v2 = v1;
  sub_1C3DB94E8();
  sub_1C3DBA868();
  uint64_t v3 = (void *)sub_1C3DBA858();
  unsigned int v4 = objc_msgSend(v3, sel_supportsGeneralASR);

  if (v4)
  {
    uint64_t v5 = v0[6];
    uint64_t v6 = (void *)v0[5];
    uint64_t v7 = sub_1C3DBA278();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    id v8 = v6;
    uint64_t v9 = sub_1C3DBA1E8();
    uint64_t v10 = (void *)swift_allocObject();
    uint64_t v11 = MEMORY[0x1E4FBCFD8];
    void v10[2] = v9;
    v10[3] = v11;
    v10[4] = v8;
    sub_1C3C980BC(v5, (uint64_t)&unk_1EA388528, (uint64_t)v10);
    swift_release();
  }
  uint64_t v12 = *(void **)(v0[5] + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel);
  v0[3] = 0;
  id v13 = objc_msgSend(v12, sel_createSubattachmentForRecordingAndReturnError_, v0 + 3);
  v0[11] = v13;
  uint64_t v14 = (void *)v0[3];
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v16 = (void *)v0[5];
    id v17 = v14;
    objc_msgSend(v15, sel_setIsBeingEditedLocallyOnDevice_, 1);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[4] = v18;
    id v19 = v16;
    id v20 = v15;
    sub_1C3DB94E8();
    uint64_t v21 = (void *)swift_task_alloc();
    v0[12] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1C3D49340;
    return sub_1C3D4BCE4();
  }
  else
  {
    id v23 = v14;
    swift_release();
    sub_1C3DB8798();

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
}

uint64_t sub_1C3D49340()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v5 = sub_1C3D49608;
  }
  else {
    uint64_t v5 = sub_1C3D494A8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D494A8()
{
  uint64_t v1 = v0[13];
  swift_release();
  sub_1C3D28BF0();
  uint64_t v2 = (void *)v0[11];
  if (!v1)
  {
    uint64_t v4 = v0[5];
    *(unsigned char *)(v4 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_appBackgroundOccurred) = 0;
    *(unsigned char *)(v4 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_noteMultitaskingOccurred) = 0;
    id v5 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v5, sel_postNotificationName_object_, @"ICNoteAnalyticsAudioRecordingStartedNotification", 0);
  }
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C3D49608()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3D496A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v4[3] = swift_task_alloc();
  sub_1C3DBA1F8();
  v4[4] = sub_1C3DBA1E8();
  uint64_t v6 = sub_1C3DBA168();
  v4[5] = v6;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_1C3D49770, v6, v5);
}

uint64_t sub_1C3D49770()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C3D49854;
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_1C3D24DEC(v4);
}

uint64_t sub_1C3D49854()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  sub_1C3C36FB8(v3);
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v6 = sub_1C3D49A18;
  }
  else {
    uint64_t v6 = sub_1C3D499AC;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1C3D499AC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D49A18()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D49A84(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v3 = sub_1C3DB88F8();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  sub_1C3DBA1F8();
  void v2[12] = sub_1C3DBA1E8();
  uint64_t v5 = sub_1C3DBA168();
  v2[13] = v5;
  v2[14] = v4;
  return MEMORY[0x1F4188298](sub_1C3D49BB8, v5, v4);
}

uint64_t sub_1C3D49BB8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D49C5C;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1C3D244AC(v2);
}

uint64_t sub_1C3D49C5C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_1C3D4A348;
  }
  else {
    uint64_t v5 = sub_1C3D49D98;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

id sub_1C3D49D98()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_release();
  objc_msgSend(v1, sel_setIsBeingEditedLocallyOnDevice_, 0);
  uint64_t v3 = (void *)sub_1C3DB9BF8();
  objc_msgSend(v1, sel_updateChangeCountWithReason_, v3);

  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel);
  id result = objc_msgSend(v4, sel_attachment);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v6 = result;
  objc_msgSend(result, sel_attachmentDidChange);

  id result = objc_msgSend(v4, sel_attachment);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = result;
  objc_msgSend(result, sel_setPreviewUpdateDate_, 0);

  id result = objc_msgSend(v4, sel_attachment);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = result;
  id v9 = objc_msgSend(result, sel_managedObjectContext);

  objc_msgSend(v9, sel_ic_save);
  id result = objc_msgSend(v4, sel_attachment);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v10 = result;
  unsigned int v11 = objc_msgSend(result, sel_needsTranscription);

  if (v11)
  {
    id v12 = objc_msgSend(*(id *)(v0 + 40), sel_media);
    if (!v12)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 80) + 56))(*(void *)(v0 + 64), 1, 1, *(void *)(v0 + 72));
LABEL_12:
      sub_1C3C36FB8(*(void *)(v0 + 64));
      goto LABEL_17;
    }
    id v13 = v12;
    id v14 = objc_msgSend(v12, sel_mediaURL);

    if (v14)
    {
      sub_1C3DB8898();

      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = 1;
    }
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v19, v15, 1, v16);
    sub_1C3C2EF60(v19, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1) {
      goto LABEL_12;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 80) + 32))(*(void *)(v0 + 88), *(void *)(v0 + 64), *(void *)(v0 + 72));
    if (qword_1EA385870 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v41 = *(void *)(v0 + 72);
    uint64_t v42 = *(void *)(v0 + 88);
    uint64_t v21 = *(void **)(v0 + 40);
    swift_beginAccess();
    uint64_t v22 = (void *)qword_1EA387190;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3885B0);
    id v23 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DD8) - 8);
    unint64_t v24 = (*(unsigned __int8 *)(*(void *)v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C3DD3D30;
    uint64_t v26 = (void *)(v25 + v24);
    uint64_t v27 = (char *)v26 + v23[14];
    id v28 = v22;
    *uint64_t v26 = objc_msgSend(v21, sel_objectID);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v27, v42, v41);
    unint64_t v29 = sub_1C3C82334(v25);
    id result = objc_msgSend(v4, sel_attachment);
    if (result)
    {
      id v30 = result;
      uint64_t v32 = *(void *)(v0 + 80);
      uint64_t v31 = *(void *)(v0 + 88);
      uint64_t v33 = *(void *)(v0 + 72);
      id v34 = objc_msgSend(result, sel_objectID);

      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      BackgroundTranscriber.retranscriptionTask(subattachmentAndMediaInfo:attachmentIdentifier:completion:)(v29, v34, (uint64_t)sub_1C3D520B4, v35);
      swift_release_n();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
      goto LABEL_17;
    }
LABEL_28:
    __break(1u);
    return result;
  }
LABEL_17:
  if (qword_1EA385900 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C3DB9048();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EA388498);
  unint64_t v37 = sub_1C3DB9028();
  os_log_type_t v38 = sub_1C3DBA688();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_1C3A61000, v37, v38, "called save everything on recording attachment", v39, 2u);
    MEMORY[0x1C877E600](v39, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v40();
}

uint64_t sub_1C3D4A348()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D4A3D0(char a1)
{
  *(void *)(v2 + 80) = v1;
  *(unsigned char *)(v2 + 168) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = sub_1C3DBA1F8();
  *(void *)(v2 + 104) = sub_1C3DBA1E8();
  uint64_t v4 = sub_1C3DBA168();
  *(void *)(v2 + 112) = v4;
  *(void *)(v2 + 120) = v3;
  return MEMORY[0x1F4188298](sub_1C3D4A4A0, v4, v3);
}

uint64_t sub_1C3D4A4A0()
{
  sub_1C3C76590();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D4A54C;
  return sub_1C3D27220();
}

uint64_t sub_1C3D4A54C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_1C3D4B364;
  }
  else {
    uint64_t v5 = sub_1C3D4A688;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D4A688()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 80);
  uint64_t v3 = sub_1C3DBA278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  id v4 = v2;
  uint64_t v5 = sub_1C3DBA1E8();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBCFD8];
  id v6[2] = v5;
  v6[3] = v7;
  uint64_t v6[4] = v4;
  sub_1C3C980BC(v1, (uint64_t)&unk_1EA388540, (uint64_t)v6);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  unint64_t v8 = *(void *)(v0 + 16);
  if (!(v8 >> 62))
  {
    id v9 = *(void **)(v8 + 16);
    *(void *)(v0 + 144) = v9;
    id v10 = v9;
    sub_1C3CCE0F4(v8);
    if (qword_1EA385900 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C3DB9048();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EA388498);
    id v12 = sub_1C3DB9028();
    os_log_type_t v13 = sub_1C3DBA688();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_1C3A61000, v12, v13, "saving recording on pause", v14, 2u);
      MEMORY[0x1C877E600](v14, -1, -1);
    }

    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1C3D4ADD0;
    return sub_1C3D49A84((uint64_t)v10);
  }
  sub_1C3CCE0F4(*(void *)(v0 + 16));
  swift_release();
  if (qword_1EA385900 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C3DB9048();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EA388498);
  uint64_t v18 = sub_1C3DB9028();
  os_log_type_t v19 = sub_1C3DBA688();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1C3A61000, v18, v19, "tried to save on Done, but we've already saved", v20, 2u);
    MEMORY[0x1C877E600](v20, -1, -1);
  }

  uint64_t v21 = *(void **)(v0 + 80);
  int v22 = *(unsigned __int8 *)(v0 + 168);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = 0;
  id v23 = v21;
  sub_1C3DB94E8();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 32) = 0;
  id v24 = v23;
  sub_1C3DB94E8();
  uint64_t v25 = *(void **)(v0 + 80);
  if (v22 == 1)
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0x8000000000000000;
    uint64_t v27 = v26 | 0x4000000000000000;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 72) = v27;
    id v28 = v25;
    sub_1C3DB94E8();
    if (qword_1EA385900 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v17, (uint64_t)qword_1EA388498);
    unint64_t v29 = sub_1C3DB9028();
    os_log_type_t v30 = sub_1C3DBA688();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_28;
    }
    uint64_t v31 = "paused recording";
  }
  else
  {
    uint64_t v32 = (void **)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 40) = 0x8000000000000000;
    id v33 = v25;
    sub_1C3DB94E8();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 48) = MEMORY[0x1E4FBC860];
    id v34 = v33;
    sub_1C3DB94E8();
    if (qword_1EB6FC1E8 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();
    swift_release();
    swift_release();
    uint64_t v35 = *v32;
    if (*v32)
    {
      uint64_t v36 = *(void **)(v0 + 80);
      type metadata accessor for AudioRecordingManager(0);
      id v37 = v36;
      id v38 = v35;
      char v39 = sub_1C3DBA8E8();

      if (v39)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(void *)(v0 + 64) = 0;
        swift_retain();
        sub_1C3DB94E8();
      }
    }
    sub_1C3D4F2AC();
    if (qword_1EA385900 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v17, (uint64_t)qword_1EA388498);
    unint64_t v29 = sub_1C3DB9028();
    os_log_type_t v30 = sub_1C3DBA688();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_28;
    }
    uint64_t v31 = "stopped recording";
  }
  uint64_t v40 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v40 = 0;
  _os_log_impl(&dword_1C3A61000, v29, v30, v31, v40, 2u);
  MEMORY[0x1C877E600](v40, -1, -1);
LABEL_28:

  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1C3D4ADD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_1C3D4B3D0;
  }
  else {
    uint64_t v5 = sub_1C3D4AF0C;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D4AF0C()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 80);
  int v2 = *(unsigned __int8 *)(v0 + 168);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = 0;
  id v3 = v1;
  sub_1C3DB94E8();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 32) = 0;
  id v4 = v3;
  sub_1C3DB94E8();
  if (v2 == 1)
  {
    uint64_t v5 = *(void **)(v0 + 80);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0x8000000000000000;
    uint64_t v7 = v6 | 0x4000000000000000;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 72) = v7;
    id v8 = v5;
    sub_1C3DB94E8();
    if (qword_1EA385900 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C3DB9048();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EA388498);
    id v10 = sub_1C3DB9028();
    os_log_type_t v11 = sub_1C3DBA688();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = "paused recording";
LABEL_15:
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&dword_1C3A61000, v10, v11, v12, v23, 2u);
      MEMORY[0x1C877E600](v23, -1, -1);
    }
  }
  else
  {
    os_log_type_t v13 = (void **)(v0 + 56);
    id v14 = *(void **)(v0 + 80);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 40) = 0x8000000000000000;
    id v15 = v14;
    sub_1C3DB94E8();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 48) = MEMORY[0x1E4FBC860];
    id v16 = v15;
    sub_1C3DB94E8();
    if (qword_1EB6FC1E8 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();
    swift_release();
    swift_release();
    uint64_t v17 = *v13;
    if (*v13)
    {
      uint64_t v18 = *(void **)(v0 + 80);
      type metadata accessor for AudioRecordingManager(0);
      id v19 = v18;
      id v20 = v17;
      char v21 = sub_1C3DBA8E8();

      if (v21)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(void *)(v0 + 64) = 0;
        swift_retain();
        sub_1C3DB94E8();
      }
    }
    sub_1C3D4F2AC();
    if (qword_1EA385900 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C3DB9048();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EA388498);
    id v10 = sub_1C3DB9028();
    os_log_type_t v11 = sub_1C3DBA688();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = "stopped recording";
      goto LABEL_15;
    }
  }

  swift_task_dealloc();
  id v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1C3D4B364()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D4B3D0()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_release();

  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3D4B444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1C3DBA1F8();
  v4[3] = sub_1C3DBA1E8();
  uint64_t v6 = sub_1C3DBA168();
  v4[4] = v6;
  v4[5] = v5;
  return MEMORY[0x1F4188298](sub_1C3D4B4DC, v6, v5);
}

uint64_t sub_1C3D4B4DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D4B578;
  return sub_1C3D294CC();
}

uint64_t sub_1C3D4B578()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v5 = sub_1C3D4B718;
  }
  else {
    uint64_t v5 = sub_1C3D4B6B4;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D4B6B4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D4B718()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AudioRecordingCoordinator.currentRecordingManager.getter()
{
  return sub_1C3D4B790();
}

uint64_t sub_1C3D4B790()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t AudioRecordingCoordinator.currentRecordingManager.setter()
{
  return sub_1C3DB94E8();
}

uint64_t sub_1C3D4B86C()
{
  v0[2] = sub_1C3DBA1F8();
  v0[3] = sub_1C3DBA1E8();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D4B91C;
  return sub_1C3D4A3D0(1);
}

uint64_t sub_1C3D4B91C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1C3DBA168();
  if (v0) {
    uint64_t v4 = sub_1C3D4BA78;
  }
  else {
    uint64_t v4 = sub_1C3D4B6B4;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_1C3D4BA78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D4BADC()
{
  v0[2] = sub_1C3DBA1F8();
  v0[3] = sub_1C3DBA1E8();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D4BB88;
  return sub_1C3D48F0C();
}

uint64_t sub_1C3D4BB88()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1C3DBA168();
  if (v0) {
    uint64_t v4 = sub_1C3D523F0;
  }
  else {
    uint64_t v4 = sub_1C3D523F4;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_1C3D4BCE4()
{
  v1[4] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v2 = sub_1C3DB88F8();
  v1[8] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_1C3DBA1F8();
  v1[14] = sub_1C3DBA1E8();
  uint64_t v5 = sub_1C3DBA168();
  v1[15] = v5;
  v1[16] = v4;
  return MEMORY[0x1F4188298](sub_1C3D4BE64, v5, v4);
}

uint64_t sub_1C3D4BE64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  unint64_t v1 = v0[2];
  if (v1 >> 62)
  {
    sub_1C3CCE0F4(v0[2]);
    swift_release();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  uint64_t v2 = *(void **)(v1 + 16);
  v0[17] = v2;
  id v3 = v2;
  sub_1C3CCE0F4(v1);
  id v4 = objc_msgSend(v3, sel_media);
  if (!v4)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[7], 1, 1, v0[8]);
LABEL_9:
    uint64_t v12 = v0[7];

    swift_release();
    sub_1C3C36FB8(v12);
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_mediaURL);

  if (v6)
  {
    sub_1C3DB8898();

    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v11, v7, 1, v8);
  sub_1C3C2EF60(v11, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1) {
    goto LABEL_9;
  }
  uint64_t v15 = v0[12];
  uint64_t v16 = v0[8];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[7];
  id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  v0[18] = v19;
  v0[19] = (v17 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v19(v15, v18, v16);
  id v20 = objc_msgSend(v3, sel_identifier);
  if (!v20)
  {
    uint64_t v31 = v0[12];
    uint64_t v32 = v0[8];
    uint64_t v33 = v0[9];

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    goto LABEL_10;
  }
  char v21 = v20;
  uint64_t v22 = sub_1C3DB9C38();
  uint64_t v24 = v23;

  v0[20] = v22;
  v0[21] = v24;
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  v0[22] = qword_1EB6FC1E0;
  if (!AudioRecordingCoordinator.isRecording.getter()) {
    goto LABEL_23;
  }
  uint64_t v25 = v0[4];
  id v26 = AudioRecordingCoordinator.currentAttachment.getter();
  id v27 = objc_msgSend(*(id *)(v25 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel), sel_attachment);
  id v28 = v27;
  if (v26)
  {
    if (v27)
    {
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
      id v29 = v26;
      char v30 = sub_1C3DBA8E8();

      if ((v30 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      swift_release();
      uint64_t v50 = v0[20];
      uint64_t v51 = v0[21];
      uint64_t v52 = (void (*)(char *, uint64_t, uint64_t))v0[18];
      uint64_t v53 = (void *)v0[17];
      uint64_t v34 = v0[11];
      uint64_t v48 = v0[12];
      uint64_t v35 = v0[9];
      uint64_t v49 = v0[10];
      uint64_t v36 = v0[8];
      id v37 = (void *)v0[4];
      uint64_t v38 = v0[5];
      uint64_t v47 = v38;
      swift_getKeyPath();
      swift_getKeyPath();
      v0[3] = v37;
      id v39 = v37;
      swift_retain();
      sub_1C3DB94E8();
      uint64_t v40 = sub_1C3DBA278();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 1, 1, v40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v48, v36);
      id v41 = v39;
      uint64_t v42 = sub_1C3DBA1E8();
      unint64_t v43 = (*(unsigned __int8 *)(v35 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      id v44 = (char *)swift_allocObject();
      uint64_t v45 = MEMORY[0x1E4FBCFD8];
      *((void *)v44 + 2) = v42;
      *((void *)v44 + 3) = v45;
      *((void *)v44 + 4) = v50;
      *((void *)v44 + 5) = v51;
      v52(&v44[v43], v34, v36);
      *(void *)&v44[(v49 + v43 + 7) & 0xFFFFFFFFFFFFFFF8] = v41;
      sub_1C3C5C22C(v47, (uint64_t)&unk_1EA3885C0, (uint64_t)v44);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v48, v36);
      goto LABEL_10;
    }
    id v28 = v26;
  }
  else if (!v27)
  {
    goto LABEL_23;
  }

LABEL_26:
  uint64_t v46 = (void *)swift_task_alloc();
  v0[23] = v46;
  void *v46 = v0;
  v46[1] = sub_1C3D4C424;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1C3D4C424()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_1C3D4C7A0;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v5 = sub_1C3D4C540;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C3D4C540()
{
  swift_release();
  uint64_t v18 = v0[20];
  uint64_t v19 = v0[21];
  id v20 = (void (*)(char *, uint64_t, uint64_t))v0[18];
  char v21 = (void *)v0[17];
  uint64_t v1 = v0[11];
  uint64_t v16 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v17 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = v0[5];
  uint64_t v15 = v5;
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = v4;
  id v6 = v4;
  swift_retain();
  sub_1C3DB94E8();
  uint64_t v7 = sub_1C3DBA278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v16, v3);
  id v8 = v6;
  uint64_t v9 = sub_1C3DBA1E8();
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = v12;
  *((void *)v11 + 4) = v18;
  *((void *)v11 + 5) = v19;
  v20(&v11[v10], v1, v3);
  *(void *)&v11[(v17 + v10 + 7) & 0xFFFFFFFFFFFFFFF8] = v8;
  sub_1C3C5C22C(v15, (uint64_t)&unk_1EA3885C0, (uint64_t)v11);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v16, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C3D4C7A0()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C3D4C878(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C3C4DAF4;
  return sub_1C3D496A8(a1, v4, v5, v6);
}

uint64_t objectdestroy_35Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D4C970(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C3C4DAF4;
  return sub_1C3D4B444(a1, v4, v5, v6);
}

BOOL AudioRecordingCoordinator.isRecording.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  BOOL v0 = v2;
  if (v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();
    swift_release();
    swift_release();

    BOOL v0 = v2 >> 62 == 0;
    sub_1C3CCE0F4(v2);
  }
  return v0;
}

id AudioRecordingCoordinator.currentAttachment.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  if (!v4) {
    return 0;
  }
  uint64_t v0 = *(void *)&v4[OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator];
  swift_retain();

  swift_getKeyPath();
  sub_1C3D52398(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  id v1 = *(id *)(v0 + 48);
  swift_release();
  id v2 = objc_msgSend(v1, sel_attachment);

  return v2;
}

uint64_t AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()()
{
  v1[3] = v0;
  sub_1C3DBA1F8();
  v1[4] = sub_1C3DBA1E8();
  uint64_t v3 = sub_1C3DBA168();
  v1[5] = v3;
  v1[6] = v2;
  return MEMORY[0x1F4188298](sub_1C3D4CCD0, v3, v2);
}

uint64_t sub_1C3D4CCD0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  v0[7] = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[8] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C3D4CDFC;
    return sub_1C3D4A3D0(0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1C3D4CDFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1C3D4CF18;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1C3D27920;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C3D4CF18()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3D4CF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  uint64_t v8 = type metadata accessor for AudioData(0);
  v7[27] = v8;
  v7[28] = *(void *)(v8 - 8);
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  v7[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3885C8);
  v7[32] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386C40);
  v7[33] = v9;
  v7[34] = *(void *)(v9 - 8);
  v7[35] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3885D0);
  v7[36] = v10;
  v7[37] = *(void *)(v10 - 8);
  v7[38] = swift_task_alloc();
  uint64_t v11 = sub_1C3DB88F8();
  v7[39] = v11;
  v7[40] = *(void *)(v11 - 8);
  v7[41] = swift_task_alloc();
  v7[42] = sub_1C3DBA1F8();
  v7[43] = sub_1C3DBA1E8();
  uint64_t v12 = sub_1C3DBA168();
  v7[44] = v12;
  v7[45] = v13;
  return MEMORY[0x1F4188298](sub_1C3D4D21C, v12, v13);
}

uint64_t sub_1C3D4D21C()
{
  char v30 = v0;
  v29[1] = *MEMORY[0x1E4F143B8];
  if (qword_1EA385900 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[40];
  uint64_t v1 = v0[41];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[25];
  uint64_t v5 = sub_1C3DB9048();
  v0[46] = __swift_project_value_buffer(v5, (uint64_t)qword_1EA388498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C3DB9028();
  os_log_type_t v7 = sub_1C3DBA698();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[40];
  uint64_t v9 = v0[41];
  uint64_t v11 = v0[39];
  unint64_t v12 = v0[24];
  if (v8)
  {
    uint64_t v13 = v0[23];
    os_log_type_t type = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v29[0] = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    v0[22] = sub_1C3C516D0(v13, v12, v29);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1C3D52398((unint64_t *)&qword_1EB6FC740, MEMORY[0x1E4F276F0]);
    uint64_t v15 = sub_1C3DBB248();
    v0[20] = sub_1C3C516D0(v15, v16, v29);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl(&dword_1C3A61000, v6, type, "Recording task starting {subattachment: %s, url: %s}", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v28, -1, -1);
    MEMORY[0x1C877E600](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }

  sub_1C3C75990(v0[25], v0[35]);
  uint64_t v18 = v0[34];
  uint64_t v17 = v0[35];
  uint64_t v19 = v0[33];
  sub_1C3DBA2B8();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  uint64_t v20 = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_waveformBuffer;
  v0[47] = OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_liveTranscriptionCoordinator;
  v0[48] = v20;
  v0[49] = 0;
  uint64_t v21 = sub_1C3DBA1E8();
  v0[50] = v21;
  uint64_t v22 = (void *)swift_task_alloc();
  v0[51] = v22;
  void *v22 = v0;
  v22[1] = sub_1C3D4D7D0;
  uint64_t v23 = v0[36];
  uint64_t v24 = v0[32];
  uint64_t v25 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187D58](v24, v21, v25, v23);
}

uint64_t sub_1C3D4D7D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 360);
  uint64_t v3 = *(void *)(v1 + 352);
  return MEMORY[0x1F4188298](sub_1C3D4D940, v3, v2);
}

uint64_t sub_1C3D4D940()
{
  uint64_t v1 = *(void *)(v0 + 256);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 224) + 48))(v1, 1, *(void *)(v0 + 216)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 288));
    swift_release();
    sub_1C3D4EFB8(*(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 248);
  sub_1C3D522E4(v1, v4);
  sub_1C3C60634(v4, v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  os_log_type_t v7 = *(void ***)(v0 + 240);
  if (EnumCaseMultiPayload == 1)
  {
    BOOL v8 = *v7;
    *(void *)(v0 + 416) = *v7;
    uint64_t v9 = v7[1];
    *(void *)(v0 + 424) = v9;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();
    swift_release();
    swift_release();
    uint64_t v10 = *(void **)(v0 + 120);

    if (!v10)
    {
      uint64_t v11 = *(void **)(v0 + 208);
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 168) = v9;
      id v12 = v9;
      id v13 = v11;
      sub_1C3DB94E8();
    }
    double v14 = (double)objc_msgSend(v8, sel_frameLength, *(void *)(v0 + 376));
    id v15 = objc_msgSend(v8, sel_format);
    objc_msgSend(v15, sel_sampleRate);
    double v17 = v16;

    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v18 = (void (*)(uint64_t, void))sub_1C3DB94C8();
    *uint64_t v19 = v14 / v17 + *v19;
    v18(v0 + 48, 0);
    swift_release();
    swift_release();
    double v20 = (double)objc_msgSend(v8, sel_frameLength);
    id v21 = objc_msgSend(v8, sel_format);
    objc_msgSend(v21, sel_sampleRate);
    double v23 = v22;

    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v24 = (void (*)(uint64_t, void))sub_1C3DB94C8();
    *uint64_t v25 = v20 / v23 + *v25;
    v24(v0 + 16, 0);
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();
    swift_release();
    swift_release();
    double v26 = *(double *)(v0 + 136);
    if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          *(unsigned char *)(v0 + 104) = 1;
          *(void *)(v0 + 112) = (uint64_t)v26;
          id v27 = (void *)swift_task_alloc();
          *(void *)(v0 + 432) = v27;
          void *v27 = v0;
          v27[1] = sub_1C3D4E02C;
          return sub_1C3D28F40(v0 + 104);
        }
LABEL_23:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_23;
  }
  sub_1C3C60698((uint64_t)v7);
  uint64_t v28 = *(void *)(v0 + 392);
  *(void *)(v0 + 448) = v28;
  uint64_t v29 = *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 376));
  *(void *)(v0 + 456) = v29;
  swift_getKeyPath();
  *(void *)(v0 + 128) = v29;
  sub_1C3D52398(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v29 + 56))
  {
    *(void *)(v0 + 464) = sub_1C3DBA1E8();
    uint64_t v30 = sub_1C3DBA168();
    *(void *)(v0 + 472) = v30;
    *(void *)(v0 + 480) = v31;
    return MEMORY[0x1F4188298](sub_1C3D4E710, v30, v31);
  }
  else
  {
    sub_1C3C60698(*(void *)(v0 + 248));
    *(void *)(v0 + 392) = v28;
    uint64_t v32 = sub_1C3DBA1E8();
    *(void *)(v0 + 400) = v32;
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_1C3D4D7D0;
    uint64_t v34 = *(void *)(v0 + 288);
    uint64_t v35 = *(void *)(v0 + 256);
    uint64_t v36 = MEMORY[0x1E4FBCFD8];
    return MEMORY[0x1F4187D58](v35, v32, v36, v34);
  }
}

uint64_t sub_1C3D4E02C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 352);
  uint64_t v4 = *(void *)(v2 + 360);
  if (v0) {
    uint64_t v5 = sub_1C3D4ED40;
  }
  else {
    uint64_t v5 = sub_1C3D4E174;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C3D4E174()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 208);
  if (!*(void *)(v2 + v1))
  {
    id v3 = objc_msgSend(*(id *)(v0 + 416), sel_format);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v3, 1920);

    uint64_t v0 = v53;
    uint64_t v5 = *(void **)(v2 + v1);
    *(void *)(v2 + v1) = v4;
  }
  unsigned int v6 = 0;
  __C = (float *)(v0 + 512);
  uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  BOOL v8 = &selRef_dataForQuickLook;
  while (1)
  {
    unsigned int v10 = objc_msgSend(*(id *)(v0 + 416), sel_frameLength);
    uint64_t v11 = *(char **)(v0 + 208);
    if (v6 >= v10) {
      break;
    }
    id v12 = *(void **)&v11[*(void *)(v0 + 384)];
    if (!v12) {
      break;
    }
    if (v6 >= 0xFFFFF880)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
    }
    id v13 = *(void **)(v0 + 416);
    id v14 = v12;
    unsigned int v15 = objc_msgSend(v13, sel_frameLength);
    unsigned int v16 = v15 - v6;
    if (v15 < v6) {
      goto LABEL_36;
    }
    unsigned int v17 = objc_msgSend(v14, sel_frameLength);
    unsigned int v18 = 1920 - v17;
    if (v17 > 0x780) {
      goto LABEL_37;
    }
    if (v16 >= v6 + 1920) {
      unsigned int v19 = v6 + 1920;
    }
    else {
      unsigned int v19 = v16;
    }
    if (v18 >= v19) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = v18;
    }
    id v21 = (uint64_t *)[v14 v8[487]];
    uint64_t v0 = v53;
    if (v21)
    {
      uint64_t v22 = *v21;
      double v23 = (uint64_t *)[*(id *)(v53 + 416) v8[487]];
      if (v23)
      {
        uint64_t v52 = v7;
        uint64_t v24 = *(void **)(v53 + 416);
        uint64_t v25 = *v23;
        unsigned int v26 = objc_msgSend(v14, sel_frameLength);
        id v27 = objc_msgSend(v24, sel_format);
        uint64_t v28 = (unsigned int *)objc_msgSend(v27, sel_streamDescription);

        int64_t v29 = v28[6] * (unint64_t)v20;
        if ((v20 * (unsigned __int128)v28[6]) >> 64 != v29 >> 63) {
          goto LABEL_40;
        }
        memcpy((void *)(v22 + 4 * v26), (const void *)(v25 + 4 * v6), v29);
        uint64_t v7 = v52;
        uint64_t v0 = v53;
        BOOL v8 = &selRef_dataForQuickLook;
      }
    }
    unsigned int v30 = objc_msgSend(v14, sel_frameLength);
    if (__CFADD__(v30, v20)) {
      goto LABEL_38;
    }
    objc_msgSend(v14, sel_setFrameLength_, v30 + v20);
    unsigned int v31 = objc_msgSend(v14, sel_frameLength);
    if (v31 == objc_msgSend(v14, sel_frameCapacity))
    {
      uint64_t v32 = (float **)[v14 v8[487]];
      if (v32)
      {
        uint64_t v33 = *v32;
        vDSP_Length v34 = objc_msgSend(v14, sel_frameLength);
        vDSP_vabs(v33, 1, v33, 1, v34);
        float *__C = NAN;
        vDSP_maxv(v33, 1, __C, v34);
        float v35 = *__C;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1C3D8312C(0, *((void *)v7 + 2) + 1, 1, v7);
        }
        unint64_t v37 = *((void *)v7 + 2);
        unint64_t v36 = *((void *)v7 + 3);
        BOOL v8 = &selRef_dataForQuickLook;
        if (v37 >= v36 >> 1) {
          uint64_t v7 = sub_1C3D8312C((char *)(v36 > 1), v37 + 1, 1, v7);
        }
        *((void *)v7 + 2) = v37 + 1;
        *(float *)&v7[4 * v37 + 32] = v35;
        objc_msgSend(v14, sel_setFrameLength_, 0);
      }
    }

    BOOL v9 = __CFADD__(v6, v20);
    v6 += v20;
    if (v9) {
      goto LABEL_39;
    }
  }
  id v39 = *(void **)(v0 + 416);
  uint64_t v38 = *(void **)(v0 + 424);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 152) = v7;
  uint64_t v40 = v11;
  sub_1C3DB94E8();

  uint64_t v41 = *(void *)(v0 + 440);
  *(void *)(v0 + 448) = v41;
  uint64_t v42 = *(void *)(*(void *)(v0 + 208) + *(void *)(v0 + 376));
  *(void *)(v0 + 456) = v42;
  swift_getKeyPath();
  *(void *)(v0 + 128) = v42;
  sub_1C3D52398(&qword_1EA388008, (void (*)(uint64_t))type metadata accessor for LiveTranscriptionCoordinator);
  sub_1C3DB8D18();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v42 + 56) == 1)
  {
    *(void *)(v0 + 464) = sub_1C3DBA1E8();
    uint64_t v43 = sub_1C3DBA168();
    *(void *)(v0 + 472) = v43;
    *(void *)(v0 + 480) = v44;
    return MEMORY[0x1F4188298](sub_1C3D4E710, v43, v44);
  }
  else
  {
    sub_1C3C60698(*(void *)(v0 + 248));
    *(void *)(v0 + 392) = v41;
    uint64_t v45 = sub_1C3DBA1E8();
    *(void *)(v0 + 400) = v45;
    uint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v46;
    void *v46 = v0;
    v46[1] = sub_1C3D4D7D0;
    uint64_t v47 = *(void *)(v0 + 288);
    uint64_t v48 = *(void *)(v0 + 256);
    uint64_t v49 = MEMORY[0x1E4FBCFD8];
    return MEMORY[0x1F4187D58](v48, v45, v49, v47);
  }
}

uint64_t sub_1C3D4E710()
{
  *(void *)(v0 + 488) = *(void *)(*(void *)(v0 + 456) + 40);
  return MEMORY[0x1F4188298](sub_1C3D4E7A8, 0, 0);
}

uint64_t sub_1C3D4E7A8()
{
  sub_1C3C60634(v0[31], v0[29]);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C3C60698(v0[29]);
    sub_1C3C2F090();
    uint64_t v7 = swift_allocError();
    *BOOL v8 = 17;
    swift_willThrow();
    goto LABEL_6;
  }
  uint64_t v1 = v0[29];
  uint64_t v2 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v4 = *(void **)(v0[61] + 16);
  uint64_t v5 = v0[56];
  if (v4)
  {
    id v6 = v4;
    sub_1C3D423D0(v2);
    uint64_t v7 = v5;

    if (v5)
    {

LABEL_6:
      v0[62] = v7;
      uint64_t v9 = v0[59];
      uint64_t v10 = v0[60];
      uint64_t v11 = sub_1C3D4E908;
      goto LABEL_8;
    }
  }
  v0[63] = v5;

  uint64_t v9 = v0[59];
  uint64_t v10 = v0[60];
  uint64_t v11 = sub_1C3D4EBB0;
LABEL_8:
  return MEMORY[0x1F4188298](v11, v9, v10);
}

uint64_t sub_1C3D4E908()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return MEMORY[0x1F4188298](sub_1C3D4E998, v1, v2);
}

uint64_t sub_1C3D4E998()
{
  uint64_t v1 = (void *)v0[62];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[62];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v11;
    *uint64_t v9 = v11;

    _os_log_impl(&dword_1C3A61000, v4, v5, "Transcription error: %@", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v9, -1, -1);
    MEMORY[0x1C877E600](v8, -1, -1);
  }
  else
  {
  }
  sub_1C3C60698(v0[31]);
  v0[49] = 0;
  uint64_t v12 = sub_1C3DBA1E8();
  v0[50] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[51] = (uint64_t)v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1C3D4D7D0;
  uint64_t v14 = v0[36];
  uint64_t v15 = v0[32];
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187D58](v15, v12, v16, v14);
}

uint64_t sub_1C3D4EBB0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return MEMORY[0x1F4188298](sub_1C3D4EC40, v1, v2);
}

uint64_t sub_1C3D4EC40()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[63];
  sub_1C3C60698(v0[31]);
  v0[49] = v2;
  uint64_t v3 = sub_1C3DBA1E8();
  v0[50] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[51] = (uint64_t)v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3D4D7D0;
  uint64_t v5 = v1[36];
  uint64_t v6 = v1[32];
  uint64_t v7 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187D58](v6, v3, v7, v5);
}

uint64_t sub_1C3D4ED40()
{
  uint64_t v2 = (void *)v0[52];
  uint64_t v1 = (void *)v0[53];
  uint64_t v4 = v0[37];
  uint64_t v3 = v0[38];
  uint64_t v5 = v0[36];
  uint64_t v6 = v0[31];
  swift_release();

  sub_1C3C60698(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = (void *)v0[55];
  id v8 = v7;
  id v9 = v7;
  id v10 = sub_1C3DB9028();
  os_log_type_t v11 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412290;
    id v14 = v7;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v15;
    sub_1C3DBA9A8();
    *uint64_t v13 = v15;

    _os_log_impl(&dword_1C3A61000, v10, v11, "Recording error: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v13, -1, -1);
    MEMORY[0x1C877E600](v12, -1, -1);
  }
  else
  {
  }
  sub_1C3D4EFB8(v0[23], v0[24], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

void sub_1C3D4EFB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB88F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA385900 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C3DB9048();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EA388498);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  swift_bridgeObjectRetain_n();
  os_log_type_t v11 = sub_1C3DB9028();
  os_log_type_t v12 = sub_1C3DBA698();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C3C516D0(a1, a2, &v18);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1C3D52398((unint64_t *)&qword_1EB6FC740, MEMORY[0x1E4F276F0]);
    uint64_t v15 = sub_1C3DBB248();
    uint64_t v17 = sub_1C3C516D0(v15, v16, &v18);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1C3A61000, v11, v12, "Recording task finished {subattachment: %s, url: %s}", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v14, -1, -1);
    MEMORY[0x1C877E600](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_1C3D4F2AC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5140;
  *(void *)(inited + 32) = 0xD00000000000003DLL;
  *(void *)(inited + 40) = 0x80000001C3DF7A10;
  id v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_attachmentModel), sel_attachment);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_objectID);

    uint64_t v5 = sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 72) = v5;
    *(void *)(inited + 80) = 0xD000000000000048;
    *(void *)(inited + 88) = 0x80000001C3DF7A50;
    uint64_t v6 = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 96) = *(unsigned char *)(v0 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_appBackgroundOccurred);
    *(void *)(inited + 120) = v6;
    *(void *)(inited + 128) = 0xD00000000000004BLL;
    *(void *)(inited + 136) = 0x80000001C3DF7AA0;
    char v7 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11NotesShared21AudioRecordingManager_noteMultitaskingOccurred);
    *(void *)(inited + 168) = v6;
    *(unsigned char *)(inited + 144) = v7;
    unint64_t v8 = sub_1C3C81620(inited);
    id v9 = objc_msgSend(self, sel_defaultCenter);
    sub_1C3CFB2D4(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_1C3DB9A88();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_postNotificationName_object_userInfo_, @"ICNoteAnalyticsAudioRecordingStoppedNotification", 0, v10);
  }
  else
  {
    __break(1u);
  }
}

id AudioRecordingManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudioRecordingManager.init()()
{
}

id AudioRecordingManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioRecordingManager(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C3D4F738@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AudioRecordingManager(0);
  uint64_t result = sub_1C3DB9478();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D4F778@<X0>(void *a1@<X8>)
{
  return sub_1C3D4F78C(a1);
}

uint64_t sub_1C3D4F78C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C3D4F808(void **a1)
{
  id v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C3DB94E8();
}

uint64_t (*AudioRecordingCoordinator.currentRecordingManager.modify(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C3DB94C8();
  return sub_1C3D474EC;
}

void sub_1C3D4F90C(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t AudioRecordingCoordinator.$currentRecordingManager.getter()
{
  return sub_1C3D4F988((uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EA388568);
}

uint64_t sub_1C3D4F988(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_1C3D4F9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return swift_endAccess();
}

uint64_t sub_1C3D4FA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v18 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1C3DB94B8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t AudioRecordingCoordinator.$currentRecordingManager.setter(uint64_t a1)
{
  return sub_1C3D4FBF8(a1, &qword_1EA388570, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EA388568);
}

uint64_t sub_1C3D4FBF8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1C3DB94B8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*AudioRecordingCoordinator.$currentRecordingManager.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388570);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388568);
  sub_1C3DB94A8();
  swift_endAccess();
  return sub_1C3D47630;
}

void sub_1C3D4FE38(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1C3DB94B8();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1C3DB94B8();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_1C3D4FFA8()
{
  type metadata accessor for AudioRecordingCoordinator(0);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC088);
  uint64_t result = sub_1C3DB9498();
  qword_1EB6FC1E0 = v0;
  return result;
}

uint64_t static AudioRecordingCoordinator.sharedInstance.getter()
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  return swift_retain();
}

BOOL AudioRecordingCoordinator.isPaused.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C3DB94D8();
  swift_release();
  swift_release();
  BOOL v0 = v2;
  if (v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C3DB94D8();

    swift_release();
    swift_release();
    BOOL v0 = v2 >> 62 == 1;
    sub_1C3CCE0F4(v2);
  }
  return v0;
}

uint64_t AudioRecordingCoordinator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AudioRecordingCoordinator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id static __ICAudioRecordingManager.currentAttachment.getter()
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  return AudioRecordingCoordinator.currentAttachment.getter();
}

uint64_t static __ICAudioRecordingManager.isRecording.getter()
{
  return sub_1C3D503E4((uint64_t (*)(void))AudioRecordingCoordinator.isRecording.getter);
}

uint64_t sub_1C3D50368(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  return a3() & 1;
}

uint64_t static __ICAudioRecordingManager.isPaused.getter()
{
  return sub_1C3D503E4((uint64_t (*)(void))AudioRecordingCoordinator.isPaused.getter);
}

uint64_t sub_1C3D503E4(uint64_t (*a1)(void))
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  return a1() & 1;
}

uint64_t static __ICAudioRecordingManager.cancelCurrentAudioRecordingSession()()
{
  sub_1C3DBA1F8();
  v0[2] = sub_1C3DBA1E8();
  uint64_t v2 = sub_1C3DBA168();
  v0[3] = v2;
  v0[4] = v1;
  return MEMORY[0x1F4188298](sub_1C3D504DC, v2, v1);
}

uint64_t sub_1C3D504DC()
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D505A0;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1C3D505A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v5 = sub_1C3D50740;
  }
  else {
    uint64_t v5 = sub_1C3D506DC;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D506DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D50740()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D50904(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = sub_1C3DBA1F8();
  v1[4] = sub_1C3DBA1E8();
  uint64_t v3 = sub_1C3DBA168();
  return MEMORY[0x1F4188298](sub_1C3D509A0, v3, v2);
}

uint64_t sub_1C3D509A0()
{
  uint64_t v1 = (const void *)v0[2];
  swift_release();
  v0[5] = _Block_copy(v1);
  v0[6] = sub_1C3DBA1E8();
  uint64_t v3 = sub_1C3DBA168();
  v0[7] = v3;
  v0[8] = v2;
  return MEMORY[0x1F4188298](sub_1C3D50A40, v3, v2);
}

uint64_t sub_1C3D50A40()
{
  if (qword_1EB6FC1E8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_1C3D50B04;
  return AudioRecordingCoordinator.cancelCurrentAudioRecordingSession()();
}

uint64_t sub_1C3D50B04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_1C3D50CBC;
  }
  else {
    uint64_t v5 = sub_1C3D50C40;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C3D50C40()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, void))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 40));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3D50CBC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v3 = (void *)sub_1C3DB8788();

  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  _Block_release(*(const void **)(v0 + 40));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

id __ICAudioRecordingManager.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id __ICAudioRecordingManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1C3D50E0C()
{
  v1[1] = *(mach_timebase_info *)MEMORY[0x1E4F143B8];
  v1[0] = 0;
  mach_timebase_info(v1);
  double result = *(double *)v1;
  qword_1EA3884B0 = (uint64_t)v1[0];
  return result;
}

uint64_t sub_1C3D50E70()
{
  sub_1C3CCE0F4(*(void *)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D50EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EA3884B8);
}

uint64_t sub_1C3D50ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA3884C0, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingState, &qword_1EA3884B8);
}

uint64_t sub_1C3D50F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D50F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA3884D8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__currentRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D50F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D50F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA3884D8, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__totalRecordingDuration, &qword_1EA3884D0);
}

uint64_t sub_1C3D50FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EA3884E8);
}

uint64_t sub_1C3D50FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA3884F0, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__samples, &qword_1EA3884E8);
}

uint64_t sub_1C3D51010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime, &qword_1EA3884F8);
}

uint64_t sub_1C3D51038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA388500, (uint64_t)&OBJC_IVAR____TtC11NotesShared21AudioRecordingManager__recordingStartTime, &qword_1EA3884F8);
}

uint64_t sub_1C3D51068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D4F9F0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EA388568);
}

uint64_t sub_1C3D51090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D4FA60(a1, a2, a3, a4, &qword_1EA388570, (uint64_t)&OBJC_IVAR____TtC11NotesShared25AudioRecordingCoordinator__currentRecordingManager, &qword_1EA388568);
}

uint64_t sub_1C3D510C0()
{
  return type metadata accessor for AudioRecordingManager(0);
}

void sub_1C3D510C8()
{
  sub_1C3D51DF4(319, &qword_1EB6FC2D8);
  if (v0 <= 0x3F)
  {
    sub_1C3D51DF4(319, &qword_1EB6FC2F0);
    if (v1 <= 0x3F)
    {
      sub_1C3D51F1C(319, &qword_1EB6FC2E8, &qword_1EB6FC328);
      if (v2 <= 0x3F)
      {
        sub_1C3D51F1C(319, &qword_1EB6FC480, &qword_1EB6FC468);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for AudioRecordingManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioRecordingManager);
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingState.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AudioRecordingManager.currentRecordingDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AudioRecordingManager.currentRecordingDuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AudioRecordingManager.currentRecordingDuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AudioRecordingManager.$currentRecordingDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AudioRecordingManager.$currentRecordingDuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of AudioRecordingManager.$currentRecordingDuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of AudioRecordingManager.totalRecordingDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of AudioRecordingManager.totalRecordingDuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of AudioRecordingManager.totalRecordingDuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of AudioRecordingManager.$totalRecordingDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of AudioRecordingManager.$totalRecordingDuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of AudioRecordingManager.$totalRecordingDuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of AudioRecordingManager.samples.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of AudioRecordingManager.$samples.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingStartTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingStartTime.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of AudioRecordingManager.recordingStartTime.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingStartTime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingStartTime.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of AudioRecordingManager.$recordingStartTime.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of AudioRecordingManager.elapsedSecondsSinceRecordingStart()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of AudioRecordingManager.__allocating_init(liveTranscriptionCoordinator:attachmentModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t dispatch thunk of AudioRecordingManager.startRecording()()
{
  unint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1C3C4DAF4;
  return v5();
}

uint64_t dispatch thunk of AudioRecordingManager.stopEverything(pause:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x228);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C4DAF4;
  return v7(a1);
}

uint64_t dispatch thunk of AudioRecordingManager.pauseRecording()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1C3C3259C;
  return v5();
}

uint64_t dispatch thunk of AudioRecordingManager.resumeRecording()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1C3C4DAF4;
  return v5();
}

void sub_1C3D51DF4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C3DB94F8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C3D51E3C()
{
  return type metadata accessor for AudioRecordingCoordinator(0);
}

uint64_t type metadata accessor for AudioRecordingCoordinator(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FC1F0);
}

void sub_1C3D51E64()
{
  sub_1C3D51F1C(319, &qword_1EB6FC2E0, &qword_1EB6FC088);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AudioRecordingCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudioRecordingCoordinator);
}

void sub_1C3D51F1C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1C3DB94F8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for __ICAudioRecordingManager()
{
  return self;
}

uint64_t sub_1C3D51F90()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D51FC8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1C3C4DAF4;
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EA3885A0 + dword_1EA3885A0);
  return v4(v2);
}

uint64_t sub_1C3D5207C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3D520B4(uint64_t a1, uint64_t a2)
{
  sub_1C3CA0938(a1, a2, v2);
}

uint64_t sub_1C3D520BC()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1C3D521AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1C3C3259C;
  return sub_1C3D4CF84(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1C3D522E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D52350()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D52390()
{
  return sub_1C3D48E04(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1C3D52398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NSProgress __swiftcall NSProgress.addingChild(totalUnitCount:pendingUnitCount:)(Swift::Int64 totalUnitCount, Swift::Int64 pendingUnitCount)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F90]), sel_init);
  objc_msgSend(v5, sel_setTotalUnitCount_, totalUnitCount);
  objc_msgSend(v2, sel_addChild_withPendingUnitCount_, v5, pendingUnitCount);
  return (NSProgress)v5;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSProgress.throwIfCancelled()()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    sub_1C3DB9C38();
    id v1 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v2 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_initWithDomain_code_userInfo_, v2, 3072, 0);

    swift_willThrow();
  }
}

uint64_t Collection.nonEmpty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = sub_1C3DBA548();
  uint64_t v6 = *(void *)(a1 - 8);
  if (v5)
  {
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v10 = *(void *)(a1 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v2, a1);
    uint64_t v6 = v10;
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  return v8(a2, v7, 1, a1);
}

uint64_t Collection.only.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v5 = &v14[-v4];
  if (sub_1C3DBA538() == 1)
  {
    sub_1C3DBA528();
    uint64_t v6 = (void (*)(unsigned char *, void))sub_1C3DBA5C8();
    uint64_t v8 = v7;
    uint64_t v9 = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v8, v9);
    v6(v14, 0);
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    uint64_t v12 = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = a3;
  v20[2] = a4;
  v20[3] = a5;
  void v20[4] = a6;
  v20[5] = a7;
  uint64_t v26 = a8;
  v20[6] = a8;
  v20[7] = a1;
  v20[8] = a2;
  uint64_t v11 = sub_1C3DB9AB8();
  swift_bridgeObjectRetain();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1C3C34894((void (*)(char *, char *))sub_1C3D52A48, (uint64_t)v20, v11, a6, v12, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v25);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8)
  {
    uint64_t v21 = v14;
    *(void *)&v25[0] = a3;
    uint64_t v16 = sub_1C3DBA128();
    uint64_t v17 = sub_1C3DB9AC8();
    uint64_t v18 = swift_getWitnessTable();
    uint64_t v19 = swift_getWitnessTable();
    sub_1C3DBB518();
    swift_bridgeObjectRelease();
    v25[0] = v25[1];
    uint64_t v21 = v16;
    uint64_t v22 = v17;
    uint64_t v23 = v18;
    uint64_t v24 = v19;
    sub_1C3DBACD8();
    swift_getWitnessTable();
    return sub_1C3DB9AA8();
  }
  return result;
}

uint64_t sub_1C3D52A48(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 56))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

void sub_1C3D52A80()
{
  uint64_t v0 = self;
  id v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_newOperationQueueWithName_, v1);

  qword_1EA3885D8 = (uint64_t)v2;
}

uint64_t static ICSearchQueryOperation.suggestionSearchResults(linkSuggestionQuery:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C3D52B6C, 0, 0);
}

uint64_t sub_1C3D52B6C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3885E8);
  *uint64_t v2 = v0;
  v2[1] = sub_1C3D52C74;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000002DLL, 0x80000001C3DF7AF0, sub_1C3D5304C, v1, v3);
}

uint64_t sub_1C3D52C74()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C3D52DAC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C3D52D90;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D52D90()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C3D52DAC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C3D52E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388628);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  if (qword_1EA385918 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EA3885D8, sel_cancelAllOperations);
  id v8 = objc_msgSend(objc_allocWithZone((Class)ICSearchQueryOperation), sel_initWithLinkSuggestionQuery_, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1C3D53D44;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3C9FDCC;
  aBlock[3] = &block_descriptor_16;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v8;
  swift_release();
  objc_msgSend(v12, sel_setCompletionBlock_, v11);
  _Block_release(v11);

  objc_msgSend((id)qword_1EA3885D8, sel_addOperation_, v12);
}

void sub_1C3D5304C(uint64_t a1)
{
  sub_1C3D52E10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C3D53054(void *a1)
{
  if (objc_msgSend(a1, sel_error))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388628);
    return sub_1C3DBA178();
  }
  else
  {
    id v3 = objc_msgSend(a1, sel_results);
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C3D53C34();
      sub_1C3DBA008();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388628);
    return sub_1C3DBA188();
  }
}

uint64_t sub_1C3D532A4(void *a1, void *aBlock)
{
  v2[3] = a1;
  v2[4] = _Block_copy(aBlock);
  v2[5] = swift_getObjCClassMetadata();
  id v4 = a1;
  return MEMORY[0x1F4188298](sub_1C3D53330, 0, 0);
}

uint64_t sub_1C3D53330()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  id v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3885E8);
  *id v4 = v0;
  v4[1] = sub_1C3D53438;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000002DLL, 0x80000001C3DF7AF0, sub_1C3D53DAC, v3, v5);
}

uint64_t sub_1C3D53438()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C3D53600;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C3D53554;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D53554()
{
  sub_1C3D53C34();
  uint64_t v1 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void (***)(void, void, void))(v0 + 32);
  ((void (**)(void, void *, void))v2)[2](v2, v1, 0);

  _Block_release(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C3D53600()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  uint64_t v2 = (void *)sub_1C3DB8788();

  uint64_t v3 = *(void (***)(void, void, void))(v0 + 32);
  ((void (**)(void, void, void *))v3)[2](v3, 0, v2);

  _Block_release(v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C3D536AC()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D536EC()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C3C4DAF4;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_1EA3885F0 + dword_1EA3885F0);
  return v5(v2, v3);
}

uint64_t sub_1C3D537A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1C3C4DAF4;
  return v6();
}

uint64_t sub_1C3D53870(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C3C4DAF4;
  return v7();
}

uint64_t sub_1C3D53940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DBA278();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C3DBA268();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C3D53AE4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C3DBA168();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C3D53AE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FBAE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3D53B44()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D53B7C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C3259C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA388610 + dword_1EA388610);
  return v6(a1, v4);
}

unint64_t sub_1C3D53C34()
{
  unint64_t result = qword_1EA388620;
  if (!qword_1EA388620)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388620);
  }
  return result;
}

uint64_t sub_1C3D53C74()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388628);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3D53D44()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388628);
  uint64_t v1 = *(void **)(v0 + 16);
  return sub_1C3D53054(v1);
}

uint64_t sub_1C3D53DB0@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_1C3DBACE8();
  swift_getObjectType();
  uint64_t result = sub_1C3DBACE8();
  if (v2 == result)
  {
    char v4 = sub_1C3DBACF8();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_1C3DBAF38();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3D53ECC(uint64_t a1)
{
  return sub_1C3D53F24(a1, sub_1C3CDB284, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1C3CDAFEC);
}

uint64_t sub_1C3D53EF8(uint64_t a1)
{
  return sub_1C3D53F24(a1, sub_1C3CDB284, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1C3CDB000);
}

uint64_t sub_1C3D53F24(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_1C3DBAAD8();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C3DBAB98();
    char v11 = MEMORY[0x1C877C010](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      sub_1C3CC0420(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    uint64_t v12 = a3(v6, v8, v5 != 0, a1);
    sub_1C3CC0420(v6, v8, v5 != 0);
    return v12;
  }
  uint64_t result = a2(a1);
  if ((v15 & 1) == 0)
  {
    uint64_t v8 = v14;
    if (*(_DWORD *)(a1 + 36) == v14)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D54048(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1C3DB9E58();
  }
  else {
    return 0;
  }
}

uint64_t sub_1C3D54090(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3870B8);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1C3DBA018();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C3D5416C()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA388630);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA388630);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static CallRecordingSplitter.cloneCallRecordingAttachmentAndPerformOffline(_:NGASR:context:attachmentIdentifier:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 136) = a3;
  *(void *)(v4 + 144) = a4;
  *(unsigned char *)(v4 + 224) = a2;
  *(void *)(v4 + 128) = a1;
  uint64_t v6 = sub_1C3DB88F8();
  *(void *)(v4 + 152) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v4 + 160) = v7;
  *(void *)(v4 + 168) = *(void *)(v7 + 64);
  *(void *)(v4 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388650);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 184) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 192) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C3D5437C;
  return static CallRecordingSplitter.splitTracks(_:)(v8, a1);
}

uint64_t sub_1C3D5437C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3D549D4;
  }
  else {
    uint64_t v2 = sub_1C3D54490;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D54490()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_1C3C2A448(v1, &qword_1EA388650);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void **)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v18 = *(void **)(v0 + 144);
    char v19 = *(unsigned char *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = v1 + *(int *)(v2 + 48);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v1, v6);
    v11(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v9, v6);
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = swift_allocObject();
    *(void *)(v0 + 208) = v13;
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v18;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v13 + v12, v5, v6);
    *(unsigned char *)(v13 + v12 + v17) = v19;
    id v14 = v8;
    id v15 = v18;
    id v16 = v14;
    swift_retain();
    return MEMORY[0x1F4188298](sub_1C3D546B0, 0, 0);
  }
}

uint64_t sub_1C3D546B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0[26];
  uint64_t v6 = (void *)v0[17];
  mach_timebase_info v1[2] = v2;
  v1[3] = sub_1C3D5481C;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = (void *)swift_allocObject();
  id v8[2] = sub_1C3D57558;
  v8[3] = v5;
  v8[4] = v7;
  v1[14] = sub_1C3CB3CDC;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1C3C9FDCC;
  v1[13] = &block_descriptor_17;
  uint64_t v9 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_performBlock_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1C3D5481C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 216) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_1C3D5498C, 0, 0);
  }
  else
  {

    swift_release_n();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_1C3D5498C()
{
  return swift_willThrow();
}

uint64_t sub_1C3D549D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static CallRecordingSplitter.splitTracks(_:)(uint64_t a1, uint64_t a2)
{
  v3[48] = a2;
  v3[49] = v2;
  v3[47] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  uint64_t v4 = sub_1C3DB8B98();
  v3[52] = v4;
  v3[53] = *(void *)(v4 - 8);
  v3[54] = swift_task_alloc();
  uint64_t v5 = sub_1C3DB88F8();
  v3[55] = v5;
  v3[56] = *(void *)(v5 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D54BEC, 0, 0);
}

uint64_t sub_1C3D54BEC()
{
  id v27 = v0;
  id v1 = objc_allocWithZone(MEMORY[0x1E4F166C8]);
  uint64_t v2 = (void *)sub_1C3DB8848();
  id v3 = objc_msgSend(v1, sel_initWithURL_options_, v2, 0);
  v0[64] = v3;

  if (qword_1EA385920 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[63];
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  uint64_t v7 = v0[48];
  uint64_t v8 = sub_1C3DB9048();
  v0[65] = __swift_project_value_buffer(v8, (uint64_t)qword_1EA388630);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[66] = v9;
  v0[67] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v4, v7, v6);
  uint64_t v10 = sub_1C3DB9028();
  os_log_type_t v11 = sub_1C3DBA688();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = v0[63];
  uint64_t v15 = v0[55];
  uint64_t v14 = v0[56];
  if (v12)
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    id v25 = v3;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v17 = v26;
    *(_DWORD *)id v16 = 136315138;
    sub_1C3D58744();
    uint64_t v18 = sub_1C3DBB248();
    v0[46] = sub_1C3C516D0(v18, v19, &v26);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v20(v13, v15);
    _os_log_impl(&dword_1C3A61000, v10, v11, "Attempting to split tracks at %s", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v17;
    id v3 = v25;
    MEMORY[0x1C877E600](v21, -1, -1);
    MEMORY[0x1C877E600](v16, -1, -1);
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v20(v0[63], v0[55]);
  }

  v0[68] = v20;
  uint64_t v22 = *MEMORY[0x1E4F15BA8];
  v0[69] = *MEMORY[0x1E4F15BA8];
  v0[2] = v0;
  v0[7] = v0 + 43;
  v0[3] = sub_1C3D54F1C;
  uint64_t v23 = swift_continuation_init();
  v0[31] = MEMORY[0x1E4F143A8];
  v0[32] = 0x40000000;
  v0[33] = sub_1C3D54090;
  v0[34] = &block_descriptor_6;
  v0[35] = v23;
  objc_msgSend(v3, sel_loadTracksWithMediaType_completionHandler_, v22, v0 + 31);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C3D54F1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 560) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3D565FC;
  }
  else {
    uint64_t v2 = sub_1C3D5502C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D5502C()
{
  unint64_t v1 = *(void *)(v0 + 344);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 552);
    uint64_t v4 = *(void **)(v0 + 512);
    *(void *)(v0 + 144) = v0;
    *(void *)(v0 + 184) = v0 + 336;
    *(void *)(v0 + 152) = sub_1C3D552EC;
    uint64_t v5 = swift_continuation_init();
    *(void *)(v0 + 288) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 296) = 0x40000000;
    *(void *)(v0 + 304) = sub_1C3D54090;
    *(void *)(v0 + 312) = &block_descriptor_7;
    *(void *)(v0 + 320) = v5;
    objc_msgSend(v4, sel_loadTracksWithMediaType_completionHandler_, v3, v0 + 288);
    return MEMORY[0x1F41881E8](v0 + 144);
  }
  else
  {
    uint64_t v6 = sub_1C3DB9028();
    os_log_type_t v7 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C3A61000, v6, v7, "Invalid number of audio tracks in file. Need 2 audio tracks with ID 0 and 1", v8, 2u);
      MEMORY[0x1C877E600](v8, -1, -1);
    }

    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v9 = 14;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1C3D552EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 568) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3D5679C;
  }
  else {
    uint64_t v2 = sub_1C3D553FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D553FC(void *a1)
{
  uint64_t v2 = v1[42];
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C877C220](0, v1[42]);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x1F41881E8](a1);
    }
    id v3 = *(id *)(v2 + 32);
  }
  id v4 = v3;
  swift_bridgeObjectRelease();
  v1[72] = v4;
  uint64_t v5 = v1[69];
  uint64_t v6 = (void *)v1[64];
  v1[10] = v1;
  v1[15] = v1 + 41;
  v1[11] = sub_1C3D55544;
  uint64_t v7 = swift_continuation_init();
  v1[26] = MEMORY[0x1E4F143A8];
  v1[27] = 0x40000000;
  v1[28] = sub_1C3D54090;
  v1[29] = &block_descriptor_8;
  v1[30] = v7;
  objc_msgSend(v6, sel_loadTracksWithMediaType_completionHandler_, v5, v1 + 26);
  a1 = v1 + 10;
  return MEMORY[0x1F41881E8](a1);
}

uint64_t sub_1C3D55544()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 584) = v1;
  if (v1) {
    uint64_t v2 = sub_1C3D55A9C;
  }
  else {
    uint64_t v2 = sub_1C3D55654;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C3D55654()
{
  uint64_t v1 = *(void *)(v0 + 328);
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x1C877C220](1, *(void *)(v0 + 328));
  }
  else
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v1 + 40);
  }
  id v3 = v2;
  *(void *)(v0 + 592) = v2;
  uint64_t v4 = *(void *)(v0 + 576);
  swift_bridgeObjectRelease();
  if (v4 && v3)
  {
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    uint64_t v5 = *(void *)(v0 + 488);
    uint64_t v6 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 440);
    uint64_t v8 = *(void *)(v0 + 416);
    uint64_t v7 = *(void *)(v0 + 424);
    uint64_t v22 = *(void *)(v0 + 448);
    id v24 = *(id *)(v0 + 576);
    id v9 = v3;
    uint64_t v10 = NSTemporaryDirectory();
    sub_1C3DB9C38();

    sub_1C3DB8808();
    swift_bridgeObjectRelease();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1C3DB8B28();
    os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v6, v8);
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB8858();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 600) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v26(v5, v23);
    uint64_t v12 = NSTemporaryDirectory();
    sub_1C3DB9C38();

    sub_1C3DB8808();
    swift_bridgeObjectRelease();
    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    sub_1C3DB8B28();
    v11(v6, v8);
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB8858();
    swift_bridgeObjectRelease();
    v26(v5, v23);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1C3D55C50;
    uint64_t v14 = *(void *)(v0 + 496);
    uint64_t v15 = *(void *)(v0 + 408);
    sub_1C3D57624(v15, (uint64_t)v24, v14);
  }
  else
  {
    id v16 = sub_1C3DB9028();
    os_log_type_t v17 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1C3A61000, v16, v17, "Missing tracks in file. Need 2 audio tracks with ID 0 and 1", v18, 2u);
      MEMORY[0x1C877E600](v18, -1, -1);
    }
    id v25 = *(void **)(v0 + 576);
    unint64_t v19 = *(void **)(v0 + 512);

    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v20 = 14;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(void (**)(void))(v0 + 8);
    v21();
  }
}

uint64_t sub_1C3D55A9C()
{
  uint64_t v1 = (void *)v0[73];
  swift_willThrow();

  id v2 = sub_1C3DB9028();
  os_log_type_t v3 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C3A61000, v2, v3, "Missing tracks in file. Need 2 audio tracks with ID 0 and 1", v4, 2u);
    MEMORY[0x1C877E600](v4, -1, -1);
  }
  id v9 = (void *)v0[72];
  uint64_t v5 = (void *)v0[64];

  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v6 = 14;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C3D55C50()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1C3D568C4;
  }
  else {
    id v2 = sub_1C3D55D64;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D55D64()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[51];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[78] = v4;
  v0[79] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    sub_1C3C2A448(v3, (uint64_t *)&unk_1EB6FC7E0);
    uint64_t v5 = sub_1C3DB9028();
    os_log_type_t v6 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1C3A61000, v5, v6, "did not get URL for local or remote track. Failing to create file for track", v7, 2u);
      MEMORY[0x1C877E600](v7, -1, -1);
    }
    uint64_t v8 = (void *)v0[74];
    id v9 = (void *)v0[72];
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[68];
    os_log_type_t v11 = (void *)v0[64];
    uint64_t v12 = v0[62];
    uint64_t v13 = v0[60];
    uint64_t v14 = v0[55];

    v10(v13, v14);
    v10(v12, v14);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v0[47], 1, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    uint64_t v18 = v0[59];
    unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v0[80] = v19;
    v0[81] = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v19(v18, v3, v1);
    uint64_t v20 = (void *)swift_task_alloc();
    v0[82] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1C3D5604C;
    uint64_t v21 = v0[74];
    uint64_t v22 = v0[60];
    uint64_t v23 = v0[50];
    return sub_1C3D57624(v23, v21, v22);
  }
}

uint64_t sub_1C3D5604C()
{
  *(void *)(*(void *)v1 + 664) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3D56BA8;
  }
  else {
    uint64_t v2 = sub_1C3D56160;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D56160()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 400);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 624))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, uint64_t))(v0 + 544))(*(void *)(v0 + 472), v1);
    sub_1C3C2A448(*(void *)(v0 + 400), (uint64_t *)&unk_1EB6FC7E0);
    uint64_t v3 = sub_1C3DB9028();
    os_log_type_t v4 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1C3A61000, v3, v4, "did not get URL for local or remote track. Failing to create file for track", v5, 2u);
      MEMORY[0x1C877E600](v5, -1, -1);
    }
    os_log_type_t v6 = *(void **)(v0 + 592);
    uint64_t v7 = *(void **)(v0 + 576);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    id v9 = *(void **)(v0 + 512);
    uint64_t v10 = *(void *)(v0 + 496);
    uint64_t v11 = *(void *)(v0 + 480);
    uint64_t v12 = *(void *)(v0 + 440);

    v8(v11, v12);
    v8(v10, v12);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528);
    uint64_t v16 = *(void *)(v0 + 456);
    uint64_t v17 = *(void *)(v0 + 384);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 640))(*(void *)(v0 + 464), v2, v1);
    v15(v16, v17, v1);
    uint64_t v18 = sub_1C3DB9028();
    os_log_type_t v19 = sub_1C3DBA688();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = *(void **)(v0 + 592);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    uint64_t v40 = *(void **)(v0 + 512);
    uint64_t v41 = *(void **)(v0 + 576);
    uint64_t v23 = *(void *)(v0 + 496);
    uint64_t v24 = *(void *)(v0 + 480);
    uint64_t v25 = *(void *)(v0 + 456);
    uint64_t v26 = *(void *)(v0 + 440);
    if (v20)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = v24;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v42 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1C3D58744();
      uint64_t v29 = sub_1C3DBB248();
      *(void *)(v0 + 360) = sub_1C3C516D0(v29, v30, &v42);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      v22(v25, v26);
      _os_log_impl(&dword_1C3A61000, v18, v19, "succesfully split tracks at %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v28, -1, -1);
      MEMORY[0x1C877E600](v27, -1, -1);

      v22(v39, v26);
      v22(v23, v26);
    }
    else
    {

      v22(v25, v26);
      v22(v24, v26);
      v22(v23, v26);
    }
    unsigned int v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 640);
    uint64_t v33 = *(void *)(v0 + 464);
    uint64_t v32 = *(void *)(v0 + 472);
    uint64_t v34 = *(void *)(v0 + 440);
    uint64_t v35 = *(void *)(v0 + 376);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
    uint64_t v36 = v35 + *(int *)(v13 + 48);
    v31(v35, v32, v34);
    v31(v36, v33, v34);
    uint64_t v14 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(*(void *)(v0 + 376), v14, 1, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_1C3D565FC()
{
  uint64_t v1 = *(void **)(v0 + 560);
  swift_willThrow();

  uint64_t v2 = sub_1C3DB9028();
  os_log_type_t v3 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl(&dword_1C3A61000, v2, v3, "Invalid number of audio tracks in file. Need 2 audio tracks with ID 0 and 1", v4, 2u);
    MEMORY[0x1C877E600](v4, -1, -1);
  }

  sub_1C3C2F090();
  swift_allocError();
  *uint64_t v5 = 14;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C3D5679C()
{
  uint64_t v1 = (void *)v0[71];
  swift_willThrow();

  v0[72] = 0;
  uint64_t v2 = v0[69];
  os_log_type_t v3 = (void *)v0[64];
  v0[10] = v0;
  v0[15] = v0 + 41;
  v0[11] = sub_1C3D55544;
  uint64_t v4 = swift_continuation_init();
  v0[26] = MEMORY[0x1E4F143A8];
  v0[27] = 0x40000000;
  v0[28] = sub_1C3D54090;
  v0[29] = &block_descriptor_8;
  v0[30] = v4;
  objc_msgSend(v3, sel_loadTracksWithMediaType_completionHandler_, v2, v0 + 26);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1C3D568C4()
{
  uint64_t v1 = *(void **)(v0 + 616);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v21 = *(void **)(v0 + 576);
    uint64_t v22 = *(void **)(v0 + 592);
    uint64_t v23 = *(void **)(v0 + 512);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v1;
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 352) = v9;
    sub_1C3DBA9A8();
    *uint64_t v7 = v9;

    _os_log_impl(&dword_1C3A61000, v4, v5, "could not transcribe the call recording. Failing to export track: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v7, -1, -1);
    MEMORY[0x1C877E600](v6, -1, -1);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 576);
    uint64_t v11 = *(void **)(v0 + 512);
  }
  uint64_t v12 = *(void **)(v0 + 592);
  uint64_t v13 = *(void **)(v0 + 576);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
  uint64_t v15 = *(void *)(v0 + 496);
  uint64_t v16 = *(void *)(v0 + 480);
  uint64_t v17 = *(void *)(v0 + 440);

  v14(v16, v17);
  v14(v15, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(*(void *)(v0 + 376), 1, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1C3D56BA8()
{
  (*(void (**)(void, void))(v0 + 544))(*(void *)(v0 + 472), *(void *)(v0 + 440));
  uint64_t v1 = *(void **)(v0 + 664);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C3DB9028();
  os_log_type_t v5 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v21 = *(void **)(v0 + 576);
    uint64_t v22 = *(void **)(v0 + 592);
    uint64_t v23 = *(void **)(v0 + 512);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v1;
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 352) = v9;
    sub_1C3DBA9A8();
    *uint64_t v7 = v9;

    _os_log_impl(&dword_1C3A61000, v4, v5, "could not transcribe the call recording. Failing to export track: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v7, -1, -1);
    MEMORY[0x1C877E600](v6, -1, -1);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 576);
    uint64_t v11 = *(void **)(v0 + 512);
  }
  uint64_t v12 = *(void **)(v0 + 592);
  uint64_t v13 = *(void **)(v0 + 576);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
  uint64_t v15 = *(void *)(v0 + 496);
  uint64_t v16 = *(void *)(v0 + 480);
  uint64_t v17 = *(void *)(v0 + 440);

  v14(v16, v17);
  v14(v15, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388660);
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(*(void *)(v0 + 376), 1, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

void sub_1C3D56EA0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v41[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = objc_msgSend(a1, sel_objectWithID_, a2);
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7 || (id v8 = v7, (v9 = objc_msgSend(v7, sel_audioModel)) == 0))
  {

    if (qword_1EA385920 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C3DB9048();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EA388630);
    uint64_t v6 = sub_1C3DB9028();
    os_log_type_t v22 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v6, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1C3A61000, v6, v22, "attachment not found for debug item / not an audio attachment", v23, 2u);
      MEMORY[0x1C877E600](v23, -1, -1);
    }
    goto LABEL_18;
  }
  uint64_t v10 = v9;
  v41[0] = 0;
  id v11 = objc_msgSend(v9, sel_createSubattachmentForRecordingAndReturnError_, v41);
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = v41[0];
    uint64_t v14 = (void *)sub_1C3DB8848();

    id v15 = objc_msgSend(v8, sel_subAttachments);
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
      sub_1C3C4C8F0();
      uint64_t v17 = sub_1C3DBA438();

      uint64_t v18 = sub_1C3D53F24(v17, sub_1C3CDB284, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1C3CDAFEC);
      swift_bridgeObjectRelease();
      if (v18)
      {
        os_log_t log = (os_log_t)v18;
        if (qword_1EA385870 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v19 = (id)qword_1EA387190;
        id v20 = objc_msgSend(v8, sel_objectID);
        sub_1C3CA0C74((uint64_t)&unk_1F1F28F30, a4 & 1, v20);

        objc_msgSend(v8, sel_setPreviewUpdateDate_, 0);
        objc_msgSend(a1, sel_ic_save);

        return;
      }
    }
    if (qword_1EA385920 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C3DB9048();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EA388630);
    uint64_t v25 = sub_1C3DB9028();
    os_log_type_t v26 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1C3A61000, v25, v26, "no subattachment on new call recording", v27, 2u);
      MEMORY[0x1C877E600](v27, -1, -1);
    }

LABEL_18:
    return;
  }
  id v28 = v41[0];
  uint64_t v29 = (void *)sub_1C3DB8798();

  swift_willThrow();
  if (qword_1EA385920 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C3DB9048();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EA388630);
  id v31 = v29;
  id v32 = v29;
  uint64_t v33 = sub_1C3DB9028();
  os_log_type_t v34 = sub_1C3DBA6A8();
  loga = v33;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138412290;
    id v37 = v29;
    uint64_t v38 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v41[0] = v38;
    sub_1C3DBA9A8();
    void *v36 = v38;

    _os_log_impl(&dword_1C3A61000, loga, v34, "could not create subattachment for call recording: %@", v35, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v36, -1, -1);
    MEMORY[0x1C877E600](v35, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C3D57480()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C3D57558()
{
  uint64_t v1 = *(void *)(sub_1C3DB88F8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1C3D56EA0(*(void **)(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t sub_1C3D575EC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3D57624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  uint64_t v4 = sub_1C3DB88F8();
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D57724, 0, 0);
}

uint64_t sub_1C3D57724()
{
  uint64_t v29 = v0;
  v28[1] = *MEMORY[0x1E4F143B8];
  if (qword_1EA385920 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[23];
  uint64_t v5 = sub_1C3DB9048();
  v0[28] = __swift_project_value_buffer(v5, (uint64_t)qword_1EA388630);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[29] = v6;
  v0[30] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v3);
  uint64_t v7 = sub_1C3DB9028();
  os_log_type_t v8 = sub_1C3DBA688();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[27];
  uint64_t v11 = v0[25];
  if (v9)
  {
    uint64_t v26 = v0[24];
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v28[0] = v27;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = sub_1C3DB87C8();
    v0[20] = sub_1C3C516D0(v13, v14, v28);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    id v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v26);
    _os_log_impl(&dword_1C3A61000, v7, v8, "Exporting track to file %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v27, -1, -1);
    MEMORY[0x1C877E600](v12, -1, -1);
  }
  else
  {
    id v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v0[27], v0[24]);
  }

  v0[31] = v15;
  uint64_t v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16590]), sel_init);
  v0[32] = v16;
  id v17 = [v16 addMutableTrackWithMediaType:*MEMORY[0x1E4F15BA8] preferredTrackID:0];
  v0[33] = v17;
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387268);
    uint64_t v18 = sub_1C3DB8D68();
    v0[34] = v18;
    id v19 = (void *)swift_task_alloc();
    v0[35] = v19;
    *id v19 = v0;
    v19[1] = sub_1C3D57B48;
    return MEMORY[0x1F4182DC0](v0 + 2, v18);
  }
  else
  {
    id v20 = sub_1C3DB9028();
    os_log_type_t v21 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl(&dword_1C3A61000, v20, v21, "Not able to add a mutable track to composition. Failing to create file for track", v22, 2u);
      MEMORY[0x1C877E600](v22, -1, -1);
      uint64_t v23 = v16;
    }
    else
    {
      uint64_t v23 = v20;
      id v20 = v16;
    }

    (*(void (**)(void, uint64_t, uint64_t, void))(v0[25] + 56))(v0[21], 1, 1, v0[24]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
}

uint64_t sub_1C3D57B48()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C3D585C0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C3D57C98;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D57C98()
{
  uint64_t v50 = v0;
  v49[1] = *MEMORY[0x1E4F143B8];
  *(void *)(v0 + 64) = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = MEMORY[0x1E4F1FA48];
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v8 = *MEMORY[0x1E4F1FA48];
  uint64_t v9 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 72) = v4;
  *(_OWORD *)(v0 + 80) = v7;
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v3;
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = *(void *)(v6 + 8);
  *(void *)(v0 + 128) = v9;
  unsigned int v10 = objc_msgSend(v1, sel_insertTimeRange_ofTrack_atTime_error_, v0 + 64, v2, v0 + 112, v0 + 136);
  uint64_t v11 = *(void **)(v0 + 136);
  if (v10)
  {
    uint64_t v12 = *(void **)(v0 + 256);
    sub_1C3DB9C38();
    id v13 = objc_allocWithZone(MEMORY[0x1E4F16360]);
    id v14 = v12;
    id v15 = v11;
    uint64_t v16 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v13, sel_initWithAsset_presetName_, v14, v16);
    *(void *)(v0 + 296) = v17;

    if (v17)
    {
      id v18 = objc_msgSend(self, sel_defaultManager);
      id v19 = (void *)sub_1C3DB8848();
      *(void *)(v0 + 152) = 0;
      unsigned int v20 = objc_msgSend(v18, sel_removeItemAtURL_error_, v19, v0 + 152);

      os_log_type_t v21 = *(void **)(v0 + 152);
      if (v20)
      {
        id v22 = v21;
      }
      else
      {
        id v41 = v21;
        uint64_t v42 = (void *)sub_1C3DB8798();

        swift_willThrow();
      }
      uint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v43;
      *uint64_t v43 = v0;
      v43[1] = sub_1C3D5820C;
      uint64_t v44 = *(void *)(v0 + 184);
      uint64_t v45 = *MEMORY[0x1E4F15A78];
      return MEMORY[0x1F4182DB0](v44, v45, 0, 0);
    }
    uint64_t v27 = sub_1C3DB9028();
    uint64_t v28 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1C3A61000, v27, (os_log_type_t)v28, "Not able to create a AVExportSession. Failing to export track", v29, 2u);
      MEMORY[0x1C877E600](v29, -1, -1);
    }

    (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 208), *(void *)(v0 + 184), *(void *)(v0 + 192));
    uint64_t v30 = sub_1C3DB9028();
    os_log_type_t v31 = sub_1C3DBA688();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = *(void **)(v0 + 264);
    os_log_type_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v35 = *(void *)(v0 + 208);
    uint64_t v36 = *(void *)(v0 + 192);
    if (v32)
    {
      uint64_t v48 = *(void **)(v0 + 256);
      id v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = v34;
      uint64_t v38 = swift_slowAlloc();
      v49[0] = v38;
      *(_DWORD *)id v37 = 136315138;
      uint64_t v39 = sub_1C3DB87C8();
      *(void *)(v0 + 144) = sub_1C3C516D0(v39, v40, v49);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      v47(v35, v36);
      _os_log_impl(&dword_1C3A61000, v30, v31, "Finished export %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v38, -1, -1);
      MEMORY[0x1C877E600](v37, -1, -1);
    }
    else
    {

      v34(v35, v36);
    }
    (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 192));
    (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 200) + 56))(*(void *)(v0 + 168), 0, 1, *(void *)(v0 + 192));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 256);
    uint64_t v23 = *(void **)(v0 + 264);
    id v25 = v11;
    sub_1C3DB8798();

    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

uint64_t sub_1C3D5820C()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3D58678;
  }
  else {
    uint64_t v2 = sub_1C3D5834C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D5834C()
{
  uint64_t v19 = v0;
  v18[1] = *MEMORY[0x1E4F143B8];

  (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 208), *(void *)(v0 + 184), *(void *)(v0 + 192));
  uint64_t v1 = sub_1C3DB9028();
  os_log_type_t v2 = sub_1C3DBA688();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v16 = *(void **)(v0 + 264);
    id v17 = *(void **)(v0 + 256);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 192);
    id v15 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v18[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_1C3DB87C8();
    *(void *)(v0 + 144) = sub_1C3C516D0(v6, v7, v18);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    v15(v3, v14);
    _os_log_impl(&dword_1C3A61000, v1, v2, "Finished export %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v5, -1, -1);
    MEMORY[0x1C877E600](v4, -1, -1);
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 264);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 192);

    v9(v10, v11);
  }
  (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 192));
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 200) + 56))(*(void *)(v0 + 168), 0, 1, *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C3D585C0()
{
  uint64_t v1 = *(void **)(v0 + 264);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C3D58678()
{
  uint64_t v1 = *(void **)(v0 + 256);
  os_log_type_t v2 = *(void **)(v0 + 264);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t CallRecordingSplitter.deinit()
{
  return v0;
}

uint64_t CallRecordingSplitter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C3D58744()
{
  unint64_t result = qword_1EB6FC740;
  if (!qword_1EB6FC740)
  {
    sub_1C3DB88F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC740);
  }
  return result;
}

uint64_t type metadata accessor for CallRecordingSplitter()
{
  return self;
}

uint64_t method lookup function for CallRecordingSplitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CallRecordingSplitter);
}

uint64_t sub_1C3D587D8()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA388670);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA388670);
  if (qword_1EB6FC718 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC520);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t ShareActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ShareActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*ShareActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareActivityEvent()
{
  uint64_t result = qword_1EA388690;
  if (!qword_1EA388690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShareActivityEvent.object.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v4;
  return result;
}

void (*ShareActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.participant.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 24));
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ShareActivityEvent.participant.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for ShareActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*ShareActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ShareActivityEvent.hash(into:)()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t ShareActivityEvent.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D58E7C()
{
  return sub_1C3DBB608();
}

uint64_t ShareActivityEvent.init(cloudSyncingObject:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v4 - 8);
  __n128 v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v50 - v12;
  uint64_t v14 = type metadata accessor for ShareActivityEvent();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_isSharedRootObject))
  {

    uint64_t v34 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v34, 1, v14);
  }
  uint64_t v53 = v14;
  id v18 = objc_msgSend(a1, sel_serverShare);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v52 = a2;
    id v20 = objc_msgSend(v18, sel_creationDate);
    if (v20)
    {
      os_log_type_t v21 = v20;
      sub_1C3DB8AC8();

      id v22 = v11;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v23(v6, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v23(v13, v6, v7);
        uint64_t v24 = a1;
        NotesShared::ActivityEventObject_optional v58 = ActivityEventObject.init(cloudSyncingObject:)(v24);
        uint64_t v25 = v56;
        if (v56)
        {
          uint64_t v50 = v54 & 1;
          uint64_t v51 = v55;
          if ([(ICCloudSyncingObject *)v24 isOwnedByCurrentUser])
          {
            ActivityEventParticipant.init(cloudSyncingObject:)(v24);

            uint64_t v26 = v55;
            if (v55)
            {
LABEL_8:
              uint64_t v28 = v56;
              uint64_t v27 = v57;
              uint64_t v29 = v23;
              id v30 = v54;
              v29(v17, v13, v7);
              a2 = v52;
              uint64_t v31 = v53;
              BOOL v32 = &v17[*(int *)(v53 + 20)];
              *BOOL v32 = v50;
              *((void *)v32 + 1) = v51;
              *((void *)v32 + 2) = v25;
              uint64_t v33 = &v17[*(int *)(v31 + 24)];
              *(void *)uint64_t v33 = v30;
              *((void *)v33 + 1) = v26;
              *((void *)v33 + 2) = v28;
              *((void *)v33 + 3) = v27;
              sub_1C3D598A8((uint64_t)v17, a2);
              uint64_t v34 = 0;
              uint64_t v14 = v53;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v34, 1, v14);
            }
          }
          else
          {
            ActivityEventParticipant.init(participant:)((CKShareParticipant)objc_msgSend(v19, sel_owner));

            uint64_t v26 = v55;
            if (v55) {
              goto LABEL_8;
            }
          }
          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
          swift_bridgeObjectRelease();
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        }
        goto LABEL_25;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    sub_1C3C37744((uint64_t)v6);
    if (qword_1EA385928 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1C3DB9048();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EA388670);
    id v43 = a1;
    uint64_t v44 = sub_1C3DB9028();
    os_log_type_t v45 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138412290;
      id v48 = objc_msgSend(v43, sel_objectID);
      id v54 = v48;
      sub_1C3DBA9A8();
      *uint64_t v47 = v48;

      _os_log_impl(&dword_1C3A61000, v44, v45, "Object share must have a creation date — returning nil {objectID: %@}", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      uint64_t v34 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v47, -1, -1);
      MEMORY[0x1C877E600](v46, -1, -1);

LABEL_26:
      a2 = v52;
      uint64_t v14 = v53;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v34, 1, v14);
    }

LABEL_25:
    uint64_t v34 = 1;
    goto LABEL_26;
  }
  if (qword_1EA385928 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1C3DB9048();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EA388670);
  id v36 = a1;
  id v37 = sub_1C3DB9028();
  os_log_type_t v38 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    unint64_t v40 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 138412290;
    id v41 = objc_msgSend(v36, sel_objectID);
    id v54 = v41;
    sub_1C3DBA9A8();
    void *v40 = v41;

    _os_log_impl(&dword_1C3A61000, v37, v38, "Object must have a share — returning nil {objectID: %@}", v39, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v40, -1, -1);
    MEMORY[0x1C877E600](v39, -1, -1);
  }
  else
  {
  }
  uint64_t v34 = 1;
  uint64_t v14 = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v34, 1, v14);
}

uint64_t _s11NotesShared18ShareActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C3DB8AB8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ShareActivityEvent();
  uint64_t v5 = *(int *)(v4 + 20);
  int v6 = *(unsigned __int8 *)(a1 + v5);
  uint64_t v8 = *(void *)(a1 + v5 + 8);
  uint64_t v7 = *(void *)(a1 + v5 + 16);
  uint64_t v9 = a2 + v5;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v6) {
    uint64_t v12 = 1702129518;
  }
  else {
    uint64_t v12 = 0x7265646C6F66;
  }
  if (v6) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE600000000000000;
  }
  if (*(unsigned char *)v9) {
    uint64_t v14 = 1702129518;
  }
  else {
    uint64_t v14 = 0x7265646C6F66;
  }
  if (*(unsigned char *)v9) {
    unint64_t v15 = 0xE400000000000000;
  }
  else {
    unint64_t v15 = 0xE600000000000000;
  }
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1C3DBB3B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v8 == v11 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v20 & 1) == 0) {
      return result;
    }
  }
  uint64_t v21 = *(int *)(v4 + 24);
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1]) {
    return 1;
  }
  return sub_1C3DBB3B8();
}

uint64_t sub_1C3D598A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D5990C()
{
  return sub_1C3D59954(&qword_1EA388688, (void (*)(uint64_t))type metadata accessor for ShareActivityEvent);
}

uint64_t sub_1C3D59954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareActivityEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    unint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareActivityEvent(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (_OWORD *)(a1 + v8);
  uint64_t v12 = (_OWORD *)(a2 + v8);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t assignWithTake for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *long long v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D59E4C);
}

uint64_t sub_1C3D59E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ShareActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D59F24);
}

uint64_t sub_1C3D59F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C3D59FE4()
{
  uint64_t result = sub_1C3DB8AF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

NotesShared::AttachmentID __swiftcall AttachmentID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static AttachmentID.uriTypeName.getter()
{
  return 0x656D686361747461;
}

void AttachmentID.contextType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AttachmentID.contextType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void (*AttachmentID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AttachmentID.managedIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AttachmentID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*AttachmentID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AttachmentID.hash(into:)()
{
  if (*v0 == 2)
  {
    sub_1C3DBB5F8();
  }
  else
  {
    sub_1C3DBB5F8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t AttachmentID.hashValue.getter()
{
  int v1 = *v0;
  sub_1C3DBB5D8();
  sub_1C3DBB5F8();
  if (v1 != 2)
  {
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5A2FC()
{
  return 0x656D686361747461;
}

uint64_t sub_1C3D5A318()
{
  return sub_1C3D5B228(*v0, *((void *)v0 + 1), *((void *)v0 + 2));
}

uint64_t sub_1C3D5A324()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C28588(*v0, *((void *)v0 + 1), *((void *)v0 + 2), (uint64_t)v3);
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C3C36FB8((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v6 = sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1C3D5A458(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3D5A488();
  unint64_t result = sub_1C3D5A4DC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3D5A488()
{
  unint64_t result = qword_1EA3886A0;
  if (!qword_1EA3886A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886A0);
  }
  return result;
}

unint64_t sub_1C3D5A4DC()
{
  unint64_t result = qword_1EA3886A8;
  if (!qword_1EA3886A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886A8);
  }
  return result;
}

unint64_t sub_1C3D5A530(void *a1)
{
  a1[1] = sub_1C3D5A568();
  a1[2] = sub_1C3D5A5BC();
  unint64_t result = sub_1C3D5A610();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3D5A568()
{
  unint64_t result = qword_1EA3886B0;
  if (!qword_1EA3886B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886B0);
  }
  return result;
}

unint64_t sub_1C3D5A5BC()
{
  unint64_t result = qword_1EA3886B8;
  if (!qword_1EA3886B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886B8);
  }
  return result;
}

unint64_t sub_1C3D5A610()
{
  unint64_t result = qword_1EA3886C0;
  if (!qword_1EA3886C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886C0);
  }
  return result;
}

unint64_t sub_1C3D5A668()
{
  unint64_t result = qword_1EA3886C8;
  if (!qword_1EA3886C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentID()
{
  return &type metadata for AttachmentID;
}

void sub_1C3D5A6D0(void *a1, unint64_t *a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1C3DB9A78();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  os_log_type_t v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC490);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF0);
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  MEMORY[0x1F4188790](v11 - 8);
  long long v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  uint64_t v40 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  id v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v42.receiver = v18;
  v42.super_class = v17;
  id v19 = a1;
  char v20 = (char *)objc_msgSendSuper2(&v42, sel_init);
  id v21 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v21
    && (uint64_t v22 = v21,
        MEMORY[0x1F4188790](v21),
        *(&v33 - 2) = (uint64_t)v20,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310),
        sub_1C3DBA838(),
        v22,
        (uint64_t v23 = v41) != 0))
  {
    sub_1C3CEE0EC((uint64_t)v41, (uint64_t)v13);
    uint64_t v24 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v13, 1, v14) == 1)
    {

      sub_1C3C2A448((uint64_t)v13, &qword_1EB6FBF88);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v16, v13, v14);
      swift_getKeyPath();
      sub_1C3D5B0AC();
      sub_1C3DB9988();
      swift_release();
      uint64_t v25 = v39;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v8, 1, v9) == 1)
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v14);

        sub_1C3C2A448((uint64_t)v8, &qword_1EB6FBFF8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v37, v8, v9);
        sub_1C3D5B104();
        sub_1C3DB9948();
        id v26 = objc_allocWithZone((Class)sub_1C3DB9728());
        uint64_t v27 = (void *)sub_1C3DB9718();
        sub_1C3DB9A68();
        uint64_t v28 = v34;
        unint64_t v29 = *v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v28 = v29;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v29 = sub_1C3D83538(0, *(void *)(v29 + 16) + 1, 1, v29);
          *uint64_t v28 = v29;
        }
        unint64_t v32 = *(void *)(v29 + 16);
        unint64_t v31 = *(void *)(v29 + 24);
        if (v32 >= v31 >> 1)
        {
          unint64_t v29 = sub_1C3D83538(v31 > 1, v32 + 1, 1, v29);
          *uint64_t v28 = v29;
        }
        *(void *)(v29 + 16) = v32 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v29+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v32, v38, v36);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v9);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v14);
      }
    }
  }
  else
  {
  }
}

uint64_t sub_1C3D5AC9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C3D5B160(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C3DB9638();
}

id ICSystemPaperDrawingsHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ICSystemPaperDrawingsHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSystemPaperDrawingsHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICSystemPaperDrawingsHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSystemPaperDrawingsHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared27ICSystemPaperDrawingsHelperC21drawingsForAttachmentySay9PencilKit9PKDrawingVGSo12ICAttachmentCFZ_0(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void (*)())objc_msgSend(a1, sel_managedObjectContext);
  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = &v11;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C3D5B06C;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1C3CD1720;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3D7A8B4;
  aBlock[3] = &block_descriptor_18;
  uint64_t v7 = _Block_copy(aBlock);
  id v8 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v4 & 1) == 0)
  {
    uint64_t v3 = sub_1C3D5B06C;
    uint64_t v2 = v11;
LABEL_4:
    sub_1C3C4D710((uint64_t)v3);
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ICSystemPaperDrawingsHelper()
{
  return self;
}

uint64_t sub_1C3D5B034()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C3D5B06C()
{
  sub_1C3D5A6D0(*(void **)(v0 + 16), *(unint64_t **)(v0 + 24));
}

uint64_t sub_1C3D5B074()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D5B084()
{
  return sub_1C3DB9628();
}

unint64_t sub_1C3D5B0AC()
{
  unint64_t result = qword_1EB6FC460;
  if (!qword_1EB6FC460)
  {
    sub_1C3DB9648();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC460);
  }
  return result;
}

unint64_t sub_1C3D5B104()
{
  unint64_t result = qword_1EB6FC488;
  if (!qword_1EB6FC488)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FBFF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC488);
  }
  return result;
}

uint64_t sub_1C3D5B160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBFF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D5B1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D5B258(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C3C28574, 0xD000000000000016, 0x80000001C3DF7C40);
}

uint64_t sub_1C3D5B1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D5B258(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C3C28D88, 0xD000000000000014, 0x80000001C3DF7C20);
}

uint64_t sub_1C3D5B228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D5B258(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C3C28588, 0xD00000000000001ALL, 0x80000001C3DF7C00);
}

uint64_t sub_1C3D5B258(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, unint64_t a6)
{
  int v12 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12 != 2)
  {
    uint64_t v16 = 1819112552;
    if ((a1 & 1) == 0) {
      uint64_t v16 = 0x6E7265646F6DLL;
    }
    unint64_t v17 = 0xE400000000000000;
    if ((a1 & 1) == 0) {
      unint64_t v17 = 0xE600000000000000;
    }
    uint64_t v24 = v16;
    unint64_t v25 = v17;
    sub_1C3DB9CA8();
  }
  a4(a1, a2, a3);
  uint64_t v18 = sub_1C3DB88F8();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
    sub_1C3C36FB8((uint64_t)v15);
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  else
  {
    uint64_t v20 = sub_1C3DB87E8();
    unint64_t v21 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  }
  uint64_t v24 = v20;
  unint64_t v25 = v21;
  sub_1C3DB9CA8();
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  uint64_t v24 = a5;
  unint64_t v25 = a6;
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  return v24;
}

NotesShared::TableID __swiftcall TableID.init(contextType:managedIdentifier:)(NotesShared::ManagedEntityContextType_optional contextType, Swift::String managedIdentifier)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)contextType.value;
  *(Swift::String *)(v2 + 8) = managedIdentifier;
  result.managedIdentifier = managedIdentifier;
  result.contextType = contextType;
  return result;
}

uint64_t static TableID.uriTypeName.getter()
{
  return 0x656C626174;
}

void TableID.contextType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TableID.contextType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void (*TableID.contextType.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TableID.managedIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TableID.managedIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*TableID.managedIdentifier.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t TableID.hash(into:)()
{
  if (*v0 == 2)
  {
    sub_1C3DBB5F8();
  }
  else
  {
    sub_1C3DBB5F8();
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t TableID.hashValue.getter()
{
  int v1 = *v0;
  sub_1C3DBB5D8();
  sub_1C3DBB5F8();
  if (v1 != 2)
  {
    sub_1C3DB9D08();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  swift_bridgeObjectRelease();
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5B70C()
{
  return 0x656C626174;
}

uint64_t sub_1C3D5B720()
{
  return sub_1C3D5B258(*v0, *((void *)v0 + 1), *((void *)v0 + 2), (void (*)(uint64_t, uint64_t, uint64_t))sub_1C3C28D98, 0xD000000000000015, 0x80000001C3DF7BE0);
}

uint64_t sub_1C3D5B76C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C28D98(*v0, *((void *)v0 + 1), *((void *)v0 + 2), (uint64_t)v3);
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C3C36FB8((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v6 = sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  return v6;
}

unint64_t sub_1C3D5B8A0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3D5B8D0();
  unint64_t result = sub_1C3D5B924();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3D5B8D0()
{
  unint64_t result = qword_1EA3886D0;
  if (!qword_1EA3886D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886D0);
  }
  return result;
}

unint64_t sub_1C3D5B924()
{
  unint64_t result = qword_1EA3886D8;
  if (!qword_1EA3886D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886D8);
  }
  return result;
}

unint64_t sub_1C3D5B978(void *a1)
{
  a1[1] = sub_1C3D5B9B0();
  a1[2] = sub_1C3D5BA04();
  unint64_t result = sub_1C3D5BA58();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3D5B9B0()
{
  unint64_t result = qword_1EA3886E0;
  if (!qword_1EA3886E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886E0);
  }
  return result;
}

unint64_t sub_1C3D5BA04()
{
  unint64_t result = qword_1EA3886E8;
  if (!qword_1EA3886E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886E8);
  }
  return result;
}

unint64_t sub_1C3D5BA58()
{
  unint64_t result = qword_1EA3886F0;
  if (!qword_1EA3886F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886F0);
  }
  return result;
}

unint64_t sub_1C3D5BAB0()
{
  unint64_t result = qword_1EA3886F8;
  if (!qword_1EA3886F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3886F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TableID()
{
  return &type metadata for TableID;
}

Swift::Void __swiftcall NSUndoManager.registerUndo(for:cloudSyncingObject:)(ICCloudSyncingObjectActivityEvent_optional a1, ICCloudSyncingObject_optional *cloudSyncingObject)
{
  if (a1.value.super.isa)
  {
    data = a1.value._data;
    if (a1.value._data)
    {
      Class isa = a1.value.super.isa;
      *(void *)(swift_allocObject() + 16) = a1.value.super.isa;
      sub_1C3D5BC40();
      uint64_t v4 = isa;
      uint64_t v5 = data;
      sub_1C3DBA678();

      swift_release();
    }
  }
}

uint64_t sub_1C3D5BBDC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3D5BC14(ICCloudSyncingObjectActivityEvent a1@<0:X0, 8:X1, 16:X2>)
{
  a1.super.Class isa = *(Class *)(v1 + 16);
  ICCloudSyncingObject.remove(cloudSyncingObjectActivityEvent:)(a1);
}

unint64_t sub_1C3D5BC40()
{
  unint64_t result = qword_1EA3876C0;
  if (!qword_1EA3876C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3876C0);
  }
  return result;
}

uint64_t sub_1C3D5BC80(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  if (a3 && a4)
  {
    uint64_t v6 = (void *)result;
    *(void *)(swift_allocObject() + 16) = a3;
    sub_1C3D5BC40();
    id v7 = a3;
    id v8 = a4;
    id v9 = v7;
    id v10 = v8;
    id v11 = v6;
    sub_1C3DBA678();

    return swift_release();
  }
  return result;
}

void sub_1C3D5BD7C()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388700 = v3;
  *(void *)algn_1EA388708 = v5;
}

uint64_t static NotesSiriLocalization.notesText.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385930, &qword_1EA388700);
}

uint64_t static NotesSiriLocalization.noteSubtitleText(folderString:accountString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = self;
  id v9 = (void *)sub_1C3DB9BF8();
  id v10 = (void *)sub_1C3DB9BF8();
  id v11 = objc_msgSend(v8, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v9, v10, 0, 1);

  sub_1C3DB9C38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C3DD5130;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1C3C4C74C();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 72) = a3;
  *(void *)(v12 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C3DB9C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1C3D5BFAC()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388710 = v3;
  *(void *)algn_1EA388718 = v5;
}

uint64_t static NotesSiriLocalization.lockedText.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385938, &qword_1EA388710);
}

void sub_1C3D5C078()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388720 = v3;
  *(void *)algn_1EA388728 = v5;
}

uint64_t static NotesSiriLocalization.unsupportedTitle.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385940, &qword_1EA388720);
}

void sub_1C3D5C144()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388730 = v3;
  *(void *)algn_1EA388738 = v5;
}

uint64_t static NotesSiriLocalization.unsupportedDescription.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385948, &qword_1EA388730);
}

void sub_1C3D5C210()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388740 = v3;
  *(void *)algn_1EA388748 = v5;
}

uint64_t static NotesSiriLocalization.openNoteDescription.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385950, &qword_1EA388740);
}

uint64_t static NotesSiriLocalization.plusText()()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = (void *)sub_1C3DB9BF8();
  id v3 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, v2, 0, 1);

  sub_1C3DB9C38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DD3D30;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = 25;
  uint64_t v6 = sub_1C3DB9C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static NotesSiriLocalization.axFolderText(folderName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_1C3DB9BF8();
  id v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

  sub_1C3DB9C38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3DD3D30;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1C3C4C74C();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C3DB9C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static NotesSiriLocalization.axAccountText(accountName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_1C3DB9BF8();
  id v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 1);

  sub_1C3DB9C38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C3DD3D30;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1C3C4C74C();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C3DB9C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

char *static NotesSiriLocalization.axNoteCountText(count:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
  uint64_t v3 = MEMORY[0x1E4FBB5C8];
  *(void *)(inited + 56) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 32) = a1;
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_1C3DB9BF8();
  id v6 = objc_msgSend(v4, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v5, 0, 0, 0);

  uint64_t v7 = sub_1C3DB9C38();
  uint64_t v9 = v8;

  swift_bridgeObjectRetain();
  id v10 = sub_1C3D2F9C4(inited, v7, v9);
  swift_bridgeObjectRelease_n();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
  swift_arrayDestroy();
  return v10;
}

void sub_1C3D5C78C()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388750 = v3;
  *(void *)algn_1EA388758 = v5;
}

uint64_t static NotesSiriLocalization.noteListInteractionText.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385958, &qword_1EA388750);
}

void sub_1C3D5C858()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388760 = v3;
  *(void *)algn_1EA388768 = v5;
}

uint64_t static NotesSiriLocalization.noteInteractionText.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385960, &qword_1EA388760);
}

void sub_1C3D5C924()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  uint64_t v5 = v4;

  qword_1EA388770 = v3;
  *(void *)algn_1EA388778 = v5;
}

uint64_t static NotesSiriLocalization.headerInteractionText.getter()
{
  return sub_1C3D5C9F0(&qword_1EA385968, &qword_1EA388770);
}

uint64_t sub_1C3D5C9F0(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for NotesSiriLocalization()
{
  return &type metadata for NotesSiriLocalization;
}

uint64_t sub_1C3D5CA54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_1C3D5DC10();
  return sub_1C3DBA378();
}

id NSManagedObjectContext.ObjectIDNotification.context.getter()
{
  return *v0;
}

void NSManagedObjectContext.ObjectIDNotification.context.setter(void *a1)
{
  id *v1 = a1;
}

void (*NSManagedObjectContext.ObjectIDNotification.context.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

void (*NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

void (*NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void static NSManagedObjectContext._makeObjectIDNotification(_:)(void *a1@<X8>)
{
  sub_1C3DB8288();
  if (!v18)
  {
    __break(1u);
    goto LABEL_25;
  }
  sub_1C3C2A5D8(&v17, v14);
  sub_1C3D5CEAC();
  swift_dynamicCast();
  uint64_t v2 = v15;
  uint64_t v3 = sub_1C3DB8298();
  if (!v3)
  {
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v4 = v3;
  uint64_t v12 = sub_1C3DB9C38();
  sub_1C3DBABD8();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C3D03DC8((uint64_t)v14), (v6 & 1) != 0))
  {
    sub_1C3C4BC70(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_1C3CC629C((uint64_t)v14);
  if (*((void *)&v16 + 1))
  {
    sub_1C3C2A5D8(&v15, &v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE08);
    swift_dynamicCast();
    uint64_t v7 = v12;
  }
  else
  {
    sub_1C3CC623C((uint64_t)&v15);
    if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C3DBAFB8())
    {
      sub_1C3C5BDCC(MEMORY[0x1E4FBC860]);
      uint64_t v7 = v11;
    }
    else
    {
      uint64_t v7 = MEMORY[0x1E4FBC870];
    }
  }
  uint64_t v13 = sub_1C3DB9C38();
  sub_1C3DBABD8();
  if (*(void *)(v4 + 16) && (unint64_t v8 = sub_1C3D03DC8((uint64_t)v14), (v9 & 1) != 0))
  {
    sub_1C3C4BC70(*(void *)(v4 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C3CC629C((uint64_t)v14);
  if (*((void *)&v16 + 1))
  {
    sub_1C3C2A5D8(&v15, &v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE08);
    swift_dynamicCast();
    uint64_t v10 = v13;
  }
  else
  {
    sub_1C3CC623C((uint64_t)&v15);
    if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C3DBAFB8()) {
      sub_1C3C5BDCC(MEMORY[0x1E4FBC860]);
    }
    else {
      uint64_t v10 = MEMORY[0x1E4FBC870];
    }
  }
  *a1 = v2;
  a1[1] = v7;
  a1[2] = v10;
}

unint64_t sub_1C3D5CEAC()
{
  unint64_t result = qword_1EB6FBE18;
  if (!qword_1EB6FBE18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6FBE18);
  }
  return result;
}

uint64_t (*static NSManagedObjectContext.didMergeChangesNotifications(context:)())()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v15 - v7;
  id v9 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v10 = (void *)sub_1C3DBA818();
  uint64_t v11 = sub_1C3DBA7C8();

  v15[1] = v11;
  sub_1C3DBA7B8();
  sub_1C3D5D8D8();
  sub_1C3DBB008();
  *(void *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v6, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return sub_1C3D5D944;
}

uint64_t sub_1C3D5D120(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return MEMORY[0x1F4188298](sub_1C3D5DC6C, 0, 0);
}

uint64_t (*static NSManagedObjectContext.didSaveNotifications(context:)())()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v15 - v7;
  id v9 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v10 = (void *)sub_1C3DBA828();
  uint64_t v11 = sub_1C3DBA7C8();

  v15[1] = v11;
  sub_1C3DBA7B8();
  sub_1C3D5D8D8();
  sub_1C3DBB008();
  *(void *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v6, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return sub_1C3D5D944;
}

uint64_t sub_1C3D5D374(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return MEMORY[0x1F4188298](sub_1C3D5D394, 0, 0);
}

uint64_t sub_1C3D5D394()
{
  sub_1C3DB8288();
  if (v0[5])
  {
    sub_1C3D5CEAC();
    if (swift_dynamicCast())
    {
      uint64_t v1 = (void *)v0[6];
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C3CC623C((uint64_t)(v0 + 2));
  }
  uint64_t v1 = 0;
LABEL_6:
  BOOL v2 = v1 != 0;

  uint64_t v3 = (uint64_t (*)(BOOL))v0[1];
  return v3(v2);
}

uint64_t (*NSManagedObjectContext.didMergeChangesNotifications.getter())()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - v6;
  id v8 = objc_msgSend(self, sel_defaultCenter);
  id v9 = (void *)sub_1C3DBA818();
  uint64_t v10 = sub_1C3DBA7C8();

  v14[1] = v10;
  sub_1C3DBA7B8();
  sub_1C3D5D8D8();
  sub_1C3DBB008();
  *(void *)(swift_allocObject() + 16) = ObjectType;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v5, v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1C3D5D944;
}

uint64_t (*NSManagedObjectContext.didSaveNotifications.getter())()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - v6;
  id v8 = objc_msgSend(self, sel_defaultCenter);
  id v9 = (void *)sub_1C3DBA828();
  uint64_t v10 = sub_1C3DBA7C8();

  v14[1] = v10;
  sub_1C3DBA7B8();
  sub_1C3D5D8D8();
  sub_1C3DBB008();
  *(void *)(swift_allocObject() + 16) = ObjectType;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v5, v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1C3D5D944;
}

unint64_t sub_1C3D5D8D8()
{
  unint64_t result = qword_1EB6FBE10;
  if (!qword_1EB6FBE10)
  {
    sub_1C3DBA7B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBE10);
  }
  return result;
}

uint64_t sub_1C3D5D930()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D5D948()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3D5D958(void *a1@<X8>)
{
}

uint64_t sub_1C3D5D974()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C3D5D988()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3D5DA30()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE30) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C3D5CA54(v2);
}

uint64_t _s20ObjectIDNotificationVwxx(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20ObjectIDNotificationVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ObjectIDNotificationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NSManagedObjectContext.ObjectIDNotification()
{
  return &type metadata for NSManagedObjectContext.ObjectIDNotification;
}

unint64_t sub_1C3D5DC10()
{
  unint64_t result = qword_1EB6FBE28;
  if (!qword_1EB6FBE28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FBE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FBE28);
  }
  return result;
}

uint64_t sub_1C3D5DC74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  char v10 = *((unsigned char *)a1 + 32);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C3DB9D88();
  if (v13)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    while (v8 < v9)
    {
      if (v8 >= v9 - 1)
      {
        if ((v10 & 1) == 0)
        {
          uint64_t v19 = self;
          swift_bridgeObjectRetain();
          id v20 = objc_msgSend(v19, sel_ic_ellipsisCharacterString);
          sub_1C3DB9C38();

          sub_1C3DB9D68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_23:
          char v10 = 0;
          ++v8;
          goto LABEL_5;
        }
LABEL_16:
        swift_bridgeObjectRetain();
        MEMORY[0x1C877B260](v14, v15);
LABEL_17:
        if (v14 == 109 && v15 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_21:
          char v10 = 0;
          goto LABEL_5;
        }
        char v18 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_21;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
      MEMORY[0x1C877B260](v14, v15);
      if (v10) {
        goto LABEL_17;
      }
      if (v14 == 27 && v15 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          goto LABEL_23;
        }
      }
LABEL_4:
      char v10 = 1;
LABEL_5:
      uint64_t v14 = sub_1C3DB9D88();
      uint64_t v15 = v16;
      if (!v16) {
        goto LABEL_24;
      }
    }
    if ((v10 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      char v10 = 0;
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v6;
  *(void *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v8;
  *(void *)(a4 + 24) = v9;
  *(unsigned char *)(a4 + 32) = v10;
  return result;
}

Swift::Void __swiftcall DefaultStringInterpolation.appendInterpolation(ansi:)(NotesShared::AnsiStylings ansi)
{
}

uint64_t String.removingAnsi.getter()
{
  if (qword_1EA385970 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA388790;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C3DB9E08();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C3DB9BF8();
  id v4 = objc_msgSend(v0, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v1, 0, 0, v2, v3);

  uint64_t v5 = sub_1C3DB9C38();
  return v5;
}

uint64_t sub_1C3D5E100(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1C3DBA0A8();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C3D5E1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      unint64_t v6 = (void *)sub_1C3DBA0A8();
      int64x2_t v7 = v6;
      id v6[2] = a3;
      uint64_t v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          unint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *unint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    return (uint64_t)v7;
  }
  return result;
}

Swift::String __swiftcall String.truncating(to:ignoringAnsi:)(Swift::Int to, Swift::Bool ignoringAnsi)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  if (ignoringAnsi)
  {
    if (to < 1)
    {
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      uint64_t v35 = 0;
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
    }
    else
    {
      if (qword_1EA385970 != -1) {
        swift_once();
      }
      int64x2_t v7 = (void *)qword_1EA388790;
      uint64_t v8 = (void *)sub_1C3DB9BF8();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C3DB9E08();
      swift_bridgeObjectRelease();
      unint64_t v10 = (void *)sub_1C3DB9BF8();
      id v11 = objc_msgSend(v7, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v8, 0, 0, v9, v10);

      sub_1C3DB9C38();
      Swift::Int v12 = sub_1C3DB9D18();
      swift_bridgeObjectRelease();
      if (v12 <= to)
      {
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        uint64_t v35 = 0;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        uint64_t v29 = v5;
        unint64_t v30 = v4;
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
      }
      else
      {
        v33[0] = 0;
        v33[1] = 0xE000000000000000;
        unint64_t v33[2] = 0;
        v33[3] = to;
        char v34 = 0;
        swift_bridgeObjectRetain();
        sub_1C3D5DC74(v33, v5, v4, (uint64_t)&v29);
        uint64_t v14 = v29;
        unint64_t v13 = v30;
        uint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        sub_1C3DB9B58();
        sub_1C3DB9D68();
        uint64_t v35 = 0;
        sub_1C3DBB248();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        sub_1C3DB9B58();
        uint64_t v29 = v14;
        unint64_t v30 = v13;
        swift_bridgeObjectRetain();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v29;
    uint64_t v4 = v30;
  }
  else if (to < 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0xE000000000000000;
  }
  else if (sub_1C3DB9D18() <= to)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C3D5F1C8(to - 1);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_ic_ellipsisCharacterString);
    uint64_t v20 = sub_1C3DB9C38();
    unint64_t v22 = v21;

    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    uint64_t v23 = sub_1C3DB9D18();
    uint64_t v24 = sub_1C3DBA978();
    BOOL v26 = __OFADD__(v23, v24);
    uint64_t v27 = v23 + v24;
    if (v26)
    {
      __break(1u);
      goto LABEL_19;
    }
    MEMORY[0x1C877B1F0](v27);
    uint64_t v31 = v16;
    uint64_t v32 = v18;
    sub_1C3C7E654();
    sub_1C3DB9D48();
    uint64_t v29 = v20;
    unint64_t v30 = v22;
    sub_1C3DB9D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v35;
    uint64_t v4 = v36;
  }
  uint64_t v27 = v5;
  unint64_t v25 = (void *)v4;
LABEL_19:
  result._unint64_t object = v25;
  result._countAndFlagsBits = v27;
  return result;
}

uint64_t String.padding(to:alignment:ignoringAnsi:)(Swift::Int a1, unsigned __int8 *a2, char a3, uint64_t a4)
{
  int v7 = *a2;
  if ((a3 & 1) == 0)
  {
    uint64_t result = sub_1C3DB9D18();
    uint64_t v13 = result;
    goto LABEL_5;
  }
  if (qword_1EA385970 != -1) {
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v8 = (void *)qword_1EA388790;
    uint64_t v9 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3DB9E08();
    swift_bridgeObjectRelease();
    id v11 = (void *)sub_1C3DB9BF8();
    id v12 = objc_msgSend(v8, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v9, 0, 0, v10, v11);

    sub_1C3DB9C38();
    uint64_t v13 = sub_1C3DB9D18();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v15 = a1 - v13;
    if (!__OFSUB__(a1, v13)) {
      break;
    }
    __break(1u);
LABEL_21:
    swift_once();
  }
  if (v15 < 1) {
    return String.truncating(to:ignoringAnsi:)(a1, a3 & 1)._countAndFlagsBits;
  }
  if (!v7)
  {
    sub_1C3D5E1EC(32, 0xE100000000000000, v15);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3CC51E4();
    sub_1C3DB9B88();
    swift_bridgeObjectRelease();
    uint64_t v21 = a4;
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    goto LABEL_19;
  }
  if (v7 != 1)
  {
    sub_1C3D5E1EC(32, 0xE100000000000000, v15);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
    sub_1C3CC51E4();
    uint64_t v20 = sub_1C3DB9B88();
    swift_bridgeObjectRelease();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    goto LABEL_19;
  }
  double v16 = (double)v15 * 0.5;
  double v17 = ceil(v16);
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C3D5E1EC(32, 0xE100000000000000, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3CC51E4();
  uint64_t v18 = sub_1C3DB9B88();
  uint64_t result = swift_bridgeObjectRelease();
  double v19 = floor(v16);
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 < 9.22337204e18)
  {
    sub_1C3D5E1EC(32, 0xE100000000000000, (uint64_t)v19);
    sub_1C3DB9B88();
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    return v21;
  }
LABEL_27:
  __break(1u);
  return result;
}

__C::_NSRange_optional __swiftcall String.lineRange(forLocation:)(Swift::Int forLocation)
{
  __C::_NSRange_optional v1 = String.lineRange(for:)((__C::_NSRange)(unint64_t)forLocation);
  v1.is_nil &= 1u;
  return v1;
}

__C::_NSRange_optional __swiftcall String.lineRange(for:)(__C::_NSRange a1)
{
  Swift::Int length = a1.length;
  Swift::Int location = a1.location;
  v9[1] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (void *)sub_1C3DB9BF8();
  unsigned int v4 = objc_msgSend(v3, sel_ic_rangeIsValid_, location, length);
  if (v4)
  {
    uint64_t v8 = 0;
    v9[0] = 0;
    objc_msgSend(v3, sel_getLineStart_end_contentsEnd_forRange_, v9, 0, &v8, location, length);

    Swift::Int v5 = v9[0];
    Swift::Int v6 = v8 - v9[0];
    if (!__OFSUB__(v8, v9[0])) {
      goto LABEL_6;
    }
    __break(1u);
  }

  Swift::Int v5 = 0;
  Swift::Int v6 = 0;
LABEL_6:
  char v7 = v4 ^ 1;
  result.value.Swift::Int length = v6;
  result.value.Swift::Int location = v5;
  result.is_nil = v7;
  return result;
}

Swift::String_optional __swiftcall String.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  result.value._unint64_t object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t String.intValue.getter()
{
  return 0;
}

uint64_t String.stringValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C3D5ECD0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C3D5ED00(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static AnsiStylings.controlSequenceStart.getter()
{
  return 27;
}

uint64_t static AnsiStylings.controlSequenceStop.getter()
{
  return 109;
}

uint64_t AnsiStylings.controlSequence.getter()
{
  return 0;
}

uint64_t AnsiStylings.rawValue.getter()
{
  return qword_1C3DDC048[*v0];
}

uint64_t sub_1C3D5EDFC()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  uint64_t result = (uint64_t)sub_1C3D76A9C(0xD000000000000010, 0x80000001C3DF7D80, 0);
  if (result)
  {
    qword_1EA388790 = result;
  }
  else
  {
    uint64_t result = sub_1C3DBAF58();
    __break(1u);
  }
  return result;
}

NotesShared::AnsiStylings_optional __swiftcall AnsiStylings.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 1;
  switch(rawValue)
  {
    case 0:
      char v2 = 0;
      goto LABEL_3;
    case 1:
LABEL_3:
      char *v1 = v2;
      break;
    case 2:
      char *v1 = 2;
      break;
    case 3:
      char *v1 = 3;
      break;
    case 4:
      char *v1 = 4;
      break;
    case 30:
      char *v1 = 5;
      break;
    case 31:
      char *v1 = 6;
      break;
    case 32:
      char *v1 = 7;
      break;
    case 33:
      char *v1 = 8;
      break;
    case 34:
      char *v1 = 9;
      break;
    case 35:
      char *v1 = 10;
      break;
    case 36:
      char *v1 = 11;
      break;
    case 37:
      char *v1 = 12;
      break;
    default:
      char *v1 = 13;
      break;
  }
  return (NotesShared::AnsiStylings_optional)rawValue;
}

BOOL sub_1C3D5F028(char *a1, char *a2)
{
  return qword_1C3DDC048[*a1] == qword_1C3DDC048[*a2];
}

uint64_t sub_1C3D5F04C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5F09C()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3D5F0D4()
{
  return sub_1C3DBB608();
}

NotesShared::AnsiStylings_optional sub_1C3D5F120(Swift::Int *a1)
{
  return AnsiStylings.init(rawValue:)(*a1);
}

void sub_1C3D5F128(void *a1@<X8>)
{
  *a1 = qword_1C3DDC048[*v1];
}

BOOL static String.PaddingAlignments.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t String.PaddingAlignments.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t String.PaddingAlignments.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5F1C8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C3DB9D38();
    return sub_1C3DB9E88();
  }
  return result;
}

uint64_t sub_1C3D5F264()
{
  return MEMORY[0x1E4FBB218];
}

uint64_t sub_1C3D5F270()
{
  return MEMORY[0x1E4FBB208];
}

unint64_t sub_1C3D5F280()
{
  unint64_t result = qword_1EA388798;
  if (!qword_1EA388798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388798);
  }
  return result;
}

unint64_t sub_1C3D5F2D8()
{
  unint64_t result = qword_1EA3887A0;
  if (!qword_1EA3887A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3887A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnsiStylings(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AnsiStylings(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D5F488);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnsiStylings()
{
  return &type metadata for AnsiStylings;
}

unsigned char *_s17PaddingAlignmentsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D5F58CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for String.PaddingAlignments()
{
  return &type metadata for String.PaddingAlignments;
}

uint64_t sub_1C3D5F5C4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D5F5FC(char *a1, char *a2)
{
  return sub_1C3CE6374(*a1, *a2);
}

uint64_t sub_1C3D5F608()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5F670()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D5F6BC()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D5F720@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C3D5F780(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6580594;
  if (*v1) {
    uint64_t v2 = 7103859;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C3D5F7A8()
{
  if (*v0) {
    return 7103859;
  }
  else {
    return 6580594;
  }
}

uint64_t sub_1C3D5F7CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C3D5F830(uint64_t a1)
{
  unint64_t v2 = sub_1C3D5FBF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D5F86C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D5FBF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FastSync.SelectionMessage.replicaID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8B98();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FastSync.SelectionMessage.selectionStateData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20);
  uint64_t v2 = *(void *)v1;
  sub_1C3CE0C34(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for FastSync.SelectionMessage()
{
  uint64_t result = qword_1EA3887D0;
  if (!qword_1EA3887D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FastSync.SelectionMessage.init(replicaID:selectionStateData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for FastSync.SelectionMessage();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t FastSync.SelectionMessage.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3887A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D5FBF0();
  sub_1C3DBB6D8();
  LOBYTE(v11) = 0;
  sub_1C3DB8B98();
  sub_1C3D602C0(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
  sub_1C3DBB1E8();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20));
    v10[15] = 1;
    sub_1C3D067B8();
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C3D5FBF0()
{
  unint64_t result = qword_1EA3887B0;
  if (!qword_1EA3887B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3887B0);
  }
  return result;
}

uint64_t FastSync.SelectionMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1C3DB8B98();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3887B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FastSync.SelectionMessage();
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D5FBF0();
  sub_1C3DBB6B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v24;
  LOBYTE(v28) = 0;
  sub_1C3D602C0(&qword_1EA386F28, MEMORY[0x1E4F27990]);
  uint64_t v15 = v27;
  uint64_t v16 = v25;
  sub_1C3DBB108();
  double v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v21 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v29 = 1;
  sub_1C3D0680C();
  sub_1C3DBB108();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v16);
  uint64_t v18 = v21;
  *(_OWORD *)(v21 + *(int *)(v22 + 20)) = v28;
  sub_1C3D5FFA0(v18, v23);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1C3D60004(v18);
}

uint64_t sub_1C3D5FFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FastSync.SelectionMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D60004(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FastSync.SelectionMessage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3D60060@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FastSync.SelectionMessage.init(from:)(a1, a2);
}

uint64_t sub_1C3D60078(void *a1)
{
  return FastSync.SelectionMessage.encode(to:)(a1);
}

unint64_t FastSync.SelectionMessage.description.getter()
{
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  sub_1C3DB8B98();
  sub_1C3D602C0((unint64_t *)&qword_1EA385DC0, MEMORY[0x1E4F27990]);
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for FastSync.SelectionMessage() + 20));
  uint64_t v2 = *v1;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v2), v2)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x1C3D6022CLL);
    case 2uLL:
      if (!__OFSUB__(*(void *)(v2 + 24), *(void *)(v2 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      return 0xD000000000000019;
  }
}

uint64_t sub_1C3D6023C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3D602C0(&qword_1EA3887C0, (void (*)(uint64_t))type metadata accessor for FastSync.SelectionMessage);
  uint64_t result = sub_1C3D602C0(&qword_1EA3887C8, (void (*)(uint64_t))type metadata accessor for FastSync.SelectionMessage);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C3D602C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s16SelectionMessageVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8B98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_1C3CE0C34(*v10, v12);
    *uint64_t v9 = v11;
    v9[1] = v12;
  }
  return a1;
}

uint64_t _s16SelectionMessageVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  return sub_1C3C58FC8(v6, v7);
}

uint64_t _s16SelectionMessageVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_1C3CE0C34(*v9, v11);
  *uint64_t v8 = v10;
  v8[1] = v11;
  return a1;
}

uint64_t _s16SelectionMessageVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_1C3CE0C34(*v9, v11);
  uint64_t v12 = *v8;
  unint64_t v13 = v8[1];
  *uint64_t v8 = v10;
  v8[1] = v11;
  sub_1C3C58FC8(v12, v13);
  return a1;
}

uint64_t _s16SelectionMessageVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16SelectionMessageVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  unint64_t v9 = *(void *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_1C3C58FC8(v8, v9);
  return a1;
}

uint64_t _s16SelectionMessageVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D606A4);
}

uint64_t sub_1C3D606A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t _s16SelectionMessageVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D6078C);
}

uint64_t sub_1C3D6078C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    unint64_t v11 = (void *)(a1 + *(int *)(a4 + 20));
    *unint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_1C3D60858()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s16SelectionMessageV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D609B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16SelectionMessageV10CodingKeysOMa()
{
  return &_s16SelectionMessageV10CodingKeysON;
}

unint64_t sub_1C3D609F4()
{
  unint64_t result = qword_1EA3887E0;
  if (!qword_1EA3887E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3887E0);
  }
  return result;
}

unint64_t sub_1C3D60A4C()
{
  unint64_t result = qword_1EA3887E8;
  if (!qword_1EA3887E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3887E8);
  }
  return result;
}

unint64_t sub_1C3D60AA4()
{
  unint64_t result = qword_1EA3887F0;
  if (!qword_1EA3887F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3887F0);
  }
  return result;
}

uint64_t AttributedString.isEmpty.getter()
{
  uint64_t v0 = sub_1C3DB85A8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_1C3DB84F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB84E8();
  sub_1C3D60D44(&qword_1EA3887F8, MEMORY[0x1E4F27270]);
  sub_1C3DBA528();
  sub_1C3DBA558();
  sub_1C3D60D44(&qword_1EA388800, MEMORY[0x1E4F27388]);
  char v11 = sub_1C3DB9BE8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11 & 1;
}

uint64_t sub_1C3D60D44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall CGRect.init(union:)(CGRect_optional *__return_ptr retstr, Swift::OpaquePointer a2)
{
  double x = *MEMORY[0x1E4F1DB20];
  double y = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  double width = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  double height = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  uint64_t v7 = *((void *)a2._rawValue + 2);
  CGFloat v20 = y;
  CGFloat v21 = *MEMORY[0x1E4F1DB20];
  CGFloat v18 = height;
  CGFloat v19 = width;
  if (v7)
  {
    uint64_t v8 = (double *)((char *)a2._rawValue + 56);
    CGFloat v10 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
    CGFloat v9 = *MEMORY[0x1E4F1DB20];
    CGFloat v12 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
    CGFloat v11 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
    do
    {
      double x = *(v8 - 3);
      double y = *(v8 - 2);
      double width = *(v8 - 1);
      double height = *v8;
      v22.origin.double x = v9;
      v22.origin.double y = v10;
      v22.size.double width = v11;
      v22.size.double height = v12;
      if (!CGRectIsNull(v22))
      {
        v23.origin.double x = v9;
        v23.origin.double y = v10;
        v23.size.double width = v11;
        v23.size.double height = v12;
        v26.origin.double x = x;
        v26.origin.double y = y;
        v26.size.double width = width;
        v26.size.double height = height;
        CGRect v24 = CGRectUnion(v23, v26);
        double x = v24.origin.x;
        double y = v24.origin.y;
        double width = v24.size.width;
        double height = v24.size.height;
      }
      v8 += 4;
      CGFloat v9 = x;
      CGFloat v10 = y;
      CGFloat v11 = width;
      CGFloat v12 = height;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  v25.origin.double x = x;
  v25.origin.double y = y;
  v25.size.double width = width;
  v25.size.double height = height;
  v27.origin.double y = v20;
  v27.origin.double x = v21;
  v27.size.double height = v18;
  v27.size.double width = v19;
  Swift::Bool v13 = CGRectEqualToRect(v25, v27);
  double v14 = 0.0;
  if (v13) {
    double v15 = 0.0;
  }
  else {
    double v15 = x;
  }
  if (v13) {
    double v16 = 0.0;
  }
  else {
    double v16 = y;
  }
  if (v13) {
    double v17 = 0.0;
  }
  else {
    double v17 = width;
  }
  if (!v13) {
    double v14 = height;
  }
  retstr->value.origin.double x = v15;
  retstr->value.origin.double y = v16;
  retstr->value.size.double width = v17;
  retstr->value.size.double height = v14;
  retstr->is_nil = v13;
}

uint64_t RunGarbageCollectorRequest.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C3D61ED4((void (*)(void))type metadata accessor for RunGarbageCollectorRequest, a1);
}

uint64_t type metadata accessor for RunGarbageCollectorRequest(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3889F0);
}

void (*PingRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.message.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PingResponse.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

void (*PingResponse.message.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D61CA8(type metadata accessor for PingResponse, a1);
}

uint64_t type metadata accessor for PingResponse(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3889C0);
}

uint64_t PingResponse.unknownFields.setter(uint64_t a1)
{
  return sub_1C3D61D40(a1, type metadata accessor for PingResponse);
}

void (*PingResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t PingResponse.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for PingResponse(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

void (*MentionNotificationRequestV2.recipientUserID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.senderName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.senderName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

void (*MentionNotificationRequestV2.senderName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.noteTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.noteTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

void (*MentionNotificationRequestV2.noteTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.mentionSnippet.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.mentionSnippet.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

void (*MentionNotificationRequestV2.mentionSnippet.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.shareRecordName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.shareRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

void (*MentionNotificationRequestV2.shareRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.shareOwnerUserID.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.shareOwnerUserID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

void (*MentionNotificationRequestV2.shareOwnerUserID.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.noteRecordName.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.noteRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

void (*MentionNotificationRequestV2.noteRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.inlineAttachmentRecordName.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionNotificationRequestV2.inlineAttachmentRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

void (*MentionNotificationRequestV2.inlineAttachmentRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MentionNotificationRequestV2(0) + 48);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MentionNotificationRequestV2(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3889D0);
}

uint64_t MentionNotificationRequestV2.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MentionNotificationRequestV2(0) + 48);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

void (*MentionNotificationRequestV2.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t MentionNotificationRequestV2.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  a1[10] = 0;
  a1[11] = 0xE000000000000000;
  a1[12] = 0;
  a1[13] = 0xE000000000000000;
  a1[14] = 0;
  a1[15] = 0xE000000000000000;
  type metadata accessor for MentionNotificationRequestV2(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t _s11NotesShared11PingRequestV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8EB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t _s11NotesShared11PingRequestV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvs_0(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8EB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*MentionNotificationResponseV2.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.previousBuildNumber.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.previousVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.currentBuildNumber.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.currentVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*DidCompleteInstallOrUpdateRequest.platformName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.continuationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1C3CE0C34(v1, *(void *)(v0 + 88));
  return v1;
}

uint64_t DidCompleteInstallOrUpdateRequest.continuationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C3C58FC8(*(void *)(v2 + 80), *(void *)(v2 + 88));
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

void (*DidCompleteInstallOrUpdateRequest.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateRequest(0) + 40);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DidCompleteInstallOrUpdateRequest(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FB738);
}

uint64_t DidCompleteInstallOrUpdateRequest.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateRequest(0) + 40);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

void (*DidCompleteInstallOrUpdateRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(_OWORD *)(a1 + 80) = xmmword_1C3DDB380;
  type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

void (*DidCompleteInstallOrUpdateResponse.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.recordsToInjest.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DidCompleteInstallOrUpdateResponse.recordsToInjest.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

void (*DidCompleteInstallOrUpdateResponse.recordsToInjest.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateResponse(0) + 24);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DidCompleteInstallOrUpdateResponse(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EB6FB758);
}

uint64_t DidCompleteInstallOrUpdateResponse.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DidCompleteInstallOrUpdateResponse(0) + 24);
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

void (*DidCompleteInstallOrUpdateResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t DidCompleteInstallOrUpdateResponse.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C3DDB380;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBC860];
  type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t RunGarbageCollectorRequest.continuationToken.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C3CE0C34(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t RunGarbageCollectorRequest.continuationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C3C58FC8(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

void (*RunGarbageCollectorRequest.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D61CA8(type metadata accessor for RunGarbageCollectorRequest, a1);
}

uint64_t sub_1C3D61CA8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t RunGarbageCollectorRequest.unknownFields.setter(uint64_t a1)
{
  return sub_1C3D61D40(a1, type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D61D40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*RunGarbageCollectorRequest.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void (*RunGarbageCollectorResponse.continuationToken.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D61CA8(type metadata accessor for RunGarbageCollectorResponse, a1);
}

uint64_t type metadata accessor for RunGarbageCollectorResponse(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA388A00);
}

uint64_t RunGarbageCollectorResponse.unknownFields.setter(uint64_t a1)
{
  return sub_1C3D61D40(a1, type metadata accessor for RunGarbageCollectorResponse);
}

void (*RunGarbageCollectorResponse.unknownFields.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t RunGarbageCollectorResponse.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_1C3D61ED4((void (*)(void))type metadata accessor for RunGarbageCollectorResponse, a1);
}

uint64_t sub_1C3D61ED4@<X0>(void (*a1)(void)@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_1C3DDB380;
  a1(0);
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t static PingRequest.protoMessageName.getter()
{
  return 0x75716552676E6950;
}

uint64_t sub_1C3D61F3C(uint64_t a1)
{
  return sub_1C3D6305C(a1, qword_1EA388808);
}

uint64_t static PingRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA385978, (uint64_t)qword_1EA388808, a1);
}

uint64_t PingRequest.decodeMessage<A>(decoder:)()
{
  return sub_1C3D630E0();
}

uint64_t PingRequest.traverse<A>(visitor:)()
{
  return sub_1C3DB8E98();
}

uint64_t PingRequest.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for PingRequest, &qword_1EA3888D0, (void (*)(uint64_t))type metadata accessor for PingRequest);
}

uint64_t sub_1C3D61FEC()
{
  return 0x75716552676E6950;
}

uint64_t sub_1C3D62018()
{
  return PingRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3D62030()
{
  return PingRequest.traverse<A>(visitor:)();
}

uint64_t sub_1C3D6204C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A48, (void (*)(uint64_t))type metadata accessor for PingRequest);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D620CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA385978, (uint64_t)qword_1EA388808, a1);
}

uint64_t sub_1C3D620F0(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA388920, (void (*)(uint64_t))type metadata accessor for PingRequest);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D62160()
{
  sub_1C3D62200(&qword_1EA388920, (void (*)(uint64_t))type metadata accessor for PingRequest);
  return sub_1C3DB8F48();
}

uint64_t type metadata accessor for PingRequest(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3889B0);
}

uint64_t sub_1C3D62200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static PingResponse.protoMessageName.getter()
{
  return 0x70736552676E6950;
}

uint64_t sub_1C3D6226C(uint64_t a1)
{
  return sub_1C3D6498C(a1, qword_1EA388820, (uint64_t)"message", 7);
}

uint64_t static PingResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA385980, (uint64_t)qword_1EA388820, a1);
}

uint64_t PingResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D64BD0(a1, a2, a3, MEMORY[0x1E4F70F10]);
}

uint64_t PingResponse.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1C3DB8F78(), !v1))
  {
    type metadata accessor for PingResponse(0);
    return sub_1C3DB8E98();
  }
  return result;
}

uint64_t PingResponse.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for PingResponse, &qword_1EA3888D8, (void (*)(uint64_t))type metadata accessor for PingResponse);
}

uint64_t sub_1C3D623C4@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return _s11NotesShared11PingRequestVACycfC_0();
}

uint64_t sub_1C3D623EC()
{
  return 0x70736552676E6950;
}

void (*sub_1C3D62418())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3D6243C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PingResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3D62454()
{
  return PingResponse.traverse<A>(visitor:)();
}

uint64_t sub_1C3D62470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A40, (void (*)(uint64_t))type metadata accessor for PingResponse);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D624EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA385980, (uint64_t)qword_1EA388820, a1);
}

uint64_t sub_1C3D62510(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA388938, (void (*)(uint64_t))type metadata accessor for PingResponse);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D6257C()
{
  sub_1C3D62200(&qword_1EA388938, (void (*)(uint64_t))type metadata accessor for PingResponse);
  return sub_1C3DB8F48();
}

unint64_t static MentionNotificationRequestV2.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C3D62618()
{
  uint64_t v0 = sub_1C3DB8FC8();
  __swift_allocate_value_buffer(v0, qword_1EA388838);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA388838);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A50);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A58) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DDC2E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "recipientUserId";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C3DB8F98();
  CGFloat v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "senderName";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  CGFloat v11 = (void *)(v5 + 2 * v2);
  CGFloat v12 = (char *)v11 + v1[14];
  *CGFloat v11 = 3;
  *(void *)CGFloat v12 = "noteTitle";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  Swift::Bool v13 = (void *)(v5 + 3 * v2);
  double v14 = (char *)v13 + v1[14];
  *Swift::Bool v13 = 4;
  *(void *)double v14 = "mentionSnippet";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  double v15 = (void *)(v5 + 4 * v2);
  double v16 = (char *)v15 + v1[14];
  *double v15 = 5;
  *(void *)double v16 = "shareRecordName";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  double v17 = (void *)(v5 + 5 * v2);
  CGFloat v18 = (char *)v17 + v1[14];
  *double v17 = 6;
  *(void *)CGFloat v18 = "shareOwnerUserId";
  *((void *)v18 + 1) = 16;
  unsigned char v18[16] = 2;
  v9();
  CGFloat v19 = (void *)(v5 + 6 * v2);
  CGFloat v20 = (char *)v19 + v1[14];
  *CGFloat v19 = 7;
  *(void *)CGFloat v20 = "noteRecordName";
  *((void *)v20 + 1) = 14;
  unsigned char v20[16] = 2;
  v9();
  CGFloat v21 = (void *)(v5 + 7 * v2);
  CGRect v22 = (char *)v21 + v1[14];
  *CGFloat v21 = 8;
  *(void *)CGRect v22 = "inlineAttachmentRecordName";
  *((void *)v22 + 1) = 26;
  v22[16] = 2;
  v9();
  return sub_1C3DB8FA8();
}

uint64_t static MentionNotificationRequestV2._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA385988, (uint64_t)qword_1EA388838, a1);
}

uint64_t MentionNotificationRequestV2.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1C3DB8EE8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          sub_1C3DB8F08();
          break;
        default:
          break;
      }
      uint64_t result = sub_1C3DB8EE8();
    }
  }
  return result;
}

uint64_t MentionNotificationRequestV2.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1C3DB8F78(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_1C3DB8F78(), !v1))
    {
      unint64_t v7 = v0[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v8 || (uint64_t result = sub_1C3DB8F78(), !v1))
      {
        unint64_t v9 = v0[7];
        uint64_t v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0) {
          uint64_t v10 = v0[6] & 0xFFFFFFFFFFFFLL;
        }
        if (!v10 || (uint64_t result = sub_1C3DB8F78(), !v1))
        {
          unint64_t v11 = v0[9];
          uint64_t v12 = HIBYTE(v11) & 0xF;
          if ((v11 & 0x2000000000000000) == 0) {
            uint64_t v12 = v0[8] & 0xFFFFFFFFFFFFLL;
          }
          if (!v12 || (uint64_t result = sub_1C3DB8F78(), !v1))
          {
            unint64_t v13 = v0[11];
            uint64_t v14 = HIBYTE(v13) & 0xF;
            if ((v13 & 0x2000000000000000) == 0) {
              uint64_t v14 = v0[10] & 0xFFFFFFFFFFFFLL;
            }
            if (!v14 || (uint64_t result = sub_1C3DB8F78(), !v1))
            {
              unint64_t v15 = v0[13];
              uint64_t v16 = HIBYTE(v15) & 0xF;
              if ((v15 & 0x2000000000000000) == 0) {
                uint64_t v16 = v0[12] & 0xFFFFFFFFFFFFLL;
              }
              if (!v16 || (uint64_t result = sub_1C3DB8F78(), !v1))
              {
                unint64_t v17 = v0[15];
                uint64_t v18 = HIBYTE(v17) & 0xF;
                if ((v17 & 0x2000000000000000) == 0) {
                  uint64_t v18 = v0[14] & 0xFFFFFFFFFFFFLL;
                }
                if (!v18 || (uint64_t result = sub_1C3DB8F78(), !v1))
                {
                  type metadata accessor for MentionNotificationRequestV2(0);
                  return sub_1C3DB8E98();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t MentionNotificationRequestV2.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for MentionNotificationRequestV2, &qword_1EA3888E0, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D62D10@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  a1[10] = 0;
  a1[11] = 0xE000000000000000;
  a1[12] = 0;
  a1[13] = 0xE000000000000000;
  a1[14] = 0;
  a1[15] = 0xE000000000000000;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1C3D62D58()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C3D62D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C3D62DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1C3D62E54())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3D62E78()
{
  return MentionNotificationRequestV2.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3D62E90()
{
  return MentionNotificationRequestV2.traverse<A>(visitor:)();
}

uint64_t sub_1C3D62EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A38, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D62F24@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA385988, (uint64_t)qword_1EA388838, a1);
}

uint64_t sub_1C3D62F48(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA3877C8, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D62FB4()
{
  sub_1C3D62200(&qword_1EA3877C8, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
  return sub_1C3DB8F48();
}

unint64_t static MentionNotificationResponseV2.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C3D63050(uint64_t a1)
{
  return sub_1C3D6305C(a1, qword_1EA388850);
}

uint64_t sub_1C3D6305C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C3DB8FC8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C3DB8FB8();
}

uint64_t static MentionNotificationResponseV2._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA385990, (uint64_t)qword_1EA388850, a1);
}

uint64_t MentionNotificationResponseV2.decodeMessage<A>(decoder:)()
{
  return sub_1C3D630E0();
}

uint64_t sub_1C3D630E0()
{
  do
    uint64_t result = sub_1C3DB8EE8();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t _s11NotesShared11PingRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v14 - v9, a1, v4);
  v11(v8, a2, v4);
  sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
  LOBYTE(a2) = sub_1C3DB9BE8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return a2 & 1;
}

uint64_t MentionNotificationResponseV2.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for MentionNotificationResponseV2, &qword_1EA3888E8, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
}

unint64_t sub_1C3D63300()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C3D6331C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A30, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D63398@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA385990, (uint64_t)qword_1EA388850, a1);
}

uint64_t sub_1C3D633BC(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA388960, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D63428()
{
  sub_1C3D62200(&qword_1EA388960, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
  return sub_1C3DB8F48();
}

unint64_t static DidCompleteInstallOrUpdateRequest.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C3D634C0()
{
  uint64_t v0 = sub_1C3DB8FC8();
  __swift_allocate_value_buffer(v0, qword_1EA388868);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA388868);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A50);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A58) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DDC2F0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "previousBuildNumber";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C3DB8F98();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "previousVersion";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "currentBuildNumber";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  unint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *unint64_t v13 = 4;
  *(void *)uint64_t v14 = "currentVersion";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  unint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *unint64_t v15 = 5;
  *(void *)uint64_t v16 = "platformName";
  *((void *)v16 + 1) = 12;
  v16[16] = 2;
  v9();
  unint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *unint64_t v17 = 6;
  *(void *)uint64_t v18 = "continuationToken";
  *((void *)v18 + 1) = 17;
  unsigned char v18[16] = 2;
  v9();
  return sub_1C3DB8FA8();
}

uint64_t static DidCompleteInstallOrUpdateRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA385998, (uint64_t)qword_1EA388868, a1);
}

uint64_t DidCompleteInstallOrUpdateRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1C3DB8EE8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_1C3DB8F08();
          break;
        case 6:
          sub_1C3DB8EF8();
          break;
        default:
          break;
      }
      uint64_t result = sub_1C3DB8EE8();
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateRequest.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1C3DB8F78(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_1C3DB8F78(), !v1))
    {
      unint64_t v7 = v0[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v8 || (uint64_t result = sub_1C3DB8F78(), !v1))
      {
        unint64_t v9 = v0[7];
        uint64_t v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0) {
          uint64_t v10 = v0[6] & 0xFFFFFFFFFFFFLL;
        }
        if (!v10 || (uint64_t result = sub_1C3DB8F78(), !v1))
        {
          unint64_t v11 = v0[9];
          uint64_t v12 = HIBYTE(v11) & 0xF;
          if ((v11 & 0x2000000000000000) == 0) {
            uint64_t v12 = v0[8] & 0xFFFFFFFFFFFFLL;
          }
          if (!v12 || (uint64_t result = sub_1C3DB8F78(), !v1))
          {
            uint64_t v13 = v0[10];
            unint64_t v14 = v0[11];
            switch(v14 >> 62)
            {
              case 1uLL:
                if ((int)v13 != v13 >> 32) {
                  goto LABEL_27;
                }
                goto LABEL_28;
              case 2uLL:
                if (*(void *)(v13 + 16) != *(void *)(v13 + 24)) {
                  goto LABEL_27;
                }
                goto LABEL_28;
              case 3uLL:
                goto LABEL_28;
              default:
                if ((v14 & 0xFF000000000000) == 0) {
                  goto LABEL_28;
                }
LABEL_27:
                uint64_t result = sub_1C3DB8F68();
                if (!v1)
                {
LABEL_28:
                  type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
                  uint64_t result = sub_1C3DB8E98();
                }
                break;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateRequest.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for DidCompleteInstallOrUpdateRequest, &qword_1EA3888F0, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D63AF8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(_OWORD *)(a1 + 80) = xmmword_1C3DDB380;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1C3D63B40()
{
  return 0xD000000000000021;
}

uint64_t sub_1C3D63B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C3D63BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1C3D63C3C())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3D63C60()
{
  return DidCompleteInstallOrUpdateRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3D63C78()
{
  return DidCompleteInstallOrUpdateRequest.traverse<A>(visitor:)();
}

uint64_t sub_1C3D63C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A28, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D63D0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA385998, (uint64_t)qword_1EA388868, a1);
}

uint64_t sub_1C3D63D30(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EB6FB728, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D63D9C()
{
  sub_1C3D62200(&qword_1EB6FB728, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
  return sub_1C3DB8F48();
}

unint64_t static DidCompleteInstallOrUpdateResponse.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_1C3D63E38()
{
  uint64_t v0 = sub_1C3DB8FC8();
  __swift_allocate_value_buffer(v0, qword_1EA388880);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA388880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A50);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A58) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C3DD5130;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "continuationToken";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C3DB8F98();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "recordsToInjest";
  *((void *)v10 + 1) = 15;
  unsigned char v10[16] = 2;
  v9();
  return sub_1C3DB8FA8();
}

uint64_t static DidCompleteInstallOrUpdateResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA3859A0, (uint64_t)qword_1EA388880, a1);
}

uint64_t DidCompleteInstallOrUpdateResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1C3DB8EE8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1C3DB8D98();
        sub_1C3D62200(&qword_1EA3888F8, MEMORY[0x1E4F596E8]);
        sub_1C3DB8F18();
      }
      else if (result == 1)
      {
        sub_1C3DB8EF8();
      }
      uint64_t result = sub_1C3DB8EE8();
    }
  }
  return result;
}

uint64_t DidCompleteInstallOrUpdateResponse.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1C3DB8F68();
      if (!v1)
      {
LABEL_8:
        if (!*(void *)(v0[2] + 16)
          || (sub_1C3DB8D98(), sub_1C3D62200(&qword_1EA3888F8, MEMORY[0x1E4F596E8]), uint64_t result = sub_1C3DB8F88(), !v1))
        {
          type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
          return sub_1C3DB8E98();
        }
      }
      return result;
  }
}

uint64_t DidCompleteInstallOrUpdateResponse.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for DidCompleteInstallOrUpdateResponse, &qword_1EA388900, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1C3D642EC@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C3DDB380;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBC860];
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1C3D64324()
{
  return 0xD000000000000022;
}

uint64_t sub_1C3D64340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1C3DB8EB8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C3D643B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C3DB8EB8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1C3D64420())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t sub_1C3D64444()
{
  return DidCompleteInstallOrUpdateResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_1C3D6445C()
{
  return DidCompleteInstallOrUpdateResponse.traverse<A>(visitor:)();
}

uint64_t sub_1C3D64474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A20, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D644F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA3859A0, (uint64_t)qword_1EA388880, a1);
}

uint64_t sub_1C3D64514(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA388978, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D64580()
{
  sub_1C3D62200(&qword_1EA388978, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
  return sub_1C3DB8F48();
}

unint64_t static RunGarbageCollectorRequest.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C3D6461C(uint64_t a1)
{
  return sub_1C3D6498C(a1, qword_1EA388898, (uint64_t)"continuationToken", 17);
}

uint64_t static RunGarbageCollectorRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(&qword_1EA3859A8, (uint64_t)qword_1EA388898, a1);
}

uint64_t RunGarbageCollectorRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D64BD0(a1, a2, a3, MEMORY[0x1E4F70EB8]);
}

uint64_t RunGarbageCollectorRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D64C7C(a1, a2, a3, (void (*)(void))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t static RunGarbageCollectorRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C3D659A8(a1, a2, type metadata accessor for RunGarbageCollectorRequest) & 1;
}

uint64_t RunGarbageCollectorRequest.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for RunGarbageCollectorRequest, &qword_1EA388908, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D64728@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1C3DDB380;
  return _s11NotesShared11PingRequestVACycfC_0();
}

unint64_t sub_1C3D64754()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C3D64770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RunGarbageCollectorRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C3D64788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RunGarbageCollectorRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3D647A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A18, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D6481C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(&qword_1EA3859A8, (uint64_t)qword_1EA388898, a1);
}

uint64_t sub_1C3D64840(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA3877D0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D648AC()
{
  sub_1C3D62200(&qword_1EA3877D0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
  return sub_1C3DB8F48();
}

uint64_t sub_1C3D64928(uint64_t a1, uint64_t a2)
{
  return sub_1C3D659A8(a1, a2, type metadata accessor for RunGarbageCollectorRequest) & 1;
}

unint64_t static RunGarbageCollectorResponse.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C3D64974(uint64_t a1)
{
  return sub_1C3D6498C(a1, qword_1EA3888B0, (uint64_t)"continuationToken", 17);
}

uint64_t sub_1C3D6498C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C3DB8FC8();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A50);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A58) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = *MEMORY[0x1E4F70FB8];
  uint64_t v13 = sub_1C3DB8F98();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_1C3DB8FA8();
}

uint64_t static RunGarbageCollectorResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D64B0C(qword_1EA3859B0, (uint64_t)qword_1EA3888B0, a1);
}

uint64_t sub_1C3D64B0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB8FC8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t RunGarbageCollectorResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D64BD0(a1, a2, a3, MEMORY[0x1E4F70EB8]);
}

uint64_t sub_1C3D64BD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  while (1)
  {
    uint64_t result = sub_1C3DB8EE8();
    if (v5 || (v10 & 1) != 0) {
      break;
    }
    if (result == 1) {
      a4(v4, a2, a3);
    }
  }
  return result;
}

uint64_t RunGarbageCollectorResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D64C7C(a1, a2, a3, (void (*)(void))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t sub_1C3D64C7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = *v4;
  unint64_t v7 = v4[1];
  switch(v7 >> 62)
  {
    case 1uLL:
      if ((int)v6 != v6 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v7 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1C3DB8F68();
      if (!v5)
      {
LABEL_8:
        a4(0);
        return sub_1C3DB8E98();
      }
      return result;
  }
}

uint64_t static RunGarbageCollectorResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C3D659A8(a1, a2, type metadata accessor for RunGarbageCollectorResponse) & 1;
}

uint64_t RunGarbageCollectorResponse.hashValue.getter()
{
  return sub_1C3D64DF4((void (*)(void))type metadata accessor for RunGarbageCollectorResponse, &qword_1EA388910, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t sub_1C3D64DF4(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1C3DBB608();
}

unint64_t sub_1C3D64E7C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C3D64E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C3D64F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_1C3D64F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RunGarbageCollectorResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C3D64F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3D62200(&qword_1EA388A10, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C3D6500C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3D65030(qword_1EA3859B0, (uint64_t)qword_1EA3888B0, a1);
}

uint64_t sub_1C3D65030@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C3DB8FC8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1C3D650CC(uint64_t a1)
{
  uint64_t v2 = sub_1C3D62200(&qword_1EA3889A0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C3D65138()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D65190()
{
  sub_1C3D62200(&qword_1EA3889A0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
  return sub_1C3DB8F48();
}

uint64_t sub_1C3D6520C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D65260(uint64_t a1, uint64_t a2)
{
  return sub_1C3D659A8(a1, a2, type metadata accessor for RunGarbageCollectorResponse) & 1;
}

uint64_t _s11NotesShared34DidCompleteInstallOrUpdateResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v16 - v9;
  if ((sub_1C3D064D8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_1C3C6EA84(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0)
  {
    uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateResponse(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(updated + 24), v4);
    v12(v8, a2 + *(int *)(updated + 24), v4);
    sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
    char v13 = sub_1C3DB9BE8();
    unint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s11NotesShared33DidCompleteInstallOrUpdateRequestV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v13 || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
    {
      if (*((void *)a1 + 4) == *((void *)a2 + 4) && *((void *)a1 + 5) == *((void *)a2 + 5)
        || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
      {
        if (*((void *)a1 + 6) == *((void *)a2 + 6) && *((void *)a1 + 7) == *((void *)a2 + 7)
          || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
        {
          if (*((void *)a1 + 8) == *((void *)a2 + 8) && *((void *)a1 + 9) == *((void *)a2 + 9)
            || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
          {
            if (sub_1C3D064D8(*((void *)a1 + 10), *((void *)a1 + 11), *((void *)a2 + 10), *((void *)a2 + 11)))
            {
              uint64_t updated = type metadata accessor for DidCompleteInstallOrUpdateRequest(0);
              unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
              v15(v10, &a1[*(int *)(updated + 40)], v4);
              v15(v8, &a2[*(int *)(updated + 40)], v4);
              sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
              char v12 = sub_1C3DB9BE8();
              uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
              v16(v8, v4);
              v16(v10, v4);
            }
            else
            {
              char v12 = 0;
            }
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t _s11NotesShared28MentionNotificationRequestV2V2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v13 || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
    {
      if (*((void *)a1 + 4) == *((void *)a2 + 4) && *((void *)a1 + 5) == *((void *)a2 + 5)
        || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
      {
        if (*((void *)a1 + 6) == *((void *)a2 + 6) && *((void *)a1 + 7) == *((void *)a2 + 7)
          || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
        {
          if (*((void *)a1 + 8) == *((void *)a2 + 8) && *((void *)a1 + 9) == *((void *)a2 + 9)
            || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
          {
            if (*((void *)a1 + 10) == *((void *)a2 + 10) && *((void *)a1 + 11) == *((void *)a2 + 11)
              || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
            {
              if (*((void *)a1 + 12) == *((void *)a2 + 12) && *((void *)a1 + 13) == *((void *)a2 + 13)
                || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
              {
                if (*((void *)a1 + 14) == *((void *)a2 + 14) && *((void *)a1 + 15) == *((void *)a2 + 15)
                  || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
                {
                  uint64_t v14 = type metadata accessor for MentionNotificationRequestV2(0);
                  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
                  v15(v10, &a1[*(int *)(v14 + 48)], v4);
                  v15(v8, &a2[*(int *)(v14 + 48)], v4);
                  sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
                  char v12 = sub_1C3DB9BE8();
                  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
                  v16(v8, v4);
                  v16(v10, v4);
                }
              }
            }
          }
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_1C3D659A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1C3DB8EB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v18 - v11;
  if (sub_1C3D064D8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)))
  {
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v14(v12, a1 + *(int *)(v13 + 20), v6);
    v14(v10, a2 + *(int *)(v13 + 20), v6);
    sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
    char v15 = sub_1C3DB9BE8();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v12, v6);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s11NotesShared12PingResponseV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_1C3DBB3B8() & 1) != 0))
  {
    uint64_t v13 = type metadata accessor for PingResponse(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, &a1[*(int *)(v13 + 20)], v4);
    v14(v8, &a2[*(int *)(v13 + 20)], v4);
    sub_1C3D62200(&qword_1EA3888C8, MEMORY[0x1E4F70E60]);
    char v12 = sub_1C3DB9BE8();
    char v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  return v12 & 1;
}

uint64_t type metadata accessor for MentionNotificationResponseV2(uint64_t a1)
{
  return sub_1C3C6C9A4(a1, (uint64_t *)&unk_1EA3889E0);
}

uint64_t sub_1C3D65D4C()
{
  return sub_1C3D62200(&qword_1EA388918, (void (*)(uint64_t))type metadata accessor for PingRequest);
}

uint64_t sub_1C3D65D94()
{
  return sub_1C3D62200(&qword_1EA388920, (void (*)(uint64_t))type metadata accessor for PingRequest);
}

uint64_t sub_1C3D65DDC()
{
  return sub_1C3D62200(&qword_1EA3888D0, (void (*)(uint64_t))type metadata accessor for PingRequest);
}

uint64_t sub_1C3D65E24()
{
  return sub_1C3D62200(&qword_1EA388928, (void (*)(uint64_t))type metadata accessor for PingRequest);
}

uint64_t sub_1C3D65E6C()
{
  return sub_1C3D62200(&qword_1EA388930, (void (*)(uint64_t))type metadata accessor for PingResponse);
}

uint64_t sub_1C3D65EB4()
{
  return sub_1C3D62200(&qword_1EA388938, (void (*)(uint64_t))type metadata accessor for PingResponse);
}

uint64_t sub_1C3D65EFC()
{
  return sub_1C3D62200(&qword_1EA3888D8, (void (*)(uint64_t))type metadata accessor for PingResponse);
}

uint64_t sub_1C3D65F44()
{
  return sub_1C3D62200(&qword_1EA388940, (void (*)(uint64_t))type metadata accessor for PingResponse);
}

uint64_t sub_1C3D65F8C()
{
  return sub_1C3D62200(&qword_1EA388948, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D65FD4()
{
  return sub_1C3D62200(&qword_1EA3877C8, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D6601C()
{
  return sub_1C3D62200(&qword_1EA3888E0, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D66064()
{
  return sub_1C3D62200(&qword_1EA388950, (void (*)(uint64_t))type metadata accessor for MentionNotificationRequestV2);
}

uint64_t sub_1C3D660AC()
{
  return sub_1C3D62200(&qword_1EA388958, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
}

uint64_t sub_1C3D660F4()
{
  return sub_1C3D62200(&qword_1EA388960, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
}

uint64_t sub_1C3D6613C()
{
  return sub_1C3D62200(&qword_1EA3888E8, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
}

uint64_t sub_1C3D66184()
{
  return sub_1C3D62200(&qword_1EA388968, (void (*)(uint64_t))type metadata accessor for MentionNotificationResponseV2);
}

uint64_t sub_1C3D661CC()
{
  return sub_1C3D62200(&qword_1EB6FB730, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D66214()
{
  return sub_1C3D62200(&qword_1EB6FB728, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D6625C()
{
  return sub_1C3D62200(&qword_1EA3888F0, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D662A4()
{
  return sub_1C3D62200(&qword_1EA388970, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateRequest);
}

uint64_t sub_1C3D662EC()
{
  return sub_1C3D62200(&qword_1EB6FB750, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1C3D66334()
{
  return sub_1C3D62200(&qword_1EA388978, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1C3D6637C()
{
  return sub_1C3D62200(&qword_1EA388900, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1C3D663C4()
{
  return sub_1C3D62200(&qword_1EA388980, (void (*)(uint64_t))type metadata accessor for DidCompleteInstallOrUpdateResponse);
}

uint64_t sub_1C3D6640C()
{
  return sub_1C3D62200(&qword_1EA388988, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D66454()
{
  return sub_1C3D62200(&qword_1EA3877D0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D6649C()
{
  return sub_1C3D62200(&qword_1EA388908, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D664E4()
{
  return sub_1C3D62200(&qword_1EA388990, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorRequest);
}

uint64_t sub_1C3D6652C()
{
  return sub_1C3D62200(&qword_1EA388998, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t sub_1C3D66574()
{
  return sub_1C3D62200(&qword_1EA3889A0, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t sub_1C3D665BC()
{
  return sub_1C3D62200(&qword_1EA388910, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t sub_1C3D66604()
{
  return sub_1C3D62200(&qword_1EA3889A8, (void (*)(uint64_t))type metadata accessor for RunGarbageCollectorResponse);
}

uint64_t getEnumTagSinglePayload for PingRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for PingRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t *initializeBufferWithCopyOfBuffer for PingResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C3DB8EB8();
    char v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PingResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for PingResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C3DB8EB8();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for PingResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *assignWithTake for PingResponse(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PingResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D669D0);
}

uint64_t sub_1C3D669D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C3DB8EB8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PingResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D66A94);
}

uint64_t sub_1C3D66A94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C3DB8EB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3D66B3C()
{
  return sub_1C3D68B20();
}

uint64_t *initializeBufferWithCopyOfBuffer for MentionNotificationRequestV2(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v11 = a2[13];
    a1[12] = a2[12];
    a1[13] = v11;
    uint64_t v12 = a2[15];
    uint64_t v13 = *(int *)(a3 + 48);
    uint64_t v18 = (char *)a1 + v13;
    CGFloat v19 = (char *)a2 + v13;
    a1[14] = a2[14];
    a1[15] = v12;
    uint64_t v14 = sub_1C3DB8EB8();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v18, v19, v14);
  }
  return v3;
}

uint64_t destroy for MentionNotificationRequestV2(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for MentionNotificationRequestV2(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v13 = sub_1C3DB8EB8();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v16, v17, v13);
  return a1;
}

void *assignWithCopy for MentionNotificationRequestV2(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for MentionNotificationRequestV2(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  long long v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

void *assignWithTake for MentionNotificationRequestV2(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 48);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MentionNotificationRequestV2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D671A0);
}

uint64_t sub_1C3D671A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C3DB8EB8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MentionNotificationRequestV2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D67264);
}

uint64_t sub_1C3D67264(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C3DB8EB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3D6730C()
{
  uint64_t result = sub_1C3DB8EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11NotesShared11PingRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s11NotesShared11PingRequestVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8EB8();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s11NotesShared11PingRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s11NotesShared11PingRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MentionNotificationResponseV2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D67624);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MentionNotificationResponseV2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D676A8);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8EB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C3D6771C()
{
  uint64_t result = sub_1C3DB8EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DidCompleteInstallOrUpdateRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = a2[10];
    unint64_t v13 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3CE0C34(v12, v13);
    a1[10] = v12;
    a1[11] = v13;
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1C3DB8EB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for DidCompleteInstallOrUpdateRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3C58FC8(*(void *)(a1 + 80), *(void *)(a1 + 88));
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for DidCompleteInstallOrUpdateRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v11 = a2[10];
  unint64_t v12 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3CE0C34(v11, v12);
  a1[10] = v11;
  a1[11] = v12;
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void *assignWithCopy for DidCompleteInstallOrUpdateRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[10];
  unint64_t v7 = a2[11];
  sub_1C3CE0C34(v6, v7);
  uint64_t v8 = a1[10];
  unint64_t v9 = a1[11];
  a1[10] = v6;
  a1[11] = v7;
  sub_1C3C58FC8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (char *)a1 + v10;
  unint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for DidCompleteInstallOrUpdateRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

void *assignWithTake for DidCompleteInstallOrUpdateRequest(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a1[10];
  unint64_t v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_1C3C58FC8(v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C3DB8EB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DidCompleteInstallOrUpdateRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D67D3C);
}

uint64_t sub_1C3D67D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C3DB8EB8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DidCompleteInstallOrUpdateRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D67E00);
}

uint64_t sub_1C3D67E00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C3DB8EB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3D67EA8()
{
  uint64_t result = sub_1C3DB8EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C3CE0C34(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C3DB8EB8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2)
{
  sub_1C3C58FC8(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3CE0C34(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = a2[2];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C3DB8EB8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t *assignWithCopy for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3CE0C34(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C3C58FC8(v8, v9);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C3DB8EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *assignWithTake for DidCompleteInstallOrUpdateResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C3C58FC8(v6, v7);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C3DB8EB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D6837C);
}

uint64_t sub_1C3D6837C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C3DB8EB8();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DidCompleteInstallOrUpdateResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D68440);
}

uint64_t sub_1C3D68440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C3DB8EB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3D684E8()
{
  uint64_t result = sub_1C3DB8EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RunGarbageCollectorRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_28Tm);
}

uint64_t storeEnumTagSinglePayload for RunGarbageCollectorRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_29Tm);
}

uint64_t sub_1C3D685D0()
{
  return sub_1C3D68B20();
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C3CE0C34(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C3DB8EB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t _s11NotesShared26RunGarbageCollectorRequestVwxx_0(uint64_t a1, uint64_t a2)
{
  sub_1C3C58FC8(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C3DB8EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3CE0C34(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwca_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3CE0C34(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C3C58FC8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *_s11NotesShared12PingResponseVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *_s11NotesShared26RunGarbageCollectorRequestVwta_0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C3C58FC8(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C3DB8EB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunGarbageCollectorResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D68998);
}

uint64_t __swift_get_extra_inhabitant_index_28Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1C3DB8EB8();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RunGarbageCollectorResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D68A6C);
}

void *__swift_store_extra_inhabitant_index_29Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1C3DB8EB8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C3D68B20()
{
  uint64_t result = sub_1C3DB8EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MentionNotificationResponseV2.traverse<A>(visitor:)()
{
  return PingRequest.traverse<A>(visitor:)();
}

void ic_assert(_:_:simulateCrash:logger:file:line:filePath:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, char a5)
{
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 2;
  swift_retain_n();
  if (sub_1C3D6958C(v7, a1))
  {
    swift_release();
    swift_release_n();
  }
  else
  {
    if (a5) {
      os_log_type_t v8 = sub_1C3DBA6B8();
    }
    else {
      os_log_type_t v8 = sub_1C3DBA6A8();
    }
    os_log_type_t v9 = v8;
    os_log_t log = sub_1C3DB9028();
    if (os_log_type_enabled(log, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)uint64_t v10 = 136315650;
      uint64_t v12 = sub_1C3DBACC8();
      sub_1C3C516D0(v12, v13, &v19);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2048;
      uint64_t v14 = sub_1C3DBA9A8();
      *(_WORD *)(v10 + 22) = 2080;
      uint64_t v15 = a3(v14);
      sub_1C3C516D0(v15, v16, &v19);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, log, v9, "Failed assertion at %s:%lu: %s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v11, -1, -1);
      MEMORY[0x1C877E600](v10, -1, -1);
      swift_release();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_release_n();
    }
  }
}

uint64_t sub_1C3D68E98()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

void ic_assertionFailure(_:simulateCrash:logger:file:line:filePath:)(uint64_t (*a1)(uint64_t), uint64_t a2, char a3)
{
  swift_retain_n();
  if (a3) {
    os_log_type_t v5 = sub_1C3DBA6B8();
  }
  else {
    os_log_type_t v5 = sub_1C3DBA6A8();
  }
  os_log_type_t v6 = v5;
  os_log_t log = sub_1C3DB9028();
  if (os_log_type_enabled(log, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_1C3DBACC8();
    sub_1C3C516D0(v9, v10, &v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    uint64_t v11 = sub_1C3DBA9A8();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v12 = a1(v11);
    sub_1C3C516D0(v12, v13, &v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
    swift_release_n();
  }
  else
  {
    swift_release_n();
  }
}

void Logger.ic_assert(_:_:simulateCrash:file:line:filePath:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, char a5)
{
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 2;
  if (sub_1C3D6958C(v7, a1))
  {
    swift_release();
  }
  else
  {
    if (a5) {
      os_log_type_t v8 = sub_1C3DBA6B8();
    }
    else {
      os_log_type_t v8 = sub_1C3DBA6A8();
    }
    os_log_type_t v9 = v8;
    swift_retain_n();
    os_log_type_t v10 = v9;
    os_log_t log = sub_1C3DB9028();
    if (os_log_type_enabled(log, v9))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = v12;
      *(_DWORD *)uint64_t v11 = 136315650;
      uint64_t v13 = sub_1C3DBACC8();
      sub_1C3C516D0(v13, v14, &v20);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      uint64_t v15 = sub_1C3DBA9A8();
      *(_WORD *)(v11 + 22) = 2080;
      uint64_t v16 = a3(v15);
      sub_1C3C516D0(v16, v17, &v20);
      sub_1C3DBA9A8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, log, v10, "Failed assertion at %s:%lu: %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v12, -1, -1);
      MEMORY[0x1C877E600](v11, -1, -1);
      swift_release();
    }
    else
    {
      swift_release();
      swift_release_n();
    }
  }
}

void Logger.ic_assertionFailure(_:simulateCrash:file:line:filePath:)(uint64_t (*a1)(uint64_t), uint64_t a2, char a3)
{
  if (a3) {
    os_log_type_t v4 = sub_1C3DBA6B8();
  }
  else {
    os_log_type_t v4 = sub_1C3DBA6A8();
  }
  os_log_type_t v5 = v4;
  swift_retain_n();
  os_log_type_t v6 = v5;
  os_log_t log = sub_1C3DB9028();
  if (os_log_type_enabled(log, v5))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_1C3DBACC8();
    sub_1C3C516D0(v9, v10, &v15);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    uint64_t v11 = sub_1C3DBA9A8();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v12 = a1(v11);
    sub_1C3C516D0(v12, v13, &v15);
    sub_1C3DBA9A8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v8, -1, -1);
    MEMORY[0x1C877E600](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_1C3D6958C(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3 = (unsigned char *)(a1 + 16);
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 2)
  {
    char v4 = a2();
    swift_beginAccess();
    *unint64_t v3 = v4 & 1;
  }
  else
  {
    char v4 = v2 & 1;
  }
  return v4 & 1;
}

uint64_t sub_1C3D69600()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EB6FC4B8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC4B8);
  if (qword_1EB6FC710 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC6A8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id ICPaperSynapseContentItemProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ICPaperSynapseContentItemProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICPaperSynapseContentItemProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ICPaperSynapseContentItemProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICPaperSynapseContentItemProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11NotesShared33ICPaperSynapseContentItemProviderC12contentItems13forAttachmentSaySo09SYContentF0CGSo12ICAttachmentC_tFZ_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC308);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for ICSystemPaperDocument();
  unint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment] = a1;
  v28.receiver = v10;
  v28.super_class = v9;
  id v11 = a1;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v28, sel_init);
  id v13 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC11NotesShared21ICSystemPaperDocument_attachment], sel_managedObjectContext);
  if (v13
    && (unint64_t v14 = v13,
        MEMORY[0x1F4188790](v13),
        *(&v26 - 2) = (uint64_t)v12,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC310),
        sub_1C3DBA838(),
        v14,
        (uint64_t v15 = v27) != 0))
  {
    sub_1C3CEE0EC((uint64_t)v27, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v24 = sub_1C3DB9968();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v24;
    }
    sub_1C3D69C58((uint64_t)v4);
    if (qword_1EB6FC4D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C3DB9048();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB6FC4B8);
    unint64_t v17 = sub_1C3DB9028();
    os_log_type_t v18 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1C3A61000, v17, v18, "document.paper not available. Not returning SYContentItems for indexing.", v19, 2u);
      MEMORY[0x1C877E600](v19, -1, -1);
    }
  }
  else
  {
    if (qword_1EB6FC4D8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C3DB9048();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB6FC4B8);
    CGFloat v21 = sub_1C3DB9028();
    os_log_type_t v22 = sub_1C3DBA6A8();
    if (os_log_type_enabled(v21, v22))
    {
      CGRect v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGRect v23 = 0;
      _os_log_impl(&dword_1C3A61000, v21, v22, "Coherence context not available. Not returning SYContentItems for indexing.", v23, 2u);
      MEMORY[0x1C877E600](v23, -1, -1);
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for ICPaperSynapseContentItemProvider()
{
  return self;
}

unint64_t sub_1C3D69C18()
{
  unint64_t result = qword_1EB6FC340;
  if (!qword_1EB6FC340)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6FC340);
  }
  return result;
}

uint64_t sub_1C3D69C58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBF88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LoggingConfiguration.subsystem.getter(uint64_t a1)
{
  return a1;
}

uint64_t LoggingConfiguration.subsystem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

void (*LoggingConfiguration.subsystem.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t LoggingConfiguration.category.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t LoggingConfiguration.category.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

void (*LoggingConfiguration.category.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t LoggingConfiguration.logger.getter()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C3DB9038();
}

uint64_t LogProducer.logger.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  return sub_1C3DB9038();
}

uint64_t destroy for ActivityEventParticipant()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ActivityEventParticipant(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActivityEventParticipant(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ActivityEventParticipant(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventParticipant(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventParticipant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoggingConfiguration()
{
  return &type metadata for LoggingConfiguration;
}

uint64_t dispatch thunk of LogProducer.loggingConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t GroupSessionMessenger.ic_sendChunked<A>(_:size:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  uint64_t v6[4] = a2;
  uint64_t v7 = sub_1C3DB8E78();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MessageChunking.Message();
  v6[12] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[13] = v9;
  v6[14] = *(void *)(v9 + 64);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C3D6A1CC, 0, 0);
}

uint64_t sub_1C3D6A1CC()
{
  *(void *)(v0 + 136) = static MessageChunking.encodeAndChunk<A>(_:size:)(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  if (MEMORY[0x1C877B610]())
  {
    *(_DWORD *)(v0 + 168) = *MEMORY[0x1E4F294D0];
    char v2 = sub_1C3DBA0B8();
    sub_1C3DBA058();
    if (v2)
    {
      (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 128), *(void *)(v0 + 136)+ ((*(unsigned __int8 *)(*(void *)(v0 + 104) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 104) + 80)), *(void *)(v0 + 96));
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 112);
      uint64_t v11 = sub_1C3DBAD08();
      if (v15 != 8)
      {
        __break(1u);
        return MEMORY[0x1F40E7610](v11, v9, v10, v12, v13);
      }
      uint64_t v16 = v11;
      uint64_t v17 = *(void *)(v0 + 128);
      uint64_t v18 = *(void *)(v0 + 96);
      uint64_t v19 = *(void *)(v0 + 104);
      *(void *)(v0 + 16) = v16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v0 + 16, v18);
      swift_unknownObjectRelease();
    }
    *(void *)(v0 + 144) = 1;
    uint64_t v3 = *(unsigned int *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 88);
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 96));
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v6 = swift_getWitnessTable();
    uint64_t v7 = sub_1C3DB8E78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v3, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C3D6A49C;
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = WitnessTable;
    uint64_t v13 = v6;
    return MEMORY[0x1F40E7610](v11, v9, v10, v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1C3D6A49C()
{
  char v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C3D6A890;
  }
  else
  {
    uint64_t v3 = sub_1C3D6A5EC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C3D6A5EC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, uint64_t))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 120), v3);
  if (v2 != MEMORY[0x1C877B610](v1, v3))
  {
    uint64_t v6 = *(void *)(v0 + 144);
    char v7 = sub_1C3DBA0B8();
    sub_1C3DBA058();
    if (v7)
    {
      uint64_t v8 = (*(uint64_t (**)(void, unint64_t, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 128), *(void *)(v0 + 136)+ ((*(unsigned __int8 *)(*(void *)(v0 + 104) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 104) + 80))+ *(void *)(*(void *)(v0 + 104) + 72) * v6, *(void *)(v0 + 96));
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v8 = sub_1C3DBAD08();
      if (v19 != 8) {
        goto LABEL_14;
      }
      uint64_t v20 = *(void *)(v0 + 128);
      uint64_t v21 = *(void *)(v0 + 96);
      uint64_t v22 = *(void *)(v0 + 104);
      *(void *)(v0 + 16) = v8;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v0 + 16, v21);
      uint64_t v8 = swift_unknownObjectRelease();
    }
    *(void *)(v0 + 144) = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      uint64_t v13 = *(unsigned int *)(v0 + 168);
      uint64_t v14 = *(void *)(v0 + 88);
      (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 96));
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v16 = swift_getWitnessTable();
      uint64_t v17 = sub_1C3DB8E78();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v14, v13, v17);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v18;
      void *v18 = v0;
      v18[1] = sub_1C3D6A49C;
      uint64_t v9 = *(void *)(v0 + 88);
      uint64_t v10 = *(void *)(v0 + 96);
      uint64_t v8 = *(void *)(v0 + 120);
      uint64_t v11 = WitnessTable;
      uint64_t v12 = v16;
      return MEMORY[0x1F40E7610](v8, v9, v10, v11, v12);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return MEMORY[0x1F40E7610](v8, v9, v10, v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C3D6A890()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C3D6A928()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D6A970()
{
  return sub_1C3DB9D08();
}

uint64_t sub_1C3D6A97C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D6A9C0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C3D6AA14(void *a1@<X8>)
{
  *a1 = 100;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1C3D6AA24()
{
  return 100;
}

uint64_t sub_1C3D6AA30@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C3DBB038();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C3D6AA88(uint64_t a1)
{
  unint64_t v2 = sub_1C3D6ACE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D6AAC4(uint64_t a1)
{
  unint64_t v2 = sub_1C3D6ACE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FastSync.PaperKitMessage.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C3CE0C34(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t FastSync.PaperKitMessage.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C3C58FC8(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

void (*FastSync.PaperKitMessage.data.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FastSync.PaperKitMessage.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FastSync.PaperKitMessage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D6ACE0();
  sub_1C3DBB6D8();
  v10[0] = v8;
  v10[1] = v7;
  sub_1C3D067B8();
  sub_1C3DBB1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C3D6ACE0()
{
  unint64_t result = qword_1EA388A70;
  if (!qword_1EA388A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388A70);
  }
  return result;
}

uint64_t FastSync.PaperKitMessage.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388A78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D6ACE0();
  sub_1C3DBB6B8();
  if (!v2)
  {
    sub_1C3D0680C();
    sub_1C3DBB108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1C3D6AEA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C3D6AED0();
  unint64_t result = sub_1C3D6AF24();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3D6AED0()
{
  unint64_t result = qword_1EA388A80;
  if (!qword_1EA388A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388A80);
  }
  return result;
}

unint64_t sub_1C3D6AF24()
{
  unint64_t result = qword_1EA388A88;
  if (!qword_1EA388A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388A88);
  }
  return result;
}

uint64_t sub_1C3D6AF78@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FastSync.PaperKitMessage.init(from:)(a1, a2);
}

uint64_t sub_1C3D6AF90(void *a1)
{
  return FastSync.PaperKitMessage.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FastSync.PaperKitMessage()
{
  return &type metadata for FastSync.PaperKitMessage;
}

unsigned char *_s15PaperKitMessageV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3D6B054);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15PaperKitMessageV10CodingKeysOMa()
{
  return &_s15PaperKitMessageV10CodingKeysON;
}

unint64_t sub_1C3D6B090()
{
  unint64_t result = qword_1EA388A90;
  if (!qword_1EA388A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388A90);
  }
  return result;
}

unint64_t sub_1C3D6B0E8()
{
  unint64_t result = qword_1EA388A98;
  if (!qword_1EA388A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388A98);
  }
  return result;
}

unint64_t sub_1C3D6B140()
{
  unint64_t result = qword_1EA388AA0;
  if (!qword_1EA388AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AA0);
  }
  return result;
}

id sub_1C3D6B198()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
  qword_1EA399AF8 = (uint64_t)result;
  return result;
}

id sub_1C3D6B1CC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C3DDD250;
  uint64_t v1 = (void *)*MEMORY[0x1E4F1AE08];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F1AE08];
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_descriptorForRequiredKeysForStyle_, 0);
  uint64_t v5 = (void *)*MEMORY[0x1E4F1ADC8];
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  id v8 = (id)*MEMORY[0x1E4F1AEE0];
  *(void *)(v0 + 56) = *MEMORY[0x1E4F1AEE0];
  sub_1C3DBA038();
  qword_1EA399B00 = v0;
  id v6 = v5;
  return v8;
}

uint64_t _s11NotesShared33AudioTranscriptionContactsUtilityV015speakerNameFromE06handleSSSgSS_tFZ_0()
{
  if (qword_1EA3859C0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA399AF8;
  uint64_t v1 = (void *)sub_1C3DB9BF8();
  if (qword_1EA3859C8 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388AB0);
  uint64_t v2 = (void *)sub_1C3DB9FF8();
  id v3 = objc_msgSend(v0, sel_ic_contactForHandleString_keysToFetch_, v1, v2);

  if (!v3) {
    return 0;
  }
  id v4 = objc_msgSend(self, sel_stringFromContact_style_, v3, 0);
  if (!v4)
  {

    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C3DB9C38();

  return v6;
}

ValueMetadata *type metadata accessor for AudioTranscriptionContactsUtility()
{
  return &type metadata for AudioTranscriptionContactsUtility;
}

Swift::Void __swiftcall NoteAccountObject.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  id v2 = objc_msgSend(v1, sel_objectID);
  if ((objc_msgSend(v2, sel_ic_isModernType) & 1) == 0) {
    objc_msgSend(v2, sel_ic_isLegacyType);
  }

  id v3 = v1;
  if (!objc_msgSend(v3, sel_isLocalAccount))
  {
    id v4 = objc_msgSend(self, sel_emailAddressForAccount_, v3);
    sub_1C3DB9C38();
  }
  AccountID.entityIdentifierString.getter();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_localizedName);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1C3DB9C38();
  }
  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA888();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1C3D6B5DC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  NoteAccountObject.associateAppEntity(with:)((CSSearchableItemAttributeSet)v4);
}

uint64_t ManagedEntityContextType.rawValue.getter()
{
  if (*v0) {
    return 1819112552;
  }
  else {
    return 0x6E7265646F6DLL;
  }
}

NotesShared::ManagedEntityContextType_optional __swiftcall ManagedEntityContextType.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  uint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *id v2 = v5;
  return result;
}

uint64_t ManagedEntityContextType.uriPathComponent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    sub_1C3DB9428();
    uint64_t v6 = sub_1C3DB9418();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v9 = sub_1C3DB9418();
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
  return result;
}

void NSManagedObject.managedEntityContextType.getter(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_objectID);
  if (objc_msgSend(v3, sel_ic_isModernType))
  {

    char v4 = 0;
  }
  else
  {
    unsigned int v5 = objc_msgSend(v3, sel_ic_isLegacyType);

    if (v5) {
      char v4 = 1;
    }
    else {
      char v4 = 2;
    }
  }
  *a1 = v4;
}

id NSManagedObjectID.managedEntityContextType.getter@<X0>(char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_ic_isModernType);
  if (result)
  {
    char v4 = 0;
  }
  else
  {
    id result = objc_msgSend(v1, sel_ic_isLegacyType);
    if (result) {
      char v4 = 1;
    }
    else {
      char v4 = 2;
    }
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C3D6B950(char *a1, char *a2)
{
  return sub_1C3CE62D8(*a1, *a2);
}

NotesShared::ManagedEntityContextType_optional sub_1C3D6B95C(Swift::String *a1)
{
  return ManagedEntityContextType.init(rawValue:)(*a1);
}

void sub_1C3D6B968(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1819112552;
  if (!*v1) {
    uint64_t v2 = 0x6E7265646F6DLL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C3D6B99C()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D6BA14()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D6BA78()
{
  return sub_1C3DBB608();
}

uint64_t ManagedEntityContextType.description.getter()
{
  if (*v0) {
    return 1819112552;
  }
  else {
    return 0x6E7265646F6DLL;
  }
}

uint64_t sub_1C3D6BB1C()
{
  if (*v0) {
    return 1819112552;
  }
  else {
    return 0x6E7265646F6DLL;
  }
}

unint64_t ManagedEntityContextType.debugDescription.getter()
{
  return 0xD000000000000019;
}

unint64_t sub_1C3D6BBF0()
{
  unint64_t result = qword_1EA388AB8;
  if (!qword_1EA388AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ManagedEntityContextType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D6BD14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedEntityContextType()
{
  return &type metadata for ManagedEntityContextType;
}

void static FastSync.MessageVersion.current.getter(void *a1@<X8>)
{
  *a1 = 11;
}

void static FastSync.MessageVersion.future.getter(void *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t FastSync.MessageVersion.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3DBB6A8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    type metadata accessor for NotesVersion(0);
    sub_1C3D6BE4C();
    sub_1C3DBB3D8();
    uint64_t v5 = v7[6];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1C3D6BE4C()
{
  unint64_t result = qword_1EA388AC0;
  if (!qword_1EA388AC0)
  {
    type metadata accessor for NotesVersion(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AC0);
  }
  return result;
}

uint64_t FastSync.MessageVersion.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3DBB6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C3DBB408();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t sub_1C3D6BF38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FastSync.MessageVersion.init(from:)(a1, a2);
}

uint64_t sub_1C3D6BF50(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3DBB6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C3DBB408();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

BOOL static FastSync.MessageVersion.< infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL static FastSync.MessageVersion.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t FastSync.MessageVersion.description.getter()
{
  return sub_1C3DBB248();
}

uint64_t sub_1C3D6C050()
{
  return 0;
}

unint64_t sub_1C3D6C0D8()
{
  unint64_t result = qword_1EA388AC8;
  if (!qword_1EA388AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSync.MessageVersion()
{
  return &type metadata for FastSync.MessageVersion;
}

uint64_t FastSync.MessageContainer.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8B98();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FastSync.MessageContainer.version.getter@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t FastSync.MessageContainer.init(messages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t result = type metadata accessor for FastSync.MessageContainer();
  *(void *)(a2 + *(int *)(result + 32)) = a1;
  *(void *)(a2 + *(int *)(result + 28)) = 11;
  return result;
}

uint64_t type metadata accessor for FastSync.MessageContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FastSync.MessageContainer.init<A>(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388AD0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C3DD3D30;
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v8 + 32));
  uint64_t v13 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(boxed_opaque_existential_1, a1, a2);
  *(unsigned char *)(v8 + 72) = 0;
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v10 = type metadata accessor for FastSync.MessageContainer();
  *(void *)(a4 + *(int *)(v10 + 32)) = v8;
  *(void *)(a4 + *(int *)(v10 + 28)) = 11;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  return v11(a1, a2);
}

uint64_t FastSync.MessageContainer.append<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v14[3] = a3;
  v14[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  char v15 = 0;
  uint64_t v9 = *(int *)(a2 + 32);
  uint64_t v10 = *(void **)(v4 + v9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_1C3D82D60(0, v10[2] + 1, 1, v10);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1C3D82D60((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  void v10[2] = v12 + 1;
  uint64_t result = sub_1C3D6E260((uint64_t)v14, (uint64_t)&v10[6 * v12 + 4]);
  *(void *)(v4 + v9) = v10;
  return result;
}

uint64_t static FastSync.MessageContainer<A>.messageIdentifier.getter()
{
  return sub_1C3DB8E88();
}

uint64_t sub_1C3D6C460()
{
  return static FastSync.MessageContainer<A>.messageIdentifier.getter();
}

uint64_t FastSync.MessageContainer.startIndex.getter()
{
  return 0;
}

uint64_t FastSync.MessageContainer.count.getter(uint64_t a1)
{
  return *(void *)(*(void *)(v1 + *(int *)(a1 + 32)) + 16);
}

BOOL FastSync.MessageContainer.isEmpty.getter(uint64_t a1)
{
  return *(void *)(*(void *)(v1 + *(int *)(a1 + 32)) + 16) == 0;
}

unint64_t FastSync.MessageContainer.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + *(int *)(a2 + 32));
    if (*(void *)(v4 + 16) > result) {
      return sub_1C3D6E2C8(v4 + 48 * result + 32, a3);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D6C4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842B8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1C3D6C4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842C8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1C3D6C4EC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842B0](a1, a2, WitnessTable, v5);
}

void *sub_1C3D6C55C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D6C9CC(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

uint64_t sub_1C3D6C574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D6C5F8()
{
  swift_getWitnessTable();
  return sub_1C3DBA4C8();
}

uint64_t sub_1C3D6C67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D6C6F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FastSync.MessageContainer.count.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_1C3D6C718(void *a1, unint64_t *a2, uint64_t a3))(void *a1)
{
  unsigned int v6 = malloc(0x28uLL);
  *a1 = v6;
  uint64_t v6[4] = sub_1C3D6C788(v6, *a2, a3);
  return sub_1C3C2EE98;
}

void (*sub_1C3D6C788(void *a1, unint64_t a2, uint64_t a3))(uint64_t *a1)
{
  unsigned int v6 = malloc(0x29uLL);
  *a1 = v6;
  FastSync.MessageContainer.subscript.getter(a2, a3, (uint64_t)v6);
  return sub_1C3D6C7FC;
}

void sub_1C3D6C7FC(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_1C3D6E39C(*a1);
  free(v1);
}

uint64_t sub_1C3D6C83C()
{
  swift_getWitnessTable();
  return sub_1C3DBA508();
}

void sub_1C3D6C8B0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1C3D6C8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D6E608(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1C3D6C900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3D6E608(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_1C3D6C944(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842A8](a1, a2, WitnessTable, v5);
}

void *sub_1C3D6C9B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3D6C9CC(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

void *sub_1C3D6C9CC(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, void))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = a4(&v9, a1, a2, WitnessTable, MEMORY[0x1E4FBB590]);
  *a1 = v9;
  return result;
}

uint64_t sub_1C3D6CA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(a2, v3, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1C3DBAF08();
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_1C3D6CAD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1C3D6CB24(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_1C3D6E878();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_1C3D6CBB0()
{
  unint64_t v0 = sub_1C3DBB038();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C3D6CC00(char a1)
{
  if (!a1) {
    return 25705;
  }
  if (a1 == 1) {
    return 109;
  }
  return 118;
}

uint64_t sub_1C3D6CC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D6CCAC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C3D6CD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D6CD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C3D6CDF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D6CBB0();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D6CE30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C3D6CC00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C3D6CE60()
{
  return sub_1C3D6CC00(*v0);
}

uint64_t sub_1C3D6CE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_1C3D6CBFC(a1, a2, *(void *)(a3 + 16));
  *a4 = result;
  return result;
}

uint64_t sub_1C3D6CE98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C3D6F9E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C3D6CEC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C3D6CF18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FastSync.MessageContainer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v37 = sub_1C3DB8B98();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s16MessageContainerV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v6 = sub_1C3DBB128();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v9 = type metadata accessor for FastSync.MessageContainer();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v10 = *(int *)(MEMORY[0x1F4188790](v9) + 32);
  id v41 = (char *)v32 - v11;
  uint64_t v51 = v10;
  *(void *)&v41[v10] = MEMORY[0x1E4FBC860];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = (uint64_t)v40;
  sub_1C3DBB6B8();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = v36;
  uint64_t v33 = v9;
  void v32[4] = a2;
  uint64_t v40 = a1;
  LOBYTE(v47[0]) = 0;
  sub_1C3C9239C(&qword_1EA386F28);
  uint64_t v14 = v37;
  sub_1C3DBB108();
  uint64_t v16 = v41;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v41, v39, v14);
  LOBYTE(v42) = 2;
  sub_1C3D6E348();
  sub_1C3DBB108();
  *(void *)&v16[*(int *)(v33 + 28)] = v47[0];
  LOBYTE(v47[0]) = 1;
  sub_1C3DBB048();
  uint64_t v37 = (uint64_t)v8;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t result = sub_1C3DBB268();
  uint64_t v17 = v34;
  uint64_t v18 = v35;
  if (v19) {
    goto LABEL_9;
  }
  uint64_t v20 = result + 1;
  if (!__OFADD__(result, 1))
  {
    if (v20 < 0) {
      uint64_t v20 = result + 2;
    }
    uint64_t v21 = sub_1C3D82D60(0, (v20 >> 1) & ~(v20 >> 63), 0, MEMORY[0x1E4FBC860]);
    *(void *)&v16[v51] = v21;
LABEL_9:
    uint64_t v36 = v6;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    if (sub_1C3DBB298())
    {
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v36);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v49);
      uint64_t v22 = v33;
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v17, v16, v33);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v16, v22);
    }
    uint64_t v39 = (char *)0x80000001C3DF7F70;
    v32[3] = 0x80000001C3DF7F90;
    _OWORD v32[2] = 0x80000001C3DF7FB0;
    v32[1] = 0x80000001C3DF7FD0;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
      sub_1C3DBB278();
      uint64_t v23 = sub_1C3DBAC88();
      if (!v23) {
        break;
      }
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = v24;
      }
      else {
        uint64_t v27 = 0;
      }
      if (!v27 || (sub_1C3D6E8F4() & 1) == 0)
      {
        sub_1C3C49A14((uint64_t)v49, (uint64_t)v47);
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
        sub_1C3DBAC68();
        sub_1C3DB9D68();
        sub_1C3DBB798();
        sub_1C3DB9D68();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
      uint64_t v44 = v27;
      uint64_t v45 = v26;
      __swift_allocate_boxed_opaque_existential_1(&v42);
      sub_1C3DBB288();
      sub_1C3C49A14((uint64_t)&v42, (uint64_t)v47);
      char v48 = 0;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v42);
      uint64_t v17 = v34;
LABEL_25:
      uint64_t v18 = v35;
      sub_1C3D6E2C8((uint64_t)v47, (uint64_t)&v42);
      char v29 = *(void **)&v16[v51];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v29 = sub_1C3D82D60(0, v29[2] + 1, 1, v29);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        char v29 = sub_1C3D82D60((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      uint64_t v29[2] = v31 + 1;
      sub_1C3D6E260((uint64_t)&v42, (uint64_t)&v29[6 * v31 + 4]);
      uint64_t v16 = v41;
      *(void *)&v41[v51] = v29;
      sub_1C3D6E39C((uint64_t)v47);
      __swift_project_boxed_opaque_existential_1(v49, v50);
      if (sub_1C3DBB298()) {
        goto LABEL_10;
      }
    }
    sub_1C3C49A14((uint64_t)v49, (uint64_t)v47);
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    uint64_t v42 = 0x272065707954;
    unint64_t v43 = 0xE600000000000000;
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_1C3DB9D68();
    sub_1C3DBAD78();
    uint64_t v28 = swift_allocError();
    sub_1C3DBAD38();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    uint64_t v42 = v28;
    char v46 = 1;
    sub_1C3D6E260((uint64_t)&v42, (uint64_t)v47);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v49, v50);
    UnkeyedDecodingContainer.skip(count:)(1);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D6D8FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FastSync.MessageContainer.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FastSync.MessageContainer.encode(to:)(void *a1, unint64_t a2)
{
  uint64_t v43 = *(void *)(a2 + 16);
  _s16MessageContainerV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v6 = sub_1C3DBB208();
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v36 - v8;
  if (*(void *)(*(void *)(v2 + *(int *)(a2 + 32)) + 16))
  {
    unint64_t v40 = a2;
    uint64_t v41 = v7;
    *(void *)&long long v42 = v3;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C3DBB6D8();
    LOBYTE(v44[0]) = 0;
    sub_1C3DB8B98();
    sub_1C3C9239C(&qword_1EB6FBC10);
    uint64_t v10 = v42;
    sub_1C3DBB1E8();
    if (v10)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    }
    else
    {
      unint64_t v11 = v40;
      *(void *)&v44[0] = *(void *)(v2 + *(int *)(v40 + 28));
      LOBYTE(v48) = 2;
      sub_1C3D6E9F0();
      sub_1C3DBB1E8();
      _OWORD v36[2] = 0;
      LOBYTE(v44[0]) = 1;
      uint64_t v37 = v6;
      sub_1C3DBB148();
      uint64_t v21 = *(void *)(v2 + *(int *)(v11 + 32));
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        uint64_t v23 = v21 + 32;
        v36[1] = *(void *)(v2 + *(int *)(v11 + 32));
        swift_bridgeObjectRetain();
        *(void *)&long long v24 = 136315650;
        long long v42 = v24;
        unint64_t v40 = 0x80000001C3DF8030;
        uint64_t v38 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v39 = v9;
        do
        {
          sub_1C3D6E2C8(v23, (uint64_t)v44);
          if (v46)
          {
            uint64_t v25 = *(void **)&v44[0];
            uint64_t v50 = *(void **)&v44[0];
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
            swift_willThrowTypedImpl();
            id v26 = v25;
            id v27 = v25;
            if (qword_1EB6FBAB8 != -1) {
              swift_once();
            }
            uint64_t v28 = sub_1C3DB9048();
            __swift_project_value_buffer(v28, (uint64_t)qword_1EB6FB810);
            os_log_type_t v29 = sub_1C3DBA6B8();
            unint64_t v30 = sub_1C3DB9028();
            if (os_log_type_enabled(v30, v29))
            {
              uint64_t v31 = swift_slowAlloc();
              uint64_t v32 = swift_slowAlloc();
              v47[0] = v32;
              *(_DWORD *)uint64_t v31 = v42;
              uint64_t v33 = sub_1C3DBACC8();
              *(void *)(v31 + 4) = sub_1C3C516D0(v33, v34, v47);
              swift_bridgeObjectRelease();
              *(_WORD *)(v31 + 12) = 2048;
              *(void *)(v31 + 14) = 190;
              *(_WORD *)(v31 + 22) = 2080;
              *(void *)&v44[0] = 0;
              *((void *)&v44[0] + 1) = 0xE000000000000000;
              sub_1C3DBAC68();
              sub_1C3DB9D68();
              uint64_t v50 = v25;
              sub_1C3DBAEE8();
              *(void *)(v31 + 24) = sub_1C3C516D0(*(uint64_t *)&v44[0], *((unint64_t *)&v44[0] + 1), v47);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C3A61000, v30, v29, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x1C877E600](v32, -1, -1);
              uint64_t v35 = v31;
              uint64_t v9 = v39;
              MEMORY[0x1C877E600](v35, -1, -1);
            }
            else
            {
            }
          }
          else
          {
            sub_1C3C4C684(v44, (uint64_t)v47);
            sub_1C3D6EA44(v47, (uint64_t)&v48);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
          }
          v23 += 48;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v48);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v9, v37);
    }
  }
  else
  {
    if (qword_1EB6FBAB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C3DB9048();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB6FB810);
    os_log_type_t v14 = sub_1C3DBA6B8();
    char v15 = sub_1C3DB9028();
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v47[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v18 = sub_1C3DBACC8();
      *(void *)&v44[0] = sub_1C3C516D0(v18, v19, v47);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      *(void *)&v44[0] = 176;
      sub_1C3DBA9A8();
      *(_WORD *)(v16 + 22) = 2080;
      uint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      memset(v44, 0, sizeof(v44));
      char v45 = 7;
      sub_1C3DBAEE8();
      *(void *)&v44[0] = sub_1C3C516D0(v48, v49, v47);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v15, v14, "Failed assertion at %s:%lu: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v17, -1, -1);
      MEMORY[0x1C877E600](v16, -1, -1);
    }

    sub_1C3D2D3F0();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = 0u;
    *(_OWORD *)(v20 + 16) = 0u;
    *(unsigned char *)(v20 + 32) = 7;
    return swift_willThrow();
  }
}

uint64_t sub_1C3D6E094(void *a1, unint64_t a2)
{
  return FastSync.MessageContainer.encode(to:)(a1, a2);
}

uint64_t FastSync.MessageContainer.description.getter(uint64_t a1)
{
  sub_1C3DBAC68();
  sub_1C3DBB798();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB8B98();
  sub_1C3C9239C((unint64_t *)&qword_1EA385DC0);
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  uint64_t v3 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E40);
  MEMORY[0x1C877B530](v3, v4);
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  return 0;
}

uint64_t sub_1C3D6E260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D6E2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s16MessageContainerV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C3D6E348()
{
  unint64_t result = qword_1EA388AD8;
  if (!qword_1EA388AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AD8);
  }
  return result;
}

uint64_t sub_1C3D6E39C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3D6E3FC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1C3DBA618();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1C3DB9BA8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_1C3DB9BA8();
  os_log_type_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C3D6E608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_1C3DB9BA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C3D6E87C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_1C3DBB238() & 1;
  }
}

uint64_t sub_1C3D6E8F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388BF0);
  sub_1C3DB9CA8();
  sub_1C3C2A4A4();
  unint64_t v0 = (void *)sub_1C3DBAA58();
  swift_bridgeObjectRelease();
  if (v0[2])
  {
    unint64_t v1 = v0[4];
    unint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v5 = sub_1C3D6E87C(v1, v2, v3, v4, 0x6168537365746F4ELL, 0xEB00000000646572);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1C3D6E9F0()
{
  unint64_t result = qword_1EA388AE0;
  if (!qword_1EA388AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388AE0);
  }
  return result;
}

void sub_1C3D6EA44(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_1C3DBAF18();
  if (v4)
  {
    __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
    sub_1C3DBB348();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
    sub_1C3DBB358();
  }
  else
  {
    if (qword_1EB6FBAB8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C3DB9048();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB6FB810);
    os_log_type_t v6 = sub_1C3DBA6B8();
    os_log_t log = sub_1C3DB9028();
    if (os_log_type_enabled(log, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v7 = 136315650;
      uint64_t v9 = sub_1C3DBACC8();
      sub_1C3C516D0(v9, v10, &v12);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1C3DBA9A8();
      *(_WORD *)(v7 + 22) = 2080;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      sub_1C3DBB798();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3C516D0(0, 0xE000000000000000, &v12);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, log, v6, "Failed assertion at %s:%lu: %s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v8, -1, -1);
      MEMORY[0x1C877E600](v7, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_1C3D6F05C()
{
  return sub_1C3C9239C((unint64_t *)&qword_1EB6FC050);
}

uint64_t sub_1C3D6F090()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F0AC()
{
  return sub_1C3D6F254();
}

unint64_t sub_1C3D6F0C4()
{
  unint64_t result = qword_1EA388AE8[0];
  if (!qword_1EA388AE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA388AE8);
  }
  return result;
}

uint64_t sub_1C3D6F118()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F17C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F198()
{
  return sub_1C3D6F254();
}

uint64_t sub_1C3D6F1B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F214()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F230()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1C3D6F23C()
{
  return sub_1C3D6F254();
}

uint64_t sub_1C3D6F254()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F2A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F2BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F2D8()
{
  uint64_t result = sub_1C3DB8B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3D6F380(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8B98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 32);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C3D6F458(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D6F4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 32);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C3D6F554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C3D6F5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 32);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1C3D6F670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 32);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C3D6F6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D6F710);
}

uint64_t sub_1C3D6F710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C3D6F7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D6F7E4);
}

uint64_t sub_1C3D6F7E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

unsigned char *sub_1C3D6F8A0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D6F96CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C3D6F994()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F9B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F9CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3D6F9E8()
{
  return 3;
}

__C::_NSRange_optional __swiftcall _NSRange.init(union:)(Swift::OpaquePointer a1)
{
  Swift::Int v1 = sub_1C3D70FC4((uint64_t)a1._rawValue);
  Swift::Bool v4 = v3 & 1;
  result.value.Swift::Int length = v2;
  result.value.Swift::Int location = v1;
  result.is_nil = v4;
  return result;
}

uint64_t _NSRange.difference(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v5 = result;
  uint64_t v6 = result + a2;
  if (__OFADD__(result, a2))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v4 >= v6) {
    uint64_t v9 = result + a2;
  }
  else {
    uint64_t v9 = a3 + a4;
  }
  if (a3 < result || v6 <= a3)
  {
    if (result < a3 || v4 <= result) {
      goto LABEL_17;
    }
    uint64_t v10 = v9 - result;
    if (!__OFSUB__(v9, result)) {
      goto LABEL_13;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v10 = v9 - a3;
  if (__OFSUB__(v9, a3))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = a3;
LABEL_13:
  if (v10 < 1)
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
    __C::_NSRange_optional result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C3DD3D30;
    *(void *)(result + 32) = a3;
    *(void *)(result + 40) = a4;
    return result;
  }
  if (v5 == a3 && v10 == a4) {
    return MEMORY[0x1E4FBC860];
  }
  if (v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
    __C::_NSRange_optional result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C3DD3D30;
    uint64_t v15 = v5 + v10;
    if (!__OFADD__(v5, v10))
    {
      if (!__OFSUB__(v4, v15))
      {
        *(void *)(result + 32) = v15;
        *(void *)(result + 40) = v4 - v15;
        return result;
      }
      goto LABEL_38;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = v5 + v10;
  if (__OFADD__(v5, v10))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
  BOOL v12 = __OFSUB__(v5, a3);
  uint64_t v13 = v5 - a3;
  char v14 = v12;
  if (v11 < v4)
  {
    __C::_NSRange_optional result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C3DD5130;
    if ((v14 & 1) == 0)
    {
      *(void *)(result + 32) = a3;
      *(void *)(result + 40) = v13;
      if (!__OFSUB__(v4, v11))
      {
        *(void *)(result + 48) = v11;
        *(void *)(result + 56) = v4 - v11;
        return result;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  __C::_NSRange_optional result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C3DD3D30;
  if ((v14 & 1) == 0)
  {
    *(void *)(result + 32) = a3;
    *(void *)(result + 40) = v13;
    return result;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t _NSRange.difference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1C3D6FEB8((uint64_t (*)(long long *, long long *))sub_1C3C2AE50, 0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C3DD3D30;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  uint64_t v33 = (void *)v6;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    uint64_t v31 = v6;
    swift_release();
    return v31;
  }
  swift_retain();
  uint64_t v8 = (uint64_t *)(a1 + 40);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v11 = v33;
    if (!v33[2]) {
      goto LABEL_5;
    }
    uint64_t v12 = *(v8 - 1);
    uint64_t v13 = *v8;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v14 = v33[2];
      if (!v14) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v11 = sub_1C3D70F38(v33);
      uint64_t v14 = v11[2];
      if (!v14)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        swift_release_n();
        return (uint64_t)v33;
      }
    }
    uint64_t v15 = v14 - 1;
    uint64_t v16 = &v11[2 * v15];
    uint64_t v17 = v16[4];
    uint64_t v18 = v16[5];
    void v11[2] = v15;
    uint64_t v33 = v11;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    uint64_t v20 = v12 + v13;
    if (__OFADD__(v12, v13)) {
      goto LABEL_52;
    }
    if (v19 >= v20) {
      uint64_t v21 = v12 + v13;
    }
    else {
      uint64_t v21 = v17 + v18;
    }
    if (v17 >= v12 && v17 < v20)
    {
      uint64_t v24 = v21 - v17;
      if (__OFSUB__(v21, v17)) {
        goto LABEL_53;
      }
      uint64_t v12 = v17;
      if (v24 >= 1)
      {
LABEL_28:
        BOOL v25 = v12 == v17 && v24 == v18;
        uint64_t v10 = v9;
        if (!v25)
        {
          if (v17 >= v12)
          {
            uint64_t v10 = swift_allocObject();
            *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
            uint64_t v30 = v12 + v24;
            if (__OFADD__(v12, v24)) {
              goto LABEL_56;
            }
            if (__OFSUB__(v19, v30)) {
              goto LABEL_57;
            }
            *(void *)(v10 + 32) = v30;
            *(void *)(v10 + 40) = v19 - v30;
          }
          else
          {
            uint64_t v26 = v12 + v24;
            if (__OFADD__(v12, v24)) {
              goto LABEL_55;
            }
            BOOL v27 = __OFSUB__(v12, v17);
            uint64_t v28 = v12 - v17;
            char v29 = v27;
            if (v26 >= v19)
            {
              uint64_t v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
              if (v29) {
                goto LABEL_59;
              }
              *(void *)(v10 + 32) = v17;
              *(void *)(v10 + 40) = v28;
            }
            else
            {
              uint64_t v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_1C3DD5130;
              if (v29) {
                goto LABEL_58;
              }
              *(void *)(v10 + 32) = v17;
              *(void *)(v10 + 40) = v28;
              if (__OFSUB__(v19, v26)) {
                goto LABEL_60;
              }
              *(void *)(v10 + 48) = v26;
              *(void *)(v10 + 56) = v19 - v26;
            }
          }
        }
        goto LABEL_4;
      }
    }
    else if (v12 >= v17 && v12 < v19)
    {
      uint64_t v24 = v21 - v12;
      if (__OFSUB__(v21, v12)) {
        goto LABEL_54;
      }
      if (v24 >= 1) {
        goto LABEL_28;
      }
    }
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3DD3D30;
    *(void *)(v10 + 32) = v17;
    *(void *)(v10 + 40) = v18;
LABEL_4:
    sub_1C3D7A010(v10);
LABEL_5:
    v8 += 2;
    if (!--v7) {
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C3D6FEB8(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1C3D70FB0(v5);
  }
  uint64_t result = sub_1C3D6FF3C(a1, a2);
  *Swift::Int v2 = v5;
  return result;
}

uint64_t sub_1C3D6FF3C(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v98 = a2;
  uint64_t v4 = v2[1];
  uint64_t result = sub_1C3DBB228();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_135;
    }
    if (v4) {
      return sub_1C3D70644(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 <= -2) {
    goto LABEL_144;
  }
  uint64_t v92 = v4;
  uint64_t v90 = result;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v91 = MEMORY[0x1E4FBC860];
    if (v4 != 1)
    {
      unint64_t v25 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_102:
      if (v25 >= 2)
      {
        uint64_t v81 = *v2;
        do
        {
          unint64_t v82 = v25 - 2;
          if (v25 < 2) {
            goto LABEL_130;
          }
          if (!v81) {
            goto LABEL_143;
          }
          uint64_t v83 = *(void *)&v9[16 * v82 + 32];
          uint64_t v84 = *(void *)&v9[16 * v25 + 24];
          sub_1C3D70720((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(void *)&v9[16 * v25 + 16]), v81 + 16 * v84, __dst, a1);
          if (v3) {
            break;
          }
          if (v84 < v83) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1C3D70EE8((uint64_t)v9);
          }
          if (v82 >= *((void *)v9 + 2)) {
            goto LABEL_132;
          }
          uint64_t v85 = &v9[16 * v82 + 32];
          *(void *)uint64_t v85 = v83;
          *((void *)v85 + 1) = v84;
          unint64_t v86 = *((void *)v9 + 2);
          if (v25 > v86) {
            goto LABEL_133;
          }
          memmove(&v9[16 * v25 + 16], &v9[16 * v25 + 32], 16 * (v86 - v25));
          *((void *)v9 + 2) = v86 - 1;
          unint64_t v25 = v86 - 1;
        }
        while (v86 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v91 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for _NSRange(0);
    uint64_t v8 = sub_1C3DBA0A8();
    *(void *)(v8 + 16) = v7;
    uint64_t v91 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *v2;
  uint64_t v89 = *v2 + 32;
  char v87 = v2;
  uint64_t v88 = *v2 - 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v92;
  uint64_t v94 = *v2;
  while (1)
  {
    uint64_t v13 = v10++;
    if (v10 < v12)
    {
      long long v97 = *(_OWORD *)(v11 + 16 * v10);
      long long v96 = *(_OWORD *)(v11 + 16 * v13);
      int v14 = a1(&v97, &v96);
      if (v3) {
        goto LABEL_113;
      }
      int v15 = v14;
      uint64_t v10 = v13 + 2;
      if (v13 + 2 < v92)
      {
        uint64_t v16 = (long long *)(v89 + 16 * v13);
        while (1)
        {
          long long v97 = *v16;
          long long v96 = *(v16 - 1);
          if ((v15 ^ a1(&v97, &v96))) {
            break;
          }
          ++v10;
          ++v16;
          if (v92 == v10)
          {
            uint64_t v10 = v92;
            break;
          }
        }
      }
      uint64_t v11 = v94;
      if (v15)
      {
        if (v10 < v13) {
          goto LABEL_139;
        }
        uint64_t v12 = v92;
        if (v13 < v10)
        {
          uint64_t v17 = (long long *)(v88 + 16 * v10);
          uint64_t v18 = v10;
          uint64_t v19 = v13;
          uint64_t v20 = (long long *)(v94 + 16 * v13);
          do
          {
            if (v19 != --v18)
            {
              if (!v94) {
                goto LABEL_142;
              }
              long long v21 = *v20;
              *uint64_t v20 = *v17;
              *uint64_t v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
      else
      {
        uint64_t v12 = v92;
      }
    }
    if (v10 >= v12) {
      goto LABEL_39;
    }
    if (__OFSUB__(v10, v13)) {
      goto LABEL_136;
    }
    if (v10 - v13 >= v90) {
      goto LABEL_39;
    }
    if (__OFADD__(v13, v90)) {
      goto LABEL_137;
    }
    uint64_t v22 = v13 + v90 >= v12 ? v12 : v13 + v90;
    if (v22 < v13) {
      break;
    }
    if (v10 != v22)
    {
      unint64_t v75 = (long long *)(v88 + 16 * v10);
      do
      {
        long long v76 = *(_OWORD *)(v11 + 16 * v10);
        uint64_t v77 = v13;
        id v78 = v75;
        while (1)
        {
          long long v97 = v76;
          long long v96 = *v78;
          char v79 = a1(&v97, &v96);
          if (v3) {
            goto LABEL_113;
          }
          if ((v79 & 1) == 0) {
            break;
          }
          uint64_t v11 = v94;
          if (!v94) {
            goto LABEL_141;
          }
          long long v76 = v78[1];
          v78[1] = *v78;
          *v78-- = v76;
          if (v10 == ++v77) {
            goto LABEL_97;
          }
        }
        uint64_t v11 = v94;
LABEL_97:
        ++v10;
        ++v75;
      }
      while (v10 != v22);
      uint64_t v10 = v22;
      if (v22 < v13) {
        goto LABEL_134;
      }
      goto LABEL_40;
    }
LABEL_39:
    if (v10 < v13) {
      goto LABEL_134;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C3D70A34(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v24 = *((void *)v9 + 2);
    unint64_t v23 = *((void *)v9 + 3);
    unint64_t v25 = v24 + 1;
    uint64_t v11 = v94;
    if (v24 >= v23 >> 1)
    {
      uint64_t v80 = sub_1C3D70A34((char *)(v23 > 1), v24 + 1, 1, v9);
      uint64_t v11 = v94;
      uint64_t v9 = v80;
    }
    *((void *)v9 + 2) = v25;
    uint64_t v26 = v9 + 32;
    BOOL v27 = &v9[16 * v24 + 32];
    *(void *)BOOL v27 = v13;
    *((void *)v27 + 1) = v10;
    if (v24)
    {
      while (1)
      {
        unint64_t v28 = v25 - 1;
        if (v25 >= 4)
        {
          uint64_t v33 = &v26[16 * v25];
          uint64_t v34 = *((void *)v33 - 8);
          uint64_t v35 = *((void *)v33 - 7);
          BOOL v39 = __OFSUB__(v35, v34);
          uint64_t v36 = v35 - v34;
          if (v39) {
            goto LABEL_119;
          }
          uint64_t v38 = *((void *)v33 - 6);
          uint64_t v37 = *((void *)v33 - 5);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v31 = v37 - v38;
          char v32 = v39;
          if (v39) {
            goto LABEL_120;
          }
          unint64_t v40 = v25 - 2;
          uint64_t v41 = &v26[16 * v25 - 32];
          uint64_t v43 = *(void *)v41;
          uint64_t v42 = *((void *)v41 + 1);
          BOOL v39 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          if (v39) {
            goto LABEL_122;
          }
          BOOL v39 = __OFADD__(v31, v44);
          uint64_t v45 = v31 + v44;
          if (v39) {
            goto LABEL_125;
          }
          if (v45 >= v36)
          {
            uint64_t v63 = &v26[16 * v28];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v39 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v39) {
              goto LABEL_129;
            }
            BOOL v56 = v31 < v66;
            goto LABEL_76;
          }
        }
        else
        {
          if (v25 != 3)
          {
            uint64_t v57 = *((void *)v9 + 4);
            uint64_t v58 = *((void *)v9 + 5);
            BOOL v39 = __OFSUB__(v58, v57);
            uint64_t v50 = v58 - v57;
            char v51 = v39;
            goto LABEL_70;
          }
          uint64_t v30 = *((void *)v9 + 4);
          uint64_t v29 = *((void *)v9 + 5);
          BOOL v39 = __OFSUB__(v29, v30);
          uint64_t v31 = v29 - v30;
          char v32 = v39;
        }
        if (v32) {
          goto LABEL_121;
        }
        unint64_t v40 = v25 - 2;
        char v46 = &v26[16 * v25 - 32];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        BOOL v49 = __OFSUB__(v47, v48);
        uint64_t v50 = v47 - v48;
        char v51 = v49;
        if (v49) {
          goto LABEL_124;
        }
        uint64_t v52 = &v26[16 * v28];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v39 = __OFSUB__(v53, v54);
        uint64_t v55 = v53 - v54;
        if (v39) {
          goto LABEL_127;
        }
        if (__OFADD__(v50, v55)) {
          goto LABEL_128;
        }
        if (v50 + v55 >= v31)
        {
          BOOL v56 = v31 < v55;
LABEL_76:
          if (v56) {
            unint64_t v28 = v40;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v51) {
          goto LABEL_123;
        }
        uint64_t v59 = &v26[16 * v28];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v39 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v39) {
          goto LABEL_126;
        }
        if (v62 < v50) {
          goto LABEL_87;
        }
LABEL_78:
        unint64_t v67 = v28 - 1;
        if (v28 - 1 >= v25)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v11) {
          goto LABEL_140;
        }
        uint64_t v68 = v10;
        unint64_t v69 = v9;
        uint64_t v70 = &v26[16 * v67];
        uint64_t v71 = *(void *)v70;
        uint64_t v72 = &v26[16 * v28];
        uint64_t v73 = *((void *)v72 + 1);
        sub_1C3D70720((char *)(v11 + 16 * *(void *)v70), (char *)(v11 + 16 * *(void *)v72), v11 + 16 * v73, __dst, a1);
        if (v3) {
          goto LABEL_113;
        }
        if (v73 < v71) {
          goto LABEL_116;
        }
        if (v28 > *((void *)v69 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v70 = v71;
        *(void *)&v26[16 * v67 + 8] = v73;
        unint64_t v74 = *((void *)v69 + 2);
        if (v28 >= v74) {
          goto LABEL_118;
        }
        uint64_t v9 = v69;
        unint64_t v25 = v74 - 1;
        memmove(&v26[16 * v28], v72 + 16, 16 * (v74 - 1 - v28));
        *((void *)v69 + 2) = v74 - 1;
        uint64_t v11 = v94;
        uint64_t v10 = v68;
        if (v74 <= 2) {
          goto LABEL_87;
        }
      }
    }
    unint64_t v25 = 1;
LABEL_87:
    uint64_t v12 = v92;
    if (v10 >= v92)
    {
      Swift::Int v2 = v87;
      goto LABEL_102;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  uint64_t result = sub_1C3DBAF48();
  __break(1u);
  return result;
}

uint64_t sub_1C3D70644(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *, long long *))
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *v4;
    uint64_t v10 = *v4 + 16 * a3 - 16;
    uint64_t v16 = result;
LABEL_4:
    long long v11 = *(_OWORD *)(v9 + 16 * v7);
    uint64_t v12 = result;
    uint64_t v13 = (long long *)v10;
    while (1)
    {
      long long v15 = v11;
      long long v14 = *v13;
      uint64_t result = a4(&v15, &v14);
      if (v5) {
        break;
      }
      if (result)
      {
        if (!v9)
        {
          __break(1u);
          return result;
        }
        long long v11 = v13[1];
        v13[1] = *v13;
        *v13-- = v11;
        if (v7 != ++v12) {
          continue;
        }
      }
      ++v7;
      v10 += 16;
      uint64_t result = v16;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_1C3D70720(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(long long *, long long *))
{
  uint64_t v6 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v10 = a2 - __src;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 4;
  uint64_t v37 = __src;
  uint64_t v36 = __dst;
  if (v11 >= v13 >> 4)
  {
    if (v12 <= -16) {
      goto LABEL_51;
    }
    if (__dst != a2 || &a2[16 * v14] <= __dst) {
      memmove(__dst, a2, 16 * v14);
    }
    uint64_t v22 = &v6[16 * v14];
    uint64_t v35 = v22;
    uint64_t v37 = v7;
    if (v8 >= v7 || v12 < 16)
    {
LABEL_50:
      sub_1C3D70E2C((void **)&v37, &v36, &v35);
      return 1;
    }
    uint64_t v30 = v35;
    uint64_t v31 = v37;
    unint64_t v23 = (char *)(a3 - 16);
    while (1)
    {
      long long v34 = *((_OWORD *)v22 - 1);
      unint64_t v24 = v7 - 16;
      long long v33 = *((_OWORD *)v7 - 1);
      char v25 = a5(&v34, &v33);
      if (v5)
      {
LABEL_49:
        uint64_t v35 = v30;
        uint64_t v37 = v31;
        goto LABEL_50;
      }
      uint64_t v26 = v23 + 16;
      if ((v25 & 1) == 0) {
        break;
      }
      if (v26 != v7)
      {
        uint64_t v31 = v7 - 16;
        v7 -= 16;
LABEL_46:
        *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
        goto LABEL_47;
      }
      uint64_t v31 = v7 - 16;
      BOOL v27 = v23 >= v7;
      v7 -= 16;
      if (v27) {
        goto LABEL_46;
      }
LABEL_47:
      if (v7 > v8)
      {
        v23 -= 16;
        if (v22 > v6) {
          continue;
        }
      }
      goto LABEL_49;
    }
    if (v26 < v22 || v23 >= v22)
    {
      unint64_t v24 = v22 - 16;
      uint64_t v30 = v22 - 16;
      v22 -= 16;
    }
    else
    {
      unint64_t v24 = v22 - 16;
      uint64_t v30 = v22 - 16;
      BOOL v21 = v26 == v22;
      v22 -= 16;
      if (v21) {
        goto LABEL_47;
      }
    }
    goto LABEL_46;
  }
  if (v9 > -16)
  {
    if (__dst != __src || &__src[16 * v11] <= __dst) {
      memmove(__dst, __src, 16 * v11);
    }
    long long v15 = &v6[16 * v11];
    uint64_t v35 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 16)
    {
      uint64_t v16 = v36;
      uint64_t v17 = v37;
      while (1)
      {
        long long v34 = *(_OWORD *)v7;
        long long v33 = *(_OWORD *)v6;
        char v18 = a5(&v34, &v33);
        if (v5)
        {
LABEL_26:
          uint64_t v36 = v16;
          uint64_t v37 = v17;
          goto LABEL_50;
        }
        if (v18) {
          break;
        }
        uint64_t v16 = v6 + 16;
        uint64_t v20 = v6;
        uint64_t v19 = v7;
        BOOL v21 = v8 == v6;
        v6 += 16;
        if (!v21) {
          goto LABEL_23;
        }
LABEL_24:
        uint64_t v17 = v8 + 16;
        if (v6 < v15)
        {
          uint64_t v7 = v19;
          v8 += 16;
          if ((unint64_t)v19 < a3) {
            continue;
          }
        }
        goto LABEL_26;
      }
      uint64_t v19 = v7 + 16;
      if (v8 < v7 || v8 >= v19)
      {
        uint64_t v20 = v7;
      }
      else
      {
        uint64_t v20 = v7;
        if (v8 == v7) {
          goto LABEL_24;
        }
      }
LABEL_23:
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v20;
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_51:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

char *sub_1C3D70A34(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388BF8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C3D70B30(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C3DBAFF8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C3D70BEC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1C3DBAFF8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

uint64_t sub_1C3D70CB8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C3D70CE8(a1, a2, a3, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1C3D70CD0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C3D70CE8(a1, a2, a3, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1C3D70CE8(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1C3DBAFF8();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1C3D70E2C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C3DBAFF8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C3D70EE8(uint64_t a1)
{
  return sub_1C3D70A34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1C3D70EFC(void *a1)
{
  return sub_1C3D82E84(0, a1[2], 0, a1);
}

void *sub_1C3D70F10(void *a1)
{
  return sub_1C3D8288C(0, a1[2], 0, a1);
}

uint64_t sub_1C3D70F24(unint64_t a1)
{
  return sub_1C3D82FC8(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C3D70F38(void *a1)
{
  return sub_1C3D8356C(0, a1[2], 0, a1);
}

void sub_1C3D70F4C()
{
}

uint64_t sub_1C3D70F60(void *a1)
{
  return sub_1C3C9DF3C(0, a1[2], 0, a1);
}

uint64_t sub_1C3D70F74(void *a1)
{
  return sub_1C3C9E4B4(0, a1[2], 0, a1);
}

uint64_t sub_1C3D70F88(void *a1)
{
  return sub_1C3C9F0E0(0, a1[2], 0, a1);
}

uint64_t sub_1C3D70F9C(uint64_t a1)
{
  return sub_1C3C9D934(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C3D70FB0(uint64_t a1)
{
  return sub_1C3C9E4D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C3D70FC4(uint64_t a1)
{
  uint64_t result = sub_1C3DB8108();
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    if (v3 == sub_1C3DB8108()) {
      return 0;
    }
    else {
      return v3;
    }
  }
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v7 = *(v6 - 1);
    uint64_t v8 = *v6;
    if (v5 < 1)
    {
      uint64_t v3 = *(v6 - 1);
      uint64_t v5 = *v6;
      goto LABEL_4;
    }
    if (__OFADD__(v3, v5)) {
      break;
    }
    BOOL v9 = __OFADD__(v7, v8);
    uint64_t v10 = v7 + v8;
    if (v9) {
      goto LABEL_19;
    }
    if (v3 + v5 > v10) {
      uint64_t v10 = v3 + v5;
    }
    if (v3 >= v7) {
      uint64_t v3 = *(v6 - 1);
    }
    uint64_t v5 = v10 - v3;
    if (__OFSUB__(v10, v3))
    {
      __break(1u);
      goto LABEL_15;
    }
LABEL_4:
    v6 += 2;
    if (!--v4) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void *sub_1C3D7107C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t ActivityEventParticipant.isCurrentUser(resolver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)v7(ObjectType, a2);
  if (v8
    && (BOOL v9 = v8, v10 = objc_msgSend(v8, sel_cloudAccount), v9, v10))
  {
    id v11 = objc_msgSend(v10, sel_userRecordName);

    uint64_t v12 = sub_1C3DB9C38();
    uint64_t v14 = v13;

    if (v5 == v12 && v4 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = sub_1C3DBB3B8();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  swift_bridgeObjectRelease();
  return v16 & 1;
}

void ActivityEventParticipant.shortName(resolver:)(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v26 = v2[3];
  uint64_t ObjectType = swift_getObjectType();
  BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  swift_bridgeObjectRetain();
  id v10 = (void *)v9(ObjectType, a1);
  if (v10
    && (id v11 = v10, v12 = objc_msgSend(v10, sel_cloudAccount), v11, v12))
  {
    id v13 = objc_msgSend(v12, sel_userRecordName);

    uint64_t v14 = sub_1C3DB9C38();
    uint64_t v16 = v15;

    if (v6 == v14 && v5 == v16)
    {
      swift_bridgeObjectRelease_n();
LABEL_15:
      *a2 = 0;
      a2[1] = 0;
      return;
    }
    char v18 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = v6;
  uint64_t v28 = v5;
  uint64_t v31 = 7105633;
  unint64_t v32 = 0xE300000000000000;
  sub_1C3C2A4A4();
  if (sub_1C3DBAA18())
  {
    uint64_t v27 = v6;
    uint64_t v28 = v5;
    uint64_t v29 = v7;
    uint64_t v30 = v26;
    uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a1 + 48))(&v27, ObjectType, a1);
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = objc_msgSend(v19, sel_ic_activityStreamDisplayName);

      uint64_t v22 = sub_1C3DB9C38();
      uint64_t v24 = v23;

      *a2 = v22;
      a2[1] = v24;
      return;
    }
    long long v25 = xmmword_1C3DDD960;
  }
  else
  {
    long long v25 = xmmword_1C3DDD970;
  }
  *(_OWORD *)a2 = v25;
}

uint64_t ActivityEventParticipant.Names.name.getter()
{
  if ((unint64_t)v0[1] < 3) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ActivityEventParticipant.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C3DBB3B8();
  }
}

BOOL ActivityEventParticipant.isAllMention.getter()
{
  return sub_1C3DBAA18() == 0;
}

NotesShared::ActivityEventParticipant __swiftcall ActivityEventParticipant.init(recordName:mentionRecordName:)(Swift::String recordName, Swift::String_optional mentionRecordName)
{
  unint64_t object = mentionRecordName.value._object;
  uint64_t countAndFlagsBits = mentionRecordName.value._countAndFlagsBits;
  uint64_t v5 = recordName._object;
  uint64_t v6 = recordName._countAndFlagsBits;
  uint64_t v7 = v2;
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v12 = swift_bridgeObjectRelease();
  *uint64_t v7 = v6;
  v7[1] = (uint64_t)v5;
  id v7[2] = countAndFlagsBits;
  v7[3] = (uint64_t)object;
  result.mentionRecordName.value._unint64_t object = v15;
  result.mentionRecordName.value._uint64_t countAndFlagsBits = v14;
  result.recordName._unint64_t object = v13;
  result.recordName._uint64_t countAndFlagsBits = v12;
  return result;
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(cloudSyncingObject:)(ICCloudSyncingObject *cloudSyncingObject)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [(ICCloudSyncingObject *)cloudSyncingObject cloudAccount];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_userRecordName);

    uint64_t v11 = sub_1C3DB9C38();
    unint64_t v13 = v12;

    uint64_t v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0) {
      uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
    }
    if (v14)
    {
      _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
      sub_1C3DB8B28();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

      uint64_t v15 = swift_bridgeObjectRelease();
      *uint64_t v3 = v11;
      v3[1] = v13;
      v3[2] = 0;
      void v3[3] = 0;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB6FC700 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C3DB9048();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB6FC6E0);
  uint64_t v20 = cloudSyncingObject;
  id v21 = sub_1C3DB9028();
  os_log_type_t v22 = sub_1C3DBA698();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    id v25 = [(ICCloudSyncingObject *)v20 objectID];
    v26[1] = v25;
    sub_1C3DBA9A8();
    *uint64_t v24 = v25;

    _os_log_impl(&dword_1C3A61000, v21, v22, "Object must have an account — returning nil {objectID: %@}", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v24, -1, -1);
    MEMORY[0x1C877E600](v23, -1, -1);
  }
  else
  {
  }
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
LABEL_13:
  result.value.mentionRecordName.value._unint64_t object = v18;
  result.value.mentionRecordName.value._uint64_t countAndFlagsBits = v17;
  result.value.recordName._unint64_t object = v16;
  result.value.recordName._uint64_t countAndFlagsBits = v15;
  return result;
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(participant:)(CKShareParticipant participant)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [(objc_class *)participant.super.isa userIdentity];
  id v9 = objc_msgSend(v8, sel_userRecordID);

  if (!v9)
  {
LABEL_12:
    if (qword_1EB6FC700 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C3DB9048();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB6FC6E0);
    uint64_t v23 = participant.super.isa;
    uint64_t v24 = sub_1C3DB9028();
    os_log_type_t v25 = sub_1C3DBA698();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v35 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v28 = sub_1C3DBA778();
      uint64_t v34 = sub_1C3C516D0(v28, v29, &v35);
      sub_1C3DBA9A8();

      swift_bridgeObjectRelease();
      uint64_t v30 = "Participant must have a user ID — returning nil {participantID: %s}";
LABEL_21:
      _os_log_impl(&dword_1C3A61000, v24, v25, v30, v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v27, -1, -1);
      MEMORY[0x1C877E600](v26, -1, -1);

LABEL_23:
      *(_OWORD *)uint64_t v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      goto LABEL_24;
    }
LABEL_22:

    goto LABEL_23;
  }
  id v10 = objc_msgSend(v9, sel_recordName);

  uint64_t v11 = sub_1C3DB9C38();
  unint64_t v13 = v12;

  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v11 == sub_1C3DB9C38() && v13 == v15)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_1EB6FC700 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C3DB9048();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EB6FC6E0);
    uint64_t v23 = participant.super.isa;
    uint64_t v24 = sub_1C3DB9028();
    os_log_type_t v25 = sub_1C3DBA698();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v35 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v32 = sub_1C3DBA778();
      uint64_t v34 = sub_1C3C516D0(v32, v33, &v35);
      sub_1C3DBA9A8();

      swift_bridgeObjectRelease();
      uint64_t v30 = "Participant must not have the default current user ID — returning nil {participantID: %s}";
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  char v17 = sub_1C3DBB3B8();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_17;
  }
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  uint64_t v18 = swift_bridgeObjectRelease();
  *(void *)uint64_t v3 = v11;
  *(void *)(v3 + 8) = v13;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
LABEL_24:
  result.value.mentionRecordName.value._unint64_t object = v21;
  result.value.mentionRecordName.value._uint64_t countAndFlagsBits = v20;
  result.value.recordName._unint64_t object = v19;
  result.value.recordName._uint64_t countAndFlagsBits = v18;
  return result;
}

uint64_t sub_1C3D71CC4()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EB6FC6E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC6E0);
  if (qword_1EB6FC718 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC520);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t ActivityEventParticipant.recordName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventParticipant.recordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

void (*ActivityEventParticipant.recordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventParticipant.mentionRecordName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityEventParticipant.mentionRecordName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

void (*ActivityEventParticipant.mentionRecordName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ActivityEventParticipant.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D71EF4()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x614E64726F636572;
  }
}

uint64_t sub_1C3D71F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D730A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D71F60(uint64_t a1)
{
  unint64_t v2 = sub_1C3D72B54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D71F9C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D72B54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityEventParticipant.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388C00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D72B54();
  sub_1C3DBB6D8();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_1C3DBB1A8();
  if (!v8)
  {
    char v11 = 1;
    sub_1C3DBB178();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ActivityEventParticipant.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t ActivityEventParticipant.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388C10);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
  sub_1C3DB8B28();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D72B54();
  sub_1C3DBB6B8();
  if (!v2)
  {
    char v23 = 0;
    uint64_t v12 = sub_1C3DBB0C8();
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v22 = 1;
    uint64_t v16 = sub_1C3DBB078();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v21;
    *id v21 = v12;
    v19[1] = v14;
    void v19[2] = v16;
    void v19[3] = v18;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D72468@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ActivityEventParticipant.init(from:)(a1, a2);
}

uint64_t sub_1C3D72480(void *a1)
{
  return ActivityEventParticipant.encode(to:)(a1);
}

NotesShared::ActivityEventParticipant_optional __swiftcall ActivityEventParticipant.init(mentionAttachment:)(ICInlineAttachment *mentionAttachment)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([(ICInlineAttachment *)mentionAttachment isMentionAttachment])
  {
    uint64_t v8 = [(ICInlineAttachment *)mentionAttachment tokenContentIdentifier];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C3DB9C38();
      uint64_t v12 = v11;

      id v13 = [(ICInlineAttachment *)mentionAttachment identifier];
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_1C3DB9C38();
        uint64_t v17 = v16;

        _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
        sub_1C3DB8B28();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        uint64_t v18 = swift_bridgeObjectRelease();
        *uint64_t v3 = v10;
        v3[1] = v12;
        v3[2] = v15;
        void v3[3] = v17;
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1EB6FC700 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C3DB9048();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB6FC6E0);
  char v23 = mentionAttachment;
  uint64_t v24 = sub_1C3DB9028();
  os_log_type_t v25 = sub_1C3DBA698();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    id v28 = [(ICInlineAttachment *)v23 objectID];
    v29[1] = v28;
    sub_1C3DBA9A8();
    void *v27 = v28;

    _os_log_impl(&dword_1C3A61000, v24, v25, "Inline attachment is not a valid mention — returning nil {objectID: %@}", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v27, -1, -1);
    MEMORY[0x1C877E600](v26, -1, -1);
  }
  else
  {
  }
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
LABEL_12:
  result.value.mentionRecordName.value._unint64_t object = v21;
  result.value.mentionRecordName.value._uint64_t countAndFlagsBits = v20;
  result.value.recordName._unint64_t object = v19;
  result.value.recordName._uint64_t countAndFlagsBits = v18;
  return result;
}

uint64_t ActivityEventParticipant.Names.hash(into:)()
{
  if (*(void *)(v0 + 8) <= 2uLL) {
    return sub_1C3DBB5E8();
  }
  sub_1C3DBB5E8();
  return sub_1C3DB9D08();
}

uint64_t ActivityEventParticipant.Names.hashValue.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1 > 2) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t sub_1C3D728A4()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1 > 2) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t sub_1C3D72934()
{
  if (*(void *)(v0 + 8) <= 2uLL) {
    return sub_1C3DBB5E8();
  }
  sub_1C3DBB5E8();
  return sub_1C3DB9D08();
}

uint64_t sub_1C3D729CC()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1C3DBB5D8();
  sub_1C3DBB5E8();
  if (v1 > 2) {
    sub_1C3DB9D08();
  }
  return sub_1C3DBB608();
}

uint64_t _s11NotesShared24ActivityEventParticipantV5NamesO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      unint64_t v3 = 1;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1C3DBB3B8();
      }
      goto LABEL_12;
    }
LABEL_11:
    char v6 = 0;
LABEL_12:
    sub_1C3C4C7B4(v4, v5);
    sub_1C3C4C7B4(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2) {
    goto LABEL_11;
  }
  char v6 = 1;
  unint64_t v3 = 2;
LABEL_13:
  sub_1C3C4C7A0(v2, v3);
  sub_1C3C4C7A0(v4, v5);
  return v6 & 1;
}

unint64_t sub_1C3D72B54()
{
  unint64_t result = qword_1EA388C08;
  if (!qword_1EA388C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C08);
  }
  return result;
}

unint64_t sub_1C3D72BAC()
{
  unint64_t result = qword_1EB6FC430;
  if (!qword_1EB6FC430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC430);
  }
  return result;
}

unint64_t sub_1C3D72C04()
{
  unint64_t result = qword_1EA388C18;
  if (!qword_1EA388C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C18);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant()
{
  return &type metadata for ActivityEventParticipant;
}

unint64_t destroy for ActivityEventParticipant.Names(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11NotesShared24ActivityEventParticipantV5NamesOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ActivityEventParticipant.Names(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActivityEventParticipant.Names(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventParticipant.Names(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActivityEventParticipant.Names(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant.Names()
{
  return &type metadata for ActivityEventParticipant.Names;
}

unsigned char *storeEnumTagSinglePayload for ActivityEventParticipant.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D72F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventParticipant.CodingKeys()
{
  return &type metadata for ActivityEventParticipant.CodingKeys;
}

unint64_t sub_1C3D72F9C()
{
  unint64_t result = qword_1EA388C20;
  if (!qword_1EA388C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C20);
  }
  return result;
}

unint64_t sub_1C3D72FF4()
{
  unint64_t result = qword_1EA388C28;
  if (!qword_1EA388C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C28);
  }
  return result;
}

unint64_t sub_1C3D7304C()
{
  unint64_t result = qword_1EA388C30;
  if (!qword_1EA388C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C30);
  }
  return result;
}

uint64_t sub_1C3D730A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E64726F636572 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C3DF80F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t Data.init(hexString:)()
{
  uint64_t v0 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_ic_dataFromHexString_, v0);

  uint64_t v2 = sub_1C3DB8958();
  return v2;
}

void static CharacterSet.uriIdentifierAllowed.getter()
{
}

Swift::Bool __swiftcall CharacterSet.contains(_:)(Swift::String a1)
{
  uint64_t v2 = v1;
  unint64_t object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v5 = sub_1C3DB8218();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v9 + v8, &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  swift_bridgeObjectRetain();
  LOBYTE(countAndFlagsBits) = sub_1C3D73508(countAndFlagsBits, (unint64_t)object, (unsigned int (*)(uint64_t))sub_1C3D73420);
  swift_release();
  swift_bridgeObjectRelease();
  return countAndFlagsBits & 1;
}

uint64_t sub_1C3D73390()
{
  uint64_t v1 = sub_1C3DB8218();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C3D73420()
{
  return sub_1C3DB81F8() & 1;
}

void static CharacterSet.hashtagAllowed.getter()
{
}

void static CharacterSet.hashtagTokenizing.getter()
{
}

void sub_1C3D734A0(SEL *a1)
{
  id v1 = [self *a1];
  sub_1C3DB81E8();
}

uint64_t sub_1C3D73508(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 1;
  }
  uint64_t v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = sub_1C3DBAC58();
      uint64_t v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0)
      {
        uint64_t v9 = (void *)v15;
        if ((a1 & 0x1000000000000000) == 0) {
          uint64_t v9 = (void *)sub_1C3DBADD8();
        }
        uint64_t v10 = *((unsigned __int8 *)v9 + i);
        if (*((char *)v9 + i) < 0)
        {
          switch(__clz(v10 ^ 0xFF))
          {
            case 0x1Au:
              goto LABEL_20;
            case 0x1Bu:
              goto LABEL_22;
            case 0x1Cu:
              goto LABEL_24;
            default:
              break;
          }
        }
LABEL_14:
        uint64_t v12 = 1;
        goto LABEL_15;
      }
      v16[0] = a1;
      v16[1] = v17;
      uint64_t v10 = *((unsigned __int8 *)v16 + i);
      if ((*((char *)v16 + i) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      switch(__clz(v10 ^ 0xFF))
      {
        case 0x1Au:
          uint64_t v9 = v16;
LABEL_20:
          uint64_t v10 = *((unsigned char *)v9 + i + 1) & 0x3F | ((v10 & 0x1F) << 6);
          uint64_t v12 = 2;
          break;
        case 0x1Bu:
          uint64_t v9 = v16;
LABEL_22:
          uint64_t v10 = ((v10 & 0xF) << 12) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 6) | *((unsigned char *)v9 + i + 2) & 0x3F;
          uint64_t v12 = 3;
          break;
        case 0x1Cu:
          uint64_t v9 = v16;
LABEL_24:
          uint64_t v10 = ((v10 & 0xF) << 18) | ((*((unsigned char *)v9 + i + 1) & 0x3F) << 12) | ((*((unsigned char *)v9 + i + 2) & 0x3F) << 6) | *((unsigned char *)v9 + i + 3) & 0x3F;
          uint64_t v12 = 4;
          break;
        default:
          goto LABEL_14;
      }
    }
LABEL_15:
    uint64_t v13 = (v3 == 0) & a3(v10);
    if (v13 != 1) {
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FallbackActivityEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FallbackActivityEvent.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

void (*FallbackActivityEvent.timestamp.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FallbackActivityEvent()
{
  uint64_t result = qword_1EB6FBB38;
  if (!qword_1EB6FBB38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FallbackActivityEvent.object.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v4;
  return result;
}

void (*FallbackActivityEvent.object.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.participant.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 24));
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FallbackActivityEvent.participant.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for FallbackActivityEvent() + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

void (*FallbackActivityEvent.participant.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.minimumSupportedNotesVersion.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 28));
}

uint64_t FallbackActivityEvent.minimumSupportedNotesVersion.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for FallbackActivityEvent();
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (*FallbackActivityEvent.minimumSupportedNotesVersion.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.typeName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FallbackActivityEvent.typeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FallbackActivityEvent() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*FallbackActivityEvent.typeName.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t FallbackActivityEvent.localizedFallbackTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FallbackActivityEvent() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FallbackActivityEvent.localizedFallbackTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FallbackActivityEvent() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*FallbackActivityEvent.localizedFallbackTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

__n128 FallbackActivityEvent.init(timestamp:object:participant:minimumSupportedNotesVersion:typeName:localizedFallbackTitle:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v12 = *a2;
  uint64_t v14 = *((void *)a2 + 1);
  uint64_t v13 = *((void *)a2 + 2);
  __n128 v25 = *a3;
  unint64_t v15 = a3[1].n128_u64[0];
  unint64_t v16 = a3[1].n128_u64[1];
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v17 = (int *)type metadata accessor for FallbackActivityEvent();
  uint64_t v18 = v17[7];
  *(void *)(a9 + v18) = objc_msgSend(self, sel_currentNotesVersion);
  uint64_t v19 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(a9, a1, v19);
  uint64_t v20 = a9 + v17[5];
  *(unsigned char *)uint64_t v20 = v12;
  *(void *)(v20 + 8) = v14;
  *(void *)(v20 + 16) = v13;
  id v21 = (__n128 *)(a9 + v17[6]);
  __n128 result = v25;
  *id v21 = v25;
  v21[1].n128_u64[0] = v15;
  v21[1].n128_u64[1] = v16;
  *(void *)(a9 + v18) = a4;
  char v23 = (void *)(a9 + v17[8]);
  *char v23 = a5;
  v23[1] = a6;
  uint64_t v24 = (void *)(a9 + v17[9]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  return result;
}

unint64_t sub_1C3D73DD4(char a1)
{
  unint64_t result = 0x6D617473656D6974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7463656A626FLL;
      break;
    case 2:
      unint64_t result = 0x7069636974726170;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x656D614E65707974;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C3D73EB4()
{
  return sub_1C3D73DD4(*v0);
}

uint64_t sub_1C3D73EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D75AB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C3D73EE4(uint64_t a1)
{
  unint64_t v2 = sub_1C3D74E54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D73F20(uint64_t a1)
{
  unint64_t v2 = sub_1C3D74E54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FallbackActivityEvent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D74E54();
  sub_1C3DBB6D8();
  LOBYTE(v18) = 0;
  sub_1C3DB8AF8();
  sub_1C3D74EA8(&qword_1EA386488, MEMORY[0x1E4F27928]);
  sub_1C3DBB1E8();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for FallbackActivityEvent();
    uint64_t v10 = (char *)(v3 + v9[5]);
    char v11 = *v10;
    uint64_t v13 = *((void *)v10 + 1);
    uint64_t v12 = *((void *)v10 + 2);
    LOBYTE(v18) = v11;
    uint64_t v19 = v13;
    *(void *)&long long v20 = v12;
    char v21 = 1;
    sub_1C3C641B0();
    sub_1C3DBB1E8();
    uint64_t v14 = (uint64_t *)(v3 + v9[6]);
    uint64_t v15 = v14[1];
    uint64_t v18 = *v14;
    uint64_t v19 = v15;
    long long v20 = *((_OWORD *)v14 + 1);
    char v21 = 2;
    sub_1C3C64204();
    sub_1C3DBB1E8();
    uint64_t v18 = *(void *)(v3 + v9[7]);
    char v21 = 3;
    type metadata accessor for NotesVersion(0);
    sub_1C3D74EA8(&qword_1EA388C48, type metadata accessor for NotesVersion);
    sub_1C3DBB1E8();
    LOBYTE(v18) = 4;
    sub_1C3DBB1A8();
    LOBYTE(v18) = 5;
    sub_1C3DBB1A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FallbackActivityEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388C50);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = type metadata accessor for FallbackActivityEvent();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v41 = (int *)v7;
  uint64_t v10 = *(int *)(v7 + 28);
  char v11 = v9;
  *(void *)&v9[v10] = objc_msgSend(self, sel_currentNotesVersion);
  uint64_t v12 = a1[3];
  unint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C3D74E54();
  uint64_t v13 = v43;
  sub_1C3DBB6B8();
  if (v13)
  {
    uint64_t v17 = v42;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v3);
  }
  else
  {
    uint64_t v43 = v10;
    uint64_t v14 = v38;
    LOBYTE(v44) = 0;
    sub_1C3D74EA8(&qword_1EA3864B0, MEMORY[0x1E4F27928]);
    uint64_t v15 = v39;
    sub_1C3DBB108();
    uint64_t v16 = v3;
    uint64_t v18 = v15;
    uint64_t v19 = (uint64_t)v11;
    (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v11, v5, v16);
    char v47 = 1;
    sub_1C3C64258();
    uint64_t v20 = v18;
    sub_1C3DBB108();
    uint64_t v21 = v45;
    uint64_t v22 = v46;
    char v23 = v41;
    uint64_t v24 = v19 + v41[5];
    *(unsigned char *)uint64_t v24 = v44;
    *(void *)(v24 + 8) = v21;
    *(void *)(v24 + 16) = v22;
    char v47 = 2;
    sub_1C3C642AC();
    sub_1C3DBB108();
    uint64_t v25 = v45;
    uint64_t v26 = v19 + v23[6];
    *(void *)uint64_t v26 = v44;
    *(void *)(v26 + 8) = v25;
    *(_OWORD *)(v26 + 16) = v46;
    type metadata accessor for NotesVersion(0);
    char v47 = 3;
    sub_1C3D74EA8((unint64_t *)&qword_1EA388AC0, type metadata accessor for NotesVersion);
    sub_1C3DBB108();
    *(void *)(v19 + v43) = v44;
    LOBYTE(v44) = 4;
    uint64_t v27 = sub_1C3DBB0C8();
    id v28 = (uint64_t *)(v19 + v23[8]);
    *id v28 = v27;
    v28[1] = v29;
    LOBYTE(v44) = 5;
    uint64_t v30 = sub_1C3DBB0C8();
    uint64_t v43 = v31;
    uint64_t v32 = v30;
    (*(void (**)(void, uint64_t))(v14 + 8))(0, v20);
    unint64_t v33 = (uint64_t *)(v19 + v23[9]);
    uint64_t v34 = v43;
    *unint64_t v33 = v32;
    v33[1] = v34;
    sub_1C3D74EF0(v19, v37);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
    return sub_1C3D74FB8(v19, (uint64_t (*)(void))type metadata accessor for FallbackActivityEvent);
  }
}

uint64_t sub_1C3D74854@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FallbackActivityEvent.init(from:)(a1, a2);
}

uint64_t sub_1C3D7486C(void *a1)
{
  return FallbackActivityEvent.encode(to:)(a1);
}

uint64_t FallbackActivityEvent.init(activityEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = (int *)type metadata accessor for FallbackActivityEvent();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v7 + 16);
  uint64_t v40 = v11;
  v10(v9, a1);
  uint64_t v12 = type metadata accessor for PersistedActivityEvent();
  uint64_t v13 = *(int *)(v12 + 24);
  uint64_t v14 = (unsigned __int8 *)(a1 + *(int *)(v12 + 20));
  int v33 = *v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v16 = *((void *)v14 + 2);
  uint64_t v17 = *(void *)(a1 + v13 + 8);
  uint64_t v39 = *(void *)(a1 + v13);
  uint64_t v37 = *(void *)(a1 + v13 + 16);
  uint64_t v34 = *(void *)(a1 + v13 + 24);
  uint64_t v35 = v15;
  swift_bridgeObjectRetain();
  uint64_t v36 = v16;
  swift_bridgeObjectRetain();
  uint64_t v38 = v17;
  swift_bridgeObjectRetain();
  PersistedActivityEvent.Activities.type.getter(&v42);
  unint64_t v18 = 0xE600000000000000;
  unint64_t v19 = 0x657461657263;
  switch(v42)
  {
    case 1:
      unint64_t v18 = 0xE400000000000000;
      unint64_t v19 = 1702260589;
      break;
    case 2:
      unint64_t v18 = 0xE400000000000000;
      unint64_t v19 = 2037411683;
      break;
    case 3:
      unint64_t v19 = 0x656D616E6572;
      break;
    case 4:
      unint64_t v19 = 0x6574656C6564;
      break;
    case 5:
      unint64_t v18 = 0xEE00746E61706963;
      unint64_t v19 = 0x6974726150646461;
      break;
    case 6:
      unint64_t v18 = 0x80000001C3DF1CF0;
      unint64_t v19 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v19 = 0xD000000000000013;
      unint64_t v18 = 0x80000001C3DF1D10;
      break;
    case 8:
      unint64_t v18 = 0xE700000000000000;
      unint64_t v19 = 0x6E6F69746E656DLL;
      break;
    default:
      break;
  }
  uint64_t v20 = sub_1C3C61C24();
  uint64_t v22 = v21;
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  uint64_t v23 = v3[7];
  *(void *)&v5[v23] = objc_msgSend(self, sel_currentNotesVersion);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 40))(v5, v9, v40);
  uint64_t v24 = &v5[v3[5]];
  *uint64_t v24 = v33;
  uint64_t v25 = v36;
  *((void *)v24 + 1) = v35;
  *((void *)v24 + 2) = v25;
  uint64_t v26 = &v5[v3[6]];
  uint64_t v27 = v38;
  *uint64_t v26 = v39;
  v26[1] = v27;
  uint64_t v28 = v34;
  void v26[2] = v37;
  _OWORD v26[3] = v28;
  *(void *)&v5[v23] = 6;
  uint64_t v29 = (unint64_t *)&v5[v3[8]];
  *uint64_t v29 = v19;
  v29[1] = v18;
  uint64_t v30 = (uint64_t *)&v5[v3[9]];
  *uint64_t v30 = v20;
  v30[1] = v22;
  sub_1C3D74F54((uint64_t)v5, v41);
  return sub_1C3D74FB8(a1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
}

uint64_t _s11NotesShared21FallbackActivityEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C3DB8AB8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for FallbackActivityEvent();
  uint64_t v5 = v4[5];
  int v6 = *(unsigned __int8 *)(a1 + v5);
  uint64_t v8 = *(void *)(a1 + v5 + 8);
  uint64_t v7 = *(void *)(a1 + v5 + 16);
  uint64_t v9 = a2 + v5;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v6) {
    uint64_t v12 = 1702129518;
  }
  else {
    uint64_t v12 = 0x7265646C6F66;
  }
  if (v6) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE600000000000000;
  }
  if (*(unsigned char *)v9) {
    uint64_t v14 = 1702129518;
  }
  else {
    uint64_t v14 = 0x7265646C6F66;
  }
  if (*(unsigned char *)v9) {
    unint64_t v15 = 0xE400000000000000;
  }
  else {
    unint64_t v15 = 0xE600000000000000;
  }
  if (v12 == v14 && v13 == v15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1C3DBB3B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v8 == v11 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v19 & 1) == 0) {
      return result;
    }
  }
  uint64_t v21 = v4[6];
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1] || (v25 = sub_1C3DBB3B8(), uint64_t result = 0, (v25 & 1) != 0))
  {
    if (*(void *)(a1 + v4[7]) != *(void *)(a2 + v4[7])) {
      return 0;
    }
    uint64_t v26 = v4[8];
    uint64_t v27 = *(void *)(a1 + v26);
    uint64_t v28 = *(void *)(a1 + v26 + 8);
    uint64_t v29 = (void *)(a2 + v26);
    if (v27 == *v29 && v28 == v29[1] || (v30 = sub_1C3DBB3B8(), uint64_t result = 0, (v30 & 1) != 0))
    {
      uint64_t v31 = v4[9];
      uint64_t v32 = *(void *)(a1 + v31);
      uint64_t v33 = *(void *)(a1 + v31 + 8);
      uint64_t v34 = (void *)(a2 + v31);
      if (v32 == *v34 && v33 == v34[1])
      {
        return 1;
      }
      else
      {
        return sub_1C3DBB3B8();
      }
    }
  }
  return result;
}

unint64_t sub_1C3D74E54()
{
  unint64_t result = qword_1EA388C40;
  if (!qword_1EA388C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C40);
  }
  return result;
}

uint64_t sub_1C3D74EA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3D74EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FallbackActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D74F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FallbackActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D74FB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FallbackActivityEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    unint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    unint64_t v18 = (uint64_t *)((char *)a1 + v17);
    char v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FallbackActivityEvent(uint64_t a1)
{
  uint64_t v2 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v17 = (void *)(a1 + v16);
  unint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[2] = *(void *)(v12 + 16);
  v11[3] = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  unint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (_OWORD *)(a1 + v8);
  uint64_t v12 = (_OWORD *)(a2 + v8);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for FallbackActivityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *long long v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  v13[2] = *(void *)(v14 + 16);
  v13[3] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  unint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FallbackActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C3D75654);
}

uint64_t sub_1C3D75654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FallbackActivityEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C3D7572C);
}

uint64_t sub_1C3D7572C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C3D757EC()
{
  uint64_t result = sub_1C3DB8AF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FallbackActivityEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3D75970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FallbackActivityEvent.CodingKeys()
{
  return &type metadata for FallbackActivityEvent.CodingKeys;
}

unint64_t sub_1C3D759AC()
{
  unint64_t result = qword_1EA388C58;
  if (!qword_1EA388C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C58);
  }
  return result;
}

unint64_t sub_1C3D75A04()
{
  unint64_t result = qword_1EA388C60;
  if (!qword_1EA388C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C60);
  }
  return result;
}

unint64_t sub_1C3D75A5C()
{
  unint64_t result = qword_1EA388C68;
  if (!qword_1EA388C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388C68);
  }
  return result;
}

uint64_t sub_1C3D75AB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463656A626FLL && a2 == 0xE600000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C3DF8110 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D614E65707974 && a2 == 0xE800000000000000 || (sub_1C3DBB3B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C3DF8130)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void *sub_1C3D75D48(void *(*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return 0;
  }
  v7[0] = a3;
  v7[1] = a4;
  unint64_t result = a1(&v8, v7);
  if (!v5) {
    return (void *)v8;
  }
  return result;
}

void *StringProtocol.replacing(pattern:in:options:matchingOptions:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, char *a11)
{
  uint64_t v43 = a7;
  int v44 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v47 = *((void *)a10 - 1);
  uint64_t v16 = MEMORY[0x1F4188790](a1);
  unint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v38 - v19;
  objc_allocWithZone((Class)type metadata accessor for CustomReplacementRegularExpression());
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = sub_1C3D76DB4(a1, a2, a8, a9, a6);
  uint64_t v22 = swift_release();
  if (!v11)
  {
    uint64_t v38 = v18;
    MEMORY[0x1F4188790](v22);
    *(&v38 - 4) = a10;
    *(&v38 - 3) = a11;
    uint64_t v25 = v42;
    *(&v38 - 2) = v42;
    char v26 = v44;
    id v39 = v21;
    if (v44)
    {
      uint64_t v41 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = v47;
    }
    else
    {
      uint64_t v27 = v25;
      v45[0] = v24;
      v45[1] = v23;
      sub_1C3D77018((uint64_t)v45, v46);
      uint64_t v28 = v46[0];
      uint64_t v41 = v46[1];
      uint64_t v25 = v27;
      uint64_t v29 = v47;
      char v26 = v44;
    }
    char v30 = v26 & 1;
    uint64_t v31 = *(void (**)(char *))(v29 + 16);
    uint64_t v32 = v25;
    v31(v20);
    if (v30)
    {
      uint64_t v41 = sub_1C3DBA538();
      uint64_t v28 = 0;
    }
    (*(void (**)(char *, char *))(v47 + 8))(v20, a10);
    ((void (*)(char *, char *, char *))v31)(v38, v32, a10);
    sub_1C3DB9E78();
    uint64_t v33 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    uint64_t v34 = (void *)sub_1C3DB9BF8();
    id v35 = v39;
    id v36 = objc_msgSend(v39, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v33, v43, v28, v41, v34);

    uint64_t v21 = (void *)sub_1C3DB9C38();
  }
  return v21;
}

uint64_t type metadata accessor for CustomReplacementRegularExpression()
{
  return self;
}

uint64_t StringProtocol.replacing(pattern:in:withTemplate:options:matchingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v46 = a6;
  uint64_t v47 = a7;
  int v45 = a5;
  uint64_t v44 = a4;
  uint64_t v16 = *(void *)(a10 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](a1);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v39 - v20;
  id v22 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  swift_bridgeObjectRetain();
  uint64_t v23 = a8;
  uint64_t v24 = (uint64_t)v22;
  id v25 = sub_1C3D76A9C(a1, a2, v23);
  if (!v12)
  {
    uint64_t v40 = v21;
    uint64_t v26 = v16;
    uint64_t v41 = a9;
    id v42 = v25;
    MEMORY[0x1F4188790](v25);
    *(&v39 - 4) = a10;
    *(&v39 - 3) = a11;
    *(&v39 - 2) = v50;
    char v29 = v45;
    if (v45)
    {
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      char v30 = v19;
    }
    else
    {
      v48[0] = v28;
      v48[1] = v27;
      sub_1C3D76ED4((uint64_t)v48, v49);
      char v30 = v19;
      uint64_t v43 = v49[0];
      uint64_t v44 = v49[1];
    }
    uint64_t v31 = v40;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v32(v40, v50, a10);
    if (v29)
    {
      uint64_t v33 = sub_1C3DBA538();
      uint64_t v43 = 0;
      uint64_t v44 = v33;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, a10);
    v32(v30, v50, a10);
    sub_1C3DB9E78();
    uint64_t v34 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
    id v35 = (void *)sub_1C3DB9BF8();
    id v36 = v42;
    id v37 = objc_msgSend(v42, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v34, v41, v43, v44, v35);

    uint64_t v24 = sub_1C3DB9C38();
  }
  return v24;
}

uint64_t sub_1C3D7640C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if ((uint64_t)objc_msgSend(a1, sel_numberOfRanges) >= 1)
  {
    objc_msgSend(a1, sel_range);
    uint64_t v8 = sub_1C3DBA608();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = v8;
      uint64_t v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)objc_msgSend(a1, sel_numberOfRanges);
      if (v13 >= 1)
      {
        uint64_t v14 = (char *)v13;
        id v15 = a1;
        uint64_t v16 = sub_1C3D76B78((char *)1, v14, v15);

        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C3D76C98((uint64_t)v16);
        swift_bridgeObjectRelease();

        uint64_t result = swift_bridgeObjectRelease_n();
        *a4 = a2;
        a4[1] = a3;
        a4[2] = v11;
        a4[3] = v12;
        a4[4] = v17;
        return result;
      }
      __break(1u);
    }
  }
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t String.Match.string.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t String.Match.match.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t String.Match.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t String.removingCharacters(notContainedIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C3DB8218();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = a2;
  v12[1] = a3;
  sub_1C3DB8208();
  sub_1C3C2A4A4();
  uint64_t v9 = sub_1C3DBA9C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12[0] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
  uint64_t v10 = sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t String.removingCharacters(containedIn:)()
{
  sub_1C3C2A4A4();
  sub_1C3DBA9C8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
  sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
  uint64_t v0 = sub_1C3DB9B88();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C3D7696C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v7 = *(_OWORD *)MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387DB0);
  sub_1C3C4BDB4((unint64_t *)&qword_1EA387DB8, &qword_1EA387DB0);
  uint64_t result = sub_1C3DBA928();
  *a2 = result;
  a2[1] = v6;
  return result;
}

id sub_1C3D76A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1C3DB8798();

    swift_willThrow();
  }
  return v6;
}

char *sub_1C3D76B78(char *result, char *a2, void *a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return (char *)v4;
  }
  id v7 = result;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t result = (char *)sub_1C3C9D3E4(0, v3 & ~(v3 >> 63), 0);
  if ((uint64_t)a2 >= (uint64_t)v7 && (v3 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = v14;
    while (a2 != v7)
    {
      uint64_t result = (char *)objc_msgSend(a3, sel_rangeAtIndex_, v7);
      id v8 = result;
      uint64_t v10 = v9;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        uint64_t result = (char *)sub_1C3C9D3E4(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      if (a2 == ++v7) {
        return (char *)v4;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

void *sub_1C3D76C98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = sub_1C3DBA608();
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = v5;
      uint64_t v9 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C3D8367C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v11 = v3[2];
      unint64_t v10 = v3[3];
      if (v11 >= v10 >> 1) {
        uint64_t v3 = sub_1C3D8367C((void *)(v10 > 1), v11 + 1, 1, v3);
      }
      v3[2] = v11 + 1;
      uint64_t v4 = &v3[2 * v11];
      v4[4] = v8;
      v4[5] = v9;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1C3D76DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v10 = &v5[OBJC_IVAR____TtC11NotesSharedP33_452BF3924CAE69326F83BAE5FEEBFB4234CustomReplacementRegularExpression_replaceBlock];
  *(void *)unint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  swift_retain();
  unint64_t v11 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  v16.super_class = ObjectType;
  v17[0] = 0;
  v16.receiver = v5;
  id v12 = objc_msgSendSuper2(&v16, sel_initWithPattern_options_error_, v11, a5, v17);

  if (v12)
  {
    id v13 = v17[0];
  }
  else
  {
    id v14 = v17[0];
    sub_1C3DB8798();

    swift_willThrow();
  }
  return v12;
}

uint64_t sub_1C3D76ED4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3D7696C(a1, a2);
}

uint64_t _s5MatchVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s5MatchVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5MatchVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for String.Match()
{
  return &type metadata for String.Match;
}

uint64_t sub_1C3D77018@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3D76ED4(a1, a2);
}

uint64_t sub_1C3D77030(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAAE8();
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
    sub_1C3C4C8F0();
    uint64_t result = sub_1C3DBA478();
    uint64_t v5 = v26[1];
    uint64_t v24 = v26[2];
    uint64_t v8 = v26[3];
    int64_t v9 = v26[4];
    unint64_t v10 = v26[5];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v24 = a3 + 56;
    uint64_t v12 = ~v11;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v10 = v14 & *(void *)(a3 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = v12;
    int64_t v9 = 0;
  }
  int64_t v23 = (unint64_t)(v8 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v15 = sub_1C3DBAB78();
  if (!v15) {
    goto LABEL_35;
  }
  uint64_t v25 = v15;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v16 = (id)v26[0];
  swift_unknownObjectRelease();
  int64_t v17 = v9;
  uint64_t v18 = v10;
  if (!v16) {
    goto LABEL_35;
  }
  while (1)
  {
    v26[0] = v16;
    a1(&v25, v26);

    if (v4)
    {
      sub_1C3C4C744();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C3D7938C(v25, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
    int64_t v9 = v17;
    unint64_t v10 = v18;
    if (v5 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v10) {
      break;
    }
    uint64_t v18 = (v10 - 1) & v10;
    unint64_t v19 = __clz(__rbit64(v10)) | (v9 << 6);
    int64_t v17 = v9;
LABEL_24:
    id v16 = *(id *)(*(void *)(v5 + 48) + 8 * v19);
    if (!v16) {
      goto LABEL_35;
    }
  }
  int64_t v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return result;
  }
  if (v17 >= v23) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v17);
  if (v20)
  {
LABEL_23:
    uint64_t v18 = (v20 - 1) & v20;
    unint64_t v19 = __clz(__rbit64(v20)) + (v17 << 6);
    goto LABEL_24;
  }
  int64_t v21 = v9 + 2;
  if (v9 + 2 >= v23) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v21 = v9 + 3;
  if (v9 + 3 >= v23) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20) {
    goto LABEL_22;
  }
  int64_t v21 = v9 + 4;
  if (v9 + 4 >= v23) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
LABEL_22:
    int64_t v17 = v21;
    goto LABEL_23;
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v23) {
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v17);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v22 = v9 + 6;
  while (v23 != v22)
  {
    unint64_t v20 = *(void *)(v24 + 8 * v22++);
    if (v20)
    {
      int64_t v17 = v22 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1C3C4C744();
  return v27;
}

uint64_t sub_1C3D773AC(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C3DBAFB8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C877C220](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v7 = ICCloudSyncingObject.activityEvents.getter();

      sub_1C3D78EA4(v7);
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3D774C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = (uint64_t (*)(long long *))result;
    unint64_t v9 = 0;
    uint64_t v10 = a3 + 32;
    int64_t v23 = (uint64_t (*)(long long *))result;
    uint64_t v24 = a3;
    uint64_t v22 = v6;
    while (v9 < *(void *)(v4 + 16))
    {
      sub_1C3C49A14(v10, (uint64_t)v28);
      uint64_t v5 = a2;
      char v11 = v8(v28);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if (v11)
      {
        sub_1C3C4C684(v28, (uint64_t)v25);
        uint64_t v12 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D2D0(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v12 = v29;
        }
        unint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        if (v14 >= v13 >> 1) {
          sub_1C3C9D2D0(v13 > 1, v14 + 1, 1);
        }
        uint64_t v15 = v26;
        uint64_t v16 = v27;
        uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
        MEMORY[0x1F4188790](v17);
        unint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1C3C47F8C(v14, (uint64_t)v19, &v29, v15, v16);
        uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        uint64_t v8 = v23;
        uint64_t v4 = v24;
        uint64_t v6 = v22;
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        uint64_t v5 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1C3D776F4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_1C3D8C300(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1C3D8C368((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_1C3D8C298((uint64_t)v12, v23, type metadata accessor for NoteEditActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C3C9D3A8(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C3C9D3A8(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_1C3D8C298(v23, v15 + v16 + v19 * v13, type metadata accessor for NoteEditActivityEvent);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1C3D8C368((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1C3D7798C(uint64_t a1)
{
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v15[0] = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C3C9D8F8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = *(void *)(type metadata accessor for NoteEditActivityEvent(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v17 = *(void *)(v9 + 72);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15[1] = v4 + 32;
    unint64_t v16 = v11;
    do
    {
      v16(v6, v10, v3);
      uint64_t v18 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C3C9D8F8(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v6, v3);
      v10 += v17;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t ICCloudSyncingObject.sharedRootActivityEvents.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v45 - v9;
  if (!objc_msgSend(v0, sel_isSharedViaICloud)) {
    return MEMORY[0x1E4FBC860];
  }
  if (objc_msgSend(v0, sel_isSharedRootObject)) {
    return MEMORY[0x1E4FBC860];
  }
  id v11 = objc_msgSend(v0, sel_sharedRootObject);
  if (!v11) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = v10;
  uint64_t v51 = v5;
  id v48 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388C90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C3DD5130;
  id v13 = objc_msgSend(v0, sel_identifier);
  if (v13)
  {
    unint64_t v14 = v13;
    uint64_t v15 = sub_1C3DB9C38();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v17;
  id v20 = v48;
  id v21 = objc_msgSend(v48, sel_identifier);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_1C3DB9C38();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  *(void *)(inited + 48) = v23;
  *(void *)(inited + 56) = v25;
  id v26 = objc_msgSend(v0, sel_allChildCloudObjects);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
  unint64_t v27 = sub_1C3DBA018();

  uint64_t v28 = sub_1C3CE3098(v27);
  uint64_t v47 = 0;
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1C3D78540((uint64_t)v28);
  swift_bridgeObjectRelease();
  v53[0] = inited;
  sub_1C3D78D1C(v29);
  uint64_t v30 = v53[0];
  uint64_t v31 = ICCloudSyncingObject.persistedActivityEvents.getter();
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    uint64_t v46 = v30;
    v45[1] = v31;
    uint64_t v33 = v31 + 32;
    uint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
    id v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    BOOL v49 = v8;
    do
    {
      sub_1C3C49A14(v33, (uint64_t)v53);
      sub_1C3C49A14((uint64_t)v53, (uint64_t)v52);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      int v37 = swift_dynamicCast();
      (*v34)(v3, v37 ^ 1u, 1, v4);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v53);
      if ((*v35)(v3, 1, v4) == 1)
      {
        sub_1C3C2A448((uint64_t)v3, &qword_1EB6FC428);
      }
      else
      {
        uint64_t v38 = (uint64_t)v8;
        uint64_t v39 = (uint64_t)v50;
        sub_1C3D8C298((uint64_t)v3, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3D8C298(v39, v38, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_1C3D829D0(0, *(void *)(v36 + 16) + 1, 1, v36, &qword_1EA387160, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        }
        unint64_t v41 = *(void *)(v36 + 16);
        unint64_t v40 = *(void *)(v36 + 24);
        if (v41 >= v40 >> 1) {
          uint64_t v36 = sub_1C3D829D0(v40 > 1, v41 + 1, 1, v36, &qword_1EA387160, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        }
        *(void *)(v36 + 16) = v41 + 1;
        uint64_t v42 = v36
            + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))
            + *(void *)(v51 + 72) * v41;
        uint64_t v8 = v49;
        sub_1C3D8C298((uint64_t)v49, v42, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      }
      v33 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    id v20 = v48;
    uint64_t v30 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  uint64_t v43 = sub_1C3D89F04(v36);
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_1C3D8A440(v43, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C3D786C8(v44, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent, (uint64_t)&protocol witness table for PersistedActivityEvent, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);

  swift_bridgeObjectRelease();
  return v18;
}

uint64_t ICCloudSyncingObject.persistedActivityEvents.getter()
{
  swift_getObjectType();
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsActivityEvents)
    && objc_msgSend(v0, sel_isSharedViaICloud))
  {
    if (objc_msgSend(v0, sel_persistedActivityEventsStorage))
    {
      sub_1C3DBAA68();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_1C3CB3BF8((uint64_t)v5, (uint64_t)v6, qword_1EB6FB1D8);
    if (v7)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC440);
      if (swift_dynamicCast())
      {
        uint64_t v1 = v4;
LABEL_12:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
        uint64_t v2 = (void *)sub_1C3DB9FF8();
        objc_msgSend(v0, sel_setPersistedActivityEventsStorage_, v2);

        return v1;
      }
    }
    else
    {
      sub_1C3C2A448((uint64_t)v6, qword_1EB6FB1D8);
    }
    uint64_t v1 = sub_1C3D7B5B8();
    goto LABEL_12;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3D7829C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1C3C9D1E0(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) != 0) {
      MEMORY[0x1C877C220](0, a1);
    }
    else {
      id v4 = *(id *)(a1 + 32);
    }
    uint64_t result = sub_1C3DB9C18();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D783FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C3C9D280(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DD0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D280(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C3C9D280(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3D78540(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C3C9D32C(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F00);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D32C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C3C9D32C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3D78680(uint64_t a1)
{
  return sub_1C3D786C8(a1, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent, (uint64_t)&protocol witness table for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1C3D786C8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  id v21 = a5;
  uint64_t v8 = a2(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C3C9D2D0(0, v12, 0);
    uint64_t v13 = v25;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    do
    {
      sub_1C3D8C300(v14, (uint64_t)v11, a3);
      uint64_t v25 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C3C9D2D0(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v25;
      }
      uint64_t v23 = v8;
      uint64_t v24 = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
      sub_1C3D8C300((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, a3);
      *(void *)(v13 + 16) = v17 + 1;
      sub_1C3C4C684(&v22, v13 + 40 * v17 + 32);
      sub_1C3D8C368((uint64_t)v11, v21);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_1C3D7886C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C3C9D484(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3C9D484(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C3C9D484(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C3C2A5D8(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *ICCloudSyncingObject.activityEvents.getter()
{
  uint64_t v1 = ICCloudSyncingObject.shareActivityEvents.getter();
  uint64_t v2 = sub_1C3D786C8(v1, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent, (uint64_t)&protocol witness table for ShareActivityEvent, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent);
  swift_bridgeObjectRelease();
  uint64_t v3 = ICCloudSyncingObject.persistedActivityEvents.getter();
  sub_1C3D78EA4(v3);
  uint64_t v4 = (void *)v2;
  unint64_t v5 = ICCloudSyncingObject.editActivityEvents.getter();
  uint64_t v6 = sub_1C3D786C8((uint64_t)v5, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent, (uint64_t)&protocol witness table for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
  swift_bridgeObjectRelease();
  sub_1C3D78EA4(v6);
  id v7 = objc_msgSend(v0, sel_allChildCloudObjects);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
  unint64_t v8 = sub_1C3DBA018();

  uint64_t v9 = sub_1C3D773AC(v8);
  swift_bridgeObjectRelease();
  sub_1C3D78EA4(v9);
  uint64_t KeyPath = swift_getKeyPath();
  int64_t v12 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C3C495F4(&v12, (uint64_t (*)(uint64_t, uint64_t))sub_1C3C3EB68, 0, KeyPath);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v12;
}

uint64_t sub_1C3D78B94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1C3DBAFB8())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1C877C220](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
      char v7 = sub_1C3DBA8E8();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1C3DBA8E8();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1C877C220](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1C3DBA8E8();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C3D78D1C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C3D8277C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F00);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D78E8C(unint64_t a1)
{
  return sub_1C3D79960(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C3D87B30);
}

uint64_t sub_1C3D78EA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C3D82E98(isUniquelyReferenced_nonNull_native, v14, 1, v3, (uint64_t *)&unk_1EA388ED0, &qword_1EB6FC410);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79020(uint64_t a1)
{
  return sub_1C3D7938C(a1, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1C3D79068(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C3D82C50(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D791BC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C3D82E98(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_1EA386EE0, (uint64_t *)&unk_1EA388DC0);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388DC0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79344(uint64_t a1)
{
  return sub_1C3D7938C(a1, (uint64_t *)&unk_1EA388EC0, type metadata accessor for TranscriptViewModelSegment, type metadata accessor for TranscriptViewModelSegment, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1C3D7938C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_1C3D829D0(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79560(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C3D8288C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D796B4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C3D8301C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79800(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C3D8312C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79948(unint64_t a1)
{
  return sub_1C3D79960(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C3D87D64);
}

uint64_t sub_1C3D79960(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1C877C230](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1C3DBA038();
}

uint64_t sub_1C3D79B34(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C3D83290(isUniquelyReferenced_nonNull_native, v15, 1, v3, (uint64_t *)&unk_1EA388E70, (void (*)(void, int64_t, void *, void *))sub_1C3D8B2F4);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870E8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79CC0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1C3D829D0(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_1EB6FC470, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_1C3DB88F8() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D79EA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1C3D83290(isUniquelyReferenced_nonNull_native, v14, 1, v3, &qword_1EB6FBB20, (void (*)(void, int64_t, void *, void *))sub_1C3D8B400);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D7A010(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1C3D8356C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

void *ICCloudSyncingObject.editActivityEvents.getter()
{
  uint64_t v1 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (uint64_t *)((char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v59 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  BOOL v12 = (char *)&v53 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v60 = (char *)&v53 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = sub_1C3DB8AF8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  BOOL v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  int64_t v23 = (char *)&v53 - v22;
  if (!objc_msgSend(v0, sel_isSharedViaICloud)) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v56 = v1;
  uint64_t v58 = v23;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v25 = (void *)v24;
  id v55 = v0;
  id v26 = objc_msgSend(v25, sel_objc_shareTimestamp);
  uint64_t v57 = v18;
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v54 = v3;
    sub_1C3DB8AC8();

    BOOL v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v28(v16, v21, v17);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v29(v16, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      v28(v58, v16, v17);
      uint64_t v18 = v57;
      unint64_t v3 = v54;
      goto LABEL_10;
    }
    uint64_t v18 = v57;
    unint64_t v3 = v54;
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v29(v16, 1, 1, v17);
  }
  sub_1C3DB8998();
  sub_1C3C2A448((uint64_t)v16, &qword_1EB6FB1B8);
LABEL_10:
  id v31 = objc_msgSend(v25, sel_recentUpdatesGenerationDate);
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1C3DB8AC8();

    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
  }
  v29(v9, v33, 1, v17);
  sub_1C3CB3BF8((uint64_t)v9, (uint64_t)v12, &qword_1EB6FB1B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17))
  {
    sub_1C3C2A448((uint64_t)v12, &qword_1EB6FB1B8);
    uint64_t v34 = 1;
    uint64_t v35 = (uint64_t)v60;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v12, v17);
    sub_1C3C2A448((uint64_t)v12, &qword_1EB6FB1B8);
    uint64_t v35 = (uint64_t)v60;
    sub_1C3DB89E8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    uint64_t v34 = 0;
  }
  uint64_t v36 = v55;
  v29((char *)v35, v34, 1, v17);
  uint64_t v37 = (uint64_t)v59;
  v29(v59, 1, 1, v17);
  id v38 = objc_msgSend(v25, sel_mergeableString);
  self;
  uint64_t v39 = swift_dynamicCastObjCClass();
  if (v39)
  {
    unint64_t v40 = (void *)v39;
    *unint64_t v3 = v25;
    swift_storeEnumTagMultiPayload();
    id v41 = v36;
    uint64_t v42 = (void *)_s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v40, (uint64_t)v3, v37, v35);

    sub_1C3D8C368((uint64_t)v3, type metadata accessor for NoteEditActivityEvent.Parents);
  }
  else
  {

    uint64_t v42 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C3C2A448(v37, &qword_1EB6FB1B8);
  id v43 = objc_msgSend(v25, sel_visibleAttachments);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
  sub_1C3C4C8F0();
  uint64_t v44 = sub_1C3DBA438();

  MEMORY[0x1F4188790](v45);
  *(&v53 - 2) = v35;
  uint64_t v46 = sub_1C3D77030((void (*)(uint64_t *__return_ptr, void *))sub_1C3D8A6E0, (uint64_t)(&v53 - 4), v44);
  swift_bridgeObjectRelease();
  uint64_t v61 = v42;
  uint64_t v47 = sub_1C3D7938C(v46, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
  MEMORY[0x1F4188790](v47);
  id v48 = v58;
  *(&v53 - 2) = (uint64_t)v58;
  uint64_t v50 = (void *)sub_1C3D776F4((uint64_t (*)(char *))sub_1C3D8A6FC, (uint64_t)(&v53 - 4), v49);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = v50;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C3D89E04(&v61, (uint64_t (*)(char *, char *))sub_1C3C4C9F0, 0, KeyPath);

  swift_release_n();
  int64_t v30 = v61;
  sub_1C3C2A448(v35, &qword_1EB6FB1B8);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v17);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1C3D7A88C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C3D7A8B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall ICCloudSyncingObject.remove(cloudSyncingObjectActivityEvent:)(ICCloudSyncingObjectActivityEvent cloudSyncingObjectActivityEvent)
{
}

uint64_t sub_1C3D7A900()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EB6FBBE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FBBE0);
  if (qword_1EB6FC718 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC520);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t ICCloudSyncingObject.shareActivityEvents.getter()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CB0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShareActivityEvent();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportsActivityEvents)
    && objc_msgSend(v1, sel_isSharedViaICloud))
  {
    ShareActivityEvent.init(cloudSyncingObject:)(v1, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      sub_1C3D8C298((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CB8);
      unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C3DD3D30;
      sub_1C3D8C298((uint64_t)v8, v9 + v11, (uint64_t (*)(void))type metadata accessor for ShareActivityEvent);
      return v9;
    }
    sub_1C3C2A448((uint64_t)v4, &qword_1EA388CB0);
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t ICCloudSyncingObject.activityEventsPublisher.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CC0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v55 = v0;
  uint64_t v56 = v1;
  MEMORY[0x1F4188790](v0);
  uint64_t v52 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CC8);
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v53 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CD0);
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CD8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C3DBA7D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388CE0);
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v47 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)&v43 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v45 = (char *)&v43 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v44 = (char *)&v43 - v20;
  BOOL v21 = self;
  id v22 = objc_msgSend(v21, sel_defaultCenter);
  sub_1C3DBA7E8();

  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
  sub_1C3D1EDA8(&qword_1EA388CE8, MEMORY[0x1E4F27FC8]);
  sub_1C3DB9518();
  int64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v12, v9);
  id v24 = objc_msgSend(v21, sel_defaultCenter);
  sub_1C3DBA7E8();

  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
  sub_1C3DB9518();
  v23(v12, v9);
  uint64_t v25 = swift_allocObject();
  id v26 = v51;
  *(void *)(v25 + 16) = v51;
  id v27 = v26;
  BOOL v28 = v45;
  uint64_t v29 = v49;
  sub_1C3DB9458();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v29);
  uint64_t v30 = v48;
  id v31 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v32 = v44;
  v31(v46, v44, v13);
  v31(v47, v28, v13);
  sub_1C3C4BDB4(&qword_1EA388CF8, &qword_1EA388CE0);
  uint64_t v33 = v52;
  sub_1C3DB9468();
  *(void *)(swift_allocObject() + 16) = v27;
  sub_1C3C4BDB4(&qword_1EA388D00, &qword_1EA388CC0);
  id v34 = v27;
  uint64_t v35 = v53;
  uint64_t v36 = v55;
  sub_1C3DB9538();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v36);
  sub_1C3C4BDB4(&qword_1EA388D08, &qword_1EA388CC8);
  uint64_t v37 = v54;
  uint64_t v38 = v57;
  sub_1C3DB9528();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v38);
  sub_1C3C4BDB4(&qword_1EA388D10, &qword_1EA388CD0);
  uint64_t v39 = v58;
  uint64_t v40 = sub_1C3DB9508();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v39);
  id v41 = *(void (**)(char *, uint64_t))(v30 + 8);
  v41(v28, v13);
  v41(v32, v13);
  return v40;
}

uint64_t sub_1C3D7B394@<X0>(void *a1@<X8>)
{
  return sub_1C3D7B3BC((unint64_t *)&qword_1EA3876C0, a1);
}

uint64_t sub_1C3D7B3A8@<X0>(void *a1@<X8>)
{
  return sub_1C3D7B3BC((unint64_t *)&qword_1EA388CF0, a1);
}

uint64_t sub_1C3D7B3BC@<X0>(unint64_t *a1@<X1>, void *a2@<X8>)
{
  sub_1C3DB8288();
  if (!v5[3])
  {
    uint64_t result = sub_1C3C2A448((uint64_t)v5, qword_1EB6FB1D8);
    goto LABEL_5;
  }
  sub_1C3C4C8B4(0, a1);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_5:
  }
    *a2 = 0;
  return result;
}

void sub_1C3D7B454(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a2;
  id v5 = objc_msgSend(a1, sel_managedObjectContext);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_objectWithID_, v4);

    if (v7)
    {
      self;
      uint64_t v8 = swift_dynamicCastObjCClass();
      if (v8)
      {
        *a3 = v8;
        return;
      }
    }
  }
  *a3 = 0;
}

uint64_t sub_1C3D7B4F4(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EB6FC780);
  if (sub_1C3DBA8E8()) {
    return 1;
  }
  id v5 = objc_msgSend(v3, sel_ancestorCloudObjects);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
  unint64_t v6 = sub_1C3DBA018();

  char v7 = sub_1C3D78B94(a2, v6);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C3D7B5B8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB80);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  if (!(v30 >> 62))
  {
    uint64_t v6 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    swift_bridgeObjectRelease_n();
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v34 = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C3C495F4((void **)&v34, (uint64_t (*)(uint64_t, uint64_t))sub_1C3C4C9F0, 0, KeyPath);
    swift_bridgeObjectRelease();
    swift_release_n();
    return v34;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C3DBAFB8();
  if (!v6) {
    goto LABEL_19;
  }
LABEL_3:
  if (v6 >= 1)
  {
    unint64_t v28 = v30 & 0xC000000000000001;
    uint64_t v7 = type metadata accessor for PersistedActivityEvent();
    uint64_t v8 = 0;
    uint64_t v27 = v7 - 8;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    *(void *)&long long v10 = 136315138;
    long long v25 = v10;
    v24[1] = MEMORY[0x1E4FBC840] + 8;
    uint64_t v29 = v6;
    id v26 = v2;
    do
    {
      id v31 = v9;
      if (v28) {
        id v11 = (id)MEMORY[0x1C877C220](v8, v30);
      }
      else {
        id v11 = *(id *)(v30 + 8 * v8 + 32);
      }
      uint64_t v12 = v11;
      uint64_t v13 = (uint64_t)v5;
      if (qword_1EA3859D8 != -1) {
        swift_once();
      }
      id v14 = objc_msgSend(v12, sel_data);
      uint64_t v15 = sub_1C3DB8958();
      unint64_t v17 = v16;

      sub_1C3D1EDA8(&qword_1EA388D98, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent);
      id v5 = (char *)v13;
      sub_1C3DB8128();
      sub_1C3C58FC8(v15, v17);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v13, 0, 1, v7);
      uint64_t v35 = v7;
      uint64_t v36 = &protocol witness table for PersistedActivityEvent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
      sub_1C3D8C298(v13, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      sub_1C3C4C684(&v34, (uint64_t)&v32);
      uint64_t v9 = v31;
      uint64_t v19 = v29;

      if (*((void *)&v33 + 1))
      {
        sub_1C3C4C684(&v32, (uint64_t)&v34);
        sub_1C3C4C684(&v34, (uint64_t)&v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1C3D82E98(0, v9[2] + 1, 1, v9, (uint64_t *)&unk_1EA388ED0, &qword_1EB6FC410);
        }
        unint64_t v21 = v9[2];
        unint64_t v20 = v9[3];
        if (v21 >= v20 >> 1) {
          uint64_t v9 = sub_1C3D82E98((void *)(v20 > 1), v21 + 1, 1, v9, (uint64_t *)&unk_1EA388ED0, &qword_1EB6FC410);
        }
        void v9[2] = v21 + 1;
        sub_1C3C4C684(&v32, (uint64_t)&v9[5 * v21 + 4]);
      }
      else
      {
        sub_1C3C2A448((uint64_t)&v32, &qword_1EB6FC418);
      }
      ++v8;
    }
    while (v19 != v8);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter()
{
  id v1 = objc_msgSend(v0, sel_activityEventsDocument);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = v1;
  id v4 = objc_msgSend(v1, sel_orderedSet);

  id v5 = objc_msgSend(v4, sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388D18);
  unint64_t v6 = sub_1C3DBA018();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C3DBAFB8();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_4:
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        MEMORY[0x1C877C220](i, v6);
      }
      else {
        swift_unknownObjectRetain();
      }
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C877B4F0]();
        if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C3DBA068();
        }
        sub_1C3DBA0C8();
        sub_1C3DBA038();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t static ICCloudSyncingObject.activityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB80);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ICCloudSyncingObject.persistedActivityEvent(for:)(a1, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for PersistedActivityEvent();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_1C3C2A448((uint64_t)v9, &qword_1EB6FC428);
    static ICCloudSyncingObject.fallbackActivityEvent(for:)(a1, (uint64_t)v6);
    uint64_t v11 = type metadata accessor for FallbackActivityEvent();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11) == 1)
    {
      uint64_t result = sub_1C3C2A448((uint64_t)v6, &qword_1EB6FBB80);
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(void *)(a2 + 32) = 0;
    }
    else
    {
      *(void *)(a2 + 24) = v11;
      *(void *)(a2 + 32) = &protocol witness table for FallbackActivityEvent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
      return sub_1C3D8C298((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FallbackActivityEvent);
    }
  }
  else
  {
    uint64_t v17 = v10;
    uint64_t v18 = &protocol witness table for PersistedActivityEvent;
    uint64_t v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
    sub_1C3D8C298((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    return sub_1C3C4C684(&v16, a2);
  }
  return result;
}

uint64_t ICCloudSyncingObject.persistedActivityEventsPublisher.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D28);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1C3DB87A8();
  swift_release();
  sub_1C3C4BDB4(&qword_1EA388D38, &qword_1EA388D28);
  sub_1C3DB9528();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C3C4BDB4(&qword_1EA388D40, &qword_1EA388D30);
  uint64_t v8 = sub_1C3DB9508();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_1C3D7C2E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_activityEventsData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C3DB8958();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1C3D7C350(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1C3DB8938();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setActivityEventsData_);
}

uint64_t sub_1C3D7C3C8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = sub_1C3DB8AF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(v9, (uint64_t)v8, a2);
  uint64_t result = sub_1C3C2A448((uint64_t)v8, &qword_1EB6FB1B8);
  *a3 = v11;
  return result;
}

uint64_t sub_1C3D7C4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(v9 + 36)) && *(unsigned char *)(a1 + *(int *)(v9 + 36)) != 1)
  {
    swift_bridgeObjectRelease();
    sub_1C3D8C300(a1, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    char v13 = 1;
  }
  else
  {
    char v12 = sub_1C3DBB3B8();
    swift_bridgeObjectRelease();
    sub_1C3D8C300(a1, (uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    if (v12)
    {
      char v13 = 1;
    }
    else
    {
      sub_1C3D1EDA8((unint64_t *)&qword_1EA388D80, MEMORY[0x1E4F27928]);
      char v13 = sub_1C3DB9B98() ^ 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C3D8C368((uint64_t)v11, type metadata accessor for NoteEditActivityEvent);
  return v13 & 1;
}

uint64_t ICCloudSyncingObject.editActivityEventsPublisher.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D48);
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DBA7D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D50);
  uint64_t v21 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D58);
  uint64_t v22 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v15 = objc_msgSend(self, sel_defaultCenter);
    sub_1C3DBA7E8();

    *(void *)(swift_allocObject() + 16) = v1;
    sub_1C3D1EDA8(&qword_1EA388CE8, MEMORY[0x1E4F27FC8]);
    id v16 = v1;
    sub_1C3DB9538();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C3C4BDB4(&qword_1EA388D68, &qword_1EA388D50);
    sub_1C3DB9528();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
    sub_1C3C4BDB4((unint64_t *)&unk_1EA388D70, &qword_1EA388D58);
    uint64_t v17 = sub_1C3DB9508();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v12);
  }
  else
  {
    sub_1C3DB9488();
    sub_1C3C4BDB4(&qword_1EA388D60, &qword_1EA388D48);
    uint64_t v17 = sub_1C3DB9508();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  }
  return v17;
}

uint64_t sub_1C3D7CBD0(uint64_t a1, void *a2)
{
  sub_1C3DB8288();
  if (v11)
  {
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = v9;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C3C2A448((uint64_t)v10, qword_1EB6FB1D8);
  }
  uint64_t v3 = 0;
LABEL_6:
  id v4 = objc_msgSend(a2, sel_objectID);
  uint64_t v5 = v4;
  if (v3)
  {
    if (v4)
    {
      sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CF0);
      id v6 = v3;
      char v7 = sub_1C3DBA8E8();
    }
    else
    {
      char v7 = 0;
      uint64_t v5 = v3;
    }
  }
  else
  {
    if (!v4)
    {
      char v7 = 1;
      return v7 & 1;
    }
    char v7 = 0;
  }

  return v7 & 1;
}

uint64_t ICCloudSyncingObject.sharedRootActivityEventsPublisher.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D48);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D28);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D30);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, sel_isSharedViaICloud)
    && (objc_msgSend(v1, sel_isSharedRootObject) & 1) == 0
    && (id v14 = objc_msgSend(v1, sel_sharedRootObject)) != 0)
  {
    id v15 = v14;
    swift_getKeyPath();
    sub_1C3DB87A8();
    swift_release();
    sub_1C3C4BDB4(&qword_1EA388D38, &qword_1EA388D28);
    sub_1C3DB9528();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1C3C4BDB4(&qword_1EA388D40, &qword_1EA388D30);
    uint64_t v16 = sub_1C3DB9508();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    sub_1C3DB9488();
    sub_1C3C4BDB4(&qword_1EA388D60, &qword_1EA388D48);
    uint64_t v16 = sub_1C3DB9508();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v16;
}

uint64_t ICCloudSyncingObject.shareTimestamp.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v61 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v66 = (char *)&v61 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)&v61 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v61 - v15;
  uint64_t v17 = sub_1C3DB8AF8();
  uint64_t v70 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v65 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v64 = (char *)&v61 - v21;
  MEMORY[0x1F4188790](v20);
  unint64_t v67 = (char *)&v61 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v23 - 8);
  long long v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for PersistedActivityEvent();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v2, sel_isSharedViaICloud))
  {
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    return v35(a1, 1, 1, v17);
  }
  uint64_t v62 = a1;
  uint64_t v63 = v17;
  if ((objc_msgSend(v2, sel_isSharedRootObject) & 1) == 0)
  {
    uint64_t v37 = ICCloudSyncingObject.persistedActivityEvents.getter();
    if (*(void *)(v37 + 16))
    {
      sub_1C3C49A14(v37 + 32, (uint64_t)&v71);
      swift_bridgeObjectRelease();
      if (*((void *)&v72 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
        int v38 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v25, v38 ^ 1u, 1, v26);
        int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
        uint64_t v40 = v63;
        if (v39 != 1)
        {
          sub_1C3D8C298((uint64_t)v25, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          if (PersistedActivityEvent.Activities.isAddActivity.getter())
          {
            id v41 = v62;
            (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v62, v29, v40);
            sub_1C3D8C368((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v41, 0, 1, v40);
          }
          sub_1C3D8C368((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
LABEL_18:
          id v43 = objc_msgSend(v2, sel_serverShareCheckingParent);
          if (v43)
          {
            uint64_t v44 = v43;
            id v45 = objc_msgSend(v43, sel_creationDate);

            if (v45)
            {
              uint64_t v46 = (uint64_t)v68;
              sub_1C3DB8AC8();

              uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
              v47(v46, 0, 1, v40);
            }
            else
            {
              uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
              uint64_t v46 = (uint64_t)v68;
              v47((uint64_t)v68, 1, 1, v40);
            }
            sub_1C3CB3BF8(v46, (uint64_t)v16, &qword_1EB6FB1B8);
            uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
            if (v49(v16, 1, v40) != 1)
            {
              uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
              v51(v67, v16, v40);
              id v52 = objc_msgSend(v2, sel_parentCloudObjectModificationDate);
              if (v52)
              {
                uint64_t v53 = v52;
                uint64_t v54 = v65;
                sub_1C3DB8AC8();

                uint64_t v55 = v66;
                v51(v66, v54, v40);
                v47((uint64_t)v55, 0, 1, v40);
                if (v49(v55, 1, v40) != 1)
                {
                  uint64_t v56 = v64;
                  v51(v64, v55, v40);
                  sub_1C3D1EDA8((unint64_t *)&qword_1EA388D80, MEMORY[0x1E4F27928]);
                  uint64_t v57 = v67;
                  char v58 = sub_1C3DB9B98();
                  uint64_t v59 = *(void (**)(char *, uint64_t))(v70 + 8);
                  v70 += 8;
                  v59(v56, v40);
                  if ((v58 & 1) == 0)
                  {
                    uint64_t v60 = v62;
                    v51(v62, v57, v40);
                    return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v47)(v60, 0, 1, v40);
                  }
                  v59(v57, v40);
                  return sub_1C3D7DC78(v2, v62);
                }
              }
              else
              {
                uint64_t v55 = v66;
                v47((uint64_t)v66, 1, 1, v40);
              }
              (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v40);
              uint64_t v50 = (uint64_t)v55;
LABEL_35:
              sub_1C3C2A448(v50, &qword_1EB6FB1B8);
              return sub_1C3D7DC78(v2, v62);
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v16, 1, 1, v40);
          }
          uint64_t v50 = (uint64_t)v16;
          goto LABEL_35;
        }
LABEL_17:
        sub_1C3C2A448((uint64_t)v25, &qword_1EB6FC428);
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v73 = 0;
      long long v71 = 0u;
      long long v72 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_1C3C2A448((uint64_t)&v71, &qword_1EB6FC418);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    uint64_t v40 = v63;
    goto LABEL_17;
  }
  id v30 = objc_msgSend(v2, sel_serverShare);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v10, 1, 1, v63);
    uint64_t v42 = v62;
LABEL_24:
    sub_1C3D7DC78(v2, v42);
    return sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
  }
  id v31 = v30;
  id v32 = objc_msgSend(v30, sel_creationDate);

  uint64_t v33 = v63;
  if (v32)
  {
    sub_1C3DB8AC8();

    long long v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    v34(v7, 0, 1, v33);
  }
  else
  {
    long long v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    v34(v7, 1, 1, v63);
  }
  uint64_t v42 = v62;
  sub_1C3CB3BF8((uint64_t)v7, (uint64_t)v10, &qword_1EB6FB1B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v10, 1, v33) == 1) {
    goto LABEL_24;
  }
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v70 += 32;
  v48(v42, v10, v33);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v34)(v42, 0, 1, v33);
}

uint64_t sub_1C3D7DAD4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    uint64_t result = sub_1C3DBAFB8();
    if (result) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_10;
  }
  uint64_t result = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C877C220](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v5 = *(id *)(v3 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  static ICCloudSyncingObject.activityEvent(for:)(v6, (uint64_t)&v11);

  uint64_t v7 = *((void *)&v12 + 1);
  if (*((void *)&v12 + 1))
  {
    uint64_t v8 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    uint64_t v9 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v11);
  }
LABEL_10:
  sub_1C3C2A448((uint64_t)&v11, &qword_1EB6FC418);
  uint64_t v10 = sub_1C3DB8AF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
}

uint64_t sub_1C3D7DC78@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v57 - v7;
  uint64_t v59 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v59);
  uint64_t v60 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v9 = *(void *)(v63 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x1F4188790](v63);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v66 = (uint64_t)&v57 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v57 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v57 - v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388E30);
  uint64_t v21 = *(void *)(v9 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C3DD5130;
  uint64_t v62 = v23;
  uint64_t v24 = v23 + v22;
  sub_1C3D7DAD4(v24);
  uint64_t v67 = v24;
  long long v25 = (char *)(v24 + v21);
  self;
  uint64_t v26 = swift_dynamicCastObjCClass();
  uint64_t v68 = v4;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  if (v26)
  {
    uint64_t v28 = (void *)v26;
    v27(v20, 1, 1, v3);
    uint64_t v58 = v3;
    v27(v18, 1, 1, v3);
    id v29 = a1;
    id v30 = objc_msgSend(v28, sel_mergeableString);
    self;
    uint64_t v31 = swift_dynamicCastObjCClass();
    if (v31)
    {
      id v32 = (void *)v31;
      uint64_t v33 = (uint64_t)v60;
      *(void *)uint64_t v60 = v28;
      swift_storeEnumTagMultiPayload();
      id v34 = v29;
      uint64_t v35 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v32, v33, (uint64_t)v20, (uint64_t)v18);

      sub_1C3D8C368(v33, type metadata accessor for NoteEditActivityEvent.Parents);
    }
    else
    {

      uint64_t v35 = MEMORY[0x1E4FBC860];
    }
    uint64_t v36 = v65;
    sub_1C3C2A448((uint64_t)v18, &qword_1EB6FB1B8);
    sub_1C3C2A448((uint64_t)v20, &qword_1EB6FB1B8);
    id v37 = v29;
    uint64_t v38 = sub_1C3D8A8B8(v35, v28);
    swift_bridgeObjectRelease();

    uint64_t v39 = sub_1C3D7798C(v38);
    swift_bridgeObjectRelease();
    sub_1C3CB6B38(v39, v25);
    swift_bridgeObjectRelease();

    uint64_t v3 = v58;
  }
  else
  {
    v27(v25, 1, 1, v3);
    uint64_t v36 = v65;
  }
  uint64_t v40 = v66;
  sub_1C3C8E848(v67, v66, &qword_1EB6FB1B8);
  sub_1C3CB3BF8(v40, (uint64_t)v13, &qword_1EB6FB1B8);
  id v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v68 + 32);
  if (v41(v13, 1, v3) == 1)
  {
    sub_1C3C2A448((uint64_t)v13, &qword_1EB6FB1B8);
    uint64_t v43 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v60 = v25;
    uint64_t v44 = *v42;
    id v45 = v61;
    (*v42)(v61, v13, v3);
    uint64_t v46 = v3;
    v44(v36, v45, v3);
    uint64_t v43 = MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1C3D829D0(0, *(void *)(v43 + 16) + 1, 1, v43, &qword_1EA3870D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
    }
    unint64_t v48 = *(void *)(v43 + 16);
    unint64_t v47 = *(void *)(v43 + 24);
    if (v48 >= v47 >> 1) {
      uint64_t v43 = sub_1C3D829D0(v47 > 1, v48 + 1, 1, v43, &qword_1EA3870D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
    }
    *(void *)(v43 + 16) = v48 + 1;
    unint64_t v49 = v43
        + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))
        + *(void *)(v68 + 72) * v48;
    uint64_t v3 = v46;
    v44((char *)v49, v36, v46);
    long long v25 = v60;
  }
  uint64_t v50 = (uint64_t)v25;
  uint64_t v51 = v66;
  sub_1C3C8E848(v50, v66, &qword_1EB6FB1B8);
  sub_1C3CB3BF8(v51, (uint64_t)v13, &qword_1EB6FB1B8);
  if (v41(v13, 1, v3) == 1)
  {
    sub_1C3C2A448((uint64_t)v13, &qword_1EB6FB1B8);
  }
  else
  {
    id v52 = *v42;
    uint64_t v53 = v61;
    (*v42)(v61, v13, v3);
    v52(v36, v53, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1C3D829D0(0, *(void *)(v43 + 16) + 1, 1, v43, &qword_1EA3870D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
    }
    unint64_t v55 = *(void *)(v43 + 16);
    unint64_t v54 = *(void *)(v43 + 24);
    if (v55 >= v54 >> 1) {
      uint64_t v43 = sub_1C3D829D0(v54 > 1, v55 + 1, 1, v43, &qword_1EA3870D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
    }
    *(void *)(v43 + 16) = v55 + 1;
    v52((char *)(v43+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v55), v65, v3);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C3CB6B38(v43, v64);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C3D7E420()
{
  if (objc_msgSend(v0, sel_checklistItemToActivityEventsStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1C3CB3BF8((uint64_t)v5, (uint64_t)v6, qword_1EB6FB1D8);
  if (!v7)
  {
    sub_1C3C2A448((uint64_t)v6, qword_1EB6FB1D8);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E08);
  if (!swift_dynamicCast())
  {
LABEL_8:
    unint64_t v1 = sub_1C3D7E540();
    goto LABEL_9;
  }
  unint64_t v1 = v4;
LABEL_9:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
  unint64_t v2 = (void *)sub_1C3DB9A88();
  objc_msgSend(v0, sel_setChecklistItemToActivityEventsStorage_, v2);

  return v1;
}

unint64_t sub_1C3D7E540()
{
  uint64_t v0 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v0);
  unint64_t v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C3DB8B98();
  uint64_t v3 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC428);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PersistedActivityEvent();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E10);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v56 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E18);
  uint64_t v14 = *(void *)(v61 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v61);
  uint64_t v60 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v55 = (uint64_t)&v47 - v17;
  uint64_t v18 = ICCloudSyncingObject.persistedActivityEvents.getter();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v47 = v18;
    uint64_t v20 = v3;
    uint64_t v21 = v18 + 32;
    uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    unint64_t v49 = (void (**)(char *, char *, uint64_t))(v20 + 32);
    unint64_t v48 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v54 = v14;
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    unint64_t v62 = MEMORY[0x1E4FBC860];
    uint64_t v22 = (uint64_t)v56;
    uint64_t v50 = v11;
    do
    {
      sub_1C3C49A14(v21, (uint64_t)v64);
      sub_1C3C49A14((uint64_t)v64, (uint64_t)v63);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
      int v23 = swift_dynamicCast();
      uint64_t v24 = *v59;
      if (v23)
      {
        v24(v7, 0, 1, v8);
        sub_1C3D8C298((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3D8C300((uint64_t)&v11[*(int *)(v8 + 28)], (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          long long v25 = v51;
          uint64_t v26 = v7;
          uint64_t v27 = v52;
          (*v49)(v51, v2, v52);
          uint64_t v53 = v22 + *(int *)(v61 + 48);
          uint64_t v28 = sub_1C3DB8B28();
          uint64_t v29 = v8;
          id v30 = v2;
          uint64_t v31 = v0;
          uint64_t v33 = v32;
          uint64_t v34 = v27;
          uint64_t v7 = v26;
          uint64_t v11 = v50;
          (*v48)(v25, v34);
          *uint64_t v56 = v28;
          uint64_t v22 = (uint64_t)v56;
          v56[1] = v33;
          uint64_t v0 = v31;
          unint64_t v2 = v30;
          uint64_t v8 = v29;
          sub_1C3D8C298((uint64_t)v11, v53, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          uint64_t v35 = 0;
        }
        else
        {
          sub_1C3D8C368((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          sub_1C3D8C368((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          uint64_t v35 = 1;
        }
      }
      else
      {
        uint64_t v35 = 1;
        v24(v7, 1, 1, v8);
        sub_1C3C2A448((uint64_t)v7, &qword_1EB6FC428);
      }
      uint64_t v36 = v61;
      (*v58)(v22, v35, 1, v61);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      if ((*v57)(v22, 1, v36) == 1)
      {
        sub_1C3C2A448(v22, &qword_1EA388E10);
      }
      else
      {
        uint64_t v37 = v55;
        sub_1C3CB3BF8(v22, v55, &qword_1EA388E18);
        sub_1C3CB3BF8(v37, v60, &qword_1EA388E18);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v38 = v62;
        }
        else {
          unint64_t v38 = sub_1C3D8378C(0, *(void *)(v62 + 16) + 1, 1, v62, &qword_1EA388E28, &qword_1EA388E18);
        }
        unint64_t v40 = *(void *)(v38 + 16);
        unint64_t v39 = *(void *)(v38 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v38 = sub_1C3D8378C(v39 > 1, v40 + 1, 1, v38, &qword_1EA388E28, &qword_1EA388E18);
        }
        *(void *)(v38 + 16) = v40 + 1;
        unint64_t v41 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        unint64_t v62 = v38;
        sub_1C3CB3BF8(v60, v38 + v41 + *(void *)(v54 + 72) * v40, &qword_1EA388E18);
      }
      v21 += 40;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v42 = v62;
    if (*(void *)(v62 + 16)) {
      goto LABEL_18;
    }
LABEL_20:
    uint64_t v44 = MEMORY[0x1E4FBC868];
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E20);
  uint64_t v44 = sub_1C3DBAFE8();
  uint64_t v42 = v43;
LABEL_21:
  v64[0] = v44;
  sub_1C3D8B9A4(v42, 1, v64);
  swift_bridgeObjectRelease();
  unint64_t v45 = sub_1C3CFB69C(v64[0]);
  swift_release();
  return v45;
}

uint64_t ICCloudSyncingObject.timestampForChecklistItem(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_1C3D7E420();
  if (!*(void *)(v6 + 16))
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C3C2A4F8(a1, a2);
  if ((v8 & 1) == 0)
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1C3C49A14(*(void *)(v6 + 56) + 40 * v7, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)&v15 + 1);
  if (*((void *)&v15 + 1))
  {
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    uint64_t v11 = sub_1C3DB8AF8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a3, 0, 1, v11);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
  }
LABEL_8:
  sub_1C3C2A448((uint64_t)&v14, &qword_1EB6FC418);
  uint64_t v13 = sub_1C3DB8AF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
}

Swift::String_optional __swiftcall ICCloudSyncingObject.userIdForChecklistItem(identifier:)(Swift::String identifier)
{
  unint64_t object = identifier._object;
  uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
  unint64_t v3 = sub_1C3D7E420();
  if (!*(void *)(v3 + 16))
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C3C2A4F8(countAndFlagsBits, (uint64_t)object);
  if ((v5 & 1) == 0)
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1C3C49A14(*(void *)(v3 + 56) + 40 * v4, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)&v15 + 1);
  if (!*((void *)&v15 + 1))
  {
LABEL_8:
    sub_1C3C2A448((uint64_t)&v14, &qword_1EB6FC418);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_9;
  }
  uint64_t v7 = v16;
  __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
  uint64_t v8 = v13[0];
  uint64_t v9 = (void *)v13[1];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
LABEL_9:
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  result.value._unint64_t object = v11;
  result.value._uint64_t countAndFlagsBits = v10;
  return result;
}

uint64_t ICCloudSyncingObject.supports(_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, sel_isSharedViaICloud))
  {
    uint64_t v6 = type metadata accessor for PersistedActivityEvent();
    sub_1C3D8C300(a1 + *(int *)(v6 + 28), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *((void *)v5 + 2);
        uint64_t v8 = *((void *)v5 + 5);
        if (!v7)
        {
          if (!v8) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        if (!v8) {
          goto LABEL_3;
        }
        uint64_t v9 = *((void *)v5 + 1);
        uint64_t v10 = *((void *)v5 + 3);
        uint64_t v11 = *((void *)v5 + 4);
        if (*v5) {
          uint64_t v12 = 1702129518;
        }
        else {
          uint64_t v12 = 0x7265646C6F66;
        }
        if (*v5) {
          unint64_t v13 = 0xE400000000000000;
        }
        else {
          unint64_t v13 = 0xE600000000000000;
        }
        if (v10) {
          uint64_t v14 = 1702129518;
        }
        else {
          uint64_t v14 = 0x7265646C6F66;
        }
        if (v10) {
          unint64_t v15 = 0xE400000000000000;
        }
        else {
          unint64_t v15 = 0xE600000000000000;
        }
        if (v12 == v14 && v13 == v15)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = sub_1C3DBB3B8();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_37;
          }
        }
        if (v9 == v11 && v7 == v8)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          unsigned __int8 v20 = 0;
        }
        else
        {
          char v24 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          unsigned __int8 v20 = 0;
          if ((v24 & 1) == 0) {
            goto LABEL_37;
          }
        }
        return v20 & 1;
      case 2u:
        uint64_t v18 = *((void *)v5 + 5);
        uint64_t v19 = *((void *)v5 + 8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_36;
        }
        if (!v19) {
          goto LABEL_39;
        }
        goto LABEL_37;
      case 3u:
        goto LABEL_26;
      case 4u:
      case 5u:
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_26:
        swift_bridgeObjectRelease();
        unsigned __int8 v20 = objc_msgSend(v1, sel_isSharedRootObject);
        return v20 & 1;
      case 6u:
        uint64_t v21 = sub_1C3DB8B98();
        (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v5, v21);
        goto LABEL_29;
      case 7u:
        swift_bridgeObjectRelease();
LABEL_29:
        if (*(unsigned char *)(a1 + *(int *)(v6 + 20)) == 1) {
          goto LABEL_33;
        }
        goto LABEL_32;
      case 8u:
        if (*(unsigned char *)(a1 + *(int *)(v6 + 20)))
        {
LABEL_32:
          unsigned __int8 v20 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_33:
          swift_bridgeObjectRelease();
          unsigned __int8 v20 = 1;
        }
        break;
      default:
LABEL_36:
        swift_bridgeObjectRelease();
LABEL_37:
        unsigned __int8 v20 = objc_msgSend(v1, sel_isSharedRootObject) ^ 1;
        break;
    }
  }
  else
  {
LABEL_39:
    unsigned __int8 v20 = 0;
  }
  return v20 & 1;
}

objc_class *ICCloudSyncingObject.persist(activity:for:timestamp:)(uint64_t a1, ICCloudSyncingObject *a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v35 = a1;
  uint64_t v5 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v36 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for PersistedActivityEvent();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v30 - v15;
  char v17 = a2;
  if (!a2) {
    char v17 = v3;
  }
  id v37 = v3;
  uint64_t v18 = a2;
  ActivityEventParticipant.init(cloudSyncingObject:)(v17);
  uint64_t v19 = v39;
  if (!v39) {
    return 0;
  }
  uint64_t v33 = v40;
  unsigned __int8 v20 = v18;
  uint64_t v31 = v38;
  uint64_t v32 = v41;
  if (!a2) {
    unsigned __int8 v20 = (ICCloudSyncingObject *)v37;
  }
  uint64_t v21 = v18;
  ActivityEventObject.init(cloudSyncingObject:)(v20);
  uint64_t v22 = v40;
  if (!v40)
  {
    sub_1C3D8A780(v31, v19);
    return 0;
  }
  uint64_t v30 = v39;
  char v23 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v34, v7);
  uint64_t v24 = v36;
  sub_1C3D8C300(v35, v36, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v14, v10, v7);
  uint64_t v25 = &v14[v11[5]];
  *uint64_t v25 = v23 & 1;
  *((void *)v25 + 1) = v30;
  *((void *)v25 + 2) = v22;
  uint64_t v26 = &v14[v11[6]];
  *(void *)uint64_t v26 = v31;
  *((void *)v26 + 1) = v19;
  uint64_t v27 = v32;
  *((void *)v26 + 2) = v33;
  *((void *)v26 + 3) = v27;
  sub_1C3D8C298(v24, (uint64_t)&v14[v11[7]], (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  sub_1C3D8C298((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
  uint64_t v28 = ICCloudSyncingObject.persist(activityEvent:)((uint64_t)v16);
  sub_1C3D8C368((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
  return v28;
}

objc_class *ICCloudSyncingObject.persist(activityEvent:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PersistedActivityEvent();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FallbackActivityEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (ICCloudSyncingObject.supports(_:)(a1))
  {
    sub_1C3D8C300(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    FallbackActivityEvent.init(activityEvent:)((uint64_t)v8, (uint64_t)v12);
    sub_1C3D8C300((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FallbackActivityEvent);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    uint64_t v13 = (objc_class *)_sSo20ICCloudSyncingObjectC11NotesSharedE05cloudbC13ActivityEvent3for8fallbackSo0abcgH0CSgAC09PersistedgH0V_AC08FallbackgH0VSgtFZ_0();
    sub_1C3C2A448((uint64_t)v5, &qword_1EB6FBB80);
    if (v13)
    {
      v14.super.Class isa = v13;
      ICCloudSyncingObject.add(cloudSyncingObjectActivityEvent:)(v14);
    }
    sub_1C3D8C368((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FallbackActivityEvent);
  }
  else
  {
    if (qword_1EB6FBBF8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C3DB9048();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB6FBBE0);
    id v16 = v1;
    char v17 = sub_1C3DB9028();
    os_log_type_t v18 = sub_1C3DBA698();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      unsigned __int8 v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      id v21 = objc_msgSend(v16, sel_objectID);
      v23[1] = v21;
      sub_1C3DBA9A8();
      *unsigned __int8 v20 = v21;

      _os_log_impl(&dword_1C3A61000, v17, v18, "Activity is not supported — skipping {objectID: %@}", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v20, -1, -1);
      MEMORY[0x1C877E600](v19, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v13;
}

Swift::Void __swiftcall ICCloudSyncingObject.add(cloudSyncingObjectActivityEvent:)(ICCloudSyncingObjectActivityEvent cloudSyncingObjectActivityEvent)
{
}

void sub_1C3D7FB84(uint64_t a1, SEL *a2)
{
  id v5 = objc_msgSend(v2, sel_activityEventsDocument);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_orderedSet);

    objc_msgSend(v7, *a2, a1);
  }
  id v8 = objc_msgSend(v2, sel_activityEventsDocument);
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_serialize);

    uint64_t v11 = sub_1C3DB8958();
    unint64_t v13 = v12;

    uint64_t v9 = (void *)sub_1C3DB8938();
    sub_1C3C58FC8(v11, v13);
  }
  objc_msgSend(v2, sel_setActivityEventsData_, v9);

  id v14 = (id)sub_1C3DB9BF8();
  objc_msgSend(v2, sel_updateChangeCountWithReason_, v14);
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistCreateActivityEvent(forObject:inParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *inParentObject)
{
  uint64_t v5 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v17 = (char *)&v23 - v16;
  if (inParentObject
    && (*(NotesShared::ActivityEventObject_optional *)&(&v13)[-1] = ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)inParentObject),
        (uint64_t v18 = v28) != 0))
  {
    uint64_t v24 = v27;
    uint64_t v25 = v2;
    char v19 = v26;
    sub_1C3DB8AE8();
    sub_1C3DB8A78();
    unsigned __int8 v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v12, v8);
    *id v7 = v19 & 1;
    *((void *)v7 + 1) = v24;
    *((void *)v7 + 2) = v18;
    swift_storeEnumTagMultiPayload();
    id v21 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v7, forObject, (uint64_t)v17);
    sub_1C3D8C368((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
    v20(v17, v8);
  }
  else
  {
    id v21 = 0;
  }
  uint64_t v22 = v21;
  result.value._fallbackData = v14;
  result.value._data = v13;
  result.value.super.Class isa = v22;
  result.is_nil = v15;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistMoveActivityEvent(forObject:fromParentObject:toParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *fromParentObject, ICCloudSyncingObject_optional *toParentObject)
{
  uint64_t v6 = sub_1C3DB8AF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!fromParentObject)
  {
    long long v13 = 0uLL;
    if (toParentObject) {
      goto LABEL_3;
    }
LABEL_5:
    Swift::Bool v15 = 0;
    long long v14 = 0uLL;
    goto LABEL_6;
  }
  ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject);
  long long v13 = v22;
  fromParentObject = v23;
  if (!toParentObject) {
    goto LABEL_5;
  }
LABEL_3:
  long long v21 = v13;
  ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)toParentObject);
  long long v13 = v21;
  long long v14 = v22;
  Swift::Bool v15 = v23;
LABEL_6:
  *(_OWORD *)unint64_t v12 = v13;
  *((void *)v12 + 2) = fromParentObject;
  *(_OWORD *)(v12 + 24) = v14;
  *((void *)v12 + 5) = v15;
  swift_storeEnumTagMultiPayload();
  sub_1C3DB8AE8();
  uint64_t v16 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v12, forObject, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C3D8C368((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  unsigned __int8 v20 = v16;
  result.value._fallbackData = v18;
  result.value._data = v17;
  result.value.super.Class isa = v20;
  result.is_nil = v19;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistCopyActivityEvent(forObject:originalObject:fromParentObject:toParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject *originalObject, ICCloudSyncingObject_optional *fromParentObject, ICCloudSyncingObject_optional *toParentObject)
{
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v13);
  Swift::Bool v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NotesShared::ActivityEventObject_optional v30 = ActivityEventObject.init(cloudSyncingObject:)(originalObject);
  char v17 = v28;
  if (v28)
  {
    uint64_t v25 = forObject;
    uint64_t v26 = v4;
    long long v18 = v27;
    if (fromParentObject)
    {
      ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject);
      long long v19 = v27;
      fromParentObject = v28;
      if (toParentObject)
      {
LABEL_4:
        long long v24 = v19;
        ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)toParentObject);
        long long v19 = v24;
        long long v20 = v27;
        long long v21 = v28;
LABEL_8:
        *Swift::Bool v15 = v18 & 1;
        *((void *)v15 + 1) = *((void *)&v18 + 1);
        *((void *)v15 + 2) = v17;
        *(_OWORD *)(v15 + 24) = v19;
        *((void *)v15 + 5) = fromParentObject;
        *((_OWORD *)v15 + 3) = v20;
        *((void *)v15 + 8) = v21;
        swift_storeEnumTagMultiPayload();
        sub_1C3DB8AE8();
        long long v22 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v15, v25, (uint64_t)v12);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        sub_1C3D8C368((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
        goto LABEL_9;
      }
    }
    else
    {
      long long v19 = 0uLL;
      if (toParentObject) {
        goto LABEL_4;
      }
    }
    long long v21 = 0;
    long long v20 = 0uLL;
    goto LABEL_8;
  }
  long long v22 = 0;
LABEL_9:
  uint64_t v23 = v22;
  result.value._fallbackData = (NSData *)v30.value.recordName._object;
  result.value._data = (NSData *)v30.value.recordName._countAndFlagsBits;
  result.value.super.Class isa = v23;
  result.is_nil = v16;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistRenameActivityEvent(forObject:)(ICCloudSyncingObject *forObject)
{
  uint64_t v2 = sub_1C3DB8AF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_1C3DB8AE8();
  uint64_t v9 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v8, forObject, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C3D8C368((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  uint64_t v13 = v9;
  result.value._fallbackData = v11;
  result.value._data = v10;
  result.value.super.Class isa = v13;
  result.is_nil = v12;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistDeleteActivityEvent(forObject:fromParentObject:)(ICCloudSyncingObject *forObject, ICCloudSyncingObject_optional *fromParentObject)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (fromParentObject
    && (*(NotesShared::ActivityEventObject_optional *)&(&v9)[-1] = ActivityEventObject.init(cloudSyncingObject:)((ICCloudSyncingObject *)fromParentObject),
        (uint64_t v14 = v20) != 0))
  {
    uint64_t v15 = v19;
    *uint64_t v13 = v18[8] & 1;
    *((void *)v13 + 1) = v15;
    *((void *)v13 + 2) = v14;
    swift_storeEnumTagMultiPayload();
    sub_1C3DB8AE8();
    Swift::Bool v16 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v13, forObject, (uint64_t)v7);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C3D8C368((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  }
  else
  {
    Swift::Bool v16 = 0;
  }
  char v17 = v16;
  result.value._fallbackData = v10;
  result.value._data = v9;
  result.value.super.Class isa = v17;
  result.is_nil = v11;
  return result;
}

id sub_1C3D808AC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(id, void *))
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  Swift::Bool v11 = (void *)a5(v8, a4);

  return v11;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistAddParticipantActivityEvent(forObject:participant:)(ICCloudSyncingObject *forObject, CKShareParticipant participant)
{
  uint64_t v2 = sub_1C3D809B8(forObject, participant.super.isa);
  result.value._fallbackData = v4;
  result.value._data = v3;
  result.value.super.Class isa = v2;
  result.is_nil = v5;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistRemoveParticipantActivityEvent(forObject:participant:)(ICCloudSyncingObject *forObject, CKShareParticipant participant)
{
  uint64_t v2 = sub_1C3D809B8(forObject, participant.super.isa);
  result.value._fallbackData = v4;
  result.value._data = v3;
  result.value.super.Class isa = v2;
  result.is_nil = v5;
  return result;
}

objc_class *sub_1C3D809B8(ICCloudSyncingObject *a1, void *a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActivityEventParticipant.init(participant:)((CKShareParticipant)a2);
  uint64_t v11 = v16;
  if (!v16) {
    return 0;
  }
  long long v12 = v17;
  *(void *)id v10 = v15;
  *((void *)v10 + 1) = v11;
  *((_OWORD *)v10 + 1) = v12;
  swift_storeEnumTagMultiPayload();
  sub_1C3DB8AE8();
  uint64_t v13 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v10, a1, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C3D8C368((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  return v13;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistToggleChecklistItemActivityEvent(forObject:todo:)(ICCloudSyncingObject *forObject, ICTTTodo todo)
{
  Class isa = todo.super.isa;
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA388D90) + 48);
  id v12 = [(objc_class *)isa uuid];
  sub_1C3DB8B58();

  v10[v11] = [(objc_class *)isa done];
  swift_storeEnumTagMultiPayload();
  sub_1C3DB8AE8();
  uint64_t v13 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v10, forObject, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C3D8C368((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  long long v17 = v13;
  result.value._fallbackData = v15;
  result.value._data = v14;
  result.value.super.Class isa = v17;
  result.is_nil = v16;
  return result;
}

ICCloudSyncingObjectActivityEvent_optional __swiftcall ICCloudSyncingObject.persistMentionActivityEvent(forObject:mentionAttachments:)(ICCloudSyncingObject *forObject, Swift::OpaquePointer mentionAttachments)
{
  uint64_t v5 = sub_1C3DB8AF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PersistedActivityEvent.Activities();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)mentionAttachments._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (objc_class *)sub_1C3DBAFB8();
    uint64_t v12 = (uint64_t)v13;
  }
  else
  {
    uint64_t v12 = *(void *)(((unint64_t)mentionAttachments._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = (objc_class *)swift_bridgeObjectRetain();
  }
  uint64_t v31 = v2;
  uint64_t v32 = v5;
  uint64_t v29 = forObject;
  uint64_t v30 = v6;
  uint64_t v27 = v9;
  uint64_t v28 = v8;
  if (v12)
  {
    if (v12 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v17 = 0;
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (((unint64_t)mentionAttachments._rawValue & 0xC000000000000001) != 0) {
        uint64_t v20 = (ICInlineAttachment *)MEMORY[0x1C877C220](v17, mentionAttachments._rawValue);
      }
      else {
        uint64_t v20 = (ICInlineAttachment *)*((id *)mentionAttachments._rawValue + v17 + 4);
      }
      ActivityEventParticipant.init(mentionAttachment:)(v20);
      uint64_t v21 = v35;
      if (v35)
      {
        uint64_t v22 = v34;
        long long v33 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1C3D82C50(0, v18[2] + 1, 1, v18);
        }
        unint64_t v24 = v18[2];
        unint64_t v23 = v18[3];
        if (v24 >= v23 >> 1) {
          uint64_t v18 = sub_1C3D82C50((void *)(v23 > 1), v24 + 1, 1, v18);
        }
        uint64_t v18[2] = v24 + 1;
        uint64_t v19 = &v18[4 * v24];
        v19[4] = v22;
        v19[5] = v21;
        *((_OWORD *)v19 + 3) = v33;
      }
      ++v17;
    }
    while (v12 != v17);
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (v18[2])
  {
    *uint64_t v11 = v18;
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (uint64_t)v28;
    sub_1C3DB8AE8();
    uint64_t v26 = ICCloudSyncingObject.persist(activity:for:timestamp:)((uint64_t)v11, v29, v25);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v32);
    sub_1C3D8C368((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
  }
  uint64_t v13 = v26;
LABEL_23:
  result.value._fallbackData = v15;
  result.value._data = v14;
  result.value.super.Class isa = v13;
  result.is_nil = v16;
  return result;
}

uint64_t sub_1C3D812EC(uint64_t a1)
{
  return sub_1C3D81354(a1, MEMORY[0x1E4F26D58], MEMORY[0x1E4F26D50], &qword_1EA388C78);
}

uint64_t sub_1C3D81320(uint64_t a1)
{
  return sub_1C3D81354(a1, MEMORY[0x1E4F26CC8], MEMORY[0x1E4F26CC0], &qword_1EA388C80);
}

uint64_t sub_1C3D81354(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t static ICCloudSyncingObject.persistedActivityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EA3859D8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  id v5 = objc_msgSend(a1, sel_data);
  uint64_t v6 = sub_1C3DB8958();
  unint64_t v8 = v7;

  sub_1C3D1EDA8(&qword_1EA388D98, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent);
  sub_1C3DB8128();
  sub_1C3C58FC8(v6, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v9(a2, 0, 1, v4);
}

uint64_t static ICCloudSyncingObject.fallbackActivityEvent(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_fallbackData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C3DB8958();
    unint64_t v7 = v6;

    if (qword_1EA3859D8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for FallbackActivityEvent();
    sub_1C3D1EDA8(&qword_1EA388DA0, (void (*)(uint64_t))type metadata accessor for FallbackActivityEvent);
    sub_1C3DB8128();
    sub_1C3C58FC8(v5, v7);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v8;
  }
  else
  {
    if (qword_1EB6FBBF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C3DB9048();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB6FBBE0);
    uint64_t v10 = sub_1C3DB9028();
    os_log_type_t v11 = sub_1C3DBA698();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1C3A61000, v10, v11, "Cloud syncing activity event doesn't have fallback data — returning nil", v12, 2u);
      MEMORY[0x1C877E600](v12, -1, -1);
    }

    uint64_t v13 = type metadata accessor for FallbackActivityEvent();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v17 = v13;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

id static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(forData:fallback:)(uint64_t a1, unint64_t a2)
{
  if (qword_1EA3859D0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB80);
  sub_1C3D8C0E8();
  uint64_t v4 = sub_1C3DB8188();
  unint64_t v6 = v5;
  sub_1C3CE0C34(a1, a2);
  unint64_t v7 = (void *)sub_1C3DB8938();
  if (v6 >> 60 == 15)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = (void *)sub_1C3DB8938();
    sub_1C3CCDF74(v4, v6);
  }
  id v9 = objc_msgSend(objc_allocWithZone((Class)ICCloudSyncingObjectActivityEvent), sel_initWithData_fallbackData_, v7, v8);
  sub_1C3C58FC8(a1, a2);

  return v9;
}

void ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(unint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_activityEventsDocument);
  if (v4)
  {
    unint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_orderedSet);

    objc_msgSend(v6, sel_removeAllObjects);
  }
  id v7 = objc_msgSend(v2, sel_activityEventsDocument);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_orderedSet);

    swift_bridgeObjectRetain();
    if (a1 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388D18);
      sub_1C3DBAF68();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C3DBB418();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388D18);
    uint64_t v10 = (void *)sub_1C3DB9FF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_addObjectsFromArray_, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v11 = objc_msgSend(v2, sel_activityEventsDocument);
  uint64_t v12 = v11;
  if (v11)
  {
    id v13 = objc_msgSend(v11, sel_serialize);

    uint64_t v14 = sub_1C3DB8958();
    unint64_t v16 = v15;

    uint64_t v12 = (void *)sub_1C3DB8938();
    sub_1C3C58FC8(v14, v16);
  }
  objc_msgSend(v2, sel_setActivityEventsData_, v12);

  id v17 = (id)sub_1C3DB9BF8();
  objc_msgSend(v2, sel_updateChangeCountWithReason_, v17);
}

void (*ICCloudSyncingObject.cloudSyncingObjectActivityEvents.modify(uint64_t *a1))(unint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  return sub_1C3D81F08;
}

void sub_1C3D81F08(unint64_t *a1, char a2)
{
  if (a2)
  {
    unint64_t v2 = swift_bridgeObjectRetain();
    ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(*a1);
  }
}

Swift::Void __swiftcall ICCloudSyncingObject.removeAllCloudSyncingObjectActivityEvents()()
{
  id v1 = objc_msgSend(v0, sel_activityEventsDocument);
  if (v1)
  {
    unint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_orderedSet);

    objc_msgSend(v3, sel_removeAllObjects);
  }
  id v4 = objc_msgSend(v0, sel_activityEventsData);
  if (v4)
  {
    unint64_t v5 = v4;
    uint64_t v6 = sub_1C3DB8958();
    unint64_t v8 = v7;

    sub_1C3C58FC8(v6, v8);
    id v9 = objc_msgSend(v0, sel_activityEventsDocument);
    uint64_t v10 = v9;
    if (v9)
    {
      id v11 = objc_msgSend(v9, sel_serialize);

      uint64_t v12 = sub_1C3DB8958();
      unint64_t v14 = v13;

      uint64_t v10 = (void *)sub_1C3DB8938();
      sub_1C3C58FC8(v12, v14);
    }
    objc_msgSend(v0, sel_setActivityEventsData_, v10);

    id v15 = (id)sub_1C3DB9BF8();
    objc_msgSend(v0, sel_updateChangeCountWithReason_, v15);
  }
}

uint64_t static ICCloudSyncingObject.removeAllCloudSyncingObjectActivityEventsForUnsharedObjects(in:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C3D8C18C;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_1C3D8C1A4;
  void v7[5] = v3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  void v7[2] = sub_1C3D7A8B4;
  v7[3] = &block_descriptor_19;
  id v4 = _Block_copy(v7);
  id v5 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v4);
  _Block_release(v4);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3D822A4(uint64_t a1)
{
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA3876C0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_1C3C4C8B4(0, &qword_1EB6FBAF0);
  uint64_t v3 = (void *)sub_1C3DBA648();
  id v4 = (void *)sub_1C3DB9FF8();
  aBlock[4] = sub_1C3D82428;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3D20800;
  aBlock[3] = &block_descriptor_34;
  id v5 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_ic_enumerateObjectsMatchingPredicate_sortDescriptors_relationshipKeyPathsForPrefetching_context_batchSize_saveAfterBatch_usingBlock_, v3, 0, v4, a1, 16, 0, v5);

  _Block_release(v5);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  return result;
}

void sub_1C3D82428(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = a1;
    if ((objc_msgSend(v3, sel_isSharedViaICloud) & 1) == 0) {
      objc_msgSend(v3, sel_objc_removeAllCloudSyncingObjectActivityEvents);
    }
  }
}

void *sub_1C3D82620(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DD8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C3D8AD00(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D82748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, &qword_1EA387160, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
}

void *sub_1C3D8277C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388C90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8AE10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C3D8288C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386248);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8A7C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D8299C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, (uint64_t *)&unk_1EA388E90, type metadata accessor for NoteEditActivityEvent, type metadata accessor for NoteEditActivityEvent);
}

uint64_t sub_1C3D829D0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
    return result;
  }
  uint64_t v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C3D8B6F0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1C3D82C50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3860A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8AF1C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C3D82D60(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388AD0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C3D8B5E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C3D82E84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3D82E98(a1, a2, a3, a4, &qword_1EA386EE0, (uint64_t *)&unk_1EA388DC0);
}

void *sub_1C3D82E98(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C3D8B010(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D82FC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, (uint64_t *)&unk_1EA388EC0, type metadata accessor for TranscriptViewModelSegment, type metadata accessor for TranscriptViewModelSegment);
}

void *sub_1C3D82FFC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3D83290(a1, a2, a3, a4, &qword_1EB6FBB20, (void (*)(void, int64_t, void *, void *))sub_1C3D8B400);
}

void *sub_1C3D8301C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387120);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8B11C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C3D8312C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DF8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8B208(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D8323C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, &qword_1EA3870D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

void *sub_1C3D83270(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3D83290(a1, a2, a3, a4, (uint64_t *)&unk_1EA388E70, (void (*)(void, int64_t, void *, void *))sub_1C3D8B2F4);
}

void *sub_1C3D83290(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      void v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D833AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, &qword_1EB6FC470, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

void *sub_1C3D833E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E68);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8B11C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D834F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D8378C(a1, a2, a3, a4, &qword_1EA387D90, &qword_1EA388E60);
}

uint64_t sub_1C3D83504(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, &qword_1EA388E58, type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection, type metadata accessor for RealtimeCollaborationSelectionDocument.ParticipantSelection);
}

uint64_t sub_1C3D83538(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C3D829D0(a1, a2, a3, a4, (uint64_t *)&unk_1EA388E48, MEMORY[0x1E4F38DE0], MEMORY[0x1E4F38DE0]);
}

void *sub_1C3D8356C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1D0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8B4F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C3D8367C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DF0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C3D8B4F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3D8378C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
    return result;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C3D8B84C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

id sub_1C3D839F8()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBAFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    size_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C3D83BAC()
{
  uint64_t v38 = sub_1C3DB8B98();
  uint64_t v1 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  id v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387320);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1C3DBAFC8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v40;
    uint64_t v29 = v32;
LABEL_25:
    *uint64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    int64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    uint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *uint64_t v25 = v23;
    v25[1] = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C3D83E84()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA3865A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBAFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v25 = v21[2];
    uint64_t v24 = v21[3];
    int64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v26 = v18;
    v26[1] = v19;
    unint64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    void *v27 = v22;
    v27[1] = v23;
    void v27[2] = v25;
    uint64_t v27[3] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C3D8405C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA385B30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBAFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C3C4BC70(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1C3C2A5D8(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C3D84244()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C3DBAFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C3D84400()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E80);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C3DBAFC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_1C3D8C300(*(void *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for NoteEditActivityEvent.Parents);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void **)(*(void *)(v5 + 56) + v19);
    sub_1C3D8C298((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for NoteEditActivityEvent.Parents);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C3D84684()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB88F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC378);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C3DBAFC8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v22 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  uint64_t v23 = v6 + 64;
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = v3 + 32;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_1C3C8E848(*(void *)(v6 + 56) + v18, (uint64_t)v27, &qword_1EB6FC380);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = (void *)sub_1C3CB3BF8((uint64_t)v27, *(void *)(v8 + 56) + v18, &qword_1EB6FC380);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v24)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C3D84944()
{
  uint64_t v1 = sub_1C3DB88F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC370);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C3DBAFC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_1C3D84BDC()
{
  uint64_t v39 = sub_1C3DB8B98();
  uint64_t v1 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DF0);
  uint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1C3DBAFC8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v41 = v4;
  if (!v5)
  {
    id result = (char *)swift_release();
    uint64_t v31 = v41;
    int64_t v30 = v33;
LABEL_25:
    *int64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    id result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v41;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v40 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  unint64_t v15 = v38;
  uint64_t v14 = v39;
  uint64_t v16 = v41;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v40;
      goto LABEL_9;
    }
    int64_t v27 = v10 + 1;
    uint64_t v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 16 * v18;
    uint64_t v23 = (uint64_t *)(v21 + 16 * v18);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v16 + 48) + v20, v15, v14);
    uint64_t v26 = (uint64_t *)(*(void *)(v16 + 56) + v22);
    *uint64_t v26 = v24;
    v26[1] = v25;
    id result = (char *)sub_1C3CE0C34(v24, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_23:
    id result = (char *)swift_release();
    int64_t v30 = v33;
    uint64_t v31 = v41;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C3D84EB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PersistedActivityEvent();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E20);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C3DBAFC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1C3D8C300(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    void *v22 = v19;
    v22[1] = v20;
    sub_1C3D8C298((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C3D8514C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB8);
  char v38 = a2;
  uint64_t v6 = sub_1C3DBAFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    uint64_t result = sub_1C3DBB608();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C3D8545C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA387320);
  int v47 = a2;
  uint64_t v10 = sub_1C3DBAFD8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  unint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  unint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_1C3D1EDA8((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C3DB9B08();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *unint64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1C3D8589C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA3865A0);
  char v40 = a2;
  uint64_t v6 = sub_1C3DBAFD8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[3];
      uint64_t v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      uint64_t result = sub_1C3DBB608();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 32 * v17);
      *unint64_t v19 = v33;
      v19[1] = v34;
      void v19[2] = v41;
      void v19[3] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C3D85BC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA385B30);
  uint64_t v6 = sub_1C3DBAFD8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1C3C2A5D8(v24, v35);
      }
      else
      {
        sub_1C3C4BC70((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      uint64_t result = sub_1C3DBB608();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1C3C2A5D8(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C3D85EC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EB0);
  char v42 = a2;
  uint64_t v6 = sub_1C3DBAFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    uint64_t result = sub_1C3DBB608();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C3D861F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v70 = sub_1C3DB8B98();
  uint64_t v5 = *(void *)(v70 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v70);
  unint64_t v69 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (char *)&v58 - v8;
  uint64_t v9 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int64_t v13 = (void **)((char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  long long v71 = (char *)&v58 - v14;
  uint64_t v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E80);
  uint64_t v16 = sub_1C3DBAFD8();
  uint64_t v17 = v16;
  if (*(void *)(v15 + 16))
  {
    uint64_t v59 = v2;
    uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
    uint64_t v19 = *(void *)(v15 + 64);
    uint64_t v61 = (void *)(v15 + 64);
    if (v18 < 64) {
      uint64_t v20 = ~(-1 << v18);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & v19;
    int64_t v60 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    unint64_t v62 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v22 = v16 + 64;
    uint64_t result = swift_retain();
    int64_t v24 = 0;
    uint64_t v25 = v15;
    uint64_t v26 = (uint64_t)v71;
    uint64_t v66 = v10;
    uint64_t v67 = v17;
    uint64_t v65 = v13;
    uint64_t v63 = v9;
    while (1)
    {
      if (v21)
      {
        uint64_t v74 = (v21 - 1) & v21;
        unint64_t v29 = __clz(__rbit64(v21)) | (v24 << 6);
      }
      else
      {
        int64_t v30 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        if (v30 >= v60) {
          goto LABEL_37;
        }
        unint64_t v31 = v61[v30];
        ++v24;
        if (!v31)
        {
          int64_t v24 = v30 + 1;
          if (v30 + 1 >= v60) {
            goto LABEL_37;
          }
          unint64_t v31 = v61[v24];
          if (!v31)
          {
            int64_t v32 = v30 + 2;
            if (v32 >= v60)
            {
LABEL_37:
              swift_release();
              uint64_t v3 = v59;
              if (a2)
              {
                uint64_t v57 = 1 << *(unsigned char *)(v25 + 32);
                if (v57 >= 64) {
                  bzero(v61, ((unint64_t)(v57 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v61 = -1 << v57;
                }
                *(void *)(v25 + 16) = 0;
              }
              break;
            }
            unint64_t v31 = v61[v32];
            if (!v31)
            {
              while (1)
              {
                int64_t v24 = v32 + 1;
                if (__OFADD__(v32, 1)) {
                  goto LABEL_45;
                }
                if (v24 >= v60) {
                  goto LABEL_37;
                }
                unint64_t v31 = v61[v24];
                ++v32;
                if (v31) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v24 = v32;
          }
        }
LABEL_21:
        uint64_t v74 = (v31 - 1) & v31;
        unint64_t v29 = __clz(__rbit64(v31)) + (v24 << 6);
      }
      uint64_t v33 = *(void *)(v10 + 72);
      uint64_t v34 = *(void *)(v25 + 48) + v33 * v29;
      int64_t v75 = v24;
      uint64_t v73 = v33;
      if (a2)
      {
        sub_1C3D8C298(v34, v26, type metadata accessor for NoteEditActivityEvent.Parents);
        id v72 = *(id *)(*(void *)(v25 + 56) + 8 * v29);
      }
      else
      {
        sub_1C3D8C300(v34, v26, type metadata accessor for NoteEditActivityEvent.Parents);
        id v72 = *(id *)(*(void *)(v25 + 56) + 8 * v29);
      }
      sub_1C3DBB5D8();
      sub_1C3D8C300(v26, (uint64_t)v13, type metadata accessor for NoteEditActivityEvent.Parents);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v36 = *v13;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA388EA0);
        uint64_t v38 = (char *)v13 + *(int *)(v37 + 48);
        uint64_t v39 = (char *)v13 + *(int *)(v37 + 64);
        uint64_t v40 = v25;
        uint64_t v41 = a2;
        char v42 = *v64;
        uint64_t v43 = v68;
        uint64_t v44 = v70;
        (*v64)(v68, v38, v70);
        uint64_t v45 = v69;
        v42(v69, v39, v44);
        sub_1C3DBB5E8();
        sub_1C3DBA8F8();
        sub_1C3D1EDA8((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
        sub_1C3DB9B18();
        a2 = v41;
        uint64_t v25 = v40;
        uint64_t v10 = v66;
        sub_1C3DB9B18();

        uint64_t v46 = *v62;
        int v47 = v45;
        uint64_t v26 = (uint64_t)v71;
        (*v62)(v47, v44);
        unint64_t v48 = v43;
        int64_t v13 = v65;
        uint64_t v49 = v44;
        uint64_t v17 = v67;
        v46(v48, v49);
      }
      else
      {
        sub_1C3DBB5E8();
        sub_1C3DBA8F8();
      }
      uint64_t result = sub_1C3DBB608();
      uint64_t v50 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v51 = result & ~v50;
      unint64_t v52 = v51 >> 6;
      if (((-1 << v51) & ~*(void *)(v22 + 8 * (v51 >> 6))) != 0)
      {
        unint64_t v27 = __clz(__rbit64((-1 << v51) & ~*(void *)(v22 + 8 * (v51 >> 6)))) | v51 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v53 = 0;
        unint64_t v54 = (unint64_t)(63 - v50) >> 6;
        do
        {
          if (++v52 == v54 && (v53 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v55 = v52 == v54;
          if (v52 == v54) {
            unint64_t v52 = 0;
          }
          v53 |= v55;
          uint64_t v56 = *(void *)(v22 + 8 * v52);
        }
        while (v56 == -1);
        unint64_t v27 = __clz(__rbit64(~v56)) + (v52 << 6);
      }
      uint64_t v28 = v73;
      *(void *)(v22 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t result = sub_1C3D8C298(v26, *(void *)(v17 + 48) + v28 * v27, type metadata accessor for NoteEditActivityEvent.Parents);
      *(void *)(*(void *)(v17 + 56) + 8 * v27) = v72;
      ++*(void *)(v17 + 16);
      unint64_t v21 = v74;
      int64_t v24 = v75;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v17;
  return result;
}

uint64_t sub_1C3D8686C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1C3DB88F8();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC378);
  int v45 = a2;
  uint64_t v9 = sub_1C3DBAFD8();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v40 = -1 << v37;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      uint64_t v27 = 40 * v20;
      uint64_t v28 = v43;
      uint64_t v29 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_1C3CB3BF8(*(void *)(v8 + 56) + v27, (uint64_t)v47, &qword_1EB6FC380);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_1C3C8E848(*(void *)(v8 + 56) + v27, (uint64_t)v47, &qword_1EB6FC380);
      }
      sub_1C3D1EDA8(&qword_1EB6FC018, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_1C3DB9B08();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v28, v29);
      uint64_t result = sub_1C3CB3BF8((uint64_t)v47, *(void *)(v10 + 56) + 40 * v18, &qword_1EB6FC380);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C3D86CC0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC370);
  int v46 = a2;
  uint64_t v10 = sub_1C3DBAFD8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1C3D1EDA8(&qword_1EB6FC018, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_1C3DB9B08();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1C3D870E4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C3DB8B98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386DF0);
  int v47 = a2;
  uint64_t v10 = sub_1C3DBAFD8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  int64_t v41 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  unint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v49 = v8;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v50 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      unint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v29;
      unint64_t v31 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      unint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v32;
      unint64_t v31 = v32[1];
      sub_1C3CE0C34(*v32, v31);
    }
    sub_1C3D1EDA8((unint64_t *)&qword_1EB6FC050, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C3DB9B08();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    int64_t v20 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v19);
    *int64_t v20 = v30;
    v20[1] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1C3D8752C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PersistedActivityEvent();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E20);
  int v43 = a2;
  uint64_t v9 = sub_1C3DBAFD8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    int64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    int64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1C3D8C298(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    }
    else
    {
      sub_1C3D8C300(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      swift_bridgeObjectRetain();
    }
    sub_1C3DBB5D8();
    sub_1C3DB9D08();
    uint64_t result = sub_1C3DBB608();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1C3D8C298((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C3D8790C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C3C4BDB4((unint64_t *)&unk_1EA388F10, &qword_1EA388F08);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F08);
          uint64_t v12 = sub_1C3C2EDC4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ICTTAudioRecording.Fragment();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D87B30(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C3C4BDB4((unint64_t *)&unk_1EA388EF0, &qword_1EA388EE8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388EE8);
          uint64_t v12 = sub_1C3C2EE30(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388EE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D87D64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C3C4BDB4(&qword_1EA388E88, &qword_1EA388E80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E80);
          uint64_t v12 = sub_1C3C2EDC4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C3C4C8B4(0, &qword_1EA3876A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D87F98(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v89 = a5;
  uint64_t v90 = a7;
  uint64_t v88 = a6;
  uint64_t v87 = sub_1C3DB8AF8();
  uint64_t v11 = *(void *)(v87 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v87);
  id v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  int64_t v17 = (char *)&v77 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v77 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (char *)&v77 - v21;
  uint64_t v86 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v22 = MEMORY[0x1F4188790](v86);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  int64_t v25 = (char *)&v77 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v77 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v91 = *(void *)(v31 + 72);
  if (!v91)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v91 == -1) {
    goto LABEL_69;
  }
  int64_t v32 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v91 == -1) {
    goto LABEL_70;
  }
  uint64_t v33 = (uint64_t)(a2 - a1) / v91;
  unint64_t v95 = a1;
  unint64_t v94 = a4;
  uint64_t v34 = v32 / v91;
  if (v33 >= v32 / v91)
  {
    if ((v34 & 0x8000000000000000) == 0)
    {
      uint64_t v38 = v11;
      uint64_t v39 = v34 * v91;
      unint64_t v82 = v30;
      if (a4 < a2 || a2 + v39 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v53 = a4 + v39;
      unint64_t v93 = a4 + v39;
      unint64_t v95 = a2;
      if (v39 < 1 || a1 >= a2) {
        goto LABEL_67;
      }
      uint64_t v80 = v17;
      uint64_t v81 = v14;
      uint64_t v55 = -v91;
      unint64_t v78 = a1;
      char v79 = (void (**)(char *, uint64_t))(v38 + 8);
      unint64_t v77 = a4;
      uint64_t v56 = v87;
      while (1)
      {
        uint64_t v91 = a3;
        uint64_t v57 = (uint64_t)v25;
        sub_1C3D8C300(v53 + v55, (uint64_t)v25, type metadata accessor for NoteEditActivityEvent);
        uint64_t v85 = (char *)a2;
        uint64_t v58 = a2 + v55;
        unint64_t v83 = a2 + v55;
        uint64_t v59 = v82;
        sub_1C3D8C300(v58, (uint64_t)v82, type metadata accessor for NoteEditActivityEvent);
        int64_t v60 = v80;
        uint64_t v61 = v55;
        swift_getAtKeyPath();
        unint64_t v62 = v81;
        swift_getAtKeyPath();
        uint64_t v63 = v92;
        char v64 = v89(v60, v62);
        uint64_t v92 = v63;
        if (v63) {
          break;
        }
        char v65 = v64;
        uint64_t v84 = (char *)(v91 + v55);
        uint64_t v66 = *v79;
        (*v79)(v62, v56);
        v66(v60, v56);
        sub_1C3D8C368((uint64_t)v59, type metadata accessor for NoteEditActivityEvent);
        sub_1C3D8C368(v57, type metadata accessor for NoteEditActivityEvent);
        int64_t v25 = (char *)v57;
        if (v65)
        {
          uint64_t v55 = v61;
          a3 = (unint64_t)v84;
          unint64_t v67 = v77;
          if (v91 < (unint64_t)v85 || v84 >= v85)
          {
            unint64_t v69 = (char *)v83;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v68 = v78;
          }
          else
          {
            unint64_t v68 = v78;
            unint64_t v69 = (char *)v83;
            if ((char *)v91 != v85) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v95 += v55;
        }
        else
        {
          unint64_t v70 = v93;
          v93 += v61;
          unint64_t v67 = v77;
          uint64_t v55 = v61;
          a3 = (unint64_t)v84;
          if (v91 < v70 || (unint64_t)v84 >= v70)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v69 = v85;
          }
          else
          {
            unint64_t v69 = v85;
            if (v91 != v70) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v68 = v78;
        }
        unint64_t v53 = v93;
        if (v93 > v67)
        {
          a2 = (unint64_t)v69;
          if ((unint64_t)v69 > v68) {
            continue;
          }
        }
        goto LABEL_67;
      }
      uint64_t v74 = *v79;
      uint64_t v75 = v87;
      (*v79)(v62, v87);
      v74(v60, v75);
      uint64_t v73 = (uint64_t)v59;
      goto LABEL_66;
    }
  }
  else if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = v11;
    uint64_t v36 = v33 * v91;
    uint64_t v37 = (char *)&v77 - v29;
    uint64_t v84 = v28;
    if (a4 < a1 || a1 + v36 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v83 = a4 + v36;
    unint64_t v93 = a4 + v36;
    BOOL v40 = v36 < 1 || a2 >= a3;
    if (v40) {
      goto LABEL_67;
    }
    uint64_t v81 = v20;
    unint64_t v82 = (void *)(v35 + 8);
    uint64_t v42 = (uint64_t)v84;
    int64_t v41 = v85;
    while (1)
    {
      unint64_t v43 = a3;
      sub_1C3D8C300(a2, (uint64_t)v37, type metadata accessor for NoteEditActivityEvent);
      sub_1C3D8C300(a4, v42, type metadata accessor for NoteEditActivityEvent);
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      uint64_t v44 = v92;
      char v45 = v89(v41, v20);
      uint64_t v92 = v44;
      if (v44) {
        break;
      }
      char v46 = v45;
      int v47 = (void (*)(char *, uint64_t))*v82;
      unint64_t v48 = v20;
      uint64_t v49 = v87;
      ((void (*)(char *, uint64_t))*v82)(v48, v87);
      v47(v41, v49);
      sub_1C3D8C368(v42, type metadata accessor for NoteEditActivityEvent);
      sub_1C3D8C368((uint64_t)v37, type metadata accessor for NoteEditActivityEvent);
      unint64_t v50 = v95;
      if (v46)
      {
        unint64_t v51 = a2 + v91;
        if (v95 < a2 || v95 >= v51)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v20 = v81;
        }
        else
        {
          unint64_t v20 = v81;
          if (v95 == a2) {
            unint64_t v50 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
      }
      else
      {
        unint64_t v52 = v94 + v91;
        if (v95 < v94 || v95 >= v52)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v20 = v81;
        }
        else
        {
          unint64_t v20 = v81;
          if (v95 != v94) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v94 = v52;
        unint64_t v51 = a2;
      }
      unint64_t v95 = v50 + v91;
      a4 = v94;
      if (v94 < v83)
      {
        a2 = v51;
        BOOL v40 = v51 >= v43;
        a3 = v43;
        if (!v40) {
          continue;
        }
      }
      goto LABEL_67;
    }
    long long v71 = (void (*)(char *, uint64_t))*v82;
    uint64_t v72 = v87;
    ((void (*)(char *, uint64_t))*v82)(v20, v87);
    v71(v41, v72);
    uint64_t v73 = v42;
    uint64_t v57 = (uint64_t)v37;
LABEL_66:
    sub_1C3D8C368(v73, type metadata accessor for NoteEditActivityEvent);
    sub_1C3D8C368(v57, type metadata accessor for NoteEditActivityEvent);
LABEL_67:
    sub_1C3D70CB8(&v95, &v94, (uint64_t *)&v93);
    return 1;
  }
LABEL_71:
  swift_release();
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D887F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  unint64_t v62 = a5;
  uint64_t v63 = a7;
  uint64_t v61 = a6;
  unint64_t v68 = a4;
  uint64_t v60 = sub_1C3DB8AF8();
  uint64_t v12 = *(void *)(v60 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v60);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v48 - v16;
  uint64_t v51 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v18 = MEMORY[0x1F4188790](v51);
  unint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t result = MEMORY[0x1F4188790](v21);
  uint64_t v50 = a2;
  if (a3 != a2)
  {
    uint64_t v54 = (uint64_t)&v48 - v24;
    uint64_t v55 = v17;
    uint64_t v56 = v15;
    uint64_t v52 = *(void *)(v23 + 72);
    unint64_t v53 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v26 = v52 * (a3 - 1);
    uint64_t v27 = v52 * a3;
    uint64_t v28 = v25;
    uint64_t v49 = a1;
    while (2)
    {
      uint64_t v29 = 0;
      uint64_t v57 = a3;
      uint64_t v58 = v27;
      uint64_t v59 = v26;
      while (1)
      {
        uint64_t v31 = *v68;
        uint64_t v66 = v27 + v29;
        uint64_t v67 = a1;
        uint64_t v32 = v27 + v29 + v31;
        uint64_t v33 = v54;
        sub_1C3D8C300(v32, v54, type metadata accessor for NoteEditActivityEvent);
        uint64_t v69 = v29;
        uint64_t v65 = v26 + v29;
        sub_1C3D8C300(v26 + v29 + v31, v28, type metadata accessor for NoteEditActivityEvent);
        uint64_t v34 = v28;
        uint64_t v35 = v55;
        swift_getAtKeyPath();
        uint64_t v36 = v56;
        swift_getAtKeyPath();
        char v37 = v62(v35, v36);
        if (v8)
        {
          char v46 = *v53;
          uint64_t v47 = v60;
          (*v53)(v36, v60);
          v46(v35, v47);
          sub_1C3D8C368(v34, type metadata accessor for NoteEditActivityEvent);
          return sub_1C3D8C368(v33, type metadata accessor for NoteEditActivityEvent);
        }
        char v38 = v37;
        uint64_t v39 = (uint64_t)v20;
        uint64_t v64 = 0;
        BOOL v40 = v68;
        int64_t v41 = v36;
        uint64_t v42 = *v53;
        uint64_t v43 = v60;
        (*v53)(v41, v60);
        v42(v35, v43);
        sub_1C3D8C368(v34, type metadata accessor for NoteEditActivityEvent);
        uint64_t result = sub_1C3D8C368(v33, type metadata accessor for NoteEditActivityEvent);
        uint64_t v28 = v34;
        if ((v38 & 1) == 0) {
          break;
        }
        uint64_t v44 = *v40;
        uint64_t v27 = v58;
        uint64_t v26 = v59;
        if (!*v40)
        {
          __break(1u);
          return result;
        }
        uint64_t v45 = v44 + v59 + v69;
        unint64_t v20 = (char *)v39;
        sub_1C3D8C298(v44 + v58 + v69, v39, type metadata accessor for NoteEditActivityEvent);
        uint64_t v8 = v64;
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_1C3D8C298(v39, v45, type metadata accessor for NoteEditActivityEvent);
        uint64_t v29 = v69 - v52;
        a1 = v67 + 1;
        uint64_t v30 = v57;
        if (v57 == v67 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v8 = v64;
      uint64_t v30 = v57;
      uint64_t v27 = v58;
      unint64_t v20 = (char *)v39;
      uint64_t v26 = v59;
LABEL_10:
      a3 = v30 + 1;
      v26 += v52;
      v27 += v52;
      a1 = v49;
      if (a3 != v50) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C3D88C50(uint64_t *a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  v216 = a2;
  uint64_t v217 = a3;
  uint64_t v208 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v208 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v208);
  uint64_t v11 = (char *)&v183 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v183 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  v197 = (char *)&v183 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v183 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v183 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v207 = (char *)&v183 - v23;
  uint64_t v199 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v211 = *(void *)(v199 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v199);
  uint64_t v200 = (uint64_t)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v206 = (uint64_t)&v183 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v186 = (char *)&v183 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v209 = (uint64_t)&v183 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v187 = (char *)&v183 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  id v198 = (char *)&v183 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v190 = (uint64_t)&v183 - v37;
  MEMORY[0x1F4188790](v36);
  uint64_t v189 = (uint64_t)&v183 - v38;
  uint64_t v215 = a1;
  uint64_t v39 = a1[1];
  uint64_t v218 = a4;
  uint64_t v40 = v39;
  swift_retain_n();
  uint64_t v41 = sub_1C3DBB228();
  if (v41 >= v40)
  {
    if (v40 < 0) {
      goto LABEL_151;
    }
    if (v40)
    {
      uint64_t v45 = v218;
      swift_retain();
      sub_1C3D887F0(0, v40, 1, v215, v216, v217, v45);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    return swift_release_n();
  }
  if (v40 >= 0) {
    uint64_t v42 = v40;
  }
  else {
    uint64_t v42 = v40 + 1;
  }
  if (v40 < -1) {
    goto LABEL_160;
  }
  uint64_t v185 = v41;
  if (v40 < 2)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    unint64_t v210 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
    if (v40 != 1)
    {
      unint64_t v101 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v47 = (char *)MEMORY[0x1E4FBC860];
LABEL_111:
      uint64_t v205 = v44;
      if (v101 >= 2)
      {
        uint64_t v159 = (uint64_t *)*v215;
        uint64_t v215 = (uint64_t *)*v215;
        do
        {
          unint64_t v160 = v101 - 2;
          if (v101 < 2) {
            goto LABEL_146;
          }
          if (!v159) {
            goto LABEL_159;
          }
          unint64_t v161 = v5;
          unint64_t v162 = v101 - 1;
          v214 = v47;
          uint64_t v163 = *(void *)&v47[16 * v160 + 32];
          uint64_t v164 = *(void *)&v47[16 * v101 + 24];
          uint64_t v165 = *(void *)(v211 + 72);
          unint64_t v166 = (unint64_t)v159 + v165 * v163;
          unint64_t v167 = (unint64_t)v159 + v165 * *(void *)&v47[16 * v101 + 16];
          unint64_t v168 = (unint64_t)v159 + v165 * v164;
          uint64_t v169 = v218;
          swift_retain();
          sub_1C3D87F98(v166, v167, v168, v210, v216, v217, v169);
          if (v161) {
            goto LABEL_109;
          }
          swift_release();
          if (v164 < v163) {
            goto LABEL_147;
          }
          uint64_t v170 = (uint64_t)v214;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v171 = (char *)v170;
          }
          else {
            uint64_t v171 = sub_1C3D70EE8(v170);
          }
          if (v160 >= *((void *)v171 + 2)) {
            goto LABEL_148;
          }
          id v172 = v171 + 32;
          unint64_t v173 = &v171[16 * v160 + 32];
          *(void *)unint64_t v173 = v163;
          *((void *)v173 + 1) = v164;
          unint64_t v174 = *((void *)v171 + 2);
          if (v101 > v174) {
            goto LABEL_149;
          }
          uint64_t v175 = &v172[16 * v101];
          size_t v176 = 16 * (v174 - v101);
          uint64_t v177 = v171;
          memmove(&v172[16 * v162], v175, v176);
          uint64_t v47 = v177;
          *((void *)v177 + 2) = v174 - 1;
          unint64_t v101 = v174 - 1;
          unint64_t v5 = 0;
          uint64_t v159 = v215;
        }
        while (v174 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v205 + 16) = 0;
      swift_release();
      goto LABEL_129;
    }
    uint64_t v195 = v14;
    v196 = v11;
  }
  else
  {
    uint64_t v195 = v14;
    v196 = v11;
    uint64_t v43 = v42 >> 1;
    uint64_t v44 = sub_1C3DBA0A8();
    *(void *)(v44 + 16) = v43;
    unint64_t v210 = v44 + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
  }
  uint64_t v46 = 0;
  uint64_t v204 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v47 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v205 = v44;
  v193 = v19;
  unint64_t v184 = v22;
  uint64_t v48 = v207;
LABEL_14:
  uint64_t v49 = (char *)v46;
  uint64_t v50 = v46 + 1;
  v214 = v47;
  if (v46 + 1 >= v40) {
    goto LABEL_35;
  }
  uint64_t v202 = v40;
  uint64_t v51 = *v215;
  uint64_t v52 = *(char **)(v211 + 72);
  uint64_t v53 = v46;
  sub_1C3D8C300(*v215 + (void)v52 * v50, v189, type metadata accessor for NoteEditActivityEvent);
  uint64_t v191 = v51;
  v203 = v52;
  sub_1C3D8C300(v51 + (void)v52 * v53, v190, type metadata accessor for NoteEditActivityEvent);
  swift_getAtKeyPath();
  uint64_t v54 = v184;
  swift_getAtKeyPath();
  uint64_t v55 = v54;
  LODWORD(v213) = v216(v48, v54);
  if (v5)
  {
    uint64_t v180 = *v204;
    uint64_t v181 = v208;
    (*v204)(v55, v208);
    v180(v48, v181);
    sub_1C3D8C368(v190, type metadata accessor for NoteEditActivityEvent);
    sub_1C3D8C368(v189, type metadata accessor for NoteEditActivityEvent);
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  uint64_t v212 = v50;
  v188 = (char *)v53;
  uint64_t v56 = (char *)*v204;
  uint64_t v57 = v208;
  (*v204)(v55, v208);
  v201 = v56;
  ((void (*)(char *, uint64_t))v56)(v48, v57);
  uint64_t v49 = v188;
  sub_1C3D8C368(v190, type metadata accessor for NoteEditActivityEvent);
  sub_1C3D8C368(v189, type metadata accessor for NoteEditActivityEvent);
  uint64_t v50 = (uint64_t)(v49 + 2);
  uint64_t v40 = v202;
  if ((uint64_t)(v49 + 2) >= v202) {
    goto LABEL_21;
  }
  uint64_t v194 = (void)v203 * v212;
  uint64_t v58 = v191;
  uint64_t v192 = (void)v203 * v50;
  uint64_t v59 = (uint64_t)v187;
  uint64_t v60 = (uint64_t)v198;
  do
  {
    uint64_t v212 = v50;
    sub_1C3D8C300(v58 + v192, v60, type metadata accessor for NoteEditActivityEvent);
    sub_1C3D8C300(v58 + v194, v59, type metadata accessor for NoteEditActivityEvent);
    uint64_t v61 = v193;
    swift_getAtKeyPath();
    unint64_t v62 = v197;
    swift_getAtKeyPath();
    int v63 = v216(v61, v62);
    uint64_t v64 = v208;
    uint64_t v65 = (void (*)(char *, uint64_t))v201;
    ((void (*)(char *, uint64_t))v201)(v62, v208);
    v65(v61, v64);
    sub_1C3D8C368(v59, type metadata accessor for NoteEditActivityEvent);
    sub_1C3D8C368(v60, type metadata accessor for NoteEditActivityEvent);
    if ((v213 ^ v63))
    {
      unint64_t v5 = 0;
      uint64_t v44 = v205;
      uint64_t v48 = v207;
      uint64_t v50 = v212;
      uint64_t v49 = v188;
      uint64_t v40 = v202;
      if (v213) {
        goto LABEL_22;
      }
LABEL_55:
      uint64_t v47 = v214;
      if (v50 < v40) {
        goto LABEL_36;
      }
LABEL_56:
      if (v50 < (uint64_t)v49) {
        goto LABEL_150;
      }
      long long v97 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v212 = v50;
      if (isUniquelyReferenced_nonNull_native) {
        uint64_t v47 = v97;
      }
      else {
        uint64_t v47 = sub_1C3D70A34(0, *((void *)v97 + 2) + 1, 1, v97);
      }
      unint64_t v100 = *((void *)v47 + 2);
      unint64_t v99 = *((void *)v47 + 3);
      unint64_t v101 = v100 + 1;
      if (v100 >= v99 >> 1) {
        uint64_t v47 = sub_1C3D70A34((char *)(v99 > 1), v100 + 1, 1, v47);
      }
      *((void *)v47 + 2) = v101;
      uint64_t v102 = v47 + 32;
      unint64_t v103 = &v47[16 * v100 + 32];
      uint64_t v104 = v212;
      *(void *)unint64_t v103 = v49;
      *((void *)v103 + 1) = v104;
      if (v100)
      {
        v214 = v47;
        v203 = v47 + 32;
        while (1)
        {
          unint64_t v105 = v101 - 1;
          if (v101 >= 4)
          {
            unint64_t v110 = &v102[16 * v101];
            uint64_t v111 = *((void *)v110 - 8);
            uint64_t v112 = *((void *)v110 - 7);
            BOOL v116 = __OFSUB__(v112, v111);
            uint64_t v113 = v112 - v111;
            if (v116) {
              goto LABEL_135;
            }
            uint64_t v115 = *((void *)v110 - 6);
            uint64_t v114 = *((void *)v110 - 5);
            BOOL v116 = __OFSUB__(v114, v115);
            uint64_t v108 = v114 - v115;
            char v109 = v116;
            if (v116) {
              goto LABEL_136;
            }
            unint64_t v117 = v101 - 2;
            uint64_t v118 = &v102[16 * v101 - 32];
            uint64_t v120 = *(void *)v118;
            uint64_t v119 = *((void *)v118 + 1);
            BOOL v116 = __OFSUB__(v119, v120);
            uint64_t v121 = v119 - v120;
            if (v116) {
              goto LABEL_138;
            }
            BOOL v116 = __OFADD__(v108, v121);
            uint64_t v122 = v108 + v121;
            if (v116) {
              goto LABEL_141;
            }
            if (v122 >= v113)
            {
              uint64_t v140 = &v102[16 * v105];
              uint64_t v142 = *(void *)v140;
              uint64_t v141 = *((void *)v140 + 1);
              BOOL v116 = __OFSUB__(v141, v142);
              uint64_t v143 = v141 - v142;
              if (v116) {
                goto LABEL_145;
              }
              BOOL v133 = v108 < v143;
              goto LABEL_94;
            }
          }
          else
          {
            if (v101 != 3)
            {
              uint64_t v134 = *((void *)v47 + 4);
              uint64_t v135 = *((void *)v47 + 5);
              BOOL v116 = __OFSUB__(v135, v134);
              uint64_t v127 = v135 - v134;
              char v128 = v116;
              goto LABEL_88;
            }
            uint64_t v107 = *((void *)v47 + 4);
            uint64_t v106 = *((void *)v47 + 5);
            BOOL v116 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            char v109 = v116;
          }
          if (v109) {
            goto LABEL_137;
          }
          unint64_t v117 = v101 - 2;
          char v123 = &v102[16 * v101 - 32];
          uint64_t v125 = *(void *)v123;
          uint64_t v124 = *((void *)v123 + 1);
          BOOL v126 = __OFSUB__(v124, v125);
          uint64_t v127 = v124 - v125;
          char v128 = v126;
          if (v126) {
            goto LABEL_140;
          }
          uint64_t v129 = &v102[16 * v105];
          uint64_t v131 = *(void *)v129;
          uint64_t v130 = *((void *)v129 + 1);
          BOOL v116 = __OFSUB__(v130, v131);
          uint64_t v132 = v130 - v131;
          if (v116) {
            goto LABEL_143;
          }
          if (__OFADD__(v127, v132)) {
            goto LABEL_144;
          }
          if (v127 + v132 >= v108)
          {
            BOOL v133 = v108 < v132;
LABEL_94:
            if (v133) {
              unint64_t v105 = v117;
            }
            goto LABEL_96;
          }
LABEL_88:
          if (v128) {
            goto LABEL_139;
          }
          long long v136 = &v102[16 * v105];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v116 = __OFSUB__(v137, v138);
          uint64_t v139 = v137 - v138;
          if (v116) {
            goto LABEL_142;
          }
          if (v139 < v127) {
            goto LABEL_105;
          }
LABEL_96:
          unint64_t v144 = v105 - 1;
          if (v105 - 1 >= v101)
          {
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          uint64_t v145 = *v215;
          if (!*v215) {
            goto LABEL_156;
          }
          unint64_t v146 = v5;
          uint64_t v147 = &v102[16 * v144];
          uint64_t v148 = *(void *)v147;
          unint64_t v149 = v105;
          uint64_t v150 = &v102[16 * v105];
          uint64_t v151 = *((void *)v150 + 1);
          uint64_t v152 = *(void *)(v211 + 72);
          unint64_t v153 = v145 + v152 * *(void *)v147;
          unint64_t v154 = v145 + v152 * *(void *)v150;
          uint64_t v213 = v145 + v152 * v151;
          uint64_t v155 = v218;
          swift_retain();
          sub_1C3D87F98(v153, v154, v213, v210, v216, v217, v155);
          unint64_t v5 = v146;
          if (v146)
          {
LABEL_109:
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v44 = v205;
            goto LABEL_128;
          }
          swift_release();
          id v156 = v214;
          if (v151 < v148) {
            goto LABEL_132;
          }
          if (v149 > *((void *)v214 + 2)) {
            goto LABEL_133;
          }
          *(void *)uint64_t v147 = v148;
          uint64_t v102 = v203;
          *(void *)&v203[16 * v144 + 8] = v151;
          unint64_t v157 = *((void *)v156 + 2);
          if (v149 >= v157) {
            goto LABEL_134;
          }
          unint64_t v101 = v157 - 1;
          id v158 = v156;
          memmove(v150, v150 + 16, 16 * (v157 - 1 - v149));
          uint64_t v47 = v158;
          *((void *)v158 + 2) = v157 - 1;
          uint64_t v44 = v205;
          uint64_t v48 = v207;
          if (v157 <= 2) {
            goto LABEL_105;
          }
        }
      }
      unint64_t v101 = 1;
LABEL_105:
      uint64_t v40 = v215[1];
      uint64_t v46 = v212;
      if (v212 >= v40) {
        goto LABEL_111;
      }
      goto LABEL_14;
    }
    uint64_t v50 = v212 + 1;
    uint64_t v40 = v202;
    v58 += (uint64_t)v203;
    unint64_t v5 = 0;
    uint64_t v60 = (uint64_t)v198;
  }
  while (v202 != v212 + 1);
  uint64_t v50 = v202;
  uint64_t v44 = v205;
  uint64_t v48 = v207;
  uint64_t v49 = v188;
LABEL_21:
  if ((v213 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_22:
  if (v50 < (uint64_t)v49) {
    goto LABEL_155;
  }
  uint64_t v47 = v214;
  if ((uint64_t)v49 < v50)
  {
    uint64_t v213 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = (void)v203 * (v50 - 1);
    unint64_t v68 = v49;
    uint64_t v69 = v50 * (void)v203;
    unint64_t v70 = v68;
    uint64_t v71 = (void)v68 * (void)v203;
    do
    {
      if (v70 != (char *)(v50 + v66 - 1))
      {
        uint64_t v72 = v191;
        if (!v191) {
          goto LABEL_158;
        }
        unint64_t v73 = v191 + v71;
        sub_1C3D8C298(v191 + v71, v200, type metadata accessor for NoteEditActivityEvent);
        if (v71 < v67 || v73 >= v72 + v69)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v71 != v67)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_1C3D8C298(v200, v72 + v67, type metadata accessor for NoteEditActivityEvent);
        uint64_t v47 = v214;
      }
      ++v70;
      --v66;
      v67 -= (uint64_t)v203;
      v69 -= (uint64_t)v203;
      v71 += (uint64_t)v203;
    }
    while ((uint64_t)v70 < v50 + v66);
    unint64_t v5 = v213;
    uint64_t v44 = v205;
    uint64_t v48 = v207;
    uint64_t v49 = v188;
    uint64_t v40 = v202;
  }
LABEL_35:
  if (v50 >= v40) {
    goto LABEL_56;
  }
LABEL_36:
  if (__OFSUB__(v50, v49)) {
    goto LABEL_152;
  }
  if (v50 - (uint64_t)v49 >= v185) {
    goto LABEL_56;
  }
  if (__OFADD__(v49, v185)) {
    goto LABEL_153;
  }
  if ((uint64_t)&v49[v185] >= v40) {
    uint64_t v74 = v40;
  }
  else {
    uint64_t v74 = (uint64_t)&v49[v185];
  }
  if (v74 < (uint64_t)v49)
  {
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    swift_release_n();
    __break(1u);
LABEL_157:
    swift_release_n();
    __break(1u);
LABEL_158:
    swift_release_n();
    __break(1u);
LABEL_159:
    swift_release_n();
    __break(1u);
LABEL_160:
    swift_release_n();
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
    return result;
  }
  if (v50 == v74) {
    goto LABEL_56;
  }
  uint64_t v213 = v5;
  uint64_t v75 = *(void *)(v211 + 72);
  uint64_t v76 = v75 * (v50 - 1);
  uint64_t v194 = v75;
  uint64_t v77 = v50 * v75;
  uint64_t v78 = (uint64_t)v186;
  v188 = v49;
  uint64_t v192 = v74;
LABEL_45:
  uint64_t v79 = 0;
  uint64_t v80 = v49;
  uint64_t v212 = v50;
  while (1)
  {
    uint64_t v82 = *v215;
    v203 = (char *)(v77 + v79);
    uint64_t v83 = v209;
    sub_1C3D8C300(v77 + v79 + v82, v209, type metadata accessor for NoteEditActivityEvent);
    uint64_t v202 = v76 + v79;
    uint64_t v84 = v76 + v79 + v82;
    uint64_t v85 = v83;
    sub_1C3D8C300(v84, v78, type metadata accessor for NoteEditActivityEvent);
    uint64_t v86 = v78;
    uint64_t v87 = v195;
    swift_getAtKeyPath();
    uint64_t v88 = v196;
    swift_getAtKeyPath();
    unint64_t v89 = v213;
    char v90 = v216(v87, v88);
    uint64_t v213 = v89;
    if (v89) {
      break;
    }
    char v91 = v90;
    v201 = v80;
    uint64_t v92 = *v204;
    unint64_t v93 = v88;
    uint64_t v94 = v208;
    (*v204)(v93, v208);
    v92(v87, v94);
    sub_1C3D8C368(v86, type metadata accessor for NoteEditActivityEvent);
    sub_1C3D8C368(v209, type metadata accessor for NoteEditActivityEvent);
    uint64_t v78 = v86;
    if ((v91 & 1) == 0)
    {
      uint64_t v81 = v212;
LABEL_52:
      uint64_t v50 = v81 + 1;
      v76 += v194;
      v77 += v194;
      uint64_t v49 = v188;
      if (v50 == v192)
      {
        uint64_t v50 = v192;
        unint64_t v5 = v213;
        uint64_t v47 = v214;
        uint64_t v44 = v205;
        uint64_t v48 = v207;
        goto LABEL_56;
      }
      goto LABEL_45;
    }
    uint64_t v95 = *v215;
    if (!*v215) {
      goto LABEL_157;
    }
    uint64_t v96 = v95 + v76 + v79;
    sub_1C3D8C298(v95 + v77 + v79, v206, type metadata accessor for NoteEditActivityEvent);
    swift_arrayInitWithTakeFrontToBack();
    sub_1C3D8C298(v206, v96, type metadata accessor for NoteEditActivityEvent);
    v79 -= v194;
    uint64_t v80 = v201 + 1;
    uint64_t v81 = v212;
    if ((char *)v212 == v201 + 1) {
      goto LABEL_52;
    }
  }
  v178 = *v204;
  uint64_t v179 = v208;
  (*v204)(v88, v208);
  v178(v87, v179);
  sub_1C3D8C368(v86, type metadata accessor for NoteEditActivityEvent);
  sub_1C3D8C368(v85, type metadata accessor for NoteEditActivityEvent);
  swift_bridgeObjectRelease();
  uint64_t v44 = v205;
LABEL_128:
  *(void *)(v44 + 16) = 0;
  swift_release();
LABEL_129:
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1C3D89E04(void **a1, uint64_t (*a2)(char *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for NoteEditActivityEvent(0) - 8);
  uint64_t v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_1C3D70F74(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1C3D88C50(v12, a2, a3, a4);
  swift_release();
  *a1 = v9;
  return swift_release_n();
}

uint64_t sub_1C3D89F04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersistedActivityEvent.Activities();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v30 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v34 = type metadata accessor for PersistedActivityEvent();
  uint64_t v11 = MEMORY[0x1F4188790](v34);
  uint64_t v33 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v35 = *(void *)(v13 + 72);
    uint64_t v31 = (v18 + 32) & ~v18;
    uint64_t v32 = v2;
    uint64_t v19 = a1 + v31;
    while (2)
    {
      sub_1C3D8C300(v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      uint64_t v20 = (uint64_t)&v15[*(int *)(v34 + 28)];
      sub_1C3D8C300(v20, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
        case 5u:
          sub_1C3D8C368((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          sub_1C3D8C300(v20, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
LABEL_16:
          sub_1C3D8C368((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          sub_1C3D8C298((uint64_t)v15, v33, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          uint64_t v26 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C3C9D2F0(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v36;
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_1C3C9D2F0(v27 > 1, v28 + 1, 1);
            uint64_t v26 = v36;
          }
          *(void *)(v26 + 16) = v28 + 1;
          uint64_t v22 = v35;
          sub_1C3D8C298(v33, v26 + v31 + v28 * v35, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
          goto LABEL_5;
        case 6u:
          uint64_t v24 = sub_1C3DB8B98();
          (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v10, v24);
          goto LABEL_8;
        case 8u:
          goto LABEL_8;
        default:
          sub_1C3D8C368((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
LABEL_8:
          sub_1C3D8C300(v20, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          sub_1C3D8C300((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v22 = v35;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              uint64_t v23 = *((void *)v5 + 5);
              swift_bridgeObjectRelease();
              if (!v23) {
                goto LABEL_16;
              }
              goto LABEL_14;
            case 2:
              uint64_t v25 = *((void *)v5 + 8);
              swift_bridgeObjectRelease();
              uint64_t v22 = v35;
              swift_bridgeObjectRelease();
              if (!v25) {
                goto LABEL_16;
              }
LABEL_14:
              swift_bridgeObjectRelease();
              break;
            case 3:
              sub_1C3D8C368((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
              goto LABEL_16;
            case 6:
              uint64_t v29 = sub_1C3DB8B98();
              (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v5, v29);
              break;
            case 8:
              break;
            default:
              sub_1C3D8C368((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
              break;
          }
          sub_1C3D8C368((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent.Activities);
          sub_1C3D8C368((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
LABEL_5:
          v19 += v22;
          if (--v17) {
            continue;
          }
          uint64_t result = v36;
          break;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C3D8A440(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = type metadata accessor for PersistedActivityEvent();
  uint64_t v5 = MEMORY[0x1F4188790](v27);
  uint64_t v28 = (uint64_t)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v30 = *(void *)(a1 + 16);
  if (v30)
  {
    v24[1] = v2;
    uint64_t v11 = 0;
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = *(void *)(v7 + 72);
    uint64_t v29 = a1 + v12;
    unint64_t v25 = v12;
    uint64_t v26 = (void *)(a2 + 40);
    uint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C3D8C300(v29 + v13 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      uint64_t v15 = a2;
      uint64_t v16 = *(void *)(a2 + 16);
      if (v16)
      {
        uint64_t v17 = v26;
        uint64_t v18 = &v9[*(int *)(v27 + 20)];
        uint64_t v19 = *((void *)v18 + 1);
        uint64_t v20 = *((void *)v18 + 2);
        while (1)
        {
          if (*v17)
          {
            BOOL v21 = *(v17 - 1) == v19 && *v17 == v20;
            if (v21 || (sub_1C3DBB3B8() & 1) != 0) {
              break;
            }
          }
          v17 += 2;
          if (!--v16) {
            goto LABEL_3;
          }
        }
        sub_1C3D8C298((uint64_t)v9, v28, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C3C9D2F0(0, *(void *)(v14 + 16) + 1, 1);
        }
        uint64_t v14 = v31;
        unint64_t v23 = *(void *)(v31 + 16);
        unint64_t v22 = *(void *)(v31 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1C3C9D2F0(v22 > 1, v23 + 1, 1);
          uint64_t v14 = v31;
        }
        *(void *)(v14 + 16) = v23 + 1;
        sub_1C3D8C298(v28, v14 + v25 + v23 * v13, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      }
      else
      {
LABEL_3:
        sub_1C3D8C368((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
      }
      ++v11;
      a2 = v15;
    }
    while (v11 != v30);
    return v31;
  }
  return result;
}

uint64_t sub_1C3D8A6E0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3D7C3C8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C3D8A6FC(uint64_t a1)
{
  return sub_1C3D7C4C0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C3D8A71C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3D8A754(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C3D7B454(*(id *)(v2 + 16), a1, a2);
}

uint64_t sub_1C3D8A75C(void **a1)
{
  return sub_1C3D7B4F4(a1, *(void *)(v1 + 16));
}

char *keypath_get_selector_activityEventsData()
{
  return sel_activityEventsData;
}

uint64_t sub_1C3D8A778(uint64_t a1)
{
  return sub_1C3D7CBD0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C3D8A780(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C3D8A7C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8A8B8(uint64_t a1, void *a2)
{
  id v39 = a2;
  uint64_t v4 = type metadata accessor for NoteEditActivityEvent(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v40 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v35 - v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v12 = (char *)&v35 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = *(void *)(v10 + 72);
    uint64_t v35 = v2;
    uint64_t v36 = (v15 + 32) & ~v15;
    uint64_t v17 = a1 + v36;
    uint64_t v37 = v16;
    uint64_t v38 = v4;
    while (1)
    {
      sub_1C3D8C300(v17, (uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
      if (v12[*(int *)(v4 + 28)])
      {
        char v18 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        sub_1C3D8C300((uint64_t)v12, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
        if ((v18 & 1) == 0)
        {
          sub_1C3D8C368((uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
          goto LABEL_4;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C3D8C300((uint64_t)v12, (uint64_t)v9, type metadata accessor for NoteEditActivityEvent);
      }
      uint64_t v19 = &v9[*(int *)(v4 + 24)];
      uint64_t v20 = (uint64_t)v9;
      uint64_t v22 = *(void *)v19;
      uint64_t v21 = *((void *)v19 + 1);
      swift_bridgeObjectRetain();
      id v23 = objc_msgSend(v39, sel_cloudAccount);
      if (!v23)
      {
        sub_1C3D8C368(v20, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease();
        uint64_t v9 = (char *)v20;
LABEL_18:
        sub_1C3D8C298((uint64_t)v12, v40, type metadata accessor for NoteEditActivityEvent);
        uint64_t v32 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C3C9D3A8(0, *(void *)(v32 + 16) + 1, 1);
          uint64_t v32 = v41;
        }
        unint64_t v34 = *(void *)(v32 + 16);
        unint64_t v33 = *(void *)(v32 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1C3C9D3A8(v33 > 1, v34 + 1, 1);
          uint64_t v32 = v41;
        }
        *(void *)(v32 + 16) = v34 + 1;
        sub_1C3D8C298(v40, v32 + v36 + v34 * v16, type metadata accessor for NoteEditActivityEvent);
        goto LABEL_5;
      }
      uint64_t v24 = v23;
      uint64_t v25 = v20;
      id v26 = objc_msgSend(v23, sel_userRecordName);

      uint64_t v27 = sub_1C3DB9C38();
      uint64_t v29 = v28;

      if (v22 == v27 && v21 == v29)
      {
        uint64_t v9 = (char *)v25;
        sub_1C3D8C368(v25, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v37;
        uint64_t v4 = v38;
      }
      else
      {
        char v31 = sub_1C3DBB3B8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v9 = (char *)v25;
        sub_1C3D8C368(v25, type metadata accessor for NoteEditActivityEvent);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v37;
        uint64_t v4 = v38;
        if ((v31 & 1) == 0) {
          goto LABEL_18;
        }
      }
LABEL_4:
      sub_1C3D8C368((uint64_t)v12, type metadata accessor for NoteEditActivityEvent);
LABEL_5:
      v17 += v16;
      if (!--v14) {
        return v41;
      }
    }
  }
  return result;
}

uint64_t sub_1C3D8AD00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388DE0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8AE10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8AF1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B010(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

char *sub_1C3D8B11C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C3DBAFF8();
  __break(1u);
  return result;
}

char *sub_1C3D8B208(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B2F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B400(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

char *sub_1C3D8B4F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B5E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B6F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B84C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3D8B9A4(uint64_t a1, char a2, void *a3)
{
  uint64_t v51 = a3;
  uint64_t v6 = type metadata accessor for PersistedActivityEvent();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v45 = (uint64_t)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v44 = (uint64_t)v43 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (uint64_t)v43 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388E18);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (void *)((char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v43[1] = a1;
  v43[2] = v3;
  uint64_t v48 = (uint64_t)v16 + *(int *)(result + 48);
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v46 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v47 = v16;
  while (1)
  {
    sub_1C3C8E848(v18, (uint64_t)v16, &qword_1EA388E18);
    uint64_t v25 = *v16;
    uint64_t v26 = v16[1];
    sub_1C3D8C298(v48, v50, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    uint64_t v27 = (void *)*v51;
    unint64_t v29 = sub_1C3C2A4F8(v25, v26);
    uint64_t v30 = v27[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v27[3] >= v32)
    {
      if (a2)
      {
        uint64_t v35 = v51;
        uint64_t v38 = (void *)*v51;
        if (v28) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v35 = v51;
        sub_1C3D84EB8();
        uint64_t v38 = (void *)*v35;
        if (v33) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      int v34 = a2 & 1;
      uint64_t v35 = v51;
      sub_1C3D8752C(v32, v34);
      unint64_t v36 = sub_1C3C2A4F8(v25, v26);
      if ((v33 & 1) != (v37 & 1)) {
        goto LABEL_23;
      }
      unint64_t v29 = v36;
      uint64_t v38 = (void *)*v35;
      if (v33)
      {
LABEL_3:
        uint64_t v19 = v38[7];
        unint64_t v20 = *(void *)(v49 + 72) * v29;
        uint64_t v21 = v45;
        sub_1C3D8C300(v19 + v20, v45, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        uint64_t v22 = v50;
        if (sub_1C3DB8A98()) {
          uint64_t v23 = v21;
        }
        else {
          uint64_t v23 = v22;
        }
        uint64_t v24 = v44;
        sub_1C3D8C300(v23, v44, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3D8C368(v21, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        sub_1C3D8C368(v22, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
        swift_bridgeObjectRelease();
        sub_1C3D8C234(v24, *(void *)(*v35 + 56) + v20);
        goto LABEL_7;
      }
    }
    v38[(v29 >> 6) + 8] |= 1 << v29;
    id v39 = (uint64_t *)(v38[6] + 16 * v29);
    uint64_t *v39 = v25;
    v39[1] = v26;
    sub_1C3D8C298(v50, v38[7] + *(void *)(v49 + 72) * v29, (uint64_t (*)(void))type metadata accessor for PersistedActivityEvent);
    uint64_t v40 = v38[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_22;
    }
    _OWORD v38[2] = v42;
LABEL_7:
    uint64_t v16 = v47;
    v18 += v46;
    a2 = 1;
    if (!--v17) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_1C3DBB538();
  __break(1u);
  return result;
}

id _sSo20ICCloudSyncingObjectC11NotesSharedE05cloudbC13ActivityEvent3for8fallbackSo0abcgH0CSgAC09PersistedgH0V_AC08FallbackgH0VSgtFZ_0()
{
  if (qword_1EA3859D0 != -1) {
    swift_once();
  }
  type metadata accessor for PersistedActivityEvent();
  sub_1C3D1EDA8(&qword_1EA388E00, (void (*)(uint64_t))type metadata accessor for PersistedActivityEvent);
  uint64_t v0 = sub_1C3DB8188();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB80);
  sub_1C3D8C0E8();
  uint64_t v3 = sub_1C3DB8188();
  unint64_t v5 = v4;
  sub_1C3CE0C34(v0, v2);
  uint64_t v6 = (void *)sub_1C3DB8938();
  if (v5 >> 60 == 15)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = (void *)sub_1C3DB8938();
    sub_1C3CCDF74(v3, v5);
  }
  id v8 = objc_msgSend(objc_allocWithZone((Class)ICCloudSyncingObjectActivityEvent), sel_initWithData_fallbackData_, v6, v7);
  sub_1C3C58FC8(v0, v2);

  sub_1C3C58FC8(v0, v2);
  return v8;
}

unint64_t sub_1C3D8C0E8()
{
  unint64_t result = qword_1EA388DA8;
  if (!qword_1EA388DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB6FBB80);
    sub_1C3D1EDA8((unint64_t *)&unk_1EA388DB0, (void (*)(uint64_t))type metadata accessor for FallbackActivityEvent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388DA8);
  }
  return result;
}

uint64_t sub_1C3D8C18C()
{
  return sub_1C3D822A4(*(void *)(v0 + 16));
}

uint64_t sub_1C3D8C194()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D8C1A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C3D8C1CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
  *a1 = result;
  return result;
}

void sub_1C3D8C1F8()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter(v0);
}

uint64_t sub_1C3D8C224()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C3D8C234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersistedActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3D8C298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3D8C300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C3D8C368(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C3D8C3F0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C3C9D484(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = self;
    uint64_t v5 = (void *)(a1 + 40);
    do
    {
      id v6 = objc_msgSend(v4, sel_valueWithRange_, *(v5 - 1), *v5);
      unint64_t v11 = sub_1C3D8D5A0();
      uint64_t v12 = v2;
      *(void *)&long long v10 = v6;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1C3C9D484(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v12;
      }
      v5 += 2;
      *(void *)(v2 + 16) = v8 + 1;
      sub_1C3C2A5D8(&v10, (_OWORD *)(v2 + 32 * v8 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3D8C500(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C3C9D3E4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C877C220](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      unint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_rangeValue);
      uint64_t v10 = v9;

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C3C9D3E4(v11 > 1, v12 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id static ICTTMergeableString.Location.== infix(_:_:)(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

uint64_t sub_1C3D8C694()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3D8C6C0()
{
  return 0x6F697463656C6573;
}

uint64_t sub_1C3D8C6E0(uint64_t a1)
{
  unint64_t v2 = sub_1C3D8C794();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D8C71C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D8C794();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICTTMergeableString.Location.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3D8CF20(a1, &qword_1EA388F20, (void (*)(void))sub_1C3D8C794, a2);
}

unint64_t sub_1C3D8C794()
{
  unint64_t result = qword_1EA388F28;
  if (!qword_1EA388F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F28);
  }
  return result;
}

uint64_t ICTTMergeableString.Location.encode(to:)(void *a1)
{
  return sub_1C3D8D13C(a1, &qword_1EA388F30, (void (*)(void))sub_1C3D8C794);
}

BOOL static ICTTMergeableString.Location.< infix(_:_:)(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

void ICTTMergeableString.Location.hash(into:)()
{
  id v1 = *v0;
  sub_1C3DBA8F8();
}

uint64_t sub_1C3D8C8B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ICTTMergeableString.Location.init(from:)(a1, a2);
}

uint64_t sub_1C3D8C8C8(void *a1)
{
  return ICTTMergeableString.Location.encode(to:)(a1);
}

BOOL sub_1C3D8C8E0(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

BOOL sub_1C3D8C910(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_compare_, *a1) != (id)-1;
}

BOOL sub_1C3D8C940(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) != (id)-1;
}

BOOL sub_1C3D8C970(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_compare_, *a1) == (id)-1;
}

void sub_1C3D8C9A4()
{
  id v1 = *v0;
  sub_1C3DBA8F8();
}

id sub_1C3D8CA00(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

void ICTTMergeableString.location(for:affinity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  objc_msgSend(v4, sel_generateIdsForLocalChanges);
  id v8 = objc_msgSend(self, sel_valueWithRange_, a1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3870C8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C3DD3D30;
  *(void *)(v9 + 56) = sub_1C3D8D5A0();
  *(void *)(v9 + 32) = v8;
  id v10 = v8;
  unint64_t v11 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v4, sel_selectionForCharacterRanges_selectionAffinity_, v11, a2);

  *a3 = v12;
}

void ICTTMergeableString.canResolveCharacterLocation(for:)(void *a1)
{
  id v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1C3D8D5A0();
  unint64_t v3 = sub_1C3DBA018();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C877C220](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_rangeValue);

    return;
  }
  __break(1u);
}

void ICTTMergeableString.characterLocation(for:)(void *a1)
{
  id v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1C3D8D5A0();
  unint64_t v3 = sub_1C3DBA018();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C877C220](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_rangeValue);

    return;
  }
  __break(1u);
}

uint64_t sub_1C3D8CD44()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D8CD88()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D8CDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F697463656C6573 && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C3DBB3B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C3D8CE6C(uint64_t a1)
{
  unint64_t v2 = sub_1C3D8D5E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D8CEA8(uint64_t a1)
{
  unint64_t v2 = sub_1C3D8D5E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ICTTMergeableString.Selection.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3D8CF20(a1, &qword_1EA388F40, (void (*)(void))sub_1C3D8D5E0, a2);
}

uint64_t sub_1C3D8CF20@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1C3DBB6B8();
  if (!v4)
  {
    uint64_t v10 = v7;
    sub_1C3D0680C();
    uint64_t v11 = v22;
    sub_1C3DBB108();
    uint64_t v12 = v20;
    unint64_t v13 = v21;
    id v14 = objc_allocWithZone((Class)ICTTMergeableStringSelection);
    uint64_t v15 = (void *)sub_1C3DB8938();
    id v16 = objc_msgSend(v14, sel_initWithData_, v15);
    sub_1C3C58FC8(v12, v13);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
    *uint64_t v19 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t ICTTMergeableString.Selection.encode(to:)(void *a1)
{
  return sub_1C3D8D13C(a1, &qword_1EA388F50, (void (*)(void))sub_1C3D8D5E0);
}

uint64_t sub_1C3D8D13C(void *a1, uint64_t *a2, void (*a3)(void))
{
  id v16 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16();
  sub_1C3DBB6D8();
  id v10 = objc_msgSend(v9, sel_serialize);
  uint64_t v11 = sub_1C3DB8958();
  unint64_t v13 = v12;

  uint64_t v17 = v11;
  unint64_t v18 = v13;
  sub_1C3D067B8();
  sub_1C3DBB1E8();
  sub_1C3C58FC8(v11, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id ICTTMergeableString.Selection.location.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_locationOnlySelection);
  *a1 = result;
  return result;
}

uint64_t _sSo19ICTTMergeableStringC11NotesSharedE8LocationV9hashValueSivg_0()
{
  id v1 = *v0;
  sub_1C3DBB5D8();
  id v2 = v1;
  sub_1C3DBA8F8();

  return sub_1C3DBB608();
}

uint64_t sub_1C3D8D358@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ICTTMergeableString.Selection.init(from:)(a1, a2);
}

uint64_t sub_1C3D8D370(void *a1)
{
  return ICTTMergeableString.Selection.encode(to:)(a1);
}

uint64_t sub_1C3D8D388()
{
  id v1 = *v0;
  sub_1C3DBB5D8();
  id v2 = v1;
  sub_1C3DBA8F8();

  return sub_1C3DBB608();
}

void ICTTMergeableString.selection(for:affinity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  objc_msgSend(v3, sel_generateIdsForLocalChanges);
  sub_1C3D8C3F0(a1);
  uint64_t v7 = (void *)sub_1C3DB9FF8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v3, sel_selectionForCharacterRanges_selectionAffinity_, v7, a2);

  *a3 = v8;
}

BOOL ICTTMergeableString.canResolveCharacterRanges(for:)(void *a1)
{
  id v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1C3D8D5A0();
  unint64_t v3 = sub_1C3DBA018();

  uint64_t v4 = sub_1C3D8C500(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

uint64_t ICTTMergeableString.characterRanges(for:)(void *a1)
{
  id v2 = objc_msgSend(v1, sel_characterRangesForSelection_, *a1);
  sub_1C3D8D5A0();
  unint64_t v3 = sub_1C3DBA018();

  uint64_t v4 = sub_1C3D8C500(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1C3D8D5A0()
{
  unint64_t result = qword_1EA388F38;
  if (!qword_1EA388F38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388F38);
  }
  return result;
}

unint64_t sub_1C3D8D5E0()
{
  unint64_t result = qword_1EA388F48;
  if (!qword_1EA388F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F48);
  }
  return result;
}

unint64_t sub_1C3D8D638()
{
  unint64_t result = qword_1EA388F58;
  if (!qword_1EA388F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F58);
  }
  return result;
}

unint64_t sub_1C3D8D690()
{
  unint64_t result = qword_1EA388F60;
  if (!qword_1EA388F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F60);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICTTMergeableString.Location()
{
  return &type metadata for ICTTMergeableString.Location;
}

ValueMetadata *type metadata accessor for ICTTMergeableString.Selection()
{
  return &type metadata for ICTTMergeableString.Selection;
}

ValueMetadata *_s9SelectionV10CodingKeysOMa()
{
  return &_s9SelectionV10CodingKeysON;
}

unsigned char *_s9SelectionV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C3D8D7B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8LocationV10CodingKeysOMa()
{
  return &_s8LocationV10CodingKeysON;
}

unint64_t sub_1C3D8D7F4()
{
  unint64_t result = qword_1EA388F68;
  if (!qword_1EA388F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F68);
  }
  return result;
}

unint64_t sub_1C3D8D84C()
{
  unint64_t result = qword_1EA388F70;
  if (!qword_1EA388F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F70);
  }
  return result;
}

unint64_t sub_1C3D8D8A4()
{
  unint64_t result = qword_1EA388F78;
  if (!qword_1EA388F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F78);
  }
  return result;
}

unint64_t sub_1C3D8D8FC()
{
  unint64_t result = qword_1EA388F80;
  if (!qword_1EA388F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F80);
  }
  return result;
}

unint64_t sub_1C3D8D954()
{
  unint64_t result = qword_1EA388F88;
  if (!qword_1EA388F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F88);
  }
  return result;
}

unint64_t sub_1C3D8D9AC()
{
  unint64_t result = qword_1EA388F90;
  if (!qword_1EA388F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA388F90);
  }
  return result;
}

uint64_t EditNoteActivity.accountID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditNoteActivity.replicaID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditNoteActivity() + 24);
  uint64_t v4 = sub_1C3DB8B98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for EditNoteActivity()
{
  uint64_t result = qword_1EB6FB878;
  if (!qword_1EB6FB878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EditNoteActivity.noteTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EditNoteActivity() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditNoteActivity.noteTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EditNoteActivity() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*EditNoteActivity.noteTitle.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::EditNoteActivity::NoteAttributes_optional __swiftcall EditNoteActivity.NoteAttributes.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C3DBB038();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t EditNoteActivity.NoteAttributes.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x726F707075736E75;
      break;
    case 3:
      unint64_t result = 0x6C6F686563616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3D8DCE8(unsigned __int8 *a1, char *a2)
{
  return sub_1C3CE6BF4(*a1, *a2);
}

uint64_t sub_1C3D8DCF4()
{
  return sub_1C3C8EB8C();
}

uint64_t sub_1C3D8DCFC()
{
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3D8DDD0()
{
  return sub_1C3C8ED90();
}

NotesShared::EditNoteActivity::NoteAttributes_optional sub_1C3D8DDD8(Swift::String *a1)
{
  return EditNoteActivity.NoteAttributes.init(rawValue:)(*a1);
}

void sub_1C3D8DDE4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x80000001C3DF1C70;
  unint64_t v3 = 0xD000000000000011;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      unint64_t v3 = 0x6C61636F6CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x726F707075736E75;
      a1[1] = 0xEB00000000646574;
      break;
    case 3:
      *a1 = 0x6C6F686563616C70;
      a1[1] = 0xEB00000000726564;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C3D8DE90()
{
  return sub_1C3DB9FB8();
}

uint64_t sub_1C3D8DEF0()
{
  return sub_1C3DB9F58();
}

uint64_t EditNoteActivity.noteAttributes.getter()
{
  type metadata accessor for EditNoteActivity();
  return swift_bridgeObjectRetain();
}

uint64_t EditNoteActivity.noteAttributes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EditNoteActivity() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

void (*EditNoteActivity.noteAttributes.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t EditNoteActivity.init(noteID:accountID:replicaID:noteTitle:noteAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  unint64_t v18 = (int *)type metadata accessor for EditNoteActivity();
  uint64_t v19 = (void *)((char *)a9 + v18[7]);
  *a9 = a1;
  a9[1] = a2;
  *uint64_t v19 = a6;
  v19[1] = a7;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v20 = (char *)a9 + v18[6];
  uint64_t v21 = sub_1C3DB8B98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a5, v21);
  *(void *)((char *)a9 + v18[8]) = a8;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EditNoteActivity.validate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3C5BDE8((uint64_t)&unk_1F1F28FC0);
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for EditNoteActivity() + 32));
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C3D900A0(v2, v3);
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    sub_1C3DBAC68();
    sub_1C3DB9D68();
    swift_bridgeObjectRetain();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3D90F14();
    sub_1C3DBA448();
    sub_1C3DB9D68();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3D2D3F0();
    swift_allocError();
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0xE000000000000000;
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 0;
    *(unsigned char *)(v5 + 32) = 3;
    swift_willThrow();
  }
  else
  {
    swift_release();
  }
}

uint64_t EditNoteActivity.withNote<A>(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  uint64_t v6[4] = a3;
  v6[5] = a4;
  id v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C3D8E28C, 0, 0);
}

uint64_t sub_1C3D8E28C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(uint64_t **)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 64) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 32) = v4;
  long long v7 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 56) = v3;
  id v8 = (id)v7;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C3D8E3AC;
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 16);
  return NSManagedObjectContext.perform<A>(_:)(v11, (uint64_t)sub_1C3D90FB0, v6, v10);
}

uint64_t sub_1C3D8E3AC()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C3D8E52C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C3D8E4C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3D8E4C8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3D8E52C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1C3D8E598(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  swift_bridgeObjectRetain();
  id v6 = a3;
  long long v7 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_noteWithIdentifier_context_, v7, v6);

  if (v8)
  {
    a4(v8);
  }
  else
  {
    type metadata accessor for ICError(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386590);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
    *(void *)(inited + 32) = sub_1C3DB9C38();
    *(void *)(inited + 40) = v10;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD000000000000020;
    *(void *)(inited + 56) = 0x80000001C3DF84D0;
    sub_1C3C81620(inited);
    sub_1C3D91E50((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
    sub_1C3DB8768();
    swift_willThrow();
  }
}

uint64_t sub_1C3D8E78C()
{
  uint64_t result = 0x444965746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49746E756F636361;
      break;
    case 2:
      uint64_t result = 0x496163696C706572;
      break;
    case 3:
      uint64_t result = 0x6C74695465746F6ELL;
      break;
    case 4:
      uint64_t result = 0x7274744165746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3D8E84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3D90CC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C3D8E874(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1C3D8E880(uint64_t a1)
{
  unint64_t v2 = sub_1C3D90FD4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C3D8E8BC(uint64_t a1)
{
  unint64_t v2 = sub_1C3D90FD4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EditNoteActivity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D90FD4();
  sub_1C3DBB6D8();
  char v16 = 0;
  sub_1C3DBB1A8();
  if (!v2)
  {
    char v15 = 1;
    sub_1C3DBB1A8();
    uint64_t v9 = type metadata accessor for EditNoteActivity();
    char v14 = 2;
    sub_1C3DB8B98();
    sub_1C3D91E50(&qword_1EB6FBC10, MEMORY[0x1E4F27990]);
    sub_1C3DBB1E8();
    char v13 = 3;
    sub_1C3DBB178();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 32));
    v11[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBDF8);
    sub_1C3D9107C(&qword_1EB6FBE00, (void (*)(void))sub_1C3D91028);
    sub_1C3DBB1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EditNoteActivity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v28 = sub_1C3DB8B98();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388FA8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = type metadata accessor for EditNoteActivity();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (uint64_t *)((char *)v9 + *(int *)(v7 + 28));
  *uint64_t v10 = 0;
  v10[1] = 0;
  unint64_t v29 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3D90FD4();
  uint64_t v11 = (uint64_t)v30;
  sub_1C3DBB6B8();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v4;
    uint64_t v30 = a1;
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    uint64_t v15 = v28;
    char v36 = 0;
    *uint64_t v9 = sub_1C3DBB0C8();
    v9[1] = v16;
    char v35 = 1;
    void v9[2] = sub_1C3DBB0C8();
    v9[3] = v17;
    char v34 = 2;
    sub_1C3D91E50(&qword_1EA386F28, MEMORY[0x1E4F27990]);
    uint64_t v23 = v12;
    sub_1C3DBB108();
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v9 + *(int *)(v6 + 24), v23, v15);
    char v33 = 3;
    uint64_t v18 = sub_1C3DBB078();
    uint64_t v23 = 0;
    uint64_t v19 = v29;
    *unint64_t v29 = v18;
    v19[1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBDF8);
    char v32 = 4;
    sub_1C3D9107C(&qword_1EA388FB0, (void (*)(void))sub_1C3D910EC);
    sub_1C3DBB108();
    (*(void (**)(void, uint64_t))(v13 + 8))(0, v14);
    *(uint64_t *)((char *)v9 + *(int *)(v6 + 32)) = v31;
    sub_1C3CEBC54((uint64_t)v9, v24);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
    return sub_1C3D91140((uint64_t)v9);
  }
}

uint64_t sub_1C3D8F04C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditNoteActivity.init(from:)(a1, a2);
}

uint64_t sub_1C3D8F064(void *a1)
{
  return EditNoteActivity.encode(to:)(a1);
}

uint64_t EditNoteActivity.init(note:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  if (!v4) {
    goto LABEL_18;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C3DB9C38();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_account);
  if (!v9) {
    goto LABEL_17;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_identifier);
  if (!v11)
  {
    swift_bridgeObjectRelease();

LABEL_18:
    uint64_t v28 = type metadata accessor for EditNoteActivity();
    uint64_t v24 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    uint64_t v27 = v28;
    uint64_t v25 = a2;
    uint64_t v26 = 1;
    goto LABEL_19;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1C3DB9C38();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a1, sel_title);
  if (!v16)
  {
    swift_bridgeObjectRelease();

LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v17 = v16;
  uint64_t v30 = sub_1C3DB9C38();
  uint64_t v19 = v18;

  uint64_t v35 = MEMORY[0x1E4FBC870];
  if (objc_msgSend(a1, sel_needsInitialFetchFromCloud)) {
    sub_1C3CD4C38(&v31, 3);
  }
  if (objc_msgSend(a1, sel_isPasswordProtected)) {
    sub_1C3CD4C38(&v32, 0);
  }
  if (objc_msgSend(a1, sel_isUnsupported)) {
    sub_1C3CD4C38(&v33, 2);
  }
  if (objc_msgSend(v10, sel_isLocalAccount)) {
    sub_1C3CD4C38(&v34, 1);
  }
  id v20 = objc_msgSend(a1, sel_currentReplicaID);
  uint64_t v21 = type metadata accessor for EditNoteActivity();
  sub_1C3DB8B58();

  uint64_t v22 = v35;
  uint64_t v23 = (uint64_t *)((char *)a2 + *(int *)(v21 + 28));
  *a2 = v6;
  a2[1] = v8;
  *uint64_t v23 = v30;
  v23[1] = v19;
  a2[2] = v13;
  a2[3] = v15;
  *(uint64_t *)((char *)a2 + *(int *)(v21 + 32)) = v22;
  uint64_t v24 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v25 = a2;
  uint64_t v26 = 0;
  uint64_t v27 = v21;
LABEL_19:
  return v24(v25, v26, 1, v27);
}

uint64_t EditNoteActivity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C3D8F34C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t EditNoteActivity.hash(into:)()
{
  return sub_1C3DB9B18();
}

uint64_t EditNoteActivity.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D8F518()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3D8F5FC()
{
  return sub_1C3DB9B18();
}

uint64_t sub_1C3D8F6D0()
{
  return sub_1C3DBB608();
}

unint64_t EditNoteActivity.description.getter()
{
  return 0xD000000000000016;
}

unint64_t static EditNoteActivity.activityIdentifier.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t EditNoteActivity.metadata.getter()
{
  uint64_t v0 = sub_1C3DB8E28();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C3DB8E48();
  sub_1C3DB8E18();
  return sub_1C3DB8E38();
}

unint64_t sub_1C3D8F8F0()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1C3D8F90C()
{
  sub_1C3DB8E28();
  swift_task_alloc();
  sub_1C3DB8E48();
  sub_1C3DB8E18();
  sub_1C3DB8E38();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_1C3D91DF4(v1);
}

unint64_t EditNoteActivity.NoteAttributes.description.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x726F707075736E75;
      break;
    case 3:
      unint64_t result = 0x6C6F686563616C70;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C3D8FA78()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x726F707075736E75;
      break;
    case 3:
      unint64_t result = 0x6C6F686563616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C3D8FB18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386328);
  uint64_t result = sub_1C3DBAC28();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1C3DBA8D8();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C3D8FD78(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
    goto LABEL_36;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE20);
    uint64_t v7 = sub_1C3DBAC28();
    uint64_t v8 = v7;
    uint64_t v29 = a2;
    if (a2 < 1) {
      unint64_t v9 = 0;
    }
    else {
      unint64_t v9 = *a1;
    }
    uint64_t v10 = 0;
    uint64_t v11 = v7 + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        uint64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_39;
        }
        if (v14 >= v29) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v14];
        ++v10;
        if (!v15)
        {
          uint64_t v10 = v14 + 1;
          if (v14 + 1 >= v29) {
            goto LABEL_36;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v10 = v14 + 2;
            if (v14 + 2 >= v29) {
              goto LABEL_36;
            }
            unint64_t v15 = a1[v10];
            if (!v15)
            {
              uint64_t v16 = v14 + 3;
              if (v16 >= v29) {
                goto LABEL_36;
              }
              unint64_t v15 = a1[v16];
              if (!v15)
              {
                while (1)
                {
                  uint64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_40;
                  }
                  if (v10 >= v29) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = a1[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      char v17 = *(unsigned char *)(*(void *)(v4 + 48) + v13);
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C3DBB608();
      uint64_t v19 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          JUMPOUT(0x1C3D90090);
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v11 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_34:
      *(void *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v8 + 48) + v22) = v17;
      ++*(void *)(v8 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_38;
      }
      if (!v5)
      {
LABEL_36:
        swift_release();
        return v8;
      }
    }
  }
  return v4;
}

uint64_t sub_1C3D900A0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1C3D90228((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1C3D90228((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C877E600](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C3D90228(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  int64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v50 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v53 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    uint64_t v57 = 0;
LABEL_6:
    while (2)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v6 << 6);
      }
      else
      {
        int64_t v13 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_87;
        }
        if (v13 >= v53) {
          goto LABEL_84;
        }
        unint64_t v14 = *(void *)(v50 + 8 * v13);
        ++v6;
        if (!v14)
        {
          int64_t v6 = v13 + 1;
          if (v13 + 1 >= v53) {
            goto LABEL_84;
          }
          unint64_t v14 = *(void *)(v50 + 8 * v6);
          if (!v14)
          {
            int64_t v6 = v13 + 2;
            if (v13 + 2 >= v53) {
              goto LABEL_84;
            }
            unint64_t v14 = *(void *)(v50 + 8 * v6);
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v53) {
                goto LABEL_84;
              }
              unint64_t v14 = *(void *)(v50 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v6 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_89;
                  }
                  if (v6 >= v53) {
                    goto LABEL_84;
                  }
                  unint64_t v14 = *(void *)(v50 + 8 * v6);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v6 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
      }
      int v16 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v12);
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_1C3DBB608();
      uint64_t v18 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v19 = v17 & ~v18;
      if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        continue;
      }
      break;
    }
    int64_t v55 = v6;
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0x80000001C3DF1C70;
      unint64_t v22 = 0xD000000000000011;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v19))
      {
        case 1:
          unint64_t v21 = 0xE500000000000000;
          unint64_t v22 = 0x6C61636F6CLL;
          break;
        case 2:
          unint64_t v22 = 0x726F707075736E75;
          uint64_t v23 = 6579572;
          goto LABEL_28;
        case 3:
          unint64_t v22 = 0x6C6F686563616C70;
          uint64_t v23 = 7497060;
LABEL_28:
          unint64_t v21 = v23 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        default:
          break;
      }
      unint64_t v24 = 0x80000001C3DF1C70;
      unint64_t v25 = 0xD000000000000011;
      switch(v16)
      {
        case 1:
          unint64_t v24 = 0xE500000000000000;
          if (v22 != 0x6C61636F6CLL) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 2:
          unint64_t v25 = 0x726F707075736E75;
          unint64_t v24 = 0xEB00000000646574;
          goto LABEL_33;
        case 3:
          unint64_t v24 = 0xEB00000000726564;
          if (v22 != 0x6C6F686563616C70) {
            goto LABEL_35;
          }
          goto LABEL_34;
        default:
LABEL_33:
          if (v22 != v25) {
            goto LABEL_35;
          }
LABEL_34:
          if (v21 == v24)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v5 = a3;
LABEL_41:
            *(unint64_t *)((char *)a1 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
            uint64_t v4 = a4;
            int64_t v6 = v55;
            if (!__OFADD__(v57, 1))
            {
              ++v57;
              goto LABEL_6;
            }
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
            JUMPOUT(0x1C3D90A50);
          }
LABEL_35:
          char v26 = sub_1C3DBB3B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = a3;
          if (v26) {
            goto LABEL_41;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          {
            uint64_t v4 = a4;
            int64_t v6 = v55;
            goto LABEL_6;
          }
          break;
      }
    }
  }
  uint64_t v49 = a3 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a3 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & *(void *)(a3 + 56);
  int64_t v51 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v30 = a4 + 56;
  uint64_t v57 = 0;
LABEL_47:
  while (2)
  {
    if (v29)
    {
      unint64_t v31 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v32 = v31 | (v6 << 6);
LABEL_63:
      unint64_t v56 = v32;
      int v36 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v32);
      sub_1C3DBB5D8();
      sub_1C3DB9D08();
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1C3DBB608();
      uint64_t v38 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v39 = v37 & ~v38;
      if (((*(void *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
        continue;
      }
      int64_t v54 = v6;
      uint64_t v40 = ~v38;
      while (1)
      {
        unint64_t v41 = 0x80000001C3DF1C70;
        unint64_t v42 = 0xD000000000000011;
        switch(*(unsigned char *)(*(void *)(v4 + 48) + v39))
        {
          case 1:
            unint64_t v41 = 0xE500000000000000;
            unint64_t v42 = 0x6C61636F6CLL;
            break;
          case 2:
            unint64_t v42 = 0x726F707075736E75;
            uint64_t v43 = 6579572;
            goto LABEL_69;
          case 3:
            unint64_t v42 = 0x6C6F686563616C70;
            uint64_t v43 = 7497060;
LABEL_69:
            unint64_t v41 = v43 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          default:
            break;
        }
        unint64_t v44 = 0x80000001C3DF1C70;
        unint64_t v45 = 0xD000000000000011;
        switch(v36)
        {
          case 1:
            unint64_t v44 = 0xE500000000000000;
            if (v42 != 0x6C61636F6CLL) {
              goto LABEL_76;
            }
            goto LABEL_75;
          case 2:
            unint64_t v45 = 0x726F707075736E75;
            unint64_t v44 = 0xEB00000000646574;
            goto LABEL_74;
          case 3:
            unint64_t v44 = 0xEB00000000726564;
            if (v42 != 0x6C6F686563616C70) {
              goto LABEL_76;
            }
            goto LABEL_75;
          default:
LABEL_74:
            if (v42 != v45) {
              goto LABEL_76;
            }
LABEL_75:
            if (v41 == v44)
            {
              swift_bridgeObjectRelease_n();
LABEL_82:
              int64_t v6 = v54;
              *(unint64_t *)((char *)a1 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
              uint64_t v4 = a4;
              uint64_t v5 = a3;
              if (__OFADD__(v57, 1)) {
                goto LABEL_86;
              }
              ++v57;
              goto LABEL_47;
            }
LABEL_76:
            char v46 = sub_1C3DBB3B8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v46) {
              goto LABEL_82;
            }
            unint64_t v39 = (v39 + 1) & v40;
            uint64_t v4 = a4;
            if (((*(void *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
            {
              uint64_t v5 = a3;
              int64_t v6 = v54;
              goto LABEL_47;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v33 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_88;
  }
  if (v33 >= v51) {
    goto LABEL_84;
  }
  unint64_t v34 = *(void *)(v49 + 8 * v33);
  ++v6;
  if (v34) {
    goto LABEL_62;
  }
  int64_t v6 = v33 + 1;
  if (v33 + 1 >= v51) {
    goto LABEL_84;
  }
  unint64_t v34 = *(void *)(v49 + 8 * v6);
  if (v34) {
    goto LABEL_62;
  }
  int64_t v6 = v33 + 2;
  if (v33 + 2 >= v51) {
    goto LABEL_84;
  }
  unint64_t v34 = *(void *)(v49 + 8 * v6);
  if (v34)
  {
LABEL_62:
    unint64_t v29 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v6 << 6);
    goto LABEL_63;
  }
  int64_t v35 = v33 + 3;
  if (v35 >= v51) {
    goto LABEL_84;
  }
  unint64_t v34 = *(void *)(v49 + 8 * v35);
  if (v34)
  {
    int64_t v6 = v35;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v6 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      goto LABEL_90;
    }
    if (v6 >= v51) {
      break;
    }
    unint64_t v34 = *(void *)(v49 + 8 * v6);
    ++v35;
    if (v34) {
      goto LABEL_62;
    }
  }
LABEL_84:
  swift_retain();
  return sub_1C3D8FD78(a1, a2, v57, v5);
}