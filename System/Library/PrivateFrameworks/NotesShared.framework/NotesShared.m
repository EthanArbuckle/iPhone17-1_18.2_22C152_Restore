id getCKRecordClass()
{
  void *v0;
  id v1;
  void v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCKRecordClass_softClass;
  v7 = getCKRecordClass_softClass;
  if (!getCKRecordClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCKRecordClass_block_invoke;
    v3[3] = &unk_1E64A45A0;
    v3[4] = &v4;
    __getCKRecordClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C3A65184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A65734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A6772C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6777C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A677CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A67F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A67FD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6807C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A68194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A686F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A69200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a19);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a25);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a31);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a37);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v39 - 176);

  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(void *a1, void *a2)
{
  uint64_t v4 = *((unsigned int *)a2 + 2);
  uint64_t v5 = [(id)*a2 hash];
  int8x8_t v6 = (int8x8_t)a1[1];
  if (!*(void *)&v6) {
    return 0;
  }
  unint64_t v7 = v5 ^ v4;
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v7;
    if (v7 >= *(void *)&v6) {
      unint64_t v10 = v7 % *(void *)&v6;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v6 - 1) & v7;
  }
  v11 = *(uint64_t ***)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  for (i = *v11; i; i = (uint64_t *)*i)
  {
    unint64_t v13 = i[1];
    if (v13 == v7)
    {
      if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([(id)i[2] isEqual:*a2] & 1) != 0) {
        return i;
      }
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(void *)&v6) {
          v13 %= *(void *)&v6;
        }
      }
      else
      {
        v13 &= *(void *)&v6 - 1;
      }
      if (v13 != v10) {
        return 0;
      }
    }
  }
  return i;
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  v17 = (void *)(a1 + 16);
  i = operator new(0x28uLL);
  *(void *)i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  *((void *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((void *)i + 4) = 0;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v25 = *(void *)a1;
  v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)i = *v26;
LABEL_39:
    void *v26 = i;
    goto LABEL_40;
  }
  *(void *)i = *v17;
  void *v17 = i;
  *(void *)(v25 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v27 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11) {
        v27 %= v11;
      }
    }
    else
    {
      v27 &= v11 - 1;
    }
    v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3A69798(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    uint8x8_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4) {
            break;
          }
        }
      }
    }
  }
  i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    void *i = *v22;
LABEL_38:
    *unint64_t v22 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    unint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3A699F8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoSubstring *a2)
{
  *(void *)this = *(id *)a2;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((void *)this + 3) = *((id *)a2 + 3);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 6) = 0;
}

void sub_1C3A69CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A69F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6A06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void traverseUnordered(uint64_t a1, void *a2)
{
  uint64_t v15 = a1;
  uint64_t v2 = a2;
  memset(v13, 0, sizeof(v13));
  int v14 = 1065353216;
  long long v12 = 0u;
  memset(v11, 0, sizeof(v11));
  char v10 = 0;
  std::deque<TopoSubstring *>::push_back(v11, &v15);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v13, &v15, &v15);
  for (uint64_t i = *((void *)&v12 + 1); *((void *)&v12 + 1); uint64_t i = *((void *)&v12 + 1))
  {
    uint64_t v4 = i - 1;
    uint64_t v5 = *(void *)(*(void *)(*((void *)&v11[0] + 1) + (((unint64_t)(v12 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v12 + v4) & 0x1FF));
    *((void *)&v12 + 1) = v4;
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v11, 1);
    v2[2](v2, v5, &v10);
    uint64_t v6 = v5;
    if (v10) {
      break;
    }
    while (1)
    {
      unint64_t v8 = *(char **)(v6 + 48);
      unint64_t v7 = *(char **)(v6 + 56);
      if (v7 - v8 != 8) {
        break;
      }
      uint64_t v6 = *(void *)v8;
      if (*(_DWORD *)(*(void *)v8 + 72) != 1) {
        break;
      }
      v2[2](v2, *(void *)v8, &v10);
      if (v10 || v6 == v5) {
        goto LABEL_15;
      }
    }
    while (v8 != v7)
    {
      uint64_t v9 = 0;
      uint64_t v9 = *(void *)v8;
      if (*(_DWORD *)(v9 + 72) > 1u)
      {
        if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v13, &v9))
        {
          std::deque<TopoSubstring *>::push_back(v11, &v9);
          std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v13, &v9, &v9);
        }
      }
      else
      {
        std::deque<TopoSubstring *>::push_back(v11, &v9);
      }
      v8 += 8;
    }
  }
LABEL_15:
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v11);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v13);
}

void sub_1C3A6A434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

void std::deque<TopoSubstring *>::push_back(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    std::deque<TopoSubstring *>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

uint64_t std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 6) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x200) {
    a2 = 1;
  }
  if (v5 < 0x400) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke(uint64_t result)
{
  return result;
}

void *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x18uLL);
  void *i = 0;
  i[1] = v8;
  i[2] = *a3;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    void *i = *v21;
LABEL_38:
    *uint64_t v21 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }
    else
    {
      v22 &= v9 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3A6A810(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      uint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            *uint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            uint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          uint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint8x8_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void sub_1C3A6ABFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  int8x8_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::deque<TopoSubstring *>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint8x8_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    size_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint8x8_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      std::__split_buffer<TopoSubstring **>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)a1, &v54);
    v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint8x8_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  std::__split_buffer<TopoSubstring **>::push_back(&v54, &v53);
  unint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1C3A6AF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__split_buffer<TopoSubstring **>::push_back(void *a1, void *a2)
{
  unint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(a1[4], v16);
      size_t v19 = &v17[8 * (v16 >> 2)];
      int64_t v20 = (uint64_t *)a1[1];
      unint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        unint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        unint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        unint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      unint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)unint64_t v4 = *a2;
  a1[2] += 8;
}

{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;

  uint64_t v5 = (char *)a1[3];
  unint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    BOOL v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        uint64_t v18 = 1;
      }
      else {
        uint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      size_t v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      uint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      unint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      uint64_t v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      int64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      unint64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

uint64_t std::deque<TopoSubstring *>::~deque[abi:ne180100](void *a1)
{
  unint64_t v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      unint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }
  return std::__split_buffer<TopoSubstring **>::~__split_buffer((uint64_t)a1);
}

uint64_t std::__split_buffer<TopoSubstring **>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void sub_1C3A6B20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6B488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6B570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6B628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6C2C8(_Unwind_Exception *a1)
{
  unint64_t v4 = v3;

  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(a1, *(id **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(uint64_t a1, id *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (id *)*v2;

      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_1C3A6D428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6D7A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6DC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6DE28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6E4F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6E744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::ParseFromArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  v7[0] = 0;
  v7[1] = a2;
  v7[2] = &a2[a3];
  int v8 = a3;
  uint64_t v9 = 0;
  __int16 v10 = 0;
  int v11 = a3;
  long long v12 = xmmword_1C3DD3470;
  int v13 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)this + 32))(this);
  if (!(*(unsigned int (**)(google::protobuf::MessageLite *, void *))(*(void *)this + 64))(this, v7))
  {
LABEL_7:
    BOOL v4 = 0;
    goto LABEL_8;
  }
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 123);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v18, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    goto LABEL_7;
  }
  BOOL v4 = (_BYTE)v10 != 0;
LABEL_8:
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v7);
  return v4;
}

void sub_1C3A6F3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v25 - 64));
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*(void *)this) {
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(this);
  }
  if (*((_DWORD *)this + 13) == -2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 78);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "The total number of bytes read was ");
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 6));
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
}

void sub_1C3A6F6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void sub_1C3A6F874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6FB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A6FE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A702FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *std::vector<TopoSubstring *>::__assign_with_size[abi:ne180100]<TopoSubstring * const*,TopoSubstring * const*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    result = std::vector<TopoSubstring *>::__vallocate[abi:ne180100](v7, v11);
    int v13 = (char *)v7[1];
    long long v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      size_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  long long v12 = (void **)(result + 8);
  uint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  char v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    size_t v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *long long v12 = &v9[v17];
  return result;
}

char *std::vector<TopoSubstring *>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoID a2, int a3, int a4)
{
  unsigned int clock = a2.clock;
  replicaID = a2.replicaID;
  *(void *)this = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((unsigned char *)this + 44) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 18) = 0;
  objc_storeStrong((id *)this, a2.replicaID);
  *((_DWORD *)this + 2) = clock;
  *((_DWORD *)this + 4) = a4;
  uint64_t v8 = (void *)*((void *)this + 3);
  *((void *)this + 3) = replicaID;
  uint64_t v9 = replicaID;

  *((_DWORD *)this + 8) = clock;
}

void sub_1C3A7080C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A708C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t topotext::String::IsInitialized(topotext::String *this)
{
  return 1;
}

uint64_t topotext::WallClockMergeableValue::IsInitialized(topotext::WallClockMergeableValue *this)
{
  return 1;
}

BOOL CRDT::Document::IsInitialized(CRDT::Document *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>((uint64_t)this + 56);
}

uint64_t versioned_document::Document::IsInitialized(versioned_document::Document *this)
{
  return 1;
}

uint64_t topotext::String::Clear(topotext::String *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 5) != 0)
  {
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *((void *)this + 5);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 4) != 0)
    {
      uint64_t v4 = *((void *)this + 9);
      if (v4)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4 + 40);
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 80);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 104);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t topotext::WallClockMergeableValue::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    *(void *)(this + 40) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 48);
      if (v3)
      {
        this = topotext::BoxedValue::clear_contents(*(void *)(this + 48));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::WallClockMergeableValue::MergePartialFromCodedStream(topotext::WallClockMergeableValue *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v23, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22, (google::protobuf::io::ZeroCopyOutputStream *)v23);
  while (1)
  {
    while (1)
    {
      unint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_20;
      }
      int v9 = *((_DWORD *)this + 8);
LABEL_24:
      *((_DWORD *)this + 8) = v9 | 2;
      long long v12 = (topotext::BoxedValue *)*((void *)this + 6);
      if (!v12) {
        operator new();
      }
      v24[0] = 0;
      int v13 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24)) {
          goto LABEL_39;
        }
      }
      else
      {
        v24[0] = *v13;
        *((void *)a2 + 1) = v13 + 1;
      }
      int v14 = *((_DWORD *)a2 + 14);
      int v15 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v14 + 1;
      if (v14 >= v15
        || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24[0]),
            !topotext::BoxedValue::MergePartialFromCodedStream(v12, a2))
        || !*((unsigned char *)a2 + 36))
      {
LABEL_39:
        uint64_t v20 = 0;
        goto LABEL_41;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
      int v17 = *((_DWORD *)a2 + 14);
      BOOL v18 = __OFSUB__(v17, 1);
      int v19 = v17 - 1;
      if (v19 < 0 == v18) {
        *((_DWORD *)a2 + 14) = v19;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v20 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_41;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 9)
    {
      *(void *)uint64_t v24 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24)) {
        goto LABEL_39;
      }
      *((void *)this + 5) = *(void *)v24;
      int v9 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + 8) = v9;
      uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_24;
      }
    }
    else
    {
LABEL_20:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_40;
      }
LABEL_17:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v22, v4))goto LABEL_39; {
    }
      }
  }
LABEL_13:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_17;
  }
LABEL_40:
  uint64_t v20 = 1;
LABEL_41:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v23);
  return v20;
}

void sub_1C3A70D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Document::Clear(versioned_document::Document *this)
{
  *((_DWORD *)this + 16) = 0;
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

void sub_1C3A70E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A70EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t topotext::String::MergePartialFromCodedStream(topotext::String *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v57, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v56, (google::protobuf::io::ZeroCopyOutputStream *)v57);
  while (1)
  {
LABEL_2:
    unint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && *v5 >= 1)
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
LABEL_6:
      switch(v7 >> 3)
      {
        case 2u:
          if (v7 != 18) {
            goto LABEL_28;
          }
          *((_DWORD *)this + 8) |= 1u;
          if (!google::protobuf::internal::empty_string_) {
            __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
          }
          int v9 = (std::string *)*((void *)this + 5);
          if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
            operator new();
          }
          if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
            goto LABEL_103;
          }
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 26) {
            continue;
          }
          break;
        case 3u:
          if (v7 != 26) {
            goto LABEL_28;
          }
          goto LABEL_33;
        case 4u:
          if (v7 == 34) {
            goto LABEL_51;
          }
          goto LABEL_28;
        case 5u:
          if (v7 == 42) {
            goto LABEL_65;
          }
          goto LABEL_28;
        case 6u:
          if (v7 == 50) {
            goto LABEL_83;
          }
LABEL_28:
          if (v7 && (v7 & 7) != 4) {
            goto LABEL_30;
          }
          goto LABEL_104;
        default:
          goto LABEL_15;
      }
      while (1)
      {
        *((void *)a2 + 1) = v10 + 1;
LABEL_33:
        int v12 = *((_DWORD *)this + 15);
        uint64_t v13 = *((int *)this + 14);
        if ((int)v13 >= v12)
        {
          if (v12 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v12 + 1);
          }
          operator new();
        }
        uint64_t v14 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v13 + 1;
        int v15 = *(topotext::Substring **)(v14 + 8 * v13);
        unsigned int v58 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
            break;
          }
        }
        else
        {
          unsigned int v58 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          break;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
        if (!topotext::Substring::MergePartialFromCodedStream(v15, a2) || !*((unsigned char *)a2 + 36)) {
          break;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2)) {
          goto LABEL_2;
        }
        int v23 = *v10;
        if (v23 != 26)
        {
          if (v23 != 34) {
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v10 + 1;
LABEL_51:
          *((_DWORD *)this + 8) |= 4u;
          uint64_t v24 = (topotext::VectorTimestamp *)*((void *)this + 9);
          if (!v24) {
            operator new();
          }
          unsigned int v58 = 0;
          uint64_t v25 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
              break;
            }
          }
          else
          {
            unsigned int v58 = *v25;
            *((void *)a2 + 1) = v25 + 1;
          }
          int v26 = *((_DWORD *)a2 + 14);
          int v27 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v26 + 1;
          if (v26 < v27)
          {
            int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
            if (topotext::VectorTimestamp::MergePartialFromCodedStream(v24, a2))
            {
              if (*((unsigned char *)a2 + 36))
              {
                google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
                int v29 = *((_DWORD *)a2 + 14);
                BOOL v21 = __OFSUB__(v29, 1);
                int v30 = v29 - 1;
                if (v30 < 0 == v21) {
                  *((_DWORD *)a2 + 14) = v30;
                }
                long long v31 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 42) {
                  goto LABEL_2;
                }
                while (1)
                {
                  *((void *)a2 + 1) = v31 + 1;
LABEL_65:
                  int v32 = *((_DWORD *)this + 23);
                  uint64_t v33 = *((int *)this + 22);
                  if ((int)v33 >= v32)
                  {
                    if (v32 == *((_DWORD *)this + 24)) {
                      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 80, v32 + 1);
                    }
                    google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
                  }
                  uint64_t v34 = *((void *)this + 10);
                  *((_DWORD *)this + 22) = v33 + 1;
                  v35 = *(topotext::AttributeRun **)(v34 + 8 * v33);
                  unsigned int v58 = 0;
                  uint64_t v36 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
                  {
                    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
                      goto LABEL_103;
                    }
                  }
                  else
                  {
                    unsigned int v58 = *v36;
                    *((void *)a2 + 1) = v36 + 1;
                  }
                  int v37 = *((_DWORD *)a2 + 14);
                  int v38 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v37 + 1;
                  if (v37 >= v38) {
                    break;
                  }
                  int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
                  if (!topotext::AttributeRun::MergePartialFromCodedStream(v35, a2)
                    || !*((unsigned char *)a2 + 36))
                  {
                    break;
                  }
                  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v39);
                  int v40 = *((_DWORD *)a2 + 14);
                  BOOL v21 = __OFSUB__(v40, 1);
                  int v41 = v40 - 1;
                  if (v41 < 0 == v21) {
                    *((_DWORD *)a2 + 14) = v41;
                  }
                  long long v31 = (unsigned char *)*((void *)a2 + 1);
                  if ((unint64_t)v31 >= *((void *)a2 + 2)) {
                    goto LABEL_2;
                  }
                  int v42 = *v31;
                  if (v42 != 42)
                  {
                    if (v42 != 50) {
                      goto LABEL_2;
                    }
                    while (1)
                    {
                      *((void *)a2 + 1) = v31 + 1;
LABEL_83:
                      int v43 = *((_DWORD *)this + 29);
                      uint64_t v44 = *((int *)this + 28);
                      if ((int)v44 >= v43)
                      {
                        if (v43 == *((_DWORD *)this + 30)) {
                          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 104, v43 + 1);
                        }
                        google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
                      }
                      uint64_t v45 = *((void *)this + 13);
                      *((_DWORD *)this + 28) = v44 + 1;
                      unint64_t v46 = *(topotext::Attachment **)(v45 + 8 * v44);
                      unsigned int v58 = 0;
                      uint64_t v47 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
                      {
                        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
                          goto LABEL_103;
                        }
                      }
                      else
                      {
                        unsigned int v58 = *v47;
                        *((void *)a2 + 1) = v47 + 1;
                      }
                      int v48 = *((_DWORD *)a2 + 14);
                      int v49 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v48 + 1;
                      if (v48 >= v49) {
                        goto LABEL_103;
                      }
                      int v50 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
                      if (!topotext::Attachment::MergePartialFromCodedStream(v46, a2)
                        || !*((unsigned char *)a2 + 36))
                      {
                        goto LABEL_103;
                      }
                      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v50);
                      int v51 = *((_DWORD *)a2 + 14);
                      BOOL v21 = __OFSUB__(v51, 1);
                      int v52 = v51 - 1;
                      if (v52 < 0 == v21) {
                        *((_DWORD *)a2 + 14) = v52;
                      }
                      long long v31 = (unsigned char *)*((void *)a2 + 1);
                      v53 = (unsigned char *)*((void *)a2 + 2);
                      if (v31 >= v53 || *v31 != 50)
                      {
                        if (v31 == v53 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t v54 = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          goto LABEL_105;
                        }
                        goto LABEL_2;
                      }
                    }
                  }
                }
              }
            }
          }
          break;
        }
      }
LABEL_103:
      uint64_t v54 = 0;
      goto LABEL_105;
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_6;
    }
LABEL_15:
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
LABEL_30:
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v56, v4))goto LABEL_103; {
  }
    }
LABEL_104:
  uint64_t v54 = 1;
LABEL_105:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v56);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v57);
  return v54;
}

void sub_1C3A71654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::PushLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  int v2 = *((_DWORD *)this + 6);
  uint64_t v3 = *((void *)this + 2);
  uint64_t v4 = *((unsigned int *)this + 10);
  uint64_t v5 = *((int *)this + 11);
  int v6 = v2 - v5 + *((_DWORD *)this + 2) - v3;
  BOOL v7 = (v6 ^ 0x7FFFFFFF) < a2 || a2 < 0;
  int v8 = v6 + a2;
  if (v7) {
    int v8 = 0x7FFFFFFF;
  }
  if ((int)v4 < v8) {
    int v8 = *((_DWORD *)this + 10);
  }
  *((_DWORD *)this + 10) = v8;
  uint64_t v9 = v3 + v5;
  *((void *)this + 2) = v9;
  if (*((_DWORD *)this + 12) < v8) {
    int v8 = *((_DWORD *)this + 12);
  }
  BOOL v10 = __OFSUB__(v2, v8);
  int v11 = v2 - v8;
  if ((v11 < 0) ^ v10 | (v11 == 0)) {
    int v11 = 0;
  }
  else {
    *((void *)this + 2) = v9 - v11;
  }
  *((_DWORD *)this + 11) = v11;
  return v4;
}

uint64_t google::protobuf::io::CodedInputStream::PopLimit(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  int v2 = *(_DWORD *)(this + 48);
  uint64_t v3 = *(void *)(this + 16) + *(int *)(this + 44);
  *(void *)(this + 16) = v3;
  if (v2 >= a2) {
    int v4 = a2;
  }
  else {
    int v4 = v2;
  }
  int v5 = *(_DWORD *)(this + 24);
  BOOL v6 = __OFSUB__(v5, v4);
  int v7 = v5 - v4;
  if ((v7 < 0) ^ v6 | (v7 == 0)) {
    int v7 = 0;
  }
  else {
    *(void *)(this + 16) = v3 - v7;
  }
  *(_DWORD *)(this + 44) = v7;
  *(unsigned char *)(this + 36) = 0;
  return this;
}

void google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New()
{
}

void sub_1C3A7178C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4042973B72);
  _Unwind_Resume(a1);
}

topotext::AttributeRun *topotext::AttributeRun::AttributeRun(topotext::AttributeRun *this)
{
  *(void *)this = &unk_1F1F26160;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::AttributeRun::SharedCtor(this);
  return this;
}

void sub_1C3A71808(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::AttributeRun::SharedCtor(topotext::AttributeRun *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v5[0] = &unk_1F1F24E80;
    v5[1] = google::protobuf::internal::InitEmptyString;
    char v6 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *((_DWORD *)this + 17) = 0;
  *((void *)this + 9) = v3;
  *((_DWORD *)this + 8) = 0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(void *)((char *)this + 116) = 0;
  return result;
}

void sub_1C3A718F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Substring::MergePartialFromCodedStream(topotext::Substring *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v50, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49, (google::protobuf::io::ZeroCopyOutputStream *)v50);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
      {
LABEL_13:
        if (v7) {
          BOOL v11 = (v7 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          goto LABEL_97;
        }
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v9 = (topotext::CharID *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        BOOL v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53)) {
            goto LABEL_96;
          }
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          goto LABEL_96;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        uint64_t v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v12 || *v24 != 16) {
          continue;
        }
        uint64_t v13 = v24 + 1;
        *((void *)a2 + 1) = v13;
LABEL_43:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 14))goto LABEL_96; {
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 14) = *v13;
          uint64_t v25 = v13 + 1;
          *((void *)a2 + 1) = v25;
        }
        int v14 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v14;
        if ((unint64_t)v25 >= v12 || *v25 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_51:
        *((_DWORD *)this + 8) = v14 | 4;
        int v26 = (topotext::CharID *)*((void *)this + 6);
        if (!v26) {
          operator new();
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53)) {
            goto LABEL_96;
          }
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          goto LABEL_96;
        }
        int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream(v26, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v32;
        }
        uint64_t v33 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        if (v33 >= v15 || *v33 != 32) {
          continue;
        }
        int v16 = v33 + 1;
        *((void *)a2 + 1) = v16;
LABEL_65:
        v53[0].__r_.__value_.__r.__words[0] = 0;
        if (v16 >= v15 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v53)) {
            goto LABEL_96;
          }
          std::string::size_type v34 = v53[0].__r_.__value_.__r.__words[0];
          v35 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          std::string::size_type v34 = *v16;
          v35 = v16 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((unsigned char *)this + 60) = v34 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v35 < v15 && *v35 == 40) {
          goto LABEL_72;
        }
        continue;
      case 2u:
        if (v7 != 16) {
          goto LABEL_27;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_43;
      case 3u:
        if (v7 != 26) {
          goto LABEL_27;
        }
        int v14 = *((_DWORD *)this + 8);
        goto LABEL_51;
      case 4u:
        if (v7 != 32) {
          goto LABEL_27;
        }
        int v16 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        goto LABEL_65;
      case 5u:
        if (v7 != 40)
        {
          if (v7 == 42)
          {
            if (!google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)this + 64))goto LABEL_96; {
            goto LABEL_90;
            }
          }
LABEL_27:
          if (!v7 || (v7 & 7) == 4)
          {
LABEL_97:
            uint64_t v47 = 1;
            goto LABEL_98;
          }
LABEL_29:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v49, v4))goto LABEL_96; {
          continue;
          }
        }
        int v17 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        while (1)
        {
          unsigned int v51 = 0;
          if (v17 >= v15 || *v17 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))
            {
LABEL_96:
              uint64_t v47 = 0;
              goto LABEL_98;
            }
          }
          else
          {
            unsigned int v51 = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v36 = *((_DWORD *)this + 18);
          if (v36 == *((_DWORD *)this + 19))
          {
            google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 64, v36 + 1);
            int v36 = *((_DWORD *)this + 18);
          }
          unsigned int v37 = v51;
          uint64_t v38 = *((void *)this + 8);
          *((_DWORD *)this + 18) = v36 + 1;
          *(_DWORD *)(v38 + 4 * v36) = v37;
          int v39 = *((_DWORD *)this + 19) - *((_DWORD *)this + 18);
          if (v39 >= 1)
          {
            int v40 = v39 + 1;
            do
            {
              int v41 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v42 = *((void *)a2 + 2);
              if ((unint64_t)v41 >= v42 || *v41 != 40) {
                break;
              }
              *((void *)a2 + 1) = v41 + 1;
              if ((unint64_t)(v41 + 1) >= v42 || (char)v41[1] < 0)
              {
                if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51)) {
                  goto LABEL_96;
                }
              }
              else
              {
                unsigned int v51 = v41[1];
                *((void *)a2 + 1) = v41 + 2;
              }
              int v43 = *((_DWORD *)this + 18);
              if (v43 >= *((_DWORD *)this + 19))
              {
                google::protobuf::internal::LogMessage::LogMessage((uint64_t)v53, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 642);
                uint64_t v44 = google::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: (size()) < (Capacity()): ");
                google::protobuf::internal::LogFinisher::operator=((uint64_t)&v52, (google::protobuf::internal::LogMessage *)v44);
                google::protobuf::internal::LogMessage::~LogMessage((void **)&v53[0].__r_.__value_.__l.__data_);
                int v43 = *((_DWORD *)this + 18);
              }
              unsigned int v45 = v51;
              uint64_t v46 = *((void *)this + 8);
              *((_DWORD *)this + 18) = v43 + 1;
              *(_DWORD *)(v46 + 4 * v43) = v45;
              --v40;
            }
            while (v40 > 1);
          }
LABEL_90:
          v35 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
          if (v35 >= v15 || *v35 != 40) {
            break;
          }
LABEL_72:
          int v17 = v35 + 1;
          *((void *)a2 + 1) = v17;
        }
        if (v35 != v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v47 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_98:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v50);
        return v47;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1C3A71F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::CharID::MergePartialFromCodedStream(topotext::CharID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        BOOL v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38; {
          BOOL v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          BOOL v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          uint64_t v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    uint64_t v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      int v14 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
      break;
    }
    int v14 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1C3A72178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t topotext::ParagraphStyle::MergePartialFromCodedStream(topotext::ParagraphStyle *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v46, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v45, (google::protobuf::io::ZeroCopyOutputStream *)v46);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_11:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_119:
        uint64_t v43 = 1;
        goto LABEL_120;
      }
LABEL_34:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v45, v4))goto LABEL_118; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_32;
        }
        BOOL v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_118; {
          BOOL v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          BOOL v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 >= v9 || *v11 != 16) {
          continue;
        }
        int v20 = v11 + 1;
        *((void *)a2 + 1) = v20;
LABEL_42:
        unsigned int v47 = 0;
        if ((unint64_t)v20 >= v9 || *v20 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47) & 1) == 0) {
            goto LABEL_118;
          }
          unsigned int v24 = v47;
        }
        else
        {
          unsigned int v24 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v24 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v45, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v45, v24);
        }
        else
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 11) = v24;
        }
        uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v25 >= v14 || *v25 != 24) {
          continue;
        }
        uint64_t v15 = v25 + 1;
        *((void *)a2 + 1) = v15;
LABEL_53:
        unsigned int v47 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47) & 1) == 0) {
            goto LABEL_118;
          }
          unsigned int v26 = v47;
        }
        else
        {
          unsigned int v26 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v26 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v45, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v45, v26);
        }
        else
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 12) = v26;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v16 || *v27 != 32) {
          continue;
        }
        int v17 = v27 + 1;
        *((void *)a2 + 1) = v17;
LABEL_64:
        unsigned int v47 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47)) {
            goto LABEL_118;
          }
          unsigned int v28 = v47;
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v17;
          int v29 = v17 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) = v28;
        int v13 = *((_DWORD *)this + 8) | 8;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v29 >= v16 || *v29 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_72:
        *((_DWORD *)this + 8) = v13 | 0x10;
        int v30 = (topotext::Todo *)*((void *)this + 7);
        if (!v30) {
          operator new();
        }
        unsigned int v47 = 0;
        int v31 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v47)) {
            goto LABEL_118;
          }
        }
        else
        {
          unsigned int v47 = *v31;
          *((void *)a2 + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)a2 + 14);
        int v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33) {
          goto LABEL_118;
        }
        int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v47);
        if (!topotext::Todo::MergePartialFromCodedStream(v30, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_118;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v34);
        int v35 = *((_DWORD *)a2 + 14);
        BOOL v36 = __OFSUB__(v35, 1);
        int v37 = v35 - 1;
        if (v37 < 0 == v36) {
          *((_DWORD *)a2 + 14) = v37;
        }
        uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v18 || *v38 != 48) {
          continue;
        }
        int v21 = v38 + 1;
        *((void *)a2 + 1) = v21;
LABEL_86:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_118; {
          int v39 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v21;
          int v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v39 >= v18 || *v39 != 56) {
          continue;
        }
        BOOL v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_94:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))goto LABEL_118; {
          int v40 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v22;
          int v40 = v22 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 8) |= 0x40u;
        if ((unint64_t)v40 >= v18 || *v40 != 64) {
          continue;
        }
        int v19 = v40 + 1;
        *((void *)a2 + 1) = v19;
LABEL_102:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 20))goto LABEL_118; {
          int v41 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 20) = *v19;
          int v41 = v19 + 1;
          *((void *)a2 + 1) = v41;
        }
        int v23 = *((_DWORD *)this + 8) | 0x80;
        *((_DWORD *)this + 8) = v23;
        if ((unint64_t)v41 >= v18 || *v41 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
        goto LABEL_110;
      case 2u:
        if (v7 != 16) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_42;
      case 3u:
        if (v7 != 24) {
          goto LABEL_32;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_53;
      case 4u:
        if (v7 != 32) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_64;
      case 5u:
        if (v7 != 42) {
          goto LABEL_32;
        }
        int v13 = *((_DWORD *)this + 8);
        goto LABEL_72;
      case 6u:
        if (v7 != 48) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_86;
      case 7u:
        if (v7 != 56) {
          goto LABEL_32;
        }
        BOOL v22 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_94;
      case 8u:
        if (v7 != 64) {
          goto LABEL_32;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_102;
      case 9u:
        if (v7 != 74)
        {
LABEL_32:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_119;
          }
          goto LABEL_34;
        }
        int v23 = *((_DWORD *)this + 8);
LABEL_110:
        *((_DWORD *)this + 8) = v23 | 0x100;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        unint64_t v42 = (std::string *)*((void *)this + 9);
        if (v42 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v42))
        {
LABEL_118:
          uint64_t v43 = 0;
          goto LABEL_120;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v43 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_120:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v45);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v46);
        return v43;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1C3A72A18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C40417120EDLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::WireFormatLite::ReadString(uint64_t a1, std::string *this)
{
  unsigned int v10 = 0;
  int v5 = *(char **)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  if ((unint64_t)v5 < v4 && (*v5 & 0x80000000) == 0)
  {
    std::string::size_type v6 = *v5;
    unsigned int v10 = *v5;
    uint64_t v7 = (unsigned __int8 *)(v5 + 1);
    *(void *)(a1 + 8) = v7;
    goto LABEL_7;
  }
  int v8 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a1, &v10);
  BOOL result = 0;
  if (v8)
  {
    std::string::size_type v6 = v10;
    if ((v10 & 0x80000000) == 0)
    {
      uint64_t v7 = *(unsigned __int8 **)(a1 + 8);
      unint64_t v4 = *(void *)(a1 + 16);
LABEL_7:
      if ((int)v6 > (int)v4 - (int)v7) {
        return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, v6);
      }
      std::string::resize(this, v6, 0);
      if (!v6) {
        return 1;
      }
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      {
        if (!this->__r_.__value_.__l.__size_)
        {
LABEL_15:
          this = 0;
          goto LABEL_16;
        }
        this = (std::string *)this->__r_.__value_.__r.__words[0];
      }
      else if (!*((unsigned char *)&this->__r_.__value_.__s + 23))
      {
        goto LABEL_15;
      }
LABEL_16:
      memcpy(this, *(const void **)(a1 + 8), v6);
      *(void *)(a1 + 8) += v6;
      return 1;
    }
  }
  return result;
}

uint64_t topotext::AttributeRun::MergePartialFromCodedStream(topotext::AttributeRun *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v81, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v80, (google::protobuf::io::ZeroCopyOutputStream *)v81);
  v79 = (unsigned int *)((char *)this + 48);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_12;
      }
LABEL_6:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
LABEL_189:
        uint64_t v77 = 1;
        goto LABEL_190;
      }
LABEL_44:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v80, v4))goto LABEL_188; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_42;
        }
        BOOL v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v79)) {
            goto LABEL_188;
          }
          BOOL v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v79 = *v11;
          BOOL v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        int v21 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v21;
        if ((unint64_t)v12 >= v10 || *v12 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_51:
        *((_DWORD *)this + 8) = v21 | 2;
        unsigned int v26 = (topotext::ParagraphStyle *)*((void *)this + 5);
        if (!v26) {
          operator new();
        }
        unsigned int v82 = 0;
        int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
        }
        else
        {
          unsigned int v82 = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          goto LABEL_188;
        }
        int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82);
        if (!topotext::ParagraphStyle::MergePartialFromCodedStream(v26, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_188;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v32 = __OFSUB__(v31, 1);
        int v33 = v31 - 1;
        if (v33 < 0 == v32) {
          *((_DWORD *)a2 + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_65:
        *((_DWORD *)this + 8) |= 4u;
        int v35 = (topotext::Font *)*((void *)this + 7);
        if (!v35) {
          operator new();
        }
        unsigned int v82 = 0;
        BOOL v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
        }
        else
        {
          unsigned int v82 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38) {
          goto LABEL_188;
        }
        int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82);
        if (!topotext::Font::MergePartialFromCodedStream(v35, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_188;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v39);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v32 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v32) {
          *((_DWORD *)a2 + 14) = v41;
        }
        unint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v42 >= v14 || *v42 != 40) {
          continue;
        }
        int v20 = v42 + 1;
        *((void *)a2 + 1) = v20;
LABEL_79:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))goto LABEL_188; {
          uint64_t v43 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v20;
          uint64_t v43 = v20 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 8) |= 8u;
        if ((unint64_t)v43 >= v14 || *v43 != 48) {
          continue;
        }
        uint64_t v15 = v43 + 1;
        *((void *)a2 + 1) = v15;
LABEL_87:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_188; {
          uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v15;
          uint64_t v44 = v15 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v44 >= v14 || *v44 != 56) {
          continue;
        }
        unint64_t v18 = v44 + 1;
        *((void *)a2 + 1) = v18;
LABEL_95:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))goto LABEL_188; {
          unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v18;
          unsigned int v45 = v18 + 1;
          *((void *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v45 >= v14 || *v45 != 64) {
          continue;
        }
        BOOL v22 = v45 + 1;
        *((void *)a2 + 1) = v22;
LABEL_103:
        unsigned int v82 = 0;
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
          unsigned int v46 = v82;
          unsigned int v47 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v46 = *v22;
          unsigned int v47 = v22 + 1;
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 20) = v46;
        int v23 = *((_DWORD *)this + 8) | 0x40;
        *((_DWORD *)this + 8) = v23;
        if ((unint64_t)v47 >= v14 || *v47 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_111:
        *((_DWORD *)this + 8) = v23 | 0x80;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        int v48 = (std::string *)*((void *)this + 9);
        if (v48 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v48)) {
          goto LABEL_188;
        }
        int v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_118:
        *((_DWORD *)this + 8) |= 0x100u;
        int v50 = (topotext::Color *)*((void *)this + 11);
        if (!v50) {
          operator new();
        }
        unsigned int v82 = 0;
        unsigned int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
        }
        else
        {
          unsigned int v82 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53) {
          goto LABEL_188;
        }
        int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82);
        if (!topotext::Color::MergePartialFromCodedStream(v50, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_188;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v54);
        int v55 = *((_DWORD *)a2 + 14);
        BOOL v32 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v32) {
          *((_DWORD *)a2 + 14) = v56;
        }
        v57 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        if ((unint64_t)v57 >= v24 || *v57 != 88) {
          continue;
        }
        uint64_t v25 = v57 + 1;
        *((void *)a2 + 1) = v25;
LABEL_132:
        unsigned int v82 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82) & 1) == 0) {
            goto LABEL_188;
          }
          unsigned int v58 = v82;
        }
        else
        {
          unsigned int v58 = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        if (v58 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v80, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v80, v58);
        }
        else
        {
          *((_DWORD *)this + 8) |= 0x200u;
          *((_DWORD *)this + 21) = v58;
        }
        v59 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v59 >= *((void *)a2 + 2) || *v59 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v59 + 1;
LABEL_143:
        *((_DWORD *)this + 8) |= 0x400u;
        v60 = (topotext::AttachmentInfo *)*((void *)this + 12);
        if (!v60) {
          operator new();
        }
        unsigned int v82 = 0;
        v61 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v61 >= *((void *)a2 + 2) || *v61 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
        }
        else
        {
          unsigned int v82 = *v61;
          *((void *)a2 + 1) = v61 + 1;
        }
        int v62 = *((_DWORD *)a2 + 14);
        int v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63) {
          goto LABEL_188;
        }
        int v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82);
        if (!topotext::AttachmentInfo::MergePartialFromCodedStream(v60, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_188;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v64);
        int v65 = *((_DWORD *)a2 + 14);
        BOOL v32 = __OFSUB__(v65, 1);
        int v66 = v65 - 1;
        if (v66 < 0 == v32) {
          *((_DWORD *)a2 + 14) = v66;
        }
        v67 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v67 >= v16 || *v67 != 104) {
          continue;
        }
        int v19 = v67 + 1;
        *((void *)a2 + 1) = v19;
LABEL_157:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 13))goto LABEL_188; {
          v68 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 13) = *v19;
          v68 = v19 + 1;
          *((void *)a2 + 1) = v68;
        }
        *((_DWORD *)this + 8) |= 0x800u;
        if ((unint64_t)v68 >= v16 || *v68 != 112) {
          continue;
        }
        int v17 = v68 + 1;
        *((void *)a2 + 1) = v17;
LABEL_165:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 30))goto LABEL_188; {
          v69 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 30) = *v17;
          v69 = v17 + 1;
          *((void *)a2 + 1) = v69;
        }
        int v13 = *((_DWORD *)this + 8) | 0x1000;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v69 >= v16 || *v69 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v69 + 1;
        goto LABEL_173;
      case 2u:
        if (v7 != 18) {
          goto LABEL_42;
        }
        int v21 = *((_DWORD *)this + 8);
        goto LABEL_51;
      case 3u:
        if (v7 == 26) {
          goto LABEL_65;
        }
        goto LABEL_42;
      case 5u:
        if (v7 != 40) {
          goto LABEL_42;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_79;
      case 6u:
        if (v7 != 48) {
          goto LABEL_42;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_87;
      case 7u:
        if (v7 != 56) {
          goto LABEL_42;
        }
        unint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_95;
      case 8u:
        if (v7 != 64) {
          goto LABEL_42;
        }
        BOOL v22 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_103;
      case 9u:
        if (v7 != 74) {
          goto LABEL_42;
        }
        int v23 = *((_DWORD *)this + 8);
        goto LABEL_111;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_42;
        }
        goto LABEL_118;
      case 0xBu:
        if (v7 != 88) {
          goto LABEL_42;
        }
        uint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        goto LABEL_132;
      case 0xCu:
        if (v7 == 98) {
          goto LABEL_143;
        }
        goto LABEL_42;
      case 0xDu:
        if (v7 != 104) {
          goto LABEL_42;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_157;
      case 0xEu:
        if (v7 != 112) {
          goto LABEL_42;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_165;
      case 0xFu:
        if (v7 != 122)
        {
LABEL_42:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_189;
          }
          goto LABEL_44;
        }
        int v13 = *((_DWORD *)this + 8);
LABEL_173:
        *((_DWORD *)this + 8) = v13 | 0x2000;
        v70 = (topotext::AttachmentInfo *)*((void *)this + 14);
        if (!v70) {
          operator new();
        }
        unsigned int v82 = 0;
        v71 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v71 >= *((void *)a2 + 2) || *v71 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82)) {
            goto LABEL_188;
          }
        }
        else
        {
          unsigned int v82 = *v71;
          *((void *)a2 + 1) = v71 + 1;
        }
        int v72 = *((_DWORD *)a2 + 14);
        int v73 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v72 + 1;
        if (v72 >= v73
          || (int v74 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82),
              !topotext::AttachmentInfo::MergePartialFromCodedStream(v70, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_188:
          uint64_t v77 = 0;
          goto LABEL_190;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v74);
        int v75 = *((_DWORD *)a2 + 14);
        BOOL v32 = __OFSUB__(v75, 1);
        int v76 = v75 - 1;
        if (v76 < 0 == v32) {
          *((_DWORD *)a2 + 14) = v76;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v77 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_190:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v80);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v81);
        return v77;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1C3A73794(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C40F489674BLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

void *google::protobuf::io::StringOutputStream::StringOutputStream(void *result, uint64_t a2)
{
  char *result = &unk_1F1F241F8;
  result[1] = a2;
  return result;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) >= 1) {
    (*(void (**)(void))(**(void **)this + 24))();
  }
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 188);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)this + 1);
  LODWORD(v6) = *(char *)(v5 + 23);
  if ((v6 & 0x80000000) != 0) {
    unint64_t v7 = *(void *)(v5 + 8);
  }
  else {
    unint64_t v7 = *(unsigned __int8 *)(v5 + 23);
  }
  if (v7 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 189);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 1);
    LOBYTE(v6) = *(unsigned char *)(v5 + 23);
  }
  if ((v6 & 0x80) != 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = v6;
  }
  std::string::resize((std::string *)v5, v6 - a2, 0);
}

void sub_1C3A73980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::io::CodedOutputStream *google::protobuf::io::CodedOutputStream::CodedOutputStream(google::protobuf::io::CodedOutputStream *this, google::protobuf::io::ZeroCopyOutputStream *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = a2;
  *((_WORD *)this + 12) = 0;
  google::protobuf::io::CodedOutputStream::Refresh(this);
  *((unsigned char *)this + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::Refresh(google::protobuf::io::CodedOutputStream *this)
{
  uint64_t v4 = 0;
  uint64_t result = (*(uint64_t (**)(void, uint64_t *, char *))(**(void **)this + 16))(*(void *)this, &v4, (char *)this + 16);
  if (result)
  {
    uint64_t v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((unsigned char *)this + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  *((void *)this + 1) = v3;
  return result;
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6 = *((void *)this + 1);
  if (*(char *)(v6 + 23) < 0)
  {
    uint64_t v9 = *(void *)(v6 + 8);
    uint64_t v7 = (int)v9;
    std::string::size_type v8 = (*(void *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v9 < v8) {
      goto LABEL_11;
    }
    uint64_t v10 = *(void *)(v6 + 8);
    if ((int)v9 >= 0x40000000)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 170);
      BOOL v11 = google::protobuf::internal::LogMessage::operator<<(v18, "Cannot allocate buffer larger than kint32max for ");
      BOOL v12 = google::protobuf::internal::LogMessage::operator<<(v11, "StringOutputStream.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      return 0;
    }
  }
  else
  {
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      std::string::size_type v8 = 22;
      LODWORD(v9) = *(unsigned __int8 *)(v6 + 23);
      goto LABEL_11;
    }
    LODWORD(v10) = *(unsigned __int8 *)(v6 + 23);
    LODWORD(v9) = v10;
  }
  int v14 = 2 * v10;
  if (v14 <= 16) {
    std::string::size_type v8 = 16;
  }
  else {
    std::string::size_type v8 = v14;
  }
LABEL_11:
  std::string::resize((std::string *)v6, v8, 0);
  uint64_t v15 = (uint64_t *)*((void *)this + 1);
  if (*((char *)v15 + 23) < 0)
  {
    if (!v15[1])
    {
LABEL_16:
      uint64_t v15 = 0;
      goto LABEL_17;
    }
    uint64_t v15 = (uint64_t *)*v15;
  }
  else if (!*((unsigned char *)v15 + 23))
  {
    goto LABEL_16;
  }
LABEL_17:
  *a2 = (char *)v15 + v7;
  uint64_t v16 = *((void *)this + 1);
  if (*(char *)(v16 + 23) < 0) {
    uint64_t v16 = *(void *)(v16 + 8);
  }
  else {
    LODWORD(v16) = *(unsigned __int8 *)(v16 + 23);
  }
  *a3 = v16 - v9;
  return 1;
}

void sub_1C3A73BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = (char *)*((void *)this + 1);
  uint64_t v1 = *((void *)this + 2);
  int v3 = v1 - v2;
  if ((int)v1 - (int)v2 > 9) {
    goto LABEL_4;
  }
  if (v3 >= 1)
  {
    if ((*(char *)(v1 - 1) & 0x80000000) == 0)
    {
LABEL_4:
      uint64_t v4 = (uint64_t)(v2 + 1);
      uint64_t v5 = *v2;
      if (*v2 < 0)
      {
        uint64_t v5 = v5 + (v2[1] << 7) - 128;
        if (v2[1] < 0)
        {
          uint64_t v5 = v5 + (v2[2] << 14) - 0x4000;
          if (v2[2] < 0)
          {
            uint64_t v5 = v5 + (v2[3] << 21) - 0x200000;
            if (v2[3] < 0)
            {
              int v10 = v2[4];
              uint64_t v5 = (v5 + (v10 << 28) - 0x10000000);
              if (v10 < 0)
              {
                uint64_t v11 = 0;
                while (v2[v11 + 5] < 0)
                {
                  uint64_t v9 = 0;
                  if (++v11 == 5) {
                    return v9;
                  }
                }
                uint64_t v4 = (uint64_t)&v2[v11 + 6];
              }
              else
              {
                uint64_t v4 = (uint64_t)(v2 + 5);
              }
            }
            else
            {
              uint64_t v4 = (uint64_t)(v2 + 4);
            }
          }
          else
          {
            uint64_t v4 = (uint64_t)(v2 + 3);
          }
        }
        else
        {
          uint64_t v4 = (uint64_t)(v2 + 2);
        }
      }
      *((void *)this + 1) = v4;
      return v5;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v3) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  int v7 = *((_DWORD *)this + 11);
  int v8 = *((_DWORD *)this + 6);
  if (v7 <= 0 && v8 != *((_DWORD *)this + 10)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v8 - v7 >= *((_DWORD *)this + 12)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  uint64_t v9 = 0;
  *((unsigned char *)this + 36) = 1;
  return v9;
}

topotext::ParagraphStyle *topotext::ParagraphStyle::ParagraphStyle(topotext::ParagraphStyle *this)
{
  *(void *)this = &unk_1F1F26250;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::ParagraphStyle::SharedCtor(this);
  return this;
}

void sub_1C3A73D40(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::ParagraphStyle::SharedCtor(topotext::ParagraphStyle *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v5[0] = &unk_1F1F24E80;
    v5[1] = google::protobuf::internal::InitEmptyString;
    char v6 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *((_DWORD *)this + 17) = 0;
  *((void *)this + 9) = v3;
  *((_DWORD *)this + 8) = 0;
  return result;
}

void sub_1C3A73E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  if ((int)v3 - (int)v4 <= 9 && (v3 <= (unint64_t)v4 || *(char *)(v3 - 1) < 0))
  {
    unint64_t v11 = 0;
    uint64_t v7 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v11);
    if (v7) {
      *a2 = v11;
    }
  }
  else
  {
    uint64_t v5 = (uint64_t)(v4 + 1);
    int v6 = *v4;
    if (*v4 < 0)
    {
      int v6 = v6 + (v4[1] << 7) - 128;
      if (v4[1] < 0)
      {
        int v6 = v6 + (v4[2] << 14) - 0x4000;
        if (v4[2] < 0)
        {
          int v6 = v6 + (v4[3] << 21) - 0x200000;
          if (v4[3] < 0)
          {
            int v8 = v4[4];
            int v6 = v6 + (v8 << 28) - 0x10000000;
            if (v8 < 0)
            {
              uint64_t v9 = 0;
              while (v4[v9 + 5] < 0)
              {
                uint64_t v7 = 0;
                if (++v9 == 5) {
                  return v7;
                }
              }
              uint64_t v5 = (uint64_t)&v4[v9 + 6];
            }
            else
            {
              uint64_t v5 = (uint64_t)(v4 + 5);
            }
          }
          else
          {
            uint64_t v5 = (uint64_t)(v4 + 4);
          }
        }
        else
        {
          uint64_t v5 = (uint64_t)(v4 + 3);
        }
      }
      else
      {
        uint64_t v5 = (uint64_t)(v4 + 2);
      }
    }
    *a2 = v6;
    *((void *)this + 1) = v5;
    return 1;
  }
  return v7;
}

topotext::AttachmentInfo *topotext::AttachmentInfo::AttachmentInfo(topotext::AttachmentInfo *this)
{
  *(void *)this = &unk_1F1F262C8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::AttachmentInfo::SharedCtor(this);
  return this;
}

void sub_1C3A73FAC(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::SharedCtor(topotext::AttachmentInfo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = v3;
  *((void *)this + 8) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3A7407C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttachmentInfo::MergePartialFromCodedStream(topotext::AttachmentInfo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (2)
  {
    while (1)
    {
      char v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_15:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_53:
        uint64_t v17 = 1;
        goto LABEL_54;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))
      {
LABEL_52:
        uint64_t v17 = 0;
        goto LABEL_54;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_26;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        uint64_t v9 = (std::string *)*((void *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
          goto LABEL_52;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_30:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        BOOL v12 = (std::string *)*((void *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12)) {
          goto LABEL_52;
        }
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        int v14 = (std::string *)*((void *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14)) {
          goto LABEL_52;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_44:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_55:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        uint64_t v16 = (std::string *)*((void *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16)) {
          goto LABEL_52;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v17 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 3u:
        if (v7 == 26) {
          goto LABEL_37;
        }
        goto LABEL_26;
      case 4u:
        if (v7 == 34) {
          goto LABEL_44;
        }
LABEL_26:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_28;
        }
        goto LABEL_53;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_54:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1C3A743F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v2 = (unsigned __int8 *)*((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  if ((int)v3 - (int)v2 <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0)) {
    return google::protobuf::io::CodedInputStream::ReadVarint64Slow(this, a2);
  }
  int v4 = v2 + 1;
  unsigned int v5 = *v2;
  if (((char)*v2 & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
LABEL_25:
    *((void *)this + 1) = &v2[v4 - (int)v2];
    *a2 = v5 | ((unint64_t)v6 << 28) | (v7 << 56);
    return 1;
  }
  unsigned int v5 = v5 + (v2[1] << 7) - 128;
  if (((char)v2[1] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 2;
    goto LABEL_25;
  }
  unsigned int v5 = v5 + (v2[2] << 14) - 0x4000;
  if (((char)v2[2] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 3;
    goto LABEL_25;
  }
  unsigned int v5 = v5 + (v2[3] << 21) - 0x200000;
  if (((char)v2[3] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 4;
    goto LABEL_25;
  }
  v5 -= 0x10000000;
  unsigned int v6 = v2[4];
  if (((char)v2[4] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 5;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[5] << 7) - 128;
  if (((char)v2[5] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 6;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[6] << 14) - 0x4000;
  if (((char)v2[6] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 7;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[7] << 21) - 0x200000;
  if (((char)v2[7] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 8;
    goto LABEL_25;
  }
  v6 -= 0x10000000;
  uint64_t v7 = v2[8];
  if (((char)v2[8] & 0x80000000) == 0)
  {
    int v4 = v2 + 9;
    goto LABEL_25;
  }
  if (((char)v2[9] & 0x80000000) == 0)
  {
    int v4 = v2 + 10;
    uint64_t v7 = v7 + (v2[9] << 7) - 128;
    goto LABEL_25;
  }
  return 0;
}

void sub_1C3A74C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3A75134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1C3A75648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  TopoSubstring::~TopoSubstring((TopoSubstring *)&a12);
  _Block_object_dispose(&a29, 8);

  _Block_object_dispose((const void *)(v36 - 176), 8);
  _Unwind_Resume(a1);
}

void traverseIterative(uint64_t a1, void *a2)
{
  uint64_t v18 = a1;
  uint64_t v2 = a2;
  long long v17 = 0u;
  memset(v16, 0, sizeof(v16));
  std::deque<TopoSubstring *>::push_back(v16, &v18);
  memset(v14, 0, sizeof(v14));
  int v15 = 1065353216;
  uint64_t v3 = *((void *)&v17 + 1);
  if (*((void *)&v17 + 1))
  {
    while (1)
    {
      uint64_t v4 = v3 - 1;
      uint64_t v5 = *(void *)(*(void *)(*((void *)&v16[0] + 1) + (((unint64_t)(v17 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                     + 8 * ((v17 + v4) & 0x1FF));
      *((void *)&v17 + 1) = v4;
      std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v16, 1);
      v2[2](v2, v5);
      while (1)
      {
        uint64_t v7 = *(char **)(v5 + 48);
        unsigned int v6 = *(char **)(v5 + 56);
        if (v6 - v7 != 8) {
          break;
        }
        uint64_t v8 = *(void *)v7;
        if (*(_DWORD *)(*(void *)v7 + 72) != 1) {
          break;
        }
        v2[2](v2, *(void *)v7);
        uint64_t v5 = v8;
      }
      if (v6 != v7) {
        break;
      }
LABEL_17:
      uint64_t v3 = *((void *)&v17 + 1);
      if (!*((void *)&v17 + 1)) {
        goto LABEL_18;
      }
    }
    uint64_t v9 = v6 - 8;
    while (1)
    {
      int v10 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v14, v9);
      if (v10)
      {
        int v11 = *((_DWORD *)v10 + 6) - 1;
        if (*((_DWORD *)v10 + 6) == 1) {
          goto LABEL_14;
        }
      }
      else
      {
        unsigned int v12 = *(_DWORD *)(*(void *)v9 + 72);
        if (v12 < 2)
        {
LABEL_14:
          std::deque<TopoSubstring *>::push_back(v16, v9);
          goto LABEL_15;
        }
        int v19 = v9;
        int v10 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)v14, v9, (uint64_t)&std::piecewise_construct, (void **)&v19);
        int v11 = v12 - 1;
      }
      *((_DWORD *)v10 + 6) = v11;
LABEL_15:
      BOOL v13 = v9 == *(char **)(v5 + 48);
      v9 -= 8;
      if (v13) {
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v14);
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v16);
}

void sub_1C3A759A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);

  _Unwind_Resume(a1);
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke_2(uint64_t result)
{
  return result;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    unsigned int v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      BOOL v13 = *v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == *a2) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          BOOL v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  BOOL v13 = operator new(0x20uLL);
  *BOOL v13 = 0;
  v13[1] = v9;
  _OWORD v13[2] = **a4;
  *((_DWORD *)v13 + 6) = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  BOOL v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    *BOOL v13 = *v22;
LABEL_38:
    *BOOL v22 = v13;
    goto LABEL_39;
  }
  *BOOL v13 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v13;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*v13)
  {
    unint64_t v23 = *(void *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    BOOL v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v13;
}

void sub_1C3A75D18(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL hasLoop(TopoSubstring *a1)
{
  uint64_t v6 = 0;
  unint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v9 = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = ___Z7hasLoopP13TopoSubstring_block_invoke;
  v5[3] = &unk_1E64A5350;
  v5[4] = &v6;
  traverseUnordered((uint64_t)a1, v5);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  void v4[2] = ___Z7hasLoopP13TopoSubstring_block_invoke_2;
  v4[3] = &unk_1E64A5378;
  v4[4] = &v6;
  traverseIterative((uint64_t)a1, v4);
  BOOL v2 = v7[3] != 0;
  _Block_object_dispose(&v6, 8);
  return v2;
}

void sub_1C3A75E30(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1C3A76968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a27);
  BOOL v32 = *(void **)(v30 - 248);
  if (v32)
  {
    *(void *)(v30 - 240) = v32;
    operator delete(v32);
  }

  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  uint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  double result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      double result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void TopoSubstring::addChild(TopoSubstring *this, TopoSubstring *a2)
{
  unint64_t v6 = *((void *)this + 8);
  unint64_t v4 = (char *)this + 64;
  unint64_t v5 = v6;
  unint64_t v7 = (void *)*((void *)v4 - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = (void **)(v4 - 16);
    uint64_t v10 = *((void *)v4 - 2);
    uint64_t v11 = ((uint64_t)v7 - v10) >> 3;
    if ((unint64_t)(v11 + 1) >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - v10;
    uint64_t v13 = v12 >> 2;
    if (v12 >> 2 <= (unint64_t)(v11 + 1)) {
      uint64_t v13 = v11 + 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14) {
      float v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>((uint64_t)v4, v14);
    }
    else {
      float v15 = 0;
    }
    float v16 = &v15[8 * v11];
    BOOL v17 = &v15[8 * v14];
    *(void *)float v16 = a2;
    uint64_t v8 = v16 + 8;
    unint64_t v19 = (char *)*((void *)this + 6);
    unint64_t v18 = (char *)*((void *)this + 7);
    if (v18 != v19)
    {
      do
      {
        uint64_t v20 = *((void *)v18 - 1);
        v18 -= 8;
        *((void *)v16 - 1) = v20;
        v16 -= 8;
      }
      while (v18 != v19);
      unint64_t v18 = (char *)*v9;
    }
    *((void *)this + 6) = v16;
    *((void *)this + 7) = v8;
    *((void *)this + 8) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *unint64_t v7 = a2;
    uint64_t v8 = v7 + 1;
  }
  *((void *)this + 7) = v8;
  ++*((_DWORD *)a2 + 18);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A76E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Get(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 664);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 665);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1 + 4 * a2;
}

void sub_1C3A76F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::reserve(void **a1, unint64_t a2)
{
  unint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v3, a2);
    char v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1C3A771D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A772B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A7741C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3A775D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A777E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A778EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3A78050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A782E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__21(uint64_t a1)
{
}

void __Block_byref_object_dispose__22(uint64_t a1)
{
}

void __Block_byref_object_dispose__23(uint64_t a1)
{
}

void __Block_byref_object_dispose__24(uint64_t a1)
{
}

void __Block_byref_object_dispose__25(uint64_t a1)
{
}

void __Block_byref_object_dispose__26(uint64_t a1)
{
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void __Block_byref_object_dispose__28(uint64_t a1)
{
}

void __Block_byref_object_dispose__29(uint64_t a1)
{
}

void __Block_byref_object_dispose__30(uint64_t a1)
{
}

void __Block_byref_object_dispose__31(uint64_t a1)
{
}

void __Block_byref_object_dispose__32(uint64_t a1)
{
}

void __Block_byref_object_dispose__33(uint64_t a1)
{
}

void __Block_byref_object_dispose__34(uint64_t a1)
{
}

void __Block_byref_object_dispose__35(uint64_t a1)
{
}

void __Block_byref_object_dispose__36(uint64_t a1)
{
}

void __Block_byref_object_dispose__37(uint64_t a1)
{
}

void __Block_byref_object_dispose__38(uint64_t a1)
{
}

void __Block_byref_object_dispose__39(uint64_t a1)
{
}

void __Block_byref_object_dispose__40(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__41(uint64_t a1)
{
}

void __Block_byref_object_dispose__42(uint64_t a1)
{
}

void __Block_byref_object_dispose__43(uint64_t a1)
{
}

void __Block_byref_object_dispose__44(uint64_t a1)
{
}

void __Block_byref_object_dispose__45(uint64_t a1)
{
}

void __Block_byref_object_dispose__46(uint64_t a1)
{
}

void __Block_byref_object_dispose__47(uint64_t a1)
{
}

void __Block_byref_object_dispose__48(uint64_t a1)
{
}

void __Block_byref_object_dispose__49(uint64_t a1)
{
}

void __Block_byref_object_dispose__50(uint64_t a1)
{
}

void __Block_byref_object_dispose__51(uint64_t a1)
{
}

void __Block_byref_object_dispose__52(uint64_t a1)
{
}

void __Block_byref_object_dispose__53(uint64_t a1)
{
}

void __Block_byref_object_dispose__54(uint64_t a1)
{
}

void __Block_byref_object_dispose__55(uint64_t a1)
{
}

void __Block_byref_object_dispose__56(uint64_t a1)
{
}

void __Block_byref_object_dispose__57(uint64_t a1)
{
}

void __Block_byref_object_dispose__58(uint64_t a1)
{
}

void __Block_byref_object_dispose__59(uint64_t a1)
{
}

void __Block_byref_object_dispose__60(uint64_t a1)
{
}

void __Block_byref_object_dispose__61(uint64_t a1)
{
}

void __Block_byref_object_dispose__62(uint64_t a1)
{
}

void __Block_byref_object_dispose__63(uint64_t a1)
{
}

void __Block_byref_object_dispose__64(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  uint64_t v2;

  int8x8_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__33(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__41(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__43(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__53(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__55(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__56(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__57(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__59(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__60(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__61(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__62(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__63(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__64(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

id ICLegacyEntityNameFolder()
{
  return (id)*MEMORY[0x1E4F82D98];
}

void CRDT::Document::~Document(CRDT::Document *this)
{
  CRDT::Document::~Document(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F27F80;
  CRDT::Document::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 32);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 26);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 20);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 7);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  if (a1[3] >= 1)
  {
    uint64_t v2 = 0;
    do
      google::protobuf::internal::StringTypeHandlerBase::Delete(*(void *)(*(void *)a1 + 8 * v2++));
    while (v2 < a1[3]);
  }
  uint64_t result = *(void *)a1;
  if (*(void *)a1)
  {
    JUMPOUT(0x1C877D620);
  }
  return result;
}

uint64_t google::protobuf::internal::StringTypeHandlerBase::Delete(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x1C877D640);
  }
  return result;
}

void CRDT::Dictionary::~Dictionary(CRDT::Dictionary *this)
{
  CRDT::Dictionary::~Dictionary(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F279E0;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void CRDT::Document::SharedDtor(CRDT::Document *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Document *)CRDT::Document::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 19);
    if (v4)
    {
      int64_t v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

void CRDT::Dictionary_Element::SharedDtor(CRDT::Dictionary_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Dictionary_Element *)CRDT::Dictionary_Element::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 8);
    if (v5)
    {
      unint64_t v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

void CRDT::ObjectID::~ObjectID(CRDT::ObjectID *this)
{
  CRDT::ObjectID::~ObjectID(this);
  JUMPOUT(0x1C877D640);
}

{
  CRDT::ObjectID *v1;
  uint64_t vars8;

  uint64_t v1 = this;
  *(void *)this = &unk_1F1F27710;
  if (*((_DWORD *)this + 12)) {
    this = (CRDT::ObjectID *)CRDT::ObjectID::clear_contents((uint64_t)this);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0) {
    operator delete(*((void **)v1 + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

void CRDT::protobuf_AddDesc_crframework_2eproto(CRDT *this)
{
  uint64_t v1 = CRDT::protobuf_AddDesc_crframework_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = CRDT::protobuf_AddDesc_crframework_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&CRDT::protobuf_AddDesc_crframework_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3A79A34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::MergePartialFromCodedStream(CRDT::ObjectID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  uint64_t v5 = (std::string **)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      unint64_t v6 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v6 < *((void *)a2 + 2) && (char)*v6 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_11:
      if (v8) {
        BOOL v14 = (v8 & 7) == 4;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14)
      {
LABEL_70:
        uint64_t v26 = 1;
        goto LABEL_71;
      }
LABEL_29:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_69; {
    }
      }
    uint64_t v7 = *v6;
    *((_DWORD *)a2 + 8) = v7;
    *((void *)a2 + 1) = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_27;
        }
        CRDT::ObjectID::clear_contents((uint64_t)this);
        unint64_t v30 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v30)) {
            goto LABEL_69;
          }
          unint64_t v12 = v30;
          uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v12 = *v11;
          uint64_t v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((void *)this + 5) = -(uint64_t)(v12 & 1) ^ (v12 >> 1);
        *((_DWORD *)this + 12) = 1;
        if ((unint64_t)v13 >= v10 || *v13 != 16) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_36:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        float v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_69; {
          BOOL v17 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = (std::string *)*v16;
          BOOL v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 12) = 2;
        if ((unint64_t)v17 >= v15 || *v17 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_44:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        unint64_t v30 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v30)) {
          goto LABEL_69;
        }
        *((void *)this + 5) = v30;
        *((_DWORD *)this + 12) = 3;
        unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 34)
        {
          *((void *)a2 + 1) = v18 + 1;
LABEL_48:
          CRDT::ObjectID::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          operator new();
        }
        continue;
      case 2u:
        if (v8 == 16) {
          goto LABEL_36;
        }
        goto LABEL_27;
      case 3u:
        if (v8 == 25) {
          goto LABEL_44;
        }
        goto LABEL_27;
      case 4u:
        if (v8 != 34) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) != 4) {
          goto LABEL_48;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
          goto LABEL_69;
        }
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_53:
        if (*((_DWORD *)this + 12) != 5)
        {
          CRDT::ObjectID::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
          goto LABEL_69;
        }
        BOOL v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 48) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_60:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        unint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))
          {
LABEL_69:
            uint64_t v26 = 0;
            goto LABEL_71;
          }
          uint64_t v25 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          *(_DWORD *)uint64_t v5 = *v24;
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) = 6;
        if (v25 != (unsigned __int8 *)v23 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v26 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_71:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
        return v26;
      case 5u:
        if (v8 == 42) {
          goto LABEL_53;
        }
        goto LABEL_27;
      case 6u:
        if (v8 == 48) {
          goto LABEL_60;
        }
LABEL_27:
        if (v8 && (v8 & 7) != 4) {
          goto LABEL_29;
        }
        goto LABEL_70;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1C3A79E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::clear_contents(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 48);
  if (v2 == 5 || v2 == 4)
  {
    uint64_t v3 = *(void *)(this + 40);
    if (v3)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

void CRDT::VectorTimestamp::~VectorTimestamp(CRDT::VectorTimestamp *this)
{
  CRDT::VectorTimestamp::~VectorTimestamp(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F278F0;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

void sub_1C3A7A1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A7A320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_DocObject::IsInitialized(CRDT::Document_DocObject *this)
{
  if (*((_DWORD *)this + 12) != 13) {
    return 1;
  }
  uint64_t result = (*(uint64_t (**)(void))(**((void **)this + 5) + 40))(*((void *)this + 5));
  if (result) {
    return 1;
  }
  return result;
}

BOOL CRDT::Document_CustomObject::IsInitialized(CRDT::Document_CustomObject *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>((uint64_t)this + 40);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

void sub_1C3A7A544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A7A630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3A7A6EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL CRDT::Document_CustomObject_MapEntry::IsInitialized(CRDT::Document_CustomObject_MapEntry *this)
{
  return (~*((_DWORD *)this + 8) & 3) == 0;
}

void sub_1C3A7A94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1C3A7AAC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A7AB60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A7AC2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A7ACD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A7ADB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  BOOL v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1C3A7B0D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_3_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_7(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return v0;
}

void OUTLINED_FUNCTION_13(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_3_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x26u);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_28(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_2_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_0_10(float a1, uint64_t a2, uint64_t a3, int a4)
{
  *(float *)a3 = a1;
  *(_DWORD *)(a3 + 4) = a4;
  *(_WORD *)(a3 + 8) = 1024;
  *(_DWORD *)(a3 + 10) = v4;
}

void OUTLINED_FUNCTION_0_11(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

id OUTLINED_FUNCTION_0_12@<X0>(id a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  *(float *)a2 = a4;
  *(void *)(a2 + 4) = a1;
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = a3;
  return a1;
}

void OUTLINED_FUNCTION_2_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_6_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_1_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x1Cu);
}

uint64_t OUTLINED_FUNCTION_2_5(uint64_t a1, void *a2)
{
  return [a2 count];
}

void OUTLINED_FUNCTION_2_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0x16u);
}

id ICPaperKitBackedAttachmentUTTypes()
{
  if (ICPaperKitBackedAttachmentUTTypes_onceToken != -1) {
    dispatch_once(&ICPaperKitBackedAttachmentUTTypes_onceToken, &__block_literal_global_63);
  }
  uint64_t v0 = (void *)ICPaperKitBackedAttachmentUTTypes_types;
  return v0;
}

void sub_1C3A801F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A80360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A80A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id obj)
{
}

uint64_t CRDT::Dictionary::MergePartialFromCodedStream(CRDT::Dictionary *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        unint64_t v12 = *(CRDT::Dictionary_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        uint64_t v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::Dictionary_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3A82E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::MergePartialFromCodedStream(CRDT::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v60, (uint64_t)this + 8);
  unint64_t TagFallback = (unint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v59, (google::protobuf::io::ZeroCopyOutputStream *)v60);
LABEL_2:
  while (2)
  {
    while (1)
    {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v6 < *((void *)a2 + 2) && (char)*v6 >= 1) {
        break;
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_121:
        uint64_t v57 = 1;
        goto LABEL_122;
      }
LABEL_32:
      unint64_t TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v59, v5);
      if ((TagFallback & 1) == 0) {
        goto LABEL_120;
      }
    }
    uint64_t v7 = *v6;
    *((_DWORD *)a2 + 8) = v7;
    *((void *)a2 + 1) = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *((_DWORD *)this + 8) |= 1u;
        int v9 = (CRDT::VectorTimestamp *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        unsigned int v61 = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          goto LABEL_120;
        }
        int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_120;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        BOOL v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_43:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::VectorTimestamp *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v61 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          goto LABEL_120;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v19, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_120;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 26) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_57:
          int v27 = *((_DWORD *)this + 17);
          uint64_t v28 = *((int *)this + 16);
          if ((int)v28 >= v27)
          {
            if (v27 == *((_DWORD *)this + 18)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 56, v27 + 1);
            }
            operator new();
          }
          uint64_t v29 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v28 + 1;
          unint64_t v30 = *(CRDT::Document_DocObject **)(v29 + 8 * v28);
          unsigned int v61 = 0;
          int v31 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
              goto LABEL_120;
            }
          }
          else
          {
            unsigned int v61 = *v31;
            *((void *)a2 + 1) = v31 + 1;
          }
          int v32 = *((_DWORD *)a2 + 14);
          int v33 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v32 + 1;
          if (v32 >= v33) {
            goto LABEL_120;
          }
          int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
          if (!CRDT::Document_DocObject::MergePartialFromCodedStream(v30, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_120;
          }
          unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v34);
          int v35 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v35, 1);
          int v36 = v35 - 1;
          if (v36 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v36;
          }
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v37 = *v26;
        }
        while (v37 == 26);
        if (v37 != 34) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_75:
          int v38 = *((_DWORD *)this + 23);
          uint64_t v39 = *((int *)this + 22);
          if ((int)v39 >= v38)
          {
            if (v38 == *((_DWORD *)this + 24)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 80, v38 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v40 = *((void *)this + 10);
          *((_DWORD *)this + 22) = v39 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *(std::string **)(v40 + 8 * v39));
          if (!TagFallback) {
            goto LABEL_120;
          }
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v41 = *v26;
        }
        while (v41 == 34);
        if (v41 != 42) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_85:
          int v42 = *((_DWORD *)this + 29);
          uint64_t v43 = *((int *)this + 28);
          if ((int)v43 >= v42)
          {
            if (v42 == *((_DWORD *)this + 30)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 104, v42 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v44 = *((void *)this + 13);
          *((_DWORD *)this + 28) = v43 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *(std::string **)(v44 + 8 * v43));
          if (!TagFallback) {
            goto LABEL_120;
          }
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v45 = *v26;
        }
        while (v45 == 42);
        if (v45 != 50) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_95:
          int v46 = *((_DWORD *)this + 35);
          uint64_t v47 = *((int *)this + 34);
          if ((int)v47 >= v46)
          {
            if (v46 == *((_DWORD *)this + 36)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 128, v46 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v48 = *((void *)this + 16);
          *((_DWORD *)this + 34) = v47 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *(std::string **)(v48 + 8 * v47));
          if (!TagFallback) {
            goto LABEL_120;
          }
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v49 = *v26;
        }
        while (v49 == 50);
        if (v49 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_105:
        *((_DWORD *)this + 8) |= 0x40u;
        int v50 = (topotext::VectorTimestamp *)*((void *)this + 19);
        if (!v50) {
          operator new();
        }
        unsigned int v61 = 0;
        unsigned int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53
          || (int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61),
              !topotext::VectorTimestamp::MergePartialFromCodedStream(v50, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_120:
          uint64_t v57 = 0;
          goto LABEL_122;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v54);
        int v55 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v56;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v57 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_122:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v59);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v60);
        return v57;
      case 2u:
        if (v8 == 18) {
          goto LABEL_43;
        }
        goto LABEL_30;
      case 3u:
        if (v8 == 26) {
          goto LABEL_57;
        }
        goto LABEL_30;
      case 4u:
        if (v8 == 34) {
          goto LABEL_75;
        }
        goto LABEL_30;
      case 5u:
        if (v8 == 42) {
          goto LABEL_85;
        }
        goto LABEL_30;
      case 6u:
        if (v8 == 50) {
          goto LABEL_95;
        }
        goto LABEL_30;
      case 7u:
        if (v8 == 58) {
          goto LABEL_105;
        }
LABEL_30:
        if (v8 && (v8 & 7) != 4) {
          goto LABEL_32;
        }
        goto LABEL_121;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1C3A83630(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x1093C4020A6E6BFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::StringTypeHandlerBase::New(google::protobuf::internal::StringTypeHandlerBase *this)
{
}

uint64_t CRDT::Document_DocObject::MergePartialFromCodedStream(CRDT::Document_DocObject *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v140, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139, (google::protobuf::io::ZeroCopyOutputStream *)v140);
  uint64_t v5 = (CRDT::RegisterLatest **)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v6 < v7)
      {
        uint64_t v8 = *v6;
        if (*v6 >= 1)
        {
          *((_DWORD *)a2 + 8) = v8;
          int v9 = (unsigned __int8 *)(v6 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v6 + 1) < v7)
        {
          int v10 = v6[1];
          if ((v8 & ~v10) >= 0x80) {
            break;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v11 & 0x100000000) != 0) {
        goto LABEL_16;
      }
LABEL_9:
      if (v11) {
        BOOL v12 = (v11 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_286:
        uint64_t v137 = 1;
        goto LABEL_287;
      }
LABEL_52:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, (google::protobuf::io::CodedOutputStream *)v139, v4))goto LABEL_285; {
    }
      }
    uint64_t v8 = (v8 + (v10 << 7) - 128);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = (unsigned __int8 *)(v6 + 2);
LABEL_8:
    *((void *)a2 + 1) = v9;
    unint64_t v11 = v8 | 0x100000000;
LABEL_16:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10) {
          goto LABEL_50;
        }
        if (*((_DWORD *)this + 12) != 1)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 1;
          operator new();
        }
        int v14 = *v5;
        unsigned int v141 = 0;
        BOOL v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          goto LABEL_285;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v14, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_67:
        if (*((_DWORD *)this + 12) != 2)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 2;
          operator new();
        }
        int v24 = *v5;
        unsigned int v141 = 0;
        int v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          goto LABEL_285;
        }
        int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v24, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_82:
        if (*((_DWORD *)this + 12) != 3)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 3;
          operator new();
        }
        int v32 = *v5;
        unsigned int v141 = 0;
        int v33 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)a2 + 14);
        int v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35) {
          goto LABEL_285;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v32, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v36);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_97:
        if (*((_DWORD *)this + 12) != 4)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          operator new();
        }
        uint64_t v40 = *v5;
        unsigned int v141 = 0;
        int v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          goto LABEL_285;
        }
        int v44 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v40, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v44);
        int v45 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v46;
        }
        uint64_t v47 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_112:
        if (*((_DWORD *)this + 12) != 5)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          operator new();
        }
        uint64_t v48 = *v5;
        unsigned int v141 = 0;
        int v49 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v49;
          *((void *)a2 + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)a2 + 14);
        int v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51) {
          goto LABEL_285;
        }
        int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v48, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v52);
        int v53 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v54;
        }
        int v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_127:
        if (*((_DWORD *)this + 12) != 6)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 6;
          operator new();
        }
        int v56 = *v5;
        unsigned int v141 = 0;
        uint64_t v57 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v57;
          *((void *)a2 + 1) = v57 + 1;
        }
        int v58 = *((_DWORD *)a2 + 14);
        int v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 >= v59) {
          goto LABEL_285;
        }
        int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v56, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v60);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v62;
        }
        int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_142:
        if (*((_DWORD *)this + 12) != 7)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 7;
          operator new();
        }
        int v64 = *v5;
        unsigned int v141 = 0;
        int v65 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v65;
          *((void *)a2 + 1) = v65 + 1;
        }
        int v66 = *((_DWORD *)a2 + 14);
        int v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67) {
          goto LABEL_285;
        }
        int v68 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Timestamp::MergePartialFromCodedStream(v64, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v68);
        int v69 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v69, 1);
        int v70 = v69 - 1;
        if (v70 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v70;
        }
        v71 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v71 >= *((void *)a2 + 2) || *v71 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 1;
LABEL_157:
        if (*((_DWORD *)this + 12) != 8)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 8;
          operator new();
        }
        int v72 = *v5;
        unsigned int v141 = 0;
        int v73 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v73 >= *((void *)a2 + 2) || *v73 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v73;
          *((void *)a2 + 1) = v73 + 1;
        }
        int v74 = *((_DWORD *)a2 + 14);
        int v75 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v74 + 1;
        if (v74 >= v75) {
          goto LABEL_285;
        }
        int v76 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v72, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v76);
        int v77 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v78;
        }
        v79 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v79 >= *((void *)a2 + 2) || *v79 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v79 + 1;
LABEL_172:
        if (*((_DWORD *)this + 12) != 9)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 9;
          operator new();
        }
        v80 = *v5;
        unsigned int v141 = 0;
        v81 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v81 >= *((void *)a2 + 2) || *v81 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v81;
          *((void *)a2 + 1) = v81 + 1;
        }
        int v82 = *((_DWORD *)a2 + 14);
        int v83 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v82 + 1;
        if (v82 >= v83) {
          goto LABEL_285;
        }
        int v84 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Index::MergePartialFromCodedStream(v80, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v84);
        int v85 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v85, 1);
        int v86 = v85 - 1;
        if (v86 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v86;
        }
        v87 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v87 >= *((void *)a2 + 2) || *v87 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v87 + 1;
LABEL_187:
        if (*((_DWORD *)this + 12) != 10)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 10;
          operator new();
        }
        v88 = *v5;
        unsigned int v141 = 0;
        v89 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v89 >= *((void *)a2 + 2) || *v89 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v89;
          *((void *)a2 + 1) = v89 + 1;
        }
        int v90 = *((_DWORD *)a2 + 14);
        int v91 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v90 + 1;
        if (v90 >= v91) {
          goto LABEL_285;
        }
        int v92 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!topotext::String::MergePartialFromCodedStream(v88, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v92);
        int v93 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v93, 1);
        int v94 = v93 - 1;
        if (v94 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v94;
        }
        v95 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v95 >= *((void *)a2 + 2) || *v95 != 88) {
          continue;
        }
        *((void *)a2 + 1) = v95 + 1;
LABEL_202:
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        v97 = (char *)*((void *)a2 + 1);
        unint64_t v96 = *((void *)a2 + 2);
        if ((unint64_t)v97 >= v96 || *v97 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_285; {
          v98 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v96 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = (CRDT::RegisterLatest *)*v97;
          v98 = v97 + 1;
          *((void *)a2 + 1) = v98;
        }
        *((_DWORD *)this + 12) = 11;
        if ((unint64_t)v98 < v96 && *v98 == 98)
        {
          *((void *)a2 + 1) = v98 + 1;
LABEL_210:
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 12;
          operator new();
        }
        continue;
      case 2u:
        if (v11 == 18) {
          goto LABEL_67;
        }
        goto LABEL_50;
      case 3u:
        if (v11 == 26) {
          goto LABEL_82;
        }
        goto LABEL_50;
      case 4u:
        if (v11 == 34) {
          goto LABEL_97;
        }
        goto LABEL_50;
      case 5u:
        if (v11 == 42) {
          goto LABEL_112;
        }
        goto LABEL_50;
      case 6u:
        if (v11 == 50) {
          goto LABEL_127;
        }
        goto LABEL_50;
      case 7u:
        if (v11 == 58) {
          goto LABEL_142;
        }
        goto LABEL_50;
      case 8u:
        if (v11 == 66) {
          goto LABEL_157;
        }
        goto LABEL_50;
      case 9u:
        if (v11 == 74) {
          goto LABEL_172;
        }
        goto LABEL_50;
      case 0xAu:
        if (v11 == 82) {
          goto LABEL_187;
        }
        goto LABEL_50;
      case 0xBu:
        if (v11 == 88) {
          goto LABEL_202;
        }
        goto LABEL_50;
      case 0xCu:
        if (v11 != 98) {
          goto LABEL_50;
        }
        if (*((_DWORD *)this + 12) != 12) {
          goto LABEL_210;
        }
        int v15 = *v5;
        unsigned int v141 = 0;
        v99 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v99 >= *((void *)a2 + 2) || *v99 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v99;
          *((void *)a2 + 1) = v99 + 1;
        }
        int v100 = *((_DWORD *)a2 + 14);
        int v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101) {
          goto LABEL_285;
        }
        int v102 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::OneOf::MergePartialFromCodedStream(v15, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v102);
        int v103 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v103, 1);
        int v104 = v103 - 1;
        if (v104 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v104;
        }
        v105 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v105 >= *((void *)a2 + 2) || *v105 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v105 + 1;
LABEL_223:
        if (*((_DWORD *)this + 12) != 13)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 13;
          operator new();
        }
        v106 = *v5;
        unsigned int v141 = 0;
        v107 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v107 >= *((void *)a2 + 2) || *v107 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v107;
          *((void *)a2 + 1) = v107 + 1;
        }
        int v108 = *((_DWORD *)a2 + 14);
        int v109 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v108 + 1;
        if (v108 >= v109) {
          goto LABEL_285;
        }
        int v110 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Document_CustomObject::MergePartialFromCodedStream(v106, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v110);
        int v111 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v111, 1);
        int v112 = v111 - 1;
        if (v112 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v112;
        }
        v113 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v113 >= *((void *)a2 + 2) || *v113 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v113 + 1;
LABEL_238:
        if (*((_DWORD *)this + 12) != 14)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 14;
          operator new();
        }
        v114 = *v5;
        unsigned int v141 = 0;
        v115 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v115 >= *((void *)a2 + 2) || *v115 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v115;
          *((void *)a2 + 1) = v115 + 1;
        }
        int v116 = *((_DWORD *)a2 + 14);
        int v117 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v116 + 1;
        if (v116 >= v117) {
          goto LABEL_285;
        }
        int v118 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::StringArray::MergePartialFromCodedStream(v114, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v118);
        int v119 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v119, 1);
        int v120 = v119 - 1;
        if (v120 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v120;
        }
        v121 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v121 >= *((void *)a2 + 2) || *v121 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v121 + 1;
LABEL_253:
        if (*((_DWORD *)this + 12) != 15)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 15;
          operator new();
        }
        v122 = *v5;
        unsigned int v141 = 0;
        v123 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v123 >= *((void *)a2 + 2) || *v123 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v123;
          *((void *)a2 + 1) = v123 + 1;
        }
        int v124 = *((_DWORD *)a2 + 14);
        int v125 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v124 + 1;
        if (v124 >= v125) {
          goto LABEL_285;
        }
        int v126 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Array::MergePartialFromCodedStream(v122, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v126);
        int v127 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v127, 1);
        int v128 = v127 - 1;
        if (v128 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v128;
        }
        v129 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v129 <= 1 || *v129 != 130 || v129[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v129 + 2;
LABEL_269:
        if (*((_DWORD *)this + 12) != 16)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 16;
          operator new();
        }
        v130 = *v5;
        unsigned int v141 = 0;
        v131 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v131 >= *((void *)a2 + 2) || *v131 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v131;
          *((void *)a2 + 1) = v131 + 1;
        }
        int v132 = *((_DWORD *)a2 + 14);
        int v133 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v132 + 1;
        if (v132 >= v133
          || (int v134 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141),
              !CRDT::OrderedSet::MergePartialFromCodedStream(v130, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_285:
          uint64_t v137 = 0;
          goto LABEL_287;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v134);
        int v135 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v135, 1);
        int v136 = v135 - 1;
        if (v136 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v136;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v137 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_287:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v140);
        return v137;
      case 0xDu:
        if (v11 == 106) {
          goto LABEL_223;
        }
        goto LABEL_50;
      case 0xEu:
        if (v11 == 114) {
          goto LABEL_238;
        }
        goto LABEL_50;
      case 0xFu:
        if (v11 == 122) {
          goto LABEL_253;
        }
        goto LABEL_50;
      case 0x10u:
        if (v11 == 130) {
          goto LABEL_269;
        }
LABEL_50:
        if (v11 && (v11 & 7) != 4) {
          goto LABEL_52;
        }
        goto LABEL_286;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1C3A84A8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_DocObject::clear_contents(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
      this = *(void *)(this + 40);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

void CRDT::Document_CustomObject::~Document_CustomObject(CRDT::Document_CustomObject *this)
{
  CRDT::Document_CustomObject::~Document_CustomObject(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F27E90;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void topotext::Substring::SharedDtor(topotext::Substring *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Substring *)topotext::Substring::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

void topotext::Substring::~Substring(void **this)
{
  *this = &unk_1F1F25FF8;
  topotext::Substring::SharedDtor((topotext::Substring *)this);
  uint64_t v2 = this[8];
  if (v2) {
    MEMORY[0x1C877D620](v2, 0x1000C8052888210);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Substring::~Substring(this);
  JUMPOUT(0x1C877D640);
}

void topotext::CharID::~CharID(void **this)
{
  topotext::CharID::~CharID(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F25F80;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x1C877D620);
  }
  return result;
}

void topotext::AttributeRun::~AttributeRun(void **this)
{
  topotext::AttributeRun::~AttributeRun(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F26160;
  topotext::AttributeRun::SharedDtor((topotext::AttributeRun *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::AttributeRun::SharedDtor(topotext::AttributeRun *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 9);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (topotext::AttributeRun *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::AttributeRun *)topotext::AttributeRun::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 5);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)v1 + 7);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)v1 + 11);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)v1 + 12);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)v1 + 14);
    if (v8)
    {
      int v9 = *(void (**)(void))(*(void *)v8 + 8);
      v9();
    }
  }
}

void topotext::ParagraphStyle::~ParagraphStyle(void **this)
{
  topotext::ParagraphStyle::~ParagraphStyle(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F26250;
  topotext::ParagraphStyle::SharedDtor((topotext::ParagraphStyle *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::ParagraphStyle::SharedDtor(topotext::ParagraphStyle *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 9);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (topotext::ParagraphStyle *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::ParagraphStyle *)topotext::ParagraphStyle::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 7);
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

void topotext::protobuf_AddDesc_topotext_2eproto(topotext *this)
{
  uint64_t v1 = topotext::protobuf_AddDesc_topotext_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = topotext::protobuf_AddDesc_topotext_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&topotext::protobuf_AddDesc_topotext_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3A85264(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void CRDT::Document_DocObject::~Document_DocObject(CRDT::Document_DocObject *this)
{
  CRDT::Document_DocObject::~Document_DocObject(this);
  JUMPOUT(0x1C877D640);
}

{
  CRDT::Document_DocObject *v1;
  uint64_t vars8;

  uint64_t v1 = this;
  *(void *)this = &unk_1F1F27F08;
  if (*((_DWORD *)this + 12)) {
    this = (CRDT::Document_DocObject *)CRDT::Document_DocObject::clear_contents((uint64_t)this);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0) {
    operator delete(*((void **)v1 + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

void CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(void **this)
{
  CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F27E18;
  CRDT::Document_CustomObject_MapEntry::SharedDtor((CRDT::Document_CustomObject_MapEntry *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void CRDT::Document_CustomObject_MapEntry::SharedDtor(CRDT::Document_CustomObject_MapEntry *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Document_CustomObject_MapEntry *)CRDT::Document_CustomObject_MapEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      char v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

void CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(void **this)
{
  CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F27878;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

uint64_t CRDT::Document_CustomObject::MergePartialFromCodedStream(CRDT::Document_CustomObject *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 3)
      {
        if (v7 == 26) {
          goto LABEL_27;
        }
LABEL_19:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_16;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
LABEL_48:
        uint64_t v26 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_47; {
    }
      }
    if (v7 != 8) {
      goto LABEL_19;
    }
    unsigned int v30 = 0;
    int v9 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        goto LABEL_47;
      }
      unsigned int v11 = v30;
      BOOL v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
    }
    else
    {
      unsigned int v11 = *v9;
      BOOL v12 = v9 + 1;
      *((void *)a2 + 1) = v12;
    }
    *((_DWORD *)this + 16) = v11;
    *((_DWORD *)this + 8) |= 1u;
    if ((unint64_t)v12 < v10 && *v12 == 26)
    {
      do
      {
        *((void *)a2 + 1) = v12 + 1;
LABEL_27:
        int v14 = *((_DWORD *)this + 13);
        uint64_t v15 = *((int *)this + 12);
        if ((int)v15 >= v14)
        {
          if (v14 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v14 + 1);
          }
          operator new();
        }
        uint64_t v16 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v15 + 1;
        int v17 = *(CRDT::Document_CustomObject_MapEntry **)(v16 + 8 * v15);
        unsigned int v30 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v30 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20
          || (int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream(v17, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v26 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        BOOL v12 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v12 < v25 && *v12 == 26);
      if (v12 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v26 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3A85834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Reserve(uint64_t this, int a2)
{
  int v2 = *(_DWORD *)(this + 16);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(this + 16) = v3;
    operator new[]();
  }
  return this;
}

uint64_t CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18)
      {
        int v14 = *((_DWORD *)this + 8);
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 8)
    {
      unsigned int v27 = 0;
      unint64_t v10 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
          goto LABEL_43;
        }
        unsigned int v11 = v27;
        BOOL v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        BOOL v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 12) = v11;
      int v14 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + 8) = v14;
      if ((unint64_t)v12 < v9 && *v12 == 18)
      {
        *((void *)a2 + 1) = v12 + 1;
LABEL_28:
        *((_DWORD *)this + 8) = v14 | 2;
        uint64_t v15 = (CRDT::ObjectID *)*((void *)this + 5);
        if (!v15) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_43;
          }
        }
        else
        {
          unsigned int v27 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18
          || (int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::ObjectID::MergePartialFromCodedStream(v15, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_43:
          uint64_t v23 = 0;
          goto LABEL_45;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t v23 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
    else
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_44;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4))goto LABEL_43; {
    }
      }
  }
  if (v7) {
    BOOL v13 = (v7 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    goto LABEL_16;
  }
LABEL_44:
  uint64_t v23 = 1;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3A85B98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(void **this)
{
  topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F25E18;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void CRDT::Dictionary_Element::~Dictionary_Element(void **this)
{
  CRDT::Dictionary_Element::~Dictionary_Element(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F27968;
  CRDT::Dictionary_Element::SharedDtor((CRDT::Dictionary_Element *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

uint64_t CRDT::Dictionary_Element::MergePartialFromCodedStream(CRDT::Dictionary_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v45, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v44, (google::protobuf::io::ZeroCopyOutputStream *)v45);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_13:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_81:
        uint64_t v42 = 1;
        goto LABEL_82;
      }
LABEL_26:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v44, v4))goto LABEL_80; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_24;
        }
        *((_DWORD *)this + 8) |= 1u;
        unint64_t v9 = (CRDT::ObjectID *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        unsigned int v46 = 0;
        unint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          goto LABEL_80;
        }
        int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::ObjectID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v46 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          goto LABEL_80;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v19, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_51:
        *((_DWORD *)this + 8) |= 4u;
        unsigned int v27 = (CRDT::VectorTimestamp *)*((void *)this + 7);
        if (!v27) {
          operator new();
        }
        unsigned int v46 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          goto LABEL_80;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v27, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v31);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_65:
        *((_DWORD *)this + 8) |= 8u;
        int v35 = (CRDT::RegisterLatest *)*((void *)this + 8);
        if (!v35) {
          operator new();
        }
        unsigned int v46 = 0;
        int v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38
          || (int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46),
              !CRDT::RegisterLatest::MergePartialFromCodedStream(v35, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_80:
          uint64_t v42 = 0;
          goto LABEL_82;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v39);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v41;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v42 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_82:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v44);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v45);
        return v42;
      case 2u:
        if (v7 == 18) {
          goto LABEL_37;
        }
        goto LABEL_24;
      case 3u:
        if (v7 == 26) {
          goto LABEL_51;
        }
        goto LABEL_24;
      case 4u:
        if (v7 == 34) {
          goto LABEL_65;
        }
LABEL_24:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_26;
        }
        goto LABEL_81;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1C3A86288(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

CRDT::ObjectID *CRDT::ObjectID::ObjectID(CRDT::ObjectID *this)
{
  *(void *)this = &unk_1F1F27710;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::ObjectID::SharedCtor(this);
  return this;
}

void sub_1C3A86328(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::SharedCtor(CRDT::ObjectID *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 12) = 0;
}

void sub_1C3A863F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp::MergePartialFromCodedStream(CRDT::VectorTimestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        int v12 = *(CRDT::VectorTimestamp_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::VectorTimestamp_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3A86694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp_Element::MergePartialFromCodedStream(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v7 == 16)
        {
          int v15 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_49;
        }
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if (v7 != 8) {
          goto LABEL_22;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_50; {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          int v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
LABEL_32:
          if ((unint64_t)v15 >= v10 || *v15 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 6))goto LABEL_50; {
            int v16 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((void *)this + 6) = *v15;
            int v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v16 < v10 && *v16 == 24)
          {
            int v14 = v16 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_13:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
LABEL_49:
          uint64_t v18 = 1;
          goto LABEL_51;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_50; {
      }
        }
    }
    if (v7 != 24) {
      goto LABEL_22;
    }
    int v14 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_40:
    if ((unint64_t)v14 < v10 && (*v14 & 0x80000000) == 0)
    {
      *((void *)this + 7) = *v14;
      int v17 = (unsigned __int8 *)(v14 + 1);
      *((void *)a2 + 1) = v17;
      goto LABEL_45;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 7)) {
      break;
    }
    int v17 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_45:
    *((_DWORD *)this + 8) |= 4u;
    if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v18 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_51;
    }
  }
LABEL_50:
  uint64_t v18 = 0;
LABEL_51:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1C3A86948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::~AttachmentInfo(void **this)
{
  topotext::AttachmentInfo::~AttachmentInfo(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F262C8;
  topotext::AttachmentInfo::SharedDtor((topotext::AttachmentInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void topotext::AttachmentInfo::SharedDtor(topotext::AttachmentInfo *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::AttachmentInfo *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::AttachmentInfo *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 7);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (topotext::AttachmentInfo *)MEMORY[0x1C877D640](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 8);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (topotext::AttachmentInfo *)MEMORY[0x1C877D640](v6, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this)
{
  topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F25E90;
  topotext::VectorTimestamp_Clock::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void topotext::VectorTimestamp_Clock::SharedDtor(topotext::VectorTimestamp_Clock *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 5);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (topotext::VectorTimestamp_Clock *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::Color::~Color(void **this)
{
  topotext::Color::~Color(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *this = &unk_1F1F26598;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

void sub_1C3A86F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(&location);
  objc_sync_exit(v22);
  _Unwind_Resume(a1);
}

void sub_1C3A8700C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A870BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3A87C0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_1_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_1_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x18u);
}

void OUTLINED_FUNCTION_1_6(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_1_7(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_1_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_1C3A886F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3A88838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A8B250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A8BAEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3A8BC78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

void sub_1C3A8D114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_1C3A8D30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A8D5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__CFString *ICNotesAppURLScheme()
{
  return @"applenotes";
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_1C3A8DAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__push_back_slow_path<std::pair<TopoID,TopoID> const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[32 * v9];
  *(void *)uint64_t v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((void *)v11 + 2) = *(id *)(a2 + 16);
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a2 + 24);
  _OWORD v14[2] = v11 + 32;
  std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1C3A8DBFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  _OWORD v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a7 + v7;
      uint64_t v9 = a3 + v7;
      uint64_t v10 = *(void *)(a3 + v7 - 32);
      *(void *)(v9 - 32) = 0;
      *(void *)(v8 - 32) = v10;
      *(_DWORD *)(v8 - --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(_DWORD *)(a3 + v7 - 24);
      uint64_t v11 = *(void *)(a3 + v7 - 16);
      *(void *)(v9 - 16) = 0;
      *(void *)(v8 - 16) = v11;
      *(_DWORD *)(v8 - 8) = *(_DWORD *)(a3 + v7 - 8);
      v7 -= 32;
    }
    while (a3 + v7 != a5);
    *((void *)&v17 + 1) = a7 + v7;
    uint64_t v12 = v17;
  }
  char v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

uint64_t std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::pair<TopoID,TopoID>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
  }
}

void sub_1C3A8E1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t topotext::Color::MergePartialFromCodedStream(topotext::Color *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_39:
        uint64_t v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        uint64_t v13 = 0;
        goto LABEL_40;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_33:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 == 21) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 3u:
        if (v7 == 29) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 4u:
        if (v7 == 37) {
          goto LABEL_33;
        }
LABEL_29:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_31;
        }
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3A8E780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  uint64_t v3 = (unsigned int *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFFC) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    uint64_t v3 = (unsigned int *)__dst;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw(this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

void sub_1C3A8F184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double versioned_document::Document::Document(versioned_document::Document *this)
{
  *(void *)this = &unk_1F1F24660;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

void sub_1C3A8F590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  versioned_document::Version::~Version((versioned_document::Version *)va);
  _Unwind_Resume(a1);
}

void versioned_document::Version::~Version(void **this)
{
  *this = &unk_1F1F246D8;
  versioned_document::Version::SharedDtor((versioned_document::Version *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  versioned_document::Version::~Version(this);
  JUMPOUT(0x1C877D640);
}

void versioned_document::Version::SharedDtor(versioned_document::Version *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 6);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (versioned_document::Version *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(versioned_document *this)
{
  uint64_t v1 = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3A8F71C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A8F7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this, const versioned_document::Version *a2)
{
  *(void *)this = &unk_1F1F246D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this);
  versioned_document::Version::MergeFrom(this, a2);
  return this;
}

void sub_1C3A8F878(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void versioned_document::Version::SharedCtor(versioned_document::Version *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3A8F944(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *versioned_document::Version::MergeFrom(versioned_document::Version *this, const versioned_document::Version *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/versioned-document.pb.cc", 519);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    uint64_t v8 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 4u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v9 = (std::string *)*((void *)this + 6);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v9, v8);
  }
LABEL_14:
  uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  BOOL v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1C3A8FAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

atomic_ullong *google::protobuf::GoogleOnceInitImpl(atomic_ullong *result, uint64_t a2)
{
  atomic_ullong v2 = *result;
  __dmb(0xBu);
  if (v2 != 2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = 0;
      atomic_compare_exchange_strong(result, (unint64_t *)&v4, 1uLL);
      if (!v4)
      {
        double result = (atomic_ullong *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
        __dmb(0xBu);
        uint64_t *v3 = 2;
        return result;
      }
    }
    while (!*result);
    if (*result == 1)
    {
      do
      {
        double result = (atomic_ullong *)sched_yield();
        uint64_t v5 = *v3;
        __dmb(0xBu);
      }
      while (v5 == 1);
    }
  }
  return result;
}

uint64_t google::protobuf::internal::FunctionClosure0::Run(uint64_t (**this)(void))
{
  int v2 = *((unsigned __int8 *)this + 16);
  uint64_t result = this[1]();
  if (this && v2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t (**)(void)))*((void *)*this + 1);
    return v4(this);
  }
  return result;
}

void google::protobuf::internal::OnShutdown(google::protobuf::internal *this, void (*a2)(void))
{
  uint64_t v3 = google::protobuf::internal::shutdown_functions_init;
  __dmb(0xBu);
  if (v3 != 2)
  {
    v19[0] = &unk_1F1F24E80;
    v19[1] = google::protobuf::internal::InitShutdownFunctions;
    char v20 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::shutdown_functions_init, (uint64_t)v19);
  }
  uint64_t v4 = (pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex;
  google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex);
  uint64_t v5 = (void **)google::protobuf::internal::shutdown_functions;
  int v6 = *(void **)(google::protobuf::internal::shutdown_functions + 8);
  unint64_t v7 = *(void *)(google::protobuf::internal::shutdown_functions + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = ((uint64_t)v6 - *(void *)google::protobuf::internal::shutdown_functions) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v7 - *(void *)google::protobuf::internal::shutdown_functions;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      int v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(google::protobuf::internal::shutdown_functions + 16, v12);
    }
    else {
      int v13 = 0;
    }
    int v14 = &v13[8 * v9];
    std::string::size_type v15 = &v13[8 * v12];
    *(void *)int v14 = this;
    uint64_t v8 = v14 + 8;
    char v17 = (char *)*v5;
    long long v16 = (char *)v5[1];
    if (v16 != *v5)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      long long v16 = (char *)*v5;
    }
    *uint64_t v5 = v14;
    v5[1] = v8;
    void v5[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *int v6 = this;
    uint64_t v8 = v6 + 1;
  }
  v5[1] = v8;
  google::protobuf::internal::Mutex::Unlock(v4);
}

void sub_1C3A8FD2C(_Unwind_Exception *a1)
{
  google::protobuf::internal::Mutex::Unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::Mutex::Unlock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_unlock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    int v6 = 311;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_unlock: ");
    uint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1C3A8FDE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::Mutex::Lock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_lock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    int v6 = 304;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_lock: ");
    uint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1C3A8FEA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::InitShutdownFunctions(google::protobuf::internal *this)
{
}

void sub_1C3A8FF50(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::InitEmptyString(google::protobuf::internal *this)
{
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::DeleteSubrange(google::protobuf::internal::RepeatedPtrFieldBase *a1, int a2, int a3)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1134);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1135);
  unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)a1 + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1136);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    int v9 = a2;
    int v10 = a3;
    do
    {
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a1, v9);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
      ++v9;
      --v10;
    }
    while (v10);
  }
  google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(a1, a2, a3, 0);
}

void sub_1C3A90148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 894);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 895);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3A9022C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2, int a3, uint64_t *a4)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1145);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1146);
  int v9 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 1147);
    int v10 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    if (a4)
    {
      uint64_t v11 = a3;
      int v12 = a2;
      do
      {
        *a4++ = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this, v12++);
        --v11;
      }
      while (v11);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::CloseGap((uint64_t)this, a2, a3);
  }
}

void sub_1C3A903A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(uint64_t this, int a2, int a3)
{
  uint64_t v3 = *(int *)(this + 12);
  if (a3 + a2 < (int)v3)
  {
    uint64_t v4 = a2;
    do
    {
      *(void *)(*(void *)this + 8 * v4) = *(void *)(*(void *)this + 8 * v4 + 8 * a3);
      ++v4;
    }
    while (a3 + v4 < v3);
  }
  *(_DWORD *)(this + 8) -= a3;
  *(_DWORD *)(this + 12) = v3 - a3;
  return this;
}

void CRDT::protobuf_AddDesc_crframework_2eproto_impl(CRDT *this, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", a4);
  topotext::protobuf_AddDesc_topotext_2eproto(v4);
  operator new();
}

void sub_1C3A90A70(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1C877D640](v2, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

CRDT::Document *CRDT::Document::Document(CRDT::Document *this)
{
  *(void *)this = &unk_1F1F27F80;
  *((void *)this + 1) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 36) = 0;
  CRDT::Document::SharedCtor(this);
  return this;
}

void sub_1C3A90B68(_Unwind_Exception *a1)
{
  char v7 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0) {
    operator delete(*v6);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::Document::SharedCtor(CRDT::Document *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 19) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
}

void sub_1C3A90C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::protobuf_AddDesc_topotext_2eproto_impl(topotext *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1C3A911A4(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if ((int)a2 > 2006001)
  {
    int v21 = 3;
    BOOL v22 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    int v23 = 61;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString(a2, &v18);
    if ((v20 & 0x80u) == 0) {
      char v7 = (const std::string::value_type *)&v18;
    }
    else {
      char v7 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v8 = v20;
    }
    else {
      std::string::size_type v8 = v19;
    }
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v10 = v17;
    }
    else {
      std::string::size_type v10 = v16;
    }
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  if ((int)this < 2006000)
  {
    int v21 = 3;
    BOOL v22 = "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/stubs/common.cc";
    int v23 = 72;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString(this, &v18);
    if ((v20 & 0x80u) == 0) {
      uint64_t v11 = (const std::string::value_type *)&v18;
    }
    else {
      uint64_t v11 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v12 = v20;
    }
    else {
      std::string::size_type v12 = v19;
    }
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      char v13 = (const std::string::value_type *)&__p;
    }
    else {
      char v13 = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v14 = v17;
    }
    else {
      std::string::size_type v14 = v16;
    }
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1C3A915FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

topotext::Selection *topotext::Selection::Selection(topotext::Selection *this)
{
  *(void *)this = &unk_1F1F260E8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  topotext::Selection::SharedCtor(this);
  return this;
}

void sub_1C3A916E4(_Unwind_Exception *a1)
{
  uint64_t v5 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  if (v1[31] < 0) {
    operator delete(*v4);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Selection::SharedCtor(topotext::Selection *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 4) = 0;
}

void sub_1C3A917CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Location *topotext::Location::Location(topotext::Location *this)
{
  *(void *)this = &unk_1F1F263B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Location::SharedCtor(this);
  return this;
}

void sub_1C3A91838(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Location::SharedCtor(topotext::Location *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 36) = 0;
  *((_DWORD *)this + 13) = 0;
  *((void *)this + 7) = v3;
  *((unsigned char *)this + 64) = 0;
  *((_DWORD *)this + 8) = 0;
}

void sub_1C3A91914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Media *topotext::Media::Media(topotext::Media *this)
{
  *(void *)this = &unk_1F1F26430;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Media::SharedCtor(this);
  return this;
}

void sub_1C3A91980(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Media::SharedCtor(topotext::Media *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = v3;
  *((void *)this + 8) = v3;
  *((void *)this + 9) = 0;
  *((void *)this + 4) = 0;
}

void sub_1C3A91A54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Todo *topotext::Todo::Todo(topotext::Todo *this)
{
  *(void *)this = &unk_1F1F26520;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Todo::SharedCtor(this);
  return this;
}

void sub_1C3A91AC0(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Todo::SharedCtor(topotext::Todo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((unsigned char *)this + 48) = 0;
}

void sub_1C3A91B8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Font *topotext::Font::Font(topotext::Font *this)
{
  *(void *)this = &unk_1F1F261D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Font::SharedCtor(this);
  return this;
}

void sub_1C3A91BF8(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::Font::SharedCtor(topotext::Font *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
}

void sub_1C3A91CC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp::MergePartialFromCodedStream(topotext::VectorTimestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        std::string::size_type v12 = *(topotext::VectorTimestamp_Clock **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        char v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unsigned __int8 v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3A91F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(topotext::VectorTimestamp_Clock *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v27, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v26, (google::protobuf::io::ZeroCopyOutputStream *)v27);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_27;
        }
LABEL_23:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_20;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_16:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_48:
        uint64_t v24 = 1;
        goto LABEL_49;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v26, v4))goto LABEL_47; {
    }
      }
    if (v7 != 10) {
      goto LABEL_23;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
      goto LABEL_47;
    }
    uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v10 + 1;
LABEL_27:
        int v12 = *((_DWORD *)this + 15);
        uint64_t v13 = *((int *)this + 14);
        if ((int)v13 >= v12)
        {
          if (v12 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v12 + 1);
          }
          operator new();
        }
        uint64_t v14 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v13 + 1;
        int v15 = *(topotext::VectorTimestamp_Clock_ReplicaClock **)(v14 + 8 * v13);
        unsigned int v28 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v28 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18
          || (int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v28),
              !topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream(v15, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v24 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v23 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v10 < v23 && *v10 == 18);
      if (v10 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v24 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v26);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v27);
  return v24;
}

void sub_1C3A9229C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38; {
          BOOL v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          BOOL v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          uint64_t v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    uint64_t v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      uint64_t v14 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
      break;
    }
    uint64_t v14 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1C3A924D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New()
{
}

void sub_1C3A92534(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

topotext::VectorTimestamp_Clock *topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this)
{
  *(void *)this = &unk_1F1F25E90;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  topotext::VectorTimestamp_Clock::SharedCtor(this);
  return this;
}

void sub_1C3A925C0(_Unwind_Exception *a1)
{
  char v4 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  if (v1[31] < 0) {
    operator delete(*v3);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock::SharedCtor(topotext::VectorTimestamp_Clock *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3A92698(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::PreviewImage *topotext::PreviewImage::PreviewImage(topotext::PreviewImage *this)
{
  *(void *)this = &unk_1F1F264A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::PreviewImage::SharedCtor(this);
  return this;
}

void sub_1C3A92708(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::SharedCtor(topotext::PreviewImage *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((_DWORD *)this + 12) = 0;
  *((_WORD *)this + 26) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = v3;
}

void sub_1C3A927E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::BoxedValue *topotext::BoxedValue::BoxedValue(topotext::BoxedValue *this)
{
  *(void *)this = &unk_1F1F26610;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::BoxedValue::SharedCtor(this);
  return this;
}

void sub_1C3A9284C(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::BoxedValue::SharedCtor(topotext::BoxedValue *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 12) = 0;
}

void sub_1C3A92918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::Attachment *topotext::Attachment::Attachment(topotext::Attachment *this)
{
  *(void *)this = &unk_1F1F26340;
  *((void *)this + 1) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 42) = 0;
  *((void *)this + 43) = 0;
  *((_DWORD *)this + 88) = 0;
  topotext::Attachment::SharedCtor(this);
  return this;
}

void sub_1C3A929B8(_Unwind_Exception *a1)
{
  uint64_t v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0) {
    operator delete(*v5);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

double topotext::Attachment::SharedCtor(topotext::Attachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v6[0] = &unk_1F1F24E80;
    v6[1] = google::protobuf::internal::InitEmptyString;
    char v7 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v6);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v6);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = v3;
  *((void *)this + 9) = v3;
  *((void *)this + 10) = v3;
  *((void *)this + 11) = v3;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 40) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = v3;
  *((unsigned char *)this + 164) = 0;
  *((void *)this + 49) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 232) = 0u;
  char v5 = (char *)this + 232;
  *((void *)v5 - 6) = 0;
  *((void *)v5 - 5) = 0;
  *((void *)v5 - 4) = v3;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((void *)v5 + 8) = 0;
  *((void *)v5 + 9) = v3;
  *((void *)v5 + 10) = v3;
  *((void *)v5 + 11) = v3;
  *((void *)v5 + 12) = v3;
  *((void *)v5 + 16) = v3;
  *((void *)v5 + 17) = v3;
  *((void *)v5 + 18) = v3;
  *((void *)v5 + 19) = v3;
  *((void *)v5 - 25) = 0;
  return result;
}

void sub_1C3A92B00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this)
{
  *(void *)this = &unk_1F1F27C38;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this);
  return this;
}

void sub_1C3A92B6C(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::SharedCtor(CRDT::StringArray_ArrayAttachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3A92C38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl(versioned_document *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1C3A92D5C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this)
{
  *(void *)this = &unk_1F1F246D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this);
  return this;
}

void sub_1C3A92DD8(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void sub_1C3A92EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3A92F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A9315C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Block_object_dispose(&a17, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(v17);
  a9.super_class = (Class)ICTTMergeableString;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::Clear(CRDT::Document *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x43) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 5);
      if (v3)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 6);
      if (v4)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4 + 40);
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x40) != 0)
    {
      char v5 = (topotext::VectorTimestamp *)*((void *)this + 19);
      if (v5) {
        topotext::VectorTimestamp::Clear(v5);
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 56);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      uint64_t v2 = *(void *)(*(void *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + 8) = 0;
  return result;
}

void sub_1C3A93664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_1C3A93780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoID,TopoID>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 32)
  {

    char v5 = *(void **)(i - 32);
  }
  *(void *)(a1 + 8) = a2;
}

void sub_1C3A93CE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

topotext::String *topotext::String::String(topotext::String *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F1F25DA0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  topotext::String::SharedCtor(this);
  return this;
}

void sub_1C3A93D98(_Unwind_Exception *a1)
{
  uint64_t v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v2);
  if (v1[31] < 0) {
    operator delete(*v5);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void topotext::String::SharedCtor(topotext::String *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((void *)this + 9) = 0;
}

void sub_1C3A93E8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::String::~String(topotext::String *this)
{
  *(void *)this = &unk_1F1F25DA0;
  topotext::String::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 13);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 10);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  topotext::String::~String(this);
  JUMPOUT(0x1C877D640);
}

void topotext::String::SharedDtor(topotext::String *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (topotext::String *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::String *)topotext::String::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 9);
    if (v4)
    {
      char v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

void topotext::VectorTimestamp::~VectorTimestamp(topotext::VectorTimestamp *this)
{
  topotext::VectorTimestamp::~VectorTimestamp(this);
  JUMPOUT(0x1C877D640);
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F1F25F08;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

void sub_1C3A94120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A943CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void topotext::WallClockMergeableValue::~WallClockMergeableValue(void **this)
{
  *this = &unk_1F1F26688;
  topotext::WallClockMergeableValue::SharedDtor((topotext::WallClockMergeableValue *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::WallClockMergeableValue::~WallClockMergeableValue(this);
  JUMPOUT(0x1C877D640);
}

double topotext::WallClockMergeableValue::WallClockMergeableValue(topotext::WallClockMergeableValue *this)
{
  *(void *)this = &unk_1F1F26688;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void topotext::WallClockMergeableValue::SharedDtor(topotext::WallClockMergeableValue *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::WallClockMergeableValue *)topotext::WallClockMergeableValue::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 6);
    if (v2)
    {
      BOOL v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

void sub_1C3A945B8(_Unwind_Exception *a1)
{
  BOOL v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1C3A947EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __ICPaperKitBackedAttachmentUTTypes_block_invoke()
{
  v4[4] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = @"com.apple.paper";
  v4[1] = @"com.apple.paper.doc.pdf";
  void v4[2] = @"com.apple.paper.doc.scan";
  v4[3] = @"com.apple.paper.doc";
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:4];
  uint64_t v2 = [v0 setWithArray:v1];
  BOOL v3 = (void *)ICPaperKitBackedAttachmentUTTypes_types;
  ICPaperKitBackedAttachmentUTTypes_types = v2;
}

uint64_t libCTGreenTeaLoggerLibrary()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  uint64_t v6 = 0;
  char v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  uint64_t v9 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  if (!libCTGreenTeaLoggerLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    void v3[2] = (void *)3221225472;
    v3[3] = __libCTGreenTeaLoggerLibraryCore_block_invoke;
    v3[4] = &unk_1E64A44D8;
    uint64_t v4 = &v6;
    char v5 = v3;
    long long v10 = xmmword_1E64A8E18;
    uint64_t v11 = 0;
    void v7[3] = _sl_dlopen();
    libCTGreenTeaLoggerLibraryCore_frameworkLibrary = *(void *)(v4[1] + 24);
    uint64_t v0 = v7[3];
  }
  _Block_object_dispose(&v6, 8);
  uint64_t v1 = v3[0];
  if (!v0)
  {
    uint64_t v1 = (void *)abort_report_np();
    __break(1u);
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1C3A95344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A954A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A95544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A955AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3A95C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void minIdPath(TopoSubstring *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  id v3 = *(id *)a1;
  uint64_t v4 = *((unsigned int *)v2 + 2);
  int v72 = 0;
  int v73 = 0;
  uint64_t v74 = 0;
  long long v69 = 0u;
  long long v70 = 0u;
  float v71 = 1.0;
  uint64_t v6 = (TopoSubstring ***)((char *)v2 + 48);
  char v5 = (TopoSubstring **)*((void *)v2 + 6);
  uint64_t v8 = (void *)((char *)v2 + 56);
  char v7 = (TopoSubstring **)*((void *)v2 + 7);
  if (v7 == v5)
  {
    unint64_t v9 = 0;
  }
  else
  {
    unint64_t v9 = 0;
    while (1)
    {
      if ((unint64_t)((char *)v7 - (char *)v5) >= 9)
      {
        long long v10 = v2;
        uint64_t v11 = v6;
        uint64_t v12 = v8;
        removeDirectToSinkEdges(v10);
        uint64_t v8 = v12;
        uint64_t v6 = v11;
        char v7 = (TopoSubstring **)*v12;
        char v5 = *v11;
      }
      uint64_t v13 = (char *)v7 - (char *)v5;
      if (v13 != 8) {
        break;
      }
      uint64_t v2 = *v5;
      if (*((_DWORD *)*v5 + 18) > 1u)
      {
        unint64_t v9 = 1;
        goto LABEL_76;
      }
      id v14 = v3;
      id v15 = *(id *)v2;
      int v16 = v15;
      uint64_t v17 = *((unsigned int *)v2 + 2);
      if (v4 < v17)
      {
        int v18 = v14;
LABEL_70:
        uint64_t v17 = v4;
        goto LABEL_71;
      }
      int v18 = v15;
      if (v4 == v17)
      {
        if ([v14 TTCompare:v15] == -1) {
          int v18 = v14;
        }
        else {
          int v18 = v16;
        }
        goto LABEL_70;
      }
LABEL_71:
      id v3 = v18;

      uint64_t v4 = v17;
LABEL_72:
      uint64_t v6 = (TopoSubstring ***)((char *)v2 + 48);
      char v5 = (TopoSubstring **)*((void *)v2 + 6);
      uint64_t v8 = (void *)((char *)v2 + 56);
      char v7 = (TopoSubstring **)*((void *)v2 + 7);
      if (v7 == v5) {
        goto LABEL_76;
      }
    }
    int v60 = (id **)v8;
    int v61 = (id **)v6;
    uint64_t v19 = (uint64_t)v72;
    int v20 = v73;
    if (v73 != v72)
    {
      do
      {
        BOOL v21 = *(v20 - 5);
        v20 -= 5;
      }
      while (v20 != (id *)v19);
      uint64_t v13 = (char *)*v60 - (char *)*v61;
    }
    int v73 = (id *)v19;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve((uint64_t *)&v72, v13 >> 3);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(&v69);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>((uint64_t)&v69, vcvtps_u32_f32((float)(unint64_t)(*v60 - *v61) / v71));
    int v22 = *v61;
    uint64_t v23 = *v60;
    while (v22 != v23)
    {
      id obj = 0;
      id obj = *v22;
      *(void *)&long long v66 = &obj;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v69, &obj, (uint64_t)&std::piecewise_construct, (void **)&v66)[3] = 1;
      *(void *)&long long v66 = 0;
      DWORD2(v66) = 0;
      long long v67 = (unint64_t)obj;
      id v68 = obj;
      std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100]((uint64_t *)&v72, (uint64_t *)&v66);

      ++v22;
    }
    do
    {
      long long v66 = 0u;
      long long v67 = 0u;
      LODWORD(v68) = 1065353216;
      uint64_t v24 = (void *)v70;
      if ((void)v70)
      {
        while (1)
        {
          uint64_t v25 = v24[2];
          unint64_t v26 = v24[3];
          id v65 = (id)v25;
          if (v26 < *(unsigned int *)(v25 + 72)) {
            goto LABEL_47;
          }
          minIdPath((uint64_t *)&obj, (TopoSubstring *)v25);
          if (v73 == v72) {
            goto LABEL_39;
          }
          uint64_t v27 = 0;
          id v28 = obj;
          if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1) {
            uint64_t v29 = 1;
          }
          else {
            uint64_t v29 = ((char *)v73 - (char *)v72) / 40;
          }
          do
          {
            if (v72[v27 + 2] == v65 && v72[v27])
            {
              id v30 = v28;
              unsigned int v31 = v63;
              int v32 = &v72[v27];
              id v33 = v72[v27];
              int v34 = v33;
              unsigned int v35 = *((_DWORD *)v32 + 2);
              if (v31 < v35)
              {
                int v36 = v30;
                goto LABEL_29;
              }
              int v36 = v33;
              if (v31 == v35)
              {
                if ([v30 TTCompare:v33] == -1) {
                  int v36 = v30;
                }
                else {
                  int v36 = v34;
                }
LABEL_29:
                unsigned int v35 = v31;
              }
              id v28 = v36;

              unsigned int v63 = v35;
            }
            v27 += 5;
            --v29;
          }
          while (v29);
          id obj = v28;
          if (v73 != v72)
          {
            uint64_t v37 = 0;
            unsigned int v38 = v63;
            if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1) {
              uint64_t v39 = 1;
            }
            else {
              uint64_t v39 = ((char *)v73 - (char *)v72) / 40;
            }
            do
            {
              int v40 = &v72[v37];
              int v41 = &v72[v37 + 2];
              if (*v41 == v65)
              {
                objc_storeStrong(&v72[v37], v28);
                *((_DWORD *)v40 + 2) = v38;
                *(_OWORD *)int v41 = v64;
              }
              v37 += 5;
              --v39;
            }
            while (v39);
          }
LABEL_39:
          id v42 = v3;
          id v43 = obj;
          int v44 = v43;
          uint64_t v45 = v63;
          if (v4 < v63)
          {
            unsigned int v46 = v42;
            goto LABEL_45;
          }
          unsigned int v46 = v43;
          if (v4 == v63)
          {
            if ([v42 TTCompare:v43] == -1) {
              unsigned int v46 = v42;
            }
            else {
              unsigned int v46 = v44;
            }
LABEL_45:
            uint64_t v45 = v4;
          }
          id v3 = v46;

          unint64_t v26 = *((void *)&v64 + 1);
          id v65 = (id)v64;

          uint64_t v4 = v45;
LABEL_47:
          uint64_t v47 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(&v66, &v65);
          if (v47)
          {
            v47[3] += v26;
          }
          else
          {
            id obj = &v65;
            std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v66, &v65, (uint64_t)&std::piecewise_construct, (void **)&obj)[3] = v26;
          }
          uint64_t v24 = (void *)*v24;
          if (!v24)
          {
            float v48 = *(float *)&v68;
            int v49 = (__n128 *)v67;
            goto LABEL_53;
          }
        }
      }
      int v49 = 0;
      float v48 = 1.0;
LABEL_53:
      float v71 = v48;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(&v69, v49, 0);
      uint64_t v50 = (uint64_t)v72;
      int v51 = v73;
      if ((char *)v73 - (char *)v72 < 1)
      {
        int v52 = 0;
        uint64_t v54 = 0;
      }
      else
      {
        int v52 = (void **)std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(0xCCCCCCCCCCCCCCCDLL * (v73 - v72));
        uint64_t v54 = v53;
      }
      std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v50, v51, 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v51 - v50) >> 3), v52, v54);
      if (v52) {
        operator delete(v52);
      }
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v66);
    }
    while (*((void *)&v70 + 1) > 1uLL);
    if (*v60 != *v61)
    {
      uint64_t v55 = 0;
      unint64_t v56 = *v60 - *v61;
      if (v56 <= 1) {
        unint64_t v56 = 1;
      }
      uint64_t v57 = 4;
      do
      {
        (*v61)[v55++] = v72[v57];
        v57 += 5;
      }
      while (v56 != v55);
    }
    uint64_t v2 = *(TopoSubstring **)(v70 + 16);
    unint64_t v9 = *(void *)(v70 + 24);
    if (v9 >= *((unsigned int *)v2 + 18)) {
      goto LABEL_72;
    }
  }
LABEL_76:
  id v58 = v3;
  *(void *)a2 = v58;
  *(_DWORD *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v69);
  *(void *)&long long v69 = &v72;
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v69);
}

void sub_1C3A9629C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a23);
  a23 = (void **)(v25 - 120);
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](&a23);

  _Unwind_Resume(a1);
}

void std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    char v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (void *)*((void *)v4 - 5);
        v4 -= 40;
      }
      while (v4 != v2);
      char v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *removeDirectToSinkEdges(void *result)
{
  uint64_t v1 = result[7];
  uint64_t v2 = v1 - result[6];
  if ((unint64_t)v2 >= 9)
  {
    id v3 = result;
    unint64_t v4 = 0;
    unint64_t v5 = v2 >> 3;
    do
    {
      uint64_t v6 = v3[6] + 8 * v4;
      unsigned int v7 = *(_DWORD *)(*(void *)v6 + 72);
      if (v7 < 2)
      {
        ++v4;
      }
      else
      {
        *(_DWORD *)(*(void *)v6 + 72) = v7 - 1;
        uint64_t v8 = v1 - (v6 + 8);
        if (v1 != v6 + 8) {
          double result = memmove((void *)v6, (const void *)(v6 + 8), v1 - (v6 + 8));
        }
        uint64_t v1 = v6 + v8;
        v3[7] = v6 + v8;
        --v5;
      }
    }
    while (v4 < v5);
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t versioned_document::Document::MergePartialFromCodedStream(versioned_document::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  while (1)
  {
    while (1)
    {
      unint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_27;
        }
LABEL_19:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_16;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_48:
        uint64_t v25 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4))goto LABEL_47; {
    }
      }
    if (v7 != 8) {
      goto LABEL_19;
    }
    unint64_t v9 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16)) {
        goto LABEL_47;
      }
      uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
    }
    else
    {
      *((_DWORD *)this + 16) = *v9;
      uint64_t v11 = v9 + 1;
      *((void *)a2 + 1) = v11;
    }
    *((_DWORD *)this + 8) |= 1u;
    if ((unint64_t)v11 < v10 && *v11 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v11 + 1;
LABEL_27:
        int v13 = *((_DWORD *)this + 13);
        uint64_t v14 = *((int *)this + 12);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v13 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
        }
        uint64_t v15 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v14 + 1;
        int v16 = *(versioned_document::Version **)(v15 + 8 * v14);
        unsigned int v29 = 0;
        uint64_t v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v29 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19
          || (int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !versioned_document::Version::MergePartialFromCodedStream(v16, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v25 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v24 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v11 < v24 && *v11 == 18);
      if (v11 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v25 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1C3A967D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New()
{
}

void sub_1C3A96838(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::MergePartialFromCodedStream(versioned_document::Version *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    do
    {
      while (1)
      {
        unint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
        {
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v6 = *v5;
          *((_DWORD *)a2 + 8) = v6;
          *((void *)a2 + 1) = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
        }
        unsigned int v9 = v7 >> 3;
        if (v7 >> 3 == 3)
        {
          if (v7 == 26)
          {
            int v15 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
LABEL_22:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_48;
          }
          goto LABEL_24;
        }
        if (v9 == 2) {
          break;
        }
        if (v9 == 1)
        {
          if (v7 != 8) {
            goto LABEL_22;
          }
          uint64_t v11 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_49; {
            BOOL v12 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 10) = *v11;
            BOOL v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
          }
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            uint64_t v14 = v12 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_32;
          }
        }
        else
        {
LABEL_13:
          if (v7) {
            BOOL v13 = (v7 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
LABEL_48:
            uint64_t v18 = 1;
            goto LABEL_50;
          }
LABEL_24:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_49; {
        }
          }
      }
      if (v7 != 16) {
        goto LABEL_22;
      }
      uint64_t v14 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
LABEL_32:
      if ((unint64_t)v14 >= v10 || *v14 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
          goto LABEL_49;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        *((_DWORD *)this + 11) = *v14;
        int v16 = v14 + 1;
        *((void *)a2 + 1) = v16;
      }
      int v15 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v15;
    }
    while ((unint64_t)v16 >= v10 || *v16 != 26);
    *((void *)a2 + 1) = v16 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v15 | 4;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    uint64_t v17 = (std::string *)*((void *)this + 6);
    if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v17)) {
      break;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v18 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_50;
    }
  }
LABEL_49:
  uint64_t v18 = 0;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1C3A96B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ArrayOutputStream(uint64_t this, void *a2, int a3, int a4)
{
  *(void *)this = &unk_1F1F241B0;
  *(void *)(this + 8) = a2;
  if (a4 <= 0) {
    int v4 = a3;
  }
  else {
    int v4 = a4;
  }
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(void *)(this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return this;
}

void google::protobuf::io::ArrayOutputStream::~ArrayOutputStream(google::protobuf::io::ArrayOutputStream *this)
{
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
  JUMPOUT(0x1C877D640);
}

BOOL google::protobuf::io::ArrayOutputStream::Next(google::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayOutputStream::BackUp(google::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 136);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 138);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 139);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_1C3A97140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ByteCount(google::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
  JUMPOUT(0x1C877D640);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

void __clang_call_terminate(void *a1)
{
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_5()
{
  return v0;
}

void sub_1C3A997EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A99C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A99DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9A338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9A738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9AEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9B098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9B338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9BD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_4_0(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, os_log_t log, uint64_t a10, uint8_t buf)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, &buf, 0x34u);
}

void sub_1C3A9CFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9D334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_4_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/zero_copy_stream.cc", 49);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1C3A9DE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3A9E490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMarkupViewControllerClass()
{
  uint64_t v4 = 0;
  int v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getMarkupViewControllerClass_softClass;
  uint64_t v7 = getMarkupViewControllerClass_softClass;
  if (!getMarkupViewControllerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __getMarkupViewControllerClass_block_invoke;
    v3[3] = &unk_1E64A45A0;
    v3[4] = &v4;
    __getMarkupViewControllerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C3A9EE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9EFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3A9F4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMarkupViewControllerClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!MarkupUILibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __MarkupUILibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E64A45C0;
    uint64_t v6 = 0;
    MarkupUILibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!MarkupUILibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MarkupViewController");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getMarkupViewControllerClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getMarkupViewControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MarkupUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MarkupUILibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1C3AA2AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AA2B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AA2C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AA2DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3AA3750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1C3AA3C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AA554C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AA5848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AA64C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

id ICLegacyEntityNameAccount()
{
  return (id)*MEMORY[0x1E4F82D90];
}

uint64_t ICHashWithHashKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  BOOL v12 = &a9;
  if (!a1) {
    return 1;
  }
  uint64_t v9 = a1;
  uint64_t result = 1;
  do
  {
    uint64_t result = v9 - result + 32 * result;
    uint64_t v11 = (uint64_t *)v12;
    v12 += 8;
    uint64_t v9 = *v11;
  }
  while (v9);
  return result;
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return v0;
}

uint64_t ICHashWithObject(void *a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v3 = (objc_class *)objc_opt_class();
    uint64_t v4 = NSStringFromClass(v3);
    uint64_t v5 = [v4 hash];

    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v6 = v2;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v37;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v37 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v5 = ICHashWithObject(*(void *)(*((void *)&v36 + 1) + 8 * i)) - v5 + 32 * v5;
        }
        uint64_t v8 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v8);
    }
LABEL_36:

    goto LABEL_37;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    BOOL v12 = (objc_class *)objc_opt_class();
    uint64_t v13 = NSStringFromClass(v12);
    uint64_t v5 = [v13 hash];

    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v6 = v11;
    uint64_t v14 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v37;
      do
      {
        for (uint64_t j = 0; j != v15; ++j)
        {
          if (*(void *)v37 != v16) {
            objc_enumerationMutation(v6);
          }
          uint64_t v18 = *(void *)(*((void *)&v36 + 1) + 8 * j);
          uint64_t v19 = objc_msgSend(v6, "objectForKeyedSubscript:", v18, (void)v36);
          uint64_t v20 = ICHashWithObject(v18);
          uint64_t v5 = ICHashWithObject(v19) + v5 - v20 + 32 * v20;
        }
        uint64_t v15 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v15);
    }
    goto LABEL_36;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    id v21 = (id)objc_claimAutoreleasedReturnValue();
    BOOL v22 = (objc_class *)objc_opt_class();
    int v23 = NSStringFromClass(v22);
    uint64_t v5 = [v23 hash];

    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v6 = v21;
    uint64_t v24 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)v37;
      do
      {
        for (uint64_t k = 0; k != v25; ++k)
        {
          if (*(void *)v37 != v26) {
            objc_enumerationMutation(v6);
          }
          v5 += ICHashWithObject(*(void *)(*((void *)&v36 + 1) + 8 * k));
        }
        uint64_t v25 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v25);
    }
    goto LABEL_36;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    ICCheckedDynamicCast();
    id v28 = (id)objc_claimAutoreleasedReturnValue();
    unsigned int v29 = (objc_class *)objc_opt_class();
    id v30 = NSStringFromClass(v29);
    uint64_t v5 = [v30 hash];

    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v6 = v28;
    uint64_t v31 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = *(void *)v37;
      do
      {
        for (uint64_t m = 0; m != v32; ++m)
        {
          if (*(void *)v37 != v33) {
            objc_enumerationMutation(v6);
          }
          uint64_t v5 = ICHashWithObject(*(void *)(*((void *)&v36 + 1) + 8 * m)) - v5 + 32 * v5;
        }
        uint64_t v32 = [v6 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v32);
    }
    goto LABEL_36;
  }
  uint64_t v5 = [v1 hash];
  if (v5) {
    goto LABEL_38;
  }
  id v6 = [MEMORY[0x1E4F1CA98] null];
  uint64_t v5 = [v6 hash];
LABEL_37:

LABEL_38:
  return v5;
}

void sub_1C3AAFDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB05C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB0B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB0D04(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB1774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB1A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB466C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose((const void *)(v45 - 224), 8);
  _Block_object_dispose((const void *)(v45 - 176), 8);
  _Block_object_dispose((const void *)(v45 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB50A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB52F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AB99B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABA7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABB960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_14(uint64_t a1)
{
  return *(void *)a1;
}

void sub_1C3ABD244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABD9B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABDD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABE10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABE4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABE82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return v0;
}

void OUTLINED_FUNCTION_7_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x30u);
}

void sub_1C3ABF770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C3ABFAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AC13C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  MEMORY[0x1C877D640](v23, 0x10B3C4079506790);

  _Unwind_Resume(a1);
}

void sub_1C3AC1718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC1850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC1914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1C3AC199C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC2130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC23DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC2650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC2820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC2AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose((const void *)(v27 - 120), 8);

  _Unwind_Resume(a1);
}

void sub_1C3AC2D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC2F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  topotext::String::~String((topotext::String *)va);

  _Unwind_Resume(a1);
}

void sub_1C3AC3040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AC3144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3AC326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New()
{
}

void sub_1C3AC32CC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C406079FE1ELL);
  _Unwind_Resume(a1);
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    id v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    id v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E64A3F98, MEMORY[0x1E4FBA1C8]);
}

void sub_1C3AC33FC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

uint64_t versioned_document::protobuf_ShutdownFile_versioned_2ddocument_2eproto(versioned_document *this)
{
  if (versioned_document::Document::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)versioned_document::Document::default_instance_ + 8))(versioned_document::Document::default_instance_);
  }
  uint64_t result = versioned_document::Version::default_instance_;
  if (versioned_document::Version::default_instance_)
  {
    id v2 = *(uint64_t (**)(void))(*(void *)versioned_document::Version::default_instance_ + 8);
    return v2();
  }
  return result;
}

std::string *versioned_document::Document::MergeFrom(versioned_document::Document *this, const versioned_document::Document *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/versioned-document.pb.cc", 244);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((versioned_document::Document *)((char *)this + 40), (const versioned_document::Document *)((char *)a2 + 40));
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 16) = v5;
  }
  size_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
  size_t v7 = (char *)a2 + 8;
  id v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1C3AC3588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void versioned_document::Document::~Document(versioned_document::Document *this)
{
  *(void *)this = &unk_1F1F24660;
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  versioned_document::Document::~Document(this);
  JUMPOUT(0x1C877D640);
}

void versioned_document::Document::New(versioned_document::Document *this)
{
}

uint64_t versioned_document::Document::SerializeWithCachedSizes(versioned_document::Document *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    size_t v8 = (char *)*((void *)this + 1);
    uint64_t v9 = *((void *)this + 2);
  }
  else
  {
    size_t v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t versioned_document::Document::ByteSize(versioned_document::Document *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v3 >= 0x80) {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      size_t v8 = (google::protobuf::io::CodedOutputStream *)versioned_document::Version::ByteSize(v7);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Document::CheckTypeAndMergeFrom(versioned_document::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  return versioned_document::Document::MergeFrom(this, lpsrc);
}

void *versioned_document::Document::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Document");
}

void versioned_document::Version::New(versioned_document::Version *this)
{
}

void sub_1C3AC390C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 7) != 0)
  {
    *(void *)(this + 40) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 48);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t versioned_document::Version::SerializeWithCachedSizes(versioned_document::Version *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 6), a2);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t versioned_document::Version::ByteSize(versioned_document::Version *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
  {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = *((void *)this + 6);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11 >= 0x80)
    {
      int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v10 = *(void *)(v7 + 8);
      char v9 = *(unsigned char *)(v7 + 23);
    }
    else
    {
      int v12 = 1;
    }
    if (v9 < 0) {
      int v8 = v10;
    }
    v3 += v12 + v8 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v13 = *((void *)this + 2);
  }
  else {
    LODWORD(v13) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v13);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Version::CheckTypeAndMergeFrom(versioned_document::Version *this, const google::protobuf::MessageLite *lpsrc)
{
  return versioned_document::Version::MergeFrom(this, lpsrc);
}

uint64_t versioned_document::Version::IsInitialized(versioned_document::Version *this)
{
  return 1;
}

void *versioned_document::Version::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Version");
}

uint64_t versioned_document::Document::GetCachedSize(versioned_document::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t versioned_document::Version::GetCachedSize(versioned_document::Version *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (const versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)versioned_document::Version::MergeFrom(*(versioned_document::Version **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3AC3D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    int v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    int v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t orientationByRotatingLeft(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return qword_1C3DD3070[a1];
  }
}

uint64_t orientationByRotatingRight(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return qword_1C3DD30B0[a1];
  }
}

uint64_t clockwiseRotationsFromUpToMatchOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6) {
    return 0;
  }
  else {
    return qword_1C3DD30F0[a1 - 1];
  }
}

uint64_t counterClockwiseRotationsFromUpToMatchOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6) {
    return 0;
  }
  else {
    return qword_1C3DD3128[a1 - 1];
  }
}

__CFString *NSStringFromICImageClassOrientation(unint64_t a1)
{
  if (a1 > 7) {
    return 0;
  }
  else {
    return off_1E64A50A8[a1];
  }
}

uint64_t ICTransformFromImageOrientation@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v4 = MEMORY[0x1E4F1DAB8];
  long long v5 = *(_OWORD *)(MEMORY[0x1E4F1DAB8] + 16);
  *(_OWORD *)a2 = *MEMORY[0x1E4F1DAB8];
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v4 + 32);
  switch(result)
  {
    case 1:
      *(void *)a2 = 0xBFF0000000000000;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0xBFF0000000000000;
      goto LABEL_4;
    case 2:
      *(_OWORD *)a2 = xmmword_1C3DD3060;
      *(_OWORD *)(a2 + 16) = xmmword_1C3DD3050;
      goto LABEL_8;
    case 3:
      *(_OWORD *)a2 = xmmword_1C3DD3040;
      *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0x3FF0000000000000;
      goto LABEL_10;
    case 4:
      *(void *)a2 = 0xBFF0000000000000;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0x3FF0000000000000;
LABEL_8:
      *(double *)(a2 + 32) = a3;
      *(void *)(a2 + 40) = 0;
      return result;
    case 5:
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0x3FF0000000000000;
      *(_OWORD *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = xmmword_1C3DD3050;
      goto LABEL_10;
    case 6:
    case 7:
      *(_OWORD *)a2 = xmmword_1C3DD3040;
      *(_OWORD *)(a2 + 16) = xmmword_1C3DD3050;
LABEL_4:
      *(double *)(a2 + 32) = a3;
LABEL_10:
      *(double *)(a2 + 40) = a4;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C3AC4894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC4B64(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  MEMORY[0x1C877D640](v4, 0x10B3C400074EEDFLL);

  _Unwind_Resume(a1);
}

void sub_1C3AC55D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1C3AC5718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3AC5800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AC58F8(_Unwind_Exception *a1)
{
  long long v5 = v4;

  _Unwind_Resume(a1);
}

__CFString *NSStringFromICAppearanceType(uint64_t a1)
{
  if (a1) {
    return @"ICAppearanceTypeDark";
  }
  else {
    return @"ICAppearanceTypeDefault";
  }
}

uint64_t drawing::protobuf_ShutdownFile_drawing_2eproto(drawing *this)
{
  if (drawing::Drawing::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::Drawing::default_instance_ + 8))(drawing::Drawing::default_instance_);
  }
  if (drawing::Command::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::Command::default_instance_ + 8))(drawing::Command::default_instance_);
  }
  if (drawing::CommandID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::CommandID::default_instance_ + 8))(drawing::CommandID::default_instance_);
  }
  if (drawing::Point::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::Point::default_instance_ + 8))(drawing::Point::default_instance_);
  }
  if (drawing::Parameters::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::Parameters::default_instance_ + 8))(drawing::Parameters::default_instance_);
  }
  if (drawing::Color::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)drawing::Color::default_instance_ + 8))(drawing::Color::default_instance_);
  }
  uint64_t result = drawing::Rectangle::default_instance_;
  if (drawing::Rectangle::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)drawing::Rectangle::default_instance_ + 8);
    return v2();
  }
  return result;
}

void drawing::protobuf_AddDesc_drawing_2eproto_impl(drawing *this, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", a4);
  topotext::protobuf_AddDesc_topotext_2eproto(v4);
  operator new();
}

double drawing::Drawing::Drawing(drawing::Drawing *this)
{
  *(void *)this = &unk_1F1F24780;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

double drawing::Command::Command(drawing::Command *this)
{
  *(void *)this = &unk_1F1F247F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

double drawing::CommandID::CommandID(drawing::CommandID *this)
{
  *(void *)this = &unk_1F1F24870;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double drawing::Point::Point(drawing::Point *this)
{
  *(void *)this = &unk_1F1F248E8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double drawing::Parameters::Parameters(drawing::Parameters *this)
{
  *(void *)this = &unk_1F1F24960;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double drawing::Color::Color(drawing::Color *this)
{
  *(void *)this = &unk_1F1F249D8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double drawing::Rectangle::Rectangle(drawing::Rectangle *this)
{
  *(void *)this = &unk_1F1F24A50;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void drawing::protobuf_AddDesc_drawing_2eproto(drawing *this)
{
  uint64_t v1 = drawing::protobuf_AddDesc_drawing_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = drawing::protobuf_AddDesc_drawing_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&drawing::protobuf_AddDesc_drawing_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3AC6138(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Drawing::MergeFrom(drawing::Drawing *this, const drawing::Drawing *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 409);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  long long v5 = (drawing *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((drawing::Drawing *)((char *)this + 56), (const drawing::Drawing *)((char *)a2 + 56));
  LOBYTE(v6) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v6)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v7 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 12) = v7;
      int v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)this + 8) |= 2u;
      uint64_t v8 = (topotext::VectorTimestamp *)*((void *)this + 5);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = (const topotext::VectorTimestamp *)*((void *)a2 + 5);
      if (!v9)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(v5);
        uint64_t v9 = *(const topotext::VectorTimestamp **)(drawing::Drawing::default_instance_ + 40);
      }
      long long v5 = (drawing *)topotext::VectorTimestamp::MergeFrom(v8, v9);
      int v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 8) != 0)
    {
      int v10 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 8u;
      *((_DWORD *)this + 13) = v10;
      int v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 0x10) == 0)
      {
LABEL_14:
        if ((v6 & 0x20) == 0) {
          goto LABEL_23;
        }
        goto LABEL_18;
      }
    }
    else if ((v6 & 0x10) == 0)
    {
      goto LABEL_14;
    }
    uint64_t v11 = *((void *)a2 + 10);
    *((_DWORD *)this + 8) |= 0x10u;
    *((void *)this + 10) = v11;
    if ((*((_DWORD *)a2 + 8) & 0x20) == 0) {
      goto LABEL_23;
    }
LABEL_18:
    *((_DWORD *)this + 8) |= 0x20u;
    int v12 = (drawing::Rectangle *)*((void *)this + 11);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = (const drawing::Rectangle *)*((void *)a2 + 11);
    if (!v13)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(v5);
      uint64_t v13 = *(const drawing::Rectangle **)(drawing::Drawing::default_instance_ + 88);
    }
    drawing::Rectangle::MergeFrom(v12, v13);
  }
LABEL_23:
  uint64_t v16 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v15 = (char *)a2 + 8;
  uint64_t v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v18, v19);
}

void sub_1C3AC6340(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C4020A6E6BFLL);
  _Unwind_Resume(a1);
}

void drawing::Drawing::~Drawing(drawing::Drawing *this)
{
  *(void *)this = &unk_1F1F24780;
  drawing::Drawing::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 7);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  drawing::Drawing::~Drawing(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Drawing::SharedDtor(drawing::Drawing *this)
{
  drawing::protobuf_AddDesc_drawing_2eproto(this);
  if ((drawing::Drawing *)drawing::Drawing::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 11);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t drawing::Drawing::default_instance(drawing::Drawing *this)
{
  return drawing::Drawing::default_instance_;
}

void drawing::Drawing::New(drawing::Drawing *this)
{
}

uint64_t drawing::Drawing::Clear(drawing::Drawing *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x3B) != 0)
  {
    *((void *)this + 6) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = (topotext::VectorTimestamp *)*((void *)this + 5);
      if (v3)
      {
        topotext::VectorTimestamp::Clear(v3);
        int v2 = *((_DWORD *)this + 8);
      }
    }
    *((void *)this + 10) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *((void *)this + 11);
      if (v4)
      {
        *(void *)(v4 + 40) = 0;
        *(void *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 56);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t drawing::Rectangle::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Drawing::MergePartialFromCodedStream(drawing::Drawing *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v49, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v48, (google::protobuf::io::ZeroCopyOutputStream *)v49);
LABEL_2:
  while (2)
  {
    while (1)
    {
      long long v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_11:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_96:
        uint64_t v46 = 1;
        goto LABEL_97;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v48, v4))goto LABEL_95; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_26;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 12))goto LABEL_95; {
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 12) = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        int v13 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v11 >= v9 || *v11 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_36:
        *((_DWORD *)this + 8) = v13 | 2;
        int v17 = (topotext::VectorTimestamp *)*((void *)this + 5);
        if (!v17) {
          operator new();
        }
        v50[0] = 0;
        uint64_t v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v50)) {
            goto LABEL_95;
          }
        }
        else
        {
          v50[0] = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          goto LABEL_95;
        }
        int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50[0]);
        if (!topotext::VectorTimestamp::MergePartialFromCodedStream(v17, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_95;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 26) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v25 + 1;
LABEL_50:
          int v26 = *((_DWORD *)this + 17);
          uint64_t v27 = *((int *)this + 16);
          if ((int)v27 >= v26)
          {
            if (v26 == *((_DWORD *)this + 18)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 56, v26 + 1);
            }
            operator new();
          }
          uint64_t v28 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v27 + 1;
          unsigned int v29 = *(drawing::Command **)(v28 + 8 * v27);
          v50[0] = 0;
          id v30 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v50)) {
              goto LABEL_95;
            }
          }
          else
          {
            v50[0] = *v30;
            *((void *)a2 + 1) = v30 + 1;
          }
          int v31 = *((_DWORD *)a2 + 14);
          int v32 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v31 + 1;
          if (v31 >= v32) {
            goto LABEL_95;
          }
          int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50[0]);
          if (!drawing::Command::MergePartialFromCodedStream(v29, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_95;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v33);
          int v34 = *((_DWORD *)a2 + 14);
          BOOL v23 = __OFSUB__(v34, 1);
          int v35 = v34 - 1;
          if (v35 < 0 == v23) {
            *((_DWORD *)a2 + 14) = v35;
          }
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          if ((unint64_t)v25 >= v14) {
            goto LABEL_2;
          }
          int v36 = *v25;
        }
        while (v36 == 26);
        if (v36 != 32) {
          continue;
        }
        uint64_t v15 = v25 + 1;
        *((void *)a2 + 1) = v15;
LABEL_68:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))goto LABEL_95; {
          long long v37 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v15;
          long long v37 = v15 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 8) |= 8u;
        if ((unint64_t)v37 >= v14 || *v37 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_76:
        *(void *)uint64_t v50 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v50)) {
          goto LABEL_95;
        }
        *((void *)this + 10) = *(void *)v50;
        int v16 = *((_DWORD *)this + 8) | 0x10;
        *((_DWORD *)this + 8) = v16;
        long long v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
        goto LABEL_80;
      case 2u:
        if (v7 != 18) {
          goto LABEL_26;
        }
        int v13 = *((_DWORD *)this + 8);
        goto LABEL_36;
      case 3u:
        if (v7 == 26) {
          goto LABEL_50;
        }
        goto LABEL_26;
      case 4u:
        if (v7 != 32) {
          goto LABEL_26;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_68;
      case 5u:
        if (v7 == 41) {
          goto LABEL_76;
        }
        goto LABEL_26;
      case 6u:
        if (v7 != 50)
        {
LABEL_26:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_96;
          }
          goto LABEL_28;
        }
        int v16 = *((_DWORD *)this + 8);
LABEL_80:
        *((_DWORD *)this + 8) = v16 | 0x20;
        long long v39 = (drawing::Rectangle *)*((void *)this + 11);
        if (!v39) {
          operator new();
        }
        v50[0] = 0;
        int v40 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v50)) {
            goto LABEL_95;
          }
        }
        else
        {
          v50[0] = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42
          || (int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50[0]),
              !drawing::Rectangle::MergePartialFromCodedStream(v39, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_95:
          uint64_t v46 = 0;
          goto LABEL_97;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v45;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v46 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_97:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v48);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v49);
        return v46;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1C3AC6C50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x1093C4020A6E6BFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t drawing::Drawing::SerializeWithCachedSizes(drawing::Drawing *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  long long v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *((void *)v5 + 5);
    if (!v7)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      uint64_t v7 = *(void *)(drawing::Drawing::default_instance_ + 40);
    }
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  }
  if (*((int *)v5 + 16) >= 1)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)v5 + 56, v8);
      this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)v5 + 16));
  }
  int v10 = *((_DWORD *)v5 + 8);
  if ((v10 & 8) != 0)
  {
    this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 13), a2, a4);
    int v10 = *((_DWORD *)v5 + 8);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  this = (drawing::Drawing *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)5, a2, *((double *)v5 + 10), a3);
  if ((*((_DWORD *)v5 + 8) & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v11 = *((void *)v5 + 11);
  if (!v11)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    uint64_t v11 = *(void *)(drawing::Drawing::default_instance_ + 88);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(6, v11, a2);
LABEL_19:
  if (*((char *)v5 + 31) < 0)
  {
    BOOL v12 = (char *)*((void *)v5 + 1);
    uint64_t v13 = *((void *)v5 + 2);
  }
  else
  {
    BOOL v12 = (char *)v5 + 8;
    LODWORD(v13) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
}

uint64_t drawing::Drawing::ByteSize(drawing::Drawing *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_30;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    long long v5 = (topotext::VectorTimestamp *)*((void *)this + 5);
    if (!v5)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      long long v5 = *(topotext::VectorTimestamp **)(drawing::Drawing::default_instance_ + 40);
    }
    int v6 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v5);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    }
    else {
      int v8 = 1;
    }
    v3 += v7 + v8 + 1;
    int v2 = *((_DWORD *)this + 8);
    goto LABEL_16;
  }
  uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v4 < 0x80)
  {
    int v3 = 2;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if ((v2 & 8) != 0)
  {
    uint64_t v9 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v9 >= 0x80)
    {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v10 = 2;
    }
    v3 += v10;
  }
  if ((v2 & 0x10) != 0) {
    v3 += 9;
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v11 = (drawing::Rectangle *)*((void *)this + 11);
    if (!v11)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      uint64_t v11 = *(drawing::Rectangle **)(drawing::Drawing::default_instance_ + 88);
    }
    BOOL v12 = (google::protobuf::io::CodedOutputStream *)drawing::Rectangle::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
  }
LABEL_30:
  int v15 = *((_DWORD *)this + 16);
  int v16 = v15 + v3;
  if (v15 >= 1)
  {
    int v17 = 0;
    do
    {
      uint64_t v18 = (drawing::Command *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)this + 56, v17);
      int v19 = (google::protobuf::io::CodedOutputStream *)drawing::Command::ByteSize(v18);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v16 += v20 + v21;
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 16));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v22 = *((void *)this + 2);
  }
  else {
    LODWORD(v22) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v16 + v22);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::Drawing::CheckTypeAndMergeFrom(drawing::Drawing *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Drawing::MergeFrom(this, lpsrc);
}

std::string *drawing::Rectangle::MergeFrom(drawing::Rectangle *this, const drawing::Rectangle *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 2501);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    int v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3AC7148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Drawing::IsInitialized(drawing::Drawing *this)
{
  return 1;
}

void *drawing::Drawing::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Drawing");
}

std::string *drawing::Command::MergeFrom(drawing::Command *this, const drawing::Command *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 958);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v31, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  int v5 = (drawing *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((drawing::Command *)((char *)this + 64), (const drawing::Command *)((char *)a2 + 64));
  int v6 = *((_DWORD *)a2 + 8);
  if (!(_BYTE)v6) {
    goto LABEL_43;
  }
  if (v6)
  {
    *((_DWORD *)this + 8) |= 1u;
    int v7 = (drawing::CommandID *)*((void *)this + 5);
    if (!v7) {
      operator new();
    }
    int v8 = (const drawing::CommandID *)*((void *)a2 + 5);
    if (!v8)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(v5);
      int v8 = *(const drawing::CommandID **)(drawing::Command::default_instance_ + 40);
    }
    int v5 = (drawing *)drawing::CommandID::MergeFrom(v7, v8);
    int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *((_DWORD *)a2 + 32);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 32) = v9;
  int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_18:
  *((_DWORD *)this + 8) |= 4u;
  int v10 = (drawing::Color *)*((void *)this + 6);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = (const drawing::Color *)*((void *)a2 + 6);
  if (!v11)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(v5);
    uint64_t v11 = *(const drawing::Color **)(drawing::Command::default_instance_ + 48);
  }
  int v5 = (drawing *)drawing::Color::MergeFrom(v10, v11);
  int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_28:
    *((_DWORD *)this + 8) |= 0x20u;
    int v14 = (drawing::CommandID *)*((void *)this + 11);
    if (!v14) {
      operator new();
    }
    int v15 = (const drawing::CommandID *)*((void *)a2 + 11);
    if (!v15)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(v5);
      int v15 = *(const drawing::CommandID **)(drawing::Command::default_instance_ + 88);
    }
    int v5 = (drawing *)drawing::CommandID::MergeFrom(v14, v15);
    int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x40) == 0)
    {
LABEL_10:
      if ((v6 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_38;
    }
    goto LABEL_33;
  }
LABEL_23:
  *((_DWORD *)this + 8) |= 8u;
  std::string::size_type v12 = (drawing::Point *)*((void *)this + 7);
  if (!v12) {
    operator new();
  }
  int v13 = (const drawing::Point *)*((void *)a2 + 7);
  if (!v13)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(v5);
    int v13 = *(const drawing::Point **)(drawing::Command::default_instance_ + 56);
  }
  int v5 = (drawing *)drawing::Point::MergeFrom(v12, v13);
  int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_9:
  if ((v6 & 0x40) == 0) {
    goto LABEL_10;
  }
LABEL_33:
  *((_DWORD *)this + 8) |= 0x40u;
  int v16 = (drawing::Rectangle *)*((void *)this + 12);
  if (!v16) {
    operator new();
  }
  char v17 = (const drawing::Rectangle *)*((void *)a2 + 12);
  if (!v17)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(v5);
    char v17 = *(const drawing::Rectangle **)(drawing::Command::default_instance_ + 96);
  }
  int v5 = (drawing *)drawing::Rectangle::MergeFrom(v16, v17);
  int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x80) != 0)
  {
LABEL_38:
    *((_DWORD *)this + 8) |= 0x80u;
    uint64_t v18 = (drawing::Point *)*((void *)this + 13);
    if (!v18) {
      operator new();
    }
    int v19 = (const drawing::Point *)*((void *)a2 + 13);
    if (!v19)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(v5);
      int v19 = *(const drawing::Point **)(drawing::Command::default_instance_ + 104);
    }
    int v5 = (drawing *)drawing::Point::MergeFrom(v18, v19);
    int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_43:
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      *((_DWORD *)this + 8) |= 0x100u;
      int v20 = (drawing::Point *)*((void *)this + 14);
      if (!v20) {
        operator new();
      }
      int v21 = (const drawing::Point *)*((void *)a2 + 14);
      if (!v21)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(v5);
        int v21 = *(const drawing::Point **)(drawing::Command::default_instance_ + 112);
      }
      int v5 = (drawing *)drawing::Point::MergeFrom(v20, v21);
      int v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 0x200) != 0)
    {
      *((_DWORD *)this + 8) |= 0x200u;
      uint64_t v22 = (drawing::Parameters *)*((void *)this + 15);
      if (!v22) {
        operator new();
      }
      BOOL v23 = (const drawing::Parameters *)*((void *)a2 + 15);
      if (!v23)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(v5);
        BOOL v23 = *(const drawing::Parameters **)(drawing::Command::default_instance_ + 120);
      }
      drawing::Parameters::MergeFrom(v22, v23);
    }
  }
  int v26 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v25 = (char *)a2 + 8;
  int v24 = v26;
  int v27 = v25[23];
  if (v27 >= 0) {
    uint64_t v28 = v25;
  }
  else {
    uint64_t v28 = v24;
  }
  if (v27 >= 0) {
    std::string::size_type v29 = v25[23];
  }
  else {
    std::string::size_type v29 = *((void *)v25 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v28, v29);
}

void sub_1C3AC76B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void drawing::Command::~Command(drawing::Command *this)
{
  *(void *)this = &unk_1F1F247F8;
  drawing::Command::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 8);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  drawing::Command::~Command(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Command::SharedDtor(drawing::Command *this)
{
  drawing::protobuf_AddDesc_drawing_2eproto(this);
  if ((drawing::Command *)drawing::Command::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 11);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 12);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 13);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 14);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 15);
    if (v9)
    {
      int v10 = *(void (**)(void))(*(void *)v9 + 8);
      v10();
    }
  }
}

uint64_t drawing::Command::default_instance(drawing::Command *this)
{
  return drawing::Command::default_instance_;
}

void drawing::Command::New(drawing::Command *this)
{
}

uint64_t drawing::Command::Clear(drawing::Command *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0xEF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 5);
      if (v3)
      {
        *(_DWORD *)(v3 + 48) = 0;
        *(void *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    *((_DWORD *)this + 32) = 0;
    if ((*((unsigned char *)this + 32) & 4) != 0)
    {
      uint64_t v4 = *((void *)this + 6);
      if (v4)
      {
        *(void *)(v4 + 40) = 0;
        *(void *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 8) != 0)
    {
      uint64_t v5 = *((void *)this + 7);
      if (v5)
      {
        if ((*(unsigned char *)(v5 + 32) & 0x7F) != 0)
        {
          *(void *)(v5 + 40) = 0;
          *(void *)(v5 + 48) = 0;
          *(_DWORD *)(v5 + 64) = 0;
          *(void *)(v5 + 56) = 0;
        }
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(unsigned char **)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v5 + 8) = 0;
          *(unsigned char *)(v5 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x20) != 0)
    {
      uint64_t v6 = *((void *)this + 11);
      if (v6)
      {
        *(_DWORD *)(v6 + 48) = 0;
        *(void *)(v6 + 40) = 0;
        *(_DWORD *)(v6 + 32) = 0;
        if (*(char *)(v6 + 31) < 0)
        {
          **(unsigned char **)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v6 + 8) = 0;
          *(unsigned char *)(v6 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x40) != 0)
    {
      uint64_t v7 = *((void *)this + 12);
      if (v7)
      {
        *(void *)(v7 + 40) = 0;
        *(void *)(v7 + 48) = 0;
        *(_DWORD *)(v7 + 32) = 0;
        if (*(char *)(v7 + 31) < 0)
        {
          **(unsigned char **)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v7 + 8) = 0;
          *(unsigned char *)(v7 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x80) != 0)
    {
      uint64_t v8 = *((void *)this + 13);
      if (v8)
      {
        if ((*(unsigned char *)(v8 + 32) & 0x7F) != 0)
        {
          *(void *)(v8 + 40) = 0;
          *(void *)(v8 + 48) = 0;
          *(_DWORD *)(v8 + 64) = 0;
          *(void *)(v8 + 56) = 0;
        }
        *(_DWORD *)(v8 + 32) = 0;
        if (*(char *)(v8 + 31) < 0)
        {
          **(unsigned char **)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v8 + 8) = 0;
          *(unsigned char *)(v8 + 31) = 0;
        }
      }
    }
  }
  int v9 = *((_DWORD *)this + 8);
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
      uint64_t v10 = *((void *)this + 14);
      if (v10)
      {
        if ((*(unsigned char *)(v10 + 32) & 0x7F) != 0)
        {
          *(void *)(v10 + 40) = 0;
          *(void *)(v10 + 48) = 0;
          *(_DWORD *)(v10 + 64) = 0;
          *(void *)(v10 + 56) = 0;
        }
        *(_DWORD *)(v10 + 32) = 0;
        if (*(char *)(v10 + 31) < 0)
        {
          **(unsigned char **)(v10 + 8) = 0;
          *(void *)(v10 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v10 + 8) = 0;
          *(unsigned char *)(v10 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 33) & 2) != 0)
    {
      uint64_t v11 = *((void *)this + 15);
      if (v11)
      {
        *(_DWORD *)(v11 + 48) = 0;
        *(void *)(v11 + 40) = 0;
        *(_DWORD *)(v11 + 32) = 0;
        if (*(char *)(v11 + 31) < 0)
        {
          **(unsigned char **)(v11 + 8) = 0;
          *(void *)(v11 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v11 + 8) = 0;
          *(unsigned char *)(v11 + 31) = 0;
        }
      }
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 64);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t drawing::CommandID::Clear(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Color::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Point::Clear(uint64_t this)
{
  if ((*(unsigned char *)(this + 32) & 0x7F) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(_DWORD *)(this + 64) = 0;
    *(void *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Parameters::Clear(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t drawing::Command::MergePartialFromCodedStream(drawing::Command *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v92, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v91, (google::protobuf::io::ZeroCopyOutputStream *)v92);
LABEL_2:
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_12;
      }
LABEL_6:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
LABEL_175:
        uint64_t v89 = 1;
        goto LABEL_176;
      }
LABEL_38:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v91, v4))goto LABEL_174; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_36;
        }
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v10 = (drawing::CommandID *)*((void *)this + 5);
        if (!v10) {
          operator new();
        }
        unsigned int v93 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          goto LABEL_174;
        }
        int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::CommandID::MergePartialFromCodedStream(v10, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v17);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v21 >= v12 || *v21 != 16) {
          continue;
        }
        int v13 = v21 + 1;
        *((void *)a2 + 1) = v13;
LABEL_49:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 32))goto LABEL_174; {
          uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 32) = *v13;
          uint64_t v22 = v13 + 1;
          *((void *)a2 + 1) = v22;
        }
        int v14 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v14;
        if ((unint64_t)v22 >= v12 || *v22 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_57:
        *((_DWORD *)this + 8) = v14 | 4;
        BOOL v23 = (drawing::Color *)*((void *)this + 6);
        if (!v23) {
          operator new();
        }
        unsigned int v93 = 0;
        int v24 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)a2 + 14);
        int v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26) {
          goto LABEL_174;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::Color::MergePartialFromCodedStream(v23, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v27);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v29;
        }
        id v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_71:
        *((_DWORD *)this + 8) |= 8u;
        char v31 = (drawing::Point *)*((void *)this + 7);
        if (!v31) {
          operator new();
        }
        unsigned int v93 = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          goto LABEL_174;
        }
        int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::Point::MergePartialFromCodedStream(v31, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
        int v36 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v37;
        }
        long long v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 42) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v38 + 1;
LABEL_85:
          int v39 = *((_DWORD *)this + 19);
          uint64_t v40 = *((int *)this + 18);
          if ((int)v40 >= v39)
          {
            if (v39 == *((_DWORD *)this + 20)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 64, v39 + 1);
            }
            operator new();
          }
          uint64_t v41 = *((void *)this + 8);
          *((_DWORD *)this + 18) = v40 + 1;
          int v42 = *(drawing::Point **)(v41 + 8 * v40);
          unsigned int v93 = 0;
          int v43 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
              goto LABEL_174;
            }
          }
          else
          {
            unsigned int v93 = *v43;
            *((void *)a2 + 1) = v43 + 1;
          }
          int v44 = *((_DWORD *)a2 + 14);
          int v45 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v44 + 1;
          if (v44 >= v45) {
            goto LABEL_174;
          }
          int v46 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
          if (!drawing::Point::MergePartialFromCodedStream(v42, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_174;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v46);
          int v47 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v47, 1);
          int v48 = v47 - 1;
          if (v48 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v48;
          }
          long long v38 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v38 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v49 = *v38;
        }
        while (v49 == 42);
        if (v49 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_103:
        *((_DWORD *)this + 8) |= 0x20u;
        uint64_t v50 = (drawing::CommandID *)*((void *)this + 11);
        if (!v50) {
          operator new();
        }
        unsigned int v93 = 0;
        int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53) {
          goto LABEL_174;
        }
        int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::CommandID::MergePartialFromCodedStream(v50, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v54);
        int v55 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v56;
        }
        uint64_t v57 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v57 + 1;
LABEL_117:
        *((_DWORD *)this + 8) |= 0x40u;
        id v58 = (drawing::Rectangle *)*((void *)this + 12);
        if (!v58) {
          operator new();
        }
        unsigned int v93 = 0;
        int v59 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v59 >= *((void *)a2 + 2) || *v59 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v59;
          *((void *)a2 + 1) = v59 + 1;
        }
        int v60 = *((_DWORD *)a2 + 14);
        int v61 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v60 + 1;
        if (v60 >= v61) {
          goto LABEL_174;
        }
        int v62 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::Rectangle::MergePartialFromCodedStream(v58, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v62);
        int v63 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v63, 1);
        int v64 = v63 - 1;
        if (v64 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v64;
        }
        id v65 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v65 + 1;
LABEL_131:
        *((_DWORD *)this + 8) |= 0x80u;
        long long v66 = (drawing::Point *)*((void *)this + 13);
        if (!v66) {
          operator new();
        }
        unsigned int v93 = 0;
        long long v67 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v67;
          *((void *)a2 + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)a2 + 14);
        int v69 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v68 + 1;
        if (v68 >= v69) {
          goto LABEL_174;
        }
        int v70 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::Point::MergePartialFromCodedStream(v66, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v70);
        int v71 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v71, 1);
        int v72 = v71 - 1;
        if (v72 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v72;
        }
        int v73 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v73 >= *((void *)a2 + 2) || *v73 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v73 + 1;
LABEL_145:
        *((_DWORD *)this + 8) |= 0x100u;
        uint64_t v74 = (drawing::Point *)*((void *)this + 14);
        if (!v74) {
          operator new();
        }
        unsigned int v93 = 0;
        int v75 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v75 >= *((void *)a2 + 2) || *v75 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v75;
          *((void *)a2 + 1) = v75 + 1;
        }
        int v76 = *((_DWORD *)a2 + 14);
        int v77 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v76 + 1;
        if (v76 >= v77) {
          goto LABEL_174;
        }
        int v78 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93);
        if (!drawing::Point::MergePartialFromCodedStream(v74, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_174;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v78);
        int v79 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v79, 1);
        int v80 = v79 - 1;
        if (v80 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v80;
        }
        v81 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v81 >= *((void *)a2 + 2) || *v81 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v81 + 1;
LABEL_159:
        *((_DWORD *)this + 8) |= 0x200u;
        int v82 = (drawing::Parameters *)*((void *)this + 15);
        if (!v82) {
          operator new();
        }
        unsigned int v93 = 0;
        int v83 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v83 >= *((void *)a2 + 2) || *v83 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v93)) {
            goto LABEL_174;
          }
        }
        else
        {
          unsigned int v93 = *v83;
          *((void *)a2 + 1) = v83 + 1;
        }
        int v84 = *((_DWORD *)a2 + 14);
        int v85 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v84 + 1;
        if (v84 >= v85
          || (int v86 = google::protobuf::io::CodedInputStream::PushLimit(a2, v93),
              !drawing::Parameters::MergePartialFromCodedStream(v82, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_174:
          uint64_t v89 = 0;
          goto LABEL_176;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v86);
        int v87 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v87, 1);
        int v88 = v87 - 1;
        if (v88 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v88;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v89 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_176:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v91);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v92);
        return v89;
      case 2u:
        if (v7 != 16) {
          goto LABEL_36;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_49;
      case 3u:
        if (v7 != 26) {
          goto LABEL_36;
        }
        int v14 = *((_DWORD *)this + 8);
        goto LABEL_57;
      case 4u:
        if (v7 == 34) {
          goto LABEL_71;
        }
        goto LABEL_36;
      case 5u:
        if (v7 == 42) {
          goto LABEL_85;
        }
        goto LABEL_36;
      case 6u:
        if (v7 == 50) {
          goto LABEL_103;
        }
        goto LABEL_36;
      case 7u:
        if (v7 == 58) {
          goto LABEL_117;
        }
        goto LABEL_36;
      case 8u:
        if (v7 == 66) {
          goto LABEL_131;
        }
        goto LABEL_36;
      case 9u:
        if (v7 == 74) {
          goto LABEL_145;
        }
        goto LABEL_36;
      case 0xAu:
        if (v7 == 82) {
          goto LABEL_159;
        }
LABEL_36:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_38;
        }
        goto LABEL_175;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1C3AC8924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Command::SerializeWithCachedSizes(drawing::Command *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 5);
    if (!v7)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      uint64_t v7 = *(void *)(drawing::Command::default_instance_ + 40);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 32), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *((void *)v5 + 6);
  if (!v8)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    uint64_t v8 = *(void *)(drawing::Command::default_instance_ + 48);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  if ((*((_DWORD *)v5 + 8) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *((void *)v5 + 7);
    if (!v9)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      uint64_t v9 = *(void *)(drawing::Command::default_instance_ + 56);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v9, a2);
  }
LABEL_16:
  if (*((int *)v5 + 18) >= 1)
  {
    int v10 = 0;
    do
    {
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)v5 + 64, v10);
      this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(5, v11, a2);
      ++v10;
    }
    while (v10 < *((_DWORD *)v5 + 18));
  }
  int v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x20) != 0)
  {
    uint64_t v13 = *((void *)v5 + 11);
    if (!v13)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      uint64_t v13 = *(void *)(drawing::Command::default_instance_ + 88);
    }
    this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(6, v13, a2);
    int v12 = *((_DWORD *)v5 + 8);
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_31;
    }
  }
  else if ((v12 & 0x40) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v14 = *((void *)v5 + 12);
  if (!v14)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    uint64_t v14 = *(void *)(drawing::Command::default_instance_ + 96);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(7, v14, a2);
  int v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x80) == 0)
  {
LABEL_22:
    if ((v12 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v15 = *((void *)v5 + 13);
  if (!v15)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    uint64_t v15 = *(void *)(drawing::Command::default_instance_ + 104);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(8, v15, a2);
  int v12 = *((_DWORD *)v5 + 8);
  if ((v12 & 0x100) == 0)
  {
LABEL_23:
    if ((v12 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v16 = *((void *)v5 + 14);
  if (!v16)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(this);
    uint64_t v16 = *(void *)(drawing::Command::default_instance_ + 112);
  }
  this = (drawing::Command *)google::protobuf::internal::WireFormatLite::WriteMessage(9, v16, a2);
  if ((*((_DWORD *)v5 + 8) & 0x200) != 0)
  {
LABEL_37:
    uint64_t v17 = *((void *)v5 + 15);
    if (!v17)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(this);
      uint64_t v17 = *(void *)(drawing::Command::default_instance_ + 120);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(10, v17, a2);
  }
LABEL_40:
  if (*((char *)v5 + 31) < 0)
  {
    int v18 = (char *)*((void *)v5 + 1);
    uint64_t v19 = *((void *)v5 + 2);
  }
  else
  {
    int v18 = (char *)v5 + 8;
    LODWORD(v19) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v18, v19);
}

uint64_t drawing::Command::ByteSize(drawing::Command *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (drawing::CommandID *)*((void *)this + 5);
  if (!v4)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    uint64_t v4 = *(drawing::CommandID **)(drawing::Command::default_instance_ + 40);
  }
  uint64_t v5 = (google::protobuf::io::CodedOutputStream *)drawing::CommandID::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
    if (v8 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v9 = 1;
    }
    v3 += v9 + 1;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (drawing::Color *)*((void *)this + 6);
    if (!v10)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      int v10 = *(drawing::Color **)(drawing::Command::default_instance_ + 48);
    }
    uint64_t v11 = (google::protobuf::io::CodedOutputStream *)drawing::Color::ByteSize(v10);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    }
    else {
      int v13 = 1;
    }
    v3 += v12 + v13 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v14 = (drawing::Point *)*((void *)this + 7);
  if (!v14)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    uint64_t v14 = *(drawing::Point **)(drawing::Command::default_instance_ + 56);
  }
  uint64_t v15 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v14);
  int v16 = (int)v15;
  if (v15 >= 0x80) {
    int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  }
  else {
    int v17 = 1;
  }
  v3 += v16 + v17 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x20) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  int v18 = (drawing::CommandID *)*((void *)this + 11);
  if (!v18)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    int v18 = *(drawing::CommandID **)(drawing::Command::default_instance_ + 88);
  }
  uint64_t v19 = (google::protobuf::io::CodedOutputStream *)drawing::CommandID::ByteSize(v18);
  int v20 = (int)v19;
  if (v19 >= 0x80) {
    int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
  }
  else {
    int v21 = 1;
  }
  v3 += v20 + v21 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_40:
  uint64_t v22 = (drawing::Rectangle *)*((void *)this + 12);
  if (!v22)
  {
    drawing::protobuf_AddDesc_drawing_2eproto(0);
    uint64_t v22 = *(drawing::Rectangle **)(drawing::Command::default_instance_ + 96);
  }
  BOOL v23 = (google::protobuf::io::CodedOutputStream *)drawing::Rectangle::ByteSize(v22);
  int v24 = (int)v23;
  if (v23 >= 0x80) {
    int v25 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
  }
  else {
    int v25 = 1;
  }
  v3 += v24 + v25 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x80) != 0)
  {
LABEL_46:
    int v26 = (drawing::Point *)*((void *)this + 13);
    if (!v26)
    {
      drawing::protobuf_AddDesc_drawing_2eproto(0);
      int v26 = *(drawing::Point **)(drawing::Command::default_instance_ + 104);
    }
    int v27 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v26);
    int v28 = (int)v27;
    if (v27 >= 0x80) {
      int v29 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    }
    else {
      int v29 = 1;
    }
    v3 += v28 + v29 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_52:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      id v30 = (drawing::Point *)*((void *)this + 14);
      if (!v30)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(0);
        id v30 = *(drawing::Point **)(drawing::Command::default_instance_ + 112);
      }
      char v31 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v30);
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        int v33 = 1;
      }
      v3 += v32 + v33 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x200) != 0)
    {
      int v34 = (drawing::Parameters *)*((void *)this + 15);
      if (!v34)
      {
        drawing::protobuf_AddDesc_drawing_2eproto(0);
        int v34 = *(drawing::Parameters **)(drawing::Command::default_instance_ + 120);
      }
      int v35 = (google::protobuf::io::CodedOutputStream *)drawing::Parameters::ByteSize(v34);
      int v36 = (int)v35;
      if (v35 >= 0x80) {
        int v37 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      }
      else {
        int v37 = 1;
      }
      v3 += v36 + v37 + 1;
    }
  }
  int v38 = *((_DWORD *)this + 18);
  int v39 = v38 + v3;
  if (v38 >= 1)
  {
    int v40 = 0;
    do
    {
      uint64_t v41 = (drawing::Point *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)this + 64, v40);
      int v42 = (google::protobuf::io::CodedOutputStream *)drawing::Point::ByteSize(v41);
      int v43 = (int)v42;
      if (v42 >= 0x80) {
        int v44 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
      }
      else {
        int v44 = 1;
      }
      v39 += v43 + v44;
      ++v40;
    }
    while (v40 < *((_DWORD *)this + 18));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v45 = *((void *)this + 2);
  }
  else {
    LODWORD(v45) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v39 + v45);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::Command::CheckTypeAndMergeFrom(drawing::Command *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Command::MergeFrom(this, lpsrc);
}

std::string *drawing::CommandID::MergeFrom(drawing::CommandID *this, const drawing::CommandID *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1257);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v14 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v14;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v6;
    }
  }
LABEL_8:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3AC908C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Color::MergeFrom(drawing::Color *this, const drawing::Color *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 2205);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    int v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3AC91BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Point::MergeFrom(drawing::Point *this, const drawing::Point *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_12;
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 10) = v14;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 11) = v15;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_23:
    int v18 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 8) |= 0x10u;
    *((_DWORD *)this + 14) = v18;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_22:
  int v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 8) |= 8u;
  *((_DWORD *)this + 13) = v17;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_24:
  int v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 8) |= 0x20u;
  *((_DWORD *)this + 15) = v19;
  if ((*((_DWORD *)a2 + 8) & 0x40) != 0)
  {
LABEL_11:
    int v6 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 0x40u;
    *((_DWORD *)this + 16) = v6;
  }
LABEL_12:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3AC934C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *drawing::Parameters::MergeFrom(drawing::Parameters *this, const drawing::Parameters *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/drawing.pb.cc", 1913);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v14 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v14;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v6;
    }
  }
LABEL_8:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3AC945C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Command::IsInitialized(drawing::Command *this)
{
  return 1;
}

void *drawing::Command::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Command");
}

void drawing::CommandID::~CommandID(void **this)
{
  *this = &unk_1F1F24870;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  drawing::CommandID::~CommandID(this);
  JUMPOUT(0x1C877D640);
}

void drawing::CommandID::New(drawing::CommandID *this)
{
}

uint64_t drawing::CommandID::MergePartialFromCodedStream(drawing::CommandID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v7 == 16)
        {
          int v15 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_49;
        }
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if (v7 != 8) {
          goto LABEL_22;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_50; {
          std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v11;
          std::string::size_type v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          int v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
LABEL_32:
          if ((unint64_t)v15 >= v10 || *v15 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))goto LABEL_50; {
            char v16 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 11) = *v15;
            char v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v16 < v10 && *v16 == 24)
          {
            int v14 = v16 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_13:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
LABEL_49:
          uint64_t v18 = 1;
          goto LABEL_51;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_50; {
      }
        }
    }
    if (v7 != 24) {
      goto LABEL_22;
    }
    int v14 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_40:
    if ((unint64_t)v14 < v10 && (*v14 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 12) = *v14;
      int v17 = (unsigned __int8 *)(v14 + 1);
      *((void *)a2 + 1) = v17;
      goto LABEL_45;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 12)) {
      break;
    }
    int v17 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_45:
    *((_DWORD *)this + 8) |= 4u;
    if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v18 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_51;
    }
  }
LABEL_50:
  uint64_t v18 = 0;
LABEL_51:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1C3AC9814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::CommandID::SerializeWithCachedSizes(drawing::CommandID *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 12), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t drawing::CommandID::ByteSize(drawing::CommandID *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
  {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) != 0)
  {
    unint64_t v7 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v7 >= 0x80) {
      int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else {
      int v8 = 2;
    }
    v3 += v8;
  }
LABEL_19:
  if (*((char *)this + 31) < 0) {
    uint64_t v9 = *((void *)this + 2);
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *drawing::CommandID::CheckTypeAndMergeFrom(drawing::CommandID *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::CommandID::MergeFrom(this, lpsrc);
}

uint64_t drawing::CommandID::IsInitialized(drawing::CommandID *this)
{
  return 1;
}

void *drawing::CommandID::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.CommandID");
}

void drawing::Point::~Point(void **this)
{
  *this = &unk_1F1F248E8;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  drawing::Point::~Point(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Point::New(drawing::Point *this)
{
}

uint64_t drawing::Point::MergePartialFromCodedStream(drawing::Point *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_54:
        uint64_t v16 = 1;
        goto LABEL_55;
      }
LABEL_46:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))
      {
LABEL_53:
        uint64_t v16 = 0;
        goto LABEL_55;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_44;
        }
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 10) = v20;
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 11) = v20;
        *((_DWORD *)this + 8) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_24:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 12) = v20;
        *((_DWORD *)this + 8) |= 4u;
        std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_29:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 13) = v20;
        *((_DWORD *)this + 8) |= 8u;
        BOOL v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_34:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 14) = v20;
        *((_DWORD *)this + 8) |= 0x10u;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_39:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 15) = v20;
        *((_DWORD *)this + 8) |= 0x20u;
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_48:
        unsigned int v20 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20)) {
          goto LABEL_53;
        }
        *((_DWORD *)this + 16) = v20;
        *((_DWORD *)this + 8) |= 0x40u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v16 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 == 21) {
          goto LABEL_19;
        }
        goto LABEL_44;
      case 3u:
        if (v7 == 29) {
          goto LABEL_24;
        }
        goto LABEL_44;
      case 4u:
        if (v7 == 37) {
          goto LABEL_29;
        }
        goto LABEL_44;
      case 5u:
        if (v7 == 45) {
          goto LABEL_34;
        }
        goto LABEL_44;
      case 6u:
        if (v7 == 53) {
          goto LABEL_39;
        }
        goto LABEL_44;
      case 7u:
        if (v7 == 61) {
          goto LABEL_48;
        }
LABEL_44:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_46;
        }
        goto LABEL_54;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_55:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1C3AC9EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Point::SerializeWithCachedSizes(drawing::Point *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)5, a2, *((float *)this + 14), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_16:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)6, a2, *((float *)this + 15), a3);
  if ((*((_DWORD *)this + 8) & 0x40) != 0) {
LABEL_8:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)7, a2, *((float *)this + 16), a3);
LABEL_9:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Point::ByteSize(drawing::Point *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    int v2 = (v1 << 31 >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x40) != 0) {
      int v1 = v2 + 5;
    }
    else {
      int v1 = v2;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v4 = (v1 + v3);
  *((_DWORD *)this + 9) = v4;
  return v4;
}

std::string *drawing::Point::CheckTypeAndMergeFrom(drawing::Point *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Point::MergeFrom(this, lpsrc);
}

uint64_t drawing::Point::IsInitialized(drawing::Point *this)
{
  return 1;
}

void *drawing::Point::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Point");
}

void drawing::Parameters::~Parameters(void **this)
{
  *this = &unk_1F1F24960;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  drawing::Parameters::~Parameters(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Parameters::New(drawing::Parameters *this)
{
}

uint64_t drawing::Parameters::MergePartialFromCodedStream(drawing::Parameters *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 != 3) {
        break;
      }
      if (v7 != 29) {
        goto LABEL_23;
      }
LABEL_31:
      unsigned int v17 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
      {
LABEL_36:
        uint64_t v13 = 0;
        goto LABEL_38;
      }
      *((_DWORD *)this + 12) = v17;
      *((_DWORD *)this + 8) |= 4u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v9 == 2)
    {
      if (v7 == 21) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
    if (v9 != 1) {
      break;
    }
    if (v7 == 13)
    {
      unsigned int v17 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
        goto LABEL_36;
      }
      *((_DWORD *)this + 10) = v17;
      *((_DWORD *)this + 8) |= 1u;
      BOOL v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 21)
      {
        *((void *)a2 + 1) = v10 + 1;
LABEL_27:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_36;
        }
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 < *((void *)a2 + 2) && *v12 == 29)
        {
          *((void *)a2 + 1) = v12 + 1;
          goto LABEL_31;
        }
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
LABEL_25:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_36; {
    }
      }
  }
LABEL_14:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_25;
  }
LABEL_37:
  uint64_t v13 = 1;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3ACA454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Parameters::SerializeWithCachedSizes(drawing::Parameters *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Parameters::ByteSize(drawing::Parameters *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  int v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if (*((unsigned char *)this + 32)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Parameters::CheckTypeAndMergeFrom(drawing::Parameters *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Parameters::MergeFrom(this, lpsrc);
}

uint64_t drawing::Parameters::IsInitialized(drawing::Parameters *this)
{
  return 1;
}

void *drawing::Parameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Parameters");
}

void drawing::Color::~Color(void **this)
{
  *this = &unk_1F1F249D8;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  drawing::Color::~Color(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Color::New(drawing::Color *this)
{
}

uint64_t drawing::Color::MergePartialFromCodedStream(drawing::Color *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_39:
        uint64_t v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        uint64_t v13 = 0;
        goto LABEL_40;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        BOOL v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_33:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 == 21) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 3u:
        if (v7 == 29) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 4u:
        if (v7 == 37) {
          goto LABEL_33;
        }
LABEL_29:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_31;
        }
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3ACA990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Color::SerializeWithCachedSizes(drawing::Color *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Color::ByteSize(drawing::Color *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  int v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if (*((unsigned char *)this + 32)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Color::CheckTypeAndMergeFrom(drawing::Color *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Color::MergeFrom(this, lpsrc);
}

uint64_t drawing::Color::IsInitialized(drawing::Color *this)
{
  return 1;
}

void *drawing::Color::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Color");
}

drawing::Rectangle *drawing::Rectangle::Rectangle(drawing::Rectangle *this, const drawing::Rectangle *a2)
{
  *(void *)this = &unk_1F1F24A50;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  drawing::Rectangle::MergeFrom(this, a2);
  return this;
}

void sub_1C3ACABE4(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void drawing::Rectangle::~Rectangle(void **this)
{
  *this = &unk_1F1F24A50;
  drawing::protobuf_AddDesc_drawing_2eproto((drawing *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  drawing::Rectangle::~Rectangle(this);
  JUMPOUT(0x1C877D640);
}

void drawing::Rectangle::New(drawing::Rectangle *this)
{
}

uint64_t drawing::Rectangle::MergePartialFromCodedStream(drawing::Rectangle *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_39:
        uint64_t v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        uint64_t v13 = 0;
        goto LABEL_40;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        BOOL v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_33:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 == 21) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 3u:
        if (v7 == 29) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 4u:
        if (v7 == 37) {
          goto LABEL_33;
        }
LABEL_29:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_31;
        }
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3ACAF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t drawing::Rectangle::SerializeWithCachedSizes(drawing::Rectangle *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t drawing::Rectangle::ByteSize(drawing::Rectangle *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  int v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if (*((unsigned char *)this + 32)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *drawing::Rectangle::CheckTypeAndMergeFrom(drawing::Rectangle *this, const google::protobuf::MessageLite *lpsrc)
{
  return drawing::Rectangle::MergeFrom(this, lpsrc);
}

uint64_t drawing::Rectangle::IsInitialized(drawing::Rectangle *this)
{
  return 1;
}

void *drawing::Rectangle::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "drawing.Rectangle");
}

uint64_t drawing::Drawing::GetCachedSize(drawing::Drawing *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Command::GetCachedSize(drawing::Command *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::CommandID::GetCachedSize(drawing::CommandID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Point::GetCachedSize(drawing::Point *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Parameters::GetCachedSize(drawing::Parameters *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Color::GetCachedSize(drawing::Color *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t drawing::Rectangle::GetCachedSize(drawing::Rectangle *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3ACB274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3ACB350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const drawing::Command *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Command>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)drawing::Command::MergeFrom(*(drawing::Command **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3ACB4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const drawing::Point *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<drawing::Point>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)drawing::Point::MergeFrom(*(drawing::Point **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3ACB670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3ACB770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACB958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACBB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACBF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACC1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACC410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACC760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACCA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACCCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACCEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACD2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACD778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACD9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACDB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACDD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACDE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACE10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACE740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_sync_exit(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACF04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3ACF19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACF6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ACFDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_12_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1C3AD0A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1C3AD0B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD0BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD0C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD0D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD0E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD0EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD34C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD3ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD5ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD6328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD672C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3AD685C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New()
{
}

void sub_1C3AD68BC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40A6778F3CLL);
  _Unwind_Resume(a1);
}

void sub_1C3AD6988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD6A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD6B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD6BC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x666666666666667) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    void v7[3] = v7[0] + 40 * v6;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v7);
  }
  return result;
}

void sub_1C3AD6DFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - *a1) >> 3);
    unint64_t v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x333333333333333) {
      unint64_t v13 = 0x666666666666666;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    int v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, v13);
    int v15 = &v14[40 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[40 * v16];
    uint64_t v17 = *a2;
    *a2 = 0;
    *(void *)int v15 = v17;
    *((_DWORD *)v15 + 2) = *((_DWORD *)a2 + 2);
    *((_OWORD *)v15 + 1) = *((_OWORD *)a2 + 1);
    *((void *)v15 + 4) = a2[4];
    std::string v18[2] = v15 + 40;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v18);
    uint64_t v9 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v18);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(_OWORD *)(v7 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(v7 + 32) = a2[4];
    uint64_t v9 = v7 + 40;
    a1[1] = v7 + 40;
  }
  a1[1] = v9;
  return result;
}

void sub_1C3AD6F44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void traverseUnorderedSimple(uint64_t a1, void *a2)
{
  uint64_t v14 = a1;
  int v2 = a2;
  memset(v12, 0, sizeof(v12));
  int v13 = 1065353216;
  long long v11 = 0u;
  memset(v10, 0, sizeof(v10));
  char v9 = 0;
  std::deque<TopoSubstring *>::push_back(v10, &v14);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v12, &v14, &v14);
  for (uint64_t i = *((void *)&v11 + 1); *((void *)&v11 + 1); uint64_t i = *((void *)&v11 + 1))
  {
    uint64_t v4 = i - 1;
    uint64_t v5 = *(void *)(*(void *)(*((void *)&v10[0] + 1) + (((unint64_t)(v11 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v11 + v4) & 0x1FF));
    *((void *)&v11 + 1) = v4;
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v10, 1);
    v2[2](v2, v5, &v9);
    if (v9) {
      break;
    }
    unint64_t v7 = *(uint64_t **)(v5 + 48);
    unint64_t v6 = *(uint64_t **)(v5 + 56);
    while (v7 != v6)
    {
      uint64_t v8 = 0;
      uint64_t v8 = *v7;
      if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v12, &v8))
      {
        std::deque<TopoSubstring *>::push_back(v10, &v8);
        std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v12, &v8, &v8);
      }
      ++v7;
    }
  }
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v10);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v12);
}

void sub_1C3AD708C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

NSUUID *updateTopoID(const TopoID *a1, const TopoIDRange *a2, const TopoIDRange *a3)
{
  unint64_t v6 = a1->replicaID;
  if ([(NSUUID *)a1->replicaID isEqual:a2->var0.replicaID])
  {
    unsigned int clock = a1->clock;
    unsigned int v8 = a2->var0.clock;
    if (clock >= v8 && clock < a2->var1 + v8)
    {
      uint64_t v9 = a3->var0.replicaID;

      return v9;
    }
  }
  return v6;
}

void sub_1C3AD715C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void updateTopoIDRange(TopoIDRange *a1, void *a2, uint64_t a3, uint64_t *a4)
{
  if (([(NSUUID *)a1->var0.replicaID isEqual:*a2] & 1) == 0)
  {
LABEL_5:
    unint64_t v13 = a4[1];
    if (v13 >= a4[2])
    {
      uint64_t v14 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)a1);
    }
    else
    {
      *(void *)unint64_t v13 = a1->var0.replicaID;
      *(_DWORD *)(v13 + 8) = a1->var0.clock;
      *(_DWORD *)(v13 + 16) = a1->var1;
      uint64_t v14 = v13 + 24;
    }
    a4[1] = v14;
    return;
  }
  unsigned int v8 = a1->var0.replicaID;
  uint64_t v9 = a1->var1 + a1->var0.clock;
  id location = v8;
  uint64_t v56 = v9;
  if (TopoID::operator<=((uint64_t)&location, a2))
  {

    goto LABEL_5;
  }
  id v10 = (id)*a2;
  uint64_t v11 = (*((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2));
  id v52 = v10;
  uint64_t v53 = v11;
  BOOL v12 = TopoID::operator>=((uint64_t)a1, &v52);

  if (v12) {
    goto LABEL_5;
  }
  unsigned int clock = a1->var0.clock;
  unsigned int v16 = *((_DWORD *)a2 + 2);
  if (v16 > clock)
  {
    TopoIDRange::splitPairAt(a1, v16 - clock, (uint64_t)&location);
    id v17 = (id)*a2;
    unsigned int v18 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
    id v19 = v58;
    unsigned int v20 = v19;
    if (v18 >= v60 + v59)
    {
      if (v18 != v60 + v59)
      {

        goto LABEL_31;
      }
      uint64_t v39 = [v17 TTCompare:v19];

      if (v39 != -1)
      {
LABEL_31:
        id v41 = *(id *)a3;
        int v42 = *(_DWORD *)(a3 + 8);
        objc_storeStrong(&v58, v41);
        int v59 = v42;
        unint64_t v43 = a4[1];
        if (v43 >= a4[2])
        {
          unint64_t v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
        }
        else
        {
          *(void *)unint64_t v43 = location;
          *(_DWORD *)(v43 + 8) = v56;
          *(_DWORD *)(v43 + 16) = v57;
          unint64_t v38 = v43 + 24;
        }
        a4[1] = v38;
        if (v38 < a4[2])
        {
LABEL_35:
          *(void *)unint64_t v38 = v58;
          *(_DWORD *)(v38 + 8) = v59;
          *(_DWORD *)(v38 + 16) = v60;
          uint64_t v44 = v38 + 24;
LABEL_37:
          a4[1] = v44;

          return;
        }
LABEL_36:
        uint64_t v44 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v58);
        goto LABEL_37;
      }
    }
    else
    {
    }
    int v21 = *((_DWORD *)a2 + 4);
    id v22 = v58;
    int v23 = v59 + v21;
    id v52 = v22;
    uint64_t v53 = (v59 + v21);
    int v24 = v60 - v21;
    int v54 = v60 - v21;
    int v60 = v21;
    unint64_t v25 = a4[1];
    if (v25 >= a4[2])
    {
      uint64_t v27 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v52);
      id v26 = v52;
    }
    else
    {
      id v26 = v22;
      *(void *)unint64_t v25 = v26;
      *(_DWORD *)(v25 + 8) = v23;
      *(_DWORD *)(v25 + 16) = v24;
      uint64_t v27 = v25 + 24;
    }
    a4[1] = v27;

    goto LABEL_31;
  }
  int v28 = a1->var0.replicaID;
  unsigned int v29 = a1->var1 + a1->var0.clock;
  id v30 = (id)*a2;
  char v31 = v30;
  unsigned int v32 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
  if (v29 > v32)
  {

    goto LABEL_16;
  }
  if (v29 == v32)
  {
    uint64_t v40 = [(NSUUID *)v28 TTCompare:v30];

    if (v40 == 1)
    {
LABEL_16:
      int v33 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2) - a1->var0.clock;
      id v34 = (id)*a2;
      TopoIDRange::splitPairAt(a1, v33, (uint64_t)&location);

      id v35 = *(id *)a3;
      int v36 = a1->var0.clock + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
      objc_storeStrong(&location, v35);
      LODWORD(v56) = v36;
      unint64_t v37 = a4[1];
      if (v37 >= a4[2])
      {
        unint64_t v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
      }
      else
      {
        *(void *)unint64_t v37 = location;
        *(_DWORD *)(v37 + 8) = v56;
        *(_DWORD *)(v37 + 16) = v57;
        unint64_t v38 = v37 + 24;
      }
      a4[1] = v38;
      if (v38 < a4[2]) {
        goto LABEL_35;
      }
      goto LABEL_36;
    }
  }
  else
  {
  }
  uint64_t v45 = a1->var0.replicaID;
  unsigned int var1 = a1->var1;
  unsigned int v57 = var1;
  id v47 = *(id *)a3;
  int v48 = a1->var0.clock + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
  id location = v47;

  LODWORD(v56) = v48;
  unint64_t v49 = a4[1];
  if (v49 >= a4[2])
  {
    uint64_t v51 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
    id v50 = location;
  }
  else
  {
    id v50 = v47;
    *(void *)unint64_t v49 = v50;
    *(_DWORD *)(v49 + 8) = v48;
    *(_DWORD *)(v49 + 16) = var1;
    uint64_t v51 = v49 + 24;
  }
  a4[1] = v51;
}

void sub_1C3AD75D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

BOOL TopoID::operator<=(uint64_t a1, void *a2)
{
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  unsigned int v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ([*(id *)a1 isEqual:*a2]) {
      return 1;
    }
    unsigned int v4 = *(_DWORD *)(a1 + 8);
    unsigned int v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 < v5) {
    return 1;
  }
  return v4 == v5 && [*(id *)a1 TTCompare:*a2] == -1;
}

BOOL TopoID::operator>=(uint64_t a1, void *a2)
{
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  unsigned int v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ([*(id *)a1 isEqual:*a2]) {
      return 1;
    }
    unsigned int v4 = *(_DWORD *)(a1 + 8);
    unsigned int v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 > v5) {
    return 1;
  }
  return v4 == v5 && [*(id *)a1 TTCompare:*a2] == 1;
}

void TopoIDRange::splitPairAt(TopoIDRange *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v6 = this->var0.replicaID;
  unsigned int clock = this->var0.clock;
  unsigned int v8 = this->var0.replicaID;
  int v9 = this->var0.clock + a2;
  int v10 = this->var1 - a2;
  *(void *)a3 = v6;
  *(_DWORD *)(a3 + 8) = clock;
  *(_DWORD *)(a3 + 16) = a2;
  *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8;
  *(_DWORD *)(a3 + 32) = v9;
  *(_DWORD *)(a3 + 40) = v10;
  uint64_t v11 = v6;
}

uint64_t __Block_byref_object_copy__10(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__11(uint64_t a1)
{
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a1 + 48);
}

void TopoSubstring::~TopoSubstring(TopoSubstring *this)
{
  int v2 = (void *)*((void *)this + 6);
  if (v2)
  {
    *((void *)this + 7) = v2;
    operator delete(v2);
  }
}

void sub_1C3AD78F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);
  _Unwind_Resume(a1);
}

void sub_1C3AD7988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD7A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD7AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD7B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD7C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C3AD7DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD7F14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C3AD80A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD84B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

char *std::vector<TopoSubstring *>::insert(uint64_t a1, char *__src, char *a3)
{
  int v3 = a3;
  unsigned int v4 = __src;
  unint64_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    unint64_t v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 3;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 2 > v14) {
      unint64_t v14 = v17 >> 2;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      id v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(a1 + 16, v18);
    }
    else {
      id v19 = 0;
    }
    unsigned int v20 = &v19[8 * v16];
    std::string __p = v19;
    uint64_t v27 = v20;
    int v28 = v20;
    unsigned int v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 2;
        }
        int v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v8, v22);
        unsigned int v20 = &v23[8 * (v22 >> 2)];
        std::string __p = v23;
        uint64_t v27 = v20;
        unsigned int v29 = &v23[8 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 8 * (v21 >> 1);
        uint64_t v27 = v20;
      }
    }
    *(void *)unsigned int v20 = *(void *)v3;
    int v28 = v20 + 8;
    unsigned int v4 = std::vector<TopoSubstring *>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(void *)__src = *(void *)a3;
    *(void *)(a1 + 8) = __src + 8;
  }
  else
  {
    int v9 = __src + 8;
    int v10 = v6 - 8;
    uint64_t v11 = *(void **)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 8 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(void *)unsigned int v4 = *(void *)v3;
  }
  return v4;
}

void sub_1C3AD8790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C3AD886C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)va);

  _Unwind_Resume(a1);
}

void sub_1C3AD88E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C3AD8E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD92EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD9544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<_NSRange>::reserve(void **a1, unint64_t a2)
{
  unsigned int v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    int v9 = &v6[16 * v8];
    uint64_t v11 = (char *)*a1;
    int v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      int v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1C3AD9758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD9844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD994C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD9A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD9C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AD9E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3ADA094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::shrink_to_fit(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned int v4 = *(char **)a1;
  int64_t v5 = *(unsigned char **)(a1 + 8);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (uint64_t)v4) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    uint64_t v11 = 0;
    uint64_t v9 = 8 * v6;
    goto LABEL_8;
  }
  unint64_t v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v2, v6);
  unsigned int v4 = *(char **)a1;
  uint64_t v8 = *(char **)(a1 + 8);
  uint64_t v9 = (uint64_t)&v7[8 * v6];
  uint64_t v11 = &v7[8 * v10];
  if (v8 == *(char **)a1)
  {
LABEL_8:
    uint64_t v12 = v9;
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  do
  {
    uint64_t v13 = *((void *)v8 - 1);
    v8 -= 8;
    *(void *)(v12 - 8) = v13;
    v12 -= 8;
  }
  while (v8 != v4);
  unsigned int v4 = *(char **)a1;
LABEL_9:
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  if (v4)
  {
    operator delete(v4);
  }
}

void sub_1C3ADA498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(v26);
  _Block_object_dispose((const void *)(v28 - 208), 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a9);
  _Block_object_dispose((const void *)(v28 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1C3ADA888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADAA84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADAC0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADAE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADB24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    std::vector<TopoSubstring *>::__append((void **)a1, a2 - v2);
  }
}

void sub_1C3ADB420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADB4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADB758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v13);
  _Block_object_dispose((const void *)(v14 - 128), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__93(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__94(uint64_t a1)
{
  return std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(a1 + 48);
}

void sub_1C3ADB8F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3ADBC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoIDRange *a2, int a3)
{
  *(void *)this = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((unsigned char *)this + 44) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 18) = 0;
  objc_storeStrong((id *)this, a2->var0.replicaID);
  *((_DWORD *)this + 2) = a2->var0.clock;
  *((_DWORD *)this + 4) = a2->var1;
}

void std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

uint64_t *std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 40);
    v2 -= 40;
    *(void *)uint64_t v2 = 0;
    *(void *)(v4 - 40) = v5;
    v4 -= 40;
    *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(v2 + 16);
    *(void *)(v4 + 32) = *(void *)(v2 + 32);
  }
  a2[1] = v4;
  uint64_t v6 = *result;
  std::logic_error *result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

uint64_t std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    uint64_t result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        uint64_t result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(void *a1, __n128 *a2, __n128 *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  uint64_t v8 = (void *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = a2[1].n128_u64[1];
      std::string v8[2] = a2[1].n128_u64[0];
      v8[3] = v9;
      uint64_t v10 = (void *)*v8;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v8);
      a2 = (__n128 *)a2->n128_u64[0];
      uint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      uint64_t v11 = (void *)*v8;
      operator delete(v8);
      uint64_t v8 = v11;
    }
    while (v11);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(a1, a2 + 1);
      a2 = (__n128 *)a2->n128_u64[0];
    }
  }
}

void sub_1C3ADC030(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1C3ADC050(_Unwind_Exception *a1)
{
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(void *a1, void *a2)
{
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[2];
  unint64_t v6 = HIDWORD(v5);
  unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * v5) + 8) ^ HIDWORD(v5));
  unint64_t v8 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
  a2[1] = v8;
  inserted = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare((uint64_t)a1, v8, v4);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(a1, a2, inserted);
  return a2;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  uint64_t v16 = *(void **)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    uint64_t v16 = (void *)*v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = v16[1];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = v16[1];
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2 && v16[2] == *a3;
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(void *result, void *a2, void *a3)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(void *)(*result + 8 * v4) = result + 2;
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
LABEL_18:
    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
    if (v6 != v4) {
      goto LABEL_18;
    }
  }
LABEL_19:
  ++result[3];
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = (void *)*v7; *v7; uint64_t i = (void *)*v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (void *)*v13;
            }
            while (v13 && i[2] == v13[2]);
            *uint64_t v7 = v13;
            *uint8x8_t v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(void *a1, __n128 *a2)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>((uint64_t)a1, a2, (uint64_t)&v4);
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v4);
}

void sub_1C3ADC5C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = (__n128 *)operator new(0x20uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  __n128 result = *a2;
  v6[1] = *a2;
  *(unsigned char *)(a3 + 16) = 1;
  unint64_t v8 = v6[1].n128_u64[0];
  unint64_t v9 = HIDWORD(v8);
  unint64_t v10 = 0x9DDFEA08EB382D69 * (((8 * v8) + 8) ^ HIDWORD(v8));
  v6->n128_u64[0] = 0;
  v6->n128_u64[1] = 0x9DDFEA08EB382D69
                  * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69
                                                                         * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0x333333333333333) {
    unint64_t v1 = 0x333333333333333;
  }
  else {
    unint64_t v1 = a1;
  }
  uint64_t v2 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
  while (1)
  {
    __n128 result = operator new(40 * v1, v2);
    if (result) {
      break;
    }
    BOOL v4 = v1 > 1;
    v1 >>= 1;
    if (!v4) {
      return 0;
    }
  }
  return result;
}

void std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, void **a4, uint64_t a5)
{
  if (a3 < 2) {
    return;
  }
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  if (a3 == 2)
  {
    uint64_t v7 = (uint64_t)(a2 - 5);
    id v92 = *(a2 - 5);
    unsigned int v8 = *(_DWORD *)(v7 + 8);
    unint64_t v9 = *(void *)(v7 + 16);
    id v10 = *(id *)v6;
    size_t v11 = v10;
    unint64_t v12 = *(void *)(v6 + 16);
    if (v9 == v12)
    {
      unsigned int v20 = *(_DWORD *)(v6 + 8);
      if (v8 >= v20)
      {
        if (v8 != v20)
        {

          return;
        }
        uint64_t v74 = [v92 TTCompare:v10];

        if (v74 != -1) {
          return;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v9 >= v12) {
        return;
      }
    }
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)v6, v7);
    return;
  }
  if ((uint64_t)a3 <= 0)
  {
    if ((id *)a1 == a2) {
      return;
    }
    BOOL v21 = (id *)(a1 + 40);
    if ((id *)(a1 + 40) == a2) {
      return;
    }
    uint64_t v88 = 0;
    uint64_t v22 = a1;
    while (1)
    {
      uint64_t v23 = v22;
      int v86 = v21;
      id v93 = *v21;
      unsigned int v24 = *(_DWORD *)(v22 + 48);
      unint64_t v25 = *(void *)(v22 + 56);
      id v26 = *(id *)v23;
      uint64_t v27 = v26;
      unsigned int v29 = (_OWORD *)(v23 + 16);
      unint64_t v28 = *(void *)(v23 + 16);
      if (v25 == v28)
      {
        unsigned int v31 = *(_DWORD *)(v23 + 8);
        if (v24 >= v31)
        {
          if (v24 != v31)
          {

            uint64_t v22 = (uint64_t)v86;
            goto LABEL_46;
          }
          uint64_t v50 = [v93 TTCompare:v26];

          uint64_t v22 = (uint64_t)v86;
          if (v50 != -1) {
            goto LABEL_46;
          }
        }
        else
        {

          uint64_t v22 = (uint64_t)v86;
        }
      }
      else
      {

        BOOL v30 = v25 >= v28;
        uint64_t v22 = (uint64_t)v86;
        if (v30) {
          goto LABEL_46;
        }
      }
      id v94 = *(id *)v22;
      *(void *)uint64_t v22 = 0;
      unsigned int v90 = *(_DWORD *)(v23 + 48);
      unint64_t v32 = *(void *)(v23 + 56);
      uint64_t v33 = *(void *)(v23 + 64);
      uint64_t v34 = *(void *)(v23 + 72);
      id v35 = *(id *)v23;
      *(void *)uint64_t v23 = 0;
      *(void *)uint64_t v22 = v35;
      *(_DWORD *)(v22 + 8) = *(_DWORD *)(v23 + 8);
      *(_OWORD *)(v22 + 16) = *v29;
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      if (v23 == v6)
      {
        uint64_t v23 = v6;
        goto LABEL_45;
      }
      uint64_t v84 = v34;
      uint64_t v85 = v33;
      uint64_t v36 = v6;
      uint64_t v37 = v88;
      while (1)
      {
        uint64_t v38 = v36;
        uint64_t v39 = v36 + v37;
        id v40 = v94;
        id v41 = *(id *)(v36 + v37 - 40);
        int v42 = v41;
        unint64_t v43 = (unint64_t *)(v36 + v37 - 24);
        unint64_t v44 = *v43;
        if (v32 != *v43)
        {

          if (v32 >= v44) {
            goto LABEL_43;
          }
          goto LABEL_36;
        }
        unsigned int v45 = *(_DWORD *)(v39 - 32);
        if (v90 < v45)
        {

          goto LABEL_36;
        }
        if (v90 != v45) {
          break;
        }
        uint64_t v46 = [v40 TTCompare:v41];

        if (v46 != -1)
        {
          uint64_t v6 = v38;
          goto LABEL_44;
        }
LABEL_36:
        unsigned int v29 = (_OWORD *)(v23 - 24);
        uint64_t v47 = *(void *)(v39 - 40);
        *(void *)(v39 - 40) = 0;
        uint64_t v36 = v38;
        uint64_t v48 = v38 + v37;
        unint64_t v49 = *(void **)(v38 + v37);
        *(void *)(v38 + v37) = v47;

        *(_DWORD *)(v48 + 8) = *(_DWORD *)(v39 - 32);
        *(_OWORD *)(v48 + 16) = *(_OWORD *)v43;
        *(void *)(v48 + 32) = *(void *)(v48 - 8);
        v23 -= 40;
        v37 -= 40;
        if (!v37)
        {
          unsigned int v29 = (_OWORD *)(v38 + 16);
          uint64_t v23 = v38;
          uint64_t v6 = v38;
          goto LABEL_44;
        }
      }

LABEL_43:
      uint64_t v23 = v38 + v37;
      uint64_t v6 = v38;
      unsigned int v29 = (_OWORD *)(v23 + 16);
LABEL_44:
      uint64_t v5 = a2;
      uint64_t v34 = v84;
      uint64_t v33 = v85;
      uint64_t v22 = (uint64_t)v86;
LABEL_45:
      id v51 = *(id *)v23;
      *(void *)uint64_t v23 = v94;

      *(_DWORD *)(v23 + 8) = v90;
      *(void *)unsigned int v29 = v32;
      *(void *)(v23 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v33;
      *(void *)(v23 + 32) = v34;
LABEL_46:
      BOOL v21 = (id *)(v22 + 40);
      v88 += 40;
      if ((id *)(v22 + 40) == v5) {
        return;
      }
    }
  }
  uint64_t v16 = a3 >> 1;
  uint64_t v18 = a1 + 40 * (a3 >> 1);
  if ((uint64_t)a3 > a5)
  {
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, a1 + 40 * (a3 >> 1), a3 >> 1, a4, a5);
    uint64_t v19 = a3 - v16;
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, v19, a4, a5);
    std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v18, (uint64_t)v5, v16, v19, a4, a5);
    return;
  }
  std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, (id *)(a1 + 40 * (a3 >> 1)), a3 >> 1, (char *)a4);
  id v52 = (char *)&a4[5 * v16];
  std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, a3 - v16, v52);
  unint64_t v87 = a3;
  uint64_t v53 = &a4[5 * a3];
  int v54 = (void *)(a1 + 32);
  int v55 = a4;
  uint64_t v56 = v52;
  int v91 = v52;
  v95 = v53;
  while (v56 != (char *)v53)
  {
    id v57 = *(id *)v56;
    id v58 = (void *)*((void *)v56 + 2);
    unsigned int v59 = *((_DWORD *)v56 + 2);
    id v60 = *v55;
    int v61 = v60;
    int v62 = v55[2];
    if (v58 == v62)
    {
      unsigned int v63 = *((_DWORD *)v55 + 2);
      if (v59 >= v63)
      {
        if (v59 != v63)
        {

LABEL_60:
          id v67 = *v55;
          *int v55 = 0;
          int v68 = (void *)*(v54 - 4);
          *(v54 - 4) = v67;

          *((_DWORD *)v54 - 6) = *((_DWORD *)v55 + 2);
          *((_OWORD *)v54 - 1) = *((_OWORD *)v55 + 1);
          *int v54 = v55[4];
          v55 += 5;
          goto LABEL_61;
        }
        uint64_t v66 = [v57 TTCompare:v60];

        if (v66 != -1) {
          goto LABEL_60;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v58 >= v62) {
        goto LABEL_60;
      }
    }
    id v64 = *(id *)v56;
    *(void *)uint64_t v56 = 0;
    id v65 = (void *)*(v54 - 4);
    *(v54 - 4) = v64;

    *((_DWORD *)v54 - 6) = *((_DWORD *)v56 + 2);
    *((_OWORD *)v54 - 1) = *((_OWORD *)v56 + 1);
    *int v54 = *((void *)v56 + 4);
    v56 += 40;
LABEL_61:
    id v52 = v91;
    uint64_t v53 = v95;
    v54 += 5;
    if (v55 == (void **)v91)
    {
      if (v56 != (char *)v95)
      {
        unint64_t v69 = 0;
        do
        {
          int v70 = &v56[v69];
          int v71 = &v54[v69 / 8];
          uint64_t v72 = *(void *)&v56[v69];
          *(void *)&v56[v69] = 0;
          int v73 = (void *)v54[v69 / 8 - 4];
          v54[v69 / 8 - 4] = v72;

          *((_DWORD *)v71 - 6) = *(_DWORD *)&v56[v69 + 8];
          *((_OWORD *)v71 - 1) = *(_OWORD *)&v56[v69 + 16];
          void *v71 = *(void *)&v56[v69 + 32];
          v69 += 40;
        }
        while (v70 + 40 != (char *)v95);
      }
      goto LABEL_73;
    }
  }
  if (v55 != (void **)v52)
  {
    uint64_t v75 = 0;
    do
    {
      int v76 = &v54[v75];
      int v77 = &v55[v75];
      int v78 = v55[v75];
      v55[v75] = 0;
      int v79 = (void *)v54[v75 - 4];
      v54[v75 - 4] = v78;

      *((_DWORD *)v76 - 6) = v55[v75 + 1];
      *((_OWORD *)v76 - 1) = *(_OWORD *)&v55[v75 + 2];
      *int v76 = v55[v75 + 4];
      v75 += 5;
    }
    while (v77 + 5 != (void **)v52);
  }
LABEL_73:
  int v80 = a4;
  if (a4)
  {
    unint64_t v81 = v87;
    do
    {
      int v82 = *v80;
      v80 += 5;

      --v81;
    }
    while (v81);
  }
}

void sub_1C3ADCD70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  _Unwind_Resume(a1);
}

void std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, char *a4)
{
  if (!a3) {
    return;
  }
  BOOL v4 = a4;
  uint64_t v7 = (id *)a1;
  if (a3 == 2)
  {
    id v11 = *(a2 - 5);
    id v14 = *(a2 - 3);
    unint64_t v12 = a2 - 3;
    id v13 = v14;
    unsigned int v15 = *((_DWORD *)v12 - 2);
    id v16 = *v7;
    int v17 = v16;
    uint64_t v19 = v7 + 2;
    id v18 = v7[2];
    if (v14 != v18)
    {

      BOOL v20 = v13 >= v18;
      BOOL v21 = a4;
      if (!v20) {
        goto LABEL_60;
      }
LABEL_68:
      id v10 = v12 + 2;
      id v86 = *v7;
      *uint64_t v7 = 0;
      *(void *)BOOL v21 = v86;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v7 + 2);
      *((_OWORD *)v21 + 1) = *v19;
      id v87 = v7[4];
      uint64_t v88 = (uint64_t)*(a2 - 5);
      *(a2 - 5) = 0;
      *((void *)v21 + 4) = v87;
      *((void *)v21 + 5) = v88;
      *((_DWORD *)v21 + 12) = *((_DWORD *)a2 - 8);
      long long v79 = *(_OWORD *)v12;
      goto LABEL_69;
    }
    unsigned int v75 = *((_DWORD *)v7 + 2);
    if (v15 >= v75)
    {
      BOOL v21 = a4;
      if (v15 != v75)
      {

        goto LABEL_68;
      }
      uint64_t v85 = [v11 TTCompare:v16];

      if (v85 != -1) {
        goto LABEL_68;
      }
    }
    else
    {

      BOOL v21 = a4;
    }
LABEL_60:
    id v10 = v7 + 4;
    uint64_t v76 = (uint64_t)*(a2 - 5);
    *(a2 - 5) = 0;
    *(void *)BOOL v21 = v76;
    *((_DWORD *)v21 + 2) = *((_DWORD *)a2 - 8);
    *((_OWORD *)v21 + 1) = *(_OWORD *)v12;
    uint64_t v77 = (uint64_t)*(a2 - 1);
    id v78 = *v7;
    *uint64_t v7 = 0;
    *((void *)v21 + 4) = v77;
    *((void *)v21 + 5) = v78;
    *((_DWORD *)v21 + 12) = *((_DWORD *)v7 + 2);
    long long v79 = *v19;
LABEL_69:
    *(_OWORD *)(v21 + 56) = v79;
    unint64_t v9 = v21 + 72;
    goto LABEL_70;
  }
  if (a3 == 1)
  {
    id v8 = *(id *)a1;
    *(void *)a1 = 0;
    *(void *)a4 = v8;
    *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
    *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
    unint64_t v9 = a4 + 32;
    id v10 = (void *)(a1 + 32);
LABEL_70:
    *unint64_t v9 = *v10;
    return;
  }
  if ((uint64_t)a3 > 8)
  {
    int v54 = (id *)(a1 + 40 * (a3 >> 1));
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v54, a3 >> 1, a4, a3 >> 1);
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(&v7[5 * (a3 >> 1)], a2, a3 - (a3 >> 1), &v4[40 * (a3 >> 1)], a3 - (a3 >> 1));
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    id v57 = &v7[5 * (a3 >> 1)];
    unint64_t v96 = v57;
    while (1)
    {
      if (v57 == a2)
      {
        if (v7 != v54)
        {
          uint64_t v80 = 0;
          unint64_t v81 = &v4[v56];
          do
          {
            int v82 = &v7[v80];
            id v83 = v7[v80];
            *int v82 = 0;
            *(void *)&v81[v80 * 8] = v83;
            uint64_t v84 = &v4[v80 * 8 + v56];
            *((_DWORD *)v84 + 2) = v7[v80 + 1];
            *((_OWORD *)v84 + 1) = *(_OWORD *)&v7[v80 + 2];
            *(void *)&v81[v80 * 8 + 32] = v7[v80 + 4];
            v80 += 5;
          }
          while (v82 + 5 != v54);
        }
        return;
      }
      id v58 = *v57;
      id v59 = v57[2];
      unsigned int v60 = *((_DWORD *)v57 + 2);
      id v61 = *v7;
      id v62 = v7[2];
      if (v59 == v62)
      {
        unsigned int v63 = *((_DWORD *)v7 + 2);
        if (v60 >= v63)
        {
          if (v60 != v63)
          {

LABEL_52:
            id v68 = *v7;
            *uint64_t v7 = 0;
            unint64_t v69 = &a4[v56];
            *(void *)unint64_t v69 = v68;
            *((_DWORD *)v69 + 2) = *((_DWORD *)v7 + 2);
            BOOL v4 = a4;
            *((_OWORD *)v69 + 1) = *((_OWORD *)v7 + 1);
            *((void *)v69 + 4) = v7[4];
            v7 += 5;
            goto LABEL_53;
          }
          uint64_t v66 = v61;
          uint64_t v67 = [v58 TTCompare:v61];

          if (v67 != -1) {
            goto LABEL_52;
          }
        }
        else
        {
        }
      }
      else
      {

        if (v59 >= v62) {
          goto LABEL_52;
        }
      }
      id v64 = *v57;
      id *v57 = 0;
      BOOL v4 = a4;
      id v65 = &a4[v56];
      *(void *)id v65 = v64;
      *((_DWORD *)v65 + 2) = *((_DWORD *)v57 + 2);
      *((_OWORD *)v65 + 1) = *((_OWORD *)v57 + 1);
      *((void *)v65 + 4) = v57[4];
      v57 += 5;
LABEL_53:
      int v54 = v96;
      v56 += 40;
      --v55;
      if (v7 == v96)
      {
        if (v57 != a2)
        {
          uint64_t v70 = 0;
          int v71 = &v4[v56];
          do
          {
            uint64_t v72 = &v57[v70];
            id v73 = v57[v70];
            *uint64_t v72 = 0;
            *(void *)&v71[v70 * 8] = v73;
            uint64_t v74 = &v4[v70 * 8 + v56];
            *((_DWORD *)v74 + 2) = v57[v70 + 1];
            *((_OWORD *)v74 + 1) = *(_OWORD *)&v57[v70 + 2];
            *(void *)&v71[v70 * 8 + 32] = v57[v70 + 4];
            v70 += 5;
          }
          while (v72 + 5 != a2);
        }
        return;
      }
    }
  }
  if ((id *)a1 == a2) {
    return;
  }
  id v22 = *(id *)a1;
  *(void *)a1 = 0;
  *(void *)a4 = v22;
  *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
  *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)a4 + 4) = *(void *)(a1 + 32);
  uint64_t v23 = (id *)(a1 + 40);
  if ((id *)(a1 + 40) == a2) {
    return;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 1;
  id v26 = a4;
  do
  {
    v95 = v23;
    id v27 = *v23;
    id v28 = v7[7];
    int v91 = v7 + 7;
    unsigned int v29 = *((_DWORD *)v7 + 12);
    id v30 = *(id *)v26;
    unsigned int v31 = v30;
    id v32 = (id)*((void *)v26 + 2);
    id v92 = v26 + 16;
    if (v28 == v32)
    {
      unsigned int v33 = *((_DWORD *)v26 + 2);
      if (v29 >= v33)
      {
        if (v29 != v33)
        {

LABEL_34:
          uint64_t v36 = v95;
          id v51 = *v95;
          id *v95 = 0;
          *((void *)v26 + 5) = v51;
          *((_DWORD *)v26 + 12) = *((_DWORD *)v7 + 12);
          *(_OWORD *)(v26 + 56) = *v91;
          *((void *)v26 + 9) = v7[9];
          ++v25;
          goto LABEL_38;
        }
        uint64_t v50 = [v27 TTCompare:v30];

        if (v50 != -1) {
          goto LABEL_34;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v28 >= v32) {
        goto LABEL_34;
      }
    }
    id v34 = *(id *)v26;
    *(void *)id v26 = 0;
    *((void *)v26 + 5) = v34;
    *((_DWORD *)v26 + 12) = *((_DWORD *)v26 + 2);
    *(_OWORD *)(v26 + 56) = *v92;
    *((void *)v26 + 9) = *((void *)v26 + 4);
    ++v25;
    id v35 = v4;
    uint64_t v36 = v95;
    if (v26 == v4) {
      goto LABEL_37;
    }
    uint64_t v89 = v24;
    uint64_t v90 = v25;
    while (1)
    {
      uint64_t v37 = &v4[v24];
      id v38 = *v36;
      unsigned int v39 = *((_DWORD *)v7 + 12);
      id v40 = v7[7];
      id v41 = *(id *)&v4[v24 - 40];
      int v42 = v41;
      unint64_t v44 = (id *)&v4[v24 - 24];
      unint64_t v43 = (unint64_t)*v44;
      if (v40 != *v44)
      {

        BOOL v20 = (unint64_t)v40 >= v43;
        BOOL v4 = a4;
        if (v20) {
          goto LABEL_35;
        }
        goto LABEL_29;
      }
      unsigned int v45 = *((_DWORD *)v37 - 8);
      if (v39 < v45)
      {

        BOOL v4 = a4;
        goto LABEL_29;
      }
      BOOL v4 = a4;
      if (v39 != v45)
      {

LABEL_35:
        id v35 = &v4[v24];
        goto LABEL_36;
      }
      uint64_t v46 = [v38 TTCompare:v41];

      if (v46 != -1) {
        break;
      }
LABEL_29:
      v26 -= 40;
      uint64_t v47 = *((void *)v37 - 5);
      *((void *)v37 - 5) = 0;
      uint64_t v48 = &v4[v24];
      unint64_t v49 = *(void **)&v4[v24];
      *(void *)&v4[v24] = v47;

      *((_DWORD *)v48 + 2) = *((_DWORD *)v37 - 8);
      *((_OWORD *)v48 + 1) = *(_OWORD *)v44;
      *((void *)v48 + 4) = *((void *)v37 - 1);
      v24 -= 40;
      uint64_t v36 = v95;
      if (!v24)
      {
        id v35 = v4;
        uint64_t v24 = v89;
        uint64_t v25 = v90;
        goto LABEL_37;
      }
    }
    id v35 = v26;
LABEL_36:
    uint64_t v24 = v89;
    uint64_t v25 = v90;
    uint64_t v36 = v95;
LABEL_37:
    id v52 = *v36;
    *uint64_t v36 = 0;
    uint64_t v53 = *(void **)v35;
    *(void *)id v35 = v52;

    *((_DWORD *)v35 + 2) = *((_DWORD *)v7 + 12);
    *((_OWORD *)v35 + 1) = *v91;
    *((void *)v35 + 4) = v7[9];
LABEL_38:
    id v26 = (char *)v92 + 24;
    uint64_t v23 = v36 + 5;
    v24 += 40;
    uint64_t v7 = v36;
  }
  while (v36 + 5 != a2);
}

void sub_1C3ADD450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6, uint64_t a7)
{
  uint64_t v101 = a5;
  if (!a5) {
    return;
  }
  while (1)
  {
    uint64_t v111 = a1;
    if (v101 <= a7 || a4 <= a7) {
      break;
    }
    if (!a4) {
      return;
    }
    uint64_t v9 = 0;
    uint64_t v10 = -a4;
    while (1)
    {
      uint64_t v11 = a1 + v9;
      uint64_t v12 = a2;
      id v13 = *(id *)a2;
      unsigned int v14 = *(_DWORD *)(a2 + 8);
      unint64_t v15 = *(void *)(a2 + 16);
      id v16 = *(id *)v11;
      int v17 = v16;
      unint64_t v18 = *(void *)(v11 + 16);
      if (v15 == v18) {
        break;
      }

      BOOL v19 = v15 >= v18;
      a1 = v111;
      if (!v19) {
        goto LABEL_17;
      }
LABEL_13:
      v9 += 40;
      BOOL v19 = __CFADD__(v10++, 1);
      if (v19) {
        return;
      }
    }
    unsigned int v20 = *(_DWORD *)(v11 + 8);
    if (v14 >= v20)
    {
      a1 = v111;
      if (v14 == v20)
      {
        uint64_t v21 = [v13 TTCompare:v16];

        if (v21 == -1) {
          goto LABEL_17;
        }
      }
      else
      {
      }
      goto LABEL_13;
    }

    a1 = v111;
LABEL_17:
    uint64_t v22 = -v10;
    uint64_t v97 = a1 + v9;
    if (-v10 >= v101)
    {
      if (v10 == -1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)(a1 + v9), a2);
        return;
      }
      if (v10 > 0) {
        uint64_t v22 = 1 - v10;
      }
      uint64_t v96 = v22 >> 1;
      v105 = (id *)(a1 + 40 * (v22 >> 1) + v9);
      uint64_t v25 = a2;
      if (a2 == a3)
      {
LABEL_39:
        a1 = v111;
        uint64_t v12 = a2;
        uint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - a2) >> 3);
        unint64_t v38 = v96;
        id v26 = (__n128 *)(v111 + 40 * v96 + v9);
        goto LABEL_40;
      }
      uint64_t v25 = a2;
      unint64_t v44 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3);
      uint64_t v103 = v111 + 40 * v96 + v9;
      while (2)
      {
        unint64_t v45 = v44 >> 1;
        uint64_t v108 = v25;
        unint64_t v46 = v25 + 40 * (v44 >> 1);
        id v47 = *(id *)v46;
        unsigned int v48 = *(_DWORD *)(v46 + 8);
        unint64_t v49 = *(void *)(v46 + 16);
        id v50 = *v105;
        id v51 = v50;
        unint64_t v52 = *(void *)(v103 + 16);
        if (v49 == v52)
        {
          unsigned int v53 = *(_DWORD *)(v103 + 8);
          if (v48 < v53)
          {

            goto LABEL_55;
          }
          if (v48 == v53)
          {
            uint64_t v25 = v108;
            uint64_t v54 = [v47 TTCompare:v50];

            if (v54 == -1)
            {
LABEL_55:
              uint64_t v25 = v46 + 40;
              unint64_t v45 = v44 + ~v45;
            }
          }
          else
          {

            uint64_t v25 = v108;
          }
        }
        else
        {

          BOOL v19 = v49 >= v52;
          uint64_t v25 = v108;
          if (!v19) {
            goto LABEL_55;
          }
        }
        unint64_t v44 = v45;
        if (!v45) {
          goto LABEL_39;
        }
        continue;
      }
    }
    if (v101 >= 0) {
      uint64_t v23 = v101;
    }
    else {
      uint64_t v23 = v101 + 1;
    }
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = a2 + 40 * (v23 >> 1);
    id v26 = (__n128 *)(a1 + v9);
    v105 = (id *)(a1 + v9);
    if (a2 - a1 != v9)
    {
      uint64_t v102 = v23 >> 1;
      v105 = (id *)(a1 + v9);
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1 - v9) >> 3);
      uint64_t v107 = a2 + 40 * (v23 >> 1);
      while (1)
      {
        unint64_t v28 = v27 >> 1;
        unsigned int v29 = &v105[5 * (v27 >> 1)];
        id v30 = *(id *)v25;
        unsigned int v31 = *(_DWORD *)(v25 + 8);
        id v32 = *(id *)(v25 + 16);
        id v33 = *v29;
        id v34 = v33;
        id v35 = v29[2];
        if (v32 != v35) {
          break;
        }
        unsigned int v36 = *((_DWORD *)v29 + 2);
        if (v31 >= v36)
        {
          uint64_t v25 = v107;
          if (v31 != v36)
          {

LABEL_31:
            v105 = v29 + 5;
            unint64_t v28 = v27 + ~v28;
            goto LABEL_32;
          }
          uint64_t v37 = [v30 TTCompare:v33];

          if (v37 != -1) {
            goto LABEL_31;
          }
        }
        else
        {

          uint64_t v25 = v107;
        }
LABEL_32:
        unint64_t v27 = v28;
        if (!v28)
        {
          uint64_t v24 = v102;
          id v26 = (__n128 *)v105;
          a1 = v111;
          uint64_t v12 = a2;
          goto LABEL_34;
        }
      }

      BOOL v19 = v32 >= v35;
      uint64_t v25 = v107;
      if (!v19) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
LABEL_34:
    unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v26 - a1 - v9) >> 3);
LABEL_40:
    uint64_t v39 = v25;
    if (v105 != (id *)v12)
    {
      uint64_t v39 = (uint64_t)v26;
      if (v25 != v12)
      {
        unint64_t v40 = v38;
        id v41 = std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v26, v12, v25);
        unint64_t v38 = v40;
        uint64_t v39 = (uint64_t)v41;
      }
    }
    a4 = -(uint64_t)(v38 + v10);
    uint64_t v42 = v101 - v24;
    if ((uint64_t)(v38 + v24) >= (uint64_t)(v101 - (v38 + v24) - v10))
    {
      unint64_t v43 = v38;
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v39, v25, a3, -(uint64_t)(v38 + v10), v101 - v24, a6, a7);
      uint64_t v25 = (uint64_t)v26;
      uint64_t v42 = v24;
      a4 = v43;
      a3 = v39;
      a1 = v97;
    }
    else
    {
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1 + v9, v26, v39, v38, v24, a6, a7);
      a1 = v39;
    }
    uint64_t v101 = v42;
    a2 = v25;
    if (!v42) {
      return;
    }
  }
  if (a4 <= v101)
  {
    if (a1 == a2) {
      return;
    }
    unint64_t v78 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = (uint64_t)a6;
    do
    {
      long long v79 = &a6[v78 / 8];
      uint64_t v80 = (void *)(a1 + v78);
      unint64_t v81 = *(void **)(a1 + v78);
      void *v80 = 0;
      void *v79 = v81;
      *((_DWORD *)v79 + 2) = *(_DWORD *)(a1 + v78 + 8);
      *((_OWORD *)v79 + 1) = *(_OWORD *)(a1 + v78 + 16);
      v79[4] = *(void **)(a1 + v78 + 32);
      ++v56;
      v78 += 40;
    }
    while (v80 + 5 != (void *)a2);
    if (!v78) {
      goto LABEL_104;
    }
    int v110 = (uint64_t *)&a6[v78 / 8];
    int v82 = a6;
    while (1)
    {
      if (a2 == a3)
      {
        std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>((uint64_t)v113, (uint64_t *)v82, v110, a1);
        goto LABEL_104;
      }
      id v83 = *(id *)a2;
      uint64_t v84 = *(void **)(a2 + 16);
      unsigned int v85 = *(_DWORD *)(a2 + 8);
      id v86 = *v82;
      id v87 = v86;
      uint64_t v88 = v82[2];
      if (v84 == v88)
      {
        unsigned int v89 = *((_DWORD *)v82 + 2);
        if (v85 >= v89)
        {
          if (v85 != v89)
          {

LABEL_96:
            uint64_t v93 = (uint64_t)*v82;
            *int v82 = 0;
            id v94 = *(void **)a1;
            *(void *)a1 = v93;

            *(_DWORD *)(a1 + 8) = *((_DWORD *)v82 + 2);
            *(_OWORD *)(a1 + 16) = *((_OWORD *)v82 + 1);
            *(void *)(a1 + 32) = v82[4];
            v82 += 5;
            goto LABEL_97;
          }
          uint64_t v92 = [v83 TTCompare:v86];

          if (v92 != -1) {
            goto LABEL_96;
          }
        }
        else
        {
        }
      }
      else
      {

        if (v84 >= v88) {
          goto LABEL_96;
        }
      }
      id v90 = *(id *)a2;
      *(void *)a2 = 0;
      int v91 = *(void **)a1;
      *(void *)a1 = v90;

      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      a2 += 40;
LABEL_97:
      uint64_t v57 = (uint64_t)a6;
      a1 += 40;
      if (v110 == (uint64_t *)v82) {
        goto LABEL_104;
      }
    }
  }
  if (a3 == a2) {
    return;
  }
  unint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v58 = a3;
  uint64_t v57 = (uint64_t)a6;
  do
  {
    id v59 = &a6[v55 / 8];
    unsigned int v60 = (void *)(a2 + v55);
    id v61 = *(void **)(a2 + v55);
    void *v60 = 0;
    char *v59 = v61;
    *((_DWORD *)v59 + 2) = *(_DWORD *)(a2 + v55 + 8);
    *((_OWORD *)v59 + 1) = *(_OWORD *)(a2 + v55 + 16);
    v59[4] = *(void **)(a2 + v55 + 32);
    ++v56;
    v55 += 40;
  }
  while (v60 + 5 != (void *)a3);
  if (!v55) {
    goto LABEL_104;
  }
  uint64_t v62 = (uint64_t)&a6[v55 / 8];
  uint64_t v63 = a3 - 40;
  uint64_t v104 = (uint64_t)&a6[v55 / 8];
  while (a2 != a1)
  {
    uint64_t v106 = v62 - 40;
    id v64 = *(id *)(v62 - 40);
    uint64_t v109 = v62;
    unint64_t v67 = *(void *)(v62 - 24);
    uint64_t v66 = (_OWORD *)(v62 - 24);
    unint64_t v65 = v67;
    unsigned int v68 = *((_DWORD *)v66 - 2);
    id v69 = *(id *)(a2 - 40);
    uint64_t v70 = (_OWORD *)(a2 - 24);
    unint64_t v71 = *(void *)(a2 - 24);
    if (v67 == v71)
    {
      unsigned int v73 = *(_DWORD *)(a2 - 32);
      if (v68 < v73)
      {

        uint64_t v72 = a2;
        a2 -= 40;
        uint64_t v57 = (uint64_t)a6;
        goto LABEL_74;
      }
      if (v68 != v73)
      {

        uint64_t v57 = (uint64_t)a6;
LABEL_78:
        uint64_t v70 = v66;
        uint64_t v62 = v106;
        uint64_t v72 = v109;
        goto LABEL_79;
      }
      uint64_t v74 = v69;
      uint64_t v75 = [v64 TTCompare:v69];

      uint64_t v57 = (uint64_t)a6;
      if (v75 != -1) {
        goto LABEL_78;
      }
    }
    else
    {

      BOOL v19 = v65 >= v71;
      uint64_t v57 = (uint64_t)a6;
      if (v19) {
        goto LABEL_78;
      }
    }
    uint64_t v72 = a2;
    a2 -= 40;
LABEL_74:
    uint64_t v62 = v109;
LABEL_79:
    uint64_t v76 = *(void *)(v72 - 40);
    *(void *)(v72 - 40) = 0;
    uint64_t v77 = *(void **)v63;
    *(void *)uint64_t v63 = v76;

    *(_DWORD *)(v63 + 8) = *(_DWORD *)(v72 - 32);
    *(_OWORD *)(v63 + 16) = *v70;
    *(void *)(v63 + 32) = *(void *)(v72 - 8);
    v58 -= 40;
    v63 -= 40;
    a1 = v111;
    if (v62 == v57) {
      goto LABEL_104;
    }
  }
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(v104, v62, v57, a3, v58, v113);
LABEL_104:
  if (v57)
  {
    do
    {
      v95 = *a6;
      a6 += 5;

      --v56;
    }
    while (v56);
  }
}

void sub_1C3ADDD04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  if (a13)
  {
    unint64_t v15 = a13;
    do
    {
      id v16 = *v15;
      v15 += 5;

      --v13;
    }
    while (v13);
  }
  _Unwind_Resume(exception_object);
}

__n128 std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](__n128 *a1, uint64_t a2)
{
  unint64_t v4 = a1->n128_u64[0];
  a1->n128_u64[0] = 0;
  unsigned __int32 v5 = a1->n128_u32[2];
  __n128 v11 = a1[1];
  uint64_t v6 = *(void **)a2;
  *(void *)a2 = 0;
  uint64_t v7 = (void *)a1->n128_u64[0];
  a1->n128_u64[0] = (unint64_t)v6;

  a1->n128_u32[2] = *(_DWORD *)(a2 + 8);
  a1[1] = *(__n128 *)(a2 + 16);
  id v8 = *(void **)a2;
  *(void *)a2 = v4;

  *(_DWORD *)(a2 + 8) = v5;
  __n128 result = v11;
  *(__n128 *)(a2 + 16) = v11;
  unint64_t v10 = a1[2].n128_u64[0];
  a1[2].n128_u64[0] = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = v10;
  return result;
}

uint64_t *std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  unsigned __int32 v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v7 = *v5;
    *unsigned __int32 v5 = 0;
    id v8 = *(void **)a4;
    *(void *)a4 = v7;

    *(_DWORD *)(a4 + 8) = *((_DWORD *)v5 + 2);
    *(_OWORD *)(a4 + 16) = *((_OWORD *)v5 + 1);
    *(void *)(a4 + 32) = v5[4];
    a4 += 40;
    v5 += 5;
  }
  while (v5 != v6);
  return v6;
}

void std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v6 = a5;
  uint64_t v8 = a2;
  if (a2 != a3)
  {
    uint64_t v12 = a5 - 40;
    do
    {
      uint64_t v13 = *(void *)(v8 - 40);
      v8 -= 40;
      *(void *)uint64_t v8 = 0;
      unsigned int v14 = *(void **)v12;
      *(void *)uint64_t v12 = v13;

      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v8 + 8);
      *(_OWORD *)(v12 + 16) = *(_OWORD *)(v8 + 16);
      *(void *)(v12 + 32) = *(void *)(v8 + 32);
      v6 -= 40;
      v12 -= 40;
    }
    while (v8 != a3);
    uint64_t v8 = a3;
  }
  *a6 = a1;
  a6[1] = v8;
  a6[2] = a4;
  a6[3] = v6;
}

__n128 *std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(__n128 *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (__n128 *)a2;
  std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](a1, a2);
  uint64_t v6 = (__n128 *)((char *)a1 + 40);
  for (uint64_t i = (uint64_t)&v4[2].n128_i64[1]; i != a3; i += 40)
  {
    if (v6 == v4) {
      unint64_t v4 = (__n128 *)i;
    }
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v6, i);
    uint64_t v6 = (__n128 *)((char *)v6 + 40);
  }
  if (v6 != v4)
  {
    uint64_t v8 = v6;
    uint64_t v9 = (uint64_t)v4;
    do
    {
      while (1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v8, v9);
        uint64_t v8 = (__n128 *)((char *)v8 + 40);
        v9 += 40;
        if (v9 == a3) {
          break;
        }
        if (v8 == v4) {
          unint64_t v4 = (__n128 *)v9;
        }
      }
      uint64_t v9 = (uint64_t)v4;
    }
    while (v8 != v4);
  }
  return v6;
}

void std::__split_buffer<TopoSubstring **>::push_front(uint64_t a1, void *a2)
{
  unint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      unsigned int v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v6, v12);
      unsigned __int32 v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      id v16 = *(uint64_t **)(a1 + 8);
      int v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        int v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        unsigned int v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)unsigned int v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      uint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        unsigned __int32 v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      unsigned __int32 v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        unint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    unsigned __int32 v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

{
  char *v4;
  char *v5;
  unsigned char *v6;
  unsigned char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  unint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = (v7 - v4) >> 2;
      }
      unint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(*(void *)(a1 + 32), v11);
      unsigned __int32 v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      id v16 = v5;
      int v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        id v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          unsigned int v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        unsigned __int32 v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      unsigned __int32 v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        unint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    unsigned __int32 v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

uint64_t std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  void v14[3] = &v10[24 * v9];
  *(void *)uint64_t v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((_DWORD *)v11 + 4) = *(_DWORD *)(a2 + 16);
  std::string v14[2] = v11 + 24;
  std::vector<TopoIDRange>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1C3ADE458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<TopoIDRange>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 24);
    v2 -= 24;
    *(void *)uint64_t v2 = 0;
    *(void *)(v4 - --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
    v4 -= 24;
    *(_DWORD *)(v4 + 8) = *(_DWORD *)(v2 + 8);
    *(_DWORD *)(v4 + 16) = *(_DWORD *)(v2 + 16);
  }
  a2[1] = v4;
  uint64_t v6 = *result;
  void *result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__split_buffer<TopoIDRange>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)__n128 result = v2;
  *(void *)(result + 8) = a2[1];
  a2[1] = 0;
  uint64_t v5 = a2[2];
  uint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 16;
    void *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(void *)(a2 + 32) = i)
  {

    uint64_t i = (id *)(*(void *)(a2 + 32) + 32);
  }
}

long long *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(long long *result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *a3;
  if (*(void *)result >= *a2)
  {
    if (v3 < v4)
    {
      long long v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*(void *)result < *a2)
      {
        long long v7 = *result;
        void *result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v3 >= v4)
    {
      long long v8 = *result;
      void *result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a2 >= *a3) {
        return result;
      }
      long long v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      long long v5 = *result;
      void *result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v6 = a2 - 1;
      if (*(void *)a1 < *((void *)a2 - 2))
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *long long v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((long long *)a1, (unint64_t *)(a1 + 16), (unint64_t *)a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,[(ICTTMergeableString *)(long long *)a1 deleteSubstrings:(unint64_t *)(a1 + 32) withCharacterRanges:a2 - 1];
      return 1;
    case 5:
      uint64_t v17 = (long long *)(a1 + 16);
      uint64_t v18 = (long long *)(a1 + 32);
      uint64_t v19 = (long long *)(a1 + 48);
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,[(ICTTMergeableString *)(long long *)a1 deleteSubstrings:(unint64_t *)(a1 + 32) withCharacterRanges:(_OWORD *)(a1 + 48)];
      unint64_t v21 = *((void *)a2 - 2);
      unsigned int v20 = a2 - 1;
      if (*(void *)(a1 + 48) < v21)
      {
        long long v22 = *v19;
        *uint64_t v19 = *v20;
        *unsigned int v20 = v22;
        if (*(void *)v18 < *(void *)v19)
        {
          long long v23 = *v18;
          *uint64_t v18 = *v19;
          *uint64_t v19 = v23;
          if (*(void *)v17 < *(void *)v18)
          {
            long long v24 = *v17;
            long long *v17 = *v18;
            *uint64_t v18 = v24;
            if (*(void *)a1 < *(void *)(a1 + 16))
            {
              long long v25 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              long long *v17 = v25;
            }
          }
        }
      }
      return 1;
    default:
      long long v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((long long *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32));
      uint64_t v9 = (_OWORD *)(a1 + 48);
      if ((_OWORD *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    long long v12 = *v9;
    unint64_t v13 = *(void *)v9;
    if (*v8 < *(void *)v9)
    {
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        unint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v15 >= v13)
        {
          uint64_t v16 = (_OWORD *)(a1 + v14 + 48);
          goto LABEL_13;
        }
      }
      uint64_t v16 = (_OWORD *)a1;
LABEL_13:
      *uint64_t v16 = v12;
      if (++v11 == 8) {
        return v9 + 1 == a2;
      }
    }
    long long v8 = v9;
    v10 += 16;
    if (++v9 == a2) {
      return 1;
    }
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(long long *a1, unint64_t *a2, unint64_t *a3, _OWORD *a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[ICTTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(a1, a2, a3);
  if (*a3 < *(void *)a4)
  {
    __n128 result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a2 < *a3)
    {
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*(void *)a1 < *a2)
      {
        __n128 result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

char *std::vector<TopoSubstring *>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  long long v5 = *(char **)(a2 + 8);
  long long v6 = (char *)*a1;
  long long v7 = v5;
  if (*a1 != __src)
  {
    long long v8 = __src;
    long long v7 = *(char **)(a2 + 8);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    long long v7 = *(char **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  unint64_t v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  uint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  unint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = (void *)*((void *)v4 - 3);
        v4 -= 24;
      }
      while (v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  std::string __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  long long v6 = *(void **)(*result + 8 * v4);
  do
  {
    long long v7 = v6;
    long long v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *long long v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID>(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v7 = *((unsigned int *)a2 + 2);
  uint64_t v8 = [(id)*a2 hash];
  unint64_t v9 = v8 ^ v7;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8 ^ v7;
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x20uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v9;
  uint64_t v17 = *a3;
  *a3 = 0;
  *((void *)i + 2) = v17;
  *((_DWORD *)i + 6) = *((_DWORD *)a3 + 2);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v23);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v24 = *(void *)a1;
  long long v25 = *(void **)(*(void *)a1 + 8 * v3);
  if (v25)
  {
    *(void *)uint64_t i = *v25;
LABEL_39:
    *long long v25 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v16;
  *uint64_t v16 = i;
  *(void *)(v24 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v26 = *(void *)(*(void *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10) {
        v26 %= v10;
      }
    }
    else
    {
      v26 &= v10 - 1;
    }
    long long v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3ADF6C4(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID const&>(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *((unsigned int *)a2 + 2);
  uint64_t v8 = [(id)*a2 hash];
  unint64_t v9 = v8 ^ v7;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8 ^ v7;
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x20uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v9;
  *((void *)i + 2) = *(id *)a3;
  *((_DWORD *)i + 6) = *(_DWORD *)(a3 + 8);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_39:
    *uint64_t v24 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v16;
  *uint64_t v16 = i;
  *(void *)(v23 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3ADF99C(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__erase_unique<TopoID>(void *a1, void *a2)
{
  __n128 result = std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  unint64_t v3 = (id *)__p;
  std::string __p = 0;
  if (v3)
  {
    if (v6) {

    }
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID&&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  float v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x28uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  float v18 = *a4;
  uint64_t v19 = **a4;
  *float v18 = 0;
  *((void *)i + 2) = v19;
  *((_DWORD *)i + 6) = *((_DWORD *)v18 + 2);
  *((void *)i + 4) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  unint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_39:
    *unint64_t v27 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    unint64_t v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3ADFCB4(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__erase_unique<TopoSubstring *>(void *a1, void *a2)
{
  __n128 result = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

void std::vector<TopoSubstring *>::__append(void **a1, unint64_t a2)
{
  char v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint8x8_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      unint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoSubstring *>>(v4, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    unint64_t v16 = &v14[8 * a2];
    float v18 = (char *)*a1;
    float v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      float v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void *std::__hash_table<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  float v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  *((void *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((void *)i + 4) = 0;
  *((void *)i + 5) = 0;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v25 = *(void *)a1;
  uint64_t v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)uint64_t i = *v26;
LABEL_39:
    void *v26 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v25 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v27 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11) {
        v27 %= v11;
      }
    }
    else
    {
      v27 &= v11 - 1;
    }
    uint64_t v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1C3AE0088(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void sub_1C3AE0DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ICNoteHTMLFromPlainText(void *a1, const char *a2)
{
  return [a1 stringByReplacingOccurrencesOfString:@"\n" withString:@"<br>"];
}

id ICNoteTitleFromPlainText(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28B88] newlineCharacterSet];
  unint64_t v3 = [v1 componentsSeparatedByCharactersInSet:v2];

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v3;
  id v5 = (id)[v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v4);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        if (objc_msgSend(v8, "length", (void)v13))
        {
          id v5 = v8;
          goto LABEL_11;
        }
      }
      id v5 = (id)[v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  unint64_t v9 = [v5 length];
  if (v9 >= *MEMORY[0x1E4F82D48]) {
    unint64_t v10 = *MEMORY[0x1E4F82D48];
  }
  else {
    unint64_t v10 = v9;
  }
  unint64_t v11 = objc_msgSend(v5, "ic_substringToIndex:", v10, (void)v13);

  return v11;
}

void sub_1C3AE4820(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1C3AE4F60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AE505C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AE54DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AE9424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)ICDrawingCommandData;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1C3AE9500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9AC4(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3AE9B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AE9C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromICDateFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9) {
    return @"Today";
  }
  else {
    return off_1E64A57C8[a1 - 1];
  }
}

id ICLocalizedStringFromICDateFilterSelectionType(void *a1)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Today";
      goto LABEL_16;
    case 1uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Yesterday";
      goto LABEL_16;
    case 2uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Last 7 Days";
      goto LABEL_16;
    case 3uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Last 30 Days";
      goto LABEL_16;
    case 4uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Last 3 Months";
      goto LABEL_16;
    case 5uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Last 12 Months";
      goto LABEL_16;
    case 6uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Specified Range";
      goto LABEL_16;
    case 7uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Relative Range";
      goto LABEL_16;
    case 8uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"On a Date";
      goto LABEL_16;
    case 9uLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"Before a Date";
      goto LABEL_16;
    case 0xAuLL:
      unint64_t v3 = (void *)MEMORY[0x1E4F83770];
      id v4 = @"After a Date";
LABEL_16:
      a1 = objc_msgSend(v3, "localizedFrameworkStringForKey:value:table:allowSiri:", v4, v4, 0, 1, v1);
      break;
    default:
      break;
  }
  return a1;
}

__CFString *NSStringFromICDateFilterRelativeRangeSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"Unknown";
  }
  else {
    return off_1E64A57A0[a1 - 1];
  }
}

__CFString *NSStringFromICInclusionFilterInclusionType(uint64_t a1)
{
  if (a1) {
    return @"Excluded";
  }
  else {
    return @"Included";
  }
}

void sub_1C3AECEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AEDCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AEEC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AEF0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AEF508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF0BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF2EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF4FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF51A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF52F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF5480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF5614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF58B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF5A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF5C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF6214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF6478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF6744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF69E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF6D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF7110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF7554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF78B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF7BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF7E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF8110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF84E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF8880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF8BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF9074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF9350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AF9654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF972C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF9798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF98E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF99A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF9AA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF9BF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF9D00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AF9EBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFA0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    long long v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    long long v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)long long v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    uint64_t v19 = a2[2];
    a2[2] = 0;
    *((void *)v16 + 2) = v19;
    *((_DWORD *)v16 + 6) = *((_DWORD *)a2 + 6);
    void v20[2] = v16 + 32;
    std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v9 = a2[2];
    a2[2] = 0;
    *(void *)(v7 + 16) = v9;
    *(_DWORD *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *((_DWORD *)a2 + 6);
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1C3AFA268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C3AFA690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFA774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFA82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1C3AFA954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFAAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3AFAB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3AFAC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Selection_Range>::New()
{
}

void sub_1C3AFACD4(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void sub_1C3AFAEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFAFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFB074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFB2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFB404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFB4F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFB79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFBA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFBB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    long long v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    long long v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)long long v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    uint64_t v19 = a2[3];
    a2[3] = 0;
    *((void *)v16 + 3) = v19;
    void v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v9 = a2[3];
    a2[3] = 0;
    *(void *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1C3AFBCCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C3AFBD68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFBE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFBEE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFBFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFC0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFC1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFC2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  std::string v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      uint64_t v9 = *(void *)(a3 - 32);
      a3 -= 32;
      *(void *)a3 = 0;
      *(void *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *(void *)(v8 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v8;
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(void *)(a2 + 32) = i)
  {

    uint64_t i = (id *)(*(void *)(a2 + 32) + 32);
  }
}

uint64_t std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
  }
}

__CFString *NSStringFromICChecklistsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Any";
  }
  else {
    return off_1E64A5BF0[a1 - 1];
  }
}

void setPropertyIMP(void *a1, uint64_t a2, void *a3)
{
  id v11 = a1;
  id v5 = a3;
  uint64_t v6 = +[ICCRObject keyFromSelector:a2];
  uint64_t v7 = [v11 fields];
  uint64_t v8 = [v7 objectForKey:v6];

  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    [v8 setContents:v5];
  }
  else
  {
    uint64_t v9 = +[ICCRConstant constant];
    int v10 = [v8 isEqual:v9];

    if (v10) {
      [v11 setFieldKey:v6 value:v5];
    }
    else {
      [MEMORY[0x1E4F836F8] handleFailedAssertWithCondition:"__objc_no", "void setPropertyIMP(__strong id, SEL, __strong id)", 1, 0, @"Cannot set non-register, non-constant CRDT property" functionName simulateCrash showAlert format];
    }
  }
}

id propertyIMP(void *a1, const char *a2)
{
  uint64_t v3 = [a1 fields];
  uint64_t v4 = NSStringFromSelector(a2);
  id v5 = [v3 objectForKey:v4];

  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    id v6 = [v5 contents];
  }
  else
  {
    id v6 = v5;
  }
  uint64_t v7 = v6;

  return v7;
}

void sub_1C3AFDB14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AFDBA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AFDC58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3AFDE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3AFE4E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFE69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  *(void *)(v17 - 56) = &a15;
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)(v17 - 56));

  _Unwind_Resume(a1);
}

void sub_1C3AFE7B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFE8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFEA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFEAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFEC34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 32)
  {

    id v5 = *(void **)(i - 32);
  }
  *(void *)(a1 + 8) = a2;
}

void std::vector<TopoIDRange>::__assign_with_size[abi:ne180100]<TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(id **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    std::vector<TopoIDRange>::__vdeallocate((void **)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<TopoIDRange>::__vallocate[abi:ne180100]((void *)a1, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v18, a2, v13, v9);
    uint64_t v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v19, a2, a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      uint64_t v17 = *(void **)(v16 - 24);
      v16 -= 24;
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
}

void sub_1C3AFEE88(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1C3AFEE90(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<TopoIDRange>::__vdeallocate(void **a1)
{
  uint64_t v1 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        id v5 = (void *)*((void *)v3 - 3);
        v3 -= 24;
      }
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<TopoIDRange>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)a4 = *(id *)v6;
      *(_DWORD *)(a4 + 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(a4 + 16) = *(_DWORD *)(v6 + 16);
      a4 += 24;
      v6 += 24;
    }
    while (v6 != a3);
  }
  return a4;
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>(int a1, uint64_t a2, uint64_t a3, id *location)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    objc_storeStrong(location, *(id *)v5);
    *((_DWORD *)location + 2) = *(_DWORD *)(v5 + 8);
    *((_DWORD *)location + 4) = *(_DWORD *)(v5 + 16);
    location += 3;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

void sub_1C3AFF088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF1D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF2B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF32C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF3AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF4D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFF864(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3AFF900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFFA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFFBF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3AFFD6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B0013C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3B003A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B00504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B00588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B00608(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3B00694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B0081C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B00A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Index_Element>::New()
{
}

void sub_1C3B00AC4(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C405ACC521ELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  uint64_t v3 = a1 + 1;
  uint64_t v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    uint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    uint64_t v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  char __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

void google::protobuf::internal::LogFinisher::operator=(uint64_t a1, google::protobuf::internal::LogMessage *a2)
{
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::DefaultLogHandler(int a1, const char *a2, int a3, uint64_t a4)
{
  uint64_t v4 = (FILE **)MEMORY[0x1E4F143C8];
  if (*(char *)(a4 + 23) >= 0) {
    uint64_t v5 = (const char *)a4;
  }
  else {
    uint64_t v5 = *(const char **)a4;
  }
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[a1], a2, a3, v5);
  uint64_t v6 = *v4;
  return fflush(v6);
}

uint64_t google::protobuf::internal::DeleteLogSilencerCount(google::protobuf::internal *this)
{
  uint64_t result = google::protobuf::internal::log_silencer_count_mutex_;
  if (google::protobuf::internal::log_silencer_count_mutex_)
  {
    google::protobuf::internal::Mutex::~Mutex((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    uint64_t result = MEMORY[0x1C877D640]();
  }
  google::protobuf::internal::log_silencer_count_mutex_ = 0;
  return result;
}

void google::protobuf::internal::InitLogSilencerCount(google::protobuf::internal *this)
{
}

void sub_1C3B01328(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

atomic_ullong *google::protobuf::internal::InitLogSilencerCountOnce(google::protobuf::internal *this)
{
  uint64_t v1 = google::protobuf::internal::log_silencer_count_init_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitLogSilencerCount;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::log_silencer_count_init_, (uint64_t)v3);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  if (*(_DWORD *)this == 3)
  {
    int v2 = 3;
  }
  else
  {
    google::protobuf::internal::InitLogSilencerCountOnce(this);
    uint64_t v3 = (pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_;
    google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    int v4 = google::protobuf::internal::log_silencer_count_;
    google::protobuf::internal::Mutex::Unlock(v3);
    if (v4 > 0) {
      goto LABEL_6;
    }
    int v2 = *(_DWORD *)this;
  }
  google::protobuf::internal::log_handler_(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
LABEL_6:
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, *((void *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
}

void sub_1C3B0150C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::FunctionClosure0::~FunctionClosure0(google::protobuf::internal::FunctionClosure0 *this)
{
}

void google::protobuf::internal::Mutex::~Mutex(pthread_mutex_t **this)
{
  if (*this) {
    MEMORY[0x1C877D640](*this, 0x1000C40FA0F61DDLL);
  }
}

uint64_t google::protobuf::ghtonl(google::protobuf *this)
{
  return bswap32(this);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F1F24E48;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  google::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x1C877D640);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_1F1F24E48;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1C3B016B4(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    uint64_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void sub_1C3B02074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B043AC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    id v10 = objc_begin_catch(a1);
    unint64_t v11 = os_log_create("com.apple.notes", "CoreData");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      [(ICAttachmentMapModel *)(uint64_t)v10 MKMapItem];
    }

    objc_end_catch();
    JUMPOUT(0x1C3B04358);
  }
  _Unwind_Resume(a1);
}

Class __getMKMapItemClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!MapKitLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __MapKitLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E64A5D20;
    uint64_t v6 = 0;
    MapKitLibraryCore_frameworkLibrary = _sl_dlopen();
    int v2 = (void *)v4[0];
    if (!MapKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MKMapItem");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    int v2 = (void *)__getMKMapItemClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getMKMapItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MapKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MapKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1C3B0552C(void *a1)
{
}

void sub_1C3B05548(_Unwind_Exception *a1)
{
}

void sub_1C3B0605C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B0724C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void sub_1C3B08AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void *__Block_byref_object_copy__84(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__85(uint64_t a1)
{
}

void sub_1C3B090E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0957C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B097E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B0A0D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0A7C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0A824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0A898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1C3B0A98C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0AD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0AFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0B094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0B184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0B794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0B93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0BAB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0BB68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B0BC00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_6_3(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_1C3B1153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  MEMORY[0x1C877D640](v11, 0x1093C4020A6E6BFLL);

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C3B11704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1C3B11BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);
  uint64_t v12 = *(void **)(v10 - 112);
  if (v12)
  {
    *(void *)(v10 - 104) = v12;
    operator delete(v12);
  }

  _Unwind_Resume(a1);
}

void sub_1C3B11D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Substring>::New()
{
}

void sub_1C3B11DFC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C403C0DBAE8);
  _Unwind_Resume(a1);
}

void *google::protobuf::MessageLite::InitializationErrorString@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

unsigned __int8 *google::protobuf::MessageLite::SerializeWithCachedSizesToArray(google::protobuf::MessageLite *this, unsigned __int8 *a2)
{
  int v4 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 96))(this);
  google::protobuf::io::ArrayOutputStream::ArrayOutputStream((uint64_t)v10, a2, v4, -1);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9, (google::protobuf::io::ZeroCopyOutputStream *)v10);
  (*(void (**)(google::protobuf::MessageLite *, unsigned char *))(*(void *)this + 80))(this, v9);
  if (v9[24])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 224);
    long long v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !coded_out.HadError(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)v10);
  return &a2[v4];
}

void sub_1C3B11F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  long long v5 = va_arg(va1, void *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va1);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)(v3 - 64));
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::InitializationErrorMessage(const std::string::value_type *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a3, "Can't ");
  std::string::append(a3, a1);
  std::string::append(a3, " message of type \"");
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16))(&__p, a2);
  if ((v12 & 0x80u) == 0) {
    p_p = (const std::string::value_type *)&__p;
  }
  else {
    p_p = (const std::string::value_type *)__p;
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v7 = v12;
  }
  else {
    std::string::size_type v7 = v11;
  }
  std::string::append(a3, p_p, v7);
  if ((char)v12 < 0) {
    operator delete(__p);
  }
  std::string::append(a3, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 48))(&__p, a2);
  if ((v12 & 0x80u) == 0) {
    uint64_t v8 = (const std::string::value_type *)&__p;
  }
  else {
    uint64_t v8 = (const std::string::value_type *)__p;
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v9 = v12;
  }
  else {
    std::string::size_type v9 = v11;
  }
  std::string::append(a3, v8, v9);
  if ((char)v12 < 0) {
    operator delete(__p);
  }
}

void sub_1C3B120AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ByteSizeConsistencyError(google::protobuf::_anonymous_namespace_ *this, int a2, int a3)
{
  int v4 = (int)this;
  if (this != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 63);
    long long v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ");
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Protocol message was modified concurrently during serialization.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (a3 != v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 65);
    std::string::size_type v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 69);
  std::string::size_type v9 = google::protobuf::internal::LogMessage::operator<<(v11, "This shouldn't be called if all the sizes are equal.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
}

void sub_1C3B121F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializeToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/message_lite.cc", 301);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: IsInitialized(): ");
    std::string::size_type v7 = google::protobuf::internal::LogMessage::operator<<(v6, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::MessageLite::SerializePartialToArray(this, a2, a3);
}

void sub_1C3B122FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializePartialToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  uint64_t v6 = (google::protobuf::_anonymous_namespace_ *)(*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 72))(this);
  if ((int)v6 <= a3)
  {
    uint64_t v7 = (*(uint64_t (**)(google::protobuf::MessageLite *, void *))(*(void *)this + 88))(this, a2)
       - (void)a2;
    if (v7 != (int)v6)
    {
      int v8 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 72))(this);
    }
  }
  return (int)v6 <= a3;
}

__CFString *ICCipherNameForCipherVersion(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Cipher v1";
  }
  else {
    return off_1E64A5FD8[a1 - 1];
  }
}

void sub_1C3B12C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B134E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B136EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B139F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B13A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B13BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B13D4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B13E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B13FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B14074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromICTagSelectionOperator(uint64_t a1)
{
  uint64_t v1 = @"unknown";
  if (a1 == 1) {
    uint64_t v1 = @"all";
  }
  if (a1 == 2) {
    return @"any";
  }
  else {
    return v1;
  }
}

id ICLocalizedStringFromICTagSelectionOperator(void *a1)
{
  if (a1 == (void *)2)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    int v2 = @"TAG_OPERATOR_ANY";
    uint64_t v3 = @"any";
  }
  else if (a1 == (void *)1)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    int v2 = @"TAG_OPERATOR_ALL";
    uint64_t v3 = @"all";
  }
  else
  {
    if (a1) {
      goto LABEL_8;
    }
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    int v2 = @"TAG_OPERATOR_UNKNOWN";
    uint64_t v3 = @"unknown";
  }
  a1 = [v1 localizedFrameworkStringForKey:v2 value:v3 table:0 allowSiri:1];
LABEL_8:
  return a1;
}

__CFString *NSStringFromICTagSelectionMode(uint64_t a1)
{
  uint64_t v1 = @"Custom";
  if (a1 == 1) {
    uint64_t v1 = @"All Tagged";
  }
  if (a1 == 2) {
    return @"All Untagged";
  }
  else {
    return v1;
  }
}

void sub_1C3B16D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B16FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B17340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B175FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B1865C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B18778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getLPLinkMetadataClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __LinkPresentationLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E64A61D8;
    uint64_t v6 = 0;
    LinkPresentationLibraryCore_frameworkLibrary = _sl_dlopen();
    int v2 = (void *)v4[0];
    if (!LinkPresentationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("LPLinkMetadata");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    int v2 = (void *)__getLPLinkMetadataClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getLPLinkMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __LinkPresentationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LinkPresentationLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t peernetworking::protobuf_ShutdownFile_peernetworking_2eproto(peernetworking *this)
{
  if (peernetworking::PeerNetworkMessage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::PeerNetworkMessage::default_instance_ + 8))(peernetworking::PeerNetworkMessage::default_instance_);
  }
  if (peernetworking::Note::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::Note::default_instance_ + 8))(peernetworking::Note::default_instance_);
  }
  if (peernetworking::ShareInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::ShareInfo::default_instance_ + 8))(peernetworking::ShareInfo::default_instance_);
  }
  if (peernetworking::RequestNote::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::RequestNote::default_instance_ + 8))(peernetworking::RequestNote::default_instance_);
  }
  if (peernetworking::RequestAttachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::RequestAttachment::default_instance_ + 8))(peernetworking::RequestAttachment::default_instance_);
  }
  if (peernetworking::Attachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::Attachment::default_instance_ + 8))(peernetworking::Attachment::default_instance_);
  }
  if (peernetworking::RequestMedia::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::RequestMedia::default_instance_ + 8))(peernetworking::RequestMedia::default_instance_);
  }
  if (peernetworking::Media::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::Media::default_instance_ + 8))(peernetworking::Media::default_instance_);
  }
  if (peernetworking::UnavailableMedia::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::UnavailableMedia::default_instance_ + 8))(peernetworking::UnavailableMedia::default_instance_);
  }
  if (peernetworking::Invite::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::Invite::default_instance_ + 8))(peernetworking::Invite::default_instance_);
  }
  if (peernetworking::InviteReply::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::InviteReply::default_instance_ + 8))(peernetworking::InviteReply::default_instance_);
  }
  if (peernetworking::Identity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)peernetworking::Identity::default_instance_ + 8))(peernetworking::Identity::default_instance_);
  }
  uint64_t result = peernetworking::KeepAlive::default_instance_;
  if (peernetworking::KeepAlive::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)peernetworking::KeepAlive::default_instance_ + 8);
    return v2();
  }
  return result;
}

void peernetworking::protobuf_AddDesc_peernetworking_2eproto_impl(peernetworking *this, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", a4);
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(v4);
  operator new();
}

void sub_1C3B18F70(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1C877D640](v2, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

double peernetworking::PeerNetworkMessage::PeerNetworkMessage(peernetworking::PeerNetworkMessage *this)
{
  *(void *)this = &unk_1F1F25030;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 0;
  return result;
}

double peernetworking::KeepAlive::KeepAlive(peernetworking::KeepAlive *this)
{
  *(void *)this = &unk_1F1F255D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  return result;
}

void *peernetworking::PeerNetworkMessage::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = peernetworking::RequestNote::default_instance_;
  this[5] = peernetworking::Note::default_instance_;
  this[6] = v1;
  uint64_t v2 = peernetworking::RequestAttachment::default_instance_;
  this[7] = peernetworking::Attachment::default_instance_;
  this[8] = v2;
  uint64_t v3 = peernetworking::UnavailableMedia::default_instance_;
  this[9] = peernetworking::RequestMedia::default_instance_;
  this[10] = v3;
  uint64_t v4 = peernetworking::Invite::default_instance_;
  this[11] = peernetworking::Identity::default_instance_;
  this[12] = v4;
  uint64_t v5 = peernetworking::ShareInfo::default_instance_;
  this[13] = peernetworking::InviteReply::default_instance_;
  this[14] = v5;
  uint64_t v6 = peernetworking::KeepAlive::default_instance_;
  this[15] = peernetworking::Media::default_instance_;
  this[16] = v6;
  return this;
}

void peernetworking::protobuf_AddDesc_peernetworking_2eproto(peernetworking *this)
{
  uint64_t v1 = peernetworking::protobuf_AddDesc_peernetworking_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = peernetworking::protobuf_AddDesc_peernetworking_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&peernetworking::protobuf_AddDesc_peernetworking_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3B191A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::PeerNetworkMessage::MergeFrom(peernetworking::PeerNetworkMessage *this, const peernetworking::PeerNetworkMessage *a2)
{
  char v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v39, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 710);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v39, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v38, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v39[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      int v6 = *((_DWORD *)a2 + 34);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_DWORD *)v3 + 34) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v7 = (peernetworking::Note *)*((void *)v3 + 5);
      if (!v7) {
        operator new();
      }
      int v8 = (const peernetworking::Note *)*((void *)a2 + 5);
      if (!v8)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        int v8 = *(const peernetworking::Note **)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Note::MergeFrom(v7, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      *((_DWORD *)v3 + 8) |= 4u;
      uint64_t v9 = (peernetworking::RequestNote *)*((void *)v3 + 6);
      if (!v9) {
        operator new();
      }
      char v10 = (const peernetworking::RequestNote *)*((void *)a2 + 6);
      if (!v10)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        char v10 = *(const peernetworking::RequestNote **)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestNote::MergeFrom(v9, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      *((_DWORD *)v3 + 8) |= 8u;
      std::string::size_type v11 = (peernetworking::Attachment *)*((void *)v3 + 7);
      if (!v11) {
        operator new();
      }
      unsigned __int8 v12 = (const peernetworking::Attachment *)*((void *)a2 + 7);
      if (!v12)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        unsigned __int8 v12 = *(const peernetworking::Attachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Attachment::MergeFrom(v11, v12);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x10u;
      uint64_t v13 = (peernetworking::RequestAttachment *)*((void *)v3 + 8);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = (const peernetworking::RequestAttachment *)*((void *)a2 + 8);
      if (!v14)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        uint64_t v14 = *(const peernetworking::RequestAttachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestAttachment::MergeFrom(v13, v14);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x20) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x20u;
      uint64_t v15 = (peernetworking::RequestMedia *)*((void *)v3 + 9);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = (const peernetworking::RequestMedia *)*((void *)a2 + 9);
      if (!v16)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        uint64_t v16 = *(const peernetworking::RequestMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::RequestMedia::MergeFrom(v15, v16);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x40) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x40u;
      uint64_t v17 = (peernetworking::UnavailableMedia *)*((void *)v3 + 10);
      if (!v17) {
        operator new();
      }
      uint64_t v18 = (const peernetworking::UnavailableMedia *)*((void *)a2 + 10);
      if (!v18)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        uint64_t v18 = *(const peernetworking::UnavailableMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::UnavailableMedia::MergeFrom(v17, v18);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x80) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x80u;
      uint64_t v19 = (peernetworking::Identity *)*((void *)v3 + 11);
      if (!v19) {
        operator new();
      }
      float v20 = (const peernetworking::Identity *)*((void *)a2 + 11);
      if (!v20)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        float v20 = *(const peernetworking::Identity **)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Identity::MergeFrom(v19, v20);
      int v5 = *((_DWORD *)a2 + 8);
    }
  }
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x100u;
      BOOL v21 = (peernetworking::Invite *)*((void *)v3 + 12);
      if (!v21) {
        operator new();
      }
      unint64_t v22 = (const peernetworking::Invite *)*((void *)a2 + 12);
      if (!v22)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        unint64_t v22 = *(const peernetworking::Invite **)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Invite::MergeFrom(v21, v22);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x200) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x200u;
      unint64_t v23 = (peernetworking::InviteReply *)*((void *)v3 + 13);
      if (!v23) {
        operator new();
      }
      size_t v24 = (const peernetworking::InviteReply *)*((void *)a2 + 13);
      if (!v24)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        size_t v24 = *(const peernetworking::InviteReply **)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::InviteReply::MergeFrom(v23, v24);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x400) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x400u;
      uint64_t v25 = (peernetworking::ShareInfo *)*((void *)v3 + 14);
      if (!v25) {
        operator new();
      }
      uint64_t v26 = (const peernetworking::ShareInfo *)*((void *)a2 + 14);
      if (!v26)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        uint64_t v26 = *(const peernetworking::ShareInfo **)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::ShareInfo::MergeFrom(v25, v26);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x800) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x800u;
      unint64_t v27 = (peernetworking::Media *)*((void *)v3 + 15);
      if (!v27) {
        operator new();
      }
      unint64_t v28 = (const peernetworking::Media *)*((void *)a2 + 15);
      if (!v28)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        unint64_t v28 = *(const peernetworking::Media **)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
      }
      this = (peernetworking::PeerNetworkMessage *)peernetworking::Media::MergeFrom(v27, v28);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x1000) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x1000u;
      unsigned int v29 = (peernetworking::KeepAlive *)*((void *)v3 + 16);
      if (!v29) {
        operator new();
      }
      id v30 = (const peernetworking::KeepAlive *)*((void *)a2 + 16);
      if (!v30)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        id v30 = *(const peernetworking::KeepAlive **)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
      }
      peernetworking::KeepAlive::MergeFrom(v29, v30);
    }
  }
  id v33 = (const std::string::value_type *)*((void *)a2 + 1);
  id v32 = (char *)a2 + 8;
  unsigned int v31 = v33;
  int v34 = v32[23];
  if (v34 >= 0) {
    id v35 = v32;
  }
  else {
    id v35 = v31;
  }
  if (v34 >= 0) {
    std::string::size_type v36 = v32[23];
  }
  else {
    std::string::size_type v36 = *((void *)v32 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v35, v36);
}

void sub_1C3B19724(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void peernetworking::PeerNetworkMessage::~PeerNetworkMessage(void **this)
{
  *this = &unk_1F1F25030;
  peernetworking::PeerNetworkMessage::SharedDtor((peernetworking::PeerNetworkMessage *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::PeerNetworkMessage::~PeerNetworkMessage(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::PeerNetworkMessage::SharedDtor(peernetworking::PeerNetworkMessage *this)
{
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  if ((peernetworking::PeerNetworkMessage *)peernetworking::PeerNetworkMessage::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 8);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 9);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 10);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 11);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 12);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 13);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 14);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 15);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)this + 16);
    if (v13)
    {
      uint64_t v14 = *(void (**)(void))(*(void *)v13 + 8);
      v14();
    }
  }
}

uint64_t peernetworking::PeerNetworkMessage::default_instance(peernetworking::PeerNetworkMessage *this)
{
  return peernetworking::PeerNetworkMessage::default_instance_;
}

void peernetworking::PeerNetworkMessage::New(peernetworking::PeerNetworkMessage *this)
{
}

uint64_t peernetworking::PeerNetworkMessage::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 136) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = peernetworking::Note::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = peernetworking::RequestNote::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = peernetworking::Attachment::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = peernetworking::RequestAttachment::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = peernetworking::RequestMedia::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = peernetworking::UnavailableMedia::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        this = peernetworking::Identity::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
  }
  if ((v2 & 0x1F00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = peernetworking::Invite::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 104);
      if (this)
      {
        this = peernetworking::InviteReply::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this)
      {
        this = peernetworking::ShareInfo::Clear((peernetworking::ShareInfo *)this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      this = *(void *)(v1 + 120);
      if (this)
      {
        this = peernetworking::Media::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 128);
      if (v3)
      {
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Note::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 40);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      this = *(void *)(this + 48);
      if (this) {
        this = versioned_document::Document::Clear((versioned_document::Document *)this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestNote::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Attachment::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0x1F) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v4 = *(void *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v5 = *(void *)(this + 64);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v6 = *(void *)(this + 72);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestAttachment::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::RequestMedia::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::UnavailableMedia::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Identity::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v4 = *(void *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v5 = *(void *)(this + 64);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::Invite::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::InviteReply::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::ShareInfo::Clear(peernetworking::ShareInfo *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *((void *)this + 5);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((_DWORD *)this + 18) = 0;
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t peernetworking::Media::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::KeepAlive::Clear(uint64_t this)
{
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t peernetworking::PeerNetworkMessage::MergePartialFromCodedStream(peernetworking::PeerNetworkMessage *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v113, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v112, (google::protobuf::io::ZeroCopyOutputStream *)v113);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_12;
      }
LABEL_6:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
LABEL_219:
        uint64_t v110 = 1;
        goto LABEL_220;
      }
LABEL_42:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v112, v4))goto LABEL_218; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_40;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 34))goto LABEL_218; {
          uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 34) = *v11;
          uint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        int v13 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v13;
        if ((unint64_t)v12 >= v10 || *v12 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_49:
        *((_DWORD *)this + 8) = v13 | 2;
        uint64_t v14 = (peernetworking::Note *)*((void *)this + 5);
        if (!v14) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v15 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)a2 + 14);
        int v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17) {
          goto LABEL_218;
        }
        int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::Note::MergePartialFromCodedStream(v14, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v18);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v21;
        }
        unint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_63:
        *((_DWORD *)this + 8) |= 4u;
        unint64_t v23 = (peernetworking::RequestNote *)*((void *)this + 6);
        if (!v23) {
          operator new();
        }
        unsigned int v114 = 0;
        size_t v24 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)a2 + 14);
        int v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26) {
          goto LABEL_218;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::RequestNote::MergePartialFromCodedStream(v23, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v27);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v29;
        }
        id v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_77:
        *((_DWORD *)this + 8) |= 8u;
        unsigned int v31 = (peernetworking::Attachment *)*((void *)this + 7);
        if (!v31) {
          operator new();
        }
        unsigned int v114 = 0;
        id v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          goto LABEL_218;
        }
        int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::Attachment::MergePartialFromCodedStream(v31, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
        int v36 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v37;
        }
        char v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_91:
        *((_DWORD *)this + 8) |= 0x10u;
        uint64_t v39 = (peernetworking::RequestAttachment *)*((void *)this + 8);
        if (!v39) {
          operator new();
        }
        unsigned int v114 = 0;
        unint64_t v40 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42) {
          goto LABEL_218;
        }
        int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::RequestAttachment::MergePartialFromCodedStream(v39, a2)
          || !*((unsigned char *)a2 + 36))
        {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v45;
        }
        unint64_t v46 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
LABEL_105:
        *((_DWORD *)this + 8) |= 0x20u;
        id v47 = (peernetworking::RequestMedia *)*((void *)this + 9);
        if (!v47) {
          operator new();
        }
        unsigned int v114 = 0;
        unsigned int v48 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v48;
          *((void *)a2 + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)a2 + 14);
        int v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50) {
          goto LABEL_218;
        }
        int v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::RequestMedia::MergePartialFromCodedStream(v47, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v51);
        int v52 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v53;
        }
        uint64_t v54 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v54 >= *((void *)a2 + 2) || *v54 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v54 + 1;
LABEL_119:
        *((_DWORD *)this + 8) |= 0x40u;
        unint64_t v55 = (peernetworking::UnavailableMedia *)*((void *)this + 10);
        if (!v55) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v56 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v56;
          *((void *)a2 + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)a2 + 14);
        int v58 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v57 + 1;
        if (v57 >= v58) {
          goto LABEL_218;
        }
        int v59 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::UnavailableMedia::MergePartialFromCodedStream(v55, a2)
          || !*((unsigned char *)a2 + 36))
        {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v59);
        int v60 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v61;
        }
        uint64_t v62 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v62 + 1;
LABEL_133:
        *((_DWORD *)this + 8) |= 0x80u;
        uint64_t v63 = (peernetworking::Identity *)*((void *)this + 11);
        if (!v63) {
          operator new();
        }
        unsigned int v114 = 0;
        id v64 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v64 >= *((void *)a2 + 2) || *v64 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v64;
          *((void *)a2 + 1) = v64 + 1;
        }
        int v65 = *((_DWORD *)a2 + 14);
        int v66 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v65 + 1;
        if (v65 >= v66) {
          goto LABEL_218;
        }
        int v67 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::Identity::MergePartialFromCodedStream(v63, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v67);
        int v68 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v69;
        }
        uint64_t v70 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v70 >= *((void *)a2 + 2) || *v70 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 1;
LABEL_147:
        *((_DWORD *)this + 8) |= 0x100u;
        unint64_t v71 = (peernetworking::Invite *)*((void *)this + 12);
        if (!v71) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v72 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v72 >= *((void *)a2 + 2) || *v72 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v72;
          *((void *)a2 + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)a2 + 14);
        int v74 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v73 + 1;
        if (v73 >= v74) {
          goto LABEL_218;
        }
        int v75 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::Invite::MergePartialFromCodedStream(v71, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v75);
        int v76 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v76, 1);
        int v77 = v76 - 1;
        if (v77 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v77;
        }
        unint64_t v78 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v78 >= *((void *)a2 + 2) || *v78 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v78 + 1;
LABEL_161:
        *((_DWORD *)this + 8) |= 0x200u;
        long long v79 = (peernetworking::InviteReply *)*((void *)this + 13);
        if (!v79) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v80 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v80 >= *((void *)a2 + 2) || *v80 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v80;
          *((void *)a2 + 1) = v80 + 1;
        }
        int v81 = *((_DWORD *)a2 + 14);
        int v82 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v81 + 1;
        if (v81 >= v82) {
          goto LABEL_218;
        }
        int v83 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::InviteReply::MergePartialFromCodedStream(v79, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v83);
        int v84 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v84, 1);
        int v85 = v84 - 1;
        if (v85 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v85;
        }
        id v86 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v86 >= *((void *)a2 + 2) || *v86 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v86 + 1;
LABEL_175:
        *((_DWORD *)this + 8) |= 0x400u;
        id v87 = (peernetworking::ShareInfo *)*((void *)this + 14);
        if (!v87) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v88 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v88 >= *((void *)a2 + 2) || *v88 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v88;
          *((void *)a2 + 1) = v88 + 1;
        }
        int v89 = *((_DWORD *)a2 + 14);
        int v90 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v89 + 1;
        if (v89 >= v90) {
          goto LABEL_218;
        }
        int v91 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::ShareInfo::MergePartialFromCodedStream(v87, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v91);
        int v92 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v92, 1);
        int v93 = v92 - 1;
        if (v93 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v93;
        }
        id v94 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v94 >= *((void *)a2 + 2) || *v94 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v94 + 1;
LABEL_189:
        *((_DWORD *)this + 8) |= 0x800u;
        v95 = (peernetworking::Media *)*((void *)this + 15);
        if (!v95) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v96 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v96 >= *((void *)a2 + 2) || *v96 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v96;
          *((void *)a2 + 1) = v96 + 1;
        }
        int v97 = *((_DWORD *)a2 + 14);
        int v98 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v97 + 1;
        if (v97 >= v98) {
          goto LABEL_218;
        }
        int v99 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
        if (!peernetworking::Media::MergePartialFromCodedStream(v95, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_218;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v99);
        int v100 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v101;
        }
        uint64_t v102 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v102 >= *((void *)a2 + 2) || *v102 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v102 + 1;
LABEL_203:
        *((_DWORD *)this + 8) |= 0x1000u;
        uint64_t v103 = (peernetworking::KeepAlive *)*((void *)this + 16);
        if (!v103) {
          operator new();
        }
        unsigned int v114 = 0;
        uint64_t v104 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v104 >= *((void *)a2 + 2) || *v104 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114)) {
            goto LABEL_218;
          }
        }
        else
        {
          unsigned int v114 = *v104;
          *((void *)a2 + 1) = v104 + 1;
        }
        int v105 = *((_DWORD *)a2 + 14);
        int v106 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v105 + 1;
        if (v105 >= v106
          || (int v107 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114),
              !peernetworking::KeepAlive::MergePartialFromCodedStream(v103, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_218:
          uint64_t v110 = 0;
          goto LABEL_220;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v107);
        int v108 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v108, 1);
        int v109 = v108 - 1;
        if (v109 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v109;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v110 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_220:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v112);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v113);
        return v110;
      case 2u:
        if (v7 != 18) {
          goto LABEL_40;
        }
        int v13 = *((_DWORD *)this + 8);
        goto LABEL_49;
      case 3u:
        if (v7 == 26) {
          goto LABEL_63;
        }
        goto LABEL_40;
      case 4u:
        if (v7 == 34) {
          goto LABEL_77;
        }
        goto LABEL_40;
      case 5u:
        if (v7 == 42) {
          goto LABEL_91;
        }
        goto LABEL_40;
      case 6u:
        if (v7 == 50) {
          goto LABEL_105;
        }
        goto LABEL_40;
      case 7u:
        if (v7 == 58) {
          goto LABEL_119;
        }
        goto LABEL_40;
      case 8u:
        if (v7 == 66) {
          goto LABEL_133;
        }
        goto LABEL_40;
      case 9u:
        if (v7 == 74) {
          goto LABEL_147;
        }
        goto LABEL_40;
      case 0xAu:
        if (v7 == 82) {
          goto LABEL_161;
        }
        goto LABEL_40;
      case 0xBu:
        if (v7 == 90) {
          goto LABEL_175;
        }
        goto LABEL_40;
      case 0xCu:
        if (v7 == 98) {
          goto LABEL_189;
        }
        goto LABEL_40;
      case 0xDu:
        if (v7 == 106) {
          goto LABEL_203;
        }
LABEL_40:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_42;
        }
        goto LABEL_219;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1C3B1B338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C40CCCF3E6ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::PeerNetworkMessage::SerializeWithCachedSizes(peernetworking::PeerNetworkMessage *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 34), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 5);
  if (!v7)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v7 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v8 = *((void *)v5 + 6);
  if (!v8)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v8 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v9 = *((void *)v5 + 7);
  if (!v9)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v9 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v9, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v10 = *((void *)v5 + 8);
  if (!v10)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v10 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(5, v10, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v11 = *((void *)v5 + 9);
  if (!v11)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v11 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(6, v11, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v12 = *((void *)v5 + 10);
  if (!v12)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v12 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(7, v12, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v13 = *((void *)v5 + 11);
  if (!v13)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v13 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(8, v13, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v14 = *((void *)v5 + 12);
  if (!v14)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v14 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(9, v14, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v15 = *((void *)v5 + 13);
  if (!v15)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v15 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v15, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v16 = *((void *)v5 + 14);
  if (!v16)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v16 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(11, v16, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v17 = *((void *)v5 + 15);
  if (!v17)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
    uint64_t v17 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
  }
  this = (peernetworking::PeerNetworkMessage *)google::protobuf::internal::WireFormatLite::WriteMessage(12, v17, a2);
  if ((*((_DWORD *)v5 + 8) & 0x1000) != 0)
  {
LABEL_49:
    uint64_t v18 = *((void *)v5 + 16);
    if (!v18)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
      uint64_t v18 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(13, v18, a2);
  }
LABEL_52:
  if (*((char *)v5 + 31) < 0)
  {
    int v19 = (char *)*((void *)v5 + 1);
    uint64_t v20 = *((void *)v5 + 2);
  }
  else
  {
    int v19 = (char *)v5 + 8;
    LODWORD(v20) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v19, v20);
}

uint64_t peernetworking::PeerNetworkMessage::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_59;
  }
  if (v2)
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 136);
    if (v4 >= 0x80)
    {
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      int v2 = *(_DWORD *)(v1 + 32);
    }
    else
    {
      this = 1;
    }
    int v3 = this + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *(peernetworking::Note **)(v1 + 40);
  if (!v5)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    uint64_t v5 = *(peernetworking::Note **)(peernetworking::PeerNetworkMessage::default_instance_ + 40);
  }
  int v6 = (google::protobuf::io::CodedOutputStream *)peernetworking::Note::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    this = 1;
  }
  v3 += v7 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = *(peernetworking::RequestNote **)(v1 + 48);
    if (!v8)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      uint64_t v8 = *(peernetworking::RequestNote **)(peernetworking::PeerNetworkMessage::default_instance_ + 48);
    }
    uint64_t v9 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestNote::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      this = 1;
    }
    v3 += v10 + this + 1;
    int v2 = *(_DWORD *)(v1 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v11 = *(peernetworking::Attachment **)(v1 + 56);
  if (!v11)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    uint64_t v11 = *(peernetworking::Attachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 56);
  }
  uint64_t v12 = (google::protobuf::io::CodedOutputStream *)peernetworking::Attachment::ByteSize(v11);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  }
  else {
    this = 1;
  }
  v3 += v13 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_35:
  uint64_t v14 = *(peernetworking::RequestAttachment **)(v1 + 64);
  if (!v14)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    uint64_t v14 = *(peernetworking::RequestAttachment **)(peernetworking::PeerNetworkMessage::default_instance_ + 64);
  }
  uint64_t v15 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestAttachment::ByteSize(v14);
  int v16 = (int)v15;
  if (v15 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  }
  else {
    this = 1;
  }
  v3 += v16 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_41:
  uint64_t v17 = *(peernetworking::RequestMedia **)(v1 + 72);
  if (!v17)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    uint64_t v17 = *(peernetworking::RequestMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 72);
  }
  uint64_t v18 = (google::protobuf::io::CodedOutputStream *)peernetworking::RequestMedia::ByteSize(v17);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
  }
  else {
    this = 1;
  }
  v3 += v19 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_53;
  }
LABEL_47:
  uint64_t v20 = *(peernetworking::UnavailableMedia **)(v1 + 80);
  if (!v20)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    uint64_t v20 = *(peernetworking::UnavailableMedia **)(peernetworking::PeerNetworkMessage::default_instance_ + 80);
  }
  int v21 = (google::protobuf::io::CodedOutputStream *)peernetworking::UnavailableMedia::ByteSize(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    this = 1;
  }
  v3 += v22 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    unint64_t v23 = *(peernetworking::Identity **)(v1 + 88);
    if (!v23)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      unint64_t v23 = *(peernetworking::Identity **)(peernetworking::PeerNetworkMessage::default_instance_ + 88);
    }
    size_t v24 = (google::protobuf::io::CodedOutputStream *)peernetworking::Identity::ByteSize(v23);
    int v25 = (int)v24;
    if (v24 >= 0x80) {
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    }
    else {
      this = 1;
    }
    v3 += v25 + this + 1;
    int v2 = *(_DWORD *)(v1 + 32);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_99;
  }
  if ((v2 & 0x100) != 0)
  {
    int v26 = *(peernetworking::Invite **)(v1 + 96);
    if (!v26)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      int v26 = *(peernetworking::Invite **)(peernetworking::PeerNetworkMessage::default_instance_ + 96);
    }
    int v27 = (google::protobuf::io::CodedOutputStream *)peernetworking::Invite::ByteSize(v26);
    int v28 = (int)v27;
    if (v27 >= 0x80) {
      this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    }
    else {
      this = 1;
    }
    v3 += v28 + this + 1;
    int v2 = *(_DWORD *)(v1 + 32);
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  int v29 = *(peernetworking::InviteReply **)(v1 + 104);
  if (!v29)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    int v29 = *(peernetworking::InviteReply **)(peernetworking::PeerNetworkMessage::default_instance_ + 104);
  }
  id v30 = (google::protobuf::io::CodedOutputStream *)peernetworking::InviteReply::ByteSize(v29);
  int v31 = (int)v30;
  if (v30 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
  }
  else {
    this = 1;
  }
  v3 += v31 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_84;
  }
LABEL_78:
  id v32 = *(peernetworking::ShareInfo **)(v1 + 112);
  if (!v32)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    id v32 = *(peernetworking::ShareInfo **)(peernetworking::PeerNetworkMessage::default_instance_ + 112);
  }
  int v33 = (google::protobuf::io::CodedOutputStream *)peernetworking::ShareInfo::ByteSize(v32);
  int v34 = (int)v33;
  if (v33 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  }
  else {
    this = 1;
  }
  v3 += v34 + this + 1;
  int v2 = *(_DWORD *)(v1 + 32);
  if ((v2 & 0x800) == 0)
  {
LABEL_64:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_90;
  }
LABEL_84:
  int v35 = *(peernetworking::Media **)(v1 + 120);
  if (!v35)
  {
    peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
    int v35 = *(peernetworking::Media **)(peernetworking::PeerNetworkMessage::default_instance_ + 120);
  }
  int v36 = (google::protobuf::io::CodedOutputStream *)peernetworking::Media::ByteSize(v35);
  int v37 = (int)v36;
  if (v36 >= 0x80) {
    this = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
  }
  else {
    this = 1;
  }
  v3 += v37 + this + 1;
  if ((*(_DWORD *)(v1 + 32) & 0x1000) != 0)
  {
LABEL_90:
    uint64_t v38 = *(void *)(v1 + 128);
    if (!v38)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto((peernetworking *)this);
      uint64_t v38 = *(void *)(peernetworking::PeerNetworkMessage::default_instance_ + 128);
    }
    if (*(char *)(v38 + 31) >= 0) {
      uint64_t v39 = (google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v38 + 31);
    }
    else {
      uint64_t v39 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v38 + 16);
    }
    *(_DWORD *)(v38 + 36) = v39;
    if (v39 >= 0x80) {
      int v40 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    }
    else {
      int v40 = 1;
    }
    v3 += v39 + v40 + 1;
  }
LABEL_99:
  if (*(char *)(v1 + 31) < 0) {
    uint64_t v41 = *(void *)(v1 + 16);
  }
  else {
    LODWORD(v41) = *(unsigned __int8 *)(v1 + 31);
  }
  uint64_t result = (v3 + v41);
  *(_DWORD *)(v1 + 36) = result;
  return result;
}

std::string *peernetworking::PeerNetworkMessage::CheckTypeAndMergeFrom(peernetworking::PeerNetworkMessage *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::PeerNetworkMessage::MergeFrom(this, lpsrc);
}

std::string *peernetworking::Note::MergeFrom(peernetworking::Note *this, const peernetworking::Note *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 998);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)v3 + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      this = (peernetworking::Note *)std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (versioned_document::Document *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = (const versioned_document::Document *)*((void *)a2 + 6);
      if (!v9)
      {
        peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
        uint64_t v9 = *(const versioned_document::Document **)(peernetworking::Note::default_instance_ + 48);
      }
      versioned_document::Document::MergeFrom(v8, v9);
    }
  }
  uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3B1BD18(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestNote::MergeFrom(peernetworking::RequestNote *this, const peernetworking::RequestNote *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1466);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B1BE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Attachment::MergeFrom(peernetworking::Attachment *this, const peernetworking::Attachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2050);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v10 = (const std::string *)*((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v11 = (std::string *)*((void *)this + 7);
      if (v11 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      std::string::size_type v12 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v13 = (std::string *)*((void *)this + 8);
      if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v13, v12);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      char v14 = (const std::string *)*((void *)a2 + 9);
      *((_DWORD *)this + 8) |= 0x10u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      std::string::size_type v15 = (std::string *)*((void *)this + 9);
      if (v15 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v15, v14);
    }
  }
  uint64_t v18 = (const std::string::value_type *)*((void *)a2 + 1);
  char v17 = (char *)a2 + 8;
  int v16 = v18;
  int v19 = v17[23];
  if (v19 >= 0) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = v16;
  }
  if (v19 >= 0) {
    std::string::size_type v21 = v17[23];
  }
  else {
    std::string::size_type v21 = *((void *)v17 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v20, v21);
}

void sub_1C3B1C0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestAttachment::MergeFrom(peernetworking::RequestAttachment *this, const peernetworking::RequestAttachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1702);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
  std::string::size_type v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    char v14 = v11;
  }
  else {
    char v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1C3B1C27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::RequestMedia::MergeFrom(peernetworking::RequestMedia *this, const peernetworking::RequestMedia *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2264);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B1C394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::UnavailableMedia::MergeFrom(peernetworking::UnavailableMedia *this, const peernetworking::UnavailableMedia *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2702);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B1C4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Identity::MergeFrom(peernetworking::Identity *this, const peernetworking::Identity *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3482);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v10 = (const std::string *)*((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v11 = (std::string *)*((void *)this + 7);
      if (v11 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      std::string::size_type v12 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v13 = (std::string *)*((void *)this + 8);
      if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v13, v12);
    }
  }
  int v16 = (const std::string::value_type *)*((void *)a2 + 1);
  std::string::size_type v15 = (char *)a2 + 8;
  char v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v18, v19);
}

void sub_1C3B1C6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Invite::MergeFrom(peernetworking::Invite *this, const peernetworking::Invite *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2938);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
  std::string::size_type v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    char v14 = v11;
  }
  else {
    char v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1C3B1C874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::InviteReply::MergeFrom(peernetworking::InviteReply *this, const peernetworking::InviteReply *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3170);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      char v8 = *((unsigned char *)a2 + 48);
      *((_DWORD *)this + 8) |= 2u;
      *((unsigned char *)this + 48) = v8;
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  uint64_t v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3B1C9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::ShareInfo::MergeFrom(peernetworking::ShareInfo *this, const peernetworking::ShareInfo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 1262);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((peernetworking::ShareInfo *)((char *)this + 48), (const peernetworking::ShareInfo *)((char *)a2 + 48));
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = *((_DWORD *)a2 + 18);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 18) = v8;
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  uint64_t v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3B1CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::Media::MergeFrom(peernetworking::Media *this, const peernetworking::Media *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 2500);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    std::string::size_type v14 = v11;
  }
  else {
    std::string::size_type v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1C3B1CC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *peernetworking::KeepAlive::MergeFrom(peernetworking::KeepAlive *this, const peernetworking::KeepAlive *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/peernetworking.pb.cc", 3649);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  int v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3B1CD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::PeerNetworkMessage::IsInitialized(peernetworking::PeerNetworkMessage *this)
{
  return 1;
}

void *peernetworking::PeerNetworkMessage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.PeerNetworkMessage");
}

peernetworking::Note *peernetworking::Note::Note(peernetworking::Note *this)
{
  *(void *)this = &unk_1F1F250A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::Note::SharedCtor(this);
  return this;
}

void sub_1C3B1CDA4(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Note::SharedCtor(peernetworking::Note *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1F24E80;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
}

void sub_1C3B1CE70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Note::~Note(void **this)
{
  *this = &unk_1F1F250A8;
  peernetworking::Note::SharedDtor((peernetworking::Note *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::Note::~Note(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::Note::SharedDtor(peernetworking::Note *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (peernetworking::Note *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
  if ((peernetworking::Note *)peernetworking::Note::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 6);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t peernetworking::Note::default_instance(peernetworking::Note *this)
{
  return peernetworking::Note::default_instance_;
}

void peernetworking::Note::New(peernetworking::Note *this)
{
}

void sub_1C3B1D04C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Note::MergePartialFromCodedStream(peernetworking::Note *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v23, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22, (google::protobuf::io::ZeroCopyOutputStream *)v23);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_23;
      }
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      char v12 = (versioned_document::Document *)*((void *)this + 6);
      if (!v12) {
        operator new();
      }
      unsigned int v24 = 0;
      int v13 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24)) {
          goto LABEL_41;
        }
      }
      else
      {
        unsigned int v24 = *v13;
        *((void *)a2 + 1) = v13 + 1;
      }
      int v14 = *((_DWORD *)a2 + 14);
      int v15 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v14 + 1;
      if (v14 >= v15
        || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24),
            !versioned_document::Document::MergePartialFromCodedStream(v12, a2))
        || !*((unsigned char *)a2 + 36))
      {
LABEL_41:
        uint64_t v20 = 0;
        goto LABEL_43;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
      int v17 = *((_DWORD *)a2 + 14);
      BOOL v18 = __OFSUB__(v17, 1);
      int v19 = v17 - 1;
      if (v19 < 0 == v18) {
        *((_DWORD *)a2 + 14) = v19;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v20 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_43;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      }
      uint64_t v9 = (std::string *)*((void *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
        goto LABEL_41;
      }
      std::string::size_type v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_42;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v22, v4))goto LABEL_41; {
    }
      }
  }
LABEL_16:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_42:
  uint64_t v20 = 1;
LABEL_43:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v22);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v23);
  return v20;
}

void sub_1C3B1D33C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x1093C40A258B440);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Note::SerializeWithCachedSizes(peernetworking::Note *this, google::protobuf::io::CodedOutputStream *a2)
{
  BOOL v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    this = (peernetworking::Note *)google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v5 = *((void *)v3 + 6);
    if (!v5)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
      uint64_t v5 = *(void *)(peernetworking::Note::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)v3 + 1);
    uint64_t v7 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v6 = (char *)v3 + 8;
    LODWORD(v7) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t peernetworking::Note::ByteSize(peernetworking::Note *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    BOOL v11 = (versioned_document::Document *)*((void *)this + 6);
    if (!v11)
    {
      peernetworking::protobuf_AddDesc_peernetworking_2eproto(0);
      BOOL v11 = *(versioned_document::Document **)(peernetworking::Note::default_instance_ + 48);
    }
    char v12 = (google::protobuf::io::CodedOutputStream *)versioned_document::Document::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
  }
LABEL_21:
  if (*((char *)this + 31) < 0) {
    uint64_t v15 = *((void *)this + 2);
  }
  else {
    LODWORD(v15) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v15);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Note::CheckTypeAndMergeFrom(peernetworking::Note *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::Note::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::Note::IsInitialized(peernetworking::Note *this)
{
  return 1;
}

void *peernetworking::Note::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Note");
}

peernetworking::ShareInfo *peernetworking::ShareInfo::ShareInfo(peernetworking::ShareInfo *this)
{
  *(void *)this = &unk_1F1F25120;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  peernetworking::ShareInfo::SharedCtor(this);
  return this;
}

void sub_1C3B1D61C(_Unwind_Exception *a1)
{
  uint64_t v4 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4);
  if (v1[31] < 0) {
    operator delete(*v3);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::ShareInfo::SharedCtor(peernetworking::ShareInfo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((_DWORD *)this + 18) = 0;
}

void sub_1C3B1D6F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::ShareInfo::~ShareInfo(peernetworking::ShareInfo *this)
{
  *(void *)this = &unk_1F1F25120;
  peernetworking::ShareInfo::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  peernetworking::ShareInfo::~ShareInfo(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::ShareInfo::SharedDtor(peernetworking::ShareInfo *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 5);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (peernetworking::ShareInfo *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

void peernetworking::ShareInfo::New(peernetworking::ShareInfo *this)
{
}

void sub_1C3B1D874(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C409A15E765);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::ShareInfo::MergePartialFromCodedStream(peernetworking::ShareInfo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v31, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30, (google::protobuf::io::ZeroCopyOutputStream *)v31);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 == 26) {
          goto LABEL_38;
        }
LABEL_29:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_59;
        }
        goto LABEL_31;
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 1)
      {
        if (v7 != 10) {
          goto LABEL_29;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        int v10 = (std::string *)*((void *)this + 5);
        if (v10 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v10)) {
          goto LABEL_58;
        }
        char v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 < v11 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_25;
        }
      }
      else
      {
LABEL_17:
        if (v7) {
          BOOL v14 = (v7 & 7) == 4;
        }
        else {
          BOOL v14 = 1;
        }
        if (v14)
        {
LABEL_59:
          uint64_t v28 = 1;
          goto LABEL_60;
        }
LABEL_31:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v30, v4))goto LABEL_58; {
      }
        }
    }
    if (v7 != 16) {
      goto LABEL_29;
    }
    int v13 = (char *)*((void *)a2 + 1);
    unint64_t v11 = *((void *)a2 + 2);
LABEL_25:
    if ((unint64_t)v13 >= v11 || *v13 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 18)) {
        goto LABEL_58;
      }
      uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
    }
    else
    {
      *((_DWORD *)this + 18) = *v13;
      uint64_t v15 = v13 + 1;
      *((void *)a2 + 1) = v15;
    }
    *((_DWORD *)this + 8) |= 2u;
    if ((unint64_t)v15 < v11 && *v15 == 26)
    {
      do
      {
        *((void *)a2 + 1) = v15 + 1;
LABEL_38:
        int v16 = *((_DWORD *)this + 15);
        uint64_t v17 = *((int *)this + 14);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v16 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New();
        }
        uint64_t v18 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v17 + 1;
        int v19 = *(peernetworking::Identity **)(v18 + 8 * v17);
        unsigned int v32 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32)) {
            goto LABEL_58;
          }
        }
        else
        {
          unsigned int v32 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32),
              !peernetworking::Identity::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_58:
          uint64_t v28 = 0;
          goto LABEL_60;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v26;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        int v27 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v15 < v27 && *v15 == 26);
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v28 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_60:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v31);
  return v28;
}

void sub_1C3B1DC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::ShareInfo::SerializeWithCachedSizes(peernetworking::ShareInfo *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 18), a2, a4);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)this + 48, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    unsigned int v9 = (char *)*((void *)this + 1);
    uint64_t v10 = *((void *)this + 2);
  }
  else
  {
    unsigned int v9 = (char *)this + 8;
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t peernetworking::ShareInfo::ByteSize(peernetworking::ShareInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    unint64_t v11 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v11 >= 0x80) {
      int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else {
      int v12 = 2;
    }
    v3 += v12;
  }
LABEL_19:
  int v13 = *((_DWORD *)this + 14);
  int v14 = v13 + v3;
  if (v13 >= 1)
  {
    int v15 = 0;
    do
    {
      int v16 = (peernetworking::Identity *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)this + 48, v15);
      uint64_t v17 = (google::protobuf::io::CodedOutputStream *)peernetworking::Identity::ByteSize(v16);
      int v18 = (int)v17;
      if (v17 >= 0x80) {
        int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v19 = 1;
      }
      v14 += v18 + v19;
      ++v15;
    }
    while (v15 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v14 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::ShareInfo::CheckTypeAndMergeFrom(peernetworking::ShareInfo *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::ShareInfo::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::ShareInfo::IsInitialized(peernetworking::ShareInfo *this)
{
  return 1;
}

void *peernetworking::ShareInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.ShareInfo");
}

peernetworking::RequestNote *peernetworking::RequestNote::RequestNote(peernetworking::RequestNote *this)
{
  *(void *)this = &unk_1F1F25198;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::RequestNote::SharedCtor(this);
  return this;
}

void sub_1C3B1DF54(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestNote::SharedCtor(peernetworking::RequestNote *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3B1E01C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestNote::~RequestNote(void **this)
{
  *this = &unk_1F1F25198;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::RequestNote::~RequestNote(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::RequestNote::New(peernetworking::RequestNote *this)
{
}

void sub_1C3B1E114(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestNote::MergePartialFromCodedStream(peernetworking::RequestNote *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1C3B1E2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestNote::SerializeWithCachedSizes(peernetworking::RequestNote *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::RequestNote::ByteSize(peernetworking::RequestNote *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestNote::CheckTypeAndMergeFrom(peernetworking::RequestNote *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::RequestNote::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::RequestNote::IsInitialized(peernetworking::RequestNote *this)
{
  return 1;
}

void *peernetworking::RequestNote::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestNote");
}

peernetworking::RequestAttachment *peernetworking::RequestAttachment::RequestAttachment(peernetworking::RequestAttachment *this)
{
  *(void *)this = &unk_1F1F25210;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::RequestAttachment::SharedCtor(this);
  return this;
}

void sub_1C3B1E4FC(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestAttachment::SharedCtor(peernetworking::RequestAttachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3B1E5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestAttachment::~RequestAttachment(void **this)
{
  *this = &unk_1F1F25210;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::RequestAttachment::~RequestAttachment(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::RequestAttachment::SharedDtor(peernetworking::RequestAttachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (peernetworking::RequestAttachment *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (peernetworking::RequestAttachment *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

void peernetworking::RequestAttachment::New(peernetworking::RequestAttachment *this)
{
}

void sub_1C3B1E78C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestAttachment::MergePartialFromCodedStream(peernetworking::RequestAttachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_23;
      }
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
LABEL_37:
      }
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      int v12 = (std::string *)*((void *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        uint64_t v13 = 0;
        goto LABEL_36;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        goto LABEL_37;
      }
      int v9 = (std::string *)*((void *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
        goto LABEL_34;
      }
      uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_35;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34; {
    }
      }
  }
LABEL_16:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_35:
  uint64_t v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3B1E9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestAttachment::SerializeWithCachedSizes(peernetworking::RequestAttachment *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    char v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    char v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::RequestAttachment::ByteSize(peernetworking::RequestAttachment *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestAttachment::CheckTypeAndMergeFrom(peernetworking::RequestAttachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::RequestAttachment::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::RequestAttachment::IsInitialized(peernetworking::RequestAttachment *this)
{
  return 1;
}

void *peernetworking::RequestAttachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestAttachment");
}

peernetworking::Attachment *peernetworking::Attachment::Attachment(peernetworking::Attachment *this)
{
  *(void *)this = &unk_1F1F25288;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::Attachment::SharedCtor(this);
  return this;
}

void sub_1C3B1ECA4(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Attachment::SharedCtor(peernetworking::Attachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = v3;
  *((void *)this + 8) = v3;
  *((void *)this + 9) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3B1ED78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Attachment::~Attachment(void **this)
{
  *this = &unk_1F1F25288;
  peernetworking::Attachment::SharedDtor((peernetworking::Attachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::Attachment::~Attachment(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::Attachment::SharedDtor(peernetworking::Attachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (peernetworking::Attachment *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (peernetworking::Attachment *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 7);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (peernetworking::Attachment *)MEMORY[0x1C877D640](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 8);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (peernetworking::Attachment *)MEMORY[0x1C877D640](v6, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v7 = *((void *)v1 + 9);
  if (v7 && v7 != v2)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (peernetworking::Attachment *)MEMORY[0x1C877D640](v7, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

void peernetworking::Attachment::New(peernetworking::Attachment *this)
{
}

void sub_1C3B1F008(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40E816FE55);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Attachment::MergePartialFromCodedStream(peernetworking::Attachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v22, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21, (google::protobuf::io::ZeroCopyOutputStream *)v22);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_15:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_62:
        uint64_t v19 = 1;
        goto LABEL_63;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v21, v4))
      {
LABEL_61:
        uint64_t v19 = 0;
        goto LABEL_63;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_64;
        }
        int v9 = (std::string *)*((void *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
          goto LABEL_61;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_64;
        }
        int v12 = (std::string *)*((void *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12)) {
          goto LABEL_61;
        }
        char v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_39:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_64;
        }
        uint64_t v14 = (std::string *)*((void *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14)) {
          goto LABEL_61;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_46:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_64;
        }
        int v16 = (std::string *)*((void *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16)) {
          goto LABEL_61;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_53:
        *((_DWORD *)this + 8) |= 0x10u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_64:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        int v18 = (std::string *)*((void *)this + 9);
        if (v18 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v18)) {
          goto LABEL_61;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v19 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 3u:
        if (v7 == 26) {
          goto LABEL_39;
        }
        goto LABEL_28;
      case 4u:
        if (v7 == 34) {
          goto LABEL_46;
        }
        goto LABEL_28;
      case 5u:
        if (v7 == 42) {
          goto LABEL_53;
        }
LABEL_28:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_30;
        }
        goto LABEL_62;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_63:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v22);
  return v19;
}

void sub_1C3B1F414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Attachment::SerializeWithCachedSizes(peernetworking::Attachment *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  int v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((void *)this + 7), a2);
  int v4 = *((_DWORD *)this + 8);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 8), a2);
  if ((*((_DWORD *)this + 8) & 0x10) != 0) {
LABEL_6:
  }
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(5, *((void *)this + 9), a2);
LABEL_7:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    uint64_t v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Attachment::ByteSize(peernetworking::Attachment *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_55;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v17 = *((void *)this + 7);
    int v18 = *(unsigned __int8 *)(v17 + 23);
    char v19 = v18;
    uint64_t v20 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
    }
    else {
      unint64_t v21 = v20;
    }
    if (v21 >= 0x80)
    {
      int v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
      int v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v20 = *(void *)(v17 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v19 = *(unsigned char *)(v17 + 23);
    }
    else
    {
      int v22 = 1;
    }
    if (v19 < 0) {
      int v18 = v20;
    }
    v3 += v22 + v18 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_55;
      }
      goto LABEL_46;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v23 = *((void *)this + 8);
  int v24 = *(unsigned __int8 *)(v23 + 23);
  char v25 = v24;
  uint64_t v26 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
  }
  else {
    unint64_t v27 = v26;
  }
  if (v27 >= 0x80)
  {
    int v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v26 = *(void *)(v23 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v25 = *(unsigned char *)(v23 + 23);
  }
  else
  {
    int v28 = 1;
  }
  if (v25 < 0) {
    int v24 = v26;
  }
  v3 += v28 + v24 + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_46:
    uint64_t v29 = *((void *)this + 9);
    int v30 = *(unsigned __int8 *)(v29 + 23);
    char v31 = v30;
    uint64_t v32 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      unint64_t v33 = *(unsigned __int8 *)(v29 + 23);
    }
    else {
      unint64_t v33 = v32;
    }
    if (v33 >= 0x80)
    {
      int v34 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v33);
      int v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v32 = *(void *)(v29 + 8);
      char v31 = *(unsigned char *)(v29 + 23);
    }
    else
    {
      int v34 = 1;
    }
    if (v31 < 0) {
      int v30 = v32;
    }
    v3 += v34 + v30 + 1;
  }
LABEL_55:
  if (*((char *)this + 31) < 0) {
    uint64_t v35 = *((void *)this + 2);
  }
  else {
    LODWORD(v35) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v35);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Attachment::CheckTypeAndMergeFrom(peernetworking::Attachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::Attachment::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::Attachment::IsInitialized(peernetworking::Attachment *this)
{
  return 1;
}

void *peernetworking::Attachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Attachment");
}

peernetworking::RequestMedia *peernetworking::RequestMedia::RequestMedia(peernetworking::RequestMedia *this)
{
  *(void *)this = &unk_1F1F25300;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::RequestMedia::SharedCtor(this);
  return this;
}

void sub_1C3B1F840(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::RequestMedia::SharedCtor(peernetworking::RequestMedia *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3B1F908(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::RequestMedia::~RequestMedia(void **this)
{
  *this = &unk_1F1F25300;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::RequestMedia::~RequestMedia(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::RequestMedia::New(peernetworking::RequestMedia *this)
{
}

void sub_1C3B1FA00(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestMedia::MergePartialFromCodedStream(peernetworking::RequestMedia *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1C3B1FBC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::RequestMedia::SerializeWithCachedSizes(peernetworking::RequestMedia *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::RequestMedia::ByteSize(peernetworking::RequestMedia *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::RequestMedia::CheckTypeAndMergeFrom(peernetworking::RequestMedia *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::RequestMedia::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::RequestMedia::IsInitialized(peernetworking::RequestMedia *this)
{
  return 1;
}

void *peernetworking::RequestMedia::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.RequestMedia");
}

peernetworking::Media *peernetworking::Media::Media(peernetworking::Media *this)
{
  *(void *)this = &unk_1F1F25378;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::Media::SharedCtor(this);
  return this;
}

void sub_1C3B1FDE8(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Media::SharedCtor(peernetworking::Media *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3B1FEB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Media::~Media(void **this)
{
  *this = &unk_1F1F25378;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::Media::~Media(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::Media::New(peernetworking::Media *this)
{
}

void sub_1C3B1FFAC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Media::MergePartialFromCodedStream(peernetworking::Media *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_23;
      }
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
LABEL_37:
      }
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      int v12 = (std::string *)*((void *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        uint64_t v13 = 0;
        goto LABEL_36;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        goto LABEL_37;
      }
      int v9 = (std::string *)*((void *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
        goto LABEL_34;
      }
      uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_35;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34; {
    }
      }
  }
LABEL_16:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_35:
  uint64_t v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3B2021C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Media::SerializeWithCachedSizes(peernetworking::Media *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    char v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    char v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Media::ByteSize(peernetworking::Media *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Media::CheckTypeAndMergeFrom(peernetworking::Media *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::Media::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::Media::IsInitialized(peernetworking::Media *this)
{
  return 1;
}

void *peernetworking::Media::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Media");
}

peernetworking::UnavailableMedia *peernetworking::UnavailableMedia::UnavailableMedia(peernetworking::UnavailableMedia *this)
{
  *(void *)this = &unk_1F1F253F0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::UnavailableMedia::SharedCtor(this);
  return this;
}

void sub_1C3B204C4(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::UnavailableMedia::SharedCtor(peernetworking::UnavailableMedia *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3B2058C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::UnavailableMedia::~UnavailableMedia(void **this)
{
  *this = &unk_1F1F253F0;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::UnavailableMedia::~UnavailableMedia(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::UnavailableMedia::New(peernetworking::UnavailableMedia *this)
{
}

void sub_1C3B20684(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::UnavailableMedia::MergePartialFromCodedStream(peernetworking::UnavailableMedia *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1C3B2084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::UnavailableMedia::SerializeWithCachedSizes(peernetworking::UnavailableMedia *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t peernetworking::UnavailableMedia::ByteSize(peernetworking::UnavailableMedia *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::UnavailableMedia::CheckTypeAndMergeFrom(peernetworking::UnavailableMedia *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::UnavailableMedia::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::UnavailableMedia::IsInitialized(peernetworking::UnavailableMedia *this)
{
  return 1;
}

void *peernetworking::UnavailableMedia::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.UnavailableMedia");
}

peernetworking::Invite *peernetworking::Invite::Invite(peernetworking::Invite *this)
{
  *(void *)this = &unk_1F1F25468;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::Invite::SharedCtor(this);
  return this;
}

void sub_1C3B20A6C(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Invite::SharedCtor(peernetworking::Invite *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3B20B38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Invite::~Invite(void **this)
{
  *this = &unk_1F1F25468;
  peernetworking::RequestAttachment::SharedDtor((peernetworking::RequestAttachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::Invite::~Invite(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::Invite::New(peernetworking::Invite *this)
{
}

void sub_1C3B20C30(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Invite::MergePartialFromCodedStream(peernetworking::Invite *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_23;
      }
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
LABEL_37:
      }
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      int v12 = (std::string *)*((void *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12))
      {
LABEL_34:
        uint64_t v13 = 0;
        goto LABEL_36;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        goto LABEL_37;
      }
      int v9 = (std::string *)*((void *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
        goto LABEL_34;
      }
      uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_35;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34; {
    }
      }
  }
LABEL_16:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_35:
  uint64_t v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1C3B20EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Invite::SerializeWithCachedSizes(peernetworking::Invite *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    char v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    char v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Invite::ByteSize(peernetworking::Invite *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Invite::CheckTypeAndMergeFrom(peernetworking::Invite *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::Invite::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::Invite::IsInitialized(peernetworking::Invite *this)
{
  return 1;
}

void *peernetworking::Invite::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Invite");
}

peernetworking::InviteReply *peernetworking::InviteReply::InviteReply(peernetworking::InviteReply *this)
{
  *(void *)this = &unk_1F1F254E0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::InviteReply::SharedCtor(this);
  return this;
}

void sub_1C3B21148(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::InviteReply::SharedCtor(peernetworking::InviteReply *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((unsigned char *)this + 48) = 0;
}

void sub_1C3B21214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::InviteReply::~InviteReply(void **this)
{
  *this = &unk_1F1F254E0;
  peernetworking::ShareInfo::SharedDtor((peernetworking::ShareInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::InviteReply::~InviteReply(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::InviteReply::New(peernetworking::InviteReply *this)
{
}

void sub_1C3B2130C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::InviteReply::MergePartialFromCodedStream(peernetworking::InviteReply *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 16)
        {
          int v12 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_27;
        }
LABEL_23:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_36;
        }
        goto LABEL_20;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_16:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
LABEL_36:
        uint64_t v16 = 1;
        goto LABEL_38;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_37; {
    }
      }
    if (v7 != 10) {
      goto LABEL_23;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
      break;
    }
    uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v11 < v10 && *v11 == 16)
    {
      int v12 = v11 + 1;
      *((void *)a2 + 1) = v12;
LABEL_27:
      unint64_t v20 = 0;
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
          break;
        }
        unint64_t v14 = v20;
        unint64_t v15 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t v14 = *v12;
        unint64_t v15 = (unsigned __int8 *)(v12 + 1);
        *((void *)a2 + 1) = v15;
      }
      *((unsigned char *)this + 48) = v14 != 0;
      *((_DWORD *)this + 8) |= 2u;
      if (v15 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v16 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  uint64_t v16 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1C3B2157C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::InviteReply::SerializeWithCachedSizes(peernetworking::InviteReply *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 48), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t peernetworking::InviteReply::ByteSize(peernetworking::InviteReply *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if (v2)
    {
      uint64_t v4 = *((void *)this + 5);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v9 = v10 + 1;
        int v2 = *((_DWORD *)this + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 2;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      int v3 = v9 + v5;
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::InviteReply::CheckTypeAndMergeFrom(peernetworking::InviteReply *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::InviteReply::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::InviteReply::IsInitialized(peernetworking::InviteReply *this)
{
  return 1;
}

void *peernetworking::InviteReply::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.InviteReply");
}

peernetworking::Identity *peernetworking::Identity::Identity(peernetworking::Identity *this)
{
  *(void *)this = &unk_1F1F25558;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  peernetworking::Identity::SharedCtor(this);
  return this;
}

void sub_1C3B217C8(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void peernetworking::Identity::SharedCtor(peernetworking::Identity *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = v3;
  *((void *)this + 8) = v3;
  *((void *)this + 4) = 0;
}

void sub_1C3B21898(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void peernetworking::Identity::~Identity(void **this)
{
  *this = &unk_1F1F25558;
  peernetworking::Identity::SharedDtor((peernetworking::Identity *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::Identity::~Identity(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::Identity::SharedDtor(peernetworking::Identity *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (peernetworking::Identity *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (peernetworking::Identity *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 7);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (peernetworking::Identity *)MEMORY[0x1C877D640](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 8);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (peernetworking::Identity *)MEMORY[0x1C877D640](v6, 0x1012C40EC159624);
  }
  peernetworking::protobuf_AddDesc_peernetworking_2eproto(this);
}

void peernetworking::Identity::New(peernetworking::Identity *this)
{
}

void sub_1C3B21AE4(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Identity::MergePartialFromCodedStream(peernetworking::Identity *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_15:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_53:
        uint64_t v17 = 1;
        goto LABEL_54;
      }
LABEL_28:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))
      {
LABEL_52:
        uint64_t v17 = 0;
        goto LABEL_54;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_26;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        int v9 = (std::string *)*((void *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
          goto LABEL_52;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_30:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        int v12 = (std::string *)*((void *)this + 6);
        if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v12)) {
          goto LABEL_52;
        }
        BOOL v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_55;
        }
        unint64_t v14 = (std::string *)*((void *)this + 7);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14)) {
          goto LABEL_52;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_44:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_55:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        uint64_t v16 = (std::string *)*((void *)this + 8);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16)) {
          goto LABEL_52;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v17 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 3u:
        if (v7 == 26) {
          goto LABEL_37;
        }
        goto LABEL_26;
      case 4u:
        if (v7 == 34) {
          goto LABEL_44;
        }
LABEL_26:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_28;
        }
        goto LABEL_53;
      default:
        goto LABEL_15;
    }
    break;
  }
LABEL_54:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1C3B21E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::Identity::SerializeWithCachedSizes(peernetworking::Identity *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((void *)this + 6), a2);
  int v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((void *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((void *)this + 8), a2);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    uint64_t v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t peernetworking::Identity::ByteSize(peernetworking::Identity *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_45;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
  uint64_t v17 = *((void *)this + 7);
  int v18 = *(unsigned __int8 *)(v17 + 23);
  char v19 = v18;
  uint64_t v20 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 >= 0x80)
  {
    int v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
    int v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v20 = *(void *)(v17 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v19 = *(unsigned char *)(v17 + 23);
  }
  else
  {
    int v22 = 1;
  }
  if (v19 < 0) {
    int v18 = v20;
  }
  v3 += v22 + v18 + 1;
  if ((v2 & 8) != 0)
  {
LABEL_36:
    uint64_t v23 = *((void *)this + 8);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    char v25 = v24;
    uint64_t v26 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      unint64_t v27 = v26;
    }
    if (v27 >= 0x80)
    {
      int v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
      int v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v26 = *(void *)(v23 + 8);
      char v25 = *(unsigned char *)(v23 + 23);
    }
    else
    {
      int v28 = 1;
    }
    if (v25 < 0) {
      int v24 = v26;
    }
    v3 += v28 + v24 + 1;
  }
LABEL_45:
  if (*((char *)this + 31) < 0) {
    uint64_t v29 = *((void *)this + 2);
  }
  else {
    LODWORD(v29) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v29);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *peernetworking::Identity::CheckTypeAndMergeFrom(peernetworking::Identity *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::Identity::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::Identity::IsInitialized(peernetworking::Identity *this)
{
  return 1;
}

void *peernetworking::Identity::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.Identity");
}

void peernetworking::KeepAlive::~KeepAlive(void **this)
{
  *this = &unk_1F1F255D0;
  peernetworking::protobuf_AddDesc_peernetworking_2eproto((peernetworking *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  peernetworking::KeepAlive::~KeepAlive(this);
  JUMPOUT(0x1C877D640);
}

void peernetworking::KeepAlive::New(peernetworking::KeepAlive *this)
{
}

uint64_t peernetworking::KeepAlive::MergePartialFromCodedStream(peernetworking::KeepAlive *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v10, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9, (google::protobuf::io::ZeroCopyOutputStream *)v10);
  do
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 1)
    {
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
    }
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)TagFallback, (google::protobuf::io::CodedOutputStream *)v9, v3));
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v10);
  return v7;
}

void sub_1C3B22374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t peernetworking::KeepAlive::SerializeWithCachedSizes(peernetworking::KeepAlive *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((char *)this + 31) < 0)
  {
    int v3 = (char *)*((void *)this + 1);
    uint64_t v4 = *((void *)this + 2);
  }
  else
  {
    int v3 = (char *)this + 8;
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v3, v4);
}

uint64_t peernetworking::KeepAlive::ByteSize(peernetworking::KeepAlive *this)
{
  if (*((char *)this + 31) < 0) {
    uint64_t v1 = *((void *)this + 2);
  }
  else {
    uint64_t v1 = *((unsigned __int8 *)this + 31);
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

std::string *peernetworking::KeepAlive::CheckTypeAndMergeFrom(peernetworking::KeepAlive *this, const google::protobuf::MessageLite *lpsrc)
{
  return peernetworking::KeepAlive::MergeFrom(this, lpsrc);
}

uint64_t peernetworking::KeepAlive::IsInitialized(peernetworking::KeepAlive *this)
{
  return 1;
}

void *peernetworking::KeepAlive::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "peernetworking.KeepAlive");
}

uint64_t peernetworking::PeerNetworkMessage::GetCachedSize(peernetworking::PeerNetworkMessage *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Note::GetCachedSize(peernetworking::Note *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::ShareInfo::GetCachedSize(peernetworking::ShareInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestNote::GetCachedSize(peernetworking::RequestNote *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestAttachment::GetCachedSize(peernetworking::RequestAttachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Attachment::GetCachedSize(peernetworking::Attachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::RequestMedia::GetCachedSize(peernetworking::RequestMedia *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Media::GetCachedSize(peernetworking::Media *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::UnavailableMedia::GetCachedSize(peernetworking::UnavailableMedia *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Invite::GetCachedSize(peernetworking::Invite *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::InviteReply::GetCachedSize(peernetworking::InviteReply *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::Identity::GetCachedSize(peernetworking::Identity *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t peernetworking::KeepAlive::GetCachedSize(peernetworking::KeepAlive *this)
{
  return *((unsigned int *)this + 9);
}

void google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New()
{
}

void sub_1C3B22524(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3B22604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const peernetworking::Identity *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<peernetworking::Identity>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<peernetworking::Identity>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)peernetworking::Identity::MergeFrom(*(peernetworking::Identity **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B2274C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3B22E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B22F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL ICProtobufUtilitiesParseArchiveFromNSData<airdrop_document::Document>(google::protobuf::MessageLite *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (char *)[v3 bytes];
  int v5 = ICTTBoundedCheckedCastNSUIntegerToUInt32([v3 length]);
  BOOL v6 = google::protobuf::MessageLite::ParseFromArray(a1, v4, v5);

  return v6;
}

void sub_1C3B22FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id ICProtobufUtilitiesNSDataFromArchive<airdrop_document::Document>(google::protobuf::MessageLite *a1)
{
  int v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CA58]) initWithLength:(*(int (**)(google::protobuf::MessageLite *))(*(void *)a1 + 72))(a1)];
  if ((unint64_t)[v2 length] >= 0xFFFFFFFF) {
    [MEMORY[0x1E4F836F8] handleFailedAssertWithCondition:"[data length] < 4294967295U" functionName:"NSData *ICProtobufUtilitiesNSDataFromArchive(const T &) [T = airdrop_document::Document]" simulateCrash:1 showAlert:0 format:@"Data length greater than 32bit max"];
  }
  id v3 = v2;
  google::protobuf::MessageLite::SerializeToArray(a1, (void *)[v3 mutableBytes], objc_msgSend(v3, "length"));
  return v3;
}

void sub_1C3B230F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B25C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B2671C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3B27638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B288F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B28DF0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B29CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B29D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unsigned char *OUTLINED_FUNCTION_5_1(unsigned char *result, unsigned char *a2)
{
  void *result = 0;
  *a2 = 0;
  return result;
}

void OUTLINED_FUNCTION_8_0(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

__CFString *ICStringFromSyncingApproach(uint64_t a1)
{
  if (a1) {
    return @"FastSync";
  }
  else {
    return @"FullSync";
  }
}

#error "1C3B2AA6C: call analysis failed (funcsize=105)"

void sub_1C3B2B19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B2B56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B2C130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B2C420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B2C7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B3170C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B31BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B320A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void sub_1C3B321F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1C3B33800: call analysis failed (funcsize=139)"

void sub_1C3B36960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B36C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B37134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_15(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return [v0 hash];
}

void OUTLINED_FUNCTION_29(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

void OUTLINED_FUNCTION_30(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_33()
{
  return v0;
}

void sub_1C3B3B4D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B3B6DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B3B844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B3BDE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C0D0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x10B3C40417120EDLL);

  _Unwind_Resume(a1);
}

void sub_1C3B3C1BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::ParagraphStyle::~ParagraphStyle((topotext::ParagraphStyle *)va);
  _Unwind_Resume(a1);
}

void sub_1C3B3C254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C2E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL ICDrawingOrientationIsLandscape(unint64_t a1)
{
  return a1 < 2;
}

void sub_1C3B3C348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C45C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C5A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C7D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3C9D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3CB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3CBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3CC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3CEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

BOOL ICDrawingCommandID::operator<(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 < *(_DWORD *)a2) {
    return 1;
  }
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v5 = [*(id *)(a1 + 8) TTCompare:*(void *)(a2 + 8)];
  if (v5 == -1) {
    return 1;
  }
  return !v5 && *(_DWORD *)(a1 + 16) < *(_DWORD *)(a2 + 16);
}

void sub_1C3B3D168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

BOOL ICDrawingCommandID::operator<=(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && ([*(id *)(a1 + 8) isEqual:*(void *)(a2 + 8)] & 1) != 0)
  {
    return 1;
  }
  return ICDrawingCommandID::operator<(a1, a2);
}

void sub_1C3B3D2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3D38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3D438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3D5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3D8A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B3DCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::DeleteEmptyString(google::protobuf::internal *this)
{
  if (google::protobuf::internal::empty_string_)
  {
    if (*(char *)(google::protobuf::internal::empty_string_ + 23) < 0) {
      operator delete(*(void **)google::protobuf::internal::empty_string_);
    }
    JUMPOUT(0x1C877D640);
  }
}

void sub_1C3B3FE18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4070C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v4, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3B40904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B40F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B41004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B41090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B41120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B411AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4125C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4136C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B41410(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1C3B4152C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Document_DocObject>::New()
{
}

void sub_1C3B416C8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Document_CustomObject_MapEntry>::New()
{
}

void sub_1C3B4172C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40078F06BDLL);
  _Unwind_Resume(a1);
}

void sub_1C3B42090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCNMutablePostalAddressClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("CNMutablePostalAddress");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNMutablePostalAddressClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCNMutablePostalAddressClass_block_invoke_cold_1();
    ContactsLibrary();
  }
}

void ContactsLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __ContactsLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E64A6678;
    uint64_t v3 = 0;
    ContactsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ContactsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  ContactsLibrary();
  Class result = objc_getClass("CNPostalAddressFormatter");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNPostalAddressFormatterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)__getCNPostalAddressFormatterClass_block_invoke_cold_1();
    return (Class)+[ICCipherV2 standardWrappedKeyLength];
  }
  return result;
}

void sub_1C3B438B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B43AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B448E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_1C3B44C2C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B44E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B468AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B46B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B46CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B474B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B4778C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B480A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B48140(_Unwind_Exception *a1)
{
  SEL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3B48220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4830C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B48420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4874C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B48844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock_ReplicaClock>::New()
{
}

void sub_1C3B488A8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40110CF19CLL);
  _Unwind_Resume(a1);
}

void sub_1C3B48C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B491C4(_Unwind_Exception *a1)
{
  char v7 = v2;

  _Unwind_Resume(a1);
}

__CFString *NSStringFromAccountDataLockedNotesMode(int a1)
{
  uint64_t v1 = @"Unknown";
  if (a1 == 1) {
    uint64_t v1 = @"CustomPassword";
  }
  if (a1 == 2) {
    return @"DevicePassword";
  }
  else {
    return v1;
  }
}

void sub_1C3B4B070(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1C3B4B18C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B4BB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4BC34(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1C3B4BDE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4BE68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4BF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1C3B4C1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);

  _Unwind_Resume(a1);
}

void sub_1C3B4C384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B4CCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B50864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  objc_destroyWeak(v34);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v35 - 168), 8);
  _Block_object_dispose((const void *)(v35 - 136), 8);
  objc_destroyWeak((id *)(v35 - 104));
  _Unwind_Resume(a1);
}

void sub_1C3B51ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B55C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3B55DA0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B56470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B57510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_1C3B58480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B58B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void sub_1C3B59278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id obj, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_1C3B597D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ICMainContext()
{
  uint64_t v0 = +[ICNoteContext sharedContext];
  uint64_t v1 = [v0 managedObjectContext];

  return v1;
}

void OUTLINED_FUNCTION_9_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C3B5AF14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5AFB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B43C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3B5B594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B5B82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5B904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BBE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BDA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5BF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5C194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5C2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5C6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5CA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5CD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Dictionary_Element>::New()
{
}

void sub_1C3B5CF08(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

void sub_1C3B5CF9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5D1F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5D2F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5D5A0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3B5D81C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5D914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5DA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5DB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1C3B5DCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5DF0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5E194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::OneOf_Element>::New()
{
}

void sub_1C3B5E2B8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void sub_1C3B5F3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B5F8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B5FAF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B5FD7C(_Unwind_Exception *a1, void *a2, ...)
{
  va_start(va, a2);
  drawing::Rectangle::~Rectangle((drawing::Rectangle *)va);

  _Unwind_Resume(a1);
}

void sub_1C3B6012C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x1093C405ACC521ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B602D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void google::protobuf::internal::GenericTypeHandler<drawing::Command>::New()
{
}

void sub_1C3B6033C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40629AD421);
  _Unwind_Resume(a1);
}

void sub_1C3B60420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B61D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B62164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B62468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B62BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B62F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B64750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B64D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B65024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B654CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B657C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B668A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B66A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B67678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B6816C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B68248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B6837C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v11, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B68420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B684C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B6856C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B68640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B6870C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B687A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B68880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B68BEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

__CFString *ICStringForDocumentMergeControllingReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6) {
    return @"Selection";
  }
  else {
    return off_1E64A7148[a1 - 1];
  }
}

void sub_1C3B692C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B6937C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B69484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B69544(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::Todo::~Todo((topotext::Todo *)va);
  _Unwind_Resume(a1);
}

void sub_1C3B6A94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B6C194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3B6CE0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B6D074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B6F890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1C3B71524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B718DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Unwind_Resume(a1);
}

Class __getNLEmbeddingClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!NaturalLanguageLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    void v3[2] = (void *)3221225472;
    v3[3] = __NaturalLanguageLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E64A7370;
    uint64_t v5 = 0;
    NaturalLanguageLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!NaturalLanguageLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getNLEmbeddingClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("NLEmbedding");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getNLEmbeddingClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __NaturalLanguageLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  NaturalLanguageLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getkNLSearchParserContextIdentifierKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "kNLSearchParserContextIdentifierKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getkNLSearchParserContextIdentifierKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t NLPLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!NLPLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    void v3[2] = 3221225472;
    v3[3] = __NLPLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E64A7388;
    uint64_t v5 = 0;
    NLPLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = NLPLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!NLPLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __NLPLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  NLPLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getNLSearchParserCreateSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParserCreate");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParserCreateSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getNLSearchParserSetStringSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParserSetString");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParserSetStringSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getNLSearchParserCopyParseWithOptionsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParserCopyParseWithOptions");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParserCopyParseWithOptionsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getNLSearchParseCandidateCopyDescriptionSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParseCandidateCopyDescription");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParseCandidateCopyDescriptionSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getNLSearchParseCandidateCopyRankTermsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParseCandidateCopyRankTerms");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParseCandidateCopyRankTermsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getNLSearchParseCandidateCopyAttributedInputSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParseCandidateCopyAttributedInput");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParseCandidateCopyAttributedInputSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                           + 24);
  return result;
}

void *__getNLSearchParseGetConfidenceSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)NLPLibrary();
  uint64_t result = dlsym(v2, "NLSearchParseGetConfidence");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getNLSearchParseGetConfidenceSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t OUTLINED_FUNCTION_4_5(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)uint64_t result = a4;
  *(void *)(result + 4) = a2;
  *(_WORD *)(result + 12) = 2048;
  *(void *)(result + 14) = a3;
  return result;
}

uint64_t topotext::protobuf_ShutdownFile_topotext_2eproto(topotext *this)
{
  if (topotext::String::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::String::default_instance_ + 8))(topotext::String::default_instance_);
  }
  if (topotext::VectorTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp::default_instance_ + 8))(topotext::VectorTimestamp::default_instance_);
  }
  if (topotext::VectorTimestamp_Clock::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp_Clock::default_instance_ + 8))(topotext::VectorTimestamp_Clock::default_instance_);
  }
  if (topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_ + 8))(topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_);
  }
  if (topotext::CharID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::CharID::default_instance_ + 8))(topotext::CharID::default_instance_);
  }
  if (topotext::Substring::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Substring::default_instance_ + 8))(topotext::Substring::default_instance_);
  }
  if (topotext::Selection::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Selection::default_instance_ + 8))(topotext::Selection::default_instance_);
  }
  if (topotext::Selection_Range::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Selection_Range::default_instance_ + 8))(topotext::Selection_Range::default_instance_);
  }
  if (topotext::AttributeRun::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::AttributeRun::default_instance_ + 8))(topotext::AttributeRun::default_instance_);
  }
  if (topotext::Font::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Font::default_instance_ + 8))(topotext::Font::default_instance_);
  }
  if (topotext::ParagraphStyle::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::ParagraphStyle::default_instance_ + 8))(topotext::ParagraphStyle::default_instance_);
  }
  if (topotext::AttachmentInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::AttachmentInfo::default_instance_ + 8))(topotext::AttachmentInfo::default_instance_);
  }
  if (topotext::Attachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Attachment::default_instance_ + 8))(topotext::Attachment::default_instance_);
  }
  if (topotext::Location::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Location::default_instance_ + 8))(topotext::Location::default_instance_);
  }
  if (topotext::Media::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Media::default_instance_ + 8))(topotext::Media::default_instance_);
  }
  if (topotext::PreviewImage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::PreviewImage::default_instance_ + 8))(topotext::PreviewImage::default_instance_);
  }
  if (topotext::Todo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Todo::default_instance_ + 8))(topotext::Todo::default_instance_);
  }
  if (topotext::Color::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Color::default_instance_ + 8))(topotext::Color::default_instance_);
  }
  if (topotext::BoxedValue::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::BoxedValue::default_instance_ + 8))(topotext::BoxedValue::default_instance_);
  }
  uint64_t result = topotext::WallClockMergeableValue::default_instance_;
  if (topotext::WallClockMergeableValue::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)topotext::WallClockMergeableValue::default_instance_ + 8);
    return v2();
  }
  return result;
}

double topotext::VectorTimestamp::VectorTimestamp(topotext::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1F25F08;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double topotext::VectorTimestamp_Clock_ReplicaClock::VectorTimestamp_Clock_ReplicaClock(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  *(void *)this = &unk_1F1F25E18;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double topotext::CharID::CharID(topotext::CharID *this)
{
  *(void *)this = &unk_1F1F25F80;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double topotext::Substring::Substring(topotext::Substring *this)
{
  *(void *)this = &unk_1F1F25FF8;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(void *)((char *)this + 53) = 0;
  return result;
}

double topotext::Selection_Range::Selection_Range(topotext::Selection_Range *this)
{
  *(void *)this = &unk_1F1F26070;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double topotext::Color::Color(topotext::Color *this)
{
  *(void *)this = &unk_1F1F26598;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

std::string *topotext::String::MergeFrom(topotext::String *this, const topotext::String *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 405);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((topotext::String *)((char *)this + 48), (const topotext::String *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((topotext::String *)((char *)this + 80), (const topotext::String *)((char *)a2 + 80));
  uint64_t v5 = (topotext *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((topotext::String *)((char *)this + 104), (const topotext::String *)((char *)a2 + 104));
  LOBYTE(v6) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v6)
  {
    if (*((unsigned char *)a2 + 32))
    {
      char v7 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v8 = (std::string *)*((void *)this + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      uint64_t v5 = (topotext *)std::string::operator=(v8, v7);
      int v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)this + 8) |= 4u;
      uint64_t v9 = (topotext::VectorTimestamp *)*((void *)this + 9);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = (const topotext::VectorTimestamp *)*((void *)a2 + 9);
      if (!v10)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(v5);
        uint64_t v10 = *(const topotext::VectorTimestamp **)(topotext::String::default_instance_ + 72);
      }
      topotext::VectorTimestamp::MergeFrom(v9, v10);
    }
  }
  char v13 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v12 = (char *)a2 + 8;
  uint64_t v11 = v13;
  int v14 = v12[23];
  if (v14 >= 0) {
    unint64_t v15 = v12;
  }
  else {
    unint64_t v15 = v11;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = v12[23];
  }
  else {
    std::string::size_type v16 = *((void *)v12 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v15, v16);
}

void sub_1C3B73C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::default_instance(topotext::String *this)
{
  return topotext::String::default_instance_;
}

void topotext::String::New(topotext::String *this)
{
}

void sub_1C3B73CD8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp::Clear(topotext::VectorTimestamp *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::String::SerializeWithCachedSizes(topotext::String *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  if (*((unsigned char *)this + 32)) {
    this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 5), a2);
  }
  if (*((int *)v3 + 14) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)v3 + 48, v4);
      this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)v3 + 14));
  }
  if ((*((unsigned char *)v3 + 32) & 4) != 0)
  {
    uint64_t v6 = *((void *)v3 + 9);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v6 = *(void *)(topotext::String::default_instance_ + 72);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v6, a2);
  }
  if (*((int *)v3 + 22) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)v3 + 80, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(5, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v3 + 104, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(6, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 28));
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v11 = (char *)*((void *)v3 + 1);
    uint64_t v12 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v11 = (char *)v3 + 8;
    LODWORD(v12) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v11, v12);
}

uint64_t topotext::String::ByteSize(topotext::String *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 4) != 0)
  {
LABEL_15:
    uint64_t v11 = (topotext::VectorTimestamp *)*((void *)this + 9);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      uint64_t v11 = *(topotext::VectorTimestamp **)(topotext::String::default_instance_ + 72);
    }
    uint64_t v12 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
  }
LABEL_21:
  int v15 = *((_DWORD *)this + 14);
  int v16 = v15 + v3;
  if (v15 >= 1)
  {
    int v17 = 0;
    do
    {
      char v18 = (topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)this + 48, v17);
      char v19 = (google::protobuf::io::CodedOutputStream *)topotext::Substring::ByteSize(v18);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v16 += v20 + v21;
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 14));
  }
  int v22 = *((_DWORD *)this + 22);
  int v23 = v22 + v16;
  if (v22 >= 1)
  {
    int v24 = 0;
    do
    {
      char v25 = (topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)this + 80, v24);
      uint64_t v26 = (google::protobuf::io::CodedOutputStream *)topotext::AttributeRun::ByteSize(v25);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      }
      else {
        int v28 = 1;
      }
      v23 += v27 + v28;
      ++v24;
    }
    while (v24 < *((_DWORD *)this + 22));
  }
  int v29 = *((_DWORD *)this + 28);
  int v30 = v29 + v23;
  if (v29 >= 1)
  {
    int v31 = 0;
    do
    {
      uint64_t v32 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 104, v31);
      unint64_t v33 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v32);
      int v34 = (int)v33;
      if (v33 >= 0x80) {
        int v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      }
      else {
        int v35 = 1;
      }
      v30 += v34 + v35;
      ++v31;
    }
    while (v31 < *((_DWORD *)this + 28));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v36 = *((void *)this + 2);
  }
  else {
    LODWORD(v36) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v30 + v36);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::String::CheckTypeAndMergeFrom(topotext::String *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::String::MergeFrom(this, lpsrc);
}

std::string *topotext::VectorTimestamp::MergeFrom(topotext::VectorTimestamp *this, const topotext::VectorTimestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1073);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((topotext::VectorTimestamp *)((char *)this + 40), (const topotext::VectorTimestamp *)((char *)a2 + 40));
  uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  char v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3B741F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *topotext::String::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.String");
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const topotext::VectorTimestamp_Clock_ReplicaClock *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 649);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  std::string::size_type v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  int v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    char v12 = v9;
  }
  else {
    char v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1C3B742F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock_ReplicaClock::New(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    int v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    int v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::CheckTypeAndMergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::IsInitialized(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return 1;
}

void *topotext::VectorTimestamp_Clock_ReplicaClock::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock.ReplicaClock");
}

std::string *topotext::VectorTimestamp_Clock::MergeFrom(topotext::VectorTimestamp_Clock *this, const topotext::VectorTimestamp_Clock *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 881);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((topotext::VectorTimestamp_Clock *)((char *)this + 48), (const topotext::VectorTimestamp_Clock *)((char *)a2 + 48));
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    int v11 = v8;
  }
  else {
    int v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B74660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock::New(topotext::VectorTimestamp_Clock *this)
{
}

void sub_1C3B746BC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::Clear(topotext::VectorTimestamp_Clock *this)
{
  if (*((unsigned char *)this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v2 = *((void *)this + 5);
    if (v2 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::VectorTimestamp_Clock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    int v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    int v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp_Clock::ByteSize(topotext::VectorTimestamp_Clock *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  int v10 = *((_DWORD *)this + 14);
  int v11 = v10 + v2;
  if (v10 >= 1)
  {
    int v12 = 0;
    do
    {
      std::string::size_type v13 = (topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v12);
      char v14 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(v13);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v16 = 1;
      }
      v11 += v15 + v16;
      ++v12;
    }
    while (v12 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v11 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock::CheckTypeAndMergeFrom(topotext::VectorTimestamp_Clock *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp_Clock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock::IsInitialized(topotext::VectorTimestamp_Clock *this)
{
  return 1;
}

void *topotext::VectorTimestamp_Clock::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock");
}

void topotext::VectorTimestamp::New(topotext::VectorTimestamp *this)
{
}

uint64_t topotext::VectorTimestamp::SerializeWithCachedSizes(topotext::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp::ByteSize(topotext::VectorTimestamp *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (topotext::VectorTimestamp_Clock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp::CheckTypeAndMergeFrom(topotext::VectorTimestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp::IsInitialized(topotext::VectorTimestamp *this)
{
  return 1;
}

void *topotext::VectorTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp");
}

std::string *topotext::CharID::MergeFrom(topotext::CharID *this, const topotext::CharID *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1303);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  int v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  uint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    int v12 = v9;
  }
  else {
    int v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1C3B74CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::CharID::New(topotext::CharID *this)
{
}

uint64_t topotext::CharID::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::CharID::SerializeWithCachedSizes(topotext::CharID *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    int v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    int v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::CharID::ByteSize(topotext::CharID *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::CharID::CheckTypeAndMergeFrom(topotext::CharID *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::CharID::MergeFrom(this, lpsrc);
}

uint64_t topotext::CharID::IsInitialized(topotext::CharID *this)
{
  return 1;
}

void *topotext::CharID::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.CharID");
}

std::string *topotext::Substring::MergeFrom(topotext::Substring *this, const topotext::Substring *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1654);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 729);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  int v6 = *((_DWORD *)a2 + 18);
  if (v6)
  {
    google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v3 + 64, *((_DWORD *)v3 + 18) + v6);
    this = (topotext::Substring *)memcpy((void *)(*((void *)v3 + 8) + 4 * *((int *)v3 + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)v3 + 18) += *((_DWORD *)a2 + 18);
  }
  LOBYTE(v7) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v7) {
    goto LABEL_11;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    int v18 = *((_DWORD *)a2 + 14);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 14) = v18;
    int v7 = *((_DWORD *)a2 + 8);
    if ((v7 & 4) == 0)
    {
LABEL_9:
      if ((v7 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_24;
  }
  *((_DWORD *)v3 + 8) |= 1u;
  int v16 = (topotext::CharID *)*((void *)v3 + 5);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = (const topotext::CharID *)*((void *)a2 + 5);
  if (!v17)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v17 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 40);
  }
  this = (topotext::Substring *)topotext::CharID::MergeFrom(v16, v17);
  int v7 = *((_DWORD *)a2 + 8);
  if ((v7 & 2) != 0) {
    goto LABEL_23;
  }
LABEL_8:
  if ((v7 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_24:
  *((_DWORD *)v3 + 8) |= 4u;
  char v19 = (topotext::CharID *)*((void *)v3 + 6);
  if (!v19) {
    operator new();
  }
  int v20 = (const topotext::CharID *)*((void *)a2 + 6);
  if (!v20)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    int v20 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 48);
  }
  topotext::CharID::MergeFrom(v19, v20);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_10:
    char v8 = *((unsigned char *)a2 + 60);
    *((_DWORD *)v3 + 8) |= 8u;
    *((unsigned char *)v3 + 60) = v8;
  }
LABEL_11:
  int v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    std::string::size_type v13 = v10;
  }
  else {
    std::string::size_type v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v13, v14);
}

void sub_1C3B751B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Substring::default_instance(topotext::Substring *this)
{
  return topotext::Substring::default_instance_;
}

void topotext::Substring::New(topotext::Substring *this)
{
}

uint64_t topotext::Substring::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    *(unsigned char *)(this + 60) = 0;
    *(_DWORD *)(this + 56) = 0;
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 40);
      if (v2)
      {
        *(void *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(unsigned char **)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v2 + 8) = 0;
          *(unsigned char *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 48);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v13 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v12 = 0;
      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      unsigned int v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v7);
  return 1;
}

uint64_t topotext::Substring::SerializeWithCachedSizes(topotext::Substring *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    uint64_t v12 = *((void *)this + 5);
    if (!v12)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v12 = *(void *)(topotext::Substring::default_instance_ + 40);
    }
    this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v12, a2);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 14), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v13 = *((void *)v5 + 6);
  if (!v13)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v13 = *(void *)(topotext::Substring::default_instance_ + 48);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(3, v13, a2);
  if ((*((_DWORD *)v5 + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)v5 + 60), a2, a4);
LABEL_6:
  if (*((int *)v5 + 18) >= 1)
  {
    int v7 = 0;
    do
    {
      char v8 = (unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)v5 + 64, v7);
      google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *v8, a2, v9);
      ++v7;
    }
    while (v7 < *((_DWORD *)v5 + 18));
  }
  if (*((char *)v5 + 31) < 0)
  {
    unsigned int v10 = (char *)*((void *)v5 + 1);
    uint64_t v11 = *((void *)v5 + 2);
  }
  else
  {
    unsigned int v10 = (char *)v5 + 8;
    LODWORD(v11) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Substring::ByteSize(topotext::Substring *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_26;
  }
  if (*((unsigned char *)this + 32))
  {
    unsigned int v5 = (topotext::CharID *)*((void *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      unsigned int v5 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 40);
    }
    int v6 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v5);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    }
    else {
      int v8 = 1;
    }
    int v3 = v7 + v8 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_12:
    int v9 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v9 >= 0x80)
    {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v10 = 2;
    }
    v3 += v10;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = (topotext::CharID *)*((void *)this + 6);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      uint64_t v11 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 48);
    }
    uint64_t v12 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  if ((v2 & 8) != 0) {
    int v4 = v3 + 2;
  }
  else {
    int v4 = v3;
  }
LABEL_26:
  int v15 = *((_DWORD *)this + 18);
  if (v15 < 1)
  {
    int v17 = 0;
  }
  else
  {
    int v16 = 0;
    int v17 = 0;
    do
    {
      int v18 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)this + 64, v16);
      if (v18 >= 0x80) {
        int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      }
      else {
        int v19 = 1;
      }
      v17 += v19;
      ++v16;
      int v15 = *((_DWORD *)this + 18);
    }
    while (v16 < v15);
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v17 + v4 + v15 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Substring::CheckTypeAndMergeFrom(topotext::Substring *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Substring::MergeFrom(this, lpsrc);
}

uint64_t topotext::Substring::IsInitialized(topotext::Substring *this)
{
  return 1;
}

void *topotext::Substring::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Substring");
}

BOOL topotext::Selection_Affinity_IsValid(topotext *this)
{
  return this < 2;
}

std::string *topotext::Selection_Range::MergeFrom(topotext::Selection_Range *this, const topotext::Selection_Range *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 1924);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (topotext::CharID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const topotext::CharID *)*((void *)a2 + 5);
      if (!v7)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v7 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
      }
      this = (topotext::Selection_Range *)topotext::CharID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      int v8 = (topotext::CharID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const topotext::CharID *)*((void *)a2 + 6);
      if (!v9)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v9 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
      }
      topotext::CharID::MergeFrom(v8, v9);
    }
  }
  uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3B7594C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection_Range::~Selection_Range(void **this)
{
  *this = &unk_1F1F26070;
  topotext::Selection_Range::SharedDtor((topotext::Selection_Range *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Selection_Range::~Selection_Range(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Selection_Range::SharedDtor(topotext::Selection_Range *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Selection_Range *)topotext::Selection_Range::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t topotext::Selection_Range::default_instance(topotext::Selection_Range *this)
{
  return topotext::Selection_Range::default_instance_;
}

void topotext::Selection_Range::New(topotext::Selection_Range *this)
{
}

uint64_t topotext::Selection_Range::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 40);
      if (v2)
      {
        *(void *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(unsigned char **)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v2 + 8) = 0;
          *(unsigned char *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 48);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Selection_Range::MergePartialFromCodedStream(topotext::Selection_Range *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (topotext::CharID *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!topotext::CharID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      int v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (topotext::CharID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !topotext::CharID::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3B75F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection_Range::SerializeWithCachedSizes(topotext::Selection_Range *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v5 = *(void *)(topotext::Selection_Range::default_instance_ + 40);
    }
    this = (topotext::Selection_Range *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v6 = *(void *)(topotext::Selection_Range::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Selection_Range::ByteSize(topotext::Selection_Range *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (topotext::CharID *)*((void *)this + 5);
  if (!v3)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    uint64_t v3 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (topotext::CharID *)*((void *)this + 6);
    if (!v7)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      unint64_t v7 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection_Range::CheckTypeAndMergeFrom(topotext::Selection_Range *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Selection_Range::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection_Range::IsInitialized(topotext::Selection_Range *this)
{
  return 1;
}

void *topotext::Selection_Range::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection.Range");
}

std::string *topotext::Selection::MergeFrom(topotext::Selection *this, const topotext::Selection *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 2186);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((topotext::Selection *)((char *)this + 40), (const topotext::Selection *)((char *)a2 + 40));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((topotext::Selection *)((char *)this + 64), (const topotext::Selection *)((char *)a2 + 64));
  if ((*((unsigned char *)a2 + 32) & 4) != 0)
  {
    unsigned int v5 = *((_DWORD *)a2 + 22);
    if (v5 >= 2) {
      topotext::Selection::MergeFrom();
    }
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 22) = v5;
  }
  uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v7 = (char *)a2 + 8;
  int v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1C3B76250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection::~Selection(topotext::Selection *this)
{
  *(void *)this = &unk_1F1F260E8;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 10);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  topotext::Selection::~Selection(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Selection::New(topotext::Selection *this)
{
}

void sub_1C3B76364(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40848840D4);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::Clear(topotext::Selection *this)
{
  *((_DWORD *)this + 22) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 64);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::Selection::MergePartialFromCodedStream(topotext::Selection *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v34, (uint64_t)this + 8);
  uint64_t TagFallback = (uint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v33, (google::protobuf::io::ZeroCopyOutputStream *)v34);
  do
  {
    while (1)
    {
LABEL_2:
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 1)
      {
        uint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v7 = *v6;
        *((_DWORD *)a2 + 8) = v7;
        *((void *)a2 + 1) = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
      }
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v8 != 18)
        {
LABEL_31:
          if (!v8 || (v8 & 7) == 4) {
            goto LABEL_67;
          }
          goto LABEL_33;
        }
        while (1)
        {
          int v18 = *((_DWORD *)this + 19);
          uint64_t v19 = *((int *)this + 18);
          if ((int)v19 >= v18)
          {
            if (v18 == *((_DWORD *)this + 20)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 64, v18 + 1);
            }
            operator new();
          }
          uint64_t v20 = *((void *)this + 8);
          *((_DWORD *)this + 18) = v19 + 1;
          int v21 = *(topotext::Selection_Range **)(v20 + 8 * v19);
          unsigned int v35 = 0;
          int v22 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35)) {
              goto LABEL_66;
            }
          }
          else
          {
            unsigned int v35 = *v22;
            *((void *)a2 + 1) = v22 + 1;
          }
          int v23 = *((_DWORD *)a2 + 14);
          int v24 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v23 + 1;
          if (v23 >= v24
            || (int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35),
                !topotext::Selection_Range::MergePartialFromCodedStream(v21, a2))
            || !*((unsigned char *)a2 + 36))
          {
LABEL_66:
            uint64_t v31 = 0;
            goto LABEL_68;
          }
          uint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v25);
          int v26 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v26, 1);
          int v28 = v26 - 1;
          if (v28 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v28;
          }
          int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
          if ((unint64_t)v14 >= v17) {
            break;
          }
          int v29 = *v14;
          if (v29 != 18)
          {
            if (v29 != 24) {
              goto LABEL_2;
            }
            BOOL v16 = (char *)(v14 + 1);
            *((void *)a2 + 1) = v16;
            goto LABEL_54;
          }
LABEL_35:
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else if (v9 == 1)
      {
        if (v8 != 10) {
          goto LABEL_31;
        }
        while (1)
        {
          int v11 = *((_DWORD *)this + 13);
          uint64_t v12 = *((int *)this + 12);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 14)) {
              uint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v11 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v13 = *((void *)this + 5);
          *((_DWORD *)this + 12) = v12 + 1;
          uint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *(std::string **)(v13 + 8 * v12));
          if (!TagFallback) {
            goto LABEL_66;
          }
          int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v15 = *v14;
          if (v15 != 10)
          {
            if (v15 != 18) {
              goto LABEL_2;
            }
            goto LABEL_35;
          }
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else
      {
LABEL_11:
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
LABEL_67:
          uint64_t v31 = 1;
          goto LABEL_68;
        }
LABEL_33:
        uint64_t TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v33, v5);
        if ((TagFallback & 1) == 0) {
          goto LABEL_66;
        }
      }
    }
    if (v8 != 24) {
      goto LABEL_31;
    }
    BOOL v16 = (char *)*((void *)a2 + 1);
    unint64_t v17 = *((void *)a2 + 2);
LABEL_54:
    unsigned int v35 = 0;
    if ((unint64_t)v16 >= v17 || *v16 < 0)
    {
      uint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
      if ((TagFallback & 1) == 0) {
        goto LABEL_66;
      }
      unsigned int v30 = v35;
    }
    else
    {
      unsigned int v30 = *v16;
      *((void *)a2 + 1) = v16 + 1;
    }
    if (v30 > 1)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v33, v8);
      uint64_t TagFallback = google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v33, v30);
    }
    else
    {
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 22) = v30;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t v31 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_68:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v33);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v34);
  return v31;
}

void sub_1C3B767D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::SerializeWithCachedSizes(topotext::Selection *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteBytes(1, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((int *)this + 18) >= 1)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v8);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)this + 18));
  }
  if ((*((unsigned char *)this + 32) & 4) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 22), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    BOOL v10 = (char *)*((void *)this + 1);
    uint64_t v11 = *((void *)this + 2);
  }
  else
  {
    BOOL v10 = (char *)this + 8;
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Selection::ByteSize(topotext::Selection *this)
{
  if ((*((unsigned char *)this + 32) & 4) != 0)
  {
    uint64_t v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v3 & 0x80000000) != 0)
    {
      int v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      char v9 = v8;
      uint64_t v10 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11 >= 0x80)
      {
        int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
        int v8 = *(unsigned __int8 *)(v7 + 23);
        uint64_t v10 = *(void *)(v7 + 8);
        char v9 = *(unsigned char *)(v7 + 23);
      }
      else
      {
        int v12 = 1;
      }
      if (v9 < 0) {
        int v8 = v10;
      }
      v5 += v12 + v8;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  int v13 = *((_DWORD *)this + 18);
  int v14 = v13 + v5;
  if (v13 >= 1)
  {
    int v15 = 0;
    do
    {
      BOOL v16 = (topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v15);
      unint64_t v17 = (google::protobuf::io::CodedOutputStream *)topotext::Selection_Range::ByteSize(v16);
      int v18 = (int)v17;
      if (v17 >= 0x80) {
        int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v19 = 1;
      }
      v14 += v18 + v19;
      ++v15;
    }
    while (v15 < *((_DWORD *)this + 18));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v14 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection::CheckTypeAndMergeFrom(topotext::Selection *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Selection::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection::IsInitialized(topotext::Selection *this)
{
  return 1;
}

void *topotext::Selection::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection");
}

BOOL topotext::AttributeRun_WritingDirection_IsValid(topotext *this)
{
  return this < 5;
}

std::string *topotext::AttributeRun::MergeFrom(topotext::AttributeRun *this, const topotext::AttributeRun *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v34, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 2865);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v34, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v33, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v34[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_DWORD *)v3 + 12) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v7 = (topotext::ParagraphStyle *)*((void *)v3 + 5);
      if (!v7) {
        operator new();
      }
      int v8 = (const topotext::ParagraphStyle *)*((void *)a2 + 5);
      if (!v8)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v8 = *(const topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
      }
      this = (topotext::AttributeRun *)topotext::ParagraphStyle::MergeFrom(v7, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      *((_DWORD *)v3 + 8) |= 4u;
      char v9 = (topotext::Font *)*((void *)v3 + 7);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = (const topotext::Font *)*((void *)a2 + 7);
      if (!v10)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        uint64_t v10 = *(const topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
      }
      this = (topotext::AttributeRun *)topotext::Font::MergeFrom(v9, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      int v11 = *((_DWORD *)a2 + 13);
      *((_DWORD *)v3 + 8) |= 8u;
      *((_DWORD *)v3 + 13) = v11;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 0x10) == 0)
      {
LABEL_20:
        if ((v5 & 0x20) == 0) {
          goto LABEL_21;
        }
        goto LABEL_26;
      }
    }
    else if ((v5 & 0x10) == 0)
    {
      goto LABEL_20;
    }
    int v12 = *((_DWORD *)a2 + 16);
    *((_DWORD *)v3 + 8) |= 0x10u;
    *((_DWORD *)v3 + 16) = v12;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x20) == 0)
    {
LABEL_21:
      if ((v5 & 0x40) == 0) {
        goto LABEL_22;
      }
      goto LABEL_27;
    }
LABEL_26:
    int v13 = *((_DWORD *)a2 + 17);
    *((_DWORD *)v3 + 8) |= 0x20u;
    *((_DWORD *)v3 + 17) = v13;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x40) == 0)
    {
LABEL_22:
      if ((v5 & 0x80) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
LABEL_27:
    int v14 = *((_DWORD *)a2 + 20);
    *((_DWORD *)v3 + 8) |= 0x40u;
    *((_DWORD *)v3 + 20) = v14;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x80) == 0) {
      goto LABEL_32;
    }
LABEL_28:
    int v15 = (const std::string *)*((void *)a2 + 9);
    *((_DWORD *)v3 + 8) |= 0x80u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    BOOL v16 = (std::string *)*((void *)v3 + 9);
    if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    this = (topotext::AttributeRun *)std::string::operator=(v16, v15);
    int v5 = *((_DWORD *)a2 + 8);
  }
LABEL_32:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_59;
  }
  if ((v5 & 0x100) != 0)
  {
    *((_DWORD *)v3 + 8) |= 0x100u;
    unint64_t v17 = (topotext::Color *)*((void *)v3 + 11);
    if (!v17) {
      operator new();
    }
    int v18 = (const topotext::Color *)*((void *)a2 + 11);
    if (!v18)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      int v18 = *(const topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
    }
    this = (topotext::AttributeRun *)topotext::Color::MergeFrom(v17, v18);
    int v5 = *((_DWORD *)a2 + 8);
  }
  if ((v5 & 0x200) != 0)
  {
    unsigned int v19 = *((_DWORD *)a2 + 21);
    if (v19 >= 5) {
      topotext::AttributeRun::MergeFrom();
    }
    *((_DWORD *)v3 + 8) |= 0x200u;
    *((_DWORD *)v3 + 21) = v19;
    int v5 = *((_DWORD *)a2 + 8);
  }
  if ((v5 & 0x400) != 0)
  {
    *((_DWORD *)v3 + 8) |= 0x400u;
    uint64_t v20 = (topotext::AttachmentInfo *)*((void *)v3 + 12);
    if (!v20) {
      operator new();
    }
    int v21 = (const topotext::AttachmentInfo *)*((void *)a2 + 12);
    if (!v21)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      int v21 = *(const topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 96);
    }
    this = (topotext::AttributeRun *)topotext::AttachmentInfo::MergeFrom(v20, v21);
    int v5 = *((_DWORD *)a2 + 8);
  }
  if ((v5 & 0x800) != 0)
  {
    uint64_t v22 = *((void *)a2 + 13);
    *((_DWORD *)v3 + 8) |= 0x800u;
    *((void *)v3 + 13) = v22;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x1000) == 0)
    {
LABEL_50:
      if ((v5 & 0x2000) == 0) {
        goto LABEL_59;
      }
      goto LABEL_54;
    }
  }
  else if ((v5 & 0x1000) == 0)
  {
    goto LABEL_50;
  }
  int v23 = *((_DWORD *)a2 + 30);
  *((_DWORD *)v3 + 8) |= 0x1000u;
  *((_DWORD *)v3 + 30) = v23;
  if ((*((_DWORD *)a2 + 8) & 0x2000) == 0) {
    goto LABEL_59;
  }
LABEL_54:
  *((_DWORD *)v3 + 8) |= 0x2000u;
  int v24 = (topotext::AttachmentInfo *)*((void *)v3 + 14);
  if (!v24) {
    operator new();
  }
  int v25 = (const topotext::AttachmentInfo *)*((void *)a2 + 14);
  if (!v25)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    int v25 = *(const topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 112);
  }
  topotext::AttachmentInfo::MergeFrom(v24, v25);
LABEL_59:
  int v28 = (const std::string::value_type *)*((void *)a2 + 1);
  BOOL v27 = (char *)a2 + 8;
  int v26 = v28;
  int v29 = v27[23];
  if (v29 >= 0) {
    unsigned int v30 = v27;
  }
  else {
    unsigned int v30 = v26;
  }
  if (v29 >= 0) {
    std::string::size_type v31 = v27[23];
  }
  else {
    std::string::size_type v31 = *((void *)v27 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v30, v31);
}

void sub_1C3B76F28(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::default_instance(topotext::AttributeRun *this)
{
  return topotext::AttributeRun::default_instance_;
}

void topotext::AttributeRun::New(topotext::AttributeRun *this)
{
}

void sub_1C3B76FF0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4042973B72);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 64) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = topotext::ParagraphStyle::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = topotext::Font::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    *(_DWORD *)(v1 + 80) = 0;
    if ((v2 & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(v1 + 72);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  int v4 = *(_DWORD *)(v1 + 32);
  if ((v4 & 0x3F00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 88);
      if (v5)
      {
        *(void *)(v5 + 40) = 0;
        *(void *)(v5 + 48) = 0;
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(unsigned char **)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v5 + 8) = 0;
          *(unsigned char *)(v5 + 31) = 0;
        }
      }
    }
    *(_DWORD *)(v1 + 84) = 0;
    int v6 = *(_DWORD *)(v1 + 32);
    if ((v6 & 0x400) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = topotext::AttachmentInfo::Clear(this);
        int v6 = *(_DWORD *)(v1 + 32);
      }
    }
    *(void *)(v1 + 104) = 0;
    *(_DWORD *)(v1 + 120) = 0;
    if ((v6 & 0x2000) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this) {
        this = topotext::AttachmentInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((_BYTE)v2)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(void *)(this + 64) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 56);
      if (this)
      {
        this = topotext::Todo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    *(_DWORD *)(v1 + 80) = 0;
  }
  if ((v2 & 0x100) != 0)
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v3 = *(void *)(v1 + 72);
    if (v3 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::Font::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 7) != 0)
  {
    *(void *)(this + 48) = 0;
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Color::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttachmentInfo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v4 = *(void *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v5 = *(void *)(this + 64);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttributeRun::SerializeWithCachedSizes(topotext::AttributeRun *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 5);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v7 = *(void *)(topotext::AttributeRun::default_instance_ + 40);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v8 = *((void *)v5 + 7);
  if (!v8)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v8 = *(void *)(topotext::AttributeRun::default_instance_ + 56);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)v5 + 13), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)v5 + 20), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((void *)v5 + 9), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v9 = *((void *)v5 + 11);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v9 = *(void *)(topotext::AttributeRun::default_instance_ + 88);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v9, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xB, *((_DWORD *)v5 + 21), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v10 = *((void *)v5 + 12);
  if (!v10)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v10 = *(void *)(topotext::AttributeRun::default_instance_ + 96);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xD, *((void *)v5 + 13), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)0xE, *((_DWORD *)v5 + 30), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x2000) == 0) {
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v11 = *((void *)v5 + 14);
  if (!v11)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v11 = *(void *)(topotext::AttributeRun::default_instance_ + 112);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(15, v11, a2);
LABEL_40:
  if (*((char *)v5 + 31) < 0)
  {
    int v12 = (char *)*((void *)v5 + 1);
    uint64_t v13 = *((void *)v5 + 2);
  }
  else
  {
    int v12 = (char *)v5 + 8;
    LODWORD(v13) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
}

uint64_t topotext::AttributeRun::ByteSize(topotext::AttributeRun *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_56;
  }
  if (v2)
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v4 >= 0x80)
    {
      int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v5 = 1;
    }
    int v3 = v5 + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  int v6 = (topotext::ParagraphStyle *)*((void *)this + 5);
  if (!v6)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    int v6 = *(topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
  }
  uint64_t v7 = (google::protobuf::io::CodedOutputStream *)topotext::ParagraphStyle::ByteSize(v6);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
  }
  else {
    int v9 = 1;
  }
  v3 += v8 + v9 + 1;
  int v2 = *((_DWORD *)this + 8);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (topotext::Font *)*((void *)this + 7);
    if (!v10)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      uint64_t v10 = *(topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
    }
    uint64_t v11 = (google::protobuf::io::CodedOutputStream *)topotext::Font::ByteSize(v10);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    }
    else {
      int v13 = 1;
    }
    v3 += v12 + v13 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v14 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_33:
  BOOL v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v16 >= 0x80)
  {
    int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_41:
    uint64_t v20 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_47;
  }
LABEL_37:
  int v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v18 >= 0x80)
  {
    int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v19 = 1;
  }
  v3 += v19 + 1;
  if ((v2 & 0x40) != 0) {
    goto LABEL_41;
  }
LABEL_21:
  if ((v2 & 0x80) == 0) {
    goto LABEL_56;
  }
LABEL_47:
  uint64_t v22 = *((void *)this + 9);
  int v23 = *(unsigned __int8 *)(v22 + 23);
  char v24 = v23;
  uint64_t v25 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    unint64_t v26 = *(unsigned __int8 *)(v22 + 23);
  }
  else {
    unint64_t v26 = v25;
  }
  if (v26 >= 0x80)
  {
    int v27 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v26);
    int v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v25 = *(void *)(v22 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v24 = *(unsigned char *)(v22 + 23);
  }
  else
  {
    int v27 = 1;
  }
  if (v24 < 0) {
    int v23 = v25;
  }
  v3 += v27 + v23 + 1;
LABEL_56:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_93;
  }
  if ((v2 & 0x100) != 0)
  {
    int v28 = (topotext::Color *)*((void *)this + 11);
    if (!v28)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      int v28 = *(topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
    }
    int v29 = (google::protobuf::io::CodedOutputStream *)topotext::Color::ByteSize(v28);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    }
    else {
      int v31 = 1;
    }
    v3 += v30 + v31 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 0x200) == 0)
    {
LABEL_59:
      if ((v2 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_76;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v32 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 11;
  }
  else if (v32 >= 0x80)
  {
    int v33 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v33 = 2;
  }
  v3 += v33;
  if ((v2 & 0x400) == 0)
  {
LABEL_60:
    if ((v2 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_82;
  }
LABEL_76:
  int v34 = (topotext::AttachmentInfo *)*((void *)this + 12);
  if (!v34)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    int v34 = *(topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 96);
  }
  unsigned int v35 = (google::protobuf::io::CodedOutputStream *)topotext::AttachmentInfo::ByteSize(v34);
  int v36 = (int)v35;
  if (v35 >= 0x80) {
    int v37 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
  }
  else {
    int v37 = 1;
  }
  v3 += v36 + v37 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x800) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_62;
    }
LABEL_83:
    uint64_t v38 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    if (v38 >= 0x80)
    {
      int v39 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v39 = 2;
    }
    v3 += v39;
    if ((v2 & 0x2000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_87;
  }
LABEL_82:
  v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 13)) + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x1000) != 0) {
    goto LABEL_83;
  }
LABEL_62:
  if ((v2 & 0x2000) == 0) {
    goto LABEL_93;
  }
LABEL_87:
  int v40 = (topotext::AttachmentInfo *)*((void *)this + 14);
  if (!v40)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    int v40 = *(topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 112);
  }
  uint64_t v41 = (google::protobuf::io::CodedOutputStream *)topotext::AttachmentInfo::ByteSize(v40);
  int v42 = (int)v41;
  if (v41 >= 0x80) {
    int v43 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  }
  else {
    int v43 = 1;
  }
  v3 += v42 + v43 + 1;
LABEL_93:
  if (*((char *)this + 31) < 0) {
    uint64_t v44 = *((void *)this + 2);
  }
  else {
    LODWORD(v44) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v44);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttributeRun::CheckTypeAndMergeFrom(topotext::AttributeRun *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::AttributeRun::MergeFrom(this, lpsrc);
}

std::string *topotext::ParagraphStyle::MergeFrom(topotext::ParagraphStyle *this, const topotext::ParagraphStyle *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 3693);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 11);
      if (v7 >= 5) {
        -[ICTTParagraphStyle(ICTTParagraphStylePersistenceAdditions) saveToArchive:]();
      }
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      unsigned int v8 = *((_DWORD *)a2 + 12);
      if (v8 >= 5) {
        -[ICTTParagraphStyle(ICTTParagraphStylePersistenceAdditions) saveToArchive:]();
      }
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v8;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      int v9 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 8u;
      *((_DWORD *)this + 13) = v9;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      *((_DWORD *)this + 8) |= 0x10u;
      uint64_t v10 = (topotext::Todo *)*((void *)this + 7);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const topotext::Todo *)*((void *)a2 + 7);
      if (!v11)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        uint64_t v11 = *(const topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
      }
      topotext::Todo::MergeFrom(v10, v11);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x20) != 0)
    {
      int v22 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 8) |= 0x20u;
      *((_DWORD *)this + 16) = v22;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 0x40) == 0)
      {
LABEL_22:
        if ((v5 & 0x80) == 0) {
          goto LABEL_24;
        }
        goto LABEL_23;
      }
    }
    else if ((v5 & 0x40) == 0)
    {
      goto LABEL_22;
    }
    int v23 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 8) |= 0x40u;
    *((_DWORD *)this + 17) = v23;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x80) != 0)
    {
LABEL_23:
      int v12 = *((_DWORD *)a2 + 20);
      *((_DWORD *)this + 8) |= 0x80u;
      *((_DWORD *)this + 20) = v12;
      int v5 = *((_DWORD *)a2 + 8);
    }
  }
LABEL_24:
  if ((v5 & 0x100) != 0)
  {
    int v13 = (const std::string *)*((void *)a2 + 9);
    *((_DWORD *)this + 8) |= 0x100u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v14 = (std::string *)*((void *)this + 9);
    if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v14, v13);
  }
  int v17 = (const std::string::value_type *)*((void *)a2 + 1);
  BOOL v16 = (char *)a2 + 8;
  int v15 = v17;
  int v18 = v16[23];
  if (v18 >= 0) {
    int v19 = v16;
  }
  else {
    int v19 = v15;
  }
  if (v18 >= 0) {
    std::string::size_type v20 = v16[23];
  }
  else {
    std::string::size_type v20 = *((void *)v16 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v19, v20);
}

void sub_1C3B77D18(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

std::string *topotext::Font::MergeFrom(topotext::Font *this, const topotext::Font *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 3190);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      unsigned int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 12) = v8;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v9 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 13) = v9;
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1C3B77E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Color::MergeFrom(topotext::Color *this, const topotext::Color *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7365);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    int v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  unsigned int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B77FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::AttachmentInfo::MergeFrom(topotext::AttachmentInfo *this, const topotext::AttachmentInfo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 4035);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      unsigned int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v10 = (const std::string *)*((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v11 = (std::string *)*((void *)this + 7);
      if (v11 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      std::string::size_type v12 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v13 = (std::string *)*((void *)this + 8);
      if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v13, v12);
    }
  }
  int v16 = (const std::string::value_type *)*((void *)a2 + 1);
  int v15 = (char *)a2 + 8;
  int v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    int v18 = v15;
  }
  else {
    int v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v18, v19);
}

void sub_1C3B78204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::IsInitialized(topotext::AttributeRun *this)
{
  return 1;
}

void *topotext::AttributeRun::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttributeRun");
}

void topotext::Font::~Font(void **this)
{
  *this = &unk_1F1F261D8;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Font::~Font(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Font::New(topotext::Font *this)
{
}

void sub_1C3B78318(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4020611389);
  _Unwind_Resume(a1);
}

uint64_t topotext::Font::MergePartialFromCodedStream(topotext::Font *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 == 24)
        {
          int v15 = (char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_34;
        }
LABEL_29:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_43;
        }
        goto LABEL_31;
      }
      if (v9 == 2)
      {
        if (v7 == 21) {
          goto LABEL_24;
        }
        goto LABEL_29;
      }
      if (v9 == 1) {
        break;
      }
LABEL_17:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_43:
        uint64_t v17 = 1;
        goto LABEL_45;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))goto LABEL_44; {
    }
      }
    if (v7 != 10) {
      goto LABEL_29;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v10 = (std::string *)*((void *)this + 5);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v10)) {
      break;
    }
    uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 21)
    {
      *((void *)a2 + 1) = v11 + 1;
LABEL_24:
      unsigned int v21 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21)) {
        break;
      }
      *((_DWORD *)this + 12) = v21;
      *((_DWORD *)this + 8) |= 2u;
      int v14 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v13 = *((void *)a2 + 2);
      if ((unint64_t)v14 < v13 && *v14 == 24)
      {
        int v15 = v14 + 1;
        *((void *)a2 + 1) = v15;
LABEL_34:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))break; {
          int v16 = (unsigned __int8 *)*((void *)a2 + 1);
          }
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v15;
          int v16 = (unsigned __int8 *)(v15 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v16 == (unsigned __int8 *)v13 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t v17 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
  }
LABEL_44:
  uint64_t v17 = 0;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1C3B785D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Font::SerializeWithCachedSizes(topotext::Font *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 13), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Font::ByteSize(topotext::Font *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v5 = *((void *)this + 5);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        int v10 = v11 + 1;
        int v2 = *((_DWORD *)this + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 2;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      int v3 = v10 + v6;
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      int v4 = v3 + 5;
    }
    else {
      int v4 = v3;
    }
    if ((v2 & 4) != 0)
    {
      BOOL v12 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if (v12 >= 0x80) {
        int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      }
      else {
        int v13 = 2;
      }
      v4 += v13;
    }
  }
  else
  {
    int v4 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v14 = *((void *)this + 2);
  }
  else {
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v4 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Font::CheckTypeAndMergeFrom(topotext::Font *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Font::MergeFrom(this, lpsrc);
}

uint64_t topotext::Font::IsInitialized(topotext::Font *this)
{
  return 1;
}

void *topotext::Font::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Font");
}

uint64_t topotext::ParagraphStyle::default_instance(topotext::ParagraphStyle *this)
{
  return topotext::ParagraphStyle::default_instance_;
}

void topotext::ParagraphStyle::New(topotext::ParagraphStyle *this)
{
}

void sub_1C3B78880(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40F489674BLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::SerializeWithCachedSizes(topotext::ParagraphStyle *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 11), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)v5 + 12), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 13), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v9 = *((void *)v5 + 7);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v9 = *(void *)(topotext::ParagraphStyle::default_instance_ + 56);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(5, v9, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_22:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)v5 + 20), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x100) != 0) {
LABEL_10:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(9, *((void *)v5 + 9), a2);
LABEL_11:
  if (*((char *)v5 + 31) < 0)
  {
    char v7 = (char *)*((void *)v5 + 1);
    uint64_t v8 = *((void *)v5 + 2);
  }
  else
  {
    char v7 = (char *)v5 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::ParagraphStyle::ByteSize(topotext::ParagraphStyle *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v4 >= 0x80)
      {
        int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v5 = 1;
      }
      int v3 = v5 + 1;
      if ((v2 & 2) == 0)
      {
LABEL_17:
        if ((v2 & 4) != 0)
        {
          uint64_t v8 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
          if ((v8 & 0x80000000) != 0)
          {
            int v9 = 10;
          }
          else if (v8 >= 0x80)
          {
            int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
            int v2 = *((_DWORD *)this + 8);
          }
          else
          {
            int v9 = 1;
          }
          v3 += v9 + 1;
          if ((v2 & 8) == 0)
          {
LABEL_19:
            if ((v2 & 0x10) == 0) {
              goto LABEL_20;
            }
            goto LABEL_37;
          }
        }
        else if ((v2 & 8) == 0)
        {
          goto LABEL_19;
        }
        int v10 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
        if ((v10 & 0x80000000) != 0)
        {
          int v11 = 11;
        }
        else if (v10 >= 0x80)
        {
          int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
          int v2 = *((_DWORD *)this + 8);
        }
        else
        {
          int v11 = 2;
        }
        v3 += v11;
        if ((v2 & 0x10) == 0)
        {
LABEL_20:
          if ((v2 & 0x20) == 0) {
            goto LABEL_21;
          }
          goto LABEL_43;
        }
LABEL_37:
        BOOL v12 = (topotext::Todo *)*((void *)this + 7);
        if (!v12)
        {
          topotext::protobuf_AddDesc_topotext_2eproto(0);
          BOOL v12 = *(topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
        }
        int v13 = (google::protobuf::io::CodedOutputStream *)topotext::Todo::ByteSize(v12);
        int v14 = (int)v13;
        if (v13 >= 0x80) {
          int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        }
        else {
          int v15 = 1;
        }
        v3 += v14 + v15 + 1;
        int v2 = *((_DWORD *)this + 8);
        if ((v2 & 0x20) == 0)
        {
LABEL_21:
          if ((v2 & 0x40) == 0) {
            goto LABEL_22;
          }
          goto LABEL_47;
        }
LABEL_43:
        int v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
        if (v16 >= 0x80)
        {
          int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
          int v2 = *((_DWORD *)this + 8);
        }
        else
        {
          int v17 = 2;
        }
        v3 += v17;
        if ((v2 & 0x40) == 0)
        {
LABEL_22:
          if ((v2 & 0x80) == 0) {
            goto LABEL_23;
          }
          goto LABEL_51;
        }
LABEL_47:
        int v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
        if (v18 >= 0x80)
        {
          int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
          int v2 = *((_DWORD *)this + 8);
        }
        else
        {
          int v19 = 2;
        }
        v3 += v19;
        if ((v2 & 0x80) == 0)
        {
LABEL_23:
          if ((v2 & 0x100) == 0) {
            goto LABEL_64;
          }
          goto LABEL_55;
        }
LABEL_51:
        std::string::size_type v20 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
        if (v20 >= 0x80)
        {
          int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
          int v2 = *((_DWORD *)this + 8);
        }
        else
        {
          int v21 = 2;
        }
        v3 += v21;
        if ((v2 & 0x100) == 0) {
          goto LABEL_64;
        }
        goto LABEL_55;
      }
    }
    else
    {
      int v3 = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
    int v6 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v7 = 1;
    }
    v3 += v7 + 1;
    goto LABEL_17;
  }
  int v3 = 0;
  if ((v2 & 0x100) == 0) {
    goto LABEL_64;
  }
LABEL_55:
  uint64_t v22 = *((void *)this + 9);
  int v23 = *(unsigned __int8 *)(v22 + 23);
  char v24 = v23;
  uint64_t v25 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    unint64_t v26 = *(unsigned __int8 *)(v22 + 23);
  }
  else {
    unint64_t v26 = v25;
  }
  if (v26 >= 0x80)
  {
    int v27 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v26);
    int v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v25 = *(void *)(v22 + 8);
    char v24 = *(unsigned char *)(v22 + 23);
  }
  else
  {
    int v27 = 1;
  }
  if (v24 < 0) {
    int v23 = v25;
  }
  v3 += v27 + v23 + 1;
LABEL_64:
  if (*((char *)this + 31) < 0) {
    uint64_t v28 = *((void *)this + 2);
  }
  else {
    LODWORD(v28) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v28);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::ParagraphStyle::CheckTypeAndMergeFrom(topotext::ParagraphStyle *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::ParagraphStyle::MergeFrom(this, lpsrc);
}

std::string *topotext::Todo::MergeFrom(topotext::Todo *this, const topotext::Todo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7077);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      char v8 = *((unsigned char *)a2 + 48);
      *((_DWORD *)this + 8) |= 2u;
      *((unsigned char *)this + 48) = v8;
    }
  }
  int v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3B78EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::IsInitialized(topotext::ParagraphStyle *this)
{
  return 1;
}

void *topotext::ParagraphStyle::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.ParagraphStyle");
}

void topotext::AttachmentInfo::New(topotext::AttachmentInfo *this)
{
}

void sub_1C3B78F2C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttachmentInfo::SerializeWithCachedSizes(topotext::AttachmentInfo *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  int v4 = *((_DWORD *)this + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, *((void *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((void *)this + 8), a2);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    int v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    int v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t topotext::AttachmentInfo::ByteSize(topotext::AttachmentInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_45;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
  uint64_t v17 = *((void *)this + 7);
  int v18 = *(unsigned __int8 *)(v17 + 23);
  char v19 = v18;
  uint64_t v20 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 >= 0x80)
  {
    int v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v21);
    int v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v20 = *(void *)(v17 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v19 = *(unsigned char *)(v17 + 23);
  }
  else
  {
    int v22 = 1;
  }
  if (v19 < 0) {
    int v18 = v20;
  }
  v3 += v22 + v18 + 1;
  if ((v2 & 8) != 0)
  {
LABEL_36:
    uint64_t v23 = *((void *)this + 8);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    char v25 = v24;
    uint64_t v26 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      unint64_t v27 = v26;
    }
    if (v27 >= 0x80)
    {
      int v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v27);
      int v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v26 = *(void *)(v23 + 8);
      char v25 = *(unsigned char *)(v23 + 23);
    }
    else
    {
      int v28 = 1;
    }
    if (v25 < 0) {
      int v24 = v26;
    }
    v3 += v28 + v24 + 1;
  }
LABEL_45:
  if (*((char *)this + 31) < 0) {
    uint64_t v29 = *((void *)this + 2);
  }
  else {
    LODWORD(v29) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v29);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttachmentInfo::CheckTypeAndMergeFrom(topotext::AttachmentInfo *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::AttachmentInfo::MergeFrom(this, lpsrc);
}

uint64_t topotext::AttachmentInfo::IsInitialized(topotext::AttachmentInfo *this)
{
  return 1;
}

void *topotext::AttachmentInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttachmentInfo");
}

std::string *topotext::Attachment::MergeFrom(topotext::Attachment *this, const topotext::Attachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v73, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 5569);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v73, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v72, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v73[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((topotext::Attachment *)((char *)this + 112), (const topotext::Attachment *)((char *)a2 + 112));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((topotext::Attachment *)((char *)this + 208));
  int v5 = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((topotext::Attachment *)((char *)this + 336));
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (!(_BYTE)v6) {
    goto LABEL_39;
  }
  if (v6)
  {
    uint64_t v7 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    unint64_t v8 = (std::string *)*((void *)this + 5);
    if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v8, v7);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 2) != 0)
  {
    int v9 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v10 = (std::string *)*((void *)this + 6);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v10, v9);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 4) != 0)
  {
    int v11 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 14) = v11;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 8) == 0)
    {
LABEL_16:
      if ((v6 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v12 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 8) |= 8u;
  *((_DWORD *)this + 15) = v12;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_17:
    if ((v6 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_27:
    unint64_t v15 = (const std::string *)*((void *)a2 + 9);
    *((_DWORD *)this + 8) |= 0x20u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v16 = (std::string *)*((void *)this + 9);
    if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v16, v15);
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x40) == 0)
    {
LABEL_19:
      if ((v6 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_23:
  char v13 = (const std::string *)*((void *)a2 + 8);
  *((_DWORD *)this + 8) |= 0x10u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v14 = (std::string *)*((void *)this + 8);
  if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  int v5 = std::string::operator=(v14, v13);
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_18:
  if ((v6 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_31:
  uint64_t v17 = (const std::string *)*((void *)a2 + 10);
  *((_DWORD *)this + 8) |= 0x40u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  int v18 = (std::string *)*((void *)this + 10);
  if (v18 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  int v5 = std::string::operator=(v18, v17);
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x80) != 0)
  {
LABEL_35:
    char v19 = (const std::string *)*((void *)a2 + 11);
    *((_DWORD *)this + 8) |= 0x80u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v20 = (std::string *)*((void *)this + 11);
    if (v20 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v20, v19);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_39:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_58;
  }
  if ((v6 & 0x100) != 0)
  {
    *((_DWORD *)this + 8) |= 0x100u;
    unint64_t v21 = (topotext::Location *)*((void *)this + 12);
    if (!v21) {
      operator new();
    }
    int v22 = (const topotext::Location *)*((void *)a2 + 12);
    if (!v22)
    {
      topotext::protobuf_AddDesc_topotext_2eproto((topotext *)v5);
      int v22 = *(const topotext::Location **)(topotext::Attachment::default_instance_ + 96);
    }
    int v5 = topotext::Location::MergeFrom(v21, v22);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x200) != 0)
  {
    *((_DWORD *)this + 8) |= 0x200u;
    uint64_t v23 = (topotext::Media *)*((void *)this + 13);
    if (!v23) {
      operator new();
    }
    int v24 = (const topotext::Media *)*((void *)a2 + 13);
    if (!v24)
    {
      topotext::protobuf_AddDesc_topotext_2eproto((topotext *)v5);
      int v24 = *(const topotext::Media **)(topotext::Attachment::default_instance_ + 104);
    }
    topotext::Media::MergeFrom(v23, v24);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x800) != 0)
  {
    int v29 = *((_DWORD *)a2 + 34);
    *((_DWORD *)this + 8) |= 0x800u;
    *((_DWORD *)this + 34) = v29;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x1000) == 0)
    {
LABEL_54:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_74;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_54;
  }
  int v30 = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 8) |= 0x1000u;
  *((_DWORD *)this + 35) = v30;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x2000) == 0)
  {
LABEL_55:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v31 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 8) |= 0x2000u;
  *((_DWORD *)this + 40) = v31;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x4000) == 0)
  {
LABEL_56:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }
LABEL_75:
  uint64_t v32 = *((void *)a2 + 18);
  *((_DWORD *)this + 8) |= 0x4000u;
  *((void *)this + 18) = v32;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x8000) != 0)
  {
LABEL_57:
    uint64_t v25 = *((void *)a2 + 19);
    *((_DWORD *)this + 8) |= 0x8000u;
    *((void *)this + 19) = v25;
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_58:
  if ((v6 & 0xFF0000) == 0) {
    goto LABEL_85;
  }
  if ((v6 & 0x10000) != 0)
  {
    uint64_t v26 = *((void *)a2 + 21);
    *((_DWORD *)this + 8) |= 0x10000u;
    *((void *)this + 21) = v26;
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x20000) != 0)
  {
    unint64_t v27 = (const std::string *)*((void *)a2 + 22);
    *((_DWORD *)this + 8) |= 0x20000u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v28 = (std::string *)*((void *)this + 22);
    if (v28 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v28, v27);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x40000) != 0)
  {
    char v33 = *((unsigned char *)a2 + 164);
    *((_DWORD *)this + 8) |= 0x40000u;
    *((unsigned char *)this + 164) = v33;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x80000) == 0)
    {
LABEL_68:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_69;
      }
      goto LABEL_79;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_68;
  }
  uint64_t v34 = *((void *)a2 + 23);
  *((_DWORD *)this + 8) |= 0x80000u;
  *((void *)this + 23) = v34;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x100000) == 0)
  {
LABEL_69:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v35 = *((void *)a2 + 24);
  *((_DWORD *)this + 8) |= 0x100000u;
  *((void *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v35;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x200000) == 0)
  {
LABEL_70:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v36 = *((_DWORD *)a2 + 98);
  *((_DWORD *)this + 8) |= 0x200000u;
  *((_DWORD *)this + 98) = v36;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x400000) == 0) {
    goto LABEL_85;
  }
LABEL_81:
  int v37 = (const std::string *)*((void *)a2 + 25);
  *((_DWORD *)this + 8) |= 0x400000u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v38 = (std::string *)*((void *)this + 25);
  if (v38 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v38, v37);
  unsigned int v6 = *((_DWORD *)a2 + 8);
LABEL_85:
  if (!HIBYTE(v6)) {
    goto LABEL_94;
  }
  if ((v6 & 0x1000000) != 0)
  {
    uint64_t v64 = *((void *)a2 + 29);
    *((_DWORD *)this + 8) |= 0x1000000u;
    *((void *)this + 29) = v64;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_88:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_147;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_88;
  }
  uint64_t v65 = *((void *)a2 + 30);
  *((_DWORD *)this + 8) |= 0x2000000u;
  *((void *)this + 30) = v65;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_89:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t v66 = *((void *)a2 + 31);
  *((_DWORD *)this + 8) |= 0x4000000u;
  *((void *)this + 31) = v66;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_90:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t v67 = *((void *)a2 + 32);
  *((_DWORD *)this + 8) |= 0x8000000u;
  *((void *)this + 32) = v67;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_91:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t v68 = *((void *)a2 + 33);
  *((_DWORD *)this + 8) |= 0x10000000u;
  *((void *)this + 33) = v68;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_93;
    }
LABEL_151:
    uint64_t v70 = *((void *)a2 + 35);
    *((_DWORD *)this + 8) |= 0x40000000u;
    *((void *)this + 35) = v70;
    if ((*((_DWORD *)a2 + 8) & 0x80000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_152;
  }
LABEL_150:
  uint64_t v69 = *((void *)a2 + 34);
  *((_DWORD *)this + 8) |= 0x20000000u;
  *((void *)this + 34) = v69;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_151;
  }
LABEL_93:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_94;
  }
LABEL_152:
  uint64_t v71 = *((void *)a2 + 36);
  *((_DWORD *)this + 8) |= 0x80000000;
  *((void *)this + 36) = v71;
LABEL_94:
  int v39 = *((_DWORD *)a2 + 9);
  if ((_BYTE)v39)
  {
    if (v39)
    {
      uint64_t v40 = *((void *)a2 + 37);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 37) = v40;
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 2) != 0)
    {
      uint64_t v41 = (const std::string *)*((void *)a2 + 38);
      *((_DWORD *)this + 9) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v42 = (std::string *)*((void *)this + 38);
      if (v42 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v42, v41);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 4) != 0)
    {
      int v43 = (const std::string *)*((void *)a2 + 39);
      *((_DWORD *)this + 9) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v44 = (std::string *)*((void *)this + 39);
      if (v44 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v44, v43);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 8) != 0)
    {
      int v45 = (const std::string *)*((void *)a2 + 40);
      *((_DWORD *)this + 9) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      unint64_t v46 = (std::string *)*((void *)this + 40);
      if (v46 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v46, v45);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 0x10) != 0)
    {
      id v47 = (const std::string *)*((void *)a2 + 41);
      *((_DWORD *)this + 9) |= 0x10u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      unsigned int v48 = (std::string *)*((void *)this + 41);
      if (v48 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v48, v47);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 0x40) != 0)
    {
      int v49 = (const std::string *)*((void *)a2 + 45);
      *((_DWORD *)this + 9) |= 0x40u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v50 = (std::string *)*((void *)this + 45);
      if (v50 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v50, v49);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 0x80) != 0)
    {
      int v51 = (const std::string *)*((void *)a2 + 46);
      *((_DWORD *)this + 9) |= 0x80u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      int v52 = (std::string *)*((void *)this + 46);
      if (v52 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v52, v51);
      int v39 = *((_DWORD *)a2 + 9);
    }
  }
  if ((v39 & 0xFF00) != 0)
  {
    if ((v39 & 0x100) != 0)
    {
      int v53 = (const std::string *)*((void *)a2 + 47);
      *((_DWORD *)this + 9) |= 0x100u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v54 = (std::string *)*((void *)this + 47);
      if (v54 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v54, v53);
      int v39 = *((_DWORD *)a2 + 9);
    }
    if ((v39 & 0x200) != 0)
    {
      unint64_t v55 = (const std::string *)*((void *)a2 + 48);
      *((_DWORD *)this + 9) |= 0x200u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v56 = (std::string *)*((void *)this + 48);
      if (v56 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v56, v55);
    }
  }
  int v59 = (const std::string::value_type *)*((void *)a2 + 1);
  int v58 = (char *)a2 + 8;
  int v57 = v59;
  int v60 = v58[23];
  if (v60 >= 0) {
    int v61 = v58;
  }
  else {
    int v61 = v57;
  }
  if (v60 >= 0) {
    std::string::size_type v62 = v58[23];
  }
  else {
    std::string::size_type v62 = *((void *)v58 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v61, v62);
}

void sub_1C3B79D1C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

void topotext::Attachment::~Attachment(topotext::Attachment *this)
{
  *(void *)this = &unk_1F1F26340;
  topotext::Attachment::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 42);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 26);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 14);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  topotext::Attachment::~Attachment(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Attachment::SharedDtor(topotext::Attachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::Attachment *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 8);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 9);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v6, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v7 = *((void *)v1 + 10);
  if (v7 != v2 && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v7, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v8 = *((void *)v1 + 11);
  if (v8 != v2 && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v8, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v9 = *((void *)v1 + 22);
  if (v9 != v2 && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v9, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v10 = *((void *)v1 + 25);
  if (v10 != v2 && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v10, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v11 = *((void *)v1 + 38);
  if (v11 != v2 && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v11, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v12 = *((void *)v1 + 39);
  if (v12 != v2 && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v12, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v13 = *((void *)v1 + 40);
  if (v13 != v2 && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v13, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v14 = *((void *)v1 + 41);
  if (v14 != v2 && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v14, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v15 = *((void *)v1 + 45);
  if (v15 != v2 && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v15, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v16 = *((void *)v1 + 46);
  if (v16 != v2 && v16)
  {
    if (*(char *)(v16 + 23) < 0) {
      operator delete(*(void **)v16);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v16, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v17 = *((void *)v1 + 47);
  if (v17 != v2 && v17)
  {
    if (*(char *)(v17 + 23) < 0) {
      operator delete(*(void **)v17);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v17, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
  }
  uint64_t v18 = *((void *)v1 + 48);
  if (v18 != v2 && v18)
  {
    if (*(char *)(v18 + 23) < 0) {
      operator delete(*(void **)v18);
    }
    this = (topotext::Attachment *)MEMORY[0x1C877D640](v18, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Attachment *)topotext::Attachment::default_instance_ != v1)
  {
    uint64_t v19 = *((void *)v1 + 12);
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = *((void *)v1 + 13);
    if (v20)
    {
      unint64_t v21 = *(void (**)(void))(*(void *)v20 + 8);
      v21();
    }
  }
}

uint64_t topotext::Attachment::default_instance(topotext::Attachment *this)
{
  return topotext::Attachment::default_instance_;
}

void topotext::Attachment::New(topotext::Attachment *this)
{
}

void sub_1C3B7A38C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C406079FE1ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::Clear(topotext::Attachment *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (v2)
  {
    *((void *)this + 7) = 0;
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *((void *)this + 5);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v4 = *((void *)this + 6);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v5 = *((void *)this + 8);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x20) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v6 = *((void *)this + 9);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x40) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v7 = *((void *)this + 10);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v8 = *((void *)this + 11);
      if (v8 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
  }
  unsigned int v9 = *((_DWORD *)this + 8);
  if ((v9 & 0xFB00) != 0)
  {
    *((void *)this + 17) = 0;
    *((void *)this + 18) = 0;
    *((_DWORD *)this + 40) = 0;
    *((void *)this + 19) = 0;
    if ((v9 & 0x100) != 0)
    {
      uint64_t v10 = *((void *)this + 12);
      if (v10)
      {
        topotext::Location::Clear(v10);
        unsigned int v9 = *((_DWORD *)this + 8);
      }
    }
    if ((v9 & 0x200) != 0)
    {
      uint64_t v11 = *((void *)this + 13);
      if (v11)
      {
        topotext::Media::Clear(v11);
        unsigned int v9 = *((_DWORD *)this + 8);
      }
    }
  }
  if ((v9 & 0x7F0000) != 0)
  {
    *((_DWORD *)this + 43) = 0;
    *(void *)((char *)this + 164) = 0;
    *((void *)this + 23) = 0;
    *((void *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    if ((v9 & 0x20000) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v12 = *((void *)this + 22);
      if (v12 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v12 + 23) < 0)
        {
          **(unsigned char **)uint64_t v12 = 0;
          *(void *)(v12 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v12 = 0;
          *(unsigned char *)(v12 + 23) = 0;
        }
      }
    }
    *((_DWORD *)this + 98) = 0;
    unsigned int v9 = *((_DWORD *)this + 8);
    if ((v9 & 0x400000) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v13 = *((void *)this + 25);
      if (v13 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v13 + 23) < 0)
        {
          **(unsigned char **)uint64_t v13 = 0;
          *(void *)(v13 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v13 = 0;
          *(unsigned char *)(v13 + 23) = 0;
        }
      }
      unsigned int v9 = *((_DWORD *)this + 8);
    }
  }
  if (HIBYTE(v9))
  {
    *(_OWORD *)((char *)this + 232) = 0u;
    *(_OWORD *)((char *)this + 264) = 0u;
    *(_OWORD *)((char *)this + 280) = 0u;
    *(_OWORD *)((char *)this + 248) = 0u;
  }
  int v14 = *((_DWORD *)this + 9);
  if ((v14 & 0xDF) != 0)
  {
    *((void *)this + 37) = 0;
    if ((v14 & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v15 = *((void *)this + 38);
      if (v15 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v15 + 23) < 0)
        {
          **(unsigned char **)uint64_t v15 = 0;
          *(void *)(v15 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v15 = 0;
          *(unsigned char *)(v15 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v16 = *((void *)this + 39);
      if (v16 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v16 + 23) < 0)
        {
          **(unsigned char **)uint64_t v16 = 0;
          *(void *)(v16 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v16 = 0;
          *(unsigned char *)(v16 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v17 = *((void *)this + 40);
      if (v17 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v17 + 23) < 0)
        {
          **(unsigned char **)uint64_t v17 = 0;
          *(void *)(v17 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v17 = 0;
          *(unsigned char *)(v17 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v18 = *((void *)this + 41);
      if (v18 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v18 + 23) < 0)
        {
          **(unsigned char **)uint64_t v18 = 0;
          *(void *)(v18 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v18 = 0;
          *(unsigned char *)(v18 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 0x40) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v19 = *((void *)this + 45);
      if (v19 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v19 + 23) < 0)
        {
          **(unsigned char **)uint64_t v19 = 0;
          *(void *)(v19 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v19 = 0;
          *(unsigned char *)(v19 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v20 = *((void *)this + 46);
      if (v20 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v20 + 23) < 0)
        {
          **(unsigned char **)uint64_t v20 = 0;
          *(void *)(v20 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v20 = 0;
          *(unsigned char *)(v20 + 23) = 0;
        }
      }
    }
  }
  int v21 = *((_DWORD *)this + 9);
  if ((v21 & 0x300) != 0)
  {
    if ((v21 & 0x100) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v22 = *((void *)this + 47);
      if (v22 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v22 + 23) < 0)
        {
          **(unsigned char **)uint64_t v22 = 0;
          *(void *)(v22 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v22 = 0;
          *(unsigned char *)(v22 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 37) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v23 = *((void *)this + 48);
      if (v23 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v23 + 23) < 0)
        {
          **(unsigned char **)uint64_t v23 = 0;
          *(void *)(v23 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v23 = 0;
          *(unsigned char *)(v23 + 23) = 0;
        }
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 112);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 208);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 336);
  *((void *)this + 4) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::Location::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 56);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Media::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0x1F) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v4 = *(void *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v5 = *(void *)(this + 64);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(void *)(this + 72) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Attachment::MergePartialFromCodedStream(topotext::Attachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v136, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v135, (google::protobuf::io::ZeroCopyOutputStream *)v136);
LABEL_2:
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      unint64_t v6 = *((void *)a2 + 2);
      if ((unint64_t)v5 < v6)
      {
        uint64_t v7 = *v5;
        if (*v5 >= 1)
        {
          *((_DWORD *)a2 + 8) = v7;
          uint64_t v8 = (unsigned __int8 *)(v5 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v5 + 1) < v6)
        {
          int v9 = v5[1];
          if ((v7 & ~v9) >= 0x80) {
            break;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) != 0) {
        goto LABEL_16;
      }
LABEL_9:
      if (v10) {
        BOOL v11 = (v10 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_431:
        uint64_t v133 = 1;
        goto LABEL_432;
      }
LABEL_152:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, (google::protobuf::io::CodedOutputStream *)v135, v4))goto LABEL_430; {
    }
      }
    uint64_t v7 = (v7 + (v9 << 7) - 128);
    *((_DWORD *)a2 + 8) = v7;
    uint64_t v8 = (unsigned __int8 *)(v5 + 2);
LABEL_8:
    *((void *)a2 + 1) = v8;
    unint64_t v10 = v7 | 0x100000000;
LABEL_16:
    switch(v10 >> 3)
    {
      case 2u:
        if (v10 != 18) {
          goto LABEL_150;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        uint64_t v13 = (std::string *)*((void *)this + 5);
        if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v13)) {
          goto LABEL_430;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_64:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        uint64_t v17 = (std::string *)*((void *)this + 6);
        if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v17)) {
          goto LABEL_430;
        }
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_71:
        v137[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v137)) {
          goto LABEL_430;
        }
        *((_DWORD *)this + 14) = v137[0];
        *((_DWORD *)this + 8) |= 4u;
        uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_75:
        v137[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v137)) {
          goto LABEL_430;
        }
        *((_DWORD *)this + 15) = v137[0];
        int v16 = *((_DWORD *)this + 8) | 8;
        *((_DWORD *)this + 8) = v16;
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_79:
        *((_DWORD *)this + 8) = v16 | 0x10;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v21 = (std::string *)*((void *)this + 8);
        if (v21 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21)) {
          goto LABEL_430;
        }
        uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_95:
        *((_DWORD *)this + 8) |= 0x20u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        unint64_t v27 = (std::string *)*((void *)this + 9);
        if (v27 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v27)) {
          goto LABEL_430;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_107:
        *((_DWORD *)this + 8) |= 0x40u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        uint64_t v32 = (std::string *)*((void *)this + 10);
        if (v32 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v32)) {
          goto LABEL_430;
        }
        char v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_114:
        *((_DWORD *)this + 8) |= 0x80u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        uint64_t v34 = (std::string *)*((void *)this + 11);
        if (v34 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v34)) {
          goto LABEL_430;
        }
        uint64_t v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_126:
        *((_DWORD *)this + 8) |= 0x100u;
        int v37 = (topotext::Location *)*((void *)this + 12);
        if (!v37) {
          operator new();
        }
        v137[0] = 0;
        uint64_t v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
            goto LABEL_430;
          }
        }
        else
        {
          v137[0] = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          goto LABEL_430;
        }
        int v44 = google::protobuf::io::CodedInputStream::PushLimit(a2, v137[0]);
        if (!topotext::Location::MergePartialFromCodedStream(v37, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_430;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v44);
        int v45 = *((_DWORD *)a2 + 14);
        BOOL v46 = __OFSUB__(v45, 1);
        int v47 = v45 - 1;
        if (v47 < 0 == v46) {
          *((_DWORD *)a2 + 14) = v47;
        }
        unsigned int v48 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v48 + 1;
LABEL_163:
        *((_DWORD *)this + 8) |= 0x200u;
        int v49 = (topotext::Media *)*((void *)this + 13);
        if (!v49) {
          operator new();
        }
        v137[0] = 0;
        int v50 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
            goto LABEL_430;
          }
        }
        else
        {
          v137[0] = *v50;
          *((void *)a2 + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)a2 + 14);
        int v52 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v51 + 1;
        if (v51 >= v52) {
          goto LABEL_430;
        }
        int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v137[0]);
        if (!topotext::Media::MergePartialFromCodedStream(v49, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_430;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v53);
        int v54 = *((_DWORD *)a2 + 14);
        BOOL v46 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v46) {
          *((_DWORD *)a2 + 14) = v55;
        }
        uint64_t v56 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 != 98) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v56 + 1;
LABEL_177:
          int v57 = *((_DWORD *)this + 31);
          uint64_t v58 = *((int *)this + 30);
          if ((int)v58 >= v57)
          {
            if (v57 == *((_DWORD *)this + 32)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 112, v57 + 1);
            }
            google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
          }
          uint64_t v59 = *((void *)this + 14);
          *((_DWORD *)this + 30) = v58 + 1;
          int v60 = *(topotext::PreviewImage **)(v59 + 8 * v58);
          v137[0] = 0;
          int v61 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v61 >= *((void *)a2 + 2) || *v61 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
              goto LABEL_430;
            }
          }
          else
          {
            v137[0] = *v61;
            *((void *)a2 + 1) = v61 + 1;
          }
          int v62 = *((_DWORD *)a2 + 14);
          int v63 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v62 + 1;
          if (v62 >= v63) {
            goto LABEL_430;
          }
          int v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v137[0]);
          if (!topotext::PreviewImage::MergePartialFromCodedStream(v60, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_430;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v64);
          int v65 = *((_DWORD *)a2 + 14);
          BOOL v46 = __OFSUB__(v65, 1);
          int v66 = v65 - 1;
          if (v66 < 0 == v46) {
            *((_DWORD *)a2 + 14) = v66;
          }
          uint64_t v56 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v56 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v67 = *v56;
        }
        while (v67 == 98);
        if (v67 != 109) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 1;
LABEL_195:
        v137[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v137)) {
          goto LABEL_430;
        }
        *((_DWORD *)this + 34) = v137[0];
        *((_DWORD *)this + 8) |= 0x800u;
        uint64_t v68 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 != 117) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 1;
LABEL_199:
        v137[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v137)) {
          goto LABEL_430;
        }
        *((_DWORD *)this + 35) = v137[0];
        *((_DWORD *)this + 8) |= 0x1000u;
        uint64_t v69 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        if ((unint64_t)v69 >= v30 || *v69 != 120) {
          continue;
        }
        int v31 = v69 + 1;
        *((void *)a2 + 1) = v31;
LABEL_203:
        v137[0] = 0;
        if ((unint64_t)v31 >= v30 || (char)*v31 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
            goto LABEL_430;
          }
          unsigned int v70 = v137[0];
          uint64_t v71 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v70 = *v31;
          uint64_t v71 = v31 + 1;
          *((void *)a2 + 1) = v71;
        }
        *((_DWORD *)this + 40) = v70;
        *((_DWORD *)this + 8) |= 0x2000u;
        if ((int)v30 - (int)v71 < 2 || *v71 != 129 || v71[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 2;
LABEL_212:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 18) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x4000u;
        char v72 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v72 < 2 || *v72 != 137 || v72[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v72 + 2;
LABEL_217:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 21) = *(void *)v137;
        int v15 = *((_DWORD *)this + 8) | 0x10000;
        *((_DWORD *)this + 8) = v15;
        int v73 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v73 < 2 || *v73 != 146 || v73[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v73 + 2;
LABEL_222:
        *((_DWORD *)this + 8) = v15 | 0x20000;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v74 = (std::string *)*((void *)this + 22);
        if (v74 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v74)) {
          goto LABEL_430;
        }
        int v75 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((int)v23 - (int)v75 < 2 || *v75 != 152 || v75[1] != 1) {
          continue;
        }
        int v24 = v75 + 2;
        *((void *)a2 + 1) = v24;
LABEL_230:
        *(void *)uint64_t v137 = 0;
        if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v137)) {
            goto LABEL_430;
          }
          uint64_t v76 = *(void *)v137;
          int v77 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v76 = *v24;
          int v77 = v24 + 1;
          *((void *)a2 + 1) = v77;
        }
        *((unsigned char *)this + 164) = v76 != 0;
        *((_DWORD *)this + 8) |= 0x40000u;
        if ((int)v23 - (int)v77 < 2 || *v77 != 160 || v77[1] != 1) {
          continue;
        }
        int v36 = v77 + 2;
        *((void *)a2 + 1) = v36;
LABEL_239:
        *(void *)uint64_t v137 = 0;
        if ((unint64_t)v36 >= v23 || (char)*v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v137)) {
            goto LABEL_430;
          }
          uint64_t v78 = *(void *)v137;
          long long v79 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v78 = *v36;
          long long v79 = v36 + 1;
          *((void *)a2 + 1) = v79;
        }
        *((void *)this + 23) = v78;
        *((_DWORD *)this + 8) |= 0x80000u;
        if ((int)v23 - (int)v79 < 2 || *v79 != 169 || v79[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v79 + 2;
LABEL_248:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x100000u;
        uint64_t v80 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        if ((int)v25 - (int)v80 < 2 || *v80 != 176 || v80[1] != 1) {
          continue;
        }
        uint64_t v26 = v80 + 2;
        *((void *)a2 + 1) = v26;
LABEL_253:
        v137[0] = 0;
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
            goto LABEL_430;
          }
          unsigned int v81 = v137[0];
          int v82 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v81 = *v26;
          int v82 = v26 + 1;
          *((void *)a2 + 1) = v82;
        }
        *((_DWORD *)this + 98) = v81;
        int v29 = *((_DWORD *)this + 8) | 0x200000;
        *((_DWORD *)this + 8) = v29;
        if ((int)v25 - (int)v82 < 2 || *v82 != 186 || v82[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v82 + 2;
LABEL_262:
        *((_DWORD *)this + 8) = v29 | 0x400000;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v83 = (std::string *)*((void *)this + 25);
        if (v83 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v83)) {
          goto LABEL_430;
        }
        int v84 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v84 < 2 || *v84 != 194 || v84[1] != 1) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v84 + 2;
LABEL_270:
          int v85 = *((_DWORD *)this + 55);
          uint64_t v86 = *((int *)this + 54);
          if ((int)v86 >= v85)
          {
            if (v85 == *((_DWORD *)this + 56)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 208, v85 + 1);
            }
            google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
          }
          uint64_t v87 = *((void *)this + 26);
          *((_DWORD *)this + 54) = v86 + 1;
          uint64_t v88 = *(topotext::Attachment **)(v87 + 8 * v86);
          v137[0] = 0;
          int v89 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v89 >= *((void *)a2 + 2) || *v89 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
              goto LABEL_430;
            }
          }
          else
          {
            v137[0] = *v89;
            *((void *)a2 + 1) = v89 + 1;
          }
          int v90 = *((_DWORD *)a2 + 14);
          int v91 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v90 + 1;
          if (v90 >= v91) {
            goto LABEL_430;
          }
          int v92 = google::protobuf::io::CodedInputStream::PushLimit(a2, v137[0]);
          if (!topotext::Attachment::MergePartialFromCodedStream(v88, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_430;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v92);
          int v93 = *((_DWORD *)a2 + 14);
          BOOL v46 = __OFSUB__(v93, 1);
          int v94 = v93 - 1;
          if (v94 < 0 == v46) {
            *((_DWORD *)a2 + 14) = v94;
          }
          int v84 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v40 = *((void *)a2 + 2);
          if ((int)v40 - (int)v84 <= 1) {
            goto LABEL_2;
          }
          int v95 = *v84;
          if (v95 == 200) {
            break;
          }
          if (v95 != 194 || v84[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v84[1] != 1) {
          continue;
        }
        uint64_t v41 = v84 + 2;
        *((void *)a2 + 1) = v41;
LABEL_291:
        *(void *)uint64_t v137 = 0;
        if ((unint64_t)v41 >= v40 || (char)*v41 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v137)) {
            goto LABEL_430;
          }
          uint64_t v96 = *(void *)v137;
          int v97 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v40 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v96 = *v41;
          int v97 = v41 + 1;
          *((void *)a2 + 1) = v97;
        }
        *((void *)this + 29) = v96;
        *((_DWORD *)this + 8) |= 0x1000000u;
        if ((int)v40 - (int)v97 < 2 || *v97 != 209 || v97[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v97 + 2;
LABEL_300:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 30) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x2000000u;
        int v98 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v98 < 2 || *v98 != 217 || v98[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v98 + 2;
LABEL_305:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 31) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x4000000u;
        int v99 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v99 < 2 || *v99 != 225 || v99[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v99 + 2;
LABEL_310:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 32) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x8000000u;
        int v100 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v100 < 2 || *v100 != 233 || v100[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v100 + 2;
LABEL_315:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 33) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x10000000u;
        int v101 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v101 < 2 || *v101 != 241 || v101[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v101 + 2;
LABEL_320:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 34) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x20000000u;
        uint64_t v102 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v102 < 2 || *v102 != 249 || v102[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v102 + 2;
LABEL_325:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 35) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x40000000u;
        uint64_t v103 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v103 < 2 || *v103 != 129 || v103[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v103 + 2;
LABEL_330:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 36) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x80000000;
        uint64_t v104 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v104 < 2 || *v104 != 137 || v104[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v104 + 2;
LABEL_335:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137)) {
          goto LABEL_430;
        }
        *((void *)this + 37) = *(void *)v137;
        int v39 = *((_DWORD *)this + 9) | 1;
        *((_DWORD *)this + 9) = v39;
        int v105 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v105 < 2 || *v105 != 146 || v105[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v105 + 2;
LABEL_340:
        *((_DWORD *)this + 9) = v39 | 2;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v106 = (std::string *)*((void *)this + 38);
        if (v106 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v106)) {
          goto LABEL_430;
        }
        int v107 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v107 < 2 || *v107 != 154 || v107[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v107 + 2;
LABEL_348:
        *((_DWORD *)this + 9) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v108 = (std::string *)*((void *)this + 39);
        if (v108 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v108)) {
          goto LABEL_430;
        }
        int v109 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v109 < 2 || *v109 != 162 || v109[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v109 + 2;
LABEL_356:
        *((_DWORD *)this + 9) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        uint64_t v110 = (std::string *)*((void *)this + 40);
        if (v110 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v110)) {
          goto LABEL_430;
        }
        uint64_t v111 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v111 < 2 || *v111 != 170 || v111[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v111 + 2;
LABEL_364:
        *((_DWORD *)this + 9) |= 0x10u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v112 = (std::string *)*((void *)this + 41);
        if (v112 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v112)) {
          goto LABEL_430;
        }
        v113 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v113 < 2 || *v113 != 178 || v113[1] != 2) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v113 + 2;
LABEL_372:
          uint64_t v114 = *((int *)this + 86);
          int v115 = *((_DWORD *)this + 87);
          if ((int)v114 >= v115)
          {
            if (v115 == *((_DWORD *)this + 88)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 336, v115 + 1);
            }
            google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
          }
          uint64_t v116 = *((void *)this + 42);
          *((_DWORD *)this + 86) = v114 + 1;
          int v117 = *(topotext::Attachment **)(v116 + 8 * v114);
          v137[0] = 0;
          int v118 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v118 >= *((void *)a2 + 2) || *v118 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v137)) {
              goto LABEL_430;
            }
          }
          else
          {
            v137[0] = *v118;
            *((void *)a2 + 1) = v118 + 1;
          }
          int v119 = *((_DWORD *)a2 + 14);
          int v120 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v119 + 1;
          if (v119 >= v120) {
            goto LABEL_430;
          }
          int v121 = google::protobuf::io::CodedInputStream::PushLimit(a2, v137[0]);
          if (!topotext::Attachment::MergePartialFromCodedStream(v117, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_430;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v121);
          int v122 = *((_DWORD *)a2 + 14);
          BOOL v46 = __OFSUB__(v122, 1);
          int v123 = v122 - 1;
          if (v123 < 0 == v46) {
            *((_DWORD *)a2 + 14) = v123;
          }
          v113 = (unsigned __int8 *)*((void *)a2 + 1);
          if (*((_DWORD *)a2 + 4) - (int)v113 <= 1) {
            goto LABEL_2;
          }
          int v124 = *v113;
          if (v124 == 186) {
            break;
          }
          if (v124 != 178 || v113[1] != 2) {
            goto LABEL_2;
          }
        }
        if (v113[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v113 + 2;
LABEL_393:
        *((_DWORD *)this + 9) |= 0x40u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v125 = (std::string *)*((void *)this + 45);
        if (v125 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v125)) {
          goto LABEL_430;
        }
        int v126 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v126 < 2 || *v126 != 194 || v126[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v126 + 2;
LABEL_401:
        *((_DWORD *)this + 9) |= 0x80u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        int v127 = (std::string *)*((void *)this + 46);
        if (v127 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v127)) {
          goto LABEL_430;
        }
        int v128 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v128 < 2 || *v128 != 202 || v128[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v128 + 2;
LABEL_409:
        *((_DWORD *)this + 9) |= 0x100u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_433;
        }
        v129 = (std::string *)*((void *)this + 47);
        if (v129 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v129)) {
          goto LABEL_430;
        }
        v130 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v130 < 2 || *v130 != 210 || v130[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v130 + 2;
LABEL_417:
        *((_DWORD *)this + 9) |= 0x200u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_433:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        v131 = (std::string *)*((void *)this + 48);
        if (v131 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v131)) {
          goto LABEL_430;
        }
        int v132 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v132 < 2 || *v132 != 217 || v132[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v132 + 2;
LABEL_425:
        *(void *)uint64_t v137 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v137))
        {
LABEL_430:
          uint64_t v133 = 0;
          goto LABEL_432;
        }
        *((void *)this + 19) = *(void *)v137;
        *((_DWORD *)this + 8) |= 0x8000u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v133 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_432:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v135);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v136);
        return v133;
      case 3u:
        if (v10 == 26) {
          goto LABEL_64;
        }
        goto LABEL_150;
      case 4u:
        if (v10 == 37) {
          goto LABEL_71;
        }
        goto LABEL_150;
      case 5u:
        if (v10 == 45) {
          goto LABEL_75;
        }
        goto LABEL_150;
      case 6u:
        if (v10 != 50) {
          goto LABEL_150;
        }
        int v16 = *((_DWORD *)this + 8);
        goto LABEL_79;
      case 7u:
        if (v10 == 58) {
          goto LABEL_95;
        }
        goto LABEL_150;
      case 8u:
        if (v10 == 66) {
          goto LABEL_107;
        }
        goto LABEL_150;
      case 9u:
        if (v10 == 74) {
          goto LABEL_114;
        }
        goto LABEL_150;
      case 0xAu:
        if (v10 == 82) {
          goto LABEL_126;
        }
        goto LABEL_150;
      case 0xBu:
        if (v10 == 90) {
          goto LABEL_163;
        }
        goto LABEL_150;
      case 0xCu:
        if (v10 == 98) {
          goto LABEL_177;
        }
        goto LABEL_150;
      case 0xDu:
        if (v10 == 109) {
          goto LABEL_195;
        }
        goto LABEL_150;
      case 0xEu:
        if (v10 == 117) {
          goto LABEL_199;
        }
        goto LABEL_150;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_150;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_203;
      case 0x10u:
        if (v10 == 129) {
          goto LABEL_212;
        }
        goto LABEL_150;
      case 0x11u:
        if (v10 == 137) {
          goto LABEL_217;
        }
        goto LABEL_150;
      case 0x12u:
        if (v10 != 146) {
          goto LABEL_150;
        }
        int v15 = *((_DWORD *)this + 8);
        goto LABEL_222;
      case 0x13u:
        if (v10 != 152) {
          goto LABEL_150;
        }
        int v24 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_230;
      case 0x14u:
        if (v10 != 160) {
          goto LABEL_150;
        }
        int v36 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_239;
      case 0x15u:
        if (v10 == 169) {
          goto LABEL_248;
        }
        goto LABEL_150;
      case 0x16u:
        if (v10 != 176) {
          goto LABEL_150;
        }
        uint64_t v26 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_253;
      case 0x17u:
        if (v10 != 186) {
          goto LABEL_150;
        }
        int v29 = *((_DWORD *)this + 8);
        goto LABEL_262;
      case 0x18u:
        if (v10 == 194) {
          goto LABEL_270;
        }
        goto LABEL_150;
      case 0x19u:
        if (v10 != 200) {
          goto LABEL_150;
        }
        uint64_t v41 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v40 = *((void *)a2 + 2);
        goto LABEL_291;
      case 0x1Au:
        if (v10 == 209) {
          goto LABEL_300;
        }
        goto LABEL_150;
      case 0x1Bu:
        if (v10 == 217) {
          goto LABEL_305;
        }
        goto LABEL_150;
      case 0x1Cu:
        if (v10 != 225) {
          goto LABEL_150;
        }
        goto LABEL_310;
      case 0x1Du:
        if (v10 == 233) {
          goto LABEL_315;
        }
        goto LABEL_150;
      case 0x1Eu:
        if (v10 == 241) {
          goto LABEL_320;
        }
        goto LABEL_150;
      case 0x1Fu:
        if (v10 == 249) {
          goto LABEL_325;
        }
        goto LABEL_150;
      case 0x20u:
        if (v10 == 257) {
          goto LABEL_330;
        }
        goto LABEL_150;
      case 0x21u:
        if (v10 == 265) {
          goto LABEL_335;
        }
        goto LABEL_150;
      case 0x22u:
        if (v10 != 274) {
          goto LABEL_150;
        }
        int v39 = *((_DWORD *)this + 9);
        goto LABEL_340;
      case 0x23u:
        if (v10 == 282) {
          goto LABEL_348;
        }
        goto LABEL_150;
      case 0x24u:
        if (v10 == 290) {
          goto LABEL_356;
        }
        goto LABEL_150;
      case 0x25u:
        if (v10 == 298) {
          goto LABEL_364;
        }
        goto LABEL_150;
      case 0x26u:
        if (v10 == 306) {
          goto LABEL_372;
        }
        goto LABEL_150;
      case 0x27u:
        if (v10 == 314) {
          goto LABEL_393;
        }
        goto LABEL_150;
      case 0x28u:
        if (v10 == 322) {
          goto LABEL_401;
        }
        goto LABEL_150;
      case 0x29u:
        if (v10 == 330) {
          goto LABEL_409;
        }
        goto LABEL_150;
      case 0x2Au:
        if (v10 == 338) {
          goto LABEL_417;
        }
        goto LABEL_150;
      case 0x2Bu:
        if (v10 == 345) {
          goto LABEL_425;
        }
LABEL_150:
        if (v10 && (v10 & 7) != 4) {
          goto LABEL_152;
        }
        goto LABEL_431;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1C3B7C480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C40DF275E33);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::SerializeWithCachedSizes(topotext::Attachment *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)v5 + 6), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)v5 + 14), a3);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)5, a2, *((float *)v5 + 15), a3);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(6, *((void *)v5 + 8), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(7, *((void *)v5 + 9), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(8, *((void *)v5 + 10), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((void *)v5 + 11), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v7 = *((void *)v5 + 12);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v7 = *(void *)(topotext::Attachment::default_instance_ + 96);
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v7, a2);
  if ((*((_DWORD *)v5 + 8) & 0x200) != 0)
  {
LABEL_23:
    uint64_t v8 = *((void *)v5 + 13);
    if (!v8)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v8 = *(void *)(topotext::Attachment::default_instance_ + 104);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(11, v8, a2);
  }
LABEL_26:
  if (*((int *)v5 + 30) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)v5 + 112, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v5 + 30));
  }
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x800) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xD, a2, *((float *)v5 + 34), a3);
    int v11 = *((_DWORD *)v5 + 8);
    if ((v11 & 0x1000) == 0)
    {
LABEL_31:
      if ((v11 & 0x2000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_72;
    }
  }
  else if ((v11 & 0x1000) == 0)
  {
    goto LABEL_31;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xE, a2, *((float *)v5 + 35), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x2000) == 0)
  {
LABEL_32:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_73;
  }
LABEL_72:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xF, *((_DWORD *)v5 + 40), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x4000) == 0)
  {
LABEL_33:
    if ((v11 & 0x10000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_74;
  }
LABEL_73:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x10, a2, *((double *)v5 + 18), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x10000) == 0)
  {
LABEL_34:
    if ((v11 & 0x20000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_75;
  }
LABEL_74:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x11, a2, *((double *)v5 + 21), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x20000) == 0)
  {
LABEL_35:
    if ((v11 & 0x40000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_76;
  }
LABEL_75:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(18, *((void *)v5 + 22), a2);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x40000) == 0)
  {
LABEL_36:
    if ((v11 & 0x80000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_77;
  }
LABEL_76:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)0x13, *((unsigned __int8 *)v5 + 164), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x80000) == 0)
  {
LABEL_37:
    if ((v11 & 0x100000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_78;
  }
LABEL_77:
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x14, *((void *)v5 + 23), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x100000) == 0)
  {
LABEL_38:
    if ((v11 & 0x200000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_79;
  }
LABEL_78:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x15, a2, *((double *)v5 + 24), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x200000) == 0)
  {
LABEL_39:
    if ((v11 & 0x400000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_79:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0x16, *((_DWORD *)v5 + 98), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x400000) != 0) {
LABEL_40:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(23, *((void *)v5 + 25), a2);
LABEL_41:
  if (*((int *)v5 + 54) >= 1)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v5 + 208, v12);
      google::protobuf::internal::WireFormatLite::WriteMessage(24, v13, a2);
      ++v12;
    }
    while (v12 < *((_DWORD *)v5 + 54));
  }
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x1000000) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x19, *((void *)v5 + 29), a2, a4);
    int v14 = *((_DWORD *)v5 + 8);
    if ((v14 & 0x2000000) == 0)
    {
LABEL_46:
      if ((v14 & 0x4000000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_83;
    }
  }
  else if ((v14 & 0x2000000) == 0)
  {
    goto LABEL_46;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1A, a2, *((double *)v5 + 30), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_47:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_84;
  }
LABEL_83:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1B, a2, *((double *)v5 + 31), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_48:
    if ((v14 & 0x10000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_85;
  }
LABEL_84:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1C, a2, *((double *)v5 + 32), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x10000000) == 0)
  {
LABEL_49:
    if ((v14 & 0x20000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_86;
  }
LABEL_85:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1D, a2, *((double *)v5 + 33), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x20000000) == 0)
  {
LABEL_50:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_51;
    }
LABEL_87:
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1F, a2, *((double *)v5 + 35), a3);
    if ((*((_DWORD *)v5 + 8) & 0x80000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_88;
  }
LABEL_86:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1E, a2, *((double *)v5 + 34), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x40000000) != 0) {
    goto LABEL_87;
  }
LABEL_51:
  if ((v14 & 0x80000000) == 0) {
    goto LABEL_52;
  }
LABEL_88:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x20, a2, *((double *)v5 + 36), a3);
LABEL_52:
  int v15 = *((_DWORD *)v5 + 9);
  if (v15)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x21, a2, *((double *)v5 + 37), a3);
    int v15 = *((_DWORD *)v5 + 9);
    if ((v15 & 2) == 0)
    {
LABEL_54:
      if ((v15 & 4) == 0) {
        goto LABEL_55;
      }
      goto LABEL_91;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_54;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(34, *((void *)v5 + 38), a2);
  int v15 = *((_DWORD *)v5 + 9);
  if ((v15 & 4) == 0)
  {
LABEL_55:
    if ((v15 & 8) == 0) {
      goto LABEL_56;
    }
    goto LABEL_92;
  }
LABEL_91:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(35, *((void *)v5 + 39), a2);
  int v15 = *((_DWORD *)v5 + 9);
  if ((v15 & 8) == 0)
  {
LABEL_56:
    if ((v15 & 0x10) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }
LABEL_92:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(36, *((void *)v5 + 40), a2);
  if ((*((_DWORD *)v5 + 9) & 0x10) != 0) {
LABEL_57:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(37, *((void *)v5 + 41), a2);
LABEL_58:
  if (*((int *)v5 + 86) >= 1)
  {
    int v16 = 0;
    do
    {
      uint64_t v17 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v5 + 336, v16);
      google::protobuf::internal::WireFormatLite::WriteMessage(38, v17, a2);
      ++v16;
    }
    while (v16 < *((_DWORD *)v5 + 86));
  }
  int v18 = *((_DWORD *)v5 + 9);
  if ((v18 & 0x40) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(39, *((void *)v5 + 45), a2);
    int v18 = *((_DWORD *)v5 + 9);
    if ((v18 & 0x80) == 0)
    {
LABEL_63:
      if ((v18 & 0x100) == 0) {
        goto LABEL_64;
      }
      goto LABEL_96;
    }
  }
  else if ((v18 & 0x80) == 0)
  {
    goto LABEL_63;
  }
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(40, *((void *)v5 + 46), a2);
  int v18 = *((_DWORD *)v5 + 9);
  if ((v18 & 0x100) == 0)
  {
LABEL_64:
    if ((v18 & 0x200) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
LABEL_96:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(41, *((void *)v5 + 47), a2);
  if ((*((_DWORD *)v5 + 9) & 0x200) != 0) {
LABEL_65:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(42, *((void *)v5 + 48), a2);
LABEL_66:
  if ((*((unsigned char *)v5 + 33) & 0x80) != 0) {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x2B, a2, *((double *)v5 + 19), a3);
  }
  if (*((char *)v5 + 31) < 0)
  {
    uint64_t v19 = (char *)*((void *)v5 + 1);
    uint64_t v20 = *((void *)v5 + 2);
  }
  else
  {
    uint64_t v19 = (char *)v5 + 8;
    LODWORD(v20) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v19, v20);
}

uint64_t topotext::Attachment::ByteSize(topotext::Attachment *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_70;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 5);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v3 = v10 + v6 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  int v17 = v3 + 5;
  if ((v2 & 4) == 0) {
    int v17 = v3;
  }
  if ((v2 & 8) != 0) {
    int v4 = v17 + 5;
  }
  else {
    int v4 = v17;
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v18 = *((void *)this + 8);
    int v19 = *(unsigned __int8 *)(v18 + 23);
    char v20 = v19;
    uint64_t v21 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      unint64_t v22 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      unint64_t v22 = v21;
    }
    if (v22 >= 0x80)
    {
      int v23 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v22);
      int v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v21 = *(void *)(v18 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v20 = *(unsigned char *)(v18 + 23);
    }
    else
    {
      int v23 = 1;
    }
    if (v20 < 0) {
      int v19 = v21;
    }
    v4 += v23 + v19 + 1;
    if ((v2 & 0x20) == 0)
    {
LABEL_31:
      if ((v2 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v24 = *((void *)this + 9);
  int v25 = *(unsigned __int8 *)(v24 + 23);
  char v26 = v25;
  uint64_t v27 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    unint64_t v28 = *(unsigned __int8 *)(v24 + 23);
  }
  else {
    unint64_t v28 = v27;
  }
  if (v28 >= 0x80)
  {
    int v29 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v28);
    int v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v27 = *(void *)(v24 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v26 = *(unsigned char *)(v24 + 23);
  }
  else
  {
    int v29 = 1;
  }
  if (v26 < 0) {
    int v25 = v27;
  }
  v4 += v29 + v25 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_61;
  }
LABEL_52:
  uint64_t v30 = *((void *)this + 10);
  int v31 = *(unsigned __int8 *)(v30 + 23);
  char v32 = v31;
  uint64_t v33 = *(void *)(v30 + 8);
  if ((v31 & 0x80u) == 0) {
    unint64_t v34 = *(unsigned __int8 *)(v30 + 23);
  }
  else {
    unint64_t v34 = v33;
  }
  if (v34 >= 0x80)
  {
    int v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v34);
    int v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v33 = *(void *)(v30 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v32 = *(unsigned char *)(v30 + 23);
  }
  else
  {
    int v35 = 1;
  }
  if (v32 < 0) {
    int v31 = v33;
  }
  v4 += v35 + v31 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_61:
    uint64_t v36 = *((void *)this + 11);
    int v37 = *(unsigned __int8 *)(v36 + 23);
    char v38 = v37;
    uint64_t v39 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      unint64_t v40 = *(unsigned __int8 *)(v36 + 23);
    }
    else {
      unint64_t v40 = v39;
    }
    if (v40 >= 0x80)
    {
      int v41 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v40);
      int v37 = *(unsigned __int8 *)(v36 + 23);
      uint64_t v39 = *(void *)(v36 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v38 = *(unsigned char *)(v36 + 23);
    }
    else
    {
      int v41 = 1;
    }
    if (v38 < 0) {
      int v37 = v39;
    }
    v4 += v41 + v37 + 1;
  }
LABEL_70:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v42 = (topotext::Location *)*((void *)this + 12);
      if (!v42)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        int v42 = *(topotext::Location **)(topotext::Attachment::default_instance_ + 96);
      }
      int v43 = (google::protobuf::io::CodedOutputStream *)topotext::Location::ByteSize(v42);
      int v44 = (int)v43;
      if (v43 >= 0x80) {
        int v45 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      }
      else {
        int v45 = 1;
      }
      v4 += v44 + v45 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x200) != 0)
    {
      BOOL v46 = (topotext::Media *)*((void *)this + 13);
      if (!v46)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        BOOL v46 = *(topotext::Media **)(topotext::Attachment::default_instance_ + 104);
      }
      int v47 = (google::protobuf::io::CodedOutputStream *)topotext::Media::ByteSize(v46);
      int v48 = (int)v47;
      if (v47 >= 0x80) {
        int v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
      }
      else {
        int v49 = 1;
      }
      v4 += v48 + v49 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    int v50 = v4 + 5;
    if ((v2 & 0x800) == 0) {
      int v50 = v4;
    }
    if ((v2 & 0x1000) != 0) {
      int v51 = v50 + 5;
    }
    else {
      int v51 = v50;
    }
    if ((v2 & 0x2000) != 0)
    {
      int v52 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v52 & 0x80000000) != 0)
      {
        int v53 = 10;
      }
      else if (v52 >= 0x80)
      {
        int v53 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v53 = 1;
      }
      v51 += v53 + 1;
    }
    int v54 = v51 + 10;
    if ((v2 & 0x4000) == 0) {
      int v54 = v51;
    }
    if ((v2 & 0x8000) != 0) {
      int v4 = v54 + 10;
    }
    else {
      int v4 = v54;
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0) {
      int v55 = v4 + 10;
    }
    else {
      int v55 = v4;
    }
    if ((v2 & 0x20000) != 0)
    {
      uint64_t v56 = *((void *)this + 22);
      int v57 = *(unsigned __int8 *)(v56 + 23);
      char v58 = v57;
      uint64_t v59 = *(void *)(v56 + 8);
      if ((v57 & 0x80u) == 0) {
        unint64_t v60 = *(unsigned __int8 *)(v56 + 23);
      }
      else {
        unint64_t v60 = v59;
      }
      if (v60 >= 0x80)
      {
        int v61 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v60);
        int v57 = *(unsigned __int8 *)(v56 + 23);
        uint64_t v59 = *(void *)(v56 + 8);
        int v2 = *((_DWORD *)this + 8);
        char v58 = *(unsigned char *)(v56 + 23);
      }
      else
      {
        int v61 = 1;
      }
      if (v58 < 0) {
        int v57 = v59;
      }
      v55 += v61 + v57 + 2;
    }
    if ((v2 & 0x40000) != 0) {
      v55 += 3;
    }
    if ((v2 & 0x80000) != 0)
    {
      v55 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 23)) + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x100000) != 0) {
      int v4 = v55 + 10;
    }
    else {
      int v4 = v55;
    }
    if ((v2 & 0x200000) != 0)
    {
      int v62 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 98);
      if ((v62 & 0x80000000) != 0)
      {
        int v63 = 10;
      }
      else if (v62 >= 0x80)
      {
        int v63 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v63 = 1;
      }
      v4 += v63 + 2;
    }
    if ((v2 & 0x400000) != 0)
    {
      uint64_t v64 = *((void *)this + 25);
      int v65 = *(unsigned __int8 *)(v64 + 23);
      char v66 = v65;
      uint64_t v67 = *(void *)(v64 + 8);
      if ((v65 & 0x80u) == 0) {
        unint64_t v68 = *(unsigned __int8 *)(v64 + 23);
      }
      else {
        unint64_t v68 = v67;
      }
      if (v68 >= 0x80)
      {
        int v69 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v68);
        int v65 = *(unsigned __int8 *)(v64 + 23);
        uint64_t v67 = *(void *)(v64 + 8);
        int v2 = *((_DWORD *)this + 8);
        char v66 = *(unsigned char *)(v64 + 23);
      }
      else
      {
        int v69 = 1;
      }
      if (v66 < 0) {
        int v65 = v67;
      }
      v4 += v69 + v65 + 2;
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      v4 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 29)) + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    int v70 = v4 + 10;
    if ((v2 & 0x2000000) == 0) {
      int v70 = v4;
    }
    if ((v2 & 0x4000000) != 0) {
      v70 += 10;
    }
    if ((v2 & 0x8000000) != 0) {
      v70 += 10;
    }
    if ((v2 & 0x10000000) != 0) {
      v70 += 10;
    }
    if ((v2 & 0x20000000) != 0) {
      v70 += 10;
    }
    if ((v2 & 0x40000000) != 0) {
      v70 += 10;
    }
    if (v2 >= 0) {
      int v4 = v70;
    }
    else {
      int v4 = v70 + 10;
    }
  }
  int v71 = *((_DWORD *)this + 9);
  if (!(_BYTE)v71) {
    goto LABEL_222;
  }
  if (v71) {
    v4 += 10;
  }
  if ((v71 & 2) != 0)
  {
    uint64_t v72 = *((void *)this + 38);
    int v73 = *(unsigned __int8 *)(v72 + 23);
    char v74 = v73;
    uint64_t v75 = *(void *)(v72 + 8);
    if ((v73 & 0x80u) == 0) {
      unint64_t v76 = *(unsigned __int8 *)(v72 + 23);
    }
    else {
      unint64_t v76 = v75;
    }
    if (v76 >= 0x80)
    {
      int v77 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v76);
      int v73 = *(unsigned __int8 *)(v72 + 23);
      uint64_t v75 = *(void *)(v72 + 8);
      int v71 = *((_DWORD *)this + 9);
      char v74 = *(unsigned char *)(v72 + 23);
    }
    else
    {
      int v77 = 1;
    }
    if (v74 < 0) {
      int v73 = v75;
    }
    v4 += v77 + v73 + 2;
    if ((v71 & 4) == 0)
    {
LABEL_163:
      if ((v71 & 8) == 0) {
        goto LABEL_164;
      }
      goto LABEL_186;
    }
  }
  else if ((v71 & 4) == 0)
  {
    goto LABEL_163;
  }
  uint64_t v78 = *((void *)this + 39);
  int v79 = *(unsigned __int8 *)(v78 + 23);
  char v80 = v79;
  uint64_t v81 = *(void *)(v78 + 8);
  if ((v79 & 0x80u) == 0) {
    unint64_t v82 = *(unsigned __int8 *)(v78 + 23);
  }
  else {
    unint64_t v82 = v81;
  }
  if (v82 >= 0x80)
  {
    int v83 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v82);
    int v79 = *(unsigned __int8 *)(v78 + 23);
    uint64_t v81 = *(void *)(v78 + 8);
    int v71 = *((_DWORD *)this + 9);
    char v80 = *(unsigned char *)(v78 + 23);
  }
  else
  {
    int v83 = 1;
  }
  if (v80 < 0) {
    int v79 = v81;
  }
  v4 += v83 + v79 + 2;
  if ((v71 & 8) == 0)
  {
LABEL_164:
    if ((v71 & 0x10) == 0) {
      goto LABEL_165;
    }
LABEL_195:
    uint64_t v90 = *((void *)this + 41);
    int v91 = *(unsigned __int8 *)(v90 + 23);
    char v92 = v91;
    uint64_t v93 = *(void *)(v90 + 8);
    if ((v91 & 0x80u) == 0) {
      unint64_t v94 = *(unsigned __int8 *)(v90 + 23);
    }
    else {
      unint64_t v94 = v93;
    }
    if (v94 >= 0x80)
    {
      int v95 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v94);
      int v91 = *(unsigned __int8 *)(v90 + 23);
      uint64_t v93 = *(void *)(v90 + 8);
      int v71 = *((_DWORD *)this + 9);
      char v92 = *(unsigned char *)(v90 + 23);
    }
    else
    {
      int v95 = 1;
    }
    if (v92 < 0) {
      int v91 = v93;
    }
    v4 += v95 + v91 + 2;
    if ((v71 & 0x40) == 0)
    {
LABEL_166:
      if ((v71 & 0x80) == 0) {
        goto LABEL_222;
      }
      goto LABEL_213;
    }
    goto LABEL_204;
  }
LABEL_186:
  uint64_t v84 = *((void *)this + 40);
  int v85 = *(unsigned __int8 *)(v84 + 23);
  char v86 = v85;
  uint64_t v87 = *(void *)(v84 + 8);
  if ((v85 & 0x80u) == 0) {
    unint64_t v88 = *(unsigned __int8 *)(v84 + 23);
  }
  else {
    unint64_t v88 = v87;
  }
  if (v88 >= 0x80)
  {
    int v89 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v88);
    int v85 = *(unsigned __int8 *)(v84 + 23);
    uint64_t v87 = *(void *)(v84 + 8);
    int v71 = *((_DWORD *)this + 9);
    char v86 = *(unsigned char *)(v84 + 23);
  }
  else
  {
    int v89 = 1;
  }
  if (v86 < 0) {
    int v85 = v87;
  }
  v4 += v89 + v85 + 2;
  if ((v71 & 0x10) != 0) {
    goto LABEL_195;
  }
LABEL_165:
  if ((v71 & 0x40) == 0) {
    goto LABEL_166;
  }
LABEL_204:
  uint64_t v96 = *((void *)this + 45);
  int v97 = *(unsigned __int8 *)(v96 + 23);
  char v98 = v97;
  uint64_t v99 = *(void *)(v96 + 8);
  if ((v97 & 0x80u) == 0) {
    unint64_t v100 = *(unsigned __int8 *)(v96 + 23);
  }
  else {
    unint64_t v100 = v99;
  }
  if (v100 >= 0x80)
  {
    int v101 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v100);
    int v97 = *(unsigned __int8 *)(v96 + 23);
    uint64_t v99 = *(void *)(v96 + 8);
    int v71 = *((_DWORD *)this + 9);
    char v98 = *(unsigned char *)(v96 + 23);
  }
  else
  {
    int v101 = 1;
  }
  if (v98 < 0) {
    int v97 = v99;
  }
  v4 += v101 + v97 + 2;
  if ((v71 & 0x80) != 0)
  {
LABEL_213:
    uint64_t v102 = *((void *)this + 46);
    int v103 = *(unsigned __int8 *)(v102 + 23);
    char v104 = v103;
    uint64_t v105 = *(void *)(v102 + 8);
    if ((v103 & 0x80u) == 0) {
      unint64_t v106 = *(unsigned __int8 *)(v102 + 23);
    }
    else {
      unint64_t v106 = v105;
    }
    if (v106 >= 0x80)
    {
      int v107 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v106);
      int v103 = *(unsigned __int8 *)(v102 + 23);
      uint64_t v105 = *(void *)(v102 + 8);
      int v71 = *((_DWORD *)this + 9);
      char v104 = *(unsigned char *)(v102 + 23);
    }
    else
    {
      int v107 = 1;
    }
    if (v104 < 0) {
      int v103 = v105;
    }
    v4 += v107 + v103 + 2;
  }
LABEL_222:
  if ((v71 & 0xFF00) != 0)
  {
    if ((v71 & 0x100) != 0)
    {
      uint64_t v108 = *((void *)this + 47);
      int v109 = *(unsigned __int8 *)(v108 + 23);
      char v110 = v109;
      uint64_t v111 = *(void *)(v108 + 8);
      if ((v109 & 0x80u) == 0) {
        unint64_t v112 = *(unsigned __int8 *)(v108 + 23);
      }
      else {
        unint64_t v112 = v111;
      }
      if (v112 >= 0x80)
      {
        int v113 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v112);
        int v109 = *(unsigned __int8 *)(v108 + 23);
        uint64_t v111 = *(void *)(v108 + 8);
        int v71 = *((_DWORD *)this + 9);
        char v110 = *(unsigned char *)(v108 + 23);
      }
      else
      {
        int v113 = 1;
      }
      if (v110 < 0) {
        int v109 = v111;
      }
      v4 += v113 + v109 + 2;
    }
    if ((v71 & 0x200) != 0)
    {
      uint64_t v114 = *((void *)this + 48);
      int v115 = *(unsigned __int8 *)(v114 + 23);
      char v116 = v115;
      uint64_t v117 = *(void *)(v114 + 8);
      if ((v115 & 0x80u) == 0) {
        unint64_t v118 = *(unsigned __int8 *)(v114 + 23);
      }
      else {
        unint64_t v118 = v117;
      }
      if (v118 >= 0x80)
      {
        int v119 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v118);
        int v115 = *(unsigned __int8 *)(v114 + 23);
        uint64_t v117 = *(void *)(v114 + 8);
        char v116 = *(unsigned char *)(v114 + 23);
      }
      else
      {
        int v119 = 1;
      }
      if (v116 < 0) {
        int v115 = v117;
      }
      v4 += v119 + v115 + 2;
    }
  }
  int v120 = *((_DWORD *)this + 30);
  int v121 = v120 + v4;
  if (v120 >= 1)
  {
    int v122 = 0;
    do
    {
      int v123 = (topotext::PreviewImage *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)this + 112, v122);
      int v124 = (google::protobuf::io::CodedOutputStream *)topotext::PreviewImage::ByteSize(v123);
      int v125 = (int)v124;
      if (v124 >= 0x80) {
        int v126 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124);
      }
      else {
        int v126 = 1;
      }
      v121 += v125 + v126;
      ++v122;
    }
    while (v122 < *((_DWORD *)this + 30));
  }
  int v127 = *((_DWORD *)this + 54);
  int v128 = v121 + 2 * v127;
  if (v127 >= 1)
  {
    int v129 = 0;
    do
    {
      v130 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 208, v129);
      v131 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v130);
      int v132 = (int)v131;
      if (v131 >= 0x80) {
        int v133 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
      }
      else {
        int v133 = 1;
      }
      v128 += v132 + v133;
      ++v129;
    }
    while (v129 < *((_DWORD *)this + 54));
  }
  int v134 = *((_DWORD *)this + 86);
  int v135 = v128 + 2 * v134;
  if (v134 >= 1)
  {
    int v136 = 0;
    do
    {
      uint64_t v137 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 336, v136);
      v138 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v137);
      int v139 = (int)v138;
      if (v138 >= 0x80) {
        int v140 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v138);
      }
      else {
        int v140 = 1;
      }
      v135 += v139 + v140;
      ++v136;
    }
    while (v136 < *((_DWORD *)this + 86));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v141 = *((void *)this + 2);
  }
  else {
    LODWORD(v141) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v135 + v141);
  *((_DWORD *)this + 99) = result;
  return result;
}

std::string *topotext::Attachment::CheckTypeAndMergeFrom(topotext::Attachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Attachment::MergeFrom(this, lpsrc);
}

std::string *topotext::Location::MergeFrom(topotext::Location *this, const topotext::Location *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6035);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    uint64_t v15 = *((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 6) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  uint64_t v14 = *((void *)a2 + 5);
  *((_DWORD *)this + 8) |= 1u;
  *((void *)this + 5) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = (const std::string *)*((void *)a2 + 7);
  *((_DWORD *)this + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  int v17 = (std::string *)*((void *)this + 7);
  if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v17, v16);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    char v6 = *((unsigned char *)a2 + 64);
    *((_DWORD *)this + 8) |= 8u;
    *((unsigned char *)this + 64) = v6;
  }
LABEL_9:
  unint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  char v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B7D648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Media::MergeFrom(topotext::Media *this, const topotext::Media *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6385);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      char v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      char v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      unint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v10 = (const std::string *)*((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v11 = (std::string *)*((void *)this + 7);
      if (v11 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      std::string::size_type v12 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      char v13 = (std::string *)*((void *)this + 8);
      if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v13, v12);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      uint64_t v14 = *((void *)a2 + 9);
      *((_DWORD *)this + 8) |= 0x10u;
      *((void *)this + 9) = v14;
    }
  }
  int v17 = (const std::string::value_type *)*((void *)a2 + 1);
  int v16 = (char *)a2 + 8;
  uint64_t v15 = v17;
  int v18 = v16[23];
  if (v18 >= 0) {
    int v19 = v16;
  }
  else {
    int v19 = v15;
  }
  if (v18 >= 0) {
    std::string::size_type v20 = v16[23];
  }
  else {
    std::string::size_type v20 = *((void *)v16 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v19, v20);
}

void sub_1C3B7D8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::IsInitialized(topotext::Attachment *this)
{
  return 1;
}

void *topotext::Attachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Attachment");
}

void topotext::Location::~Location(void **this)
{
  *this = &unk_1F1F263B8;
  topotext::Location::SharedDtor((topotext::Location *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Location::~Location(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Location::SharedDtor(topotext::Location *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 7);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (topotext::Location *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::Location::New(topotext::Location *this)
{
}

void sub_1C3B7DA38(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C4099D76EF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::MergePartialFromCodedStream(topotext::Location *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v22, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21, (google::protobuf::io::ZeroCopyOutputStream *)v22);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_48:
        uint64_t v19 = 1;
        goto LABEL_49;
      }
LABEL_25:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v21, v4))goto LABEL_47; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 9) {
          goto LABEL_23;
        }
        unint64_t v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23)) {
          goto LABEL_47;
        }
        *((void *)this + 5) = v23;
        *((_DWORD *)this + 8) |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_27:
        unint64_t v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23)) {
          goto LABEL_47;
        }
        *((void *)this + 6) = v23;
        int v11 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v11;
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_31:
        *((_DWORD *)this + 8) = v11 | 4;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        uint64_t v15 = (std::string *)*((void *)this + 7);
        if (v15 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v15)) {
          goto LABEL_47;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v12 || *v16 != 32) {
          continue;
        }
        char v13 = v16 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_38;
      case 2u:
        if (v7 != 17) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 3u:
        if (v7 != 26) {
          goto LABEL_23;
        }
        int v11 = *((_DWORD *)this + 8);
        goto LABEL_31;
      case 4u:
        if (v7 != 32)
        {
LABEL_23:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_48;
          }
          goto LABEL_25;
        }
        char v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_38:
        unint64_t v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v23))
          {
LABEL_47:
            uint64_t v19 = 0;
            goto LABEL_49;
          }
          unint64_t v17 = v23;
          int v18 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v17 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v18;
        }
        *((unsigned char *)this + 64) = v17 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v18 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v19 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_49:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v22);
        return v19;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1C3B7DD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::SerializeWithCachedSizes(topotext::Location *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *((double *)this + 5), a3);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, *((double *)this + 6), a3);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)this + 64), a2, a4);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Location::ByteSize(topotext::Location *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if ((v2 & 2) != 0) {
      int v3 = ((v2 << 31 >> 31) & 9) + 9;
    }
    else {
      int v3 = (v2 << 31 >> 31) & 9;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *((void *)this + 7);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v2 = *((_DWORD *)this + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      v3 += v9 + v5 + 1;
    }
    if ((v2 & 8) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v10);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Location::CheckTypeAndMergeFrom(topotext::Location *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Location::MergeFrom(this, lpsrc);
}

uint64_t topotext::Location::IsInitialized(topotext::Location *this)
{
  return 1;
}

void *topotext::Location::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Location");
}

void topotext::Media::~Media(void **this)
{
  *this = &unk_1F1F26430;
  topotext::AttachmentInfo::SharedDtor((topotext::AttachmentInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Media::~Media(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Media::New(topotext::Media *this)
{
}

void sub_1C3B7E0B0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::MergePartialFromCodedStream(topotext::Media *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v25, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24, (google::protobuf::io::ZeroCopyOutputStream *)v25);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_15:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_63:
        uint64_t v22 = 1;
        goto LABEL_64;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v24, v4))goto LABEL_62; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        int v9 = (std::string *)*((void *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
          goto LABEL_62;
        }
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        uint64_t v14 = (std::string *)*((void *)this + 6);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14)) {
          goto LABEL_62;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_39:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        int v16 = (std::string *)*((void *)this + 7);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v16)) {
          goto LABEL_62;
        }
        unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_46:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_65:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        int v18 = (std::string *)*((void *)this + 8);
        if (v18 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v18)) {
          goto LABEL_62;
        }
        uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v12 || *v19 != 40) {
          continue;
        }
        char v13 = v19 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_53;
      case 2u:
        if (v7 != 18) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 3u:
        if (v7 == 26) {
          goto LABEL_39;
        }
        goto LABEL_28;
      case 4u:
        if (v7 == 34) {
          goto LABEL_46;
        }
        goto LABEL_28;
      case 5u:
        if (v7 != 40)
        {
LABEL_28:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_63;
          }
          goto LABEL_30;
        }
        char v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_53:
        unint64_t v26 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v26))
          {
LABEL_62:
            uint64_t v22 = 0;
            goto LABEL_64;
          }
          unint64_t v20 = v26;
          uint64_t v21 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v20 = *v13;
          uint64_t v21 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v21;
        }
        *((void *)this + 9) = v20;
        *((_DWORD *)this + 8) |= 0x10u;
        if (v21 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v22 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_64:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v25);
        return v22;
      default:
        goto LABEL_15;
    }
  }
}

void sub_1C3B7E4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::SerializeWithCachedSizes(topotext::Media *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 7), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 8), a2);
  if ((*((_DWORD *)this + 8) & 0x10) != 0) {
LABEL_6:
  }
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)5, *((void *)this + 9), a2, a4);
LABEL_7:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Media::ByteSize(topotext::Media *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_28;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v19 = *((void *)this + 7);
    int v20 = *(unsigned __int8 *)(v19 + 23);
    char v21 = v20;
    uint64_t v22 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      unint64_t v23 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      unint64_t v23 = v22;
    }
    if (v23 >= 0x80)
    {
      int v24 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v23);
      int v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v22 = *(void *)(v19 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v21 = *(unsigned char *)(v19 + 23);
    }
    else
    {
      int v24 = 1;
    }
    if (v21 < 0) {
      int v20 = v22;
    }
    v3 += v24 + v20 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v25 = *((void *)this + 8);
  int v26 = *(unsigned __int8 *)(v25 + 23);
  char v27 = v26;
  uint64_t v28 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    unint64_t v29 = *(unsigned __int8 *)(v25 + 23);
  }
  else {
    unint64_t v29 = v28;
  }
  if (v29 >= 0x80)
  {
    int v30 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v29);
    int v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v28 = *(void *)(v25 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v27 = *(unsigned char *)(v25 + 23);
  }
  else
  {
    int v30 = 1;
  }
  if (v27 < 0) {
    int v26 = v28;
  }
  v3 += v30 + v26 + 1;
  if ((v2 & 0x10) != 0) {
LABEL_27:
  }
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 9)) + 1;
LABEL_28:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Media::CheckTypeAndMergeFrom(topotext::Media *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Media::MergeFrom(this, lpsrc);
}

uint64_t topotext::Media::IsInitialized(topotext::Media *this)
{
  return 1;
}

void *topotext::Media::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Media");
}

std::string *topotext::PreviewImage::MergeFrom(topotext::PreviewImage *this, const topotext::PreviewImage *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 6821);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v14 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 12) = v14;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v15 = *((unsigned char *)a2 + 52);
  *((_DWORD *)this + 8) |= 2u;
  *((unsigned char *)this + 52) = v15;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v16 = (const std::string *)*((void *)a2 + 5);
  *((_DWORD *)this + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v17 = (std::string *)*((void *)this + 5);
  if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v18 = (const std::string *)*((void *)a2 + 7);
  *((_DWORD *)this + 8) |= 8u;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v19 = (std::string *)*((void *)this + 7);
  if (v19 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v19, v18);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_31:
    char v21 = *((unsigned char *)a2 + 53);
    *((_DWORD *)this + 8) |= 0x20u;
    *((unsigned char *)this + 53) = v21;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_30:
  int v20 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 8) |= 0x10u;
  *((_DWORD *)this + 16) = v20;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_32:
  uint64_t v22 = *((void *)a2 + 9);
  *((_DWORD *)this + 8) |= 0x40u;
  *((void *)this + 9) = v22;
  if ((*((_DWORD *)a2 + 8) & 0x80) != 0)
  {
LABEL_12:
    int v6 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 8) |= 0x80u;
    *((_DWORD *)this + 17) = v6;
  }
LABEL_13:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3B7EA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::~PreviewImage(void **this)
{
  *this = &unk_1F1F264A8;
  topotext::PreviewImage::SharedDtor((topotext::PreviewImage *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::PreviewImage::~PreviewImage(this);
  JUMPOUT(0x1C877D640);
}

void topotext::PreviewImage::SharedDtor(topotext::PreviewImage *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::PreviewImage *)MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 7);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::PreviewImage *)MEMORY[0x1C877D640](v3, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::PreviewImage::New(topotext::PreviewImage *this)
{
}

void sub_1C3B7EC40(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40A6778F3CLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 32);
  if (v1)
  {
    *(_WORD *)(this + 52) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(void *)(this + 64) = 0;
    *(void *)(this + 72) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 56);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::PreviewImage::MergePartialFromCodedStream(topotext::PreviewImage *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v36, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v35, (google::protobuf::io::ZeroCopyOutputStream *)v36);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_91:
        uint64_t v33 = 1;
        goto LABEL_93;
      }
LABEL_36:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v35, v4))goto LABEL_92; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_34;
        }
        v37[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v37)) {
          goto LABEL_92;
        }
        *((_DWORD *)this + 12) = v37[0];
        *((_DWORD *)this + 8) |= 1u;
        int v10 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 16) {
          continue;
        }
        uint64_t v11 = v10 + 1;
        *((void *)a2 + 1) = v11;
LABEL_28:
        *(void *)int v37 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37)) {
            goto LABEL_92;
          }
          uint64_t v17 = *(void *)v37;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v17 = *v11;
          int v18 = v11 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((unsigned char *)this + 52) = v17 != 0;
        int v15 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v15;
        if ((unint64_t)v18 >= v9 || *v18 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_44:
        *((_DWORD *)this + 8) = v15 | 4;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_94;
        }
        char v21 = (std::string *)*((void *)this + 5);
        if (v21 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v21)) {
          goto LABEL_92;
        }
        uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_51:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_94:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        char v23 = (std::string *)*((void *)this + 7);
        if (v23 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v23)) {
          goto LABEL_92;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v13 || *v24 != 40) {
          continue;
        }
        int v14 = v24 + 1;
        *((void *)a2 + 1) = v14;
LABEL_58:
        v37[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37)) {
            goto LABEL_92;
          }
          unsigned int v25 = v37[0];
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v14;
          int v26 = v14 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 16) = v25;
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v26 >= v13 || *v26 != 48) {
          continue;
        }
        uint64_t v19 = v26 + 1;
        *((void *)a2 + 1) = v19;
LABEL_66:
        *(void *)int v37 = 0;
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37)) {
            goto LABEL_92;
          }
          uint64_t v27 = *(void *)v37;
          uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v27 = *v19;
          uint64_t v28 = v19 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((unsigned char *)this + 53) = v27 != 0;
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v28 >= v13 || *v28 != 56) {
          continue;
        }
        int v20 = v28 + 1;
        *((void *)a2 + 1) = v20;
LABEL_74:
        *(void *)int v37 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v37)) {
            goto LABEL_92;
          }
          uint64_t v29 = *(void *)v37;
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v29 = *v20;
          int v30 = v20 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((void *)this + 9) = v29;
        *((_DWORD *)this + 8) |= 0x40u;
        if ((unint64_t)v30 >= v13 || *v30 != 64) {
          continue;
        }
        int v16 = v30 + 1;
        *((void *)a2 + 1) = v16;
        goto LABEL_82;
      case 2u:
        if (v7 != 16) {
          goto LABEL_34;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_28;
      case 3u:
        if (v7 != 26) {
          goto LABEL_34;
        }
        int v15 = *((_DWORD *)this + 8);
        goto LABEL_44;
      case 4u:
        if (v7 == 34) {
          goto LABEL_51;
        }
        goto LABEL_34;
      case 5u:
        if (v7 != 40) {
          goto LABEL_34;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_58;
      case 6u:
        if (v7 != 48) {
          goto LABEL_34;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_66;
      case 7u:
        if (v7 != 56) {
          goto LABEL_34;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_74;
      case 8u:
        if (v7 != 64)
        {
LABEL_34:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_91;
          }
          goto LABEL_36;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_82:
        v37[0] = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))
          {
LABEL_92:
            uint64_t v33 = 0;
            goto LABEL_93;
          }
          unsigned int v31 = v37[0];
          char v32 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v16;
          char v32 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) = v31;
        *((_DWORD *)this + 8) |= 0x80u;
        if (v32 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v33 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_93:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v35);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v36);
        return v33;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1C3B7F260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::SerializeWithCachedSizes(topotext::PreviewImage *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 12), a3);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 52), a2, a4);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 5), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((void *)this + 7), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)this + 16), a2, a4);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((unsigned __int8 *)this + 53), a2, a4);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_18:
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)7, *((void *)this + 9), a2, a4);
  if ((*((_DWORD *)this + 8) & 0x80) != 0) {
LABEL_9:
  }
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)this + 17), a2, a4);
LABEL_10:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::PreviewImage::ByteSize(topotext::PreviewImage *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (!*((unsigned char *)this + 32))
  {
    int v3 = 0;
    goto LABEL_42;
  }
  int v3 = (v2 << 31 >> 31) & 5 | v2 & 2;
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    uint64_t v10 = *((void *)this + 7);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v14);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    v3 += v15 + v11 + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v2 & 0x10) != 0)
  {
LABEL_25:
    int v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v17 = 2;
    }
    v3 += v17;
  }
LABEL_31:
  if ((v2 & 0x20) != 0) {
    v3 += 2;
  }
  if ((v2 & 0x40) != 0)
  {
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 9)) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  if ((v2 & 0x80) != 0)
  {
    int v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else
    {
      int v19 = 2;
    }
    v3 += v19;
  }
LABEL_42:
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::PreviewImage::CheckTypeAndMergeFrom(topotext::PreviewImage *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::PreviewImage::MergeFrom(this, lpsrc);
}

uint64_t topotext::PreviewImage::IsInitialized(topotext::PreviewImage *this)
{
  return 1;
}

void *topotext::PreviewImage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.PreviewImage");
}

void topotext::Todo::~Todo(void **this)
{
  *this = &unk_1F1F26520;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  topotext::Todo::~Todo(this);
  JUMPOUT(0x1C877D640);
}

void topotext::Todo::New(topotext::Todo *this)
{
}

void sub_1C3B7F708(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::MergePartialFromCodedStream(topotext::Todo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 16)
        {
          char v12 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_27;
        }
LABEL_23:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_36;
        }
        goto LABEL_20;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_16:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
LABEL_36:
        uint64_t v16 = 1;
        goto LABEL_38;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_37; {
    }
      }
    if (v7 != 10) {
      goto LABEL_23;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9)) {
      break;
    }
    int v11 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v11 < v10 && *v11 == 16)
    {
      char v12 = v11 + 1;
      *((void *)a2 + 1) = v12;
LABEL_27:
      unint64_t v20 = 0;
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
          break;
        }
        unint64_t v14 = v20;
        int v15 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t v14 = *v12;
        int v15 = (unsigned __int8 *)(v12 + 1);
        *((void *)a2 + 1) = v15;
      }
      *((unsigned char *)this + 48) = v14 != 0;
      *((_DWORD *)this + 8) |= 2u;
      if (v15 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t v16 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  uint64_t v16 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1C3B7F978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::SerializeWithCachedSizes(topotext::Todo *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 48), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Todo::ByteSize(topotext::Todo *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if (v2)
    {
      uint64_t v4 = *((void *)this + 5);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v9 = v10 + 1;
        int v2 = *((_DWORD *)this + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 2;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      int v3 = v9 + v5;
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Todo::CheckTypeAndMergeFrom(topotext::Todo *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Todo::MergeFrom(this, lpsrc);
}

uint64_t topotext::Todo::IsInitialized(topotext::Todo *this)
{
  return 1;
}

void *topotext::Todo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Todo");
}

void topotext::Color::New(topotext::Color *this)
{
}

uint64_t topotext::Color::SerializeWithCachedSizes(topotext::Color *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    char v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    char v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::Color::ByteSize(topotext::Color *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  int v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if (*((unsigned char *)this + 32)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *topotext::Color::CheckTypeAndMergeFrom(topotext::Color *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Color::MergeFrom(this, lpsrc);
}

uint64_t topotext::Color::IsInitialized(topotext::Color *this)
{
  return 1;
}

void *topotext::Color::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Color");
}

std::string *topotext::BoxedValue::MergeFrom(topotext::BoxedValue *this, const topotext::BoxedValue *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 7778);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 1) {
        goto LABEL_9;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      int v6 = 1;
      goto LABEL_8;
    case 2:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 2) {
        goto LABEL_9;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      int v6 = 2;
LABEL_8:
      *((_DWORD *)this + 12) = v6;
LABEL_9:
      *((void *)this + 5) = v5;
      goto LABEL_23;
    case 3:
      uint64_t v7 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 3)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
      }
      *((void *)this + 5) = v7;
      goto LABEL_23;
    case 4:
      unint64_t v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 4) {
        goto LABEL_20;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      int v9 = 4;
      goto LABEL_22;
    case 5:
      unint64_t v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 5) {
        goto LABEL_20;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      int v9 = 5;
      goto LABEL_22;
    case 6:
      unint64_t v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 6) {
        goto LABEL_20;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      int v9 = 6;
      goto LABEL_22;
    case 7:
      unint64_t v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 7)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        int v9 = 7;
LABEL_22:
        *((_DWORD *)this + 12) = v9;
        operator new();
      }
LABEL_20:
      std::string::operator=(*((std::string **)this + 5), v8);
LABEL_23:
      char v12 = (const std::string::value_type *)*((void *)a2 + 1);
      uint64_t v11 = (char *)a2 + 8;
      int v10 = v12;
      int v13 = v11[23];
      if (v13 >= 0) {
        unint64_t v14 = v11;
      }
      else {
        unint64_t v14 = v10;
      }
      if (v13 >= 0) {
        std::string::size_type v15 = v11[23];
      }
      else {
        std::string::size_type v15 = *((void *)v11 + 1);
      }
      return std::string::append((std::string *)((char *)this + 8), v14, v15);
    default:
      goto LABEL_23;
  }
}

void sub_1C3B7FF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::BoxedValue::~BoxedValue(topotext::BoxedValue *this)
{
  int v1 = this;
  *(void *)this = &unk_1F1F26610;
  if (*((_DWORD *)this + 12)) {
    this = (topotext::BoxedValue *)topotext::BoxedValue::clear_contents((uint64_t)this);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if (*((char *)v1 + 31) < 0) {
    operator delete(*((void **)v1 + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v1);
}

{
  uint64_t vars8;

  topotext::BoxedValue::~BoxedValue(this);
  JUMPOUT(0x1C877D640);
}

uint64_t topotext::BoxedValue::clear_contents(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v2 = *(void *)(this + 40);
      if (v2)
      {
        if (*(char *)(v2 + 23) < 0) {
          operator delete(*(void **)v2);
        }
        this = MEMORY[0x1C877D640](v2, 0x1012C40EC159624);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

void topotext::BoxedValue::New(topotext::BoxedValue *this)
{
}

void sub_1C3B8014C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::Clear(topotext::BoxedValue *this)
{
  uint64_t result = topotext::BoxedValue::clear_contents((uint64_t)this);
  *((_DWORD *)this + 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::BoxedValue::MergePartialFromCodedStream(topotext::BoxedValue *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  uint64_t v5 = (std::string **)((char *)this + 40);
  while (1)
  {
LABEL_2:
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 < *((void *)a2 + 2) && *v6 >= 1)
    {
      uint64_t v7 = *v6;
      *((_DWORD *)a2 + 8) = v7;
      *((void *)a2 + 1) = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      break;
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) != 0) {
      break;
    }
LABEL_11:
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14)
    {
LABEL_78:
      uint64_t v26 = 1;
      goto LABEL_79;
    }
LABEL_31:
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_77; {
  }
    }
  switch(v8 >> 3)
  {
    case 1u:
      if (v8 != 8) {
        goto LABEL_29;
      }
      topotext::BoxedValue::clear_contents((uint64_t)this);
      unint64_t v30 = 0;
      uint64_t v11 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v30)) {
          goto LABEL_77;
        }
        unint64_t v12 = v30;
        int v13 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t v12 = *v11;
        int v13 = v11 + 1;
        *((void *)a2 + 1) = v13;
      }
      *((void *)this + 5) = -(uint64_t)(v12 & 1) ^ (v12 >> 1);
      *((_DWORD *)this + 12) = 1;
      if ((unint64_t)v13 >= v10 || *v13 != 16) {
        goto LABEL_2;
      }
      *((void *)a2 + 1) = v13 + 1;
LABEL_38:
      topotext::BoxedValue::clear_contents((uint64_t)this);
      uint64_t v16 = (char *)*((void *)a2 + 1);
      unint64_t v15 = *((void *)a2 + 2);
      if ((unint64_t)v16 >= v15 || *v16 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_77; {
        char v17 = (unsigned char *)*((void *)a2 + 1);
        }
        unint64_t v15 = *((void *)a2 + 2);
      }
      else
      {
        *uint64_t v5 = (std::string *)*v16;
        char v17 = v16 + 1;
        *((void *)a2 + 1) = v17;
      }
      *((_DWORD *)this + 12) = 2;
      if ((unint64_t)v17 >= v15 || *v17 != 25) {
        goto LABEL_2;
      }
      *((void *)a2 + 1) = v17 + 1;
LABEL_46:
      topotext::BoxedValue::clear_contents((uint64_t)this);
      unint64_t v30 = 0;
      if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v30))
      {
        *((void *)this + 5) = v30;
        *((_DWORD *)this + 12) = 3;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 34)
        {
          *((void *)a2 + 1) = v18 + 1;
LABEL_50:
          topotext::BoxedValue::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          operator new();
        }
        goto LABEL_2;
      }
LABEL_77:
      uint64_t v26 = 0;
LABEL_79:
      google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
      google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
      return v26;
    case 2u:
      if (v8 == 16) {
        goto LABEL_38;
      }
      goto LABEL_29;
    case 3u:
      if (v8 == 25) {
        goto LABEL_46;
      }
      goto LABEL_29;
    case 4u:
      if (v8 != 34) {
        goto LABEL_29;
      }
      if (*((_DWORD *)this + 12) != 4) {
        goto LABEL_50;
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
        goto LABEL_77;
      }
      unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 42) {
        goto LABEL_2;
      }
      *((void *)a2 + 1) = v20 + 1;
LABEL_55:
      if (*((_DWORD *)this + 12) != 5)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 5;
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
        goto LABEL_77;
      }
      uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 50) {
        goto LABEL_2;
      }
      *((void *)a2 + 1) = v22 + 1;
LABEL_62:
      if (*((_DWORD *)this + 12) != 6)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
        goto LABEL_77;
      }
      int v24 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 58) {
        goto LABEL_2;
      }
      *((void *)a2 + 1) = v24 + 1;
LABEL_69:
      if (*((_DWORD *)this + 12) != 7)
      {
        topotext::BoxedValue::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 7;
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, *v5)) {
        goto LABEL_77;
      }
      if (*((void *)a2 + 1) != *((void *)a2 + 2)
        || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
      {
        goto LABEL_2;
      }
      *((_DWORD *)a2 + 8) = 0;
      uint64_t v26 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_79;
    case 5u:
      if (v8 == 42) {
        goto LABEL_55;
      }
      goto LABEL_29;
    case 6u:
      if (v8 == 50) {
        goto LABEL_62;
      }
      goto LABEL_29;
    case 7u:
      if (v8 == 58) {
        goto LABEL_69;
      }
LABEL_29:
      if (v8 && (v8 & 7) != 4) {
        goto LABEL_31;
      }
      goto LABEL_78;
    default:
      goto LABEL_11;
  }
}

void sub_1C3B8066C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::SerializeWithCachedSizes(topotext::BoxedValue *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteSInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, *((double *)this + 5), a3);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(5, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(6, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 7) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(7, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::BoxedValue::ByteSize(topotext::BoxedValue *this)
{
  switch(*((_DWORD *)this + 12))
  {
    case 1:
      unint64_t v10 = (2 * *((void *)this + 5)) ^ (*((uint64_t *)this + 5) >> 63);
      goto LABEL_14;
    case 2:
      unint64_t v10 = *((void *)this + 5);
LABEL_14:
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize64(v10) + 1;
      break;
    case 3:
      int v9 = 9;
      break;
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v2 = *((void *)this + 5);
      int v3 = *(unsigned __int8 *)(v2 + 23);
      char v4 = v3;
      uint64_t v5 = *(void *)(v2 + 8);
      if ((v3 & 0x80u) == 0) {
        unint64_t v6 = *(unsigned __int8 *)(v2 + 23);
      }
      else {
        unint64_t v6 = v5;
      }
      if (v6 >= 0x80)
      {
        int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v6);
        int v3 = *(unsigned __int8 *)(v2 + 23);
        uint64_t v5 = *(void *)(v2 + 8);
        int v7 = v8 + 1;
        char v4 = *(unsigned char *)(v2 + 23);
      }
      else
      {
        int v7 = 2;
      }
      if (v4 < 0) {
        int v3 = v5;
      }
      int v9 = v7 + v3;
      break;
    default:
      int v9 = 0;
      break;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v9 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::BoxedValue::CheckTypeAndMergeFrom(topotext::BoxedValue *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::BoxedValue::MergeFrom(this, lpsrc);
}

uint64_t topotext::BoxedValue::IsInitialized(topotext::BoxedValue *this)
{
  return 1;
}

void *topotext::BoxedValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.BoxedValue");
}

std::string *topotext::WallClockMergeableValue::MergeFrom(topotext::WallClockMergeableValue *this, const topotext::WallClockMergeableValue *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/topotext.pb.cc", 8036);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)this + 8) |= 2u;
      int v7 = (topotext::BoxedValue *)*((void *)this + 6);
      if (!v7) {
        operator new();
      }
      int v8 = (const topotext::BoxedValue *)*((void *)a2 + 6);
      if (!v8)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v8 = *(const topotext::BoxedValue **)(topotext::WallClockMergeableValue::default_instance_ + 48);
      }
      topotext::BoxedValue::MergeFrom(v7, v8);
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3B80A80(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::WallClockMergeableValue::default_instance(topotext::WallClockMergeableValue *this)
{
  return topotext::WallClockMergeableValue::default_instance_;
}

void topotext::WallClockMergeableValue::New(topotext::WallClockMergeableValue *this)
{
}

uint64_t topotext::WallClockMergeableValue::SerializeWithCachedSizes(topotext::WallClockMergeableValue *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  char v4 = this;
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    this = (topotext::WallClockMergeableValue *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *((double *)this + 5), a3);
    int v5 = *((_DWORD *)v4 + 8);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v6 = *((void *)v4 + 6);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v6 = *(void *)(topotext::WallClockMergeableValue::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v4 + 31) < 0)
  {
    int v7 = (char *)*((void *)v4 + 1);
    uint64_t v8 = *((void *)v4 + 2);
  }
  else
  {
    int v7 = (char *)v4 + 8;
    LODWORD(v8) = *((unsigned __int8 *)v4 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::WallClockMergeableValue::ByteSize(topotext::WallClockMergeableValue *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      char v4 = (topotext::BoxedValue *)*((void *)this + 6);
      if (!v4)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        char v4 = *(topotext::BoxedValue **)(topotext::WallClockMergeableValue::default_instance_ + 48);
      }
      int v5 = (google::protobuf::io::CodedOutputStream *)topotext::BoxedValue::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v3 += v6 + v7 + 1;
    }
  }
  else
  {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::WallClockMergeableValue::CheckTypeAndMergeFrom(topotext::WallClockMergeableValue *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::WallClockMergeableValue::MergeFrom(this, lpsrc);
}

void *topotext::WallClockMergeableValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.WallClockMergeableValue");
}

uint64_t topotext::String::GetCachedSize(topotext::String *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::GetCachedSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock::GetCachedSize(topotext::VectorTimestamp_Clock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp::GetCachedSize(topotext::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::CharID::GetCachedSize(topotext::CharID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Substring::GetCachedSize(topotext::Substring *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection_Range::GetCachedSize(topotext::Selection_Range *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection::GetCachedSize(topotext::Selection *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttributeRun::GetCachedSize(topotext::AttributeRun *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Font::GetCachedSize(topotext::Font *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::ParagraphStyle::GetCachedSize(topotext::ParagraphStyle *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttachmentInfo::GetCachedSize(topotext::AttachmentInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Attachment::GetCachedSize(topotext::Attachment *this)
{
  return *((unsigned int *)this + 99);
}

uint64_t topotext::Location::GetCachedSize(topotext::Location *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Media::GetCachedSize(topotext::Media *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::PreviewImage::GetCachedSize(topotext::PreviewImage *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Todo::GetCachedSize(topotext::Todo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Color::GetCachedSize(topotext::Color *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::BoxedValue::GetCachedSize(topotext::BoxedValue *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::WallClockMergeableValue::GetCachedSize(topotext::WallClockMergeableValue *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Substring::MergeFrom(*(topotext::Substring **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B80F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::AttributeRun::MergeFrom(*(topotext::AttributeRun **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B8108C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Attachment::MergeFrom(*(topotext::Attachment **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B811CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(*(topotext::VectorTimestamp_Clock_ReplicaClock **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B8134C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::VectorTimestamp_Clock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::VectorTimestamp_Clock::MergeFrom(*(topotext::VectorTimestamp_Clock **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B8148C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          int v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::StringTypeHandlerBase::New(v7);
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)std::string::operator=(*(std::string **)(v10 + 8 * v9), (const std::string *)v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B815CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Selection_Range::MergeFrom(*(topotext::Selection_Range **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B8174C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      int v7 = (const topotext::PreviewImage *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::PreviewImage::MergeFrom(*(topotext::PreviewImage **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3B8188C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromICFoldersFilterInclusionType(uint64_t a1)
{
  if (a1) {
    return @"Exclude";
  }
  else {
    return @"Include";
  }
}

void sub_1C3B81E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B825D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B82978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B82AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3B82B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B82C94(_Unwind_Exception *a1)
{
  int v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1C3B83214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void std::vector<ICDrawingOutputPoint>::reserve(void **a1, unint64_t a2)
{
  char v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 6)
  {
    if (a2 >> 58) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    int v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<ICDrawingOutputPoint>>(v3, a2);
    int v7 = &v6[v5 & 0xFFFFFFFFFFFFFFC0];
    uint64_t v9 = &v6[64 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    int v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *((_OWORD *)v10 - 4);
        long long v14 = *((_OWORD *)v10 - 3);
        long long v15 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v15;
        *((_OWORD *)v12 - 4) = v13;
        *((_OWORD *)v12 - 3) = v14;
        v12 -= 64;
        v10 -= 64;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1C3B83C30(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x1093C40AE78755BLL);

  _Unwind_Resume(a1);
}

void sub_1C3B83E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B83FF0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x1093C409A2F408ALL);

  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<drawing::Point>::New()
{
}

void sub_1C3B84090(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40AE78755BLL);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<ICDrawingOutputPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(a2 << 6);
}

void sub_1C3B84154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B84310(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v3, 0x10B3C400074EEDFLL);

  _Unwind_Resume(a1);
}

id ICNewLegacyContext()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F82D78]) initWithPrivateQueue];
  return v0;
}

void sub_1C3B850F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B872A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8733C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B87414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B874E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8755C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B87600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B876A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B87740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8ABEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B8C114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B8C434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x1093C405ACC521ELL);

  _Unwind_Resume(a1);
}

void sub_1C3B8C5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C8A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8C9AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CAC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CB88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CBFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B8CDC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *NSStringFromFallbackAssetType(uint64_t a1)
{
  if (a1) {
    return @"PDF";
  }
  else {
    return @"image";
  }
}

void sub_1C3B8D5F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3B8E754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id obj, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

void sub_1C3B8E8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B8EA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getPRAppIdentifierKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ProofReaderLibrary();
  uint64_t result = dlsym(v2, "PRAppIdentifierKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getPRAppIdentifierKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ProofReaderLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ProofReaderLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    void v3[2] = 3221225472;
    v3[3] = __ProofReaderLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E64A7478;
    uint64_t v5 = 0;
    ProofReaderLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = ProofReaderLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!ProofReaderLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __ProofReaderLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ProofReaderLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getPRGuessKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ProofReaderLibrary();
  uint64_t result = dlsym(v2, "PRGuessKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getPRGuessKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getPRScoreKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ProofReaderLibrary();
  uint64_t result = dlsym(v2, "PRScoreKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getPRScoreKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getNLTokenizerClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!NaturalLanguageLibraryCore_frameworkLibrary_0)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __NaturalLanguageLibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E64A7490;
    uint64_t v6 = 0;
    NaturalLanguageLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!NaturalLanguageLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("NLTokenizer");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getNLTokenizerClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getNLTokenizerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __NaturalLanguageLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  NaturalLanguageLibraryCore_frameworkLibrary_0 = result;
  return result;
}

ICParticipantUpdater *__getAppleSpellClass_block_invoke(uint64_t a1)
{
  ProofReaderLibrary();
  uint64_t result = (ICParticipantUpdater *)objc_getClass("AppleSpell");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getAppleSpellClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (ICParticipantUpdater *)__getAppleSpellClass_block_invoke_cold_1();
    return [(ICParticipantUpdater *)v3 initWithManagedObjectContext:v5];
  }
  return result;
}

void sub_1C3B8FEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B90008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B90134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B901F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B90350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B904CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B90640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C406C843DA2);

  _Unwind_Resume(a1);
}

void sub_1C3B93C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B93E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1C3B967A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B97EB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B97F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9803C(_Unwind_Exception *a1)
{
  SEL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3B98108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B981AC(_Unwind_Exception *a1)
{
  SEL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3B9829C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9840C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B984A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9851C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B985E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B988FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1C3B98C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3B98F3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B99144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9A920(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1C3B9B360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3B9BD24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9BDBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9C020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  MEMORY[0x1C877D640](v7, 0x10B3C400074EEDFLL);
  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);

  _Unwind_Resume(a1);
}

void sub_1C3B9C350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  MEMORY[0x1C877D640](v6, 0x1093C40A258B440);

  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1C3B9C734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  MEMORY[0x1C877D640](v6, 0x10B3C40CCCF3E6ELL);

  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1C3B9C8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9C9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  MEMORY[0x1C877D640](v9, 0x1093C4057897759);
  peernetworking::PeerNetworkMessage::~PeerNetworkMessage((peernetworking::PeerNetworkMessage *)&a9);
  _Unwind_Resume(a1);
}

void sub_1C3B9CE04()
{
  objc_end_catch();
  JUMPOUT(0x1C3B9CE44);
}

void sub_1C3B9CE28()
{
  JUMPOUT(0x1C3B9CE64);
}

void sub_1C3B9CE4C()
{
  JUMPOUT(0x1C3B9CE78);
}

void sub_1C3B9CE58()
{
}

void sub_1C3B9CEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9D064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9D2CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9D464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9D688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9D800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3B9DB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ICIsNotesURLScheme(void *a1)
{
  uint64_t v1 = ICIsNotesURLScheme_token;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&ICIsNotesURLScheme_token, &__block_literal_global_49);
  }
  uint64_t v3 = (void *)ICIsNotesURLScheme_validSchemes;
  SEL v4 = [v2 lowercaseString];

  uint64_t v5 = [v3 containsObject:v4];
  return v5;
}

void __ICIsNotesURLScheme_block_invoke()
{
  id v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithObjects:", @"applenotes", @"mobilenotes", @"notes", 0);
  uint64_t v0 = [v2 copy];
  uint64_t v1 = (void *)ICIsNotesURLScheme_validSchemes;
  ICIsNotesURLScheme_validSchemes = v0;
}

id NotesAppURLForNoteIdentifierOrTokenContentIdentifier(void *a1)
{
  id v1 = a1;
  id v2 = NotesAppURLForTokenContentIdentifier((uint64_t)v1);
  if (!v2)
  {
    id v2 = NotesAppURLForNoteIdentifier(v1);
  }

  return v2;
}

id NotesAppURLForTokenContentIdentifier(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F1CB10] URLWithString:a1];
  id v2 = [v1 scheme];
  if (ICIsNotesURLScheme(v2)) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;

  return v4;
}

id NotesAppURLForNoteIdentifier(void *a1)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  id v1 = (objc_class *)MEMORY[0x1E4F29088];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  [v3 setScheme:@"applenotes"];
  [v3 setHost:@"showNote"];
  id v4 = [MEMORY[0x1E4F290C8] queryItemWithName:@"identifier" value:v2];

  v8[0] = v4;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:1];
  [v3 setQueryItems:v5];

  uint64_t v6 = [v3 URL];

  return v6;
}

BOOL NotesAppIsValidURL(void *a1)
{
  id v1 = NotesAppGUIDForNoteMentionedInURL(a1);
  BOOL v2 = v1 != 0;

  return v2;
}

id NotesAppGUIDForNoteMentionedInURL(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 scheme];
  if (!ICIsNotesURLScheme(v2)) {
    goto LABEL_10;
  }
  id v3 = [v1 host];
  int v4 = objc_msgSend(v3, "ic_isCaseInsensitiveEqualToString:", @"showNote");

  if (v4)
  {
    uint64_t v5 = [v1 query];
    uint64_t v6 = [v5 componentsSeparatedByString:@"&"];
    BOOL v2 = [v6 lastObject];

    if (v2)
    {
      uint64_t v7 = [v2 componentsSeparatedByString:@"="];
      if ([v7 count] == 2)
      {
        uint64_t v8 = [v7 objectAtIndexedSubscript:0];
        int v9 = objc_msgSend(v8, "ic_isCaseInsensitiveEqualToString:", @"guid");

        uint64_t v10 = 0;
        if (!v9) {
          goto LABEL_9;
        }
        uint64_t v10 = [v7 objectAtIndexedSubscript:1];
        if (isValidIdentifier(v10)) {
          goto LABEL_9;
        }
      }
      uint64_t v10 = 0;
LABEL_9:

LABEL_11:
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  uint64_t v10 = 0;
LABEL_13:

  return v10;
}

id NotesAppPredicateForNoteMentionedInURL(void *a1)
{
  id v1 = NotesAppGUIDForNoteMentionedInURL(a1);
  if (v1)
  {
    BOOL v2 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K ==[c] %@", @"guid", v1];
  }
  else
  {
    BOOL v2 = 0;
  }

  return v2;
}

id NotesAppURLForNote(void *a1)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  id v1 = [a1 guid];
  if ([v1 length])
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F29088]);
    [v2 setScheme:@"applenotes"];
    [v2 setHost:@"showNote"];
    id v3 = [MEMORY[0x1E4F290C8] queryItemWithName:@"guid" value:v1];
    v7[0] = v3;
    int v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:1];
    [v2 setQueryItems:v4];

    uint64_t v5 = [v2 URL];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

BOOL isValidIdentifier(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 length] >= 0x24)
  {
    if ([v1 length] == 36)
    {
      id v2 = v1;
      id v3 = 0;
    }
    else
    {
      id v2 = [v1 substringToIndex:36];
      id v3 = [v1 substringFromIndex:36];
    }
    uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v2];

    if (v5)
    {
      if (!v3)
      {
LABEL_19:
        BOOL v4 = 1;
        goto LABEL_20;
      }
      if ([v3 characterAtIndex:0] == 95 && objc_msgSend(v3, "length") == 33)
      {
        if ((unint64_t)[v3 length] >= 2)
        {
          unint64_t v6 = 1;
          uint64_t v7 = MEMORY[0x1E4F14390];
          do
          {
            unsigned int v8 = [v3 characterAtIndex:v6];
            if (v8 > 0x7F) {
              int v9 = __maskrune(v8, 0x10000uLL);
            }
            else {
              int v9 = *(_DWORD *)(v7 + 4 * v8 + 60) & 0x10000;
            }
            BOOL v4 = v9 != 0;
            if (!v9) {
              break;
            }
            ++v6;
          }
          while (v6 < [v3 length]);
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
    BOOL v4 = 0;
LABEL_20:

    goto LABEL_21;
  }
  BOOL v4 = 0;
LABEL_21:

  return v4;
}

void sub_1C3BA3D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA5298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA5D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1C3BA67BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BA6D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA6F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA73A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA7664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA7948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA7B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA7E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA8218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA8790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA8A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA8CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA8FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA95F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BA9A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3BA9D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAA148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAAD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BACE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAD018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAD444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAD7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAF13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAF41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAF94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BAFEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB033C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB0768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB0BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB0F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_7_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x26u);
}

void sub_1C3BB1378(_Unwind_Exception *a1)
{
  BOOL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3BB1454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1C3BB15E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB18DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v11, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1C3BB1AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB1F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB2020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB21CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB229C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB2380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB24D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB26E0(_Unwind_Exception *a1, void *a2, void *a3, ...)
{
  va_start(va, a3);
  uint64_t v7 = v4;

  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment((CRDT::StringArray_ArrayAttachment *)va);
  _Unwind_Resume(a1);
}

void sub_1C3BB295C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v2, 0x10B3C406C843DA2);

  _Unwind_Resume(a1);
}

void sub_1C3BB2A18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BB2C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v15 = v10;
  uint64_t v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1C3BB2E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x10B3C40E3C8ABF7);

  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New()
{
}

void sub_1C3BB2E8C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

void sub_1C3BB2F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB336C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB4DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB6C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB7D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BB9258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  objc_destroyWeak(v22);
  _Block_object_dispose(&a22, 8);
  objc_destroyWeak((id *)(v23 - 104));
  _Unwind_Resume(a1);
}

void sub_1C3BB95BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BBA9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1C3BBB110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
}

void sub_1C3BBC1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BBC5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BBCC50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id a37)
{
}

void sub_1C3BBCF20(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1C3BBD208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BBE590(_Unwind_Exception *a1)
{
}

void sub_1C3BBFA8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1C3BC1C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_1C3BC2874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BC2F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BC415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3BC513C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3BC7018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BC95B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Block_object_dispose((const void *)(v6 - 200), 8);
  objc_destroyWeak((id *)(v6 - 152));
  _Unwind_Resume(a1);
}

void sub_1C3BCB8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_1C3BCC08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *a13, id *a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id a62)
{
}

void sub_1C3BCE30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1C3BCEAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3BCF0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BCF678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BD0D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BD1444(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_1C3BD19D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_9_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_16(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

uint64_t OUTLINED_FUNCTION_18_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_0(uint64_t result, float a2)
{
  float *v3 = a2;
  void *v2 = result;
  return result;
}

void OUTLINED_FUNCTION_26(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x310], 8) = a1;
}

void OUTLINED_FUNCTION_28_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x310], 8) = a1;
}

uint64_t OUTLINED_FUNCTION_31_0(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(void *)(a2 + 4) = result;
  return result;
}

void OUTLINED_FUNCTION_33_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_34(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_1C3BD2744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD27CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD2854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD28C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD2954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD2B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD2BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BD2C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

id getVNSessionClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getVNSessionClass_softClass;
  uint64_t v7 = getVNSessionClass_softClass;
  if (!getVNSessionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __getVNSessionClass_block_invoke;
    v3[3] = &unk_1E64A45A0;
    v3[4] = &v4;
    __getVNSessionClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C3BD2DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getVNImageRequestHandlerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getVNImageRequestHandlerClass_softClass;
  uint64_t v7 = getVNImageRequestHandlerClass_softClass;
  if (!getVNImageRequestHandlerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __getVNImageRequestHandlerClass_block_invoke;
    v3[3] = &unk_1E64A45A0;
    v3[4] = &v4;
    __getVNImageRequestHandlerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1C3BD2EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BD339C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
}

void __getVNSessionClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("VNSession");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getVNSessionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getVNSessionClass_block_invoke_cold_1();
    VisionLibrary();
  }
}

void VisionLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!VisionLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __VisionLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E64A8BD8;
    uint64_t v3 = 0;
    VisionLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!VisionLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __VisionLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VisionLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getVNImageRequestHandlerClass_block_invoke(uint64_t a1)
{
  VisionLibrary();
  Class result = objc_getClass("VNImageRequestHandler");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getVNImageRequestHandlerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = __getVNImageRequestHandlerClass_block_invoke_cold_1();
    return (Class)__getVNRecognizeTextRequestClass_block_invoke(v3);
  }
  return result;
}

__CFString *__getVNRecognizeTextRequestClass_block_invoke(uint64_t a1)
{
  VisionLibrary();
  Class result = (__CFString *)objc_getClass("VNRecognizeTextRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getVNRecognizeTextRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getVNRecognizeTextRequestClass_block_invoke_cold_1();
    return ICLegacyEntityNameNote();
  }
  return result;
}

__CFString *ICLegacyEntityNameNote()
{
  return @"Note";
}

void sub_1C3BD3DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3BD3EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1C3BD3F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD412C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD41E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD43B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD44AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD452C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD49EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1C3BD4D34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD4DF4(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1C3BD4F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BD5054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

BOOL ICTTNamedStyleIsList(int a1)
{
  return (a1 & 0xFFFFFFFC) == 100;
}

void sub_1C3BD6D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  uint64_t v19 = va_arg(va2, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BDA238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::protobuf_ShutdownFile_airdrop_2ddocument_2eproto(airdrop_document *this)
{
  if (airdrop_document::Document::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::Document::default_instance_ + 8))(airdrop_document::Document::default_instance_);
  }
  if (airdrop_document::NoteDocument::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::NoteDocument::default_instance_ + 8))(airdrop_document::NoteDocument::default_instance_);
  }
  if (airdrop_document::NoteDocument1_0::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::NoteDocument1_0::default_instance_ + 8))(airdrop_document::NoteDocument1_0::default_instance_);
  }
  if (airdrop_document::AttributedString::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::AttributedString::default_instance_ + 8))(airdrop_document::AttributedString::default_instance_);
  }
  if (airdrop_document::LegacyNoteDocument::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::LegacyNoteDocument::default_instance_ + 8))(airdrop_document::LegacyNoteDocument::default_instance_);
  }
  if (airdrop_document::LegacyNoteDocument1_0::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)airdrop_document::LegacyNoteDocument1_0::default_instance_ + 8))(airdrop_document::LegacyNoteDocument1_0::default_instance_);
  }
  uint64_t result = airdrop_document::WebArchive::default_instance_;
  if (airdrop_document::WebArchive::default_instance_)
  {
    long long v2 = *(uint64_t (**)(void))(*(void *)airdrop_document::WebArchive::default_instance_ + 8);
    return v2();
  }
  return result;
}

void airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_impl(airdrop_document *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1C3BDCEF4(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

double airdrop_document::Document::Document(airdrop_document::Document *this)
{
  *(void *)this = &unk_1F1F26EC0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double airdrop_document::NoteDocument::NoteDocument(airdrop_document::NoteDocument *this)
{
  *(void *)this = &unk_1F1F26F38;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double airdrop_document::NoteDocument1_0::NoteDocument1_0(airdrop_document::NoteDocument1_0 *this)
{
  *(void *)this = &unk_1F1F26FB0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double airdrop_document::LegacyNoteDocument::LegacyNoteDocument(airdrop_document::LegacyNoteDocument *this)
{
  *(void *)this = &unk_1F1F270A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double airdrop_document::LegacyNoteDocument1_0::LegacyNoteDocument1_0(airdrop_document::LegacyNoteDocument1_0 *this)
{
  *(void *)this = &unk_1F1F27118;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

void airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(airdrop_document *this)
{
  uint64_t v1 = airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1F24E80;
    v2[1] = airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1C3BDD098(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *airdrop_document::Document::MergeFrom(airdrop_document::Document *this, const airdrop_document::Document *a2)
{
  char v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 277);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      uint64_t v6 = (airdrop_document::NoteDocument *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const airdrop_document::NoteDocument *)*((void *)a2 + 5);
      if (!v7)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        uint64_t v7 = *(const airdrop_document::NoteDocument **)(airdrop_document::Document::default_instance_ + 40);
      }
      this = (airdrop_document::Document *)airdrop_document::NoteDocument::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      unsigned int v8 = (airdrop_document::LegacyNoteDocument *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const airdrop_document::LegacyNoteDocument *)*((void *)a2 + 6);
      if (!v9)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        int v9 = *(const airdrop_document::LegacyNoteDocument **)(airdrop_document::Document::default_instance_ + 48);
      }
      airdrop_document::LegacyNoteDocument::MergeFrom(v8, v9);
    }
  }
  uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3BDD25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void airdrop_document::Document::~Document(void **this)
{
  *this = &unk_1F1F26EC0;
  airdrop_document::Document::SharedDtor((airdrop_document::Document *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::Document::~Document(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::Document::SharedDtor(airdrop_document::Document *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::Document *)airdrop_document::Document::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t airdrop_document::Document::default_instance(airdrop_document::Document *this)
{
  return airdrop_document::Document::default_instance_;
}

void airdrop_document::Document::New(airdrop_document::Document *this)
{
}

uint64_t airdrop_document::Document::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = airdrop_document::NoteDocument::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this) {
        this = airdrop_document::LegacyNoteDocument::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 32))
  {
    this = *(void *)(this + 40);
    if (this) {
      this = airdrop_document::NoteDocument1_0::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 32))
  {
    this = *(void *)(this + 40);
    if (this) {
      this = airdrop_document::LegacyNoteDocument1_0::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::Document::MergePartialFromCodedStream(airdrop_document::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (airdrop_document::NoteDocument *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      uint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!airdrop_document::NoteDocument::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        uint64_t v19 = (airdrop_document::LegacyNoteDocument *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !airdrop_document::LegacyNoteDocument::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3BDD8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::Document::SerializeWithCachedSizes(airdrop_document::Document *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v5 = *(void *)(airdrop_document::Document::default_instance_ + 40);
    }
    this = (airdrop_document::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v6 = *(void *)(airdrop_document::Document::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t airdrop_document::Document::ByteSize(airdrop_document::Document *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (airdrop_document::NoteDocument *)*((void *)this + 5);
  if (!v3)
  {
    airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
    uint64_t v3 = *(airdrop_document::NoteDocument **)(airdrop_document::Document::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::NoteDocument::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (airdrop_document::LegacyNoteDocument *)*((void *)this + 6);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      unint64_t v7 = *(airdrop_document::LegacyNoteDocument **)(airdrop_document::Document::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)airdrop_document::LegacyNoteDocument::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::Document::CheckTypeAndMergeFrom(airdrop_document::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::Document::MergeFrom(this, lpsrc);
}

std::string *airdrop_document::NoteDocument::MergeFrom(airdrop_document::NoteDocument *this, const airdrop_document::NoteDocument *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 480);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v5 = (airdrop_document::NoteDocument1_0 *)*((void *)this + 5);
    if (!v5) {
      operator new();
    }
    int v6 = (const airdrop_document::NoteDocument1_0 *)*((void *)a2 + 5);
    if (!v6)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      int v6 = *(const airdrop_document::NoteDocument1_0 **)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    airdrop_document::NoteDocument1_0::MergeFrom(v5, v6);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  unint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3BDDC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *airdrop_document::LegacyNoteDocument::MergeFrom(airdrop_document::LegacyNoteDocument *this, const airdrop_document::LegacyNoteDocument *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1112);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v5 = (airdrop_document::LegacyNoteDocument1_0 *)*((void *)this + 5);
    if (!v5) {
      operator new();
    }
    int v6 = (const airdrop_document::LegacyNoteDocument1_0 *)*((void *)a2 + 5);
    if (!v6)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      int v6 = *(const airdrop_document::LegacyNoteDocument1_0 **)(airdrop_document::LegacyNoteDocument::default_instance_
                                                             + 40);
    }
    airdrop_document::LegacyNoteDocument1_0::MergeFrom(v5, v6);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  unint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3BDDD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::Document::IsInitialized(airdrop_document::Document *this)
{
  return 1;
}

void *airdrop_document::Document::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.Document");
}

void airdrop_document::NoteDocument::~NoteDocument(void **this)
{
  *this = &unk_1F1F26F38;
  airdrop_document::NoteDocument::SharedDtor((airdrop_document::NoteDocument *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::NoteDocument::~NoteDocument(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::NoteDocument::SharedDtor(airdrop_document::NoteDocument *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::NoteDocument *)airdrop_document::NoteDocument::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t airdrop_document::NoteDocument::default_instance(airdrop_document::NoteDocument *this)
{
  return airdrop_document::NoteDocument::default_instance_;
}

void airdrop_document::NoteDocument::New(airdrop_document::NoteDocument *this)
{
}

uint64_t airdrop_document::NoteDocument1_0::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this) {
        this = airdrop_document::AttributedString::Clear(this);
      }
    }
    *(void *)(v1 + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument::MergePartialFromCodedStream(airdrop_document::NoteDocument *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && *v5 >= 1)
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      uint64_t v12 = v11;
      if (v11
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))
      {
        goto LABEL_32;
      }
    }
    if (v7 != 10) {
      goto LABEL_12;
    }
    *((_DWORD *)this + 8) |= 1u;
    int v9 = (airdrop_document::NoteDocument1_0 *)*((void *)this + 5);
    if (!v9) {
      operator new();
    }
    unsigned int v22 = 0;
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22)) {
        break;
      }
    }
    else
    {
      unsigned int v22 = *v10;
      *((void *)a2 + 1) = v10 + 1;
    }
    int v13 = *((_DWORD *)a2 + 14);
    int v14 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v13 + 1;
    if (v13 >= v14) {
      break;
    }
    int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
    if (!airdrop_document::NoteDocument1_0::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
      break;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
    int v16 = *((_DWORD *)a2 + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)a2 + 14) = v18;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v12 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  uint64_t v12 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v12;
}

void sub_1C3BDE194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument::SerializeWithCachedSizes(airdrop_document::NoteDocument *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v4 = *(void *)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    int v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    int v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::NoteDocument::ByteSize(airdrop_document::NoteDocument *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (airdrop_document::NoteDocument1_0 *)*((void *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      uint64_t v3 = *(airdrop_document::NoteDocument1_0 **)(airdrop_document::NoteDocument::default_instance_ + 40);
    }
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::NoteDocument1_0::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::NoteDocument::CheckTypeAndMergeFrom(airdrop_document::NoteDocument *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::NoteDocument::MergeFrom(this, lpsrc);
}

std::string *airdrop_document::NoteDocument1_0::MergeFrom(airdrop_document::NoteDocument1_0 *this, const airdrop_document::NoteDocument1_0 *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 711);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      int v6 = (airdrop_document::AttributedString *)*((void *)this + 5);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const airdrop_document::AttributedString *)*((void *)a2 + 5);
      if (!v7)
      {
        airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
        uint64_t v7 = *(const airdrop_document::AttributedString **)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
      }
      airdrop_document::AttributedString::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v8;
    }
  }
  BOOL v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3BDE464(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument::IsInitialized(airdrop_document::NoteDocument *this)
{
  return 1;
}

void *airdrop_document::NoteDocument::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.NoteDocument");
}

void airdrop_document::NoteDocument1_0::~NoteDocument1_0(void **this)
{
  *this = &unk_1F1F26FB0;
  airdrop_document::NoteDocument1_0::SharedDtor((airdrop_document::NoteDocument1_0 *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::NoteDocument1_0::~NoteDocument1_0(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::NoteDocument1_0::SharedDtor(airdrop_document::NoteDocument1_0 *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::NoteDocument1_0 *)airdrop_document::NoteDocument1_0::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t airdrop_document::NoteDocument1_0::default_instance(airdrop_document::NoteDocument1_0 *this)
{
  return airdrop_document::NoteDocument1_0::default_instance_;
}

void airdrop_document::NoteDocument1_0::New(airdrop_document::NoteDocument1_0 *this)
{
}

uint64_t airdrop_document::AttributedString::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::NoteDocument1_0::MergePartialFromCodedStream(airdrop_document::NoteDocument1_0 *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 16) {
        goto LABEL_21;
      }
      int v13 = (char *)*((void *)a2 + 1);
      unint64_t v12 = *((void *)a2 + 2);
LABEL_34:
      *(void *)uint64_t v27 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v27)) {
          goto LABEL_43;
        }
        uint64_t v21 = *(void *)v27;
        unsigned int v22 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
      }
      else
      {
        uint64_t v21 = *v13;
        unsigned int v22 = (unsigned __int8 *)(v13 + 1);
        *((void *)a2 + 1) = v22;
      }
      *((void *)this + 6) = v21;
      *((_DWORD *)this + 8) |= 2u;
      if (v22 == (unsigned __int8 *)v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_45;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (airdrop_document::AttributedString *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      v27[0] = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27)) {
          goto LABEL_43;
        }
      }
      else
      {
        v27[0] = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v14 = *((_DWORD *)a2 + 14);
      int v15 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v14 + 1;
      if (v14 >= v15
        || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27[0]),
            !airdrop_document::AttributedString::MergePartialFromCodedStream(v9, a2))
        || !*((unsigned char *)a2 + 36))
      {
LABEL_43:
        uint64_t v23 = 0;
        goto LABEL_45;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
      int v17 = *((_DWORD *)a2 + 14);
      BOOL v18 = __OFSUB__(v17, 1);
      int v19 = v17 - 1;
      if (v19 < 0 == v18) {
        *((_DWORD *)a2 + 14) = v19;
      }
      unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v12 = *((void *)a2 + 2);
      if ((unint64_t)v20 < v12 && *v20 == 16)
      {
        int v13 = v20 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_34;
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_44;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4))goto LABEL_43; {
    }
      }
  }
LABEL_14:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_44:
  uint64_t v23 = 1;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3BDE958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C400074EEDFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument1_0::SerializeWithCachedSizes(airdrop_document::NoteDocument1_0 *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 5);
    if (!v7)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v7 = *(void *)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    uint64_t v9 = *((void *)this + 2);
  }
  else
  {
    uint64_t v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t airdrop_document::NoteDocument1_0::ByteSize(airdrop_document::NoteDocument1_0 *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_13;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
    goto LABEL_13;
  }
  uint64_t v3 = (airdrop_document::AttributedString *)*((void *)this + 5);
  if (!v3)
  {
    airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
    uint64_t v3 = *(airdrop_document::AttributedString **)(airdrop_document::NoteDocument1_0::default_instance_ + 40);
  }
  uint64_t v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::AttributedString::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::NoteDocument1_0::CheckTypeAndMergeFrom(airdrop_document::NoteDocument1_0 *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::NoteDocument1_0::MergeFrom(this, lpsrc);
}

std::string *airdrop_document::AttributedString::MergeFrom(airdrop_document::AttributedString *this, const airdrop_document::AttributedString *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 913);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    BOOL v11 = v8;
  }
  else {
    BOOL v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3BDEC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::NoteDocument1_0::IsInitialized(airdrop_document::NoteDocument1_0 *this)
{
  return 1;
}

void *airdrop_document::NoteDocument1_0::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.NoteDocument1_0");
}

airdrop_document::AttributedString *airdrop_document::AttributedString::AttributedString(airdrop_document::AttributedString *this)
{
  *(void *)this = &unk_1F1F27028;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  airdrop_document::AttributedString::SharedCtor(this);
  return this;
}

void sub_1C3BDECF4(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void airdrop_document::AttributedString::SharedCtor(airdrop_document::AttributedString *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3BDEDBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void airdrop_document::AttributedString::~AttributedString(void **this)
{
  *this = &unk_1F1F27028;
  airdrop_document::AttributedString::SharedDtor((airdrop_document::AttributedString *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::AttributedString::~AttributedString(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::AttributedString::SharedDtor(airdrop_document::AttributedString *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 5);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (airdrop_document::AttributedString *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
}

void airdrop_document::AttributedString::New(airdrop_document::AttributedString *this)
{
}

void sub_1C3BDEF2C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::AttributedString::MergePartialFromCodedStream(airdrop_document::AttributedString *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    uint64_t v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1C3BDF0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::AttributedString::SerializeWithCachedSizes(airdrop_document::AttributedString *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t airdrop_document::AttributedString::ByteSize(airdrop_document::AttributedString *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::AttributedString::CheckTypeAndMergeFrom(airdrop_document::AttributedString *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::AttributedString::MergeFrom(this, lpsrc);
}

uint64_t airdrop_document::AttributedString::IsInitialized(airdrop_document::AttributedString *this)
{
  return 1;
}

void *airdrop_document::AttributedString::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.AttributedString");
}

void airdrop_document::LegacyNoteDocument::~LegacyNoteDocument(void **this)
{
  *this = &unk_1F1F270A0;
  airdrop_document::LegacyNoteDocument::SharedDtor((airdrop_document::LegacyNoteDocument *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::LegacyNoteDocument::~LegacyNoteDocument(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::LegacyNoteDocument::SharedDtor(airdrop_document::LegacyNoteDocument *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::LegacyNoteDocument *)airdrop_document::LegacyNoteDocument::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t airdrop_document::LegacyNoteDocument::default_instance(airdrop_document::LegacyNoteDocument *this)
{
  return airdrop_document::LegacyNoteDocument::default_instance_;
}

void airdrop_document::LegacyNoteDocument::New(airdrop_document::LegacyNoteDocument *this)
{
}

uint64_t airdrop_document::LegacyNoteDocument1_0::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 32))
  {
    this = *(void *)(this + 40);
    if (this) {
      this = airdrop_document::WebArchive::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument::MergePartialFromCodedStream(airdrop_document::LegacyNoteDocument *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && *v5 >= 1)
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      uint64_t v12 = v11;
      if (v11
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))
      {
        goto LABEL_32;
      }
    }
    if (v7 != 10) {
      goto LABEL_12;
    }
    *((_DWORD *)this + 8) |= 1u;
    int v9 = (airdrop_document::LegacyNoteDocument1_0 *)*((void *)this + 5);
    if (!v9) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22)) {
        break;
      }
    }
    else
    {
      unsigned int v22 = *v10;
      *((void *)a2 + 1) = v10 + 1;
    }
    int v13 = *((_DWORD *)a2 + 14);
    int v14 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v13 + 1;
    if (v13 >= v14) {
      break;
    }
    int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
    if (!airdrop_document::LegacyNoteDocument1_0::MergePartialFromCodedStream(v9, a2)
      || !*((unsigned char *)a2 + 36))
    {
      break;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
    int v16 = *((_DWORD *)a2 + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)a2 + 14) = v18;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v12 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  uint64_t v12 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v12;
}

void sub_1C3BDF6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument::SerializeWithCachedSizes(airdrop_document::LegacyNoteDocument *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v4 = *(void *)(airdrop_document::LegacyNoteDocument::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    char v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    char v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::LegacyNoteDocument::ByteSize(airdrop_document::LegacyNoteDocument *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (airdrop_document::LegacyNoteDocument1_0 *)*((void *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      uint64_t v3 = *(airdrop_document::LegacyNoteDocument1_0 **)(airdrop_document::LegacyNoteDocument::default_instance_ + 40);
    }
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::LegacyNoteDocument1_0::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::LegacyNoteDocument::CheckTypeAndMergeFrom(airdrop_document::LegacyNoteDocument *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::LegacyNoteDocument::MergeFrom(this, lpsrc);
}

std::string *airdrop_document::LegacyNoteDocument1_0::MergeFrom(airdrop_document::LegacyNoteDocument1_0 *this, const airdrop_document::LegacyNoteDocument1_0 *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1311);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v5 = (airdrop_document::WebArchive *)*((void *)this + 5);
    if (!v5) {
      operator new();
    }
    int v6 = (const airdrop_document::WebArchive *)*((void *)a2 + 5);
    if (!v6)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      int v6 = *(const airdrop_document::WebArchive **)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    airdrop_document::WebArchive::MergeFrom(v5, v6);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    BOOL v11 = v8;
  }
  else {
    BOOL v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3BDF96C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument::IsInitialized(airdrop_document::LegacyNoteDocument *this)
{
  return 1;
}

void *airdrop_document::LegacyNoteDocument::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.LegacyNoteDocument");
}

void airdrop_document::LegacyNoteDocument1_0::~LegacyNoteDocument1_0(void **this)
{
  *this = &unk_1F1F27118;
  airdrop_document::LegacyNoteDocument1_0::SharedDtor((airdrop_document::LegacyNoteDocument1_0 *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::LegacyNoteDocument1_0::~LegacyNoteDocument1_0(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::LegacyNoteDocument1_0::SharedDtor(airdrop_document::LegacyNoteDocument1_0 *this)
{
  airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
  if ((airdrop_document::LegacyNoteDocument1_0 *)airdrop_document::LegacyNoteDocument1_0::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t airdrop_document::LegacyNoteDocument1_0::default_instance(airdrop_document::LegacyNoteDocument1_0 *this)
{
  return airdrop_document::LegacyNoteDocument1_0::default_instance_;
}

void airdrop_document::LegacyNoteDocument1_0::New(airdrop_document::LegacyNoteDocument1_0 *this)
{
}

uint64_t airdrop_document::WebArchive::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t airdrop_document::LegacyNoteDocument1_0::MergePartialFromCodedStream(airdrop_document::LegacyNoteDocument1_0 *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && *v5 >= 1)
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      uint64_t v12 = v11;
      if (v11
        || !google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))
      {
        goto LABEL_32;
      }
    }
    if (v7 != 10) {
      goto LABEL_12;
    }
    *((_DWORD *)this + 8) |= 1u;
    int v9 = (airdrop_document::WebArchive *)*((void *)this + 5);
    if (!v9) {
      operator new();
    }
    unsigned int v22 = 0;
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22)) {
        break;
      }
    }
    else
    {
      unsigned int v22 = *v10;
      *((void *)a2 + 1) = v10 + 1;
    }
    int v13 = *((_DWORD *)a2 + 14);
    int v14 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v13 + 1;
    if (v13 >= v14) {
      break;
    }
    int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
    if (!airdrop_document::WebArchive::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
      break;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v15);
    int v16 = *((_DWORD *)a2 + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)a2 + 14) = v18;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v12 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_32;
    }
  }
  uint64_t v12 = 0;
LABEL_32:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v12;
}

void sub_1C3BDFDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::SerializeWithCachedSizes(airdrop_document::LegacyNoteDocument1_0 *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 5);
    if (!v4)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(this);
      uint64_t v4 = *(void *)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((char *)this + 31) < 0)
  {
    int v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    int v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::ByteSize(airdrop_document::LegacyNoteDocument1_0 *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (airdrop_document::WebArchive *)*((void *)this + 5);
    if (!v3)
    {
      airdrop_document::protobuf_AddDesc_airdrop_2ddocument_2eproto(0);
      uint64_t v3 = *(airdrop_document::WebArchive **)(airdrop_document::LegacyNoteDocument1_0::default_instance_ + 40);
    }
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)airdrop_document::WebArchive::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v7 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::LegacyNoteDocument1_0::CheckTypeAndMergeFrom(airdrop_document::LegacyNoteDocument1_0 *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::LegacyNoteDocument1_0::MergeFrom(this, lpsrc);
}

std::string *airdrop_document::WebArchive::MergeFrom(airdrop_document::WebArchive *this, const airdrop_document::WebArchive *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/airdrop-document.pb.cc", 1509);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      versioned_document::Version::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    BOOL v11 = v8;
  }
  else {
    BOOL v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3BE0090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::IsInitialized(airdrop_document::LegacyNoteDocument1_0 *this)
{
  return 1;
}

void *airdrop_document::LegacyNoteDocument1_0::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.LegacyNoteDocument1_0");
}

airdrop_document::WebArchive *airdrop_document::WebArchive::WebArchive(airdrop_document::WebArchive *this)
{
  *(void *)this = &unk_1F1F27190;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  airdrop_document::WebArchive::SharedCtor(this);
  return this;
}

void sub_1C3BE0118(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

void airdrop_document::WebArchive::SharedCtor(airdrop_document::WebArchive *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1F24E80;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1C3BE01E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void airdrop_document::WebArchive::~WebArchive(void **this)
{
  *this = &unk_1F1F27190;
  airdrop_document::AttributedString::SharedDtor((airdrop_document::AttributedString *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  airdrop_document::WebArchive::~WebArchive(this);
  JUMPOUT(0x1C877D640);
}

void airdrop_document::WebArchive::New(airdrop_document::WebArchive *this)
{
}

void sub_1C3BE02D8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::WebArchive::MergePartialFromCodedStream(airdrop_document::WebArchive *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1C3BE04A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t airdrop_document::WebArchive::SerializeWithCachedSizes(airdrop_document::WebArchive *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t airdrop_document::WebArchive::ByteSize(airdrop_document::WebArchive *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *airdrop_document::WebArchive::CheckTypeAndMergeFrom(airdrop_document::WebArchive *this, const google::protobuf::MessageLite *lpsrc)
{
  return airdrop_document::WebArchive::MergeFrom(this, lpsrc);
}

uint64_t airdrop_document::WebArchive::IsInitialized(airdrop_document::WebArchive *this)
{
  return 1;
}

void *airdrop_document::WebArchive::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "airdrop_document.WebArchive");
}

uint64_t airdrop_document::Document::GetCachedSize(airdrop_document::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::NoteDocument::GetCachedSize(airdrop_document::NoteDocument *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::NoteDocument1_0::GetCachedSize(airdrop_document::NoteDocument1_0 *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::AttributedString::GetCachedSize(airdrop_document::AttributedString *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::LegacyNoteDocument::GetCachedSize(airdrop_document::LegacyNoteDocument *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::LegacyNoteDocument1_0::GetCachedSize(airdrop_document::LegacyNoteDocument1_0 *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t airdrop_document::WebArchive::GetCachedSize(airdrop_document::WebArchive *this)
{
  return *((unsigned int *)this + 9);
}

void sub_1C3BE0D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE12A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE1648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id soft_getCTGreenTeaOsLogHandle(uint64_t a1)
{
  uint64_t v7 = 0;
  int v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v2 = (void (*)(uint64_t))getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  uint64_t v10 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  if (!getgetCTGreenTeaOsLogHandleSymbolLoc_ptr)
  {
    uint64_t v3 = (void *)libCTGreenTeaLoggerLibrary();
    v8[3] = (uint64_t)dlsym(v3, "getCTGreenTeaOsLogHandle");
    getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = (_UNKNOWN *)v8[3];
    int v2 = (void (*)(uint64_t))v8[3];
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    uint64_t v6 = (_Unwind_Exception *)__35__ICSearchQueryOperation_nlpParser__block_invoke_cold_1();
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  int v4 = v2(a1);
  return v4;
}

void *__getct_green_tea_logger_createSymbolLoc_block_invoke(uint64_t a1)
{
  int v2 = (void *)libCTGreenTeaLoggerLibrary();
  uint64_t result = dlsym(v2, "ct_green_tea_logger_create");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getct_green_tea_logger_createSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __libCTGreenTeaLoggerLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  libCTGreenTeaLoggerLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getgetCTGreenTeaOsLogHandleSymbolLoc_block_invoke(uint64_t a1)
{
  int v2 = (void *)libCTGreenTeaLoggerLibrary();
  uint64_t result = dlsym(v2, "getCTGreenTeaOsLogHandle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

__CFString *NSStringFromICParticipantsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"me";
  }
  else {
    return off_1E64A8E98[a1 - 1];
  }
}

id ICLocalizedStringFromICParticipantsFilterSelectionType(void *a1)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      uint64_t v3 = (void *)MEMORY[0x1E4F83770];
      int v4 = @"me";
      goto LABEL_9;
    case 1uLL:
      uint64_t v3 = (void *)MEMORY[0x1E4F83770];
      int v4 = @"anyone";
      goto LABEL_9;
    case 2uLL:
      uint64_t v3 = (void *)MEMORY[0x1E4F83770];
      int v4 = @"specific participants";
      goto LABEL_9;
    case 3uLL:
      uint64_t v3 = (void *)MEMORY[0x1E4F83770];
      int v4 = @"none";
LABEL_9:
      a1 = objc_msgSend(v3, "localizedFrameworkStringForKey:value:table:allowSiri:", v4, v4, 0, 1, v1);
      break;
    default:
      break;
  }
  return a1;
}

__CFString *NSStringFromICParticipantsFilterJoinOperator(uint64_t a1)
{
  uint64_t v1 = @"unknown";
  if (a1 == 1) {
    uint64_t v1 = @"all";
  }
  if (a1 == 2) {
    return @"any";
  }
  else {
    return v1;
  }
}

id ICLocalizedStringFromICParticipantsFilterJoinOperator(void *a1)
{
  if (a1 == (void *)2)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    uint64_t v2 = @"PERSON_OPERATOR_ANY";
    uint64_t v3 = @"any";
  }
  else if (a1 == (void *)1)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    uint64_t v2 = @"PERSON_OPERATOR_ALL";
    uint64_t v3 = @"all";
  }
  else
  {
    if (a1) {
      goto LABEL_8;
    }
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    uint64_t v2 = @"PERSON_OPERATOR_UNKNOWN";
    uint64_t v3 = @"unknown";
  }
  a1 = [v1 localizedFrameworkStringForKey:v2 value:v3 table:0 allowSiri:1];
LABEL_8:
  return a1;
}

void sub_1C3BE4704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE4F2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BE50C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BE51CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE5B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE606C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE7080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE727C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE97A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BE9890(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEA488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEA6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEAA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEAC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEAD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromICFilterType(unint64_t a1)
{
  if (a1 > 0xA) {
    return @"Unknown";
  }
  else {
    return off_1E64A91A0[a1];
  }
}

void sub_1C3BEB1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEB414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(_DWORD *this)
{
  if (this[7] + this[11] + this[4] - this[2] >= 1)
  {
    uint64_t v1 = this;
    this = (_DWORD *)(*(uint64_t (**)(void))(**(void **)this + 24))(*(void *)this);
    uint64_t v2 = *((void *)v1 + 1);
    unsigned int v3 = v1[6] - v1[11] + v2 - v1[4];
    *((void *)v1 + 2) = v2;
    v1[11] = 0;
    *((void *)v1 + 3) = v3;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::BytesUntilLimit(google::protobuf::io::CodedInputStream *this)
{
  int v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return (v1
  }
                        - *((_DWORD *)this + 6)
                        + *((_DWORD *)this + 11)
                        + *((_DWORD *)this + 4)
                        - *((_DWORD *)this + 2));
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 180);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  unsigned int v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (google::protobuf::internal::LogMessage *)v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1C3BEC32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = (void *)((char *)this + 8);
  if (*((_DWORD *)this + 4) != *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 519);
    unsigned int v3 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (0) == (BufferSize()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
  }
  int v4 = *((_DWORD *)this + 11);
  if (v4 > 0 || *((int *)this + 7) > 0 || (int v5 = *((_DWORD *)this + 6), v5 == *((_DWORD *)this + 10)))
  {
    int v6 = *((_DWORD *)this + 6) - v4;
    int v7 = *((_DWORD *)this + 12);
    if (v6 >= v7 && v7 != *((_DWORD *)this + 10)) {
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    }
    return 0;
  }
  else
  {
    int v10 = *((_DWORD *)this + 13);
    if ((v10 & 0x80000000) == 0 && v5 >= v10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 537);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v30, "Reading dangerously large protocol message.  If the message turns out to be larger than ");
      std::string::size_type v12 = google::protobuf::internal::LogMessage::operator<<(v11, *((_DWORD *)this + 12));
      int v13 = google::protobuf::internal::LogMessage::operator<<(v12, " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v13);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      *((_DWORD *)this + 13) = -2;
    }
    uint64_t v29 = 0;
    int v28 = 0;
    uint64_t v14 = *(void *)this;
    do
    {
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(void *)v14 + 16))(v14, &v29, &v28);
      if (!v8)
      {
        void *v2 = 0;
        v2[1] = 0;
        return v8;
      }
      int v15 = v28;
    }
    while (!v28);
    uint64_t v16 = v29 + v28;
    *((void *)this + 1) = v29;
    *((void *)this + 2) = v16;
    if (v15 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/io/coded_stream.cc", 554);
      BOOL v17 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (google::protobuf::internal::LogMessage *)v17);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      int v15 = v28;
    }
    int v18 = *((_DWORD *)this + 6);
    int v19 = v18 - (v15 ^ 0x7FFFFFFF);
    if (v18 <= (v15 ^ 0x7FFFFFFF))
    {
      int v21 = v15 + v18;
      uint64_t v20 = *((void *)this + 2);
    }
    else
    {
      *((_DWORD *)this + 7) = v19;
      uint64_t v20 = *((void *)this + 2) - v19;
      *((void *)this + 2) = v20;
      int v21 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v21;
    int v22 = *((_DWORD *)this + 10);
    uint64_t v23 = v20 + *((int *)this + 11);
    *((void *)this + 2) = v23;
    int v24 = *((_DWORD *)this + 12);
    if (v24 >= v22) {
      int v24 = v22;
    }
    BOOL v25 = __OFSUB__(v21, v24);
    int v26 = v21 - v24;
    if ((v26 < 0) ^ v25 | (v26 == 0)) {
      int v26 = 0;
    }
    else {
      *((void *)this + 2) = v23 - v26;
    }
    *((_DWORD *)this + 11) = v26;
  }
  return v8;
}

void sub_1C3BEC59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    int v7 = (const void *)*((void *)this + 1);
    int v8 = *((void *)this + 2) - v7;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, v8);
    __dst += v8;
    *((void *)this + 1) += v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= v8;
    }
  }
  memcpy(__dst, v7, v6);
  *((void *)this + 1) += v6;
  return v6 <= v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  unsigned int v3 = __n;
  int v4 = this;
  if (*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 8) >= (int)__n)
  {
    std::string::resize(this, __n, 0);
    if (!v3) {
      return 1;
    }
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v4->__r_.__value_.__l.__size_)
      {
LABEL_13:
        int v4 = 0;
        goto LABEL_14;
      }
      int v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v4->__r_.__value_.__s + 23))
    {
      goto LABEL_13;
    }
LABEL_14:
    memcpy(v4, *(const void **)(a1 + 8), v3);
    *(void *)(a1 + 8) += v3;
    return 1;
  }
  return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, __n);
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 4) - *((_DWORD *)this + 2);
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    uint64_t v11 = (const std::string::value_type *)*((void *)this + 1);
    int v12 = *((void *)this + 2) - v11;
    BOOL v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0)) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, v12);
      uint64_t v11 = (const std::string::value_type *)*((void *)this + 1);
    }
    *((void *)this + 1) = &v11[v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= v12;
    }
  }
  std::string::append(a2, v11, v10);
  *((void *)this + 1) += v10;
  return v10 <= v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v3 = (unint64_t *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFF8) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    int v3 = (unint64_t *)v5;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw(this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = (char *)*((void *)this + 1);
  int v3 = (unsigned __int8 *)*((void *)this + 2);
  if (v2 != (char *)v3)
  {
LABEL_4:
    unint64_t v7 = 0;
    if (v2 >= (char *)v3 || *v2 < 0)
    {
      unint64_t result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v7);
      if (result) {
        return v7;
      }
    }
    else
    {
      unint64_t result = *v2;
      *((void *)this + 1) = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    uint64_t v2 = (char *)*((void *)this + 1);
    int v3 = (unsigned __int8 *)*((void *)this + 2);
    goto LABEL_4;
  }
  int v5 = *((_DWORD *)this + 12);
  unint64_t result = 0;
  BOOL v6 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v5 || *((_DWORD *)this + 10) == v5;
  *((unsigned char *)this + 36) = v6;
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Slow(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (v4 != 10)
  {
    while (1)
    {
      BOOL v6 = (char *)*((void *)this + 1);
      if (v6 != *((char **)this + 2)) {
        break;
      }
      if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
        return 0;
      }
    }
    char v7 = *v6;
    v5 |= (unint64_t)(*v6 & 0x7F) << (7 * v4);
    *((void *)this + 1) = v6 + 1;
    ++v4;
    if ((v7 & 0x80) == 0)
    {
      *a2 = v5;
      return 1;
    }
  }
  return 0;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteRaw(google::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  while (1)
  {
    size_t v6 = *((int *)this + 4);
    char v7 = (void *)*((void *)this + 1);
    if ((int)v6 >= a3) {
      break;
    }
    memcpy(v7, __src, v6);
    uint64_t v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    uint64_t result = google::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0) {
      return result;
    }
  }
  uint64_t result = (uint64_t)memcpy(v7, __src, a3);
  *((void *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteAliasedRaw(google::protobuf::io::CodedOutputStream *this, char *__src, uint64_t a3)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6 <= (int)a3)
  {
    if (v6 <= 0)
    {
      int v8 = *((_DWORD *)this + 5);
    }
    else
    {
      (*(void (**)(void))(**(void **)this + 24))();
      int v8 = *((_DWORD *)this + 5) - *((_DWORD *)this + 4);
      *((void *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
    }
    *((_DWORD *)this + 5) = v8 + a3;
    uint64_t result = (*(uint64_t (**)(void, char *, uint64_t))(**(void **)this + 40))(*(void *)this, __src, a3);
    *((unsigned char *)this + 24) |= result ^ 1;
  }
  else
  {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, a3);
  }
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  if (*(_DWORD *)(this + 16) < 4u)
  {
    int __src = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + _Block_object_dispose(&STACK[0x310], 8) = a2;
    *(void *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(void **)(this + _Block_object_dispose(&STACK[0x310], 8) = a2;
    *(void *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint32(uint64_t this, unsigned int a2)
{
  if (*(int *)(this + 16) < 5)
  {
    if (a2 < 0x80)
    {
      LODWORD(v4) = 0;
    }
    else
    {
      uint64_t v4 = 0;
      do
      {
        __src[v4++] = a2 | 0x80;
        unsigned int v5 = a2 >> 14;
        a2 >>= 7;
      }
      while (v5);
    }
    __src[v4] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v4 + 1);
  }
  else
  {
    uint64_t v2 = *(unsigned char **)(this + 8);
    unsigned char *v2 = a2 | 0x80;
    if (a2 < 0x80)
    {
      unsigned char *v2 = a2 & 0x7F;
      int v3 = v2 + 1;
    }
    else
    {
      v2[1] = (a2 >> 7) | 0x80;
      if (a2 < 0x4000)
      {
        v2[1] = (a2 >> 7) & 0x7F;
        int v3 = v2 + 2;
      }
      else
      {
        void v2[2] = (a2 >> 14) | 0x80;
        if (a2 < 0x200000)
        {
          void v2[2] = (a2 >> 14) & 0x7F;
          int v3 = v2 + 3;
        }
        else
        {
          v2[3] = (a2 >> 21) | 0x80;
          if (a2 >> 28)
          {
            v2[4] = a2 >> 28;
            int v3 = v2 + 5;
          }
          else
          {
            int v3 = v2 + 4;
            v2[3] = (a2 >> 21) & 0x7F;
          }
        }
      }
    }
    int v6 = v3 - v2;
    *(void *)(this + 8) += v6;
    *(_DWORD *)(this + 16) -= v6;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint64(uint64_t this, unint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (*(int *)(this + 16) >= 10)
  {
    uint64_t v2 = *(unsigned char **)(this + 8);
    unint64_t v3 = a2 >> 28;
    if (HIBYTE(a2))
    {
      if (HIBYTE(a2) >= 0x80)
      {
        v2[9] = -127;
        unsigned int v4 = 10;
      }
      else
      {
        unsigned int v4 = 9;
      }
      v2[8] = HIBYTE(a2) | 0x80;
    }
    else
    {
      if (!v3)
      {
        if (!(a2 >> 14))
        {
          if (a2 < 0x80)
          {
            unsigned int v4 = 1;
            goto LABEL_24;
          }
          unsigned int v4 = 2;
LABEL_23:
          v2[1] = (a2 >> 7) | 0x80;
LABEL_24:
          unsigned char *v2 = a2 | 0x80;
          v2[v4 - 1] &= ~0x80u;
          *(void *)(this + 8) += v4;
          *(_DWORD *)(this + 16) -= v4;
          return this;
        }
        if (a2 < 0x200000)
        {
          unsigned int v4 = 3;
          goto LABEL_22;
        }
        unsigned int v4 = 4;
LABEL_21:
        v2[3] = (a2 >> 21) | 0x80;
LABEL_22:
        void v2[2] = (a2 >> 14) | 0x80;
        goto LABEL_23;
      }
      if (!(v3 >> 14))
      {
        if (v3 < 0x80)
        {
          unsigned int v4 = 5;
LABEL_20:
          v2[4] = v3 | 0x80;
          goto LABEL_21;
        }
        unsigned int v4 = 6;
LABEL_19:
        v2[5] = (a2 >> 35) | 0x80;
        goto LABEL_20;
      }
      if (v3 < 0x200000)
      {
        unsigned int v4 = 7;
        goto LABEL_18;
      }
      unsigned int v4 = 8;
    }
    v2[7] = (a2 >> 49) | 0x80;
LABEL_18:
    v2[6] = (a2 >> 42) | 0x80;
    goto LABEL_19;
  }
  if (a2 < 0x80)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    uint64_t v5 = 0;
    do
    {
      __src[v5++] = a2 | 0x80;
      unint64_t v6 = a2 >> 14;
      a2 >>= 7;
    }
    while (v6);
  }
  __src[v5] = a2;
  return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v5 + 1);
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize32Fallback(google::protobuf::io::CodedOutputStream *this)
{
  if (this >> 28) {
    int v1 = 5;
  }
  else {
    int v1 = 4;
  }
  if (this >= 0x200000) {
    int v2 = v1;
  }
  else {
    int v2 = 3;
  }
  if (this >= 0x4000) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 2;
  }
  if (this >= 0x80) {
    return v3;
  }
  else {
    return 1;
  }
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize64(unint64_t this)
{
  if ((this & 0x8000000000000000) == 0) {
    int v1 = 9;
  }
  else {
    int v1 = 10;
  }
  if (HIBYTE(this)) {
    int v2 = v1;
  }
  else {
    int v2 = 8;
  }
  if (this >> 49) {
    int v3 = v2;
  }
  else {
    int v3 = 7;
  }
  if (this >> 42) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = 6;
  }
  if (this >> 28) {
    int v5 = 5;
  }
  else {
    int v5 = 4;
  }
  if (this >= 0x200000) {
    int v6 = v5;
  }
  else {
    int v6 = 3;
  }
  if (this >= 0x4000) {
    int v7 = v6;
  }
  else {
    int v7 = 2;
  }
  if (this >= 0x80) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = 1;
  }
  if (this >> 35) {
    return v4;
  }
  else {
    return v8;
  }
}

void sub_1C3BED810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose((const void *)(v56 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEDC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEE2E8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BEE96C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BEEB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  a11 = (void **)&a18;
  std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__destroy_vector::operator()[abi:ne180100](&a11);

  _Unwind_Resume(a1);
}

void sub_1C3BEECF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  _Unwind_Resume(a1);
}

void sub_1C3BEEDCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3BEEEBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__assign_with_size[abi:ne180100]<std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = (uint64_t)(a1 + 2);
  uint64_t v9 = *a1;
  if (a4 > (a1[2] - *a1) >> 5)
  {
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(a1);
    if (a4 >> 59) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = a1[2] - *a1;
    uint64_t v11 = v10 >> 4;
    if (v10 >> 4 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](a1, v12);
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v6, a3, a1[1]);
LABEL_15:
    a1[1] = v13;
    return;
  }
  uint64_t v14 = a1[1];
  unint64_t v15 = (v14 - v9) >> 5;
  if (v15 < a4)
  {
    uint64_t v16 = a2 + 32 * v15;
    if (v14 != v9)
    {
      uint64_t v17 = 32 * v15;
      do
      {
        std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
        v6 += 32;
        v9 += 32;
        v17 -= 32;
      }
      while (v17);
      uint64_t v9 = a1[1];
    }
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v16, a3, v9);
    goto LABEL_15;
  }
  if (a2 == a3)
  {
    uint64_t v18 = *a1;
  }
  else
  {
    uint64_t v18 = *a1;
    do
    {
      std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
      v6 += 32;
      v9 += 32;
      v18 += 32;
    }
    while (v6 != a3);
  }
  std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, v18);
}

void sub_1C3BEF064(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, *a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 == a3)
  {
    uint64_t v7 = a4;
  }
  else
  {
    uint64_t v6 = a2;
    uint64_t v7 = v12;
    do
    {
      *(void *)uint64_t v4 = *(id *)v6;
      *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x310], 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(v4 + 16) = *(_DWORD *)(v6 + 16);
      *(void *)(v4 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(id *)(v6 + 24);
      v7 += 32;
      v6 += 32;
      uint64_t v4 = v7;
    }
    while (v6 != a3);
    uint64_t v12 = v7;
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v7;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(*(void *)a1, **(void **)(a1 + 16), **(void **)(a1 + 16), **(void **)(a1 + 8), **(void **)(a1 + 8));
  }
  return a1;
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 != a5)
  {
    uint64_t v6 = a3;
    do
    {

      uint64_t v7 = *(void **)(v6 - 32);
      v6 -= 32;
    }
    while (v6 != a5);
  }
}

uint64_t std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x310], 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
  return a1;
}

void sub_1C3BF0590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF1710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF3670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1C3BF3700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BF7618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF79FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF7EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF8314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF9188(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF9C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BF9FEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C3BFA834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFB464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFC3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFC950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFF280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFF3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3BFF8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C004AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C3C0134C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C01A44(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1C3C041C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3C044BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C045B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C046BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C049D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1C3C04E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C0507C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C05120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C0532C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C0551C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::VectorTimestamp_Element>::New()
{
}

void sub_1C3C055B4(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C40D780A9F4);
  _Unwind_Resume(a1);
}

void sub_1C3C05800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C05BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C06164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::WireFormatLite::SkipField(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  LittleEndian64Fallbacuint64_t k = 0;
  unsigned int v6 = a2;
  switch(a2 & 7)
  {
    case 0:
      __p.__r_.__value_.__r.__words[0] = 0;
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)&__p)) {
          goto LABEL_30;
        }
      }
      else
      {
        __p.__r_.__value_.__r.__words[0] = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, __p.__r_.__value_.__r.__words[0]);
      LittleEndian64Fallbacuint64_t k = 1;
      break;
    case 1:
      __p.__r_.__value_.__r.__words[0] = 0;
      LittleEndian64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, (uint64_t)__p.__r_.__value_.__l.__data_);
      }
      break;
    case 2:
      LODWORD(__n) = 0;
      uint64_t v9 = (char *)*((void *)this + 1);
      if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, (unsigned int *)&__n)) {
          goto LABEL_30;
        }
      }
      else
      {
        LODWORD(__n) = *v9;
        *((void *)this + 1) = v9 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, __n);
      memset(&__p, 0, sizeof(__p));
      LittleEndian64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadString((uint64_t)this, &__p, __n);
      if (LittleEndian64Fallback)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          int v18 = __p.__r_.__value_.__r.__words[1];
        }
        google::protobuf::io::CodedOutputStream::WriteRaw(a3, (char *)p_p, v18);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
    case 3:
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
      int v12 = *((_DWORD *)this + 14);
      int v13 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v12 + 1;
      if (v12 < v13 && google::protobuf::internal::WireFormatLite::SkipMessage(this, a3, v10, v11))
      {
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        LittleEndian64Fallbacuint64_t k = *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
      }
      else
      {
LABEL_30:
        LittleEndian64Fallbacuint64_t k = 0;
      }
      break;
    case 5:
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      LittleEndian64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, (int)__p.__r_.__value_.__l.__data_);
      }
      break;
    default:
      return LittleEndian64Fallback;
  }
  return LittleEndian64Fallback;
}

void sub_1C3C069E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::WireFormatLite::SkipMessage(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  do
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    BOOL v8 = TagFallback == 0;
    if (!TagFallback) {
      break;
    }
    if ((TagFallback & 7) == 4)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, TagFallback);
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a2, a4) & 1) != 0);
  return v8;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt32(google::protobuf::internal::WireFormatLite *this, signed int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  if (a2 < 0)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
  }
  else
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
  }
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt64(google::protobuf::internal::WireFormatLite *this, unint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteUInt32(google::protobuf::internal::WireFormatLite *this, unsigned int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteSInt64(google::protobuf::internal::WireFormatLite *this, uint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * a2) ^ (a2 >> 63));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteFloat(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, float a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 5);
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteDouble(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, double a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 1);
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteString(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 377);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1C3C06D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 386);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
  }
}

void sub_1C3C06E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytes(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 393);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1C3C06F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/wire_format_lite.cc", 401);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
  }
}

void sub_1C3C0705C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  unsigned int v6 = *(uint64_t (**)(uint64_t, google::protobuf::io::CodedOutputStream *))(*(void *)a2 + 80);
  return v6(a2, this);
}

void sub_1C3C07480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C3C07BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C07CB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C07DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C07EA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::Font::~Font((topotext::Font *)va);
  _Unwind_Resume(a1);
}

void sub_1C3C07F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C07FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C080BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1C877D640](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1C3C08228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1C3C082B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08408(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3C084A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C086B8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C3C08734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C087E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C089D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C08EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C090A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C0914C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C091AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C094A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C098BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C09A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C0B8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0D7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0DD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0E42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0E7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0EBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C0EF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id NSStringFromICFilterSelectionJoinOperator(void *a1)
{
  if (a1 == (void *)1)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    uint64_t v2 = @"FILTER_OPERATOR_ANY";
    int v3 = @"any";
  }
  else
  {
    if (a1) {
      goto LABEL_6;
    }
    uint64_t v1 = (void *)MEMORY[0x1E4F83770];
    uint64_t v2 = @"FILTER_OPERATOR_ALL";
    int v3 = @"all";
  }
  a1 = [v1 localizedFrameworkStringForKey:v2 value:v3 table:0 allowSiri:1];
LABEL_6:
  return a1;
}

void sub_1C3C1122C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C112F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C11380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t CRDT::protobuf_ShutdownFile_crframework_2eproto(CRDT *this)
{
  if (CRDT::ObjectID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::ObjectID::default_instance_ + 8))(CRDT::ObjectID::default_instance_);
  }
  if (CRDT::Timestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Timestamp::default_instance_ + 8))(CRDT::Timestamp::default_instance_);
  }
  if (CRDT::RegisterLatest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::RegisterLatest::default_instance_ + 8))(CRDT::RegisterLatest::default_instance_);
  }
  if (CRDT::VectorTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::VectorTimestamp::default_instance_ + 8))(CRDT::VectorTimestamp::default_instance_);
  }
  if (CRDT::VectorTimestamp_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::VectorTimestamp_Element::default_instance_ + 8))(CRDT::VectorTimestamp_Element::default_instance_);
  }
  if (CRDT::Dictionary::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Dictionary::default_instance_ + 8))(CRDT::Dictionary::default_instance_);
  }
  if (CRDT::Dictionary_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Dictionary_Element::default_instance_ + 8))(CRDT::Dictionary_Element::default_instance_);
  }
  if (CRDT::Index::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Index::default_instance_ + 8))(CRDT::Index::default_instance_);
  }
  if (CRDT::Index_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Index_Element::default_instance_ + 8))(CRDT::Index_Element::default_instance_);
  }
  if (CRDT::OneOf::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OneOf::default_instance_ + 8))(CRDT::OneOf::default_instance_);
  }
  if (CRDT::OneOf_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OneOf_Element::default_instance_ + 8))(CRDT::OneOf_Element::default_instance_);
  }
  if (CRDT::StringArray::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::StringArray::default_instance_ + 8))(CRDT::StringArray::default_instance_);
  }
  if (CRDT::StringArray_ArrayAttachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::StringArray_ArrayAttachment::default_instance_ + 8))(CRDT::StringArray_ArrayAttachment::default_instance_);
  }
  if (CRDT::Array::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Array::default_instance_ + 8))(CRDT::Array::default_instance_);
  }
  if (CRDT::OrderedSet::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OrderedSet::default_instance_ + 8))(CRDT::OrderedSet::default_instance_);
  }
  if (CRDT::Document::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document::default_instance_ + 8))(CRDT::Document::default_instance_);
  }
  if (CRDT::Document_CustomObject::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document_CustomObject::default_instance_ + 8))(CRDT::Document_CustomObject::default_instance_);
  }
  if (CRDT::Document_CustomObject_MapEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document_CustomObject_MapEntry::default_instance_ + 8))(CRDT::Document_CustomObject_MapEntry::default_instance_);
  }
  uint64_t result = CRDT::Document_DocObject::default_instance_;
  if (CRDT::Document_DocObject::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CRDT::Document_DocObject::default_instance_ + 8);
    return v2();
  }
  return result;
}

double CRDT::Timestamp::Timestamp(CRDT::Timestamp *this)
{
  *(void *)this = &unk_1F1F27788;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::RegisterLatest::RegisterLatest(CRDT::RegisterLatest *this)
{
  *(void *)this = &unk_1F1F27800;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::VectorTimestamp::VectorTimestamp(CRDT::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1F278F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::VectorTimestamp_Element::VectorTimestamp_Element(CRDT::VectorTimestamp_Element *this)
{
  *(void *)this = &unk_1F1F27878;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

double CRDT::Dictionary::Dictionary(CRDT::Dictionary *this)
{
  *(void *)this = &unk_1F1F279E0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Dictionary_Element::Dictionary_Element(CRDT::Dictionary_Element *this)
{
  *(void *)this = &unk_1F1F27968;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double CRDT::Index::Index(CRDT::Index *this)
{
  *(void *)this = &unk_1F1F27AD0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Index_Element::Index_Element(CRDT::Index_Element *this)
{
  *(void *)this = &unk_1F1F27A58;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::OneOf::OneOf(CRDT::OneOf *this)
{
  *(void *)this = &unk_1F1F27BC0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::OneOf_Element::OneOf_Element(CRDT::OneOf_Element *this)
{
  *(void *)this = &unk_1F1F27B48;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::StringArray::StringArray(CRDT::StringArray *this)
{
  *(void *)this = &unk_1F1F27CB0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CRDT::Array::Array(CRDT::Array *this)
{
  *(void *)this = &unk_1F1F27D28;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::OrderedSet::OrderedSet(CRDT::OrderedSet *this)
{
  *(void *)this = &unk_1F1F27DA0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::Document_CustomObject::Document_CustomObject(CRDT::Document_CustomObject *this)
{
  *(void *)this = &unk_1F1F27E90;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Document_CustomObject_MapEntry::Document_CustomObject_MapEntry(CRDT::Document_CustomObject_MapEntry *this)
{
  *(void *)this = &unk_1F1F27E18;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CRDT::Document_DocObject::Document_DocObject(CRDT::Document_DocObject *this)
{
  *(void *)this = &unk_1F1F27F08;
  *((_DWORD *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  return result;
}

std::string *CRDT::ObjectID::MergeFrom(CRDT::ObjectID *this, const CRDT::ObjectID *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 447);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 1) {
        goto LABEL_9;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v6 = 1;
      goto LABEL_8;
    case 2:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 2) {
        goto LABEL_9;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v6 = 2;
LABEL_8:
      *((_DWORD *)this + 12) = v6;
LABEL_9:
      *((void *)this + 5) = v5;
      goto LABEL_22;
    case 3:
      uint64_t v7 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 3)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
      }
      *((void *)this + 5) = v7;
      goto LABEL_22;
    case 4:
      int v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 4) {
        goto LABEL_16;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v9 = 4;
      goto LABEL_21;
    case 5:
      int v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 5)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        int v9 = 5;
LABEL_21:
        *((_DWORD *)this + 12) = v9;
        operator new();
      }
LABEL_16:
      std::string::operator=(*((std::string **)this + 5), v8);
LABEL_22:
      uint64_t v13 = (const std::string::value_type *)*((void *)a2 + 1);
      char v12 = (char *)a2 + 8;
      uint64_t v11 = v13;
      int v14 = v12[23];
      if (v14 >= 0) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = v11;
      }
      if (v14 >= 0) {
        std::string::size_type v16 = v12[23];
      }
      else {
        std::string::size_type v16 = *((void *)v12 + 1);
      }
      return std::string::append((std::string *)((char *)this + 8), v15, v16);
    case 6:
      int v10 = *((_DWORD *)a2 + 10);
      if (*((_DWORD *)this + 12) != 6)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
      }
      *((_DWORD *)this + 10) = v10;
      goto LABEL_22;
    default:
      goto LABEL_22;
  }
}

void sub_1C3C11C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::New(CRDT::ObjectID *this)
{
}

void sub_1C3C11CDC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::Clear(CRDT::ObjectID *this)
{
  uint64_t result = CRDT::ObjectID::clear_contents((uint64_t)this);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::ObjectID::SerializeWithCachedSizes(CRDT::ObjectID *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteSInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, *((double *)this + 5), a3);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(5, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)this + 10), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::ObjectID::ByteSize(CRDT::ObjectID *this)
{
  switch(*((_DWORD *)this + 12))
  {
    case 1:
      unint64_t v8 = (2 * *((void *)this + 5)) ^ (*((uint64_t *)this + 5) >> 63);
      goto LABEL_9;
    case 2:
      unint64_t v8 = *((void *)this + 5);
LABEL_9:
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize64(v8);
      goto LABEL_19;
    case 3:
      int v10 = 9;
      goto LABEL_20;
    case 4:
    case 5:
      uint64_t v2 = *((void *)this + 5);
      int v3 = *(unsigned __int8 *)(v2 + 23);
      char v4 = v3;
      uint64_t v5 = *(void *)(v2 + 8);
      if ((v3 & 0x80u) == 0) {
        unint64_t v6 = *(unsigned __int8 *)(v2 + 23);
      }
      else {
        unint64_t v6 = v5;
      }
      if (v6 >= 0x80)
      {
        int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v6);
        int v3 = *(unsigned __int8 *)(v2 + 23);
        uint64_t v5 = *(void *)(v2 + 8);
        int v7 = v12 + 1;
        char v4 = *(unsigned char *)(v2 + 23);
      }
      else
      {
        int v7 = 2;
      }
      if (v4 < 0) {
        int v3 = v5;
      }
      int v10 = v7 + v3;
      goto LABEL_20;
    case 6:
      uint64_t v11 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v11 >= 0x80)
      {
        int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
LABEL_19:
        int v10 = v9 + 1;
      }
      else
      {
        int v10 = 2;
      }
LABEL_20:
      if (*((char *)this + 31) < 0) {
        uint64_t v13 = *((void *)this + 2);
      }
      else {
        LODWORD(v13) = *((unsigned __int8 *)this + 31);
      }
      uint64_t result = (v10 + v13);
      *((_DWORD *)this + 9) = result;
      return result;
    default:
      int v10 = 0;
      goto LABEL_20;
  }
}

std::string *CRDT::ObjectID::CheckTypeAndMergeFrom(CRDT::ObjectID *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::ObjectID::MergeFrom(this, lpsrc);
}

uint64_t CRDT::ObjectID::IsInitialized(CRDT::ObjectID *this)
{
  return 1;
}

void *CRDT::ObjectID::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.ObjectID");
}

std::string *CRDT::Timestamp::MergeFrom(CRDT::Timestamp *this, const CRDT::Timestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 706);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v7;
    }
  }
  int v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  unint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    int v12 = v9;
  }
  else {
    int v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1C3C120E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Timestamp::~Timestamp(void **this)
{
  *this = &unk_1F1F27788;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::Timestamp::~Timestamp(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::Timestamp::New(CRDT::Timestamp *this)
{
}

uint64_t CRDT::Timestamp::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Timestamp::MergePartialFromCodedStream(CRDT::Timestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    unint64_t v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      unint64_t v14 = *v13;
      char v15 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
      break;
    }
    unint64_t v14 = v20;
    char v15 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((void *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v16 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1C3C12430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Timestamp::SerializeWithCachedSizes(CRDT::Timestamp *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Timestamp::ByteSize(CRDT::Timestamp *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_7:
  }
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Timestamp::CheckTypeAndMergeFrom(CRDT::Timestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Timestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Timestamp::IsInitialized(CRDT::Timestamp *this)
{
  return 1;
}

void *CRDT::Timestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Timestamp");
}

std::string *CRDT::RegisterLatest::MergeFrom(CRDT::RegisterLatest *this, const CRDT::RegisterLatest *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 949);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::Timestamp *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      unint64_t v7 = (const CRDT::Timestamp *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v7 = *(const CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
      }
      this = (CRDT::RegisterLatest *)CRDT::Timestamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::ObjectID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      unint64_t v9 = (const CRDT::ObjectID *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v9 = *(const CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
      }
      CRDT::ObjectID::MergeFrom(v8, v9);
    }
  }
  BOOL v12 = (const std::string::value_type *)*((void *)a2 + 1);
  int v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3C1277C(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::RegisterLatest::~RegisterLatest(void **this)
{
  *this = &unk_1F1F27800;
  CRDT::RegisterLatest::SharedDtor((CRDT::RegisterLatest *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::RegisterLatest::~RegisterLatest(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::RegisterLatest::SharedDtor(CRDT::RegisterLatest *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::RegisterLatest *)CRDT::RegisterLatest::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      char v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::RegisterLatest::default_instance(CRDT::RegisterLatest *this)
{
  return CRDT::RegisterLatest::default_instance_;
}

void CRDT::RegisterLatest::New(CRDT::RegisterLatest *this)
{
}

uint64_t CRDT::RegisterLatest::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(void *)(v3 + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::RegisterLatest::MergePartialFromCodedStream(CRDT::RegisterLatest *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      unint64_t v9 = (CRDT::Timestamp *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::Timestamp::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      char v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::ObjectID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::ObjectID::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3C12D68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::RegisterLatest::SerializeWithCachedSizes(CRDT::RegisterLatest *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::RegisterLatest::default_instance_ + 40);
    }
    this = (CRDT::RegisterLatest *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::RegisterLatest::ByteSize(CRDT::RegisterLatest *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::Timestamp *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CRDT::ObjectID *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v7 = *(CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::RegisterLatest::CheckTypeAndMergeFrom(CRDT::RegisterLatest *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::RegisterLatest::MergeFrom(this, lpsrc);
}

uint64_t CRDT::RegisterLatest::IsInitialized(CRDT::RegisterLatest *this)
{
  return 1;
}

void *CRDT::RegisterLatest::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.RegisterLatest");
}

std::string *CRDT::VectorTimestamp_Element::MergeFrom(CRDT::VectorTimestamp_Element *this, const CRDT::VectorTimestamp_Element *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1216);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v14 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v14;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v15 = *((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 6) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      uint64_t v6 = *((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      *((void *)this + 7) = v6;
    }
  }
LABEL_8:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1C3C130DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp_Element::New(CRDT::VectorTimestamp_Element *this)
{
}

uint64_t CRDT::VectorTimestamp_Element::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
  *(void *)(this + 56) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::VectorTimestamp_Element::SerializeWithCachedSizes(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)3, *((void *)this + 7), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::VectorTimestamp_Element::ByteSize(CRDT::VectorTimestamp_Element *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_10;
  }
  if (*((unsigned char *)this + 32))
  {
    int v3 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_7:
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 7)) + 1;
  }
LABEL_10:
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v4);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp_Element::CheckTypeAndMergeFrom(CRDT::VectorTimestamp_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::VectorTimestamp_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp_Element::IsInitialized(CRDT::VectorTimestamp_Element *this)
{
  return 1;
}

void *CRDT::VectorTimestamp_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp.Element");
}

std::string *CRDT::VectorTimestamp::MergeFrom(CRDT::VectorTimestamp *this, const CRDT::VectorTimestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1414);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((CRDT::VectorTimestamp *)((char *)this + 40), (const CRDT::VectorTimestamp *)((char *)a2 + 40));
  uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3C13400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp::New(CRDT::VectorTimestamp *this)
{
}

uint64_t CRDT::VectorTimestamp::Clear(CRDT::VectorTimestamp *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::VectorTimestamp::SerializeWithCachedSizes(CRDT::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    int v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    int v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::VectorTimestamp::ByteSize(CRDT::VectorTimestamp *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp::CheckTypeAndMergeFrom(CRDT::VectorTimestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp::IsInitialized(CRDT::VectorTimestamp *this)
{
  return 1;
}

void *CRDT::VectorTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp");
}

std::string *CRDT::Dictionary_Element::MergeFrom(CRDT::Dictionary_Element *this, const CRDT::Dictionary_Element *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1725);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::ObjectID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::ObjectID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::ObjectID *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v8, v9);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      *((_DWORD *)v3 + 8) |= 4u;
      std::string::size_type v10 = (CRDT::VectorTimestamp *)*((void *)v3 + 7);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const CRDT::VectorTimestamp *)*((void *)a2 + 7);
      if (!v11)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        uint64_t v11 = *(const CRDT::VectorTimestamp **)(CRDT::Dictionary_Element::default_instance_ + 56);
      }
      this = (CRDT::Dictionary_Element *)CRDT::VectorTimestamp::MergeFrom(v10, v11);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      *((_DWORD *)v3 + 8) |= 8u;
      char v12 = (CRDT::RegisterLatest *)*((void *)v3 + 8);
      if (!v12) {
        operator new();
      }
      int v13 = (const CRDT::RegisterLatest *)*((void *)a2 + 8);
      if (!v13)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v13 = *(const CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
      }
      CRDT::RegisterLatest::MergeFrom(v12, v13);
    }
  }
  char v16 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v15 = (char *)a2 + 8;
  uint64_t v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    char v18 = v15;
  }
  else {
    char v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v18, v19);
}

void sub_1C3C13914(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary_Element::default_instance(CRDT::Dictionary_Element *this)
{
  return CRDT::Dictionary_Element::default_instance_;
}

void CRDT::Dictionary_Element::New(CRDT::Dictionary_Element *this)
{
}

uint64_t CRDT::Dictionary_Element::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(v1 + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 4) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v5 + 40);
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(unsigned char **)(v5 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v5 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v5 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 8) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this) {
        this = CRDT::RegisterLatest::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Dictionary_Element::SerializeWithCachedSizes(CRDT::Dictionary_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 40);
    }
    this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v6 = *((void *)v3 + 6);
  if (!v6)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    uint64_t v6 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 48);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  int v4 = *((_DWORD *)v3 + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *((void *)v3 + 7);
  if (!v7)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    uint64_t v7 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
  if ((*((_DWORD *)v3 + 8) & 8) != 0)
  {
LABEL_15:
    uint64_t v8 = *((void *)v3 + 8);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v8 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v8, a2);
  }
LABEL_18:
  if (*((char *)v3 + 31) < 0)
  {
    int v9 = (char *)*((void *)v3 + 1);
    uint64_t v10 = *((void *)v3 + 2);
  }
  else
  {
    int v9 = (char *)v3 + 8;
    LODWORD(v10) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t CRDT::Dictionary_Element::ByteSize(CRDT::Dictionary_Element *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_33;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v4)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    int v4 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
  }
  uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CRDT::ObjectID *)*((void *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v8 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
    }
    int v9 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  char v12 = (CRDT::VectorTimestamp *)*((void *)this + 7);
  if (!v12)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    char v12 = *(CRDT::VectorTimestamp **)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  int v13 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  if ((*((_DWORD *)this + 8) & 8) != 0)
  {
LABEL_27:
    char v16 = (CRDT::RegisterLatest *)*((void *)this + 8);
    if (!v16)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      char v16 = *(CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    int v17 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(v16);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    }
    else {
      int v19 = 1;
    }
    v3 += v18 + v19 + 1;
  }
LABEL_33:
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary_Element::CheckTypeAndMergeFrom(CRDT::Dictionary_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Dictionary_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary_Element::IsInitialized(CRDT::Dictionary_Element *this)
{
  return 1;
}

void *CRDT::Dictionary_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary.Element");
}

std::string *CRDT::Dictionary::MergeFrom(CRDT::Dictionary *this, const CRDT::Dictionary *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 1927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((CRDT::Dictionary *)((char *)this + 40), (const CRDT::Dictionary *)((char *)a2 + 40));
  int v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  uint64_t v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3C13ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary::default_instance(CRDT::Dictionary *this)
{
  return CRDT::Dictionary::default_instance_;
}

void CRDT::Dictionary::New(CRDT::Dictionary *this)
{
}

uint64_t CRDT::Dictionary::Clear(CRDT::Dictionary *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Dictionary::SerializeWithCachedSizes(CRDT::Dictionary *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    int v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    int v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Dictionary::ByteSize(CRDT::Dictionary *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary::CheckTypeAndMergeFrom(CRDT::Dictionary *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Dictionary::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary::IsInitialized(CRDT::Dictionary *this)
{
  return 1;
}

void *CRDT::Dictionary::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary");
}

std::string *CRDT::Index_Element::MergeFrom(CRDT::Index_Element *this, const CRDT::Index_Element *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2157);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v7;
    }
  }
  std::string::size_type v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  uint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    char v12 = v9;
  }
  else {
    char v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1C3C14264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index_Element::~Index_Element(void **this)
{
  *this = &unk_1F1F27A58;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::Index_Element::~Index_Element(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::Index_Element::New(CRDT::Index_Element *this)
{
}

uint64_t CRDT::Index_Element::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Index_Element::MergePartialFromCodedStream(CRDT::Index_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        std::string::size_type v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    unint64_t v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      unint64_t v14 = *v13;
      char v15 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
      break;
    }
    unint64_t v14 = v20;
    char v15 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((void *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v16 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1C3C145B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index_Element::SerializeWithCachedSizes(CRDT::Index_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Index_Element::ByteSize(CRDT::Index_Element *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_7:
  }
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index_Element::CheckTypeAndMergeFrom(CRDT::Index_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Index_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index_Element::IsInitialized(CRDT::Index_Element *this)
{
  return 1;
}

void *CRDT::Index_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index.Element");
}

std::string *CRDT::Index::MergeFrom(CRDT::Index *this, const CRDT::Index *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2351);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((CRDT::Index *)((char *)this + 40), (const CRDT::Index *)((char *)a2 + 40));
  unint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3C14814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index::~Index(CRDT::Index *this)
{
  *(void *)this = &unk_1F1F27AD0;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  CRDT::Index::~Index(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::Index::New(CRDT::Index *this)
{
}

uint64_t CRDT::Index::Clear(CRDT::Index *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Index::MergePartialFromCodedStream(CRDT::Index *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::Index_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        std::string::size_type v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::Index_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        char v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3C14C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index::SerializeWithCachedSizes(CRDT::Index *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Index::ByteSize(CRDT::Index *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Index_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index::CheckTypeAndMergeFrom(CRDT::Index *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Index::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index::IsInitialized(CRDT::Index *this)
{
  return 1;
}

void *CRDT::Index::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index");
}

std::string *CRDT::OneOf_Element::MergeFrom(CRDT::OneOf_Element *this, const CRDT::OneOf_Element *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2586);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::ObjectID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
      }
      this = (CRDT::OneOf_Element *)CRDT::ObjectID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::Timestamp *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Timestamp *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
      }
      CRDT::Timestamp::MergeFrom(v8, v9);
    }
  }
  char v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3C14F98(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::OneOf_Element::~OneOf_Element(void **this)
{
  *this = &unk_1F1F27B48;
  CRDT::OneOf_Element::SharedDtor((CRDT::OneOf_Element *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::OneOf_Element::~OneOf_Element(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::OneOf_Element::SharedDtor(CRDT::OneOf_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OneOf_Element *)CRDT::OneOf_Element::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::OneOf_Element::default_instance(CRDT::OneOf_Element *this)
{
  return CRDT::OneOf_Element::default_instance_;
}

void CRDT::OneOf_Element::New(CRDT::OneOf_Element *this)
{
}

uint64_t CRDT::OneOf_Element::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        *(void *)(v4 + 40) = 0;
        *(void *)(v4 + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OneOf_Element::MergePartialFromCodedStream(CRDT::OneOf_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::ObjectID *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      uint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Timestamp *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Timestamp::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3C15584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf_Element::SerializeWithCachedSizes(CRDT::OneOf_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::OneOf_Element::default_instance_ + 40);
    }
    this = (CRDT::OneOf_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OneOf_Element::ByteSize(CRDT::OneOf_Element *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CRDT::Timestamp *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v7 = *(CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf_Element::CheckTypeAndMergeFrom(CRDT::OneOf_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OneOf_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf_Element::IsInitialized(CRDT::OneOf_Element *this)
{
  return 1;
}

void *CRDT::OneOf_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf.Element");
}

std::string *CRDT::OneOf::MergeFrom(CRDT::OneOf *this, const CRDT::OneOf *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 2780);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((CRDT::OneOf *)((char *)this + 40), (const CRDT::OneOf *)((char *)a2 + 40));
  uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1C3C158A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OneOf::~OneOf(CRDT::OneOf *this)
{
  *(void *)this = &unk_1F1F27BC0;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  CRDT::OneOf::~OneOf(this);
  JUMPOUT(0x1C877D640);
}

uint64_t CRDT::OneOf::default_instance(CRDT::OneOf *this)
{
  return CRDT::OneOf::default_instance_;
}

void CRDT::OneOf::New(CRDT::OneOf *this)
{
}

uint64_t CRDT::OneOf::Clear(CRDT::OneOf *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::OneOf::MergePartialFromCodedStream(CRDT::OneOf *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::OneOf_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::OneOf_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1C3C15CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf::SerializeWithCachedSizes(CRDT::OneOf *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::OneOf::ByteSize(CRDT::OneOf *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf::CheckTypeAndMergeFrom(CRDT::OneOf *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OneOf::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf::IsInitialized(CRDT::OneOf *this)
{
  return 1;
}

void *CRDT::OneOf::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf");
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2)
{
  *(void *)this = &unk_1F1F27C38;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this);
  CRDT::StringArray_ArrayAttachment::MergeFrom(this, a2);
  return this;
}

void sub_1C3C15F24(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)v1);
  _Unwind_Resume(a1);
}

std::string *CRDT::StringArray_ArrayAttachment::MergeFrom(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3006);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v8 = (std::string *)*((void *)this + 6);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v8, v7);
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3C16068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(void **this)
{
  *this = &unk_1F1F27C38;
  CRDT::StringArray_ArrayAttachment::SharedDtor((CRDT::StringArray_ArrayAttachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::StringArray_ArrayAttachment::SharedDtor(CRDT::StringArray_ArrayAttachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 6);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (CRDT::StringArray_ArrayAttachment *)MEMORY[0x1C877D640](v1, 0x1012C40EC159624);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
}

void CRDT::StringArray_ArrayAttachment::New(CRDT::StringArray_ArrayAttachment *this)
{
}

void sub_1C3C161E0(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    *(void *)(this + 40) = 0;
    if ((v1 & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        versioned_document::Version::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 48);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
        {
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v6 = *v5;
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
          *((void *)a2 + 1) = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
        }
        if (v7 >> 3 == 2)
        {
          if (v7 == 18)
          {
            int v13 = *((_DWORD *)this + 8);
            goto LABEL_28;
          }
LABEL_19:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_36;
          }
          goto LABEL_16;
        }
        if (v7 >> 3 == 1) {
          break;
        }
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_36:
          uint64_t v15 = 1;
          goto LABEL_38;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_37; {
      }
        }
      if (v7 != 8) {
        goto LABEL_19;
      }
      uint64_t v10 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_37; {
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        }
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        *((void *)this + 5) = *v10;
        uint64_t v11 = v10 + 1;
        *((void *)a2 + 1) = v11;
      }
      int v13 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = v13;
    }
    while ((unint64_t)v11 >= v9 || *v11 != 18);
    *((void *)a2 + 1) = v11 + 1;
LABEL_28:
    *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = v13 | 2;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    std::string::size_type v14 = (std::string *)*((void *)this + 6);
    if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14)) {
      break;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_38;
    }
  }
LABEL_37:
  uint64_t v15 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1C3C164D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::SerializeWithCachedSizes(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray_ArrayAttachment::ByteSize(CRDT::StringArray_ArrayAttachment *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_16;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v3 = *((void *)this + 6);
  int v4 = *(unsigned __int8 *)(v3 + 23);
  char v5 = v4;
  uint64_t v6 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    unint64_t v7 = v6;
  }
  if (v7 >= 0x80)
  {
    int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v6 = *(void *)(v3 + 8);
    char v5 = *(unsigned char *)(v3 + 23);
  }
  else
  {
    int v8 = 1;
  }
  if (v5 < 0) {
    int v4 = v6;
  }
  v2 += v8 + v4 + 1;
LABEL_16:
  if (*((char *)this + 31) < 0) {
    uint64_t v9 = *((void *)this + 2);
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray_ArrayAttachment::CheckTypeAndMergeFrom(CRDT::StringArray_ArrayAttachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::StringArray_ArrayAttachment::MergeFrom(this, lpsrc);
}

uint64_t CRDT::StringArray_ArrayAttachment::IsInitialized(CRDT::StringArray_ArrayAttachment *this)
{
  return 1;
}

void *CRDT::StringArray_ArrayAttachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray.ArrayAttachment");
}

std::string *CRDT::StringArray::MergeFrom(CRDT::StringArray *this, const CRDT::StringArray *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3239);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  char v5 = (CRDT *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((CRDT::StringArray *)((char *)this + 48), (const CRDT::StringArray *)((char *)a2 + 48));
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    uint64_t v6 = (topotext::String *)*((void *)this + 5);
    if (!v6) {
      operator new();
    }
    unint64_t v7 = (const topotext::String *)*((void *)a2 + 5);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(v5);
      unint64_t v7 = *(const topotext::String **)(CRDT::StringArray::default_instance_ + 40);
    }
    topotext::String::MergeFrom(v6, v7);
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v9 = (char *)a2 + 8;
  int v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    BOOL v12 = v9;
  }
  else {
    BOOL v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1C3C167E8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::StringArray::~StringArray(CRDT::StringArray *this)
{
  *(void *)this = &unk_1F1F27CB0;
  CRDT::StringArray::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(this);
}

{
  uint64_t vars8;

  CRDT::StringArray::~StringArray(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::StringArray::SharedDtor(CRDT::StringArray *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::StringArray *)CRDT::StringArray::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CRDT::StringArray::default_instance(CRDT::StringArray *this)
{
  return CRDT::StringArray::default_instance_;
}

void CRDT::StringArray::New(CRDT::StringArray *this)
{
}

uint64_t CRDT::StringArray::Clear(CRDT::StringArray *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v2 = (topotext::String *)*((void *)this + 5);
    if (v2) {
      topotext::String::Clear(v2);
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::StringArray::MergePartialFromCodedStream(CRDT::StringArray *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v33, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32, (google::protobuf::io::ZeroCopyOutputStream *)v33);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_33;
        }
LABEL_21:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_54;
        }
        goto LABEL_18;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_14:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_54:
        uint64_t v30 = 1;
        goto LABEL_55;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v32, v4))goto LABEL_53; {
    }
      }
    if (v7 != 10) {
      goto LABEL_21;
    }
    *((_DWORD *)this + 8) |= 1u;
    uint64_t v9 = (topotext::String *)*((void *)this + 5);
    if (!v9) {
      operator new();
    }
    unsigned int v34 = 0;
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34)) {
        goto LABEL_53;
      }
    }
    else
    {
      unsigned int v34 = *v10;
      *((void *)a2 + 1) = v10 + 1;
    }
    int v12 = *((_DWORD *)a2 + 14);
    int v13 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v12 + 1;
    if (v12 >= v13) {
      goto LABEL_53;
    }
    int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
    if (!topotext::String::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
      goto LABEL_53;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
    int v15 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v15, 1);
    int v17 = v15 - 1;
    if (v17 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v17;
    }
    BOOL v18 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        int v19 = *((_DWORD *)this + 15);
        uint64_t v20 = *((int *)this + 14);
        if ((int)v20 >= v19)
        {
          if (v19 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v19 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
        }
        uint64_t v21 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v20 + 1;
        BOOL v22 = *(CRDT::StringArray_ArrayAttachment **)(v21 + 8 * v20);
        unsigned int v34 = 0;
        uint64_t v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34)) {
            goto LABEL_53;
          }
        }
        else
        {
          unsigned int v34 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25
          || (int v26 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34),
              !CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(v22, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_53:
          uint64_t v30 = 0;
          goto LABEL_55;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v26);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v28;
        }
        BOOL v18 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v29 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v18 < v29 && *v18 == 18);
      if (v18 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
  uint64_t v30 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_55:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v33);
  return v30;
}

void sub_1C3C16D80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1C877D640](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray::SerializeWithCachedSizes(CRDT::StringArray *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v4 = *(void *)(CRDT::StringArray::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v5 = 0;
    do
    {
      uint64_t v6 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v5);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
      ++v5;
    }
    while (v5 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray::ByteSize(CRDT::StringArray *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (topotext::String *)*((void *)this + 5);
    if (!v3)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v3 = *(topotext::String **)(CRDT::StringArray::default_instance_ + 40);
    }
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  int v7 = *((_DWORD *)this + 14);
  int v8 = v7 + v2;
  if (v7 >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = (CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v9);
      BOOL v11 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray_ArrayAttachment::ByteSize(v10);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      }
      else {
        int v13 = 1;
      }
      v8 += v12 + v13;
      ++v9;
    }
    while (v9 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v14 = *((void *)this + 2);
  }
  else {
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v8 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray::CheckTypeAndMergeFrom(CRDT::StringArray *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::StringArray::MergeFrom(this, lpsrc);
}

uint64_t CRDT::StringArray::IsInitialized(CRDT::StringArray *this)
{
  return 1;
}

void *CRDT::StringArray::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray");
}

std::string *CRDT::Array::MergeFrom(CRDT::Array *this, const CRDT::Array *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3480);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::StringArray *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::StringArray *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::StringArray **)(CRDT::Array::default_instance_ + 40);
      }
      this = (CRDT::Array *)CRDT::StringArray::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      int v8 = (CRDT::Dictionary *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Dictionary *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Dictionary **)(CRDT::Array::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  BOOL v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3C171DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Array::~Array(void **this)
{
  *this = &unk_1F1F27D28;
  CRDT::Array::SharedDtor((CRDT::Array *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::Array::~Array(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::Array::SharedDtor(CRDT::Array *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Array *)CRDT::Array::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::Array::default_instance(CRDT::Array *this)
{
  return CRDT::Array::default_instance_;
}

void CRDT::Array::New(CRDT::Array *this)
{
}

uint64_t CRDT::Array::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = CRDT::StringArray::Clear((CRDT::StringArray *)this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Array::MergePartialFromCodedStream(CRDT::Array *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::StringArray *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      uint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::StringArray::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Dictionary *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3C177B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Array::SerializeWithCachedSizes(CRDT::Array *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Array::default_instance_ + 40);
    }
    this = (CRDT::Array *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::Array::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Array::ByteSize(CRDT::Array *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::StringArray *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::StringArray **)(CRDT::Array::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (CRDT::Dictionary *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      unint64_t v7 = *(CRDT::Dictionary **)(CRDT::Array::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Array::CheckTypeAndMergeFrom(CRDT::Array *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Array::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Array::IsInitialized(CRDT::Array *this)
{
  return 1;
}

void *CRDT::Array::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Array");
}

std::string *CRDT::OrderedSet::MergeFrom(CRDT::OrderedSet *this, const CRDT::OrderedSet *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3723);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::Array *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      unint64_t v7 = (const CRDT::Array *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v7 = *(const CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
      }
      this = (CRDT::OrderedSet *)CRDT::Array::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::Dictionary *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Dictionary *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Dictionary **)(CRDT::OrderedSet::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1C3C17BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OrderedSet::~OrderedSet(void **this)
{
  *this = &unk_1F1F27DA0;
  CRDT::OrderedSet::SharedDtor((CRDT::OrderedSet *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream((google::protobuf::io::ZeroCopyOutputStream *)this);
}

{
  uint64_t vars8;

  CRDT::OrderedSet::~OrderedSet(this);
  JUMPOUT(0x1C877D640);
}

void CRDT::OrderedSet::SharedDtor(CRDT::OrderedSet *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OrderedSet *)CRDT::OrderedSet::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::OrderedSet::default_instance(CRDT::OrderedSet *this)
{
  return CRDT::OrderedSet::default_instance_;
}

void CRDT::OrderedSet::New(CRDT::OrderedSet *this)
{
}

uint64_t CRDT::OrderedSet::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = CRDT::Array::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OrderedSet::MergePartialFromCodedStream(CRDT::OrderedSet *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::Array *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::Array::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Dictionary *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1C3C18198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OrderedSet::SerializeWithCachedSizes(CRDT::OrderedSet *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::OrderedSet::default_instance_ + 40);
    }
    this = (CRDT::OrderedSet *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::OrderedSet::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OrderedSet::ByteSize(CRDT::OrderedSet *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::Array *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (CRDT::Dictionary *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      unint64_t v7 = *(CRDT::Dictionary **)(CRDT::OrderedSet::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OrderedSet::CheckTypeAndMergeFrom(CRDT::OrderedSet *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OrderedSet::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OrderedSet::IsInitialized(CRDT::OrderedSet *this)
{
  return 1;
}

void *CRDT::OrderedSet::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OrderedSet");
}

std::string *CRDT::Document_CustomObject_MapEntry::MergeFrom(CRDT::Document_CustomObject_MapEntry *this, const CRDT::Document_CustomObject_MapEntry *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 3958);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 12) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)this + 8) |= 2u;
      unint64_t v7 = (CRDT::ObjectID *)*((void *)this + 5);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v8)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        uint64_t v8 = *(const CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
      }
      CRDT::ObjectID::MergeFrom(v7, v8);
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1C3C18510(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject_MapEntry::default_instance(CRDT::Document_CustomObject_MapEntry *this)
{
  return CRDT::Document_CustomObject_MapEntry::default_instance_;
}

void CRDT::Document_CustomObject_MapEntry::New(CRDT::Document_CustomObject_MapEntry *this)
{
}

uint64_t CRDT::Document_CustomObject_MapEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    *(_DWORD *)(this + 4_Block_object_dispose(&STACK[0x310], 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x310], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Document_CustomObject_MapEntry::SerializeWithCachedSizes(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *((void *)v5 + 5);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v7 = *(void *)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  }
  if (*((char *)v5 + 31) < 0)
  {
    uint64_t v8 = (char *)*((void *)v5 + 1);
    uint64_t v9 = *((void *)v5 + 2);
  }
  else
  {
    uint64_t v8 = (char *)v5 + 8;
    LODWORD(v9) = *((unsigned __int8 *)v5 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::ByteSize(CRDT::Document_CustomObject_MapEntry *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v5 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v5)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    int v5 = *(CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
  }
  int v6 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  v3 += v7 + v8 + 1;
LABEL_19:
  if (*((char *)this + 31) < 0) {
    uint64_t v9 = *((void *)this + 2);
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject_MapEntry::CheckTypeAndMergeFrom(CRDT::Document_CustomObject_MapEntry *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_CustomObject_MapEntry::MergeFrom(this, lpsrc);
}

void *CRDT::Document_CustomObject_MapEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject.MapEntry");
}

std::string *CRDT::Document_CustomObject::MergeFrom(CRDT::Document_CustomObject *this, const CRDT::Document_CustomObject *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 4184);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((CRDT::Document_CustomObject *)((char *)this + 40), (const CRDT::Document_CustomObject *)((char *)a2 + 40));
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 16) = v5;
  }
  int v8 = (const std::string::value_type *)*((void *)a2 + 1);
  int v7 = (char *)a2 + 8;
  int v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1C3C18918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject::default_instance(CRDT::Document_CustomObject *this)
{
  return CRDT::Document_CustomObject::default_instance_;
}

void CRDT::Document_CustomObject::New(CRDT::Document_CustomObject *this)
{
}

uint64_t CRDT::Document_CustomObject::Clear(CRDT::Document_CustomObject *this)
{
  *((_DWORD *)this + 16) = 0;
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document_CustomObject::SerializeWithCachedSizes(CRDT::Document_CustomObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    int v8 = (char *)*((void *)this + 1);
    uint64_t v9 = *((void *)this + 2);
  }
  else
  {
    int v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject::ByteSize(CRDT::Document_CustomObject *this)
{
  if (*((unsigned char *)this + 32))
  {
    int v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v3 & 0x80000000) != 0)
    {
      int v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      int v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject_MapEntry::ByteSize(v7);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject::CheckTypeAndMergeFrom(CRDT::Document_CustomObject *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_CustomObject::MergeFrom(this, lpsrc);
}

void *CRDT::Document_CustomObject::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject");
}

std::string *CRDT::Document_DocObject::MergeFrom(const CRDT::RegisterLatest **this, const CRDT::RegisterLatest **a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 4864);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      if (*((_DWORD *)this + 12) != 1)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 1;
        operator new();
      }
      goto LABEL_17;
    case 2:
      if (*((_DWORD *)this + 12) != 2)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 2;
        operator new();
      }
      goto LABEL_17;
    case 3:
      if (*((_DWORD *)this + 12) != 3)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
        operator new();
      }
LABEL_17:
      CRDT::RegisterLatest::MergeFrom(this[5], a2[5]);
      break;
    case 4:
      if (*((_DWORD *)this + 12) != 4)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 4;
        operator new();
      }
      goto LABEL_21;
    case 5:
      if (*((_DWORD *)this + 12) != 5)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 5;
        operator new();
      }
      goto LABEL_21;
    case 6:
      if (*((_DWORD *)this + 12) != 6)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
        operator new();
      }
LABEL_21:
      CRDT::Dictionary::MergeFrom(this[5], a2[5]);
      break;
    case 7:
      if (*((_DWORD *)this + 12) != 7)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 7;
        operator new();
      }
      CRDT::Timestamp::MergeFrom(this[5], a2[5]);
      break;
    case 8:
      if (*((_DWORD *)this + 12) != 8)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 8;
        operator new();
      }
      CRDT::VectorTimestamp::MergeFrom(this[5], a2[5]);
      break;
    case 9:
      if (*((_DWORD *)this + 12) != 9)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 9;
        operator new();
      }
      CRDT::Index::MergeFrom(this[5], a2[5]);
      break;
    case 0xA:
      if (*((_DWORD *)this + 12) != 10)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 10;
        operator new();
      }
      topotext::String::MergeFrom(this[5], a2[5]);
      break;
    case 0xB:
      int v5 = a2[5];
      if (*((_DWORD *)this + 12) != 11)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 11;
      }
      this[5] = v5;
      break;
    case 0xC:
      if (*((_DWORD *)this + 12) != 12)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 12;
        operator new();
      }
      CRDT::OneOf::MergeFrom(this[5], a2[5]);
      break;
    case 0xD:
      if (*((_DWORD *)this + 12) != 13)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 13;
        operator new();
      }
      CRDT::Document_CustomObject::MergeFrom(this[5], a2[5]);
      break;
    case 0xE:
      if (*((_DWORD *)this + 12) != 14)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 14;
        operator new();
      }
      CRDT::StringArray::MergeFrom(this[5], a2[5]);
      break;
    case 0xF:
      if (*((_DWORD *)this + 12) != 15)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 15;
        operator new();
      }
      CRDT::Array::MergeFrom(this[5], a2[5]);
      break;
    case 0x10:
      if (*((_DWORD *)this + 12) != 16)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 16;
        operator new();
      }
      CRDT::OrderedSet::MergeFrom(this[5], a2[5]);
      break;
    default:
      break;
  }
  int v8 = a2[1];
  uint64_t v7 = (char *)(a2 + 1);
  int v6 = (const std::string::value_type *)v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)(this + 1), v10, v11);
}

void sub_1C3C195C8(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::Document_DocObject::New(CRDT::Document_DocObject *this)
{
}

uint64_t CRDT::Document_DocObject::Clear(CRDT::Document_DocObject *this)
{
  uint64_t result = CRDT::Document_DocObject::clear_contents((uint64_t)this);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document_DocObject::SerializeWithCachedSizes(CRDT::Document_DocObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(2, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(3, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(4, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(5, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(6, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 7)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(7, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 8)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(8, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 9)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(9, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 10)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(10, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 11)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xB, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 12)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(12, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 13)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(13, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 14)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(14, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 15)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(15, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 16) {
    google::protobuf::internal::WireFormatLite::WriteMessage(16, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x310], 8) = *((unsigned __int8 *)this + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Document_DocObject::ByteSize(CRDT::RegisterLatest **this)
{
  switch(*((_DWORD *)this + 12))
  {
    case 1:
    case 2:
    case 3:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(this[5]);
      goto LABEL_16;
    case 4:
    case 5:
    case 6:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(this[5]);
      goto LABEL_16;
    case 7:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 8:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 9:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Index::ByteSize(this[5]);
      goto LABEL_16;
    case 0xA:
      int v2 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(this[5]);
      goto LABEL_16;
    case 0xB:
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize64((unint64_t)this[5]) + 1;
      break;
    case 0xC:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf::ByteSize(this[5]);
      goto LABEL_16;
    case 0xD:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject::ByteSize(this[5]);
      goto LABEL_16;
    case 0xE:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(this[5]);
      goto LABEL_16;
    case 0xF:
      int v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(this[5]);
LABEL_16:
      int v7 = (int)v2;
      if (v2 >= 0x80) {
        int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v2);
      }
      else {
        int v8 = 1;
      }
      int v6 = v7 + v8 + 1;
      break;
    case 0x10:
      int v3 = (google::protobuf::io::CodedOutputStream *)CRDT::OrderedSet::ByteSize(this[5]);
      int v4 = (int)v3;
      if (v3 >= 0x80) {
        int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3);
      }
      else {
        int v5 = 1;
      }
      int v6 = v4 + v5 + 2;
      break;
    default:
      int v6 = 0;
      break;
  }
  if (*((char *)this + 31) < 0) {
    int v9 = this[2];
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v6 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_DocObject::CheckTypeAndMergeFrom(const CRDT::RegisterLatest **this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_DocObject::MergeFrom(this, (const CRDT::RegisterLatest **)lpsrc);
}

void *CRDT::Document_DocObject::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.DocObject");
}

std::string *CRDT::Document::MergeFrom(CRDT::Document *this, const CRDT::Document *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/crframework.pb.cc", 5327);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((CRDT::Document *)((char *)this + 56), (const CRDT::Document *)((char *)a2 + 56));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 80), (const CRDT::Document *)((char *)a2 + 80));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 104), (const CRDT::Document *)((char *)a2 + 104));
  int v5 = (CRDT *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 128), (const CRDT::Document *)((char *)a2 + 128));
  LOBYTE(v6) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v6)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      int v7 = (CRDT::VectorTimestamp *)*((void *)this + 5);
      if (!v7) {
        operator new();
      }
      int v8 = (const CRDT::VectorTimestamp *)*((void *)a2 + 5);
      if (!v8)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(v5);
        int v8 = *(const CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 40);
      }
      int v5 = (CRDT *)CRDT::VectorTimestamp::MergeFrom(v7, v8);
      int v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 0x40) == 0) {
          goto LABEL_23;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) |= 2u;
    int v9 = (CRDT::VectorTimestamp *)*((void *)this + 6);
    if (!v9) {
      operator new();
    }
    int v10 = (const CRDT::VectorTimestamp *)*((void *)a2 + 6);
    if (!v10)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(v5);
      int v10 = *(const CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 48);
    }
    int v5 = (CRDT *)CRDT::VectorTimestamp::MergeFrom(v9, v10);
    if ((*((_DWORD *)a2 + 8) & 0x40) != 0)
    {
LABEL_18:
      *((_DWORD *)this + 8) |= 0x40u;
      std::string::size_type v11 = (topotext::VectorTimestamp *)*((void *)this + 19);
      if (!v11) {
        operator new();
      }
      int v12 = (const topotext::VectorTimestamp *)*((void *)a2 + 19);
      if (!v12)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(v5);
        int v12 = *(const topotext::VectorTimestamp **)(CRDT::Document::default_instance_ + 152);
      }
      topotext::VectorTimestamp::MergeFrom(v11, v12);
    }
  }
LABEL_23:
  int v15 = (const std::string::value_type *)*((void *)a2 + 1);
  std::string::size_type v14 = (char *)a2 + 8;
  char v13 = v15;
  int v16 = v14[23];
  if (v16 >= 0) {
    int v17 = v14;
  }
  else {
    int v17 = v13;
  }
  if (v16 >= 0) {
    std::string::size_type v18 = v14[23];
  }
  else {
    std::string::size_type v18 = *((void *)v14 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v17, v18);
}

void sub_1C3C19DEC(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x1093C4020A6E6BFLL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::default_instance(CRDT::Document *this)
{
  return CRDT::Document::default_instance_;
}

void CRDT::Document::New(CRDT::Document *this)
{
}

void sub_1C3C19E88(_Unwind_Exception *a1)
{
  MEMORY[0x1C877D640](v1, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::SerializeWithCachedSizes(CRDT::Document *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Document::default_instance_ + 40);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::Document::default_instance_ + 48);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((int *)v3 + 16) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)v3 + 56, v7);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 16));
  }
  if (*((int *)v3 + 22) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 80, v9);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(4, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    int v11 = 0;
    do
    {
      uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 104, v11);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(5, v12, a2);
      ++v11;
    }
    while (v11 < *((_DWORD *)v3 + 28));
  }
  if (*((int *)v3 + 34) >= 1)
  {
    int v13 = 0;
    do
    {
      uint64_t v14 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 128, v13);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteBytes(6, v14, a2);
      ++v13;
    }
    while (v13 < *((_DWORD *)v3 + 34));
  }
  if ((*((unsigned char *)v3 + 32) & 0x40) != 0)
  {
    uint64_t v15 = *((void *)v3 + 19);
    if (!v15)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v15 = *(void *)(CRDT::Document::default_instance_ + 152);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(7, v15, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    int v16 = (char *)*((void *)v3 + 1);
    uint64_t v17 = *((void *)v3 + 2);
  }
  else
  {
    int v16 = (char *)v3 + 8;
    LODWORD(v17) = *((unsigned __int8 *)v3 + 31);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, v17);
}

uint64_t CRDT::Document::ByteSize(CRDT::Document *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_25;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (CRDT::VectorTimestamp *)*((void *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      int v4 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 40);
    }
    uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v4);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CRDT::VectorTimestamp *)*((void *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v8 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 48);
    }
    int v9 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v12 = (topotext::VectorTimestamp *)*((void *)this + 19);
    if (!v12)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v12 = *(topotext::VectorTimestamp **)(CRDT::Document::default_instance_ + 152);
    }
    int v13 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v3 += v14 + v15 + 1;
  }
LABEL_25:
  int v16 = *((_DWORD *)this + 16);
  int v17 = v16 + v3;
  if (v16 >= 1)
  {
    int v18 = 0;
    do
    {
      int v19 = (CRDT::RegisterLatest **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)this + 56, v18);
      char v20 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_DocObject::ByteSize(v19);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      }
      else {
        int v22 = 1;
      }
      v17 += v21 + v22;
      ++v18;
    }
    while (v18 < *((_DWORD *)this + 16));
  }
  int v23 = *((_DWORD *)this + 22);
  int v24 = v23 + v17;
  if (v23 >= 1)
  {
    int v25 = 0;
    do
    {
      uint64_t v26 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80, v25);
      int v27 = *(unsigned __int8 *)(v26 + 23);
      char v28 = v27;
      uint64_t v29 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        unint64_t v30 = *(unsigned __int8 *)(v26 + 23);
      }
      else {
        unint64_t v30 = v29;
      }
      if (v30 >= 0x80)
      {
        int v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v30);
        int v27 = *(unsigned __int8 *)(v26 + 23);
        uint64_t v29 = *(void *)(v26 + 8);
        char v28 = *(unsigned char *)(v26 + 23);
      }
      else
      {
        int v31 = 1;
      }
      if (v28 < 0) {
        int v27 = v29;
      }
      v24 += v31 + v27;
      ++v25;
    }
    while (v25 < *((_DWORD *)this + 22));
  }
  int v32 = *((_DWORD *)this + 28);
  int v33 = v32 + v24;
  if (v32 >= 1)
  {
    int v34 = 0;
    do
    {
      uint64_t v35 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104, v34);
      int v36 = *(unsigned __int8 *)(v35 + 23);
      char v37 = v36;
      uint64_t v38 = *(void *)(v35 + 8);
      if ((v36 & 0x80u) == 0) {
        unint64_t v39 = *(unsigned __int8 *)(v35 + 23);
      }
      else {
        unint64_t v39 = v38;
      }
      if (v39 >= 0x80)
      {
        int v40 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v39);
        int v36 = *(unsigned __int8 *)(v35 + 23);
        uint64_t v38 = *(void *)(v35 + 8);
        char v37 = *(unsigned char *)(v35 + 23);
      }
      else
      {
        int v40 = 1;
      }
      if (v37 < 0) {
        int v36 = v38;
      }
      v33 += v40 + v36;
      ++v34;
    }
    while (v34 < *((_DWORD *)this + 28));
  }
  int v41 = *((_DWORD *)this + 34);
  int v42 = v41 + v33;
  if (v41 >= 1)
  {
    int v43 = 0;
    do
    {
      uint64_t v44 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128, v43);
      int v45 = *(unsigned __int8 *)(v44 + 23);
      char v46 = v45;
      uint64_t v47 = *(void *)(v44 + 8);
      if ((v45 & 0x80u) == 0) {
        unint64_t v48 = *(unsigned __int8 *)(v44 + 23);
      }
      else {
        unint64_t v48 = v47;
      }
      if (v48 >= 0x80)
      {
        int v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v48);
        int v45 = *(unsigned __int8 *)(v44 + 23);
        uint64_t v47 = *(void *)(v44 + 8);
        char v46 = *(unsigned char *)(v44 + 23);
      }
      else
      {
        int v49 = 1;
      }
      if (v46 < 0) {
        int v45 = v47;
      }
      v42 += v49 + v45;
      ++v43;
    }
    while (v43 < *((_DWORD *)this + 34));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v50 = *((void *)this + 2);
  }
  else {
    LODWORD(v50) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v42 + v50);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document::CheckTypeAndMergeFrom(CRDT::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document::MergeFrom(this, lpsrc);
}

void *CRDT::Document::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document");
}

uint64_t CRDT::ObjectID::GetCachedSize(CRDT::ObjectID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Timestamp::GetCachedSize(CRDT::Timestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::RegisterLatest::GetCachedSize(CRDT::RegisterLatest *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp_Element::GetCachedSize(CRDT::VectorTimestamp_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp::GetCachedSize(CRDT::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary_Element::GetCachedSize(CRDT::Dictionary_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary::GetCachedSize(CRDT::Dictionary *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index_Element::GetCachedSize(CRDT::Index_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index::GetCachedSize(CRDT::Index *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf_Element::GetCachedSize(CRDT::OneOf_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf::GetCachedSize(CRDT::OneOf *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray_ArrayAttachment::GetCachedSize(CRDT::StringArray_ArrayAttachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray::GetCachedSize(CRDT::StringArray *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Array::GetCachedSize(CRDT::Array *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OrderedSet::GetCachedSize(CRDT::OrderedSet *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::GetCachedSize(CRDT::Document_CustomObject_MapEntry *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject::GetCachedSize(CRDT::Document_CustomObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_DocObject::GetCachedSize(CRDT::Document_DocObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document::GetCachedSize(CRDT::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3C1A5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3C1A68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3C1A768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3C1A844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1C3C1A920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::VectorTimestamp_Element::MergeFrom(*(CRDT::VectorTimestamp_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1AAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Dictionary_Element::MergeFrom(*(CRDT::Dictionary_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1AC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Index_Element::MergeFrom(*(CRDT::Index_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1ADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::OneOf_Element::MergeFrom(*(CRDT::OneOf_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1AF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::StringArray_ArrayAttachment::MergeFrom(*(CRDT::StringArray_ArrayAttachment **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1B070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Document_CustomObject_MapEntry::MergeFrom(*(CRDT::Document_CustomObject_MapEntry **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1B1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobileNotesSupport/Source/Shared/protobuf-lite/google/protobuf/repeated_field.h", 927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::RegisterLatest **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Document_DocObject::MergeFrom(*(const CRDT::RegisterLatest ***)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1C3C1B370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromICAttachmentsFilterSelectionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return @"Unknown";
  }
  else {
    return off_1E64A9AE0[a1 - 1];
  }
}

void sub_1C3C1BF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1C0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1C1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1C2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1C538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t topotext::BoxedValue::jsonvalue(topotext::BoxedValue *this)
{
  if (*((_DWORD *)this + 12) == 7) {
    return *((void *)this + 5);
  }
  uint64_t result = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    versioned_document::Version::SharedCtor();
  }
  return result;
}

void sub_1C3C1C648(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::WallClockMergeableValue::~WallClockMergeableValue((topotext::WallClockMergeableValue *)va);
  _Unwind_Resume(a1);
}

void sub_1C3C1CBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

std::string *topotext::BoxedValue::set_jsonvalue(topotext::BoxedValue *this, std::string *__str)
{
  if (*((_DWORD *)this + 12) != 7)
  {
    topotext::BoxedValue::clear_contents((uint64_t)this);
    *((_DWORD *)this + 12) = 7;
    operator new();
  }
  int v3 = (std::string *)*((void *)this + 5);
  return std::string::operator=(v3, __str);
}

void sub_1C3C1CDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1CEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1CF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C3C1D140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<TopoSubstring *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    int v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    int v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)int v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    uint64_t v19 = a2[3];
    a2[3] = 0;
    *((void *)v16 + 3) = v19;
    void v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + _Block_object_dispose(&STACK[0x310], 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v9 = a2[3];
    a2[3] = 0;
    *(void *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1C3C1D2A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C3C1D630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
}

void sub_1C3C1D7D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  std::string v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      uint64_t v9 = *(void *)(a3 - 32);
      a3 -= 32;
      *(void *)a3 = 0;
      *(void *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + _Block_object_dispose(&STACK[0x310], 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *(void *)(v8 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v8;
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void sub_1C3C1EFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1F1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1F3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1F5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1F938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C1FDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C20104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C20368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C206A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1C3C208FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C20C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C20DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C20F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C21360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1C3C22018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_1C3C22238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C22608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C22984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C22D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C22EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C23478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1C3C23648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C23B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C23D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C2401C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1C3C24854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C24CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C25234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C253B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C25500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C256C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C25A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C3C25C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t result, float a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a2;
  *(void *)(a4 + 4) = result;
  *(_WORD *)(a4 + 12) = 2112;
  *(void *)(a4 + 14) = v4;
  return result;
}

Class __getCKRecordClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CloudKitLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    void v3[2] = (void *)3221225472;
    v3[3] = __CloudKitLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E64A9D08;
    uint64_t v5 = 0;
    CloudKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!CloudKitLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getCKRecordClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("CKRecord");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getCKRecordClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CloudKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CloudKitLibraryCore_frameworkLibrary = result;
  return result;
}

Swift::Void __swiftcall ICFolder.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  long long v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C3C27D6C(v9);
  sub_1C3C285A4(v9[0], v10, v11, (uint64_t)v4);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C3C2A448((uint64_t)v4, (uint64_t *)&unk_1EB6FC7E0);
  }
  else
  {
    sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v1, sel_title);
  sub_1C3DB9C38();

  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA878();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C3C27D6C@<X0>(unsigned char *a1@<X8>)
{
  int v51 = a1;
  uint64_t v2 = sub_1C3DB9048();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  int v52 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v44 - v5;
  id v7 = objc_msgSend(v1, sel_objectID);
  if (!objc_msgSend(v7, sel_ic_isModernType)) {
    objc_msgSend(v7, sel_ic_isLegacyType);
  }

  uint64_t v47 = v44;
  MEMORY[0x1F4188790](v8);
  int v50 = v9;
  LOBYTE(v44[-2]) = v9;
  uint64_t v10 = qword_1EB6FC7B0;
  id v11 = v1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB6FC798);
  uint64_t v13 = v53;
  unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v48(v6, v12, v2);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 2;
  if (sub_1C3D6958C(v14, (uint64_t (*)(void))sub_1C3C2A6CC))
  {
  }
  else
  {
    os_log_type_t v15 = sub_1C3DBA6B8();
    uint64_t v16 = sub_1C3DB9028();
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      LODWORD(v49) = v15;
      uint64_t v18 = v17;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v56 = v46;
      *(_DWORD *)uint64_t v18 = 136315650;
      os_log_t v45 = v16;
      uint64_t v19 = sub_1C3DBACC8();
      uint64_t v54 = sub_1C3C516D0(v19, v20, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2048;
      uint64_t v54 = 40;
      sub_1C3DBA9A8();
      *(_WORD *)(v18 + 22) = 2080;
      v44[1] = v18 + 24;
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v21 = objc_msgSend(v11, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      uint64_t v13 = v53;
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1C3C516D0(v54, v55, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v45;
      _os_log_impl(&dword_1C3A61000, v45, (os_log_type_t)v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v18, 0x20u);
      uint64_t v22 = v12;
      uint64_t v23 = v46;
      swift_arrayDestroy();
      uint64_t v24 = v23;
      uint64_t v12 = v22;
      MEMORY[0x1C877E600](v24, -1, -1);
      MEMORY[0x1C877E600](v18, -1, -1);
    }
  }
  int v49 = *(void (**)(char *, uint64_t))(v13 + 8);
  v49(v6, v2);
  swift_release();
  int v25 = v52;
  id v26 = objc_msgSend(v11, sel_identifierURIPathComponent);
  if (v26)
  {
    int v27 = v26;
    uint64_t v28 = sub_1C3DB9C38();
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  uint64_t v47 = v44;
  MEMORY[0x1F4188790](v26);
  v44[-2] = v28;
  v44[-1] = v30;
  v48(v25, v12, v2);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 2;
  id v32 = v11;
  if (sub_1C3D6958C(v31, sub_1C3C2A6E4))
  {

    int v33 = v25;
  }
  else
  {
    os_log_type_t v34 = sub_1C3DBA6B8();
    uint64_t v35 = sub_1C3DB9028();
    if (os_log_type_enabled(v35, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v4_Block_object_dispose(&STACK[0x310], 8) = v34;
      uint64_t v37 = v36;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v56 = v46;
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v38 = sub_1C3DBACC8();
      uint64_t v54 = sub_1C3C516D0(v38, v39, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2048;
      uint64_t v54 = 42;
      sub_1C3DBA9A8();
      *(_WORD *)(v37 + 22) = 2080;
      os_log_t v45 = (os_log_t)(v37 + 24);
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v54 = 0xD000000000000028;
      unint64_t v55 = 0x80000001C3DF1E20;
      id v40 = objc_msgSend(v32, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1C3C516D0(v54, v55, &v56);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v35, (os_log_type_t)v48, "Failed assertion at %s:%lu: %s", (uint8_t *)v37, 0x20u);
      uint64_t v41 = v46;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v41, -1, -1);
      MEMORY[0x1C877E600](v37, -1, -1);
    }

    int v33 = v52;
  }
  v49(v33, v2);
  uint64_t result = swift_release();
  int v43 = v51;
  unsigned char *v51 = v50;
  *((void *)v43 + 1) = v28;
  *((void *)v43 + 2) = v30;
  return result;
}

uint64_t sub_1C3C28574@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3C285A4(a1, a2, a3, a4);
}

uint64_t sub_1C3C28588@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3C285A4(a1, a2, a3, a4);
}

uint64_t sub_1C3C285A4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  int v71 = a1;
  uint64_t v76 = a4;
  uint64_t v4 = sub_1C3DB8408();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x1F4188790](v4);
  char v66 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v6 - 8);
  int v70 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB9438();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v72 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C3DB8218();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  int v62 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v56 - v18;
  MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v56 - v20;
  uint64_t v22 = sub_1C3DB9418();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  int v69 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  unint64_t v60 = (char *)&v56 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  int v61 = (char *)&v56 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  int v73 = (char *)&v56 - v31;
  MEMORY[0x1F4188790](v30);
  int v33 = (char *)&v56 - v32;
  sub_1C3DB9428();
  os_log_type_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v34(v21, 1, v22) == 1)
  {
    uint64_t v19 = v21;
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    int v63 = v33;
    uint64_t v58 = v23 + 32;
    uint64_t v59 = v34;
    int v57 = v35;
    v35(v33, v21, v22);
    uint64_t v77 = v74;
    uint64_t v78 = v75;
    uint64_t v36 = self;
    swift_bridgeObjectRetain();
    id v37 = objc_msgSend(v36, sel_ic_uriIdentifierAllowedCharacterSet);
    sub_1C3DB81E8();

    sub_1C3C2A4A4();
    sub_1C3DBAA08();
    uint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
    if (v39)
    {
      sub_1C3DB9428();
      if (v59(v19, 1, v22) != 1)
      {
        id v40 = v73;
        v57(v73, v19, v22);
        uint64_t v41 = sub_1C3DB93B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v70, 1, 1, v41);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC808);
        unint64_t v42 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1C3DD3D30;
        uint64_t v44 = *(void (**)(unint64_t, char *, uint64_t))(v23 + 16);
        v44(v43 + v42, v63, v22);
        os_log_t v45 = v72;
        sub_1C3DB93C8();
        uint64_t v46 = v69;
        if (v71)
        {
          uint64_t v47 = v62;
          sub_1C3DB9428();
          uint64_t result = v59(v47, 1, v22);
          if (result == 1)
          {
            __break(1u);
            return result;
          }
          int v49 = v60;
          int v50 = v57;
          v57(v60, v47, v22);
          int v51 = v61;
          v50(v61, v49, v22);
          v44((unint64_t)v46, v51, v22);
          sub_1C3DB93E8();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v51, v22);
          id v40 = v73;
        }
        v44((unint64_t)v46, v40, v22);
        sub_1C3DB93E8();
        int v52 = v66;
        sub_1C3DB83F8();
        uint64_t v53 = ICNotesAppURLScheme();
        sub_1C3DB9C38();

        sub_1C3DB83C8();
        sub_1C3DB93F8();
        sub_1C3DB8368();
        sub_1C3DB8328();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v68);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v45, v65);
        uint64_t v54 = *(void (**)(char *, uint64_t))(v23 + 8);
        v54(v40, v22);
        return ((uint64_t (*)(char *, uint64_t))v54)(v63, v22);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v22);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v63, v22);
  }
  sub_1C3C2A448((uint64_t)v19, (uint64_t *)&unk_1EB6FC7F8);
  uint64_t v55 = sub_1C3DB88F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v76, 1, 1, v55);
}

uint64_t sub_1C3C28D88@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3C285A4(a1, a2, a3, a4);
}

uint64_t sub_1C3C28D98@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3C285A4(a1, a2, a3, a4);
}

id sub_1C3C28DAC()
{
  return *v0;
}

uint64_t sub_1C3C28DB4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C3C28DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C3DB9C38();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C3C28DE8(uint64_t a1, uint64_t a2)
{
  return sub_1C3C29AF0(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1C3C28E0C(uint64_t a1, uint64_t a2)
{
  return sub_1C3C29AF0(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C3C28E2C(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385A60, type metadata accessor for ICError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C3C28E98(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385A60, type metadata accessor for ICError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C3C28F08(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1C3C28F74(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C3DB9C18();
  *a2 = 0;
  return result;
}

uint64_t sub_1C3C28FEC(uint64_t a1, id *a2)
{
  char v3 = sub_1C3DB9C28();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C3C2906C@<X0>(uint64_t *a1@<X8>)
{
  sub_1C3DB9C38();
  uint64_t v2 = sub_1C3DB9BF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C3C290B0(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385BA0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C3C2911C(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385BA0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C3C29188(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1C3C291F4()
{
  return sub_1C3DB9C38();
}

uint64_t sub_1C3C29204(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C3C29270(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C3C292DC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C3C2936C()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C3DBA908();

  return v2;
}

uint64_t sub_1C3C293A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

void *sub_1C3C29424@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x310], 8) = 0;
  return result;
}

void sub_1C3C29434(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C3C29444()
{
  return sub_1C3DB9C38();
}

uint64_t sub_1C3C29454(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C3C294C0(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C3C2952C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C3C295BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1C3C29638()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C29698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

BOOL sub_1C3C2971C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C3C29734(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385AC0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1C3C29F14(&qword_1EA385AC8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C3C297F0(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385AB0, type metadata accessor for Name);
  uint64_t v3 = sub_1C3C29F14(&qword_1EA385AB8, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C3C298AC(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14((unint64_t *)&qword_1EA385AA0, type metadata accessor for Key);
  uint64_t v3 = sub_1C3C29F14(&qword_1EA385AA8, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C3C29968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C3DB9BF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C3C299B0(uint64_t a1)
{
  uint64_t v2 = sub_1C3C29F14(&qword_1EA385BD8, type metadata accessor for PDFDocumentWriteOption);
  uint64_t v3 = sub_1C3C29F14(&qword_1EA385BE0, type metadata accessor for PDFDocumentWriteOption);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C3C29A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

uint64_t sub_1C3C29AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C3DB9C38();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C3C29B34()
{
  sub_1C3DB9C38();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C29B88()
{
  sub_1C3DB9C38();
  sub_1C3DBB5D8();
  sub_1C3DB9D08();
  uint64_t v0 = sub_1C3DBB608();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C3C29BFC()
{
  uint64_t v0 = sub_1C3DB9C38();
  uint64_t v2 = v1;
  if (v0 == sub_1C3DB9C38() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C3DBB3B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C3C29C88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA385B30);
  uint64_t v2 = sub_1C3DBAFE8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C3C2A570(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C3C2A4F8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C3C2A5D8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for NotesVersion(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1C3C29DD8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C3C29DF8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for ICError(uint64_t a1)
{
}

uint64_t sub_1C3C29E84()
{
  return sub_1C3C29F14(&qword_1EA385A08, type metadata accessor for ICError);
}

uint64_t sub_1C3C29ECC()
{
  return sub_1C3C29F14(&qword_1EA385A10, type metadata accessor for ICError);
}

uint64_t sub_1C3C29F14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C29F5C()
{
  return sub_1C3C29F14(&qword_1EA385A18, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C3C29FA4()
{
  return sub_1C3C29F14(&qword_1EA385A20, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C3C29FEC()
{
  return sub_1C3C29F14(&qword_1EA385A28, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C3C2A034()
{
  return sub_1C3C29F14(&qword_1EA385A30, type metadata accessor for Name);
}

uint64_t sub_1C3C2A07C()
{
  return sub_1C3C29F14(&qword_1EA385A38, type metadata accessor for Name);
}

uint64_t sub_1C3C2A0C4()
{
  return sub_1C3C29F14(&qword_1EA385A40, type metadata accessor for Name);
}

uint64_t sub_1C3C2A10C()
{
  return sub_1C3C29F14(&qword_1EA385A48, type metadata accessor for Key);
}

uint64_t sub_1C3C2A154()
{
  return sub_1C3C29F14(&qword_1EA385A50, type metadata accessor for Key);
}

uint64_t sub_1C3C2A19C()
{
  return sub_1C3C29F14(&qword_1EA385A58, type metadata accessor for Key);
}

uint64_t sub_1C3C2A1E4()
{
  return sub_1C3C29F14(&qword_1EA385A60, type metadata accessor for ICError);
}

uint64_t sub_1C3C2A22C()
{
  return sub_1C3C29F14(&qword_1EA385A68, type metadata accessor for ICError);
}

uint64_t sub_1C3C2A274()
{
  return sub_1C3C29F14(&qword_1EA385A70, type metadata accessor for ICError);
}

uint64_t sub_1C3C2A2BC()
{
  return sub_1C3C29F14(&qword_1EA385A78, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1C3C2A318()
{
  return sub_1C3C29F14(&qword_1EA385A80, type metadata accessor for Code);
}

unint64_t sub_1C3C2A364()
{
  unint64_t result = qword_1EA385A88;
  if (!qword_1EA385A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385A88);
  }
  return result;
}

uint64_t sub_1C3C2A3B8()
{
  return sub_1C3C29F14(&qword_1EA385A90, type metadata accessor for Code);
}

uint64_t sub_1C3C2A400()
{
  return sub_1C3C29F14((unint64_t *)&qword_1EA385A98, type metadata accessor for ICError);
}

uint64_t sub_1C3C2A448(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C3C2A4A4()
{
  unint64_t result = qword_1EB6FC890;
  if (!qword_1EB6FC890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC890);
  }
  return result;
}

unint64_t sub_1C3C2A4F8(uint64_t a1, uint64_t a2)
{
  sub_1C3DBB5D8();
  sub_1C3DB9D08();
  uint64_t v4 = sub_1C3DBB608();
  return sub_1C3C2A5E8(a1, a2, v4);
}

uint64_t sub_1C3C2A570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1C3C2A5D8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1C3C2A5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C3DBB3B8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C3DBB3B8() & 1) == 0);
    }
  }
  return v6;
}

BOOL sub_1C3C2A6CC()
{
  return sub_1C3C50FD8(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1C3C2A6D4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3C2A6E4()
{
  return sub_1C3C51CF4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void type metadata accessor for PDFDocumentWriteOption(uint64_t a1)
{
}

void type metadata accessor for FilterType(uint64_t a1)
{
}

void type metadata accessor for ICPaperDocumentError(uint64_t a1)
{
}

uint64_t _s7SummaryV12ParticipantsVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C3C2A770(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C3C2A790(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x310], 8) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1C3C2A804()
{
  return sub_1C3C29F14(&qword_1EA385B78, type metadata accessor for ICPaperDocumentError);
}

uint64_t sub_1C3C2A84C()
{
  return sub_1C3C29F14(&qword_1EA385B80, type metadata accessor for ICPaperDocumentError);
}

uint64_t sub_1C3C2A894()
{
  return sub_1C3C29F14(&qword_1EA385B88, type metadata accessor for PDFDocumentWriteOption);
}

uint64_t sub_1C3C2A8DC()
{
  return sub_1C3C29F14(&qword_1EA385B90, type metadata accessor for PDFDocumentWriteOption);
}

uint64_t sub_1C3C2A924()
{
  return sub_1C3C29F14(&qword_1EA385B98, type metadata accessor for PDFDocumentWriteOption);
}

uint64_t sub_1C3C2A96C()
{
  return sub_1C3C29F14(&qword_1EA385BA0, type metadata accessor for ICPaperDocumentError);
}

uint64_t sub_1C3C2A9B4()
{
  return sub_1C3C29F14(&qword_1EA385BA8, type metadata accessor for ICPaperDocumentError);
}

uint64_t sub_1C3C2A9FC()
{
  return sub_1C3C29F14(&qword_1EA385BB0, type metadata accessor for ICPaperDocumentError);
}

uint64_t sub_1C3C2AA44()
{
  return sub_1C3C29F14(&qword_1EA385BB8, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_1C3C2AAA0()
{
  return sub_1C3C29F14(&qword_1EA385BC0, _s3__C4CodeOMa_0);
}

uint64_t sub_1C3C2AAE8()
{
  return sub_1C3C29F14(&qword_1EA385BC8, _s3__C4CodeOMa_0);
}

uint64_t sub_1C3C2AB30()
{
  return sub_1C3C29F14((unint64_t *)&qword_1EA385BD0, type metadata accessor for ICPaperDocumentError);
}

void type metadata accessor for CMBlockBuffer(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1C3C2ABA0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C3C2ABC0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_1C3C2AC14(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

ICTTAttachment __swiftcall ICTTAttachment.init(identifier:universalTypeIdentifier:)(Swift::String_optional identifier, Swift::String_optional universalTypeIdentifier)
{
  object = universalTypeIdentifier.value._object;
  char v3 = identifier.value._object;
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v5 = v4;
  if (v3)
  {
    unint64_t v6 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  objc_msgSend(v4, sel_setAttachmentIdentifier_, v6);

  if (object)
  {
    uint64_t v7 = (void *)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v4, sel_setAttachmentUTI_, v7);

  char v10 = (objc_class *)v4;
  result._attachmentUTI = v9;
  result._attachmentIdentifier = v8;
  result.super.isa = v10;
  return result;
}

uint64_t sub_1C3C2AD5C()
{
  return sub_1C3DB9FD8();
}

uint64_t sub_1C3C2ADD8()
{
  return sub_1C3DB9F78();
}

BOOL static ICNotesVersion.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_1C3C2AE50(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C3C2AE64(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1C3C2AE78(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1C3C2AE8C(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t ICNotesVersion.description.getter()
{
  return sub_1C3DBB248();
}

uint64_t sub_1C3C2AEE0()
{
  return sub_1C3C2AF58(&qword_1EA385D90);
}

uint64_t sub_1C3C2AF14()
{
  return sub_1C3DBB248();
}

uint64_t sub_1C3C2AF58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NotesVersion(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C2AF9C()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA385DA0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA385DA0);
  if (qword_1EB6FC2B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC2A0);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t ICAttachmentAudioModel.needsTranscription.getter()
{
  uint64_t v1 = v0;
  sub_1C3DBA868();
  uint64_t v2 = (void *)sub_1C3DBA858();
  unsigned int v3 = objc_msgSend(v2, sel_supportsGeneralASR);

  if (!v3) {
    return 0;
  }
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_audioDocument);
  if (!result)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v5 = (void *)result;
  unsigned __int8 v6 = objc_msgSend((id)result, sel_isCallRecording);

  if (v6) {
    return 0;
  }
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_audioDocument);
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v8 = (void *)result;
  unint64_t v9 = ICTTAudioDocument.orderedFragments.getter();

  id v21 = v1;
  if (v9 >> 62) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    uint64_t v11 = 4;
    while (1)
    {
      id v12 = (v9 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C877C220](v11 - 4, v9) : *(id *)(v9 + 8 * v11);
      BOOL v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      id v15 = objc_msgSend(v12, sel_transcript);
      id v16 = objc_msgSend(v15, sel_allObjects);

      type metadata accessor for ICTTTranscriptSegment();
      unint64_t v17 = sub_1C3DBA018();

      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1C3DBAFB8();

        swift_bridgeObjectRelease_n();
        if (!v19)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();

        if (!v18) {
          goto LABEL_19;
        }
      }
      ++v11;
      if (v14 == v10) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t)objc_msgSend(v21, sel_attachment);
  if (result)
  {
    uint64_t v20 = (void *)result;
    id v7 = objc_msgSend((id)result, sel_needsTranscription);

    return (uint64_t)v7;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ICAttachmentAudioModel.transformNewlyAddedMediaAttachment()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C3DB8AF8();
  int v120 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C3DB8B98();
  uint64_t v124 = *(void *)(v8 - 8);
  uint64_t v125 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  int v121 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int v122 = (char *)&v110 - v12;
  MEMORY[0x1F4188790](v11);
  int v123 = (char *)&v110 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  unint64_t v17 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = sub_1C3DB88F8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v126 = (uint64_t)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = objc_msgSend(v1, sel_audioDocument);
  if (!v23)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v24 = v23;
  unsigned __int8 v25 = objc_msgSend(v23, sel_isCallRecording);

  if (v25) {
    return;
  }
  id v26 = objc_msgSend(v1, sel_attachment);
  if (!v26) {
    goto LABEL_52;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_media);

  if (v28)
  {
    id v29 = objc_msgSend(v28, sel_mediaURL);

    if (v29)
    {
      sub_1C3DB8898();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    }
    sub_1C3C2EF60((uint64_t)v17, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1) {
      goto LABEL_10;
    }
    uint64_t v32 = v126;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v126, v19, v20);
    id v33 = objc_msgSend(v1, sel_attachment);
    if (v33)
    {
      os_log_type_t v34 = v33;
      id v35 = objc_msgSend(v33, sel_note);

      if (!v35) {
        goto LABEL_26;
      }
      id v36 = objc_msgSend(v1, sel_attachment);
      if (v36)
      {
        id v37 = v36;
        id v38 = objc_msgSend(v36, sel_identifier);

        if (!v38)
        {

          goto LABEL_26;
        }
        id v119 = v35;
        sub_1C3DB9C38();

        sub_1C3DB8B18();
        swift_bridgeObjectRelease();
        uint64_t v40 = v124;
        uint64_t v39 = v125;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v7, 1, v125) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v20);

          uint64_t v30 = &qword_1EB6FC060;
          uint64_t v31 = (uint64_t)v7;
          goto LABEL_11;
        }
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v123, v7, v39);
        id v41 = objc_msgSend(v1, sel_attachment);
        if (v41)
        {
          unint64_t v42 = v41;
          id v43 = objc_msgSend(v41, sel_managedObjectContext);

          id v118 = v43;
          if (v43)
          {
            uint64_t v44 = (void *)sub_1C3DB8B38();
            id v45 = objc_msgSend(v1, sel_bitFlippeddUUIDWithUuid_, v44);

            sub_1C3DB8B58();
            sub_1C3DB8B28();
            uint64_t v46 = (void *)sub_1C3DB9BF8();
            swift_bridgeObjectRelease();
            id v47 = objc_msgSend(v119, sel_addAudioAttachmentWithIdentifier_, v46);

            id v48 = v47;
            id v49 = objc_msgSend(v1, sel_attachment);
            objc_msgSend(v48, sel_setParentAttachment_, v49);

            if (qword_1EA385680 != -1) {
              swift_once();
            }
            uint64_t v50 = sub_1C3DB9048();
            uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EA385DA0);
            id v52 = v48;
            uint64_t v53 = sub_1C3DB9028();
            os_log_type_t v54 = sub_1C3DBA698();
            int v55 = v54;
            BOOL v56 = os_log_type_enabled(v53, v54);
            uint64_t v116 = v51;
            id v117 = v52;
            if (v56)
            {
              LODWORD(v115) = v55;
              int v57 = (uint8_t *)swift_slowAlloc();
              uint64_t v114 = swift_slowAlloc();
              v128[0] = v114;
              int v113 = v57;
              *(_DWORD *)int v57 = 136315138;
              unint64_t v112 = v57 + 4;
              id v58 = objc_msgSend(v52, sel_shortLoggingDescription);
              uint64_t v59 = sub_1C3DB9C38();
              os_log_t v111 = v53;
              unint64_t v61 = v60;

              uint64_t v127 = sub_1C3C516D0(v59, v61, v128);
              sub_1C3DBA9A8();

              swift_bridgeObjectRelease();
              os_log_t v62 = v111;
              int v63 = v113;
              _os_log_impl(&dword_1C3A61000, v111, (os_log_type_t)v115, "Created subattachment %s", v113, 0xCu);
              uint64_t v64 = v114;
              swift_arrayDestroy();
              MEMORY[0x1C877E600](v64, -1, -1);
              MEMORY[0x1C877E600](v63, -1, -1);
            }
            else
            {
            }
            id v69 = objc_msgSend(v1, sel_audioDocument);
            if (v69)
            {
              int v70 = v69;
              type metadata accessor for ICTTAudioRecording.Fragment();
              id v71 = objc_msgSend(v70, sel_document);

              id v72 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              int v73 = (void *)sub_1C3DB8B38();
              id v74 = objc_msgSend(v72, sel_initWithDocument_identity_, v71, v73);

              _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
              uint64_t v75 = (void *)sub_1C3DB8A88();
              v120[1](v4, v2);
              objc_msgSend(v74, sel_setCreatedDate_, v75);

              uint64_t v76 = (void *)sub_1C3DBA4A8();
              int v120 = (void (**)(char *, uint64_t))v74;
              objc_msgSend(v74, sel_setTranscriptVersion_, v76);

              id v77 = objc_msgSend(v1, sel_audioDocument);
              if (v77)
              {
                uint64_t v78 = v77;
                id v79 = objc_msgSend(v77, sel_document);
                id v80 = objc_msgSend(v79, sel_rootObject);

                if (v80)
                {
                  self;
                  uint64_t v81 = (void *)swift_dynamicCastObjCClass();
                  uint64_t v82 = v125;
                  if (v81)
                  {
                    id v83 = objc_msgSend(v81, sel_fragments);
                    swift_unknownObjectRelease();
                    objc_msgSend(v83, sel_addObject_, v120);
                  }
                  else
                  {

                    swift_unknownObjectRelease();
                  }
                }
                else
                {

                  uint64_t v82 = v125;
                }
                uint64_t v84 = v124;
                int v85 = v121;
                (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v82);
                char v86 = sub_1C3DB9028();
                os_log_type_t v87 = sub_1C3DBA698();
                if (os_log_type_enabled(v86, v87))
                {
                  unint64_t v88 = (uint8_t *)swift_slowAlloc();
                  uint64_t v116 = swift_slowAlloc();
                  v128[0] = v116;
                  *(_DWORD *)unint64_t v88 = 136315138;
                  int v115 = v88 + 4;
                  uint64_t v89 = sub_1C3DB8B28();
                  uint64_t v127 = sub_1C3C516D0(v89, v90, v128);
                  sub_1C3DBA9A8();
                  swift_bridgeObjectRelease();
                  int v121 = *(char **)(v84 + 8);
                  ((void (*)(char *, uint64_t))v121)(v85, v125);
                  _os_log_impl(&dword_1C3A61000, v86, v87, "Appended fragment %s", v88, 0xCu);
                  uint64_t v91 = v116;
                  swift_arrayDestroy();
                  MEMORY[0x1C877E600](v91, -1, -1);
                  MEMORY[0x1C877E600](v88, -1, -1);
                }
                else
                {
                  int v121 = *(char **)(v84 + 8);
                  ((void (*)(char *, uint64_t))v121)(v85, v82);
                }

                char v92 = v118;
                uint64_t v93 = (void *)sub_1C3DB8848();
                id v94 = v117;

                objc_msgSend(v1, sel_setMergeableDataDirty_, 1);
                id v95 = objc_msgSend(v1, sel_attachment);
                if (v95)
                {
                  uint64_t v96 = v95;
                  int v97 = (void *)sub_1C3DB9BF8();
                  objc_msgSend(v96, sel_updateChangeCountWithReason_, v97);

                  char v98 = (void *)sub_1C3DB9BF8();
                  objc_msgSend(v94, sel_updateChangeCountWithReason_, v98);

                  objc_msgSend(v92, sel_ic_save);
                  if (!objc_msgSend(v1, sel_needsTranscription))
                  {

                    uint64_t v108 = v121;
                    uint64_t v109 = v125;
                    ((void (*)(char *, uint64_t))v121)(v122, v125);
                    ((void (*)(char *, uint64_t))v108)(v123, v109);
                    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v126, v20);
                    return;
                  }
                  if (qword_1EA385870 != -1) {
                    swift_once();
                  }
                  swift_beginAccess();
                  id v99 = (id)qword_1EA387190;
                  id v100 = objc_msgSend(v1, sel_attachment);
                  if (v100)
                  {
                    int v101 = v100;
                    id v102 = objc_msgSend(v100, sel_objectID);

                    id v103 = objc_msgSend(v94, sel_objectID);
                    uint64_t v104 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    swift_retain();
                    uint64_t v105 = v126;
                    sub_1C3CAEAFC(v126, v102, v103, (uint64_t)sub_1C3C2F000, v104);

                    swift_release_n();
                    unint64_t v106 = v121;
                    uint64_t v107 = v125;
                    ((void (*)(char *, uint64_t))v121)(v122, v125);
                    ((void (*)(char *, uint64_t))v106)(v123, v107);
                    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v105, v20);
                    return;
                  }
                  goto LABEL_59;
                }
LABEL_58:
                __break(1u);
LABEL_59:
                __break(1u);
                return;
              }
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }

          (*(void (**)(char *, uint64_t))(v40 + 8))(v123, v39);
LABEL_26:
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v32, v20);
          goto LABEL_27;
        }
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
LABEL_10:
  uint64_t v30 = (uint64_t *)&unk_1EB6FC7E0;
  uint64_t v31 = (uint64_t)v19;
LABEL_11:
  sub_1C3C2A448(v31, v30);
LABEL_27:
  if (qword_1EA385680 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_1C3DB9048();
  __swift_project_value_buffer(v65, (uint64_t)qword_1EA385DA0);
  char v66 = sub_1C3DB9028();
  os_log_type_t v67 = sub_1C3DBA6A8();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_1C3A61000, v66, v67, "no media URL on imported attachment", v68, 2u);
    MEMORY[0x1C877E600](v68, -1, -1);
  }
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.createSubattachmentForRecording()(ICAttachment *__return_ptr retstr)
{
  id v2 = v1;
  uint64_t v3 = sub_1C3DB8AF8();
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  MEMORY[0x1F4188790](v3);
  char v86 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v89 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C3DB8B98();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  int v85 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v78 - v10;
  uint64_t v12 = sub_1C3DB9018();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(v2, sel_attachment);
  if (!v16)
  {
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v17 = v16;
  id v18 = objc_msgSend(v16, sel_note);

  id v91 = v18;
  if (!v18)
  {
LABEL_10:
    sub_1C3C2F090();
    swift_allocError();
    unsigned char *v41 = 8;
    swift_willThrow();
    return;
  }
  id v19 = objc_msgSend(v2, sel_attachment);
  if (!v19)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_managedObjectContext);

  if (!v21)
  {

    goto LABEL_10;
  }
  id v83 = v11;
  uint64_t v84 = v7;
  sub_1C3DB8FE8();
  sub_1C3DB8FD8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v22 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v23 = (void *)sub_1C3DB8938();
  uint64_t v24 = (void *)sub_1C3DB9BF8();
  id v25 = objc_msgSend(v91, sel_addAttachmentWithUTI_data_filename_updateFileBasedAttributes_analytics_regulatoryLogging_, v22, v23, v24, 1, 1, 0);

  id v26 = v25;
  id v27 = objc_msgSend(v2, sel_attachment);
  objc_msgSend(v26, sel_setParentAttachment_, v27);

  if (qword_1EA385680 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C3DB9048();
  uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1EA385DA0);
  id v30 = v26;
  uint64_t v31 = sub_1C3DB9028();
  os_log_type_t v32 = sub_1C3DBA698();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v81 = v29;
  if (v33)
  {
    os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
    id v80 = (id)swift_slowAlloc();
    uint64_t v93 = (uint64_t)v80;
    *(_DWORD *)os_log_type_t v34 = 136315138;
    id v79 = v34 + 4;
    id v35 = v21;
    id v36 = objc_msgSend(v30, sel_shortLoggingDescription);
    uint64_t v37 = sub_1C3DB9C38();
    id v82 = v2;
    unint64_t v39 = v38;

    id v21 = v35;
    uint64_t v92 = sub_1C3C516D0(v37, v39, &v93);
    sub_1C3DBA9A8();

    id v2 = v82;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, v31, v32, "Created subattachment %s", v34, 0xCu);
    id v40 = v80;
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v40, -1, -1);
    MEMORY[0x1C877E600](v34, -1, -1);
  }
  else
  {
  }
  uint64_t v42 = v84;
  id v43 = objc_msgSend(v30, sel_identifier);
  if (!v43) {
    goto LABEL_15;
  }
  uint64_t v44 = v43;
  sub_1C3DB9C38();

  uint64_t v45 = (uint64_t)v89;
  sub_1C3DB8B18();
  swift_bridgeObjectRelease();
  uint64_t v46 = v90;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v45, 1, v42) == 1)
  {
    sub_1C3C2A448(v45, &qword_1EB6FC060);
LABEL_15:
    sub_1C3C2F090();
    swift_allocError();
    *id v47 = 8;
    swift_willThrow();

    return;
  }
  id v79 = (uint8_t *)v30;
  id v80 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v83, v45, v42);
  id v48 = objc_msgSend(v2, sel_audioDocument);
  if (!v48) {
    goto LABEL_29;
  }
  id v49 = v48;
  uint64_t v50 = v2;
  type metadata accessor for ICTTAudioRecording.Fragment();
  id v51 = objc_msgSend(v49, sel_document);

  id v52 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v53 = (void *)sub_1C3DB8B38();
  os_log_type_t v54 = (char *)objc_msgSend(v52, sel_initWithDocument_identity_, v51, v53);

  int v55 = v86;
  _s10Foundation4DateV11NotesSharedE15defaultArgumentACvgZ_0();
  BOOL v56 = (void *)sub_1C3DB8A88();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v88);
  objc_msgSend(v54, sel_setCreatedDate_, v56);

  int v57 = (void *)sub_1C3DBA4A8();
  objc_msgSend(v54, sel_setTranscriptVersion_, v57);

  id v82 = v50;
  id v58 = objc_msgSend(v50, sel_audioDocument);
  if (!v58)
  {
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v59 = v58;
  id v60 = objc_msgSend(v58, sel_document);
  id v61 = objc_msgSend(v60, sel_rootObject);

  uint64_t v62 = v90;
  if (v61)
  {
    self;
    int v63 = (void *)swift_dynamicCastObjCClass();
    if (v63)
    {
      id v64 = objc_msgSend(v63, sel_fragments);
      swift_unknownObjectRelease();
      objc_msgSend(v64, sel_addObject_, v54);
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
  uint64_t v65 = v85;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v85, v83, v42);
  char v66 = sub_1C3DB9028();
  os_log_type_t v67 = sub_1C3DBA698();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v89 = v54;
    id v69 = v65;
    int v70 = (uint8_t *)v68;
    uint64_t v71 = swift_slowAlloc();
    uint64_t v93 = v71;
    *(_DWORD *)int v70 = 136315138;
    sub_1C3C2F0E4();
    uint64_t v72 = sub_1C3DBB248();
    uint64_t v92 = sub_1C3C516D0(v72, v73, &v93);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    id v74 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v75 = v69;
    os_log_type_t v54 = v89;
    v74(v75, v84);
    _os_log_impl(&dword_1C3A61000, v66, v67, "Appended fragment %s", v70, 0xCu);
    swift_arrayDestroy();
    uint64_t v76 = v71;
    uint64_t v42 = v84;
    MEMORY[0x1C877E600](v76, -1, -1);
    MEMORY[0x1C877E600](v70, -1, -1);
  }
  else
  {
    id v74 = *(void (**)(char *, uint64_t))(v62 + 8);
    v74(v65, v42);
  }

  objc_msgSend(v82, sel_setMergeableDataDirty_, 1);
  id v77 = v80;
  objc_msgSend(v80, sel_ic_save);

  v74(v83, v42);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveSummaryToAttachment(summarizationResult:)(NotesShared::SummarizationResult *summarizationResult)
{
  id v3 = v1;
  v66[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C3DB9048();
  uint64_t v64 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t countAndFlagsBits = summarizationResult->modelVersion.value._countAndFlagsBits;
  object = summarizationResult->modelVersion.value._object;
  if (sub_1C3DB9D18() < 1)
  {
    sub_1C3C2F090();
    swift_allocError();
    *id v25 = 9;
LABEL_43:
    swift_willThrow();
    return;
  }
  uint64_t v62 = object;
  uint64_t v63 = v5;
  id v13 = objc_msgSend(v3, sel_audioDocument);
  if (!v13)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v14 = v13;
  v61[0] = v2;
  v61[1] = countAndFlagsBits;
  id v15 = objc_msgSend(v3, sel_attachment);
  if (!v15)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  id v16 = v15;
  id v17 = objc_msgSend(v15, sel_currentReplicaID);

  sub_1C3DB8B58();
  uint64_t v18 = sub_1C3DB8B98();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
  uint64_t v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) != 1)
  {
    uint64_t v20 = (void *)sub_1C3DB8B38();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
  }
  id v21 = objc_msgSend(objc_allocWithZone((Class)ICTTMergeableAttributedString), sel_initWithReplicaID_, v20);

  id v22 = objc_msgSend(v14, sel_document);
  id v23 = objc_msgSend(v22, sel_rootObject);

  if (v23)
  {
    self;
    uint64_t v24 = (void *)swift_dynamicCastObjCClass();
    if (!v24) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  objc_msgSend(v24, sel_setSummary_, v21);

  id v26 = objc_msgSend(v3, sel_audioDocument);
  if (!v26) {
    goto LABEL_46;
  }
  id v27 = v26;
  id v28 = objc_msgSend(v26, sel_document);
  id v29 = objc_msgSend(v28, sel_rootObject);

  if (v29)
  {
    self;
    id v30 = (void *)swift_dynamicCastObjCClass();
    if (!v30) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v30 = 0;
  }
  id v31 = objc_msgSend(v30, sel_summary);

  if (v31)
  {
    id v32 = objc_msgSend(v31, sel_length);
    BOOL v33 = (void *)sub_1C3DB9BF8();
    objc_msgSend(v31, sel_replaceCharactersInRange_withString_, 0, v32, v33);
  }
  id v34 = objc_msgSend(v3, sel_audioDocument);
  if (!v34) {
    goto LABEL_47;
  }
  id v35 = v34;
  id v36 = (void *)sub_1C3DBA4A8();
  id v37 = objc_msgSend(v35, sel_document);
  id v38 = objc_msgSend(v37, sel_rootObject);

  if (v38)
  {
    self;
    unint64_t v39 = (void *)swift_dynamicCastObjCClass();
    if (!v39) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v39 = 0;
  }
  objc_msgSend(v39, sel_setSummaryVersion_, v36);

  id v40 = objc_msgSend(v3, sel_audioDocument);
  if (!v40) {
    goto LABEL_48;
  }
  id v41 = v40;
  if (v62) {
    uint64_t v42 = (void *)sub_1C3DB9BF8();
  }
  else {
    uint64_t v42 = 0;
  }
  id v43 = objc_msgSend(v41, sel_document);
  id v44 = objc_msgSend(v43, sel_rootObject);

  if (v44)
  {
    self;
    uint64_t v45 = (void *)swift_dynamicCastObjCClass();
    if (!v45) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v45 = 0;
  }
  objc_msgSend(v45, sel_setLongformSummaryModelVersionInfo_, v42);

  if (qword_1EA385680 != -1) {
    swift_once();
  }
  uint64_t v46 = v63;
  uint64_t v47 = __swift_project_value_buffer(v63, (uint64_t)qword_1EA385DA0);
  uint64_t v48 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v7, v47, v46);
  id v3 = v3;
  id v49 = sub_1C3DB9028();
  os_log_type_t v50 = sub_1C3DBA698();
  if (!os_log_type_enabled(v49, v50))
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v46);
LABEL_40:
    v66[0] = 0;
    if (objc_msgSend(v3, sel_saveAttachmentAndReturnError_, v66))
    {
      id v59 = v66[0];
      return;
    }
    id v60 = v66[0];
    sub_1C3DB8798();

    goto LABEL_43;
  }
  id v51 = (uint8_t *)swift_slowAlloc();
  id v52 = (void *)swift_slowAlloc();
  v66[0] = v52;
  *(_DWORD *)id v51 = 136315138;
  id v53 = objc_msgSend(v3, sel_attachment);
  if (v53)
  {
    os_log_type_t v54 = v53;
    id v55 = objc_msgSend(v53, sel_identifier);

    if (v55)
    {
      uint64_t v56 = sub_1C3DB9C38();
      unint64_t v58 = v57;
    }
    else
    {
      uint64_t v56 = 0;
      unint64_t v58 = 0xE000000000000000;
    }
    uint64_t v65 = sub_1C3C516D0(v56, v58, (uint64_t *)v66);
    sub_1C3DBA9A8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C3A61000, v49, v50, "Wrote summary to attachment %s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C877E600](v52, -1, -1);
    MEMORY[0x1C877E600](v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v63);
    goto LABEL_40;
  }
LABEL_49:

  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.deleteSummary()()
{
  uint64_t v1 = v0;
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v1, sel_audioDocument);
  if (!v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v1, sel_attachment);
  if (!v7) {
    goto LABEL_13;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_currentReplicaID);

  sub_1C3DB8B58();
  uint64_t v10 = sub_1C3DB8B98();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    uint64_t v12 = (void *)sub_1C3DB8B38();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  id v13 = objc_msgSend(objc_allocWithZone((Class)ICTTMergeableAttributedString), sel_initWithReplicaID_, v12);

  id v14 = objc_msgSend(v6, sel_document);
  id v15 = objc_msgSend(v14, sel_rootObject);

  if (v15)
  {
    self;
    id v16 = (void *)swift_dynamicCastObjCClass();
    if (!v16) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v16 = 0;
  }
  objc_msgSend(v16, sel_setSummary_, v13);

  v19[0] = 0;
  if (objc_msgSend(v1, sel_saveAttachmentAndReturnError_, v19))
  {
    id v17 = v19[0];
  }
  else
  {
    id v18 = v19[0];
    sub_1C3DB8798();

    swift_willThrow();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summarizationResult:)(NotesShared::SummarizationResult *summarizationResult)
{
  id v3 = v1;
  uint64_t v5 = sub_1C3DB9048();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t countAndFlagsBits = summarizationResult->text._countAndFlagsBits;
  unint64_t object = (unint64_t)summarizationResult->text._object;
  id v14 = summarizationResult->modelVersion.value._object;
  uint64_t v71 = summarizationResult->modelVersion.value._countAndFlagsBits;
  uint64_t v72 = v14;
  if (sub_1C3DB9D18() < 1)
  {
    sub_1C3C2F090();
    swift_allocError();
    unsigned char *v29 = 9;
    swift_willThrow();
    return;
  }
  uint64_t v15 = HIBYTE(object) & 0xF;
  if ((object & 0x2000000000000000) == 0) {
    uint64_t v15 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    id v69 = v8;
    uint64_t v70 = v6;
    id v16 = objc_msgSend(v3, sel_audioDocument);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = v5;
      v67[1] = v2;
      id v19 = objc_msgSend(v3, sel_attachment);
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = objc_msgSend(v19, sel_currentReplicaID);

        sub_1C3DB8B58();
        uint64_t v22 = sub_1C3DB8B98();
        uint64_t v23 = *(void *)(v22 - 8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v11, 0, 1, v22);
        uint64_t v24 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22) != 1)
        {
          uint64_t v24 = (void *)sub_1C3DB8B38();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
        }
        id v25 = objc_msgSend(objc_allocWithZone((Class)ICTTMergeableAttributedString), sel_initWithReplicaID_, v24);

        id v26 = objc_msgSend(v17, sel_document);
        id v27 = objc_msgSend(v26, sel_rootObject);

        uint64_t v68 = v18;
        if (v27)
        {
          self;
          id v28 = (void *)swift_dynamicCastObjCClass();
          if (!v28) {
            swift_unknownObjectRelease();
          }
        }
        else
        {
          id v28 = 0;
        }
        objc_msgSend(v28, sel_setTopLineSummary_, v25);

        id v30 = objc_msgSend(v3, sel_audioDocument);
        uint64_t v31 = v70;
        if (v30)
        {
          id v32 = v30;
          id v33 = objc_msgSend(v30, sel_document);
          id v34 = objc_msgSend(v33, sel_rootObject);

          if (v34)
          {
            self;
            id v35 = (void *)swift_dynamicCastObjCClass();
            if (!v35) {
              swift_unknownObjectRelease();
            }
          }
          else
          {
            id v35 = 0;
          }
          id v36 = objc_msgSend(v35, sel_topLineSummary);

          if (v36)
          {
            id v37 = objc_msgSend(v36, sel_length);
            id v38 = (void *)sub_1C3DB9BF8();
            objc_msgSend(v36, sel_replaceCharactersInRange_withString_, 0, v37, v38);
          }
          id v39 = objc_msgSend(v3, sel_audioDocument);
          if (v39)
          {
            id v40 = v39;
            if (v72) {
              id v41 = (void *)sub_1C3DB9BF8();
            }
            else {
              id v41 = 0;
            }
            id v42 = objc_msgSend(v40, sel_document);
            id v43 = objc_msgSend(v42, sel_rootObject);

            if (v43)
            {
              self;
              id v44 = (void *)swift_dynamicCastObjCClass();
              uint64_t v45 = v68;
              if (!v44) {
                swift_unknownObjectRelease();
              }
            }
            else
            {
              id v44 = 0;
              uint64_t v45 = v68;
            }
            objc_msgSend(v44, sel_setToplineSummaryModelVersionInfo_, v41);

            id v46 = objc_msgSend(v3, sel_attachment);
            if (v46)
            {
              uint64_t v47 = v46;
              uint64_t v48 = (void *)sub_1C3DB9BF8();
              objc_msgSend(v47, sel_updateChangeCountWithReason_, v48);

              if (qword_1EA385680 != -1) {
                swift_once();
              }
              uint64_t v49 = __swift_project_value_buffer(v45, (uint64_t)qword_1EA385DA0);
              os_log_type_t v50 = v69;
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v69, v49, v45);
              id v3 = v3;
              id v51 = sub_1C3DB9028();
              os_log_type_t v52 = sub_1C3DBA698();
              if (os_log_type_enabled(v51, v52))
              {
                id v53 = (uint8_t *)swift_slowAlloc();
                uint64_t v54 = swift_slowAlloc();
                uint64_t v74 = v54;
                *(_DWORD *)id v53 = 136315138;
                id v55 = objc_msgSend(v3, sel_attachment);
                if (!v55)
                {
LABEL_52:

                  __break(1u);
                  return;
                }
                uint64_t v56 = v55;
                id v57 = objc_msgSend(v55, sel_identifier);

                if (v57)
                {
                  uint64_t v58 = sub_1C3DB9C38();
                  unint64_t v60 = v59;
                }
                else
                {
                  uint64_t v58 = 0;
                  unint64_t v60 = 0xE000000000000000;
                }
                uint64_t v73 = sub_1C3C516D0(v58, v60, &v74);
                sub_1C3DBA9A8();

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1C3A61000, v51, v52, "Wrote top line summary to attachment %s", v53, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C877E600](v54, -1, -1);
                MEMORY[0x1C877E600](v53, -1, -1);

                (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v45);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v31 + 8))(v50, v45);
              }
              id v61 = objc_msgSend(v3, sel_attachment);
              if (v61)
              {
                uint64_t v62 = v61;
                id v63 = objc_msgSend(v61, sel_audioModel);

                if (v63)
                {
                  objc_msgSend(v63, sel_setMergeableDataDirty_, 1);
                }
                id v64 = objc_msgSend(v3, sel_attachment);
                if (v64)
                {
                  uint64_t v65 = v64;
                  id v66 = objc_msgSend(v64, sel_managedObjectContext);

                  objc_msgSend(v66, sel_ic_save);
                  return;
                }
                goto LABEL_51;
              }
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_47;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)(Swift::OpaquePointer transcriptSegments, ICAttachment *subattachment, Swift::Bool retranscription)
{
  uint64_t v4 = v3;
  id v63 = subattachment;
  rawValue = transcriptSegments._rawValue;
  v65[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC060);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C3DB8B98();
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v56[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = objc_msgSend(v4, sel_attachment);
  if (!v12) {
LABEL_33:
  }
    __break(1u);
  id v13 = v12;
  id v14 = objc_msgSend(v12, sel_identifier);

  if (!v14)
  {
LABEL_23:
    sub_1C3C2F090();
    swift_allocError();
    *uint64_t v45 = 7;
    swift_willThrow();
    return;
  }
  uint64_t v58 = sub_1C3DB9C38();
  unint64_t v16 = v15;

  id v17 = [(ICAttachment *)v63 identifier];
  if (!v17)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v18 = v17;
  unint64_t v59 = v16;
  sub_1C3DB9C38();

  sub_1C3DB8B18();
  swift_bridgeObjectRelease();
  uint64_t v19 = v61;
  uint64_t v20 = v62;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v61 + 48))(v8, 1, v62) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C3C2A448((uint64_t)v8, &qword_1EB6FC060);
    goto LABEL_23;
  }
  id v21 = v11;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v11, v8, v20);
  id v22 = objc_msgSend(v4, sel_audioDocument);
  if (!v22)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v23 = v22;
  uint64_t v24 = ICTTAudioDocument.fragment(for:)((uint64_t)v11);

  if (!v24)
  {
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v11, v20);
    goto LABEL_22;
  }
  if (!retranscription) {
    goto LABEL_13;
  }
  id v25 = objc_msgSend(v24, sel_transcript);
  unint64_t v26 = (unint64_t)objc_msgSend(v25, sel_count);

  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (; v26; --v26)
  {
    id v27 = objc_msgSend(v24, sel_transcript);
    objc_msgSend(v27, sel_removeObjectAtIndex_, 0);
  }
LABEL_13:
  id v28 = rawValue;
  uint64_t v29 = rawValue[2];
  if (v29)
  {
    uint64_t v30 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
    uint64_t v31 = (uint64_t)v28 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    uint64_t v32 = *(void *)(v30 + 72);
    swift_bridgeObjectRetain();
    uint64_t v33 = v29;
    do
    {
      sub_1C3C2E7B8(v31, v4, v24);
      v31 += v32;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    id v34 = (void *)sub_1C3DBA4A8();
    objc_msgSend(v24, sel_setTranscriptVersion_, v34);
  }
  unint64_t v35 = v59;
  if (qword_1EA385680 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C3DB9048();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EA385DA0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v37 = sub_1C3DB9028();
  os_log_type_t v38 = sub_1C3DBA698();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    int v57 = v39;
    unint64_t v41 = v35;
    uint64_t v42 = v40;
    v65[0] = (id)swift_slowAlloc();
    rawValue = v21;
    id v43 = v65[0];
    *(_DWORD *)uint64_t v42 = 134218242;
    swift_bridgeObjectRelease();
    uint64_t v64 = v29;
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_1C3C516D0(v58, v41, (uint64_t *)v65);
    sub_1C3DBA9A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C3A61000, v37, (os_log_type_t)v57, "Wrote %ld transcript segments to attachment %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    id v44 = v43;
    id v21 = rawValue;
    MEMORY[0x1C877E600](v44, -1, -1);
    MEMORY[0x1C877E600](v42, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v46 = (void *)sub_1C3DB9BF8();
  [(ICCloudSyncingObject *)v63 updateChangeCountWithReason:v46];

  id v47 = objc_msgSend(v4, sel_attachment);
  uint64_t v48 = v62;
  if (!v47) {
    goto LABEL_35;
  }
  uint64_t v49 = v47;
  id v50 = objc_msgSend(v4, sel_audioDocument);
  if (!v50)
  {
LABEL_36:
    __break(1u);
    return;
  }
  id v51 = v50;
  id v52 = objc_msgSend(v50, sel_transcriptAsPlainText);

  if (!v52)
  {
    sub_1C3DB9C38();
    id v52 = (id)sub_1C3DB9BF8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v49, sel_setAdditionalIndexableText_, v52);

  v65[0] = 0;
  if (objc_msgSend(v4, sel_saveAttachmentAndReturnError_, v65))
  {
    id v53 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
    id v54 = v65[0];
    v53(v21, v48);
  }
  else
  {
    id v55 = v65[0];
    sub_1C3DB8798();

    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v21, v48);
  }
}

void sub_1C3C2E7B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1C3DB8B98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a2, sel_audioDocument);
  if (v10)
  {
    uint64_t v11 = v10;
    type metadata accessor for ICTTTranscriptSegment();
    id v12 = objc_msgSend(v11, sel_document);

    _s10Foundation4UUIDV11NotesSharedE15defaultArgumentACvgZ_0();
    id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v14 = (void *)sub_1C3DB8B38();
    id v15 = objc_msgSend(v13, sel_initWithDocument_identity_, v12, v14);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    unint64_t v16 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
    id v17 = (void *)sub_1C3DB9BF8();
    objc_msgSend(v15, sel_setText_, v17);

    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, *(double *)(a1 + v16[6]));
    objc_msgSend(v15, sel_setTimestamp_, v18);

    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, *(double *)(a1 + v16[7]));
    objc_msgSend(v15, sel_setDuration_, v19);

    if (*(void *)(a1 + v16[8] + 8))
    {
      uint64_t v20 = (void *)sub_1C3DB9BF8();
      objc_msgSend(v15, sel_setSpeaker_, v20);
    }
    id v21 = objc_msgSend(a3, sel_transcript);
    objc_msgSend(v21, sel_addObject_, v15);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ICAttachmentAudioModel.saveAttachment()()
{
  id v1 = objc_msgSend(v0, sel_attachment);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_managedObjectContext);

    if (!v3)
    {
      sub_1C3C2F090();
      swift_allocError();
      *uint64_t v7 = 7;
      swift_willThrow();
      return;
    }
    id v4 = objc_msgSend(v0, sel_attachment);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = (void *)sub_1C3DB9BF8();
      objc_msgSend(v5, sel_updateChangeCountWithReason_, v6);

      objc_msgSend(v0, sel_setMergeableDataDirty_, 1);
      objc_msgSend(v3, sel_ic_save);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C3C2EB98(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5 = a1;
  a4();

  return 1;
}

uint64_t (*sub_1C3C2EDC4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C3C2EEE0(v6, a2, a3);
  return sub_1C3C2EE2C;
}

uint64_t (*sub_1C3C2EE30(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C3C2F008(v6, a2, a3);
  return sub_1C3C2EE2C;
}

void sub_1C3C2EE98(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1C3C2EEE0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C877C220](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_1C3C2F13C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C2EF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C2EFC8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C3C2F000(uint64_t a1, uint64_t a2)
{
  sub_1C3CA0718(a1, a2, v2);
}

void (*sub_1C3C2F008(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C877C220](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_1C3C2F088;
  }
  __break(1u);
  return result;
}

void sub_1C3C2F088(id *a1)
{
}

unint64_t sub_1C3C2F090()
{
  unint64_t result = qword_1EA385DB8;
  if (!qword_1EA385DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385DB8);
  }
  return result;
}

unint64_t sub_1C3C2F0E4()
{
  unint64_t result = qword_1EA385DC0;
  if (!qword_1EA385DC0)
  {
    sub_1C3DB8B98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385DC0);
  }
  return result;
}

double NSAttributedString.height(_:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, a1, 1.79769313e308);
  return CGRectGetHeight(*(CGRect *)&v2);
}

uint64_t ManagedEntityID.entityIdentifierString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedEntityID.uriRepresentation.getter(a1, a2, (uint64_t)v6);
  uint64_t v7 = sub_1C3DB88F8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C3C2A448((uint64_t)v6, (uint64_t *)&unk_1EB6FC7E0);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1C3C2F2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ManagedEntityID.init(url:)(a1, a2, a3);
}

uint64_t ManagedEntityID.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C3DB88F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v7(a3, 1, 1, a2);
}

uint64_t ManagedEntityID.description.getter()
{
  return sub_1C3DB80F8();
}

uint64_t ManagedEntityID.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&v9);
  if (v9 != 2)
  {
    uint64_t v2 = 1819112552;
    if ((v9 & 1) == 0) {
      uint64_t v2 = 0x6E7265646F6DLL;
    }
    unint64_t v3 = 0xE400000000000000;
    if ((v9 & 1) == 0) {
      unint64_t v3 = 0xE600000000000000;
    }
    uint64_t v9 = v2;
    unint64_t v10 = v3;
    sub_1C3DB9CA8();
  }
  uint64_t v9 = sub_1C3DB80F8();
  unint64_t v10 = v4;
  sub_1C3DB9CA8();
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1C3DBAC68();
  uint64_t v5 = sub_1C3DBB798();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v9 = v5;
  unint64_t v10 = v7;
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  return v9;
}

uint64_t static ManagedEntityID.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  void (*v100)(unint64_t *__return_ptr, char *);
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t);
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  unint64_t v164;
  char v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;

  v158 = a4;
  v150 = sub_1C3DB9418();
  v155 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  int v135 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_1C3DB9398();
  v147 = *(void *)(v148 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v148);
  v145 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v144 = (char *)&v126 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  v149 = (uint64_t)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v154 = (char *)&v126 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D8);
  MEMORY[0x1F4188790](v17 - 8);
  v143 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1C3DB93A8();
  v157 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  v156 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7D0);
  MEMORY[0x1F4188790](v140);
  uint64_t v141 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8);
  MEMORY[0x1F4188790](v142);
  v162 = (char *)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v22 - 8);
  int v139 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C3DB9438();
  v160 = *(void *)(v24 - 8);
  v161 = v24;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  v138 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v159 = (char *)&v126 - v27;
  int v134 = sub_1C3DBA938();
  int v133 = *(void *)(v134 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v134);
  uint64_t v137 = (char *)&v126 - v29;
  uint64_t v30 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v28);
  int v132 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v32 - 8);
  id v34 = (char *)&v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1C3DB88F8();
  v153 = *(char **)(v35 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  int v136 = (char *)&v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  int v39 = (char *)&v126 - v38;
  uint64_t v40 = a1;
  v170 = a1;
  v171 = a2;
  unint64_t v41 = a2;
  v168 = 58;
  v169 = 0xE100000000000000;
  unint64_t v42 = sub_1C3C3182C();
  v152 = (void (*)(char *, uint64_t, uint64_t))sub_1C3C31880();
  sub_1C3DB9B68();
  if (v165) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(a5, 1, 1, a3);
  }
  int v129 = v42;
  v131 = v30;
  v130 = a5;
  v151 = a3;
  int v128 = v164;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C3DB9E88();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  MEMORY[0x1C877B1D0](v44, v46, v48, v50);
  swift_bridgeObjectRelease();
  id v51 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  LODWORD(v44) = ICIsNotesURLScheme(v51);

  if (!v44) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v130, 1, 1, v151);
  }
  uint64_t v127 = v40;
  sub_1C3DB88C8();
  id v52 = v153;
  int v53 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v153 + 6))(v34, 1, v35);
  uint64_t v54 = v151;
  if (v53 == 1)
  {
    sub_1C3C2A448((uint64_t)v34, (uint64_t *)&unk_1EB6FC7E0);
  }
  else
  {
    (*((void (**)(char *, char *, uint64_t))v52 + 4))(v39, v34, v35);
    id v55 = v136;
    (*((void (**)(char *, char *, uint64_t))v52 + 2))(v136, v39, v35);
    uint64_t v56 = v137;
    (*(void (**)(char *, uint64_t))(v158 + 48))(v55, v54);
    (*((void (**)(char *, uint64_t))v52 + 1))(v39, v35);
    uint64_t v57 = v131;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v56, 1, v54) != 1)
    {
      unint64_t v112 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      int v113 = v132;
      v112(v132, v56, v54);
      uint64_t v114 = v130;
      v112(v130, v113, v54);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v114, 0, 1, v54);
    }
    (*(void (**)(char *, uint64_t))(v133 + 8))(v56, v134);
  }
  uint64_t v58 = v127;
  v168 = v127;
  v169 = v41;
  v166 = 63;
  v167 = 0xE100000000000000;
  sub_1C3DB9B68();
  unint64_t v59 = v156;
  if (v165)
  {
    swift_bridgeObjectRetain();
    unint64_t v60 = sub_1C3C30610(v128, v58, v41);
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v67 = MEMORY[0x1C877B1D0](v60, v62, v64, v66);
    unint64_t v69 = v68;
    uint64_t v70 = v161;
    uint64_t v71 = v146;
    uint64_t v72 = v157;
    goto LABEL_13;
  }
  uint64_t result = v128;
  uint64_t v70 = v161;
  uint64_t v72 = v157;
  if (v163 >> 14 >= v128 >> 14)
  {
    uint64_t v73 = sub_1C3DB9E88();
    uint64_t v67 = MEMORY[0x1C877B1D0](v73);
    unint64_t v69 = v74;
    uint64_t v71 = v146;
LABEL_13:
    swift_bridgeObjectRelease();
    v170 = v67;
    v171 = v69;
    swift_bridgeObjectRetain();
    char v75 = sub_1C3DB9E28();
    swift_bridgeObjectRelease();
    if (v75) {
      sub_1C3C3065C(2);
    }
    uint64_t v76 = v159;
    sub_1C3DB9448();
    uint64_t v77 = sub_1C3DB93B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v139, 1, 1, v77);
    sub_1C3DB93D8();
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v138, v76, v70);
    sub_1C3DB9388();
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
    uint64_t v79 = (uint64_t)v143;
    v78(v143, v59, v71);
    id v80 = v141;
    v152 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
    v152(v141, v79, v71);
    uint64_t v81 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v80[*(int *)(v140 + 44)];
    void *v81 = sub_1C3C306E4;
    v81[1] = 0;
    sub_1C3C2A448(v79, &qword_1EB6FC7D8);
    v78(v59, v80, v71);
    uint64_t v82 = v71;
    id v83 = (void (*)(uint64_t))MEMORY[0x1E4FBCE10];
    sub_1C3C318D4(&qword_1EB6FC720, MEMORY[0x1E4FBCE10]);
    uint64_t v84 = v162;
    sub_1C3DB9EA8();
    long long v85 = *(_OWORD *)v81;
    v153 = &v84[*(int *)(v142 + 44)];
    *(_OWORD *)v153 = v85;
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
    uint64_t v87 = v147;
    uint64_t v88 = *(void (**)(char *))(v147 + 16);
    uint64_t v89 = v144;
    v146 = (uint64_t)&v84[*(int *)(v86 + 36)];
    uint64_t v90 = v148;
    v88(v144);
    sub_1C3C318D4(&qword_1EB6FC728, v83);
    id v91 = v145;
    sub_1C3DBA558();
    sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
    LOBYTE(v76) = sub_1C3DB9BE8();
    uint64_t v92 = *(void (**)(char *, uint64_t))(v87 + 8);
    v92(v91, v90);
    v92(v89, v90);
    uint64_t v93 = 1;
    uint64_t v94 = v150;
    if ((v76 & 1) == 0)
    {
      id v95 = v162;
      uint64_t v96 = (void (*)(unint64_t *, void))sub_1C3DBA5C8();
      (*(void (**)(char *))(v155 + 16))(v154);
      v96(&v163, 0);
      int v97 = v156;
      v152(v156, (uint64_t)v95, v82);
      sub_1C3DBA568();
      (*(void (**)(char *, uint64_t))(v157 + 8))(v97, v82);
      uint64_t v93 = 0;
    }
    char v98 = v154;
    uint64_t v99 = v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v154, v93, 1, v94);
    id v100 = *(void (**)(unint64_t *__return_ptr, char *))v153;
    int v101 = (uint64_t)v98;
    id v102 = v149;
    sub_1C3C3191C(v101, v149);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v102, 1, v94) == 1)
    {
      id v103 = 0;
      uint64_t v104 = 0;
    }
    else
    {
      uint64_t v105 = v135;
      (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v135, v102, v94);
      v100(&v163, v105);
      id v103 = v163;
      uint64_t v104 = v164;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v105, v94);
    }
    unint64_t v106 = v151;
    uint64_t v107 = v130;
    uint64_t v108 = v158;
    uint64_t v109 = (uint64_t)v162;
    uint64_t v110 = (*(uint64_t (**)(uint64_t))(*(void *)(v158 + 8) + 32))(v151);
    if (v104)
    {
      if (v110 == v103 && v104 == v111)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        int v115 = sub_1C3DBB3B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v115 & 1) == 0) {
          goto LABEL_31;
        }
      }
      uint64_t v116 = sub_1C3C30A24();
      if (v117)
      {
        id v118 = v116;
        id v119 = v117;
        swift_bridgeObjectRetain();
        int v120 = sub_1C3DBB038();
        swift_bridgeObjectRelease();
        if (v120 > 1)
        {
          LOBYTE(v163) = 0;
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 40))(&v163, v118, v119, v106, v108);
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        int v121 = sub_1C3C30A24();
        if (v122)
        {
          LOBYTE(v163) = v120;
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 40))(&v163, v121, v122, v106, v108);
LABEL_33:
          sub_1C3C2A448(v109, &qword_1EB6FC7C8);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v161);
          int v123 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
          uint64_t v124 = v107;
          uint64_t v125 = 0;
          return v123((uint64_t)v124, v125, 1, v106);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_31:
    sub_1C3C2A448(v109, &qword_1EB6FC7C8);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v161);
    int v123 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
    uint64_t v124 = v107;
    uint64_t v125 = 1;
    return v123((uint64_t)v124, v125, 1, v106);
  }
  __break(1u);
  return result;
}

unint64_t sub_1C3C30610(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1C3DB9E88();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C3065C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = sub_1C3DB9D38();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        uint64_t result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x1F41838E8](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x1F41838E8](result, v1);
  }
  return result;
}

uint64_t sub_1C3C306E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C3DB9418();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = sub_1C3DB9408();
  v14[1] = v8;
  sub_1C3C2A4A4();
  uint64_t v9 = sub_1C3DBAA28();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v11)
  {
    uint64_t v9 = sub_1C3DB9408();
    uint64_t v11 = v12;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

void sub_1C3C30828()
{
  void (*v9)(void **__return_ptr, uint64_t *);
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;

  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    uint64_t v10 = sub_1C3DBAB78();
    if (v10)
    {
      uint64_t v18 = v10;
      sub_1C3C31A3C();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v7 = v17;
      swift_unknownObjectRelease();
      if (v17) {
        goto LABEL_6;
      }
    }
    return;
  }
  int64_t v4 = v0[3];
  unint64_t v3 = v1[4];
  if (v3)
  {
    uint64_t v5 = (v3 - 1) & v3;
    unint64_t v6 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_4:
    unint64_t v7 = *(void **)(*(void *)(v2 + 48) + 8 * v6);
    id v8 = v7;
    goto LABEL_5;
  }
  uint64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  uint64_t v12 = (unint64_t)(v1[2] + 64) >> 6;
  if (v11 >= v12)
  {
    unint64_t v7 = 0;
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  uint64_t v13 = v1[1];
  uint64_t v14 = *(void *)(v13 + 8 * v11);
  if (v14)
  {
LABEL_13:
    uint64_t v5 = (v14 - 1) & v14;
    unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
    int64_t v4 = v11;
    goto LABEL_4;
  }
  uint64_t v15 = v4 + 2;
  if (v4 + 2 >= v12) {
    goto LABEL_29;
  }
  uint64_t v14 = *(void *)(v13 + 8 * v15);
  if (v14)
  {
LABEL_17:
    uint64_t v11 = v15;
    goto LABEL_13;
  }
  if (v4 + 3 >= v12) {
    goto LABEL_30;
  }
  uint64_t v14 = *(void *)(v13 + 8 * (v4 + 3));
  if (v14)
  {
    uint64_t v11 = v4 + 3;
    goto LABEL_13;
  }
  uint64_t v15 = v4 + 4;
  if (v4 + 4 < v12)
  {
    uint64_t v14 = *(void *)(v13 + 8 * v15);
    if (v14) {
      goto LABEL_17;
    }
    uint64_t v11 = v4 + 5;
    if (v4 + 5 < v12)
    {
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14) {
        goto LABEL_13;
      }
      uint64_t v11 = v12 - 1;
      uint64_t v16 = v4 + 6;
      while (v12 != v16)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v16++);
        if (v14)
        {
          uint64_t v11 = v16 - 1;
          goto LABEL_13;
        }
      }
LABEL_29:
      unint64_t v7 = 0;
      uint64_t v5 = 0;
      int64_t v4 = v11;
      goto LABEL_5;
    }
LABEL_30:
    unint64_t v7 = 0;
    uint64_t v5 = 0;
    int64_t v4 = v15;
    goto LABEL_5;
  }
  unint64_t v7 = 0;
  uint64_t v5 = 0;
  v4 += 3;
LABEL_5:
  v1[3] = v4;
  v1[4] = v5;
  if (v7)
  {
LABEL_6:
    uint64_t v9 = (void (*)(void **__return_ptr, uint64_t *))v1[5];
    uint64_t v18 = (uint64_t)v7;
    v9(&v17, &v18);
  }
}

uint64_t sub_1C3C30A24()
{
  void (*v31)(uint64_t *__return_ptr, char *);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  uint64_t v1 = sub_1C3DB9418();
  unint64_t v42 = *(void *)(v1 - 8);
  id v43 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v40 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C3DB93A8();
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C3DB9398();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v41 = (uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v0 + *(int *)(v17 + 36), v5);
  sub_1C3C318D4(&qword_1EB6FC728, MEMORY[0x1E4FBCE10]);
  uint64_t v18 = v0;
  int v39 = v3;
  sub_1C3DBA558();
  sub_1C3C318D4(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
  char v19 = sub_1C3DB9BE8();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v9, v5);
  v20(v11, v5);
  if (v19)
  {
    uint64_t v21 = 1;
    uint64_t v23 = v42;
    uint64_t v22 = v43;
  }
  else
  {
    uint64_t v24 = v18;
    uint64_t v25 = v39;
    uint64_t v26 = (void (*)(uint64_t *, void))sub_1C3DBA5C8();
    uint64_t v28 = v42;
    uint64_t v27 = v43;
    (*(void (**)(char *))(v42 + 16))(v16);
    v26(&v44, 0);
    uint64_t v29 = v37;
    uint64_t v30 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v24, v25);
    sub_1C3DBA568();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v25);
    uint64_t v21 = 0;
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    uint64_t v18 = v24;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v16, v21, 1, v22);
  uint64_t v31 = *(void (**)(uint64_t *__return_ptr, char *))(v18
                                                             + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7C8)
                                                                      + 44));
  uint64_t v32 = v41;
  sub_1C3C3191C((uint64_t)v16, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v32, 1, v22) == 1) {
    return 0;
  }
  id v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v40, v32, v22);
  v31(&v44, v34);
  uint64_t v33 = v44;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
  return v33;
}

uint64_t ManagedEntityID.uriRepresentation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C3DB8408();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v59 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C3DB9438();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v68 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v57 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v60 = (char *)&v53 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v53 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = sub_1C3DB9418();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v61 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v58 = (char *)&v53 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v67 = (char *)&v53 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v53 - v30;
  uint64_t v69 = a2;
  (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 32))(a1);
  sub_1C3DB9428();
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v32(v21, 1, v22) == 1)
  {
    char v19 = v21;
LABEL_5:
    sub_1C3C2A448((uint64_t)v19, (uint64_t *)&unk_1EB6FC7F8);
    uint64_t v35 = sub_1C3DB88F8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  uint64_t v56 = a3;
  uint64_t v33 = v21;
  id v34 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v34(v31, v33, v22);
  sub_1C3C31680(a1, v69, (uint64_t)v19);
  if (v32(v19, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v22);
    a3 = v56;
    goto LABEL_5;
  }
  int v53 = (void (*)(uint64_t, char *, uint64_t))v34;
  v34(v67, v19, v22);
  uint64_t v37 = sub_1C3DB93B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v59, 1, 1, v37);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC808);
  unint64_t v38 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C3DD3D30;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v54 = v31;
  id v55 = v40;
  v40((char *)(v39 + v38), v31, v22);
  sub_1C3DB93C8();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v69 + 24))(&v70, a1);
  if (v70 == 2)
  {
    uint64_t v41 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v60, 1, 1, v22);
    goto LABEL_13;
  }
  uint64_t v41 = (uint64_t)v60;
  if ((v70 & 1) == 0)
  {
    uint64_t v42 = 1;
    goto LABEL_12;
  }
  id v43 = v57;
  sub_1C3DB9428();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v43, 1, v22);
  if (result != 1)
  {
    v53(v41, v43, v22);
    uint64_t v42 = 0;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v41, v42, 1, v22);
    if (v32((char *)v41, 1, v22) != 1)
    {
      uint64_t v48 = v58;
      v53((uint64_t)v58, (char *)v41, v22);
      uint64_t v47 = v61;
      v55(v61, v48, v22);
      sub_1C3DB93E8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v48, v22);
      uint64_t v45 = v65;
      uint64_t v44 = v66;
      uint64_t v46 = v64;
      goto LABEL_15;
    }
LABEL_13:
    sub_1C3C2A448(v41, (uint64_t *)&unk_1EB6FC7F8);
    uint64_t v45 = v65;
    uint64_t v44 = v66;
    uint64_t v46 = v64;
    uint64_t v47 = v61;
LABEL_15:
    uint64_t v49 = v67;
    v55(v47, v67, v22);
    uint64_t v50 = v68;
    sub_1C3DB93E8();
    sub_1C3DB83F8();
    id v51 = ICNotesAppURLScheme();
    sub_1C3DB9C38();

    sub_1C3DB83C8();
    sub_1C3DB93F8();
    sub_1C3DB8368();
    sub_1C3DB8328();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v50, v63);
    id v52 = *(void (**)(char *, uint64_t))(v23 + 8);
    v52(v49, v22);
    return ((uint64_t (*)(char *, uint64_t))v52)(v54, v22);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C31680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C3DB8218();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v16[1] = v10;
  id v11 = objc_msgSend(self, sel_ic_uriIdentifierAllowedCharacterSet);
  sub_1C3DB81E8();

  sub_1C3C2A4A4();
  sub_1C3DBAA08();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  if (v13) {
    return sub_1C3DB9428();
  }
  uint64_t v15 = sub_1C3DB9418();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
}

unint64_t sub_1C3C3182C()
{
  unint64_t result = qword_1EB6FC7B8;
  if (!qword_1EB6FC7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC7B8);
  }
  return result;
}

unint64_t sub_1C3C31880()
{
  unint64_t result = qword_1EB6FC7C0;
  if (!qword_1EB6FC7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6FC7C0);
  }
  return result;
}

uint64_t sub_1C3C318D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C3C3191C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of ManagedEntityID.contextType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ManagedEntityID.managedIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ManagedEntityID.init(contextType:managedIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ManagedEntityID.init(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1C3C319D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C3DB88F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

unint64_t sub_1C3C31A3C()
{
  unint64_t result = qword_1EA388CA0;
  if (!qword_1EA388CA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA388CA0);
  }
  return result;
}

uint64_t (*AsyncSequence.uncheckedSendableMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, v11);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a3;
  *((void *)v13 + 3) = a4;
  *((void *)v13 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], v10, a3);
  swift_retain();
  return sub_1C3C31D24;
}

uint64_t sub_1C3C31BCC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C3DBA378();
}

uint64_t sub_1C3C31C9C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C3C31D24()
{
  return sub_1C3C31BCC(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.base.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

void (*AsyncUncheckedSendableMapSequence.Iterator.base.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.Iterator.transform.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.init(base:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for AsyncUncheckedSendableMapSequence.Iterator();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 44));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for AsyncUncheckedSendableMapSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AsyncUncheckedSendableMapSequence.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  void v3[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v3[5] = AssociatedTypeWitness;
  uint64_t v5 = sub_1C3DBA938();
  void v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  v3[8] = v6;
  v3[9] = *(void *)(AssociatedTypeWitness - 8);
  v3[10] = swift_task_alloc();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = (void *)swift_task_alloc();
  v3[11] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C3C321E8;
  return MEMORY[0x1F4187C78](v6, v7, AssociatedConformanceWitness);
}

uint64_t sub_1C3C321E8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C3C32484;
  }
  else {
    uint64_t v2 = sub_1C3C322FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C3C322FC()
{
  uint64_t v1 = v0 + 9;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0 + 5;
  uint64_t v4 = v0[5];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v4) == 1)
  {
    uint64_t v1 = v0 + 7;
    uint64_t v5 = v0 + 6;
    uint64_t v6 = 1;
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v10 = v0[3];
    uint64_t v9 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v3, v4);
    (*(void (**)(uint64_t))(v9 + *(int *)(v10 + 44)))(v8);
    uint64_t v6 = 0;
    uint64_t v7 = v0[10];
  }
  uint64_t v11 = *v1;
  uint64_t v12 = v0[2];
  uint64_t v13 = v0[3];
  (*(void (**)(uint64_t, void))(v11 + 8))(v7, *v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v13 + 24) - 8) + 56))(v12, v6, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1C3C32484()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C3C324F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C3C3259C;
  return AsyncUncheckedSendableMapSequence.Iterator.next()(a1, a2);
}

uint64_t sub_1C3C3259C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C3C32690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  std::string v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_1C3C327E4;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_1C3C327E4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t AsyncUncheckedSendableMapSequence.makeBaseIterator.getter(uint64_t a1)
{
  return a1;
}

uint64_t AsyncUncheckedSendableMapSequence.makeBaseIterator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.makeBaseIterator.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.transform.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AsyncUncheckedSendableMapSequence.transform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

void (*AsyncUncheckedSendableMapSequence.transform.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t AsyncUncheckedSendableMapSequence.makeAsyncIterator()@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v11 = (char *)&v13 - v10;
  a1(v9);
  AsyncUncheckedSendableMapSequence.Iterator.init(base:transform:)((uint64_t)v11, a2, a3, a4);
  return swift_retain();
}

uint64_t sub_1C3C32B1C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C3C32BC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3C32BDC@<X0>(uint64_t a1@<X8>)
{
  AsyncUncheckedSendableMapSequence.makeAsyncIterator()(*(void (**)(uint64_t))v1, *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
  swift_release();
  return swift_release();
}

uint64_t sub_1C3C32C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C3C32C3C()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1C3C32C78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + _Block_object_dispose(&STACK[0x310], 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1C3C32CC4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *sub_1C3C32D30(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t _s7SummaryV12ParticipantsVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7SummaryV12ParticipantsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncUncheckedSendableMapSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3C32E18()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C3C32EC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C3C32FE0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1C3C33078(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1C3C33120(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C3C331D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x310], 8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C3C33278(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x310], 8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C3C33324(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C3C334C8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v1_Block_object_dispose(&STACK[0x310], 8) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_1C3C334DC(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C3C336E4);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = (a2 - 1);
          }
          *unint64_t v18 = v19;
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C3C3370C()
{
  uint64_t v0 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1C3DBA128();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v0);
}

BOOL static ICObjectReferences.Types.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ICObjectReferences.Types.hash(into:)()
{
  return sub_1C3DBB5E8();
}

uint64_t ICObjectReferences.Types.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C337DC()
{
  return sub_1C3DBB608();
}

void ICObjectReferences.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1 >> 62;
}

uint64_t ICObjectReferences.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  sub_1C3DBA128();
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v5(a2, v4, v3);
}

uint64_t ICObjectReferences.title.getter(uint64_t a1)
{
  switch(*v1 >> 62)
  {
    case 2:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
      sub_1C3DBA128();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      goto LABEL_5;
    case 3:
      MEMORY[0x1F4188790](a1);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
      sub_1C3DBA128();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata();
LABEL_5:
      uint64_t v2 = *(void *)(swift_projectBox() + *(int *)(TupleTypeMetadata3 + 48));
      swift_bridgeObjectRetain();
      break;
    default:
      sub_1C3DBA128();
      swift_getTupleTypeMetadata3();
      swift_projectBox();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA388F00);
      swift_dynamicCast();
      uint64_t v2 = v5;
      break;
  }
  return v2;
}

uint64_t ICObjectReferences.children.getter(uint64_t a1)
{
  sub_1C3C35B84(a1);
  return swift_bridgeObjectRetain();
}

uint64_t ICObjectReferences.recursiveIdentifiers.getter(uint64_t a1)
{
  sub_1C3C35B14(*(void *)(a1 + 16), *(void *)(a1 + 16));
  swift_allocObject();
  sub_1C3DBA048();
  ICObjectReferences.identifier.getter(a1, v2);
  uint64_t v3 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1C3DBA128();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v3);
  sub_1C3C35B84(a1);
  sub_1C3DBA128();
  sub_1C3DBA488();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C3DB9F18();
  swift_bridgeObjectRelease();
  sub_1C3DBA078();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  return sub_1C3DBA498();
}

uint64_t ICObjectReferences.recursiveNoteCount.getter(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *v1;
  if ((unint64_t)*v1 >> 62 != 2) {
    goto LABEL_5;
  }
  uint64_t v7 = *v1;
  uint64_t v5 = sub_1C3C35B84(a1);
  MEMORY[0x1F4188790](v5);
  uint64_t v2 = sub_1C3DBA128();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C3DB9F08();
  swift_bridgeObjectRelease();
  uint64_t v3 = v7;
  uint64_t result = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_5:
    uint64_t v8 = v3;
    uint64_t v6 = sub_1C3C35B84(v2);
    MEMORY[0x1F4188790](v6);
    sub_1C3DBA128();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1C3DB9F08();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t ICObjectReferences.recursiveAttachmentCount.getter(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *v1;
  if ((unint64_t)*v1 >> 62 != 3) {
    goto LABEL_5;
  }
  uint64_t v7 = *v1;
  uint64_t v5 = sub_1C3C35B84(a1);
  MEMORY[0x1F4188790](v5);
  uint64_t v2 = sub_1C3DBA128();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C3DB9F08();
  swift_bridgeObjectRelease();
  uint64_t v3 = v7;
  uint64_t result = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_5:
    uint64_t v8 = v3;
    uint64_t v6 = sub_1C3C35B84(v2);
    MEMORY[0x1F4188790](v6);
    sub_1C3DBA128();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_1C3DB9F08();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1C3C3410C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = type metadata accessor for ICObjectReferences();
  uint64_t result = a2(v6);
  if (__OFADD__(v5, result)) {
    __break(1u);
  }
  else {
    *a3 = v5 + result;
  }
  return result;
}

uint64_t ICObjectReferences.recursiveChildren.getter(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1C3DBB258();
  swift_allocObject();
  sub_1C3DBA048();
  *uint64_t v4 = v3;
  uint64_t v5 = (google::protobuf::io::ZeroCopyOutputStream *)sub_1C3DBA128();
  google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream(v5);
  sub_1C3C35B84(a1);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C3DB9F18();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C3DBA078();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ICObjectReferences.filterChildren(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v10 = *v4;
  uint64_t v66 = sub_1C3C35B84(a3);
  uint64_t v11 = sub_1C3DBA128();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t result = sub_1C3DBAE08();
  if (!v5)
  {
    uint64_t v64 = a4;
    uint64_t v66 = result;
    MEMORY[0x1F4188790](result);
    long long v65 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)&v60[16] = v65;
    *(void *)&v60[32] = a1;
    uint64_t v61 = a2;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v15 = sub_1C3C34894((void (*)(char *, char *))sub_1C3C35E68, (uint64_t)v60, v11, a3, v13, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v70);
    uint64_t v16 = swift_bridgeObjectRelease();
    switch(v10 >> 62)
    {
      case 1uLL:
        uint64_t v27 = v65;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v29 = swift_projectBox();
        uint64_t v30 = (void *)(v29 + *(int *)(TupleTypeMetadata3 + 48));
        uint64_t v31 = v30[1];
        *(void *)&long long v65 = *v30;
        uint64_t v32 = swift_allocBox();
        uint64_t v34 = v33;
        uint64_t v35 = (void *)(v33 + *(int *)(TupleTypeMetadata3 + 48));
        uint64_t v36 = *(int *)(TupleTypeMetadata3 + 64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v33, v29, v27);
        void *v35 = v65;
        v35[1] = v31;
        *(void *)(v34 + v36) = v15;
        unint64_t v37 = v32 | 0x4000000000000000;
        goto LABEL_6;
      case 2uLL:
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
        uint64_t v38 = v65;
        uint64_t v39 = swift_getTupleTypeMetadata3();
        uint64_t v40 = swift_projectBox();
        uint64_t v41 = (void *)(v40 + *(int *)(v39 + 48));
        uint64_t v42 = v41[1];
        *(void *)&long long v65 = *v41;
        uint64_t v43 = swift_allocBox();
        uint64_t v45 = v44;
        uint64_t v46 = (void *)(v44 + *(int *)(v39 + 48));
        uint64_t v47 = *(int *)(v39 + 64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v44, v40, v38);
        *uint64_t v46 = v65;
        v46[1] = v42;
        *(void *)(v45 + v47) = v15;
        unint64_t v37 = v43 | 0x8000000000000000;
LABEL_6:
        *uint64_t v64 = v37;
        break;
      case 3uLL:
        double v48 = MEMORY[0x1F4188790](v16);
        strcpy(v60, "identifier title hasMedia children ");
        double v63 = v48;
        uint64_t v66 = *(void *)&v48;
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
        uint64_t v68 = MEMORY[0x1E4FBB390];
        uint64_t v69 = v11;
        TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v50 = swift_projectBox();
        id v51 = (void *)(v50 + TupleTypeMetadata[12]);
        uint64_t v52 = v51[1];
        *(void *)&long long v65 = *v51;
        int v62 = *(unsigned __int8 *)(v50 + TupleTypeMetadata[16]);
        uint64_t v53 = swift_allocBox();
        uint64_t v55 = v54;
        uint64_t v56 = (void *)(v54 + TupleTypeMetadata[12]);
        uint64_t v57 = TupleTypeMetadata[16];
        uint64_t v58 = TupleTypeMetadata[20];
        (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)&v63 - 8) + 16))(v54, v50);
        unint64_t v59 = v64;
        void *v56 = v65;
        v56[1] = v52;
        *(unsigned char *)(v55 + v57) = v62;
        *(void *)(v55 + v5_Block_object_dispose(&STACK[0x310], 8) = v15;
        unint64_t *v59 = v53 | 0xC000000000000000;
        break;
      default:
        uint64_t v17 = v65;
        uint64_t v18 = swift_getTupleTypeMetadata3();
        uint64_t v19 = swift_projectBox();
        uint64_t v20 = (void *)(v19 + *(int *)(v18 + 48));
        uint64_t v21 = v20[1];
        *(void *)&long long v65 = *v20;
        uint64_t v22 = swift_allocBox();
        uint64_t v24 = v23;
        uint64_t v25 = (void *)(v23 + *(int *)(v18 + 48));
        uint64_t v26 = *(int *)(v18 + 64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v23, v19, v17);
        *uint64_t v25 = v65;
        v25[1] = v21;
        *(void *)(v24 + v26) = v15;
        *uint64_t v64 = v22;
        break;
    }
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C3C3480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for ICObjectReferences();
  uint64_t result = ICObjectReferences.filterChildren(_:)(a2, a3, v10);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_1C3C34894(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1C3DBA538();
  if (!v18) {
    return sub_1C3DBA098();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1C3DBAE88();
  uint64_t v32 = sub_1C3DBAE98();
  sub_1C3DBAE38();
  uint64_t v36 = v8;
  uint64_t result = sub_1C3DBA528();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1C3DBA5C8();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1C3DBAE78();
      sub_1C3DBA568();
      --v19;
      int v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t ICObjectReferences.mapIdentifiers<A>(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v104 = a6;
  int v12 = *(unsigned char **)(a3 + 16);
  uint64_t v100 = *((void *)v12 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v99 = &v93[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  char v98 = &v93[-v15];
  MEMORY[0x1F4188790](v16);
  id v103 = &v93[-v17];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v93[-v19];
  unint64_t v21 = *v6;
  uint64_t v113 = *v6;
  uint64_t v113 = sub_1C3C35B84(v22);
  uint64_t v107 = v12;
  uint64_t v108 = a4;
  uint64_t v109 = *(void *)(a3 + 24);
  uint64_t v110 = a5;
  uint64_t v101 = a2;
  id v102 = a1;
  os_log_t v111 = (void (*)(void))a1;
  uint64_t v112 = a2;
  uint64_t v23 = sub_1C3DBA128();
  uint64_t v24 = type metadata accessor for ICObjectReferences();
  swift_bridgeObjectRetain();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC738);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v105;
  uint64_t v28 = sub_1C3C34894((void (*)(char *, char *))sub_1C3C35E8C, (uint64_t)v106, v23, v24, v25, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v117);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27)
  {
    uint64_t v30 = v103;
    uint64_t v96 = v24;
    uint64_t v97 = a4;
    uint64_t v31 = v104;
    uint64_t v105 = v28;
    switch(v21 >> 62)
    {
      case 1uLL:
        char v98 = 0;
        uint64_t v45 = v12;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v47 = swift_projectBox();
        double v48 = (uint64_t *)(v47 + *(int *)(TupleTypeMetadata3 + 48));
        uint64_t v50 = *v48;
        uint64_t v49 = v48[1];
        uint64_t v51 = v100;
        uint64_t v52 = v30;
        (*(void (**)(unsigned char *, uint64_t, unsigned char *))(v100 + 16))(v30, v47, v45);
        sub_1C3DBA128();
        uint64_t v53 = swift_getTupleTypeMetadata3();
        uint64_t v54 = swift_allocBox();
        uint64_t v56 = v55;
        swift_bridgeObjectRetain();
        uint64_t v57 = v98;
        v102(v52);
        if (v57)
        {
          (*(void (**)(unsigned char *, unsigned char *))(v51 + 8))(v52, v45);
          goto LABEL_8;
        }
        uint64_t v84 = v45;
        uint64_t v85 = v50;
        uint64_t v86 = (void *)(v56 + *(int *)(v53 + 48));
        uint64_t v87 = *(int *)(v53 + 64);
        uint64_t result = (*(uint64_t (**)(unsigned char *, unsigned char *))(v51 + 8))(v52, v84);
        *uint64_t v86 = v85;
        v86[1] = v49;
        *(void *)(v56 + v87) = v105;
        unint64_t v90 = v54 | 0x4000000000000000;
        goto LABEL_13;
      case 2uLL:
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
        uint64_t v58 = swift_getTupleTypeMetadata3();
        uint64_t v59 = swift_projectBox();
        uint64_t v60 = v59 + *(int *)(v58 + 48);
        uint64_t v61 = *(void *)(v60 + 8);
        id v103 = *(unsigned char **)v60;
        uint64_t v62 = v100;
        double v63 = v98;
        (*(void (**)(unsigned char *, uint64_t, unsigned char *))(v100 + 16))(v98, v59, v12);
        sub_1C3DBA128();
        uint64_t v64 = swift_getTupleTypeMetadata3();
        uint64_t v65 = swift_allocBox();
        uint64_t v67 = v66;
        swift_bridgeObjectRetain();
        v102(v63);
        uint64_t v88 = (void *)(v67 + *(int *)(v64 + 48));
        uint64_t v89 = *(int *)(v64 + 64);
        uint64_t result = (*(uint64_t (**)(unsigned char *, unsigned char *))(v62 + 8))(v63, v12);
        void *v88 = v103;
        v88[1] = v61;
        *(void *)(v67 + v89) = v105;
        unint64_t v90 = v65 | 0x8000000000000000;
LABEL_13:
        *uint64_t v104 = v90;
        return result;
      case 3uLL:
        char v98 = 0;
        MEMORY[0x1F4188790](result);
        strcpy(&v93[-48], "identifier title hasMedia children ");
        uint64_t v113 = (uint64_t)v12;
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
        uint64_t v115 = MEMORY[0x1E4FBB390];
        uint64_t v116 = v23;
        uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
        uint64_t v69 = swift_projectBox();
        uint64_t v70 = (uint64_t *)(v69 + *(int *)(TupleTypeMetadata + 48));
        uint64_t v71 = v70[1];
        uint64_t v95 = *v70;
        int v94 = *(unsigned __int8 *)(v69 + *(int *)(TupleTypeMetadata + 64));
        uint64_t v73 = v99;
        uint64_t v72 = v100;
        unint64_t v74 = *(uint64_t (**)(unsigned char *, uint64_t, unsigned char *))(v100 + 16);
        id v103 = v12;
        uint64_t v75 = v74(v99, v69, v12);
        MEMORY[0x1F4188790](v75);
        strcpy(&v93[-48], "identifier title hasMedia children ");
        uint64_t v113 = v97;
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
        uint64_t v115 = MEMORY[0x1E4FBB390];
        uint64_t v116 = sub_1C3DBA128();
        uint64_t v76 = (int *)swift_getTupleTypeMetadata();
        uint64_t v77 = swift_allocBox();
        uint64_t v79 = v78;
        swift_bridgeObjectRetain();
        id v80 = v98;
        v102(v73);
        if (v80)
        {
          (*(void (**)(unsigned char *, unsigned char *))(v72 + 8))(v73, v103);
          goto LABEL_8;
        }
        id v91 = (void *)(v79 + v76[12]);
        id v102 = (void (*)(unsigned char *))v76[16];
        uint64_t v92 = v76[20];
        uint64_t result = (*(uint64_t (**)(unsigned char *, unsigned char *))(v72 + 8))(v73, v103);
        *id v91 = v95;
        v91[1] = v71;
        *((unsigned char *)v102 + v79) = v94;
        *(void *)(v79 + v92) = v105;
        *uint64_t v31 = v77 | 0xC000000000000000;
        break;
      default:
        char v98 = 0;
        uint64_t v32 = v12;
        uint64_t v33 = swift_getTupleTypeMetadata3();
        uint64_t v34 = swift_projectBox();
        uint64_t v35 = (uint64_t *)(v34 + *(int *)(v33 + 48));
        uint64_t v37 = *v35;
        uint64_t v36 = v35[1];
        uint64_t v38 = v100;
        uint64_t v39 = v20;
        (*(void (**)(unsigned char *, uint64_t, unsigned char *))(v100 + 16))(v20, v34, v12);
        sub_1C3DBA128();
        uint64_t v40 = swift_getTupleTypeMetadata3();
        uint64_t v41 = swift_allocBox();
        uint64_t v43 = v42;
        swift_bridgeObjectRetain();
        uint64_t v44 = v98;
        v102(v39);
        if (v44)
        {
          (*(void (**)(unsigned char *, unsigned char *))(v38 + 8))(v39, v32);
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_deallocBox();
        }
        else
        {
          uint64_t v81 = v39;
          uint64_t v82 = (void *)(v43 + *(int *)(v40 + 48));
          uint64_t v83 = *(int *)(v40 + 64);
          uint64_t result = (*(uint64_t (**)(unsigned char *, unsigned char *))(v38 + 8))(v81, v32);
          *uint64_t v82 = v37;
          v82[1] = v36;
          *(void *)(v43 + v83) = v105;
          *uint64_t v104 = v41;
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1C3C3554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = type metadata accessor for ICObjectReferences();
  uint64_t result = ICObjectReferences.mapIdentifiers<A>(_:)(a2, a3, v14, a5, a7);
  if (v8) {
    *a8 = v8;
  }
  return result;
}

uint64_t ICObjectReferences.leastCommonFolderOrNote.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (*v2 < 0)
  {
    *a2 = v4;
    return swift_retain();
  }
  else
  {
    uint64_t v9 = *v2;
    sub_1C3C35B84(a1);
    sub_1C3DBA128();
    swift_getWitnessTable();
    sub_1C3DBA598();
    if ((~v9 & 0xF000000000000007) != 0)
    {
      sub_1C3C35B84(a1);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C877B5E0](v6, a1);
      swift_bridgeObjectRelease();
      if (v7 == 1)
      {
        ICObjectReferences.leastCommonFolderOrNote.getter(a1);
        return sub_1C3C35ECC(v9);
      }
      sub_1C3C35ECC(v9);
    }
    *a2 = v4;
    return swift_retain();
  }
}

uint64_t ICObjectReferences.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *v2;
  ICObjectReferences.identifier.getter(v7, (uint64_t)v6);
  sub_1C3DB9B18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static ICObjectReferences.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v12 = *v11;
  uint64_t v18 = *v8;
  uint64_t v13 = type metadata accessor for ICObjectReferences();
  ICObjectReferences.identifier.getter(v13, (uint64_t)v10);
  uint64_t v18 = v12;
  ICObjectReferences.identifier.getter(v13, (uint64_t)v7);
  char v14 = sub_1C3DB9BE8();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v7, a3);
  v15(v10, a3);
  return v14 & 1;
}

uint64_t ICObjectReferences.hashValue.getter(uint64_t a1)
{
  v4[9] = *v1;
  sub_1C3DBB5D8();
  ICObjectReferences.hash(into:)((uint64_t)v4, a1);
  return sub_1C3DBB608();
}

uint64_t sub_1C3C359CC(uint64_t a1, uint64_t a2)
{
  sub_1C3DBB5D8();
  ICObjectReferences.hash(into:)((uint64_t)v4, a2);
  return sub_1C3DBB608();
}

uint64_t sub_1C3C35A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ICObjectReferences.== infix(_:_:)(a1, a2, *(void *)(a3 + 16));
}

BOOL static ICObjectReferences.< infix(_:_:)()
{
  uint64_t v0 = type metadata accessor for ICObjectReferences();
  ICObjectReferences.title.getter(v0);
  if (!v1) {
    return 1;
  }
  ICObjectReferences.title.getter(v0);
  if (v2)
  {
    sub_1C3C2A4A4();
    uint64_t v3 = sub_1C3DBAA38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3 == -1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL sub_1C3C35AFC()
{
  return static ICObjectReferences.< infix(_:_:)();
}

uint64_t sub_1C3C35B14(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC450);
  }
  else
  {
    return sub_1C3DBB258();
  }
}

uint64_t sub_1C3C35B84(uint64_t a1)
{
  switch(*v1 >> 62)
  {
    case 2:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
      sub_1C3DBA128();
      goto LABEL_4;
    case 3:
      MEMORY[0x1F4188790](a1);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA388F00);
      sub_1C3DBA128();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v3 = swift_projectBox();
      uint64_t v4 = (int *)(TupleTypeMetadata + 80);
      break;
    default:
      sub_1C3DBA128();
LABEL_4:
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v3 = swift_projectBox();
      uint64_t v4 = (int *)(TupleTypeMetadata3 + 64);
      break;
  }
  return *(void *)(v3 + *v4);
}

uint64_t sub_1C3C35D50@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C3C35E08((uint64_t (*)(uint64_t))ICObjectReferences.recursiveIdentifiers.getter, a1);
}

uint64_t sub_1C3C35D7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3C3410C(a1, (uint64_t (*)(uint64_t))ICObjectReferences.recursiveNoteCount.getter, a2);
}

uint64_t sub_1C3C35DAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3C3410C(a1, (uint64_t (*)(uint64_t))ICObjectReferences.recursiveAttachmentCount.getter, a2);
}

uint64_t sub_1C3C35DDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C3C35E08((uint64_t (*)(uint64_t))ICObjectReferences.recursiveChildren.getter, a1);
}

uint64_t sub_1C3C35E08@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ICObjectReferences();
  uint64_t result = a1(v4);
  *a2 = result;
  return result;
}

uint64_t sub_1C3C35E68(uint64_t a1, void *a2)
{
  return sub_1C3C3480C(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_1C3C35E8C(uint64_t a1, void *a2)
{
  return sub_1C3C3554C(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t type metadata accessor for ICObjectReferences()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3C35ECC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C3C35EE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3C35F00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C3C35F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

void *_s9SelectionOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s9SelectionOwxx()
{
  return swift_release();
}

void *_s9SelectionOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  char *result = *a2;
  return result;
}

void *_s9SelectionOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s9SelectionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s9SelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x310], 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C3C36098(void *a1)
{
  return *a1 >> 62;
}

void *sub_1C3C360A4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1C3C360B4(uint64_t *result, uint64_t a2)
{
  char *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  char *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PersistedActivityEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1C3C36164(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C36230);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C3C36258(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1C3C36260(unsigned char *result, char a2)
{
  char *result = a2;
  return result;
}

uint64_t type metadata accessor for ICObjectReferences.Types()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3C36280@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3C35D7C(a1, a2);
}

uint64_t sub_1C3C36298@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C3C35DAC(a1, a2);
}

void static NSObject<>.ic_fetchRequest()()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  id v1 = objc_msgSend(v0, sel_name);

  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBE40);
    sub_1C3DB9C38();

    id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1C3C3636C();
  }
  else
  {
    __break(1u);
  }
}

id sub_1C3C3636C()
{
  id v1 = (void *)sub_1C3DB9BF8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

Swift::Void __swiftcall ICAttachment.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v3);
  BOOL v7 = &v15[-v6 - 8];
  if (objc_msgSend(v1, sel_attachmentType) == 12)
  {
    sub_1C3C367A4((uint64_t (*)(void))sub_1C3C2A6CC, (uint64_t (*)(void))sub_1C3C37028, 90, 88, v15);
    sub_1C3C28D98(v15[0], v16, v17, (uint64_t)v7);
    uint64_t v8 = sub_1C3DB88F8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1C3C36FB8((uint64_t)v7);
    }
    else
    {
      sub_1C3DB87E8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v1, sel_title);
    if (v12)
    {
LABEL_11:
      uint64_t v13 = v12;
      sub_1C3DB9C38();
    }
  }
  else
  {
    sub_1C3C367A4((uint64_t (*)(void))sub_1C3C2A6CC, sub_1C3C2A6E4, 30, 28, v15);
    sub_1C3C28588(v15[0], v16, v17, (uint64_t)v5);
    uint64_t v10 = sub_1C3DB88F8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
    {
      sub_1C3C36FB8((uint64_t)v5);
    }
    else
    {
      sub_1C3DB87E8();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
    }
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v1, sel_title);
    if (v12) {
      goto LABEL_11;
    }
  }
  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA888();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C3C367A4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v55 = a4;
  uint64_t v56 = a3;
  uint64_t v60 = a2;
  uint64_t v62 = a5;
  uint64_t v7 = sub_1C3DB9048();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  double v63 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v51 - v11;
  id v13 = objc_msgSend(v5, sel_objectID);
  if (!objc_msgSend(v13, sel_ic_isModernType)) {
    objc_msgSend(v13, sel_ic_isLegacyType);
  }

  uint64_t v57 = &v51;
  MEMORY[0x1F4188790](v14);
  int v61 = v15;
  *((unsigned char *)&v51 - 16) = v15;
  uint64_t v16 = qword_1EB6FC7B0;
  id v17 = v5;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB6FC798);
  uint64_t v19 = v8;
  uint64_t v58 = *(void (**)(char *))(v8 + 16);
  uint64_t v59 = v18;
  v58(v12);
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 2;
  if (sub_1C3D6958C(v20, a1))
  {
  }
  else
  {
    os_log_type_t v21 = sub_1C3DBA6B8();
    uint64_t v22 = sub_1C3DB9028();
    if (os_log_type_enabled(v22, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      int v54 = v21;
      uint64_t v24 = v23;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v66 = v53;
      *(_DWORD *)uint64_t v24 = 136315650;
      os_log_t v52 = v22;
      uint64_t v25 = sub_1C3DBACC8();
      uint64_t v64 = sub_1C3C516D0(v25, v26, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      uint64_t v64 = v55;
      sub_1C3DBA9A8();
      *(_WORD *)(v24 + 22) = 2080;
      uint64_t v55 = v24 + 24;
      uint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v27 = objc_msgSend(v17, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      uint64_t v19 = v8;
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1C3C516D0(v64, v65, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      os_log_t v28 = v52;
      _os_log_impl(&dword_1C3A61000, v52, (os_log_type_t)v54, "Failed assertion at %s:%lu: %s", (uint8_t *)v24, 0x20u);
      uint64_t v29 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v29, -1, -1);
      MEMORY[0x1C877E600](v24, -1, -1);

      uint64_t v30 = v8;
      goto LABEL_11;
    }
  }
  uint64_t v30 = v8;
LABEL_11:
  uint64_t v31 = *(uint64_t (**)(void))(v30 + 8);
  ((void (*)(char *, uint64_t))v31)(v12, v7);
  swift_release();
  uint64_t v32 = v63;
  id v33 = objc_msgSend(v17, sel_identifierURIPathComponent);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_1C3DB9C38();
    unint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  uint64_t v57 = &v51;
  MEMORY[0x1F4188790](v33);
  *(&v51 - 2) = v35;
  *(&v51 - 1) = v37;
  ((void (*)(char *, uint64_t, uint64_t))v58)(v32, v59, v7);
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 2;
  id v39 = v17;
  if (sub_1C3D6958C(v38, v60))
  {

    ((void (*)(char *, uint64_t))v31)(v32, v7);
  }
  else
  {
    uint64_t v60 = v31;
    os_log_type_t v40 = sub_1C3DBA6B8();
    uint64_t v41 = sub_1C3DB9028();
    if (os_log_type_enabled(v41, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      LODWORD(v5_Block_object_dispose(&STACK[0x310], 8) = v40;
      uint64_t v43 = v42;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v66 = v55;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v44 = sub_1C3DBACC8();
      uint64_t v59 = v19;
      uint64_t v64 = sub_1C3C516D0(v44, v45, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2048;
      uint64_t v64 = v56;
      sub_1C3DBA9A8();
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v56 = v43 + 24;
      uint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v64 = 0xD00000000000002CLL;
      unint64_t v65 = 0x80000001C3DF1FB0;
      id v46 = objc_msgSend(v39, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1C3C516D0(v64, v65, &v66);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v41, (os_log_type_t)v58, "Failed assertion at %s:%lu: %s", (uint8_t *)v43, 0x20u);
      uint64_t v47 = v55;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v47, -1, -1);
      MEMORY[0x1C877E600](v43, -1, -1);

      double v48 = v63;
    }
    else
    {

      double v48 = v32;
    }
    ((void (*)(char *, uint64_t))v60)(v48, v7);
  }
  uint64_t result = swift_release();
  uint64_t v50 = v62;
  *uint64_t v62 = v61;
  *((void *)v50 + 1) = v35;
  *((void *)v50 + 2) = v37;
  return result;
}

uint64_t sub_1C3C36FB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C3C37018()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

BOOL sub_1C3C37028()
{
  return sub_1C3C51224(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t Result.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
}

uint64_t Result.error.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TelephonyUtilitiesFeature(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TelephonyUtilitiesFeature(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesFeature()
{
  return &type metadata for TelephonyUtilitiesFeature;
}

const char *sub_1C3C373A8()
{
  return "TelephonyUtilities";
}

uint64_t sub_1C3C373BC()
{
  return *(void *)v0;
}

uint64_t sub_1C3C373C8()
{
  uint64_t v1 = sub_1C3DBACC8();
  sub_1C3DB9D68();
  sub_1C3DBACC8();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1C3C3744C(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&STACK[0x310], 8) = sub_1C3C3747C();
  unint64_t result = sub_1C3C374D0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C3C3747C()
{
  unint64_t result = qword_1EA385EE0;
  if (!qword_1EA385EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385EE0);
  }
  return result;
}

unint64_t sub_1C3C374D0()
{
  unint64_t result = qword_1EA385EE8;
  if (!qword_1EA385EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385EE8);
  }
  return result;
}

id ICTTTextEdit.init(timestamp:replicaID:range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C376DC(a1, (uint64_t)v10);
  uint64_t v11 = sub_1C3DB8AF8();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    id v13 = (void *)sub_1C3DB8A88();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v15 = (void *)sub_1C3DB8B38();
  id v16 = objc_msgSend(v14, sel_initWithTimestamp_replicaID_range_, v13, v15, a3, a4);

  uint64_t v17 = sub_1C3DB8B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  sub_1C3C37744(a1);
  return v16;
}

uint64_t sub_1C3C376DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C37744(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static TagID.uriTypeName.getter()
{
  return 6775156;
}

uint64_t TagID.displayText.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TagID.displayText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

void (*TagID.displayText.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

NotesShared::TagID __swiftcall TagID.init(displayText:)(NotesShared::TagID displayText)
{
  NotesShared::TagID *v1 = displayText;
  return displayText;
}

uint64_t TagID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t static TagID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C3DBB3B8();
  }
}

uint64_t TagID.hashValue.getter()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C37928()
{
  return 6775156;
}

uint64_t sub_1C3C37938()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C37994()
{
  swift_bridgeObjectRetain();
  sub_1C3DB9D08();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C379EC()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C37A44(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C3DBB3B8();
  }
}

uint64_t _s11NotesShared5TagIDV11descriptionSSvg_0()
{
  uint64_t v1 = sub_1C3DB9C38();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  sub_1C3DB9D68();
  swift_bridgeObjectRetain();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static TagID.entityIdentifier(for:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v110 = a1;
  uint64_t v111 = a2;
  uint64_t v109 = a3;
  uint64_t v98 = sub_1C3DB9418();
  uint64_t v105 = *(void *)(v98 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v98);
  uint64_t v96 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v97 = (char *)&v83 - v5;
  uint64_t v102 = sub_1C3DB9398();
  unint64_t v106 = *(char **)(v102 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v102);
  uint64_t v101 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v100 = (char *)&v83 - v8;
  uint64_t v103 = sub_1C3DB93A8();
  uint64_t v108 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v107 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  uint64_t v10 = MEMORY[0x1F4188790](v99);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v83 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC7F0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C3DB9438();
  uint64_t v104 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  os_log_type_t v21 = (void (*)(char *, uint64_t, uint64_t))((char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC788);
  MEMORY[0x1F4188790](v24 - 8);
  unint64_t v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C3DB8408();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3DB83D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
  {
    uint64_t v92 = v21;
    uint64_t v93 = v17;
    int v94 = v12;
    uint64_t v110 = v23;
    uint64_t v111 = v18;
    uint64_t v95 = v14;
    id v33 = v106;
    uint64_t v32 = v107;
    uint64_t v34 = v108;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v27);
    sub_1C3DB83B8();
    uint64_t v35 = v30;
    if (!v36
      || (unint64_t v37 = (void *)sub_1C3DB9BF8(),
          swift_bridgeObjectRelease(),
          char v38 = ICIsNotesURLScheme(v37),
          v37,
          (v38 & 1) == 0))
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v35, v27);
      goto LABEL_13;
    }
    uint64_t v90 = v28;
    uint64_t v91 = v27;
    uint64_t v89 = v35;
    sub_1C3DB8358();
    id v39 = v110;
    sub_1C3DB9448();
    uint64_t v40 = sub_1C3DB93B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v93, 1, 1, v40);
    sub_1C3DB93D8();
    (*(void (**)(void, char *, uint64_t))(v104 + 16))(v92, v39, v111);
    sub_1C3DB9388();
    uint64_t v41 = v32;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    uint64_t v43 = (uint64_t)v94;
    uint64_t v44 = v103;
    uint64_t v93 = (char *)(v34 + 16);
    uint64_t v92 = v42;
    v42(v94, (uint64_t)v41, v103);
    sub_1C3C3869C(&qword_1EB6FC728, MEMORY[0x1E4FBCE10]);
    unint64_t v45 = v100;
    sub_1C3DBA528();
    id v46 = *(void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v108 = v34 + 8;
    uint64_t v88 = v46;
    v46(v41, v44);
    uint64_t v47 = v99;
    double v48 = v33;
    uint64_t v49 = v102;
    (*((void (**)(uint64_t, char *, uint64_t))v33 + 4))(v43 + *(int *)(v99 + 36), v45, v102);
    uint64_t v50 = v43;
    uint64_t v51 = (uint64_t)v95;
    sub_1C3C38634(v50, (uint64_t)v95);
    uint64_t v52 = v51 + *(int *)(v47 + 36);
    uint64_t v99 = *((void *)v33 + 2);
    int v94 = v33 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v99)(v45, v52, v49);
    uint64_t v53 = v101;
    sub_1C3DBA558();
    uint64_t v87 = sub_1C3C3869C(&qword_1EB6FC538, MEMORY[0x1E4FBCE00]);
    LOBYTE(v47) = sub_1C3DB9BE8();
    int v54 = (void (*)(char *, uint64_t))*((void *)v48 + 1);
    v54(v53, v49);
    unint64_t v106 = (char *)v54;
    v54(v45, v49);
    uint64_t v55 = v105;
    if ((v47 & 1) == 0)
    {
      uint64_t v56 = (void (*)(unsigned char *, void))sub_1C3DBA5C8();
      uint64_t v58 = v55 + 16;
      uint64_t v57 = *(void (**)(char *))(v55 + 16);
      uint64_t v59 = v97;
      uint64_t v60 = v98;
      uint64_t v84 = v57;
      v57(v97);
      v56(v112, 0);
      int v61 = v107;
      v92(v107, v51, v44);
      sub_1C3DBA568();
      v88(v61, v44);
      uint64_t v62 = sub_1C3DB9408();
      uint64_t v64 = v63;
      unint64_t v65 = *(void (**)(char *, uint64_t))(v105 + 8);
      v105 += 8;
      v65(v59, v60);
      uint64_t v86 = (uint64_t (*)(char *, uint64_t))v65;
      uint64_t v85 = v58;
      if (v62 == 6775156 && v64 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = v103;
        uint64_t v67 = v52;
        uint64_t v51 = (uint64_t)v95;
        goto LABEL_11;
      }
      char v68 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      uint64_t v66 = v103;
      uint64_t v67 = v52;
      uint64_t v51 = (uint64_t)v95;
      if (v68)
      {
LABEL_11:
        uint64_t v69 = v100;
        uint64_t v70 = v102;
        ((void (*)(char *, uint64_t, uint64_t))v99)(v100, v67, v102);
        uint64_t v71 = v101;
        sub_1C3DBA558();
        char v72 = sub_1C3DB9BE8();
        uint64_t v73 = v106;
        ((void (*)(char *, uint64_t))v106)(v71, v70);
        ((void (*)(char *, uint64_t))v73)(v69, v70);
        if ((v72 & 1) == 0)
        {
          uint64_t v75 = (void (*)(unsigned char *, void))sub_1C3DBA5C8();
          uint64_t v76 = v96;
          uint64_t v77 = v98;
          v84(v96);
          v75(v112, 0);
          uint64_t v78 = v107;
          v92(v107, v51, v66);
          sub_1C3DBA568();
          v88(v78, v66);
          uint64_t v79 = sub_1C3DB9408();
          uint64_t v81 = v80;
          sub_1C3C2A448(v51, &qword_1EB6FC540);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v110, v111);
          (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
          uint64_t result = v86(v76, v77);
          uint64_t v82 = v109;
          *uint64_t v109 = v79;
          v82[1] = v81;
          return result;
        }
      }
    }
    sub_1C3C2A448(v51, &qword_1EB6FC540);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v110, v111);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v89, v91);
    goto LABEL_13;
  }
  uint64_t result = sub_1C3C2A448((uint64_t)v26, &qword_1EB6FC788);
LABEL_13:
  unint64_t v74 = v109;
  *uint64_t v109 = 0;
  v74[1] = 0;
  return result;
}

uint64_t sub_1C3C38634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C3C3869C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NotesShared::TagID __swiftcall TagID.init(_:)(ICHashtag *a1)
{
  uint64_t v3 = v1;
  id v4 = [(ICHashtag *)a1 displayText];
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_1C3DB9C38();
    uint64_t v9 = v8;

    uint64_t *v3 = v7;
    v3[1] = v9;
  }
  else
  {
    __break(1u);
  }
  result.displayText._unint64_t object = v5;
  result.displayText._uint64_t countAndFlagsBits = (uint64_t)v4;
  return result;
}

unint64_t sub_1C3C38754(void *a1)
{
  a1[1] = sub_1C3C3878C();
  a1[2] = sub_1C3C387E0();
  unint64_t result = sub_1C3C38834();
  a1[3] = result;
  return result;
}

unint64_t sub_1C3C3878C()
{
  unint64_t result = qword_1EA385EF0;
  if (!qword_1EA385EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385EF0);
  }
  return result;
}

unint64_t sub_1C3C387E0()
{
  unint64_t result = qword_1EA385EF8;
  if (!qword_1EA385EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385EF8);
  }
  return result;
}

unint64_t sub_1C3C38834()
{
  unint64_t result = qword_1EA385F00;
  if (!qword_1EA385F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385F00);
  }
  return result;
}

unint64_t sub_1C3C3888C()
{
  unint64_t result = qword_1EA385F08[0];
  if (!qword_1EA385F08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA385F08);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TagID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TagID()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for TagID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TagID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TagID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TagID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagID()
{
  return &type metadata for TagID;
}

Swift::Void __swiftcall ICNote.associateAppEntity(with:)(CSSearchableItemAttributeSet with)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB6FC7E0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C3C38CA4((uint64_t (*)(void))sub_1C3C394F0, sub_1C3C394EC, v10);
  sub_1C3C28D88(v10[0], v11, v12, (uint64_t)v4);
  uint64_t v5 = sub_1C3DB88F8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C3C36FB8((uint64_t)v4);
  }
  else
  {
    sub_1C3DB87E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v1, sel_title);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1C3DB9C38();
  }
  sub_1C3C29C88(MEMORY[0x1E4FBC860]);
  sub_1C3DBA888();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C3C38C4C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C3C38CA4((uint64_t (*)(void))sub_1C3C394F0, sub_1C3C394EC, a1);
}

uint64_t sub_1C3C38C78@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C3C38CA4((uint64_t (*)(void))sub_1C3C2A6CC, sub_1C3C2A6E4, a1);
}

uint64_t sub_1C3C38CA4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v57 = a3;
  uint64_t v5 = sub_1C3DB9048();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v48 - v9;
  id v11 = objc_msgSend(v3, sel_objectID);
  if (!objc_msgSend(v11, sel_ic_isModernType)) {
    objc_msgSend(v11, sel_ic_isLegacyType);
  }

  uint64_t v51 = &v48;
  MEMORY[0x1F4188790](v12);
  int v56 = v13;
  *((unsigned char *)&v48 - 16) = v13;
  uint64_t v14 = qword_1EB6FC7B0;
  id v15 = v3;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v5, (uint64_t)qword_1EB6FC798);
  uint64_t v17 = v6;
  uint64_t v52 = *(void (**)(char *))(v6 + 16);
  uint64_t v53 = v16;
  v52(v10);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 2;
  if (sub_1C3D6958C(v18, a1))
  {
  }
  else
  {
    os_log_type_t v19 = sub_1C3DBA6B8();
    uint64_t v20 = sub_1C3DB9028();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      LODWORD(v54) = v19;
      uint64_t v22 = v21;
      uint64_t v50 = swift_slowAlloc();
      int v61 = (void *)v50;
      *(_DWORD *)uint64_t v22 = 136315650;
      os_log_t v49 = v20;
      uint64_t v23 = sub_1C3DBACC8();
      uint64_t v59 = sub_1C3C516D0(v23, v24, (uint64_t *)&v61);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      uint64_t v59 = 16;
      sub_1C3DBA9A8();
      *(_WORD *)(v22 + 22) = 2080;
      uint64_t v48 = v22 + 24;
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      sub_1C3DBAC68();
      sub_1C3DB9D68();
      id v25 = objc_msgSend(v15, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      uint64_t v17 = v6;
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_1C3C516D0(v59, v60, (uint64_t *)&v61);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      os_log_t v26 = v49;
      _os_log_impl(&dword_1C3A61000, v49, (os_log_type_t)v54, "Failed assertion at %s:%lu: %s", (uint8_t *)v22, 0x20u);
      uint64_t v27 = v50;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v27, -1, -1);
      MEMORY[0x1C877E600](v22, -1, -1);

      uint64_t v28 = v6;
      goto LABEL_11;
    }
  }
  uint64_t v28 = v6;
LABEL_11:
  int v54 = *(void (**)(char *, uint64_t))(v28 + 8);
  v54(v10, v5);
  swift_release();
  id v29 = objc_msgSend(v15, sel_identifier);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1C3DB9C38();

    uint64_t v31 = sub_1C3DB9C98();
    unint64_t v33 = v32;
    id v29 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xE000000000000000;
  }
  MEMORY[0x1F4188790](v29);
  *(&v48 - 2) = v31;
  *(&v48 - 1) = v33;
  uint64_t v34 = v58;
  ((void (*)(char *, uint64_t, uint64_t))v52)(v58, v53, v5);
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = 2;
  id v36 = v15;
  if (sub_1C3D6958C(v35, v55))
  {

    v54(v34, v5);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v55 = (uint64_t (*)(void))&v48;
    os_log_type_t v38 = sub_1C3DBA6B8();
    id v39 = sub_1C3DB9028();
    if (os_log_type_enabled(v39, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      LODWORD(v52) = v38;
      uint64_t v41 = v40;
      uint64_t v51 = (void *)swift_slowAlloc();
      int v61 = v51;
      *(_DWORD *)uint64_t v41 = 136315650;
      uint64_t v42 = sub_1C3DBACC8();
      uint64_t v53 = v17;
      uint64_t v59 = sub_1C3C516D0(v42, v43, (uint64_t *)&v61);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2048;
      uint64_t v59 = 18;
      sub_1C3DBA9A8();
      *(_WORD *)(v41 + 22) = 2080;
      uint64_t v50 = v41 + 24;
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      sub_1C3DBAC68();
      swift_bridgeObjectRelease();
      uint64_t v59 = 0xD000000000000026;
      unint64_t v60 = 0x80000001C3DF2050;
      id v44 = objc_msgSend(v36, sel_ic_loggingDescription);
      sub_1C3DB9C38();

      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_1C3C516D0(v59, v60, (uint64_t *)&v61);
      sub_1C3DBA9A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C3A61000, v39, (os_log_type_t)v52, "Failed assertion at %s:%lu: %s", (uint8_t *)v41, 0x20u);
      unint64_t v45 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C877E600](v45, -1, -1);
      MEMORY[0x1C877E600](v41, -1, -1);

      id v46 = v58;
    }
    else
    {

      id v46 = v34;
    }
    v54(v46, v5);
    uint64_t result = swift_release();
  }
  uint64_t v47 = v57;
  unsigned char *v57 = v56;
  *((void *)v47 + 1) = v31;
  *((void *)v47 + 2) = v33;
  return result;
}

uint64_t sub_1C3C394DC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C3C394F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

_OWORD *sub_1C3C394FC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.Parameters(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x310], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnknownCommand()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3C395CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C3CC0D8C(a3, a4);
  if (!v4)
  {
    if (v10)
    {
      sub_1C3DBAC68();
      sub_1C3C39874(a1, a2, a3, a4);
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      sub_1C3DBB248();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9B58();
      sub_1C3DB9D68();
      swift_bridgeObjectRelease();
      sub_1C3DB9D68();
      return 0;
    }
    else
    {
      return sub_1C3C39874(a1, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1C3C39850(uint64_t a1)
{
  return sub_1C3C395CC(*v1, v1[1], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1C3C39874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(a4 + 8) + 8))(a3);
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
    sub_1C3DB9D68();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    sub_1C3DB9B58();
  }
  else
  {
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(a4 + 8) + 8))(a3);
  }
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  sub_1C3DB9D68();
  return 0x20919B9FF020;
}

uint64_t static FastSync.Notes.messageIdentifier.getter()
{
  return 0x7365746F4ELL;
}

uint64_t sub_1C3C39B40()
{
  return 0x7365746F4ELL;
}

uint64_t static FastSync.PaperKit.messageIdentifier.getter()
{
  return 0x74694B7265706150;
}

uint64_t sub_1C3C39B6C()
{
  return 0x74694B7265706150;
}

ValueMetadata *type metadata accessor for FastSync()
{
  return &type metadata for FastSync;
}

ValueMetadata *type metadata accessor for FastSync.Notes()
{
  return &type metadata for FastSync.Notes;
}

ValueMetadata *type metadata accessor for FastSync.PaperKit()
{
  return &type metadata for FastSync.PaperKit;
}

NotesShared::NotesServiceConnection::Environment_optional __swiftcall NotesServiceConnection.Environment.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  unsigned char *v1 = v2;
  return (NotesShared::NotesServiceConnection::Environment_optional)rawValue;
}

uint64_t NotesServiceConnection.Environment.rawValue.getter()
{
  return *v0 + 1;
}

BOOL sub_1C3C39BE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1C3C39BFC()
{
  unint64_t result = qword_1EA385F90;
  if (!qword_1EA385F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA385F90);
  }
  return result;
}

uint64_t sub_1C3C39C50()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C39C98()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3C39CC8()
{
  return sub_1C3DBB608();
}

NotesShared::NotesServiceConnection::Environment_optional sub_1C3C39D0C(Swift::Int *a1)
{
  return NotesServiceConnection.Environment.init(rawValue:)(*a1);
}

void sub_1C3C39D14(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

ValueMetadata *type metadata accessor for NotesServiceConnection()
{
  return &type metadata for NotesServiceConnection;
}

uint64_t getEnumTagSinglePayload for NotesServiceConnection.Environment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NotesServiceConnection.Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3C39E90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotesServiceConnection.Environment()
{
  return &type metadata for NotesServiceConnection.Environment;
}

uint64_t sub_1C3C39EC8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C3C9D3E4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v14;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C877C220](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      id v8 = objc_msgSend(v6, sel_range);
      uint64_t v10 = v9;

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C3C9D3E4(v11 > 1, v12 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C3DBAFB8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C3C3A030(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C3C9D404(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v15 = type metadata accessor for PersistedActivityEvent();
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80));
    uint64_t v14 = *(void *)(*(void *)(v15 - 8) + 72);
    do
    {
      uint64_t v5 = (uint64_t *)(v4 + *(int *)(v15 + 24));
      uint64_t v6 = *v5;
      uint64_t v7 = v5[1];
      uint64_t v8 = v5[2];
      uint64_t v9 = v5[3];
      unint64_t v11 = *(void *)(v16 + 16);
      unint64_t v10 = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_1C3C9D404(v10 > 1, v11 + 1, 1);
      }
      v4 += v14;
      *(void *)(v16 + 16) = v11 + 1;
      unint64_t v12 = (void *)(v16 + 32 * v11);
      v12[4] = v6;
      v12[5] = v7;
      v12[6] = v8;
      v12[7] = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3C3A190(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C3C9D404(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v16, v5, v6);
      uint64_t v7 = v16[0];
      uint64_t v8 = v16[1];
      uint64_t v10 = v16[2];
      uint64_t v9 = v16[3];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C3C9D404(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C3C9D404(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v17;
      }
      *(void *)(v2 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v2 + 32 * v13);
      v14[4] = v7;
      void v14[5] = v8;
      v14[6] = v10;
      v14[7] = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3C3A2DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C3C9D1E0(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1C3C9D1E0(v7 > 1, v8 + 1, 1);
      }
      v4 += 4;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C3C3A3B4()
{
  uint64_t v0 = sub_1C3DB9048();
  __swift_allocate_value_buffer(v0, qword_1EA385F98);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA385F98);
  if (qword_1EB6FC718 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB6FC520);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL static ICActivityStreamDigest.Summary.Formats.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ICActivityStreamDigest.Summary.Formats.hash(into:)()
{
  return sub_1C3DBB5E8();
}

void *static ICActivityStreamDigest.Summary.Formats.allCases.getter()
{
  return &unk_1F1F283D0;
}

uint64_t ICActivityStreamDigest.Summary.Formats.hashValue.getter()
{
  return sub_1C3DBB608();
}

BOOL sub_1C3C3A514(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s11NotesShared12CallerOriginO9hashValueSivg_0()
{
  return sub_1C3DBB608();
}

uint64_t sub_1C3C3A574()
{
  return sub_1C3DBB5E8();
}

uint64_t sub_1C3C3A5A0()
{
  return sub_1C3DBB608();
}

void sub_1C3C3A5E4(void *a1@<X8>)
{
  *a1 = &unk_1F1F283F8;
}

uint64_t ICActivityStreamDigest.Summary.Participants.userIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.Participants.userIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.userIds.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsCurrentUser.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsCurrentUser.setter(uint64_t result)
{
  *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x310], 8) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.containsCurrentUser.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsEveryone.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t ICActivityStreamDigest.Summary.Participants.containsEveryone.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.containsEveryone.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.unknownUserCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ICActivityStreamDigest.Summary.Participants.unknownUserCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.unknownUserCount.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.Participants.names.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.Participants.names.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a1;
  return result;
}

void (*ICActivityStreamDigest.Summary.Participants.names.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

void ICActivityStreamDigest.Summary.format.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ICActivityStreamDigest.Summary.format.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void (*ICActivityStreamDigest.Summary.format.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.markdown.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICActivityStreamDigest.Summary.markdown.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + _Block_object_dispose(&STACK[0x310], 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

void (*ICActivityStreamDigest.Summary.markdown.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.participants.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 33);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + _Block_object_dispose(&STACK[0x310], 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ICActivityStreamDigest.Summary.participants.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
  *(unsigned char *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 33) = v4;
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 4_Block_object_dispose(&STACK[0x310], 8) = v6;
  return result;
}

void (*ICActivityStreamDigest.Summary.participants.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.Summary.isNavigable.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ICActivityStreamDigest.Summary.isNavigable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

void (*ICActivityStreamDigest.Summary.isNavigable.modify())(google::protobuf::io::ZeroCopyOutputStream *__hidden this)
{
  return google::protobuf::io::ZeroCopyOutputStream::~ZeroCopyOutputStream;
}

uint64_t ICActivityStreamDigest.init(resolver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  uint64_t v68 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v65 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v63 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)&v63 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v63 - v14;
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t ObjectType = swift_getObjectType();
  id v18 = objc_msgSend(v16, sel_initWithResolver_, a1);
  if (v18)
  {
    os_log_type_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
    id v20 = v18;
    uint64_t v70 = v19;
    uint64_t v71 = ObjectType;
    uint64_t v72 = a2 + 8;
    uint64_t v21 = v19(ObjectType, a2);
    uint64_t v69 = a2;
    if (v21)
    {
      uint64_t v22 = (void *)v21;
      self;
      uint64_t v23 = swift_dynamicCastObjCClass();
      if (v23)
      {
        unint64_t v24 = (void *)v23;
        id v63 = v22;
        id v25 = objc_msgSend(v24, sel_lastActivitySummaryViewedDate);
        if (v25)
        {
          os_log_t v26 = v66;
          sub_1C3DB8AC8();

          uint64_t v27 = v68;
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v15, v26, v4);
          uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v64(v15, 0, 1, v4);
          uint64_t v28 = v20;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v15, 1, v4) == 1)
          {
            id v25 = 0;
          }
          else
          {
            id v25 = (id)sub_1C3DB8A88();
            (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v4);
          }
        }
        else
        {
          uint64_t v27 = v68;
          uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
          v64(v15, 1, 1, v4);
          uint64_t v28 = v20;
        }
        objc_msgSend(v28, sel_setLastActivitySummaryViewedDate_, v25);

        id v45 = objc_msgSend(v24, sel_recentUpdatesGenerationDate);
        if (v45)
        {
          id v46 = v45;
          uint64_t v47 = (uint64_t)v65;
          sub_1C3DB8AC8();

          uint64_t v48 = 0;
        }
        else
        {
          uint64_t v48 = 1;
          uint64_t v47 = (uint64_t)v65;
        }
        os_log_t v49 = v64;
        v64((char *)v47, v48, 1, v4);
        sub_1C3C49904(v47, (uint64_t)v11);
        uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        if (v50(v11, 1, v4))
        {
          sub_1C3C2A448((uint64_t)v11, &qword_1EB6FB1B8);
          v49(v67, 1, 1, v4);
          uint64_t v51 = 0;
        }
        else
        {
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
          uint64_t v64 = v49;
          uint64_t v53 = v66;
          v52(v66, v11, v4);
          sub_1C3C2A448((uint64_t)v11, &qword_1EB6FB1B8);
          int v54 = v67;
          sub_1C3DB89E8();
          uint64_t v55 = *(void (**)(char *, uint64_t))(v27 + 8);
          v55(v53, v4);
          v64(v54, 0, 1, v4);
          if (v50(v54, 1, v4) == 1)
          {
            uint64_t v51 = 0;
          }
          else
          {
            uint64_t v51 = (void *)sub_1C3DB8A88();
            v55(v54, v4);
          }
        }
        a2 = v69;
        objc_msgSend(v28, sel_setRecentUpdatesGenerationDate_, v51);
        id v56 = v63;

        uint64_t v30 = v70;
        uint64_t v29 = v71;
LABEL_31:
        uint64_t v57 = (void *)v30(v29, a2);
        uint64_t v58 = sub_1C3C3B194(v57);

        swift_unknownObjectRetain();
        uint64_t v59 = (void *)sub_1C3C496B0(v58, a1, a2);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v73 = v59;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C3C495F4(&v73, (uint64_t (*)(uint64_t, uint64_t))sub_1C3C4C9F0, 0, KeyPath);
        swift_bridgeObjectRelease();
        swift_release_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
        int v61 = (void *)sub_1C3DB9FF8();
        swift_release();
        objc_msgSend(v28, sel_setRecentActivityEventsStorage_, v61);

        swift_unknownObjectRelease();
        return (uint64_t)v28;
      }

      a2 = v69;
    }
    uint64_t v28 = v20;
    objc_msgSend(v20, sel_setLastActivitySummaryViewedDate_, 0);
    objc_msgSend(v20, sel_setRecentUpdatesGenerationDate_, 0);
    uint64_t v30 = v70;
    uint64_t v29 = v71;
    uint64_t v31 = v70(v71, a2);
    if (v31)
    {
      unint64_t v32 = (void *)v31;
      if (qword_1EA385688 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C3DB9048();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EA385F98);
      id v34 = v32;
      uint64_t v35 = sub_1C3DB9028();
      os_log_type_t v36 = sub_1C3DBA688();
      if (os_log_type_enabled(v35, v36))
      {
        unint64_t v37 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v37 = 138412290;
        id v39 = objc_msgSend(v34, sel_objectID);
        uint64_t v73 = v39;
        uint64_t v30 = v70;
        sub_1C3DBA9A8();
        void *v38 = v39;

        _os_log_impl(&dword_1C3A61000, v35, v36, "Object does not support activity digests {objectID: %@}", v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC730);
        swift_arrayDestroy();
        uint64_t v40 = v38;
        uint64_t v29 = v71;
        MEMORY[0x1C877E600](v40, -1, -1);
        MEMORY[0x1C877E600](v37, -1, -1);
      }
      else
      {
      }
      a2 = v69;
    }
    else
    {
      if (qword_1EA385688 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C3DB9048();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EA385F98);
      uint64_t v42 = sub_1C3DB9028();
      os_log_type_t v43 = sub_1C3DBA6A8();
      if (os_log_type_enabled(v42, v43))
      {
        id v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v44 = 0;
        _os_log_impl(&dword_1C3A61000, v42, v43, "Cannot create activity digest without object", v44, 2u);
        MEMORY[0x1C877E600](v44, -1, -1);
      }
    }
    goto LABEL_31;
  }
  __break(1u);
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C3C3B194(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v57 = type metadata accessor for NoteEditActivityEvent.Parents(0);
  MEMORY[0x1F4188790](v57);
  uint64_t v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v53 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v53 - v13;
  uint64_t v15 = sub_1C3DB8AF8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  os_log_type_t v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v53 - v20;
  id v22 = objc_msgSend(v2, sel_recentUpdatesGenerationDate);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v55 = v5;
    id v56 = v9;
    sub_1C3DB8AC8();

    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v14, v19, v15);
    id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v25(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v24(v21, v14, v15);
      if (a1)
      {
        uint64_t v26 = ICCloudSyncingObject.sharedRootActivityEvents.getter();
        MEMORY[0x1F4188790](v26);
        v53[-2] = v21;
        uint64_t v28 = sub_1C3D774C0((uint64_t)sub_1C3C4C9D4, (uint64_t)&v53[-4], v27);
        uint64_t v29 = ICCloudSyncingObject.persistedActivityEvents.getter();
        MEMORY[0x1F4188790](v29);
        v53[-2] = v21;
        uint64_t v31 = sub_1C3D774C0((uint64_t)sub_1C3C4C894, (uint64_t)&v53[-4], v30);
        v53[1] = 0;
        uint64_t v54 = v31;
        self;
        uint64_t v32 = swift_dynamicCastObjCClass();
        if (v32)
        {
          uint64_t v33 = (void *)v32;
          v53[0] = v28;
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v21, v15);
          v25(v12, 0, 1, v15);
          uint64_t v34 = (uint64_t)v56;
          v25(v56, 1, 1, v15);
          id v35 = a1;
          id v36 = objc_msgSend(v33, sel_mergeableString);
          self;
          uint64_t v37 = swift_dynamicCastObjCClass();
          if (v37)
          {
            os_log_type_t v38 = (void *)v37;
            uint64_t v39 = (uint64_t)v55;
            *uint64_t v55 = v33;
            swift_storeEnumTagMultiPayload();
            id v40 = v35;
            uint64_t v41 = _s11NotesShared21NoteEditActivityEventV6events3for2in14afterTimestamp06recentK0SayACGSo29ICTTMergeableAttributedStringC_AC7ParentsO10Foundation4DateVSgAQtFZ_0(v38, v39, (uint64_t)v12, v34);

            sub_1C3C4C974(v39, type metadata accessor for NoteEditActivityEvent.Parents);
          }
          else
          {

            uint64_t v41 = MEMORY[0x1E4FBC860];
          }
          sub_1C3C2A448(v34, &qword_1EB6FB1B8);
          sub_1C3C2A448((uint64_t)v12, &qword_1EB6FB1B8);
          id v44 = objc_msgSend(v33, sel_visibleAttachments);
          sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA388CA0);
          sub_1C3C4C8F0();
          uint64_t v45 = sub_1C3DBA438();

          MEMORY[0x1F4188790](v46);
          v53[-2] = v21;
          uint64_t v47 = sub_1C3D77030((void (*)(uint64_t *__return_ptr, void *))sub_1C3C4C958, (uint64_t)&v53[-4], v45);
          swift_bridgeObjectRelease();
          uint64_t v58 = v53[0];
          sub_1C3D78EA4(v54);
          uint64_t v48 = v58;
          uint64_t v49 = sub_1C3D78680(v41);
          swift_bridgeObjectRelease();
          uint64_t v58 = v48;
          sub_1C3D78EA4(v49);
          uint64_t v50 = v58;
          uint64_t v51 = sub_1C3D78680(v47);
          swift_bridgeObjectRelease();
          uint64_t v58 = v50;
          sub_1C3D78EA4(v51);

          goto LABEL_14;
        }
        uint64_t v43 = v54;
      }
      else
      {
        uint64_t v43 = MEMORY[0x1E4FBC860];
        uint64_t v28 = MEMORY[0x1E4FBC860];
      }
      uint64_t v58 = v28;
      sub_1C3D78EA4(v43);
LABEL_14:
      uint64_t v42 = v58;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      return v42;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1C3C2A448((uint64_t)v14, &qword_1EB6FB1B8);
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C3C3B784(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1C3C3B7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C3DB8AF8();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
}

uint64_t sub_1C3C3B8D8(void *a1)
{
  uint64_t v2 = sub_1C3DB8AF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  LOBYTE(a1) = sub_1C3DB8A98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

uint64_t sub_1C3C3B9F8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = sub_1C3DB8AF8();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a2, v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v11, 0, 1, v13);
  v15(v9, 1, 1, v13);
  uint64_t v16 = _s11NotesShared21NoteEditActivityEventV6events3for14afterTimestamp06recentJ0SayACGSo12ICAttachmentC_10Foundation4DateVSgANtFZ_0(v12, (uint64_t)v11, (uint64_t)v9);
  sub_1C3C2A448((uint64_t)v9, &qword_1EB6FB1B8);
  uint64_t result = sub_1C3C2A448((uint64_t)v11, &qword_1EB6FB1B8);
  *a3 = v16;
  return result;
}

id ICActivityStreamDigest.recentUpdatesFilter.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)v24 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = sub_1C3DB8AF8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, sel_recentActivityEventsStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  v24[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v24[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v25, v24[0] + 16);
  uint64_t v15 = sub_1C3C47964((uint64_t)v24, (uint64_t *)&unk_1EB6FC440, &qword_1EA3860B0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  sub_1C3C2A448((uint64_t)v25, qword_1EB6FB1D8);
  if (*(void *)(v15 + 16))
  {
    sub_1C3C49A14(v15 + 32, (uint64_t)&v26);
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)&v27 + 1);
  if (!*((void *)&v27 + 1))
  {
    sub_1C3C2A448((uint64_t)&v26, &qword_1EB6FC418);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  uint64_t v17 = v28;
  __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v18(v10, 0, 1, v11);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    sub_1C3C2A448((uint64_t)v10, &qword_1EB6FB1B8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id v19 = objc_msgSend(v1, sel_recentUpdatesGenerationDate);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_1C3DB8AC8();

    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  v18(v8, v21, 1, v11);
  sub_1C3C4C8B4(0, (unint64_t *)&qword_1EA385FB0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v5, v14, v11);
  v18(v5, 0, 1, v11);
  id v22 = ICTTTextEditFilter.init(allowedUserIDs:allowedAttachmentIDs:allowsMissingTimestamps:allowsMissingUsers:fromDate:toDate:)(0, 0, 0, 0, (uint64_t)v8, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v22;
}

uint64_t sub_1C3C3BFB8(void *a1)
{
  if (objc_msgSend(v1, sel_resolverStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  v11[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v11[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v12, v11[0] + 16);
  sub_1C3C45734((uint64_t)v11);
  uint64_t v4 = v3;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  sub_1C3C2A448((uint64_t)v12, qword_1EB6FB1D8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease();
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = ICCloudSyncingObject.activityEvents.getter();

  id v8 = a1;
  uint64_t v9 = sub_1C3C49B0C((uint64_t)v7, (uint64_t)v8, (uint64_t (*)(long long *, uint64_t))sub_1C3C3C104);

  return v9;
}

BOOL sub_1C3C3C104(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v50 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v46 - v7;
  uint64_t v9 = sub_1C3DB8AF8();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v49 = (char *)&v46 - v15;
  id v16 = objc_msgSend(a2, sel_allowedUserIDs);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_1C3DBA438();

    uint64_t v20 = a1[3];
    uint64_t v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 48))(v52, v20, v19);
    uint64_t v21 = v52[0];
    uint64_t v22 = v52[1];
    swift_bridgeObjectRelease();
    LOBYTE(v21) = sub_1C3D40720(v21, v22, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  id v23 = objc_msgSend(a2, sel_allowedAttachmentIDs);
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v25 = sub_1C3DBA438();

    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
    LOBYTE(v26) = sub_1C3C3C6C8(v28, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      return 0;
    }
  }
  id v29 = objc_msgSend(a2, sel_fromDate);
  if (!v29)
  {
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v47(v8, 1, 1, v9);
    goto LABEL_10;
  }
  uint64_t v30 = v29;
  sub_1C3DB8AC8();

  uint64_t v31 = v51;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v32(v8, v14, v9);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v47(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_1C3C2A448((uint64_t)v8, &qword_1EB6FB1B8);
    uint64_t v31 = v51;
    goto LABEL_11;
  }
  v32(v49, v8, v9);
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
  sub_1C3C4C6EC();
  id v35 = v49;
  LOBYTE(v33) = sub_1C3DB9B98();
  id v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  v36(v14, v9);
  v36(v35, v9);
  if (v33) {
    return 0;
  }
LABEL_11:
  id v38 = objc_msgSend(a2, sel_toDate);
  if (!v38)
  {
    uint64_t v41 = (uint64_t)v50;
    v47(v50, 1, 1, v9);
    goto LABEL_16;
  }
  uint64_t v39 = v38;
  sub_1C3DB8AC8();

  id v40 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v41 = (uint64_t)v50;
  v40(v50, v14, v9);
  v47((char *)v41, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v41, 1, v9) == 1)
  {
LABEL_16:
    sub_1C3C2A448(v41, &qword_1EB6FB1B8);
    return 1;
  }
  uint64_t v42 = v48;
  v40(v48, (char *)v41, v9);
  uint64_t v43 = a1[3];
  uint64_t v44 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  sub_1C3C4C6EC();
  LOBYTE(v43) = sub_1C3DB9B98();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v31 + 8);
  v45(v14, v9);
  v45(v42, v9);
  return (v43 & 1) == 0;
}

uint64_t sub_1C3C3C6C8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v11;
      if (!v8) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v12 + 2;
      if (v12 + 2 >= v31) {
        goto LABEL_48;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v12 + 3;
        if (v12 + 3 >= v31) {
          goto LABEL_48;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_1C3DBB5D8();
      swift_bridgeObjectRetain();
      sub_1C3DB9D08();
      uint64_t v21 = sub_1C3DBB608();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        uint64_t v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_1C3DBB3B8() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_45:
          sub_1C3C4C744();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_1C3DBB3B8() & 1) != 0) {
            goto LABEL_44;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_45;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_30;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

id ICActivityStreamDigest.hasUnseenHighlights.getter()
{
  id result = objc_msgSend(v0, sel_objc_hasUnseenSummary);
  if (result)
  {
    ICActivityStreamDigest.recentUpdatesRange.getter();
    return (id)((v2 & 1) == 0);
  }
  return result;
}

uint64_t ICActivityStreamDigest.recentUpdatesRange.getter()
{
  if (objc_msgSend(v0, sel_resolverStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v15[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v15[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v16, v15[0] + 16);
  sub_1C3C45734((uint64_t)v15);
  uint64_t v2 = v1;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1C3C2A448((uint64_t)v16, qword_1EB6FB1D8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  if (!v4) {
    return 0;
  }
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (!v5
    || (uint64_t v6 = v5, (v7 = objc_msgSend(v0, sel_objc_recentUpdatesFilter)) == 0))
  {

    return 0;
  }
  unint64_t v8 = v7;
  id v9 = objc_msgSend(objc_allocWithZone((Class)ICTTTextEditGrouper), sel_initWithNote_, v6);
  objc_msgSend(v9, sel_setJoinsWhitespaceAndNewlineGaps_, 1);
  objc_msgSend(v9, sel_setFilter_, v8);
  id v10 = objc_msgSend(v9, sel_groupedEdits);
  sub_1C3C4C8B4(0, &qword_1EA385FB8);
  unint64_t v11 = sub_1C3DBA018();

  uint64_t v12 = sub_1C3C39EC8(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C3D70FC4(v12);

  return v13;
}

uint64_t ICActivityStreamDigest.hasUnseenSummary.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FB1B8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_1C3DB8AF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  int64_t v15 = (char *)&v37 - v14;
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v37 - v16;
  if (objc_msgSend(v1, sel_recentActivityEventsStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  v46[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v46[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)&v43, v46[0] + 16);
  uint64_t v18 = sub_1C3C47964((uint64_t)v46, (uint64_t *)&unk_1EB6FC440, &qword_1EA3860B0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
  sub_1C3C2A448((uint64_t)&v43, qword_1EB6FB1D8);
  id v19 = v1;
  uint64_t v20 = sub_1C3C49B0C(v18, (uint64_t)v19, (uint64_t (*)(long long *, uint64_t))sub_1C3C3D14C);

  id v21 = objc_msgSend(v19, sel_lastActivitySummaryViewedDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_9;
  }
  uint64_t v22 = v21;
  id v40 = v12;
  uint64_t v41 = v5;
  uint64_t v42 = v17;
  sub_1C3DB8AC8();

  unint64_t v23 = v15;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v24(v7, v23, v8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v25(v7, 0, 1, v8);
  BOOL v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v26(v7, 1, v8) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t)v7;
LABEL_16:
    sub_1C3C2A448(v27, &qword_1EB6FB1B8);
    char v34 = 0;
    return v34 & 1;
  }
  uint64_t v39 = v25;
  v24(v42, v7, v8);
  if (*(void *)(v20 + 16))
  {
    sub_1C3C49A14(v20 + 32, (uint64_t)&v43);
  }
  else
  {
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
  }
  uint64_t v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)&v44 + 1);
  if (!*((void *)&v44 + 1))
  {
    sub_1C3C2A448((uint64_t)&v43, &qword_1EB6FC418);
    uint64_t v31 = (uint64_t)v41;
    v39(v41, 1, 1, v8);
    goto LABEL_15;
  }
  id v38 = (void (*)(char *, uint64_t, uint64_t))v24;
  uint64_t v30 = v45;
  __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
  uint64_t v31 = (uint64_t)v41;
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  v39((char *)v31, 0, 1, v8);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
  if (v28(v31, 1, v8) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v42, v8);
    uint64_t v27 = v31;
    goto LABEL_16;
  }
  uint64_t v32 = v40;
  v38(v40, v31, v8);
  uint64_t v33 = v42;
  char v34 = sub_1C3DB89C8();
  id v35 = *(void (**)(char *, uint64_t))(v9 + 8);
  v35(v32, v8);
  v35(v33, v8);
  return v34 & 1;
}

BOOL sub_1C3C3D14C(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v22, v3, v4);
  uint64_t v6 = v22[0];
  uint64_t v5 = v22[1];
  if (objc_msgSend(a2, sel_resolverStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v20[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v21, v20[0] + 16);
  sub_1C3C45734((uint64_t)v20);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  sub_1C3C2A448((uint64_t)v21, qword_1EB6FB1D8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)v10(ObjectType, v8);
  if (v11
    && (uint64_t v12 = v11,
        id v13 = objc_msgSend(v11, sel_cloudAccount, v20[0]),
        v12,
        v13))
  {
    id v14 = objc_msgSend(v13, sel_userRecordName);

    uint64_t v15 = sub_1C3DB9C38();
    uint64_t v17 = v16;

    if (v6 == v15 && v5 == v17) {
      char v18 = 1;
    }
    else {
      char v18 = sub_1C3DBB3B8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    char v18 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v18 & 1) == 0;
}

BOOL ICActivityStreamDigest.hasRecentUpdates.getter()
{
  if (objc_msgSend(v0, sel_recentActivityEventsStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v4[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)&v5, v4[0] + 16);
  uint64_t v1 = sub_1C3C47964((uint64_t)v4, (uint64_t *)&unk_1EB6FC440, &qword_1EA3860B0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  sub_1C3C2A448((uint64_t)&v5, qword_1EB6FB1D8);
  LOBYTE(v4[0]) = 1;
  ICActivityStreamDigest.summary(for:format:)(v1, (unsigned __int8 *)v4, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  if ((void)v6) {
    sub_1C3C4A3D0(v5, *((uint64_t *)&v5 + 1), v6);
  }
  return v2 != 0;
}

uint64_t ICActivityStreamDigest.summary(for:format:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v96 = sub_1C3DBB668();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  int v94 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v115 = MEMORY[0x1E4FBC860];
  uint64_t v116 = (void *)MEMORY[0x1E4FBC860];
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v113 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C3C495F4((void **)&v113, (uint64_t (*)(uint64_t, uint64_t))sub_1C3C3EB68, 0, KeyPath);
  swift_release();
  swift_release();
  uint64_t v11 = v113;
  LOBYTE(v113) = v9;
  uint64_t v12 = sub_1C3C4ACFC(v11, (unsigned __int8 *)&v113);
  uint64_t v102 = sub_1C3C4A420(v11);
  uint64_t v103 = v13;
  uint64_t v14 = sub_1C3C4AFC8(v11);
  swift_bridgeObjectRetain();
  uint64_t v101 = sub_1C3C49D40(v14, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1C3C4B900(v11);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v100 = sub_1C3C49D40(v15, v12);
  uint64_t v99 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v113) = v9;
  uint64_t v16 = sub_1C3C3EB94(v12, (char *)&v113);
  BOOL v18 = v17 != 0;
  if (v17)
  {
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    id v21 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v21 = sub_1C3D8288C(0, v21[2] + 1, 1, v21);
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1) {
      id v21 = sub_1C3D8288C((void *)(v22 > 1), v23 + 1, 1, v21);
    }
    _OWORD v21[2] = v23 + 1;
    uint64_t v24 = &v21[2 * v23];
    void v24[4] = v19;
    v24[5] = v20;
    uint64_t v116 = v21;
    sub_1C3D79068(v12);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v113) = v9;
  uint64_t v25 = v102;
  swift_bridgeObjectRetain();
  uint64_t v26 = v103;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C3C3F9A0(v25, v26, (char *)&v113);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
LABEL_41:
    uint64_t v54 = sub_1C3C44CA8();
    if (v55)
    {
      uint64_t v56 = v54;
      uint64_t v57 = v55;
      swift_bridgeObjectRelease();
      uint64_t v58 = v116;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v58 = sub_1C3D8288C(0, v58[2] + 1, 1, v58);
      }
      unint64_t v60 = v58[2];
      unint64_t v59 = v58[3];
      if (v60 >= v59 >> 1) {
        uint64_t v58 = sub_1C3D8288C((void *)(v59 > 1), v60 + 1, 1, v58);
      }
      v58[2] = v60 + 1;
      int v61 = &v58[2 * v60];
      v61[4] = v56;
      v61[5] = v57;
      uint64_t v116 = v58;
      uint64_t v62 = v101;
LABEL_54:
      sub_1C3D79068(v62);
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_1C3C45528();
    if (v64)
    {
      uint64_t v65 = v63;
      uint64_t v66 = v64;
      uint64_t v67 = v116;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v67 = sub_1C3D8288C(0, v67[2] + 1, 1, v67);
      }
      uint64_t v68 = v100;
      unint64_t v70 = v67[2];
      unint64_t v69 = v67[3];
      if (v70 >= v69 >> 1)
      {
        uint64_t v87 = sub_1C3D8288C((void *)(v69 > 1), v70 + 1, 1, v67);
        uint64_t v68 = v100;
        uint64_t v67 = v87;
      }
      void v67[2] = v70 + 1;
      uint64_t v71 = &v67[2 * v70];
      v71[4] = v65;
      v71[5] = v66;
      uint64_t v116 = v67;
      uint64_t v62 = v68;
      goto LABEL_54;
    }
LABEL_55:
    swift_bridgeObjectRelease();
LABEL_56:
    uint64_t v72 = (uint64_t)v116;
    if (!v116[2])
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_OWORD *)(a3 + 41) = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)a3 = 0u;
      return result;
    }
    if (v9)
    {
      uint64_t v73 = (uint64_t)v116;
LABEL_66:
      *(void *)&long long v113 = v73;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA386E30);
      sub_1C3C4BDB4((unint64_t *)&qword_1EA385FC0, (uint64_t *)&unk_1EA386E30);
      uint64_t v77 = sub_1C3DB9B88();
      uint64_t v79 = v78;
      swift_bridgeObjectRelease();
      sub_1C3C3E410((uint64_t)&v113);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v80 = v113;
      long long v81 = v114;
      uint64_t v82 = 256;
      if (!BYTE9(v113)) {
        uint64_t v82 = 0;
      }
      uint64_t v83 = v82 | BYTE8(v113);
      *(void *)a3 = v9;
      *(void *)(a3 + _Block_object_dispose(&STACK[0x310], 8) = v77;
      *(void *)(a3 + 16) = v79;
      *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v80;
      *(void *)(a3 + 32) = v83;
      *(_OWORD *)(a3 + 40) = v81;
      *(unsigned char *)(a3 + 56) = v18;
      return result;
    }
    sub_1C3DBB428();
    swift_unknownObjectRetain_n();
    uint64_t v75 = swift_dynamicCastClass();
    if (!v75)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = MEMORY[0x1E4FBC860];
    }
    uint64_t v76 = *(void *)(v75 + 16);
    swift_release();
    if (v76 == 1)
    {
      uint64_t v73 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (v73) {
        goto LABEL_66;
      }
      uint64_t v73 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_1C3C56B08(v72, v72 + 32, 0, 3uLL);
    }
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  uint64_t v97 = v27;
  uint64_t v98 = v29;
  uint64_t v30 = *(void *)(v26 + 16);
  if (!v30)
  {
    char v45 = 0;
LABEL_30:
    uint64_t v46 = v102;
    swift_bridgeObjectRetain();
    id v47 = v4;
    uint64_t v48 = sub_1C3C49ED4(v46, v47);
    swift_bridgeObjectRelease();

    if ((v45 & 1) == 0) {
      goto LABEL_37;
    }
    if (*(void *)(v48 + 16))
    {
      *(void *)&long long v113 = v103;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD8);
      sub_1C3C4BDB4(&qword_1EA385FE0, &qword_1EA385FD8);
      sub_1C3C4BCCC();
      uint64_t v49 = *(void *)(sub_1C3DB9E98() + 16);
      swift_bridgeObjectRelease();
      if (v49 == 2)
      {
        if (v9)
        {
          uint64_t v50 = 0;
          int64_t v51 = 0;
        }
        else
        {
          uint64_t v50 = v116[2];
          int64_t v51 = v50;
        }
        sub_1C3C47E08(v50, v51, v97, v98);
        uint64_t v46 = v48;
      }
      else
      {
        *(void *)&long long v113 = v102;
        uint64_t v84 = *(void *)(sub_1C3DB9E98() + 16);
        swift_bridgeObjectRelease();
        if (v9)
        {
          uint64_t v85 = 0;
          int64_t v86 = 0;
        }
        else
        {
          uint64_t v85 = v116[2];
          int64_t v86 = v85;
        }
        sub_1C3C47E08(v85, v86, v97, v98);
        uint64_t v46 = v102;
        if (v84 == 2) {
          uint64_t v46 = v48;
        }
      }
      goto LABEL_39;
    }
    if (v9)
    {
      uint64_t v52 = 0;
      int64_t v53 = 0;
    }
    else
    {
LABEL_37:
      uint64_t v52 = v116[2];
      int64_t v53 = v52;
    }
    sub_1C3C47E08(v52, v53, v97, v98);
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3D79068(v46);
    if ((v9 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v18 = 1;
      goto LABEL_56;
    }
    BOOL v18 = 1;
    goto LABEL_41;
  }
  uint64_t v92 = v9;
  uint64_t v93 = a3;
  swift_bridgeObjectRetain();
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FC8);
  uint64_t v31 = v26 + 56;
  uint64_t v104 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    uint64_t v32 = *(void *)(v31 - 16);
    uint64_t v106 = *(void *)(v31 - 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (objc_msgSend(v4, sel_resolverStorage))
    {
      sub_1C3DBAA68();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v113 = 0u;
      long long v114 = 0u;
    }
    uint64_t v33 = v4;
    v112[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
    v112[0] = swift_allocObject();
    sub_1C3C499AC((uint64_t)&v113, v112[0] + 16);
    sub_1C3C4BC70((uint64_t)v112, (uint64_t)v111);
    if (!swift_dynamicCast()) {
      break;
    }
    unint64_t v34 = v108;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v112);
    sub_1C3C2A448((uint64_t)&v113, qword_1EB6FB1D8);
    uint64_t ObjectType = swift_getObjectType();
    id v36 = *(uint64_t (**)(uint64_t, unint64_t))(v34 + 8);
    swift_bridgeObjectRetain();
    uint64_t v37 = (void *)v36(ObjectType, v34);
    if (v37
      && (id v38 = v37,
          id v39 = objc_msgSend(v37, sel_cloudAccount),
          v38,
          v39))
    {
      id v40 = objc_msgSend(v39, sel_userRecordName);

      uint64_t v41 = sub_1C3DB9C38();
      uint64_t v43 = v42;

      if (v106 == v41 && v32 == v43)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_28:
        swift_bridgeObjectRelease();
        char v45 = 1;
        a3 = v93;
        uint64_t v4 = v33;
LABEL_29:
        uint64_t v9 = v92;
        goto LABEL_30;
      }
      char v44 = sub_1C3DBB3B8();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (v44) {
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    v31 += 32;
    --v30;
    uint64_t v4 = v33;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      char v45 = 0;
      a3 = v93;
      goto LABEL_29;
    }
  }
  sub_1C3C4BC70((uint64_t)v112, (uint64_t)v111);
  uint64_t v107 = 0;
  unint64_t v108 = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v110, "Cannot cast ");
  HIBYTE(v110[6]) = 0;
  v110[7] = -5120;
  sub_1C3C4BC70((uint64_t)v111, (uint64_t)&v107);
  uint64_t v88 = v94;
  sub_1C3DBB618();
  uint64_t v89 = v96;
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void (**)(char *, uint64_t))(v95 + 8);
  v90(v88, v89);
  sub_1C3DB9D68();
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD0);
  uint64_t v107 = v105;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v90(v88, v89);
  sub_1C3DBAF58();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id ICActivityStreamDigest.recentUpdatesRangeValue.getter()
{
  uint64_t v0 = ICActivityStreamDigest.recentUpdatesRange.getter();
  if (v2) {
    return 0;
  }
  else {
    return objc_msgSend(self, sel_valueWithRange_, v0, v1);
  }
}

uint64_t ICActivityStreamDigest.isCurrentUserMentionedInRecentSummary.getter()
{
  id v1 = objc_msgSend(v0, sel_objc_recentUpdatesFilter);
  if (v1)
  {
    char v2 = v1;
    if (objc_msgSend(v0, sel_resolverStorage))
    {
      sub_1C3DBAA68();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
    v14[0] = swift_allocObject();
    sub_1C3C499AC((uint64_t)v15, v14[0] + 16);
    sub_1C3C45734((uint64_t)v14);
    uint64_t v5 = v4;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
    sub_1C3C2A448((uint64_t)v15, qword_1EB6FB1D8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease();
    if (v7)
    {
      uint64_t v8 = ICCloudSyncingObject.activityEvents.getter();

      id v9 = v2;
      uint64_t v10 = sub_1C3C49B0C((uint64_t)v8, (uint64_t)v9, (uint64_t (*)(long long *, uint64_t))sub_1C3C3C104);
    }
    else
    {
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    sub_1C3C4A420(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3C3E410((uint64_t)v15);
    swift_bridgeObjectRelease();

    char v11 = BYTE8(v15[0]);
    char v12 = BYTE9(v15[0]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v3 = v11 | v12;
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C3C3E410@<X0>(uint64_t a1@<X8>)
{
  char v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD8);
  sub_1C3C4BDB4(&qword_1EA385FE0, &qword_1EA385FD8);
  sub_1C3C4BCCC();
  uint64_t v4 = sub_1C3DB9E98();
  id v5 = v2;
  uint64_t v6 = sub_1C3C4A204(v4, v5);

  uint64_t v7 = sub_1C3C3A2DC(v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v6 + 16);
  if (!v8)
  {
    char v20 = 0;
    char v21 = 0;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  id v9 = (unint64_t *)(v6 + 40);
  uint64_t v10 = v8;
  uint64_t v34 = v7;
  do
  {
    uint64_t v11 = *(v9 - 1);
    unint64_t v12 = *v9;
    if (*v9 != 1 && v12 != 2)
    {
      if (!v12)
      {
        sub_1C3C4C7A0(*(v9 - 1), 0);
        sub_1C3C4C7A0(0, 0);
        char v33 = 1;
        goto LABEL_10;
      }
      swift_bridgeObjectRetain();
    }
    v9 += 2;
    sub_1C3C4C7A0(v11, v12);
    sub_1C3C4C7A0(0, 0);
    --v10;
  }
  while (v10);
  char v33 = 0;
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = (unint64_t *)(v6 + 40);
  while (1)
  {
    uint64_t v16 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = *(v15 - 1);
    unint64_t v18 = *v15;
    if (!*v15 || v18 == 1) {
      goto LABEL_11;
    }
    if (v18 == 2) {
      break;
    }
    swift_bridgeObjectRetain();
LABEL_11:
    v15 += 2;
    sub_1C3C4C7A0(v17, v18);
    uint64_t result = sub_1C3C4C7A0(0, 2uLL);
    ++v14;
    if (v16 == v8)
    {
      char v19 = 0;
      goto LABEL_20;
    }
  }
  sub_1C3C4C7A0(*(v15 - 1), 2uLL);
  sub_1C3C4C7A0(0, 2uLL);
  char v19 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v23 = (unint64_t *)(v6 + 40);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  while (2)
  {
    uint64_t v26 = *(v23 - 1);
    unint64_t v27 = *v23;
    if (!*v23)
    {
      uint64_t v24 = *(v23 - 1);
      unint64_t v25 = 0;
      goto LABEL_22;
    }
    if (v27 == 1)
    {
      sub_1C3C4C7A0(*(v23 - 1), 1uLL);
      sub_1C3C4C7A0(0, 1uLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C3C9D424(0, *(void *)(v22 + 16) + 1, 1);
      }
      unint64_t v29 = *(void *)(v22 + 16);
      unint64_t v28 = *(void *)(v22 + 24);
      if (v29 >= v28 >> 1) {
        sub_1C3C9D424(v28 > 1, v29 + 1, 1);
      }
      *(void *)(v22 + 16) = v29 + 1;
      uint64_t v30 = v22 + 16 * v29;
      *(void *)(v30 + 32) = v26;
      *(void *)(v30 + 40) = 1;
    }
    else
    {
      if (v27 == 2)
      {
        uint64_t v24 = *(v23 - 1);
        unint64_t v25 = 2;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = v26;
        unint64_t v25 = v27;
      }
LABEL_22:
      sub_1C3C4C7A0(v24, v25);
      sub_1C3C4C7A0(0, 1uLL);
    }
    v23 += 2;
    if (--v8) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  char v20 = v33;
  char v21 = v19;
  uint64_t v7 = v34;
LABEL_35:
  uint64_t v31 = *(void *)(v22 + 16);
  swift_release();
  uint64_t v32 = sub_1C3C45628(v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + _Block_object_dispose(&STACK[0x310], 8) = v20;
  *(unsigned char *)(a1 + 9) = v21;
  *(void *)(a1 + 16) = v31;
  *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v32;
  return result;
}

Swift::Bool __swiftcall ICActivityStreamDigest.isCurrentUserMentioned(in:)(ICTTTextEditFilter *in)
{
  if (objc_msgSend(v1, sel_resolverStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  void v13[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v13[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v14, v13[0] + 16);
  sub_1C3C45734((uint64_t)v13);
  uint64_t v4 = v3;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  sub_1C3C2A448((uint64_t)v14, qword_1EB6FB1D8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  swift_unknownObjectRelease();
  if (v6)
  {
    uint64_t v7 = ICCloudSyncingObject.activityEvents.getter();

    uint64_t v8 = in;
    uint64_t v9 = sub_1C3C49B0C((uint64_t)v7, (uint64_t)v8, (uint64_t (*)(long long *, uint64_t))sub_1C3C3C104);
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  sub_1C3C4A420(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3C3E410((uint64_t)v14);
  swift_bridgeObjectRelease();
  char v10 = BYTE8(v14[0]);
  char v11 = BYTE9(v14[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v10 | v11) & 1;
}

uint64_t ICActivityStreamDigest.summary(for:format:)@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v6 = *a2;
  if (objc_msgSend(v3, sel_resolverStorage))
  {
    sub_1C3DBAA68();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v15[3] = __swift_instantiateConcreteTypeFromMangledName(qword_1EB6FB1D8);
  v15[0] = swift_allocObject();
  sub_1C3C499AC((uint64_t)v16, v15[0] + 16);
  sub_1C3C45734((uint64_t)v15);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1C3C2A448((uint64_t)v16, qword_1EB6FB1D8);
  uint64_t ObjectType = swift_getObjectType();
  char v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  swift_unknownObjectRelease();
  if (v10)
  {
    char v11 = ICCloudSyncingObject.activityEvents.getter();

    id v12 = a1;
    uint64_t v13 = sub_1C3C49B0C((uint64_t)v11, (uint64_t)v12, (uint64_t (*)(long long *, uint64_t))sub_1C3C3C104);
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  LOBYTE(v16[0]) = v6;
  ICActivityStreamDigest.summary(for:format:)(v13, (unsigned __int8 *)v16, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C3C3EB68()
{
  return sub_1C3DB8A98() & 1;
}

uint64_t sub_1C3C3EB94(uint64_t a1, char *a2)
{
  char v2 = *a2;
  sub_1C3C3E410((uint64_t)&v71);
  uint64_t v3 = *(void *)(v71 + 16);
  if (v3 == 2)
  {
    uint64_t v5 = v73[2];
    if (v72)
    {
      if (v5)
      {
LABEL_7:
        uint64_t v6 = v73[4];
        uint64_t v7 = v73[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1C3DD3D30;
        *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v9 = sub_1C3C4C74C();
        *(void *)(v8 + 32) = v6;
        *(void *)(v8 + 64) = v9;
        *(void *)(v8 + 40) = v7;
        char v10 = self;
        swift_bridgeObjectRetain();
        char v11 = (void *)sub_1C3DB9BF8();
        id v36 = objc_msgSend(v10, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v11, 0, 0, 1);

        uint64_t v37 = sub_1C3DB9C38();
        uint64_t v39 = v38;

        swift_bridgeObjectRetain();
        uint64_t v3 = (uint64_t)sub_1C3C7F710(v8, v37, v39);
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        goto LABEL_22;
      }
    }
    else if (v5)
    {
      uint64_t v20 = v73[4];
      uint64_t v19 = v73[5];
      if (v5 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C3DD5130;
        *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v22 = sub_1C3C4C74C();
        *(void *)(inited + 32) = v20;
        *(void *)(inited + 40) = v19;
        uint64_t v23 = MEMORY[0x1E4FBB5C8];
        *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
        *(void *)(inited + 104) = v23;
        *(void *)(inited + 64) = v22;
        *(void *)(inited + 72) = 1;
        uint64_t v24 = self;
        swift_bridgeObjectRetain();
        unint64_t v25 = (void *)sub_1C3DB9BF8();
        id v26 = objc_msgSend(v24, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v25, 0, 0, 0);
LABEL_26:
        id v57 = v26;

        uint64_t v58 = sub_1C3DB9C38();
        uint64_t v60 = v59;

        swift_bridgeObjectRetain();
        int64_t v51 = sub_1C3D2F9C4(inited, v58, v60);
        goto LABEL_27;
      }
      uint64_t v41 = v73[6];
      uint64_t v40 = v73[7];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      if (v2)
      {
        uint64_t v42 = swift_initStackObject();
        *(_OWORD *)(v42 + 16) = xmmword_1C3DD5130;
        uint64_t v43 = MEMORY[0x1E4FBB1A0];
        *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v44 = sub_1C3C4C74C();
        *(void *)(v42 + 32) = v20;
        *(void *)(v42 + 40) = v19;
        *(void *)(v42 + 96) = v43;
        *(void *)(v42 + 104) = v44;
        *(void *)(v42 + 64) = v44;
        *(void *)(v42 + 72) = v41;
        *(void *)(v42 + 80) = v40;
        char v45 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v46 = (void *)sub_1C3DB9BF8();
        id v47 = objc_msgSend(v45, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v46, 0, 0, 1);

        uint64_t v48 = sub_1C3DB9C38();
        uint64_t v50 = v49;

        swift_bridgeObjectRetain();
        int64_t v51 = sub_1C3C7F710(v42, v48, v50);
LABEL_27:
        uint64_t v3 = (uint64_t)v51;
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        goto LABEL_28;
      }
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1C3DD5130;
      uint64_t v63 = MEMORY[0x1E4FBB1A0];
      *(void *)(v62 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v64 = sub_1C3C4C74C();
      *(void *)(v62 + 32) = v20;
      *(void *)(v62 + 40) = v19;
      *(void *)(v62 + 96) = v63;
      *(void *)(v62 + 104) = v64;
      *(void *)(v62 + 64) = v64;
      *(void *)(v62 + 72) = v41;
      *(void *)(v62 + 80) = v40;
      uint64_t v65 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = (void *)sub_1C3DB9BF8();
      id v67 = objc_msgSend(v65, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v66, 0, 0, 1);

      uint64_t v68 = sub_1C3DB9C38();
      uint64_t v70 = v69;

      swift_bridgeObjectRetain();
      uint64_t v3 = (uint64_t)sub_1C3C7F710(v62, v68, v70);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
LABEL_22:
      swift_arrayDestroy();
      swift_deallocClassInstance();
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C3DD3D30;
    uint64_t v32 = MEMORY[0x1E4FBB5C8];
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v14 + 64) = v32;
    *(void *)(v14 + 32) = 2;
    char v33 = self;
    uint64_t v17 = (void *)sub_1C3DB9BF8();
    id v18 = objc_msgSend(v33, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
    goto LABEL_25;
  }
  uint64_t v4 = v3 - 1;
  if (v3 != 1)
  {
    if (!v3) {
      goto LABEL_29;
    }
    if (v72)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C3DD3D30;
      uint64_t v15 = MEMORY[0x1E4FBB5C8];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v14 + 64) = v15;
      *(void *)(v14 + 32) = v4;
      uint64_t v16 = self;
      uint64_t v17 = (void *)sub_1C3DB9BF8();
      id v18 = objc_msgSend(v16, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
LABEL_25:
      id v53 = v18;

      uint64_t v54 = sub_1C3DB9C38();
      uint64_t v56 = v55;

      swift_bridgeObjectRetain();
      uint64_t v3 = (uint64_t)sub_1C3D2F9C4(v14, v54, v56);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
LABEL_28:
      swift_arrayDestroy();
      goto LABEL_29;
    }
    if (!v73[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C3DD3D30;
      uint64_t v34 = MEMORY[0x1E4FBB5C8];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v14 + 64) = v34;
      *(void *)(v14 + 32) = v3;
      id v35 = self;
      uint64_t v17 = (void *)sub_1C3DB9BF8();
      id v18 = objc_msgSend(v35, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v17, 0, 0, 0);
      goto LABEL_25;
    }
    uint64_t v28 = v73[4];
    uint64_t v27 = v73[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C3DD5130;
    *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v29 = sub_1C3C4C74C();
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v27;
    uint64_t v30 = MEMORY[0x1E4FBB5C8];
    *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 104) = v30;
    *(void *)(inited + 64) = v29;
    *(void *)(inited + 72) = v4;
    uint64_t v31 = self;
    swift_bridgeObjectRetain();
    unint64_t v25 = (void *)sub_1C3DB9BF8();
    id v26 = objc_msgSend(v31, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v25, 0, 0, 0);
    goto LABEL_26;
  }
  if (!v72 && v73[2]) {
    goto LABEL_7;
  }
  id v12 = self;
  uint64_t v13 = (void *)sub_1C3DB9BF8();
  id v52 = objc_msgSend(v12, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v13, 0, 0, 1);

  uint64_t v3 = sub_1C3DB9C38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1C3C3F9A0(uint64_t a1, uint64_t a2, char *a3)
{
  char v3 = *a3;
  sub_1C3C3E410((uint64_t)&v361);
  uint64_t v4 = v361;
  int v5 = v362;
  uint64_t v6 = v364;
  sub_1C3C3E410((uint64_t)&v361);
  uint64_t v7 = *(void *)(v4 + 16);
  unint64_t v8 = *(void *)(v361 + 16);
  if (v7 == 2)
  {
    if (v8 != 1) {
      goto LABEL_20;
    }
    uint64_t v10 = v6[2];
    if (v5)
    {
      if (v10)
      {
        uint64_t v11 = v6[4];
        uint64_t v12 = v6[5];
        if (v363 || v362 || !v364[2])
        {
LABEL_173:
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v80 = swift_allocObject();
          *(_OWORD *)(v80 + 16) = xmmword_1C3DD3D30;
          *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v264 = sub_1C3C4C74C();
          *(void *)(v80 + 32) = v11;
          *(void *)(v80 + 64) = v264;
          *(void *)(v80 + 40) = v12;
          uint64_t v82 = self;
          swift_bridgeObjectRetain();
          goto LABEL_174;
        }
        uint64_t v139 = v364[4];
        uint64_t v138 = v364[5];
        if ((v3 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v170 = swift_allocObject();
          *(_OWORD *)(v170 + 16) = xmmword_1C3DD3D30;
          *(void *)(v170 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v170 + 64) = sub_1C3C4C74C();
          *(void *)(v170 + 32) = v139;
          *(void *)(v170 + 40) = v138;
          v220 = self;
          v221 = (void *)sub_1C3DB9BF8();
          id v222 = objc_msgSend(v220, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v221, 0, 0, 1);
LABEL_211:
          id v347 = v222;

          uint64_t v348 = sub_1C3DB9C38();
          uint64_t v319 = v349;

          uint64_t v320 = v170;
          uint64_t v321 = v348;
          goto LABEL_212;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v140 = swift_allocObject();
        *(_OWORD *)(v140 + 16) = xmmword_1C3DD5130;
        uint64_t v141 = MEMORY[0x1E4FBB1A0];
        *(void *)(v140 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v142 = sub_1C3C4C74C();
        *(void *)(v140 + 32) = v11;
        *(void *)(v140 + 40) = v12;
        *(void *)(v140 + 96) = v141;
        *(void *)(v140 + 104) = v142;
        *(void *)(v140 + 64) = v142;
        *(void *)(v140 + 72) = v139;
        *(void *)(v140 + 80) = v138;
        v143 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144 = (void *)sub_1C3DB9BF8();
        id v145 = objc_msgSend(v143, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v144, 0, 0, 1);
        goto LABEL_206;
      }
      if (v363) {
        goto LABEL_194;
      }
      if (v362)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1C3DD3D30;
        uint64_t v121 = MEMORY[0x1E4FBB5C8];
        *(void *)(v73 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v73 + 64) = v121;
        *(void *)(v73 + 32) = 2;
        int v122 = self;
        uint64_t v76 = (void *)sub_1C3DB9BF8();
        id v77 = objc_msgSend(v122, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      if (!v364[2]) {
        goto LABEL_194;
      }
      uint64_t v173 = v364[4];
      uint64_t v174 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v175 = swift_allocObject();
      uint64_t v97 = v175;
      *(_OWORD *)(v175 + 16) = xmmword_1C3DD5130;
      if (v3) {
        goto LABEL_133;
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v46 = v6[4];
        uint64_t v45 = v6[5];
        if (v10 == 1)
        {
          if ((v363 & 1) == 0)
          {
            if (v362)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
              uint64_t v124 = swift_allocObject();
              *(_OWORD *)(v124 + 16) = xmmword_1C3DD5130;
              *(void *)(v124 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v125 = sub_1C3C4C74C();
              *(void *)(v124 + 32) = v46;
              *(void *)(v124 + 40) = v45;
              uint64_t v126 = MEMORY[0x1E4FBB5C8];
              *(void *)(v124 + 96) = MEMORY[0x1E4FBB550];
              *(void *)(v124 + 104) = v126;
              *(void *)(v124 + 64) = v125;
              *(void *)(v124 + 72) = 1;
              uint64_t v127 = self;
              swift_bridgeObjectRetain();
              int v128 = (void *)sub_1C3DB9BF8();
              id v237 = objc_msgSend(v127, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v128, 0, 0, 0);

              uint64_t v238 = sub_1C3DB9C38();
              uint64_t v240 = v239;

              uint64_t v241 = v124;
              uint64_t v242 = v238;
              goto LABEL_205;
            }
            if (v364[2])
            {
              uint64_t v186 = v364[4];
              uint64_t v187 = v364[5];
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
              uint64_t v188 = swift_allocObject();
              *(_OWORD *)(v188 + 16) = xmmword_1C3DD5140;
              uint64_t v189 = MEMORY[0x1E4FBB1A0];
              *(void *)(v188 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v190 = sub_1C3C4C74C();
              *(void *)(v188 + 64) = v190;
              if (v3)
              {
                *(void *)(v188 + 32) = v186;
                *(void *)(v188 + 40) = v187;
                *(void *)(v188 + 96) = v189;
                *(void *)(v188 + 104) = v190;
                *(void *)(v188 + 72) = v46;
                *(void *)(v188 + 80) = v45;
                uint64_t v191 = MEMORY[0x1E4FBB5C8];
                *(void *)(v188 + 136) = MEMORY[0x1E4FBB550];
                *(void *)(v188 + 144) = v191;
                *(void *)(v188 + 112) = 1;
              }
              else
              {
                *(void *)(v188 + 32) = v46;
                *(void *)(v188 + 40) = v45;
                uint64_t v285 = MEMORY[0x1E4FBB5C8];
                *(void *)(v188 + 96) = MEMORY[0x1E4FBB550];
                *(void *)(v188 + 104) = v285;
                *(void *)(v188 + 72) = 1;
                *(void *)(v188 + 136) = v189;
                *(void *)(v188 + 144) = v190;
                *(void *)(v188 + 112) = v186;
                *(void *)(v188 + 120) = v187;
              }
              v192 = self;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v193 = (void *)sub_1C3DB9BF8();
              id v286 = objc_msgSend(v192, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v193, 0, 0, 0);

              uint64_t v287 = sub_1C3DB9C38();
              uint64_t v289 = v288;

              uint64_t v290 = v188;
              uint64_t v291 = v287;
              goto LABEL_209;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1C3DD5130;
          *(void *)(v97 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v270 = sub_1C3C4C74C();
          *(void *)(v97 + 32) = v46;
          *(void *)(v97 + 40) = v45;
          uint64_t v271 = MEMORY[0x1E4FBB5C8];
          *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v97 + 104) = v271;
          *(void *)(v97 + 64) = v270;
          *(void *)(v97 + 72) = 1;
          uint64_t v100 = self;
          swift_bridgeObjectRetain();
          goto LABEL_182;
        }
        uint64_t v96 = v6[7];
        if (!v363 && !v362 && v364[2])
        {
          uint64_t v207 = v364[4];
          uint64_t v206 = v364[5];
          if (v3)
          {
            uint64_t v360 = v6[6];
            v208 = self;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v209 = (void *)sub_1C3DB9BF8();
            id v210 = objc_msgSend(v208, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v209, 0, 0, 1);

            sub_1C3DB9C38();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
            uint64_t v211 = swift_allocObject();
            *(_OWORD *)(v211 + 16) = xmmword_1C3DD5140;
            uint64_t v212 = v207;
            uint64_t v213 = MEMORY[0x1E4FBB1A0];
            *(void *)(v211 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v214 = sub_1C3C4C74C();
            *(void *)(v211 + 32) = v46;
            *(void *)(v211 + 40) = v45;
            *(void *)(v211 + 96) = v213;
            *(void *)(v211 + 104) = v214;
            *(void *)(v211 + 64) = v214;
            *(void *)(v211 + 72) = v360;
            *(void *)(v211 + 80) = v96;
            *(void *)(v211 + 136) = v213;
            *(void *)(v211 + 144) = v214;
            *(void *)(v211 + 112) = v212;
            *(void *)(v211 + 120) = v206;
            uint64_t v14 = sub_1C3DB9C08();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_218;
          }
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v302 = swift_allocObject();
          *(_OWORD *)(v302 + 16) = xmmword_1C3DD3D30;
          *(void *)(v302 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v302 + 64) = sub_1C3C4C74C();
          *(void *)(v302 + 32) = v207;
          *(void *)(v302 + 40) = v206;
          v303 = self;
          v304 = (void *)sub_1C3DB9BF8();
          id v305 = objc_msgSend(v303, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v304, 0, 0, 1);

          uint64_t v306 = sub_1C3DB9C38();
          uint64_t v308 = v307;

          uint64_t v14 = (uint64_t)sub_1C3C7F710(v302, v306, v308);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
          swift_arrayDestroy();
LABEL_216:
          swift_deallocClassInstance();
          goto LABEL_217;
        }
        uint64_t v277 = v6[6];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v140 = swift_allocObject();
        *(_OWORD *)(v140 + 16) = xmmword_1C3DD5130;
        uint64_t v278 = MEMORY[0x1E4FBB1A0];
        *(void *)(v140 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v279 = sub_1C3C4C74C();
        *(void *)(v140 + 32) = v46;
        *(void *)(v140 + 40) = v45;
        *(void *)(v140 + 96) = v278;
        *(void *)(v140 + 104) = v279;
        *(void *)(v140 + 64) = v279;
        *(void *)(v140 + 72) = v277;
        *(void *)(v140 + 80) = v96;
        v280 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144 = (void *)sub_1C3DB9BF8();
        id v145 = objc_msgSend(v280, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v144, 0, 0, 1);
LABEL_206:
        id v334 = v145;

        uint64_t v335 = sub_1C3DB9C38();
        uint64_t v337 = v336;

        v338 = sub_1C3C7F710(v140, v335, v337);
LABEL_214:
        uint64_t v14 = (uint64_t)v338;
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        goto LABEL_215;
      }
      if ((v363 & 1) != 0 || v362 || !v364[2]) {
        goto LABEL_93;
      }
      uint64_t v173 = v364[4];
      uint64_t v174 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v175 = swift_allocObject();
      uint64_t v97 = v175;
      *(_OWORD *)(v175 + 16) = xmmword_1C3DD5130;
      if ((v3 & 1) == 0)
      {
LABEL_133:
        *(void *)(v175 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v176 = sub_1C3C4C74C();
        *(void *)(v97 + 32) = v173;
        *(void *)(v97 + 40) = v174;
        uint64_t v177 = MEMORY[0x1E4FBB5C8];
        *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v97 + 104) = v177;
        *(void *)(v97 + 64) = v176;
        *(void *)(v97 + 72) = 1;
        goto LABEL_177;
      }
    }
    uint64_t v178 = MEMORY[0x1E4FBB5C8];
    *(void *)(v175 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v175 + 64) = v178;
    *(void *)(v175 + 32) = 1;
    *(void *)(v175 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v175 + 104) = sub_1C3C4C74C();
    *(void *)(v97 + 72) = v173;
    *(void *)(v97 + 80) = v174;
    goto LABEL_177;
  }
  uint64_t v9 = v7 - 1;
  if (v7 != 1)
  {
    if (!v7)
    {
      if (v8 >= 2) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
    if (v8 == 1)
    {
      if (v5)
      {
        if (v363)
        {
          if (v3) {
            goto LABEL_50;
          }
          goto LABEL_42;
        }
        if (v362)
        {
          if (v3)
          {
LABEL_50:
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
            uint64_t v73 = swift_allocObject();
            *(_OWORD *)(v73 + 16) = xmmword_1C3DD3D30;
            uint64_t v74 = MEMORY[0x1E4FBB5C8];
            *(void *)(v73 + 56) = MEMORY[0x1E4FBB550];
            *(void *)(v73 + 64) = v74;
            *(void *)(v73 + 32) = v7;
            uint64_t v75 = self;
            uint64_t v76 = (void *)sub_1C3DB9BF8();
            id v77 = objc_msgSend(v75, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
LABEL_125:
            id v163 = v77;

            uint64_t v164 = sub_1C3DB9C38();
            uint64_t v166 = v165;

            uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v73, v164, v166);
            swift_bridgeObjectRelease();
            swift_setDeallocating();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
            goto LABEL_85;
          }
LABEL_42:
          id v47 = self;
          uint64_t v48 = (void *)sub_1C3DB9BF8();
          id v309 = objc_msgSend(v47, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v48, 0, 0, 1);

          uint64_t v14 = sub_1C3DB9C38();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return v14;
        }
        if (!v364[2])
        {
          if (v3) {
            goto LABEL_50;
          }
          goto LABEL_42;
        }
        uint64_t v105 = v364[4];
        uint64_t v104 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        if (v3)
        {
          uint64_t v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1C3DD5130;
          uint64_t v106 = MEMORY[0x1E4FBB5C8];
          *(void *)(v97 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v97 + 64) = v106;
          *(void *)(v97 + 32) = v9;
          *(void *)(v97 + 96) = MEMORY[0x1E4FBB1A0];
          *(void *)(v97 + 104) = sub_1C3C4C74C();
          *(void *)(v97 + 72) = v105;
          *(void *)(v97 + 80) = v104;
          uint64_t v107 = self;
          swift_bridgeObjectRetain();
          unint64_t v108 = (void *)sub_1C3DB9BF8();
          id v109 = objc_msgSend(v107, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
LABEL_213:
          id v350 = v109;

          uint64_t v351 = sub_1C3DB9C38();
          uint64_t v353 = v352;

          v338 = sub_1C3D2F9C4(v97, v351, v353);
          goto LABEL_214;
        }
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1C3DD3D30;
        *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v80 + 64) = sub_1C3C4C74C();
        *(void *)(v80 + 32) = v105;
        *(void *)(v80 + 40) = v104;
        v183 = self;
        swift_bridgeObjectRetain();
        v184 = (void *)sub_1C3DB9BF8();
        id v185 = objc_msgSend(v183, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v184, 0, 0, 1);
        goto LABEL_200;
      }
      if (v6[2])
      {
        uint64_t v49 = v6[4];
        uint64_t v50 = v6[5];
        if (v363)
        {
          if ((v3 & 1) == 0) {
            goto LABEL_42;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = xmmword_1C3DD5130;
          *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v52 = sub_1C3C4C74C();
          *(void *)(v51 + 32) = v49;
          *(void *)(v51 + 40) = v50;
          uint64_t v53 = MEMORY[0x1E4FBB5C8];
          *(void *)(v51 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v51 + 104) = v53;
          *(void *)(v51 + 64) = v52;
          *(void *)(v51 + 72) = v9;
          uint64_t v54 = self;
          swift_bridgeObjectRetain();
          uint64_t v55 = (void *)sub_1C3DB9BF8();
          id v56 = objc_msgSend(v54, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v55, 0, 0, 0);

          uint64_t v57 = sub_1C3DB9C38();
          uint64_t v59 = v58;

          uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v51, v57, v59);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
          goto LABEL_85;
        }
        if (v362)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_1C3DD5130;
          *(void *)(v97 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v98 = sub_1C3C4C74C();
          *(void *)(v97 + 32) = v49;
          *(void *)(v97 + 40) = v50;
          uint64_t v99 = MEMORY[0x1E4FBB5C8];
          *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v97 + 104) = v99;
          *(void *)(v97 + 64) = v98;
          *(void *)(v97 + 72) = v9;
          uint64_t v100 = self;
          swift_bridgeObjectRetain();
LABEL_182:
          unint64_t v108 = (void *)sub_1C3DB9BF8();
          id v109 = objc_msgSend(v100, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
          goto LABEL_213;
        }
        if (v364[2])
        {
          uint64_t v146 = v364[5];
          uint64_t v359 = v364[4];
          if (v3)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1C3DD5140;
            uint64_t v148 = MEMORY[0x1E4FBB1A0];
            *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v149 = sub_1C3C4C74C();
            *(void *)(inited + 32) = v49;
            *(void *)(inited + 40) = v50;
            uint64_t v150 = MEMORY[0x1E4FBB5C8];
            *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
            *(void *)(inited + 104) = v150;
            *(void *)(inited + 64) = v149;
            *(void *)(inited + 72) = v9;
            *(void *)(inited + 136) = v148;
            *(void *)(inited + 144) = v149;
            *(void *)(inited + 112) = v359;
            *(void *)(inited + 120) = v146;
            v151 = self;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v152 = (void *)sub_1C3DB9BF8();
            id v153 = objc_msgSend(v151, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v152, 0, 0, 0);

            uint64_t v154 = sub_1C3DB9C38();
            uint64_t v156 = v155;

            uint64_t v14 = (uint64_t)sub_1C3D2F9C4(inited, v154, v156);
          }
          else
          {
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
            uint64_t v223 = swift_initStackObject();
            *(_OWORD *)(v223 + 16) = xmmword_1C3DD3D30;
            *(void *)(v223 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v223 + 64) = sub_1C3C4C74C();
            *(void *)(v223 + 32) = v359;
            *(void *)(v223 + 40) = v146;
            v224 = self;
            v225 = (void *)sub_1C3DB9BF8();
            id v226 = objc_msgSend(v224, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v225, 0, 0, 1);

            uint64_t v227 = sub_1C3DB9C38();
            uint64_t v229 = v228;

            uint64_t v14 = (uint64_t)sub_1C3C7F710(v223, v227, v229);
          }
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v215 = swift_initStackObject();
          *(_OWORD *)(v215 + 16) = xmmword_1C3DD5130;
          *(void *)(v215 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v216 = sub_1C3C4C74C();
          *(void *)(v215 + 32) = v49;
          *(void *)(v215 + 40) = v50;
          uint64_t v217 = MEMORY[0x1E4FBB5C8];
          *(void *)(v215 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v215 + 104) = v217;
          *(void *)(v215 + 64) = v216;
          *(void *)(v215 + 72) = v9;
          v218 = self;
          swift_bridgeObjectRetain();
          v219 = (void *)sub_1C3DB9BF8();
          id v281 = objc_msgSend(v218, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v219, 0, 0, 0);

          uint64_t v282 = sub_1C3DB9C38();
          uint64_t v284 = v283;

          uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v215, v282, v284);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        }
LABEL_186:
        swift_arrayDestroy();
        goto LABEL_217;
      }
      if ((v363 & 1) != 0 || v362)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1C3DD3D30;
        *(void *)(v93 + 32) = v7;
        uint64_t v94 = MEMORY[0x1E4FBB5C8];
        *(void *)(v93 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v93 + 64) = v94;
        uint64_t v95 = self;
LABEL_195:
        v311 = (void *)sub_1C3DB9BF8();
        id v312 = objc_msgSend(v95, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v311, 0, 0, 0);
LABEL_210:
        id v343 = v312;

        uint64_t v344 = sub_1C3DB9C38();
        uint64_t v346 = v345;

        v338 = sub_1C3D2F9C4(v93, v344, v346);
        goto LABEL_214;
      }
      if (!v364[2])
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        if (v3)
        {
          uint64_t v256 = swift_initStackObject();
          *(_OWORD *)(v256 + 16) = xmmword_1C3DD3D30;
          uint64_t v257 = MEMORY[0x1E4FBB5C8];
          *(void *)(v256 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v256 + 64) = v257;
          *(void *)(v256 + 32) = v7;
          v258 = self;
          v259 = (void *)sub_1C3DB9BF8();
          id v260 = objc_msgSend(v258, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v259, 0, 0, 0);

          uint64_t v261 = sub_1C3DB9C38();
          uint64_t v263 = v262;

          uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v256, v261, v263);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
          goto LABEL_186;
        }
        uint64_t v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1C3DD3D30;
        uint64_t v314 = MEMORY[0x1E4FBB5C8];
        *(void *)(v93 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v93 + 64) = v314;
        *(void *)(v93 + 32) = v7;
        v315 = self;
        v311 = (void *)sub_1C3DB9BF8();
        id v312 = objc_msgSend(v315, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v311, 0, 0, 0);
        goto LABEL_210;
      }
      uint64_t v179 = v364[4];
      uint64_t v180 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v181 = swift_allocObject();
      uint64_t v97 = v181;
      *(_OWORD *)(v181 + 16) = xmmword_1C3DD5130;
      if (v3)
      {
        uint64_t v182 = MEMORY[0x1E4FBB5C8];
        *(void *)(v181 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v181 + 64) = v182;
        *(void *)(v181 + 32) = v9;
        *(void *)(v181 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v181 + 104) = sub_1C3C4C74C();
        *(void *)(v97 + 72) = v179;
        *(void *)(v97 + 80) = v180;
      }
      else
      {
        *(void *)(v181 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v268 = sub_1C3C4C74C();
        *(void *)(v97 + 32) = v179;
        *(void *)(v97 + 40) = v180;
        uint64_t v269 = MEMORY[0x1E4FBB5C8];
        *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v97 + 104) = v269;
        *(void *)(v97 + 64) = v268;
        *(void *)(v97 + 72) = v9;
      }
LABEL_177:
      v267 = self;
      swift_bridgeObjectRetain();
      unint64_t v108 = (void *)sub_1C3DB9BF8();
      id v109 = objc_msgSend(v267, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v108, 0, 0, 0);
      goto LABEL_213;
    }
LABEL_20:
    if (v363)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C3DD3D30;
      uint64_t v16 = MEMORY[0x1E4FBB5C8];
      *(void *)(v15 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v15 + 64) = v16;
      *(void *)(v15 + 32) = v7;
      uint64_t v17 = self;
      id v18 = (void *)sub_1C3DB9BF8();
      id v19 = objc_msgSend(v17, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v18, 0, 0, 0);

      uint64_t v20 = sub_1C3DB9C38();
      uint64_t v22 = v21;

      uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v15, v20, v22);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      swift_arrayDestroy();
LABEL_217:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_218;
    }
    if (v362)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C3DD3D30;
      uint64_t v24 = MEMORY[0x1E4FBB5C8];
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v23 + 64) = v24;
      *(void *)(v23 + 32) = v8 - 1;
      unint64_t v25 = self;
      id v26 = (void *)sub_1C3DB9BF8();
      id v27 = objc_msgSend(v25, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v26, 0, 0, 0);
LABEL_24:
      id v28 = v27;

      uint64_t v29 = sub_1C3DB9C38();
      uint64_t v31 = v30;

      uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v23, v29, v31);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      swift_arrayDestroy();
      goto LABEL_217;
    }
    unint64_t v32 = v364[2];
    if (v8 != 2 || v32 < 2)
    {
      if (v32)
      {
        uint64_t v34 = v364[4];
        uint64_t v35 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v36 = swift_initStackObject();
        *(_OWORD *)(v36 + 16) = xmmword_1C3DD5130;
        *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v37 = sub_1C3C4C74C();
        *(void *)(v36 + 32) = v34;
        *(void *)(v36 + 40) = v35;
        uint64_t v38 = MEMORY[0x1E4FBB5C8];
        *(void *)(v36 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v36 + 104) = v38;
        *(void *)(v36 + 64) = v37;
        *(void *)(v36 + 72) = v8 - 1;
        uint64_t v39 = self;
        swift_bridgeObjectRetain();
        uint64_t v40 = (void *)sub_1C3DB9BF8();
        id v41 = objc_msgSend(v39, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v40, 0, 0, 0);

        uint64_t v42 = sub_1C3DB9C38();
        uint64_t v44 = v43;

        uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v36, v42, v44);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        swift_arrayDestroy();
        goto LABEL_217;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C3DD3D30;
      uint64_t v101 = MEMORY[0x1E4FBB5C8];
      *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v23 + 64) = v101;
      *(void *)(v23 + 32) = v8;
      uint64_t v102 = self;
      id v26 = (void *)sub_1C3DB9BF8();
      id v27 = objc_msgSend(v102, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v26, 0, 0, 0);
      goto LABEL_24;
    }
    uint64_t v61 = v364[4];
    uint64_t v60 = v364[5];
    uint64_t v63 = v364[6];
    uint64_t v62 = v364[7];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_1C3DD5130;
    uint64_t v65 = MEMORY[0x1E4FBB1A0];
    *(void *)(v64 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v66 = sub_1C3C4C74C();
    *(void *)(v64 + 32) = v61;
    *(void *)(v64 + 40) = v60;
    *(void *)(v64 + 96) = v65;
    *(void *)(v64 + 104) = v66;
    *(void *)(v64 + 64) = v66;
    *(void *)(v64 + 72) = v63;
    *(void *)(v64 + 80) = v62;
    id v67 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = (void *)sub_1C3DB9BF8();
    id v69 = objc_msgSend(v67, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v68, 0, 0, 1);

    uint64_t v70 = sub_1C3DB9C38();
    uint64_t v72 = v71;

    uint64_t v14 = (uint64_t)sub_1C3C7F710(v64, v70, v72);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_218:
    swift_bridgeObjectRelease();
    return v14;
  }
  if (v8 == 2)
  {
    if (v5)
    {
      if (v363) {
        goto LABEL_42;
      }
      uint64_t v103 = v364[2];
      if (v362)
      {
        if (v103) {
          goto LABEL_128;
        }
LABEL_93:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1C3DD3D30;
        *(void *)(v93 + 32) = 2;
        uint64_t v123 = MEMORY[0x1E4FBB5C8];
        *(void *)(v93 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v93 + 64) = v123;
        uint64_t v95 = self;
        goto LABEL_195;
      }
      if (v103)
      {
        uint64_t v157 = v364[4];
        uint64_t v158 = v364[5];
        if (v103 == 1) {
          goto LABEL_165;
        }
        uint64_t v244 = v364[6];
        uint64_t v243 = v364[7];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v245 = swift_allocObject();
        *(_OWORD *)(v245 + 16) = xmmword_1C3DD5130;
        uint64_t v246 = MEMORY[0x1E4FBB1A0];
        *(void *)(v245 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v247 = sub_1C3C4C74C();
        *(void *)(v245 + 32) = v157;
        *(void *)(v245 + 40) = v158;
        *(void *)(v245 + 96) = v246;
        *(void *)(v245 + 104) = v247;
        *(void *)(v245 + 64) = v247;
        *(void *)(v245 + 72) = v244;
        *(void *)(v245 + 80) = v243;
        v248 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v249 = (void *)sub_1C3DB9BF8();
        id v250 = objc_msgSend(v248, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v249, 0, 0, 1);

        uint64_t v251 = sub_1C3DB9C38();
        uint64_t v253 = v252;

        uint64_t v254 = v245;
        uint64_t v255 = v251;
LABEL_191:
        uint64_t v14 = (uint64_t)sub_1C3C7F710(v254, v255, v253);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        goto LABEL_217;
      }
LABEL_160:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_1C3DD3D30;
      *(void *)(v73 + 32) = 2;
      uint64_t v230 = MEMORY[0x1E4FBB5C8];
      *(void *)(v73 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v73 + 64) = v230;
      v231 = self;
      uint64_t v76 = (void *)sub_1C3DB9BF8();
      id v77 = objc_msgSend(v231, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
      goto LABEL_125;
    }
    if (v6[2])
    {
      uint64_t v79 = v6[4];
      uint64_t v78 = v6[5];
      if (v363)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1C3DD3D30;
        *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v81 = sub_1C3C4C74C();
        *(void *)(v80 + 32) = v79;
        *(void *)(v80 + 64) = v81;
        *(void *)(v80 + 40) = v78;
        uint64_t v82 = self;
        swift_bridgeObjectRetain();
LABEL_174:
        v184 = (void *)sub_1C3DB9BF8();
        id v185 = objc_msgSend(v82, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v184, 0, 0, 1);
LABEL_200:
        id v316 = v185;

        uint64_t v317 = sub_1C3DB9C38();
        uint64_t v319 = v318;

        uint64_t v320 = v80;
        uint64_t v321 = v317;
LABEL_212:
        v338 = sub_1C3C7F710(v320, v321, v319);
        goto LABEL_214;
      }
      uint64_t v129 = v364[2];
      if (v362)
      {
        if (!v129)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v265 = swift_allocObject();
          uint64_t v97 = v265;
          *(_OWORD *)(v265 + 16) = xmmword_1C3DD5130;
          if (v3)
          {
            uint64_t v266 = MEMORY[0x1E4FBB5C8];
            *(void *)(v265 + 56) = MEMORY[0x1E4FBB550];
            *(void *)(v265 + 64) = v266;
            *(void *)(v265 + 32) = 1;
            *(void *)(v265 + 96) = MEMORY[0x1E4FBB1A0];
            *(void *)(v265 + 104) = sub_1C3C4C74C();
            *(void *)(v97 + 72) = v79;
            *(void *)(v97 + 80) = v78;
          }
          else
          {
            *(void *)(v265 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v327 = sub_1C3C4C74C();
            *(void *)(v97 + 32) = v79;
            *(void *)(v97 + 40) = v78;
            uint64_t v328 = MEMORY[0x1E4FBB5C8];
            *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
            *(void *)(v97 + 104) = v328;
            *(void *)(v97 + 64) = v327;
            *(void *)(v97 + 72) = 1;
          }
          goto LABEL_177;
        }
        uint64_t v130 = v364[4];
        uint64_t v131 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v132 = swift_allocObject();
        *(_OWORD *)(v132 + 16) = xmmword_1C3DD5130;
        uint64_t v133 = MEMORY[0x1E4FBB1A0];
        *(void *)(v132 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v134 = sub_1C3C4C74C();
        *(void *)(v132 + 64) = v134;
        if (v3)
        {
          *(void *)(v132 + 32) = v79;
          *(void *)(v132 + 40) = v78;
          *(void *)(v132 + 96) = v133;
          *(void *)(v132 + 104) = v134;
          *(void *)(v132 + 72) = v130;
          *(void *)(v132 + 80) = v131;
        }
        else
        {
          *(void *)(v132 + 32) = v130;
          *(void *)(v132 + 40) = v131;
          *(void *)(v132 + 96) = v133;
          *(void *)(v132 + 104) = v134;
          *(void *)(v132 + 72) = v79;
          *(void *)(v132 + 80) = v78;
        }
        goto LABEL_103;
      }
      if (v129)
      {
        uint64_t v194 = v364[4];
        uint64_t v195 = v364[5];
        if (v129 != 1)
        {
          uint64_t v293 = v364[6];
          uint64_t v292 = v364[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v294 = swift_allocObject();
          *(_OWORD *)(v294 + 16) = xmmword_1C3DD5130;
          uint64_t v295 = MEMORY[0x1E4FBB1A0];
          *(void *)(v294 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v296 = sub_1C3C4C74C();
          *(void *)(v294 + 32) = v194;
          *(void *)(v294 + 40) = v195;
          *(void *)(v294 + 96) = v295;
          *(void *)(v294 + 104) = v296;
          *(void *)(v294 + 64) = v296;
          *(void *)(v294 + 72) = v293;
          *(void *)(v294 + 80) = v292;
          v297 = self;
          v298 = (void *)sub_1C3DB9BF8();
          id v299 = objc_msgSend(v297, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v298, 0, 0, 1);

          uint64_t v300 = sub_1C3DB9C38();
          uint64_t v253 = v301;

          uint64_t v254 = v294;
          uint64_t v255 = v300;
          goto LABEL_191;
        }
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v196 = swift_allocObject();
        *(_OWORD *)(v196 + 16) = xmmword_1C3DD5140;
        uint64_t v197 = MEMORY[0x1E4FBB1A0];
        *(void *)(v196 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v198 = sub_1C3C4C74C();
        *(void *)(v196 + 64) = v198;
        if (v3)
        {
          *(void *)(v196 + 32) = v194;
          *(void *)(v196 + 40) = v195;
          uint64_t v199 = MEMORY[0x1E4FBB5C8];
          *(void *)(v196 + 96) = MEMORY[0x1E4FBB550];
          *(void *)(v196 + 104) = v199;
          *(void *)(v196 + 72) = 1;
          *(void *)(v196 + 136) = v197;
          *(void *)(v196 + 144) = v198;
          *(void *)(v196 + 112) = v79;
          *(void *)(v196 + 120) = v78;
        }
        else
        {
          *(void *)(v196 + 32) = v79;
          *(void *)(v196 + 40) = v78;
          *(void *)(v196 + 96) = v197;
          *(void *)(v196 + 104) = v198;
          *(void *)(v196 + 72) = v194;
          *(void *)(v196 + 80) = v195;
          uint64_t v339 = MEMORY[0x1E4FBB5C8];
          *(void *)(v196 + 136) = MEMORY[0x1E4FBB550];
          *(void *)(v196 + 144) = v339;
          *(void *)(v196 + 112) = 1;
        }
        v200 = self;
        swift_bridgeObjectRetain();
        v201 = (void *)sub_1C3DB9BF8();
        id v340 = objc_msgSend(v200, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v201, 0, 0, 0);

        uint64_t v341 = sub_1C3DB9C38();
        uint64_t v289 = v342;

        uint64_t v290 = v196;
        uint64_t v291 = v341;
LABEL_209:
        uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v290, v291, v289);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
LABEL_215:
        swift_arrayDestroy();
        goto LABEL_216;
      }
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v272 = swift_allocObject();
      v273 = (void *)v272;
      *(_OWORD *)(v272 + 16) = xmmword_1C3DD5130;
      if (v3)
      {
        uint64_t v274 = MEMORY[0x1E4FBB5C8];
        *(void *)(v272 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v272 + 64) = v274;
        *(void *)(v272 + 32) = 2;
        *(void *)(v272 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v272 + 104) = sub_1C3C4C74C();
        v273[9] = v79;
        v273[10] = v78;
      }
      else
      {
        *(void *)(v272 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v329 = sub_1C3C4C74C();
        v273[4] = v79;
        v273[5] = v78;
        uint64_t v330 = MEMORY[0x1E4FBB5C8];
        v273[12] = MEMORY[0x1E4FBB550];
        v273[13] = v330;
        v273[8] = v329;
        v273[9] = 2;
      }
      v275 = self;
      v276 = (void *)sub_1C3DB9BF8();
      id v331 = objc_msgSend(v275, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v276, 0, 0, 0);

      uint64_t v332 = sub_1C3DB9C38();
      uint64_t v240 = v333;

      uint64_t v241 = (uint64_t)v273;
      uint64_t v242 = v332;
LABEL_205:
      uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v241, v242, v240);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      goto LABEL_85;
    }
    if (v363) {
      goto LABEL_42;
    }
    uint64_t v167 = v364[2];
    if (!v362)
    {
      if (v167)
      {
        uint64_t v157 = v364[4];
        uint64_t v158 = v364[5];
        if (v167 != 1)
        {
          uint64_t v322 = v364[6];
          uint64_t v323 = v364[7];
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
          uint64_t v132 = swift_allocObject();
          *(_OWORD *)(v132 + 16) = xmmword_1C3DD5130;
          uint64_t v324 = MEMORY[0x1E4FBB1A0];
          *(void *)(v132 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v325 = sub_1C3C4C74C();
          *(void *)(v132 + 32) = v157;
          *(void *)(v132 + 40) = v158;
          *(void *)(v132 + 96) = v324;
          *(void *)(v132 + 104) = v325;
          *(void *)(v132 + 64) = v325;
          *(void *)(v132 + 72) = v322;
          *(void *)(v132 + 80) = v323;
          v326 = self;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v136 = (void *)sub_1C3DB9BF8();
          id v137 = objc_msgSend(v326, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v136, 0, 0, 1);
          goto LABEL_220;
        }
LABEL_165:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v97 = swift_allocObject();
        *(_OWORD *)(v97 + 16) = xmmword_1C3DD5130;
        *(void *)(v97 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v232 = sub_1C3C4C74C();
        *(void *)(v97 + 32) = v157;
        *(void *)(v97 + 40) = v158;
        uint64_t v233 = MEMORY[0x1E4FBB5C8];
        *(void *)(v97 + 96) = MEMORY[0x1E4FBB550];
        *(void *)(v97 + 104) = v233;
        *(void *)(v97 + 64) = v232;
        *(void *)(v97 + 72) = 1;
        uint64_t v100 = self;
        swift_bridgeObjectRetain();
        goto LABEL_182;
      }
      goto LABEL_160;
    }
    if (v167)
    {
LABEL_128:
      uint64_t v168 = v364[4];
      uint64_t v169 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v170 = swift_allocObject();
      *(_OWORD *)(v170 + 16) = xmmword_1C3DD3D30;
      *(void *)(v170 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v171 = sub_1C3C4C74C();
      *(void *)(v170 + 32) = v168;
      *(void *)(v170 + 64) = v171;
      *(void *)(v170 + 40) = v169;
      v172 = self;
      swift_bridgeObjectRetain();
LABEL_198:
      v221 = (void *)sub_1C3DB9BF8();
      id v222 = objc_msgSend(v172, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v221, 0, 0, 1);
      goto LABEL_211;
    }
LABEL_194:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = xmmword_1C3DD3D30;
    *(void *)(v93 + 32) = 1;
    uint64_t v310 = MEMORY[0x1E4FBB5C8];
    *(void *)(v93 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v93 + 64) = v310;
    uint64_t v95 = self;
    goto LABEL_195;
  }
  unint64_t v13 = v8 - 1;
  if (v8 == 1)
  {
    if (v5)
    {
      if (v363) {
        goto LABEL_42;
      }
      if (v362)
      {
        if ((v3 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_14;
      }
      if (!v364[2]) {
        goto LABEL_42;
      }
      goto LABEL_128;
    }
    if (!v6[2])
    {
      if ((v363 & 1) != 0 || v362) {
        goto LABEL_42;
      }
      if (v364[2])
      {
        uint64_t v234 = v364[4];
        uint64_t v235 = v364[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = xmmword_1C3DD3D30;
        *(void *)(v170 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v236 = sub_1C3C4C74C();
        *(void *)(v170 + 32) = v234;
        *(void *)(v170 + 64) = v236;
        *(void *)(v170 + 40) = v235;
        v172 = self;
        swift_bridgeObjectRetain();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = xmmword_1C3DD3D30;
        *(void *)(v170 + 32) = 1;
        uint64_t v313 = MEMORY[0x1E4FBB5C8];
        *(void *)(v170 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v170 + 64) = v313;
        v172 = self;
      }
      goto LABEL_198;
    }
    uint64_t v11 = v6[4];
    uint64_t v12 = v6[5];
    if ((v363 & 1) == 0 && !v362 && v364[2])
    {
      uint64_t v203 = v364[4];
      uint64_t v202 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v132 = swift_allocObject();
      *(_OWORD *)(v132 + 16) = xmmword_1C3DD5130;
      uint64_t v204 = MEMORY[0x1E4FBB1A0];
      *(void *)(v132 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v205 = sub_1C3C4C74C();
      *(void *)(v132 + 64) = v205;
      if (v3)
      {
        *(void *)(v132 + 32) = v203;
        *(void *)(v132 + 40) = v202;
        *(void *)(v132 + 96) = v204;
        *(void *)(v132 + 104) = v205;
        *(void *)(v132 + 72) = v11;
        *(void *)(v132 + 80) = v12;
      }
      else
      {
        *(void *)(v132 + 32) = v11;
        *(void *)(v132 + 40) = v12;
        *(void *)(v132 + 96) = v204;
        *(void *)(v132 + 104) = v205;
        *(void *)(v132 + 72) = v203;
        *(void *)(v132 + 80) = v202;
      }
LABEL_103:
      int v135 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v136 = (void *)sub_1C3DB9BF8();
      id v137 = objc_msgSend(v135, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v136, 0, 0, 1);
LABEL_220:
      id v355 = v137;

      uint64_t v356 = sub_1C3DB9C38();
      uint64_t v358 = v357;

      uint64_t v14 = (uint64_t)sub_1C3C7F710(v132, v356, v358);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      goto LABEL_215;
    }
    goto LABEL_173;
  }
  if (v8)
  {
    if (v363) {
      goto LABEL_42;
    }
    uint64_t v83 = v364[2];
    if (v362)
    {
      if (!v83)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1C3DD3D30;
        uint64_t v159 = MEMORY[0x1E4FBB5C8];
        *(void *)(v73 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v73 + 64) = v159;
        *(void *)(v73 + 32) = v13;
        v160 = self;
        uint64_t v76 = (void *)sub_1C3DB9BF8();
        id v77 = objc_msgSend(v160, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      uint64_t v84 = v364[4];
      uint64_t v85 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = xmmword_1C3DD3D30;
      *(void *)(v86 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v86 + 64) = sub_1C3C4C74C();
      *(void *)(v86 + 32) = v84;
      *(void *)(v86 + 40) = v85;
      uint64_t v87 = self;
      swift_bridgeObjectRetain();
      uint64_t v88 = (void *)sub_1C3DB9BF8();
      id v89 = objc_msgSend(v87, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v88, 0, 0, 1);

      uint64_t v90 = sub_1C3DB9C38();
      uint64_t v92 = v91;

      uint64_t v14 = (uint64_t)sub_1C3C7F710(v86, v90, v92);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
    }
    else
    {
      if (!v83)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1C3DD3D30;
        uint64_t v161 = MEMORY[0x1E4FBB5C8];
        *(void *)(v73 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v73 + 64) = v161;
        *(void *)(v73 + 32) = v8;
        v162 = self;
        uint64_t v76 = (void *)sub_1C3DB9BF8();
        id v77 = objc_msgSend(v162, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v76, 0, 0, 0);
        goto LABEL_125;
      }
      uint64_t v111 = v364[4];
      uint64_t v110 = v364[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_1C3DD5130;
      *(void *)(v112 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v113 = sub_1C3C4C74C();
      *(void *)(v112 + 32) = v111;
      *(void *)(v112 + 40) = v110;
      uint64_t v114 = MEMORY[0x1E4FBB5C8];
      *(void *)(v112 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v112 + 104) = v114;
      *(void *)(v112 + 64) = v113;
      *(void *)(v112 + 72) = v13;
      uint64_t v115 = self;
      swift_bridgeObjectRetain();
      uint64_t v116 = (void *)sub_1C3DB9BF8();
      id v117 = objc_msgSend(v115, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v116, 0, 0, 0);

      uint64_t v118 = sub_1C3DB9C38();
      uint64_t v120 = v119;

      uint64_t v14 = (uint64_t)sub_1C3D2F9C4(v112, v118, v120);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
    }
LABEL_85:
    swift_arrayDestroy();
    swift_deallocClassInstance();
    goto LABEL_217;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C3C44CA8()
{
  sub_1C3C3E410((uint64_t)&v60);
  uint64_t v0 = *(void *)(v60 + 16);
  if (v0 == 2)
  {
    uint64_t v2 = v62[2];
    if (v61)
    {
      if (v2)
      {
LABEL_16:
        uint64_t v17 = v62[4];
        uint64_t v16 = v62[5];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C3DD3D30;
        *(void *)(inited + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(inited + 64) = sub_1C3C4C74C();
        *(void *)(inited + 32) = v17;
        *(void *)(inited + 40) = v16;
        id v19 = self;
        swift_bridgeObjectRetain();
        uint64_t v20 = (void *)sub_1C3DB9BF8();
        id v21 = objc_msgSend(v19, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v20, 0, 0, 1);

        uint64_t v22 = sub_1C3DB9C38();
        uint64_t v24 = v23;

        swift_bridgeObjectRetain();
        uint64_t v0 = (uint64_t)sub_1C3C7F710(inited, v22, v24);
        swift_bridgeObjectRelease_n();
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
LABEL_26:
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v0;
      }
    }
    else if (v2)
    {
      if (v2 != 1)
      {
        uint64_t v47 = v62[4];
        uint64_t v46 = v62[5];
        uint64_t v49 = v62[6];
        uint64_t v48 = v62[7];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
        uint64_t v50 = swift_initStackObject();
        *(_OWORD *)(v50 + 16) = xmmword_1C3DD5130;
        uint64_t v51 = MEMORY[0x1E4FBB1A0];
        *(void *)(v50 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v52 = sub_1C3C4C74C();
        *(void *)(v50 + 32) = v47;
        *(void *)(v50 + 40) = v46;
        *(void *)(v50 + 96) = v51;
        *(void *)(v50 + 104) = v52;
        *(void *)(v50 + 64) = v52;
        *(void *)(v50 + 72) = v49;
        *(void *)(v50 + 80) = v48;
        uint64_t v53 = self;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v54 = (void *)sub_1C3DB9BF8();
        id v55 = objc_msgSend(v53, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v54, 0, 0, 1);

        uint64_t v56 = sub_1C3DB9C38();
        uint64_t v58 = v57;

        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1C3C7F710(v50, v56, v58);
        goto LABEL_25;
      }
      uint64_t v9 = v62[4];
      uint64_t v8 = v62[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C3DD5130;
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v11 = sub_1C3C4C74C();
      *(void *)(v10 + 32) = v9;
      *(void *)(v10 + 40) = v8;
      uint64_t v12 = MEMORY[0x1E4FBB5C8];
      *(void *)(v10 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v10 + 104) = v12;
      *(void *)(v10 + 64) = v11;
      *(void *)(v10 + 72) = 1;
      unint64_t v13 = self;
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_1C3DB9BF8();
      id v15 = objc_msgSend(v13, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v14, 0, 0, 0);
LABEL_19:
      id v30 = v15;

      uint64_t v31 = sub_1C3DB9C38();
      uint64_t v33 = v32;

      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C3D2F9C4(v10, v31, v33);
LABEL_25:
      uint64_t v0 = (uint64_t)v34;
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      goto LABEL_26;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
    uint64_t v35 = MEMORY[0x1E4FBB5C8];
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v3 + 64) = v35;
    *(void *)(v3 + 32) = 2;
    uint64_t v36 = self;
    uint64_t v6 = (void *)sub_1C3DB9BF8();
    id v7 = objc_msgSend(v36, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
    goto LABEL_23;
  }
  uint64_t v1 = v0 - 1;
  if (v0 == 1)
  {
    if (v61 || !v62[2])
    {
      unint64_t v37 = self;
      uint64_t v38 = (void *)sub_1C3DB9BF8();
      id v39 = objc_msgSend(v37, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v38, 0, 0, 1);

      uint64_t v0 = sub_1C3DB9C38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v0;
    }
    goto LABEL_16;
  }
  if (v0)
  {
    if (v61)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v3 = swift_initStackObject();
      *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
      uint64_t v4 = MEMORY[0x1E4FBB5C8];
      *(void *)(v3 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v3 + 64) = v4;
      *(void *)(v3 + 32) = v1;
      int v5 = self;
      uint64_t v6 = (void *)sub_1C3DB9BF8();
      id v7 = objc_msgSend(v5, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
LABEL_23:
      id v42 = v7;

      uint64_t v43 = sub_1C3DB9C38();
      uint64_t v45 = v44;

      swift_bridgeObjectRetain();
      uint64_t v0 = (uint64_t)sub_1C3D2F9C4(v3, v43, v45);
      swift_bridgeObjectRelease_n();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC790);
      goto LABEL_26;
    }
    if (!v62[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
      uint64_t v3 = swift_initStackObject();
      *(_OWORD *)(v3 + 16) = xmmword_1C3DD3D30;
      uint64_t v40 = MEMORY[0x1E4FBB5C8];
      *(void *)(v3 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v3 + 64) = v40;
      *(void *)(v3 + 32) = v0;
      id v41 = self;
      uint64_t v6 = (void *)sub_1C3DB9BF8();
      id v7 = objc_msgSend(v41, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v6, 0, 0, 0);
      goto LABEL_23;
    }
    uint64_t v26 = v62[4];
    uint64_t v25 = v62[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FBB30);
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C3DD5130;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v27 = sub_1C3C4C74C();
    *(void *)(v10 + 32) = v26;
    *(void *)(v10 + 40) = v25;
    uint64_t v28 = MEMORY[0x1E4FBB5C8];
    *(void *)(v10 + 96) = MEMORY[0x1E4FBB550];
    *(void *)(v10 + 104) = v28;
    *(void *)(v10 + 64) = v27;
    *(void *)(v10 + 72) = v1;
    uint64_t v29 = self;
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_1C3DB9BF8();
    id v15 = objc_msgSend(v29, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v14, 0, 0, 0);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C3C45528()
{
  sub_1C3C3E410((uint64_t)&v5);
  if (*(void *)(v5 + 16) == 1 && v6)
  {
    uint64_t v0 = self;
    uint64_t v1 = (void *)sub_1C3DB9BF8();
    id v2 = objc_msgSend(v0, sel_localizedFrameworkStringForKey_value_table_allowSiri_, v1, 0, 0, 1);

    uint64_t v3 = sub_1C3DB9C38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_1C3C45628(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  id v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v5 = *v2;
    if (*v2 >= 3)
    {
      uint64_t v6 = *(v2 - 1);
      sub_1C3C4C7B4(v6, *v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C3D8288C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_1C3D8288C((void *)(v7 > 1), v8 + 1, 1, v3);
      }
      void v3[2] = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      void v4[4] = v6;
      void v4[5] = v5;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C3C45734(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FC8);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA385FD0);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C45980(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386068);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C45BC4(uint64_t a1)
{
  return sub_1C3C47964(a1, &qword_1EA386080, &qword_1EA386088);
}

uint64_t sub_1C3C45BD8(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB390];
  if (swift_dynamicCast()) {
    return v9[0] & 1;
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386070);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C45E20(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB3D0];
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
    sub_1C3C4BC70(a1, (uint64_t)v11);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Cannot cast ");
    HIBYTE(v10[6]) = 0;
    v10[7] = -5120;
    sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
    v8(v5, v2);
    sub_1C3DB9D68();
    void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386060);
    v9[0] = v6;
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    v8(v5, v2);
    uint64_t result = sub_1C3DBAF58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C46064(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB470];
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
    sub_1C3C4BC70(a1, (uint64_t)v11);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_1C3DBAC68();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "Cannot cast ");
    HIBYTE(v10[6]) = 0;
    v10[7] = -5120;
    sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
    v8(v5, v2);
    sub_1C3DB9D68();
    void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386058);
    v9[0] = v6;
    sub_1C3DBB618();
    sub_1C3DBB248();
    sub_1C3DB9D68();
    swift_bridgeObjectRelease();
    v8(v5, v2);
    uint64_t result = sub_1C3DBAF58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C3C462A8(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB550];
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386050);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C464EC(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC098];
  if (swift_dynamicCast()) {
    return LOBYTE(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386048);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C46730(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC0F8];
  if (swift_dynamicCast()) {
    return LOWORD(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386040);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C46974(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC150];
  if (swift_dynamicCast()) {
    return LODWORD(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386038);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C46BB8(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC1C8];
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386030);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C46DFC(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBB808];
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386028);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C47040(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC358];
  if (swift_dynamicCast()) {
    return LOBYTE(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386020);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C47284(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC450];
  if (swift_dynamicCast()) {
    return LOWORD(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386018);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C474C8(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC4C0];
  if (swift_dynamicCast()) {
    return LODWORD(v9[0]);
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386010);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C4770C(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  uint64_t v6 = MEMORY[0x1E4FBC538];
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386008);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C47950(uint64_t a1)
{
  return sub_1C3C47964(a1, (uint64_t *)&unk_1EA386220, &qword_1EA3860A0);
}

uint64_t sub_1C3C47964(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C3DBB668();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1C3C4BC70(a1, (uint64_t)v15);
  if (swift_dynamicCast()) {
    return v13[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v15);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "Cannot cast ");
  HIBYTE(v14[6]) = 0;
  v14[7] = -5120;
  sub_1C3C4BC70((uint64_t)v15, (uint64_t)v13);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  sub_1C3DB9D68();
  void v13[3] = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13[0] = v10;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v12(v9, v6);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

uint64_t sub_1C3C47BB0(uint64_t a1)
{
  uint64_t v2 = sub_1C3DBB668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C3C4C8B4(0, &qword_1EA386090);
  sub_1C3C4BC70(a1, (uint64_t)v11);
  if (swift_dynamicCast()) {
    return v9[0];
  }
  sub_1C3C4BC70(a1, (uint64_t)v11);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C3DBAC68();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "Cannot cast ");
  HIBYTE(v10[6]) = 0;
  v10[7] = -5120;
  sub_1C3C4BC70((uint64_t)v11, (uint64_t)v9);
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1C3DB9D68();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA386098);
  v9[0] = v6;
  sub_1C3DBB618();
  sub_1C3DBB248();
  sub_1C3DB9D68();
  swift_bridgeObjectRelease();
  v8(v5, v2);
  uint64_t result = sub_1C3DBAF58();
  __break(1u);
  return result;
}

char *sub_1C3C47E08(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1C3D8288C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    id v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      std::string v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C47F8C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C3C4C684(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C3C48024(uint64_t a1, char *a2, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  unint64_t v8 = v7;
  uint64_t v76 = a6;
  uint64_t v77 = a7;
  uint64_t v75 = a5;
  uint64_t v74 = sub_1C3DB8AF8();
  uint64_t v13 = MEMORY[0x1F4188790](v74);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v67 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v23 = (char *)&v67 - v22;
  uint64_t v24 = (uint64_t)&a2[-a1];
  uint64_t v25 = v24 / 40;
  unint64_t v73 = a3;
  uint64_t v26 = a3 - (void)a2;
  uint64_t v27 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v82 = v18;
  unint64_t v81 = a4;
  if (v24 / 40 >= v27)
  {
    if (v26 < -39) {
      goto LABEL_50;
    }
    uint64_t v70 = v20;
    uint64_t v71 = v19;
    if (a4 != a2 || &a2[40 * v27] <= a4)
    {
      id v42 = v18;
      uint64_t v43 = v21;
      memmove(a4, a2, 40 * v27);
      uint64_t v21 = v43;
      uint64_t v18 = v42;
      unint64_t v8 = v7;
    }
    uint64_t v44 = &a4[40 * v27];
    uint64_t v80 = v44;
    uint64_t v82 = a2;
    if (v26 < 40 || v18 >= a2)
    {
LABEL_49:
      sub_1C3D70BEC((void **)&v82, (const void **)&v81, &v80);
      return 1;
    }
    id v69 = (void (**)(uint64_t, uint64_t))(v21 + 8);
    unint64_t v45 = v73 - 40;
    uint64_t v68 = a4;
    id v67 = v18;
    uint64_t v46 = v74;
    while (1)
    {
      sub_1C3C49A14((uint64_t)(v44 - 40), (uint64_t)v79);
      uint64_t v47 = a2;
      uint64_t v48 = a2 - 40;
      sub_1C3C49A14((uint64_t)(a2 - 40), (uint64_t)v78);
      uint64_t v49 = v70;
      swift_getAtKeyPath();
      uint64_t v50 = v71;
      swift_getAtKeyPath();
      char v51 = v75(v49, v50);
      unint64_t v73 = v8;
      if (v8)
      {
        uint64_t v64 = *v69;
        uint64_t v65 = v74;
        (*v69)(v50, v74);
        v64(v49, v65);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
        goto LABEL_49;
      }
      char v52 = v51;
      uint64_t v72 = (char *)(v45 + 40);
      uint64_t v53 = *v69;
      (*v69)(v50, v46);
      v53(v49, v46);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
      if (v52)
      {
        uint64_t v54 = v67;
        if (v72 != v47 || v45 >= (unint64_t)v47)
        {
          long long v55 = *(_OWORD *)v48;
          long long v56 = *((_OWORD *)v48 + 1);
          *(void *)(v45 + 32) = *((void *)v48 + 4);
          *(_OWORD *)unint64_t v45 = v55;
          *(_OWORD *)(v45 + 16) = v56;
        }
        v82 -= 40;
        uint64_t v44 = v80;
      }
      else
      {
        uint64_t v57 = v80;
        uint64_t v44 = v80 - 40;
        v80 -= 40;
        uint64_t v54 = v67;
        if (v72 >= v57 && v45 < (unint64_t)v57)
        {
          unint64_t v8 = v73;
          if (v72 != v57)
          {
            long long v58 = *(_OWORD *)v44;
            long long v59 = *(_OWORD *)(v57 - 24);
            *(void *)(v45 + 32) = *((void *)v57 - 1);
            *(_OWORD *)unint64_t v45 = v58;
            *(_OWORD *)(v45 + 16) = v59;
          }
          uint64_t v48 = v47;
          goto LABEL_43;
        }
        long long v60 = *(_OWORD *)v44;
        long long v61 = *(_OWORD *)(v57 - 24);
        *(void *)(v45 + 32) = *((void *)v57 - 1);
        *(_OWORD *)unint64_t v45 = v60;
        *(_OWORD *)(v45 + 16) = v61;
        uint64_t v48 = v47;
      }
      unint64_t v8 = v73;
LABEL_43:
      if (v44 > v68)
      {
        v45 -= 40;
        a2 = v48;
        if (v48 > v54) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v24 >= -39)
  {
    if (a4 != v18 || &v18[40 * v25] <= a4)
    {
      uint64_t v28 = v21;
      memmove(a4, v18, 40 * v25);
      uint64_t v21 = v28;
    }
    unint64_t v29 = (unint64_t)&a4[40 * v25];
    uint64_t v80 = (char *)v29;
    if (v24 >= 40 && (unint64_t)a2 < v73)
    {
      id v30 = (void (**)(char *, uint64_t))(v21 + 8);
      while (1)
      {
        sub_1C3C49A14((uint64_t)a2, (uint64_t)v79);
        sub_1C3C49A14((uint64_t)a4, (uint64_t)v78);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        char v31 = v75((uint64_t)v23, (uint64_t)v17);
        if (v7) {
          break;
        }
        char v32 = v31;
        uint64_t v33 = *v30;
        uint64_t v34 = v74;
        (*v30)(v17, v74);
        v33(v23, v34);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
        uint64_t v35 = v82;
        if (v32)
        {
          unint64_t v36 = (unint64_t)(a2 + 40);
          if (v82 >= a2 && (unint64_t)v82 < v36 && v82 == a2)
          {
            uint64_t v35 = a2;
          }
          else
          {
            long long v37 = *(_OWORD *)a2;
            long long v38 = *((_OWORD *)a2 + 1);
            *((void *)v82 + 4) = *((void *)a2 + 4);
            _OWORD *v35 = v37;
            v35[1] = v38;
          }
        }
        else
        {
          id v39 = v81 + 40;
          if (v82 != v81 || v82 >= v39)
          {
            long long v40 = *(_OWORD *)v81;
            long long v41 = *((_OWORD *)v81 + 1);
            *((void *)v82 + 4) = *((void *)v81 + 4);
            _OWORD *v35 = v40;
            v35[1] = v41;
          }
          unint64_t v81 = v39;
          unint64_t v36 = (unint64_t)a2;
        }
        uint64_t v82 = (char *)v35 + 40;
        a4 = v81;
        if ((unint64_t)v81 < v29)
        {
          a2 = (char *)v36;
          if (v36 < v73) {
            continue;
          }
        }
        goto LABEL_49;
      }
      uint64_t v62 = *v30;
      uint64_t v63 = v74;
      (*v30)(v17, v74);
      v62(v23, v63);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v79);
    }
    goto LABEL_49;
  }
LABEL_50:
  swift_release();
  uint64_t result = sub_1C3DBAFF8();
  __break(1u);
  return result;
}

uint64_t sub_1C3C4864C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v42 = a5;
  uint64_t v43 = a7;
  uint64_t v41 = a6;
  uint64_t v47 = a4;
  uint64_t v40 = sub_1C3DB8AF8();
  uint64_t v12 = MEMORY[0x1F4188790](v40);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    long long v37 = v14;
    long long v38 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v19 = 40 * a3 - 40;
    uint64_t v34 = a1;
    while (2)
    {
      uint64_t v20 = a1;
      uint64_t v36 = v19;
      uint64_t v39 = a3;
      while (1)
      {
        uint64_t v21 = *v47 + v19;
        sub_1C3C49A14(v21 + 40, (uint64_t)v46);
        sub_1C3C49A14(v21, (uint64_t)v45);
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        char v22 = v42(v18, v14);
        if (v8)
        {
          char v32 = *v38;
          uint64_t v33 = v40;
          (*v38)(v14, v40);
          v32(v18, v33);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
        }
        char v23 = v22;
        uint64_t v24 = v20;
        uint64_t v44 = 0;
        uint64_t v25 = v47;
        uint64_t v26 = *v38;
        uint64_t v27 = v40;
        (*v38)(v14, v40);
        v26(v18, v27);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
        uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
        if ((v23 & 1) == 0) {
          break;
        }
        uint64_t v28 = *v25;
        if (!*v25)
        {
          __break(1u);
          return result;
        }
        uint64_t v29 = v28 + v19;
        sub_1C3C4C684((long long *)(v28 + v19 + 40), (uint64_t)v46);
        long long v30 = *(_OWORD *)(v29 + 16);
        *(_OWORD *)(v29 + 40) = *(_OWORD *)v29;
        *(_OWORD *)(v29 + 56) = v30;
        *(void *)(v29 + 72) = *(void *)(v29 + 32);
        uint64_t result = sub_1C3C4C684(v46, v29);
        v19 -= 40;
        uint64_t v20 = v24 + 1;
        uint64_t v31 = v39;
        uint64_t v14 = v37;
        uint64_t v8 = v44;
        if (v39 == v20) {
          goto LABEL_10;
        }
      }
      uint64_t v31 = v39;
      uint64_t v14 = v37;
      uint64_t v8 = v44;
LABEL_10:
      a3 = v31 + 1;
      uint64_t v19 = v36 + 40;
      a1 = v34;
      if (a3 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C3C48910(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v169 = a3;
  uint64_t v166 = (uint64_t (*)(char *, char *))a2;
  uint64_t v160 = sub_1C3DB8AF8();
  uint64_t v8 = *(void *)(v160 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v160);
  int64_t v11 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v148 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v148 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v148 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v150 = (char *)&v148 - v22;
  MEMORY[0x1F4188790](v21);
  unint64_t v149 = (char *)&v148 - v23;
  uint64_t v165 = a1;
  uint64_t v24 = a1[1];
  swift_retain_n();
  uint64_t v151 = sub_1C3DBB228();
  if (v151 >= v24)
  {
    if (v24 < 0) {
      goto LABEL_144;
    }
    if (v24)
    {
      swift_retain();
      sub_1C3C4864C(0, v24, 1, v165, v166, v169, a4);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    return swift_release_n();
  }
  if (v24 >= 0) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = v24 + 1;
  }
  if (v24 < -1) {
    goto LABEL_153;
  }
  uint64_t v164 = a4;
  if (v24 < 2)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v161 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v148 = MEMORY[0x1E4FBC860];
    if (v24 != 1)
    {
      unint64_t v71 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_105;
    }
    id v153 = v17;
    uint64_t v154 = v14;
    uint64_t v155 = v11;
  }
  else
  {
    id v153 = v17;
    uint64_t v154 = v14;
    uint64_t v155 = v11;
    uint64_t v26 = v25 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB6FC410);
    uint64_t v27 = sub_1C3DBA0A8();
    *(void *)(v27 + 16) = v26;
    uint64_t v148 = v27;
    uint64_t v161 = (char *)(v27 + 32);
  }
  uint64_t v29 = 0;
  uint64_t v159 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v163 = MEMORY[0x1E4FBC860];
  uint64_t v158 = v20;
  while (1)
  {
    uint64_t v30 = (uint64_t)v29;
    uint64_t v31 = (uint64_t)(v29 + 1);
    uint64_t v157 = v29;
    if ((uint64_t)(v29 + 1) >= v24)
    {
      uint64_t v44 = v163;
LABEL_32:
      uint64_t v52 = v151;
      if (v31 >= v24) {
        goto LABEL_50;
      }
      goto LABEL_33;
    }
    uint64_t v32 = *v165;
    sub_1C3C49A14(*v165 + 40 * v31, (uint64_t)v168);
    uint64_t v152 = v32;
    sub_1C3C49A14(v32 + 40 * v30, (uint64_t)v167);
    uint64_t v33 = (uint64_t)v149;
    swift_getAtKeyPath();
    uint64_t v34 = (uint64_t)v150;
    swift_getAtKeyPath();
    uint64_t v35 = v30;
    LODWORD(v162) = v166((char *)v33, (char *)v34);
    if (v5)
    {
      uint64_t v146 = v160;
      v147 = *v159;
      (*v159)(v34, v160);
      v147(v33, v146);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v168);
      goto LABEL_118;
    }
    uint64_t v36 = v160;
    long long v37 = *v159;
    (*v159)(v34, v160);
    v37(v33, v36);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v168);
    uint64_t v31 = v35 + 2;
    uint64_t v30 = v35;
    if (v35 + 2 < v24)
    {
      uint64_t v38 = v152 + 40 * v35 + 40;
      while (1)
      {
        sub_1C3C49A14(v38 + 40, (uint64_t)v168);
        sub_1C3C49A14(v38, (uint64_t)v167);
        swift_getAtKeyPath();
        uint64_t v39 = (uint64_t)v153;
        swift_getAtKeyPath();
        int v40 = v166(v20, (char *)v39);
        uint64_t v41 = v31;
        uint64_t v42 = v39;
        uint64_t v43 = v160;
        v37(v42, v160);
        v37((uint64_t)v20, v43);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v168);
        if ((v162 ^ v40)) {
          break;
        }
        ++v31;
        v38 += 40;
        if (v24 == v41 + 1)
        {
          uint64_t v31 = v24;
          break;
        }
      }
      uint64_t v30 = (uint64_t)v157;
    }
    uint64_t v44 = v163;
    if ((v162 & 1) == 0) {
      goto LABEL_32;
    }
    if (v31 < v30) {
      goto LABEL_148;
    }
    if (v30 >= v31) {
      goto LABEL_32;
    }
    uint64_t v45 = 40 * v31 - 40;
    uint64_t v46 = 40 * v30;
    uint64_t v156 = v31;
    uint64_t v47 = v30;
    do
    {
      if (v47 != --v31)
      {
        if (!v152) {
          goto LABEL_151;
        }
        uint64_t v48 = v152 + v46;
        uint64_t v49 = v152 + v45;
        sub_1C3C4C684((long long *)(v152 + v46), (uint64_t)v168);
        uint64_t v50 = *(void *)(v49 + 32);
        long long v51 = *(_OWORD *)(v49 + 16);
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        *(_OWORD *)(v48 + 16) = v51;
        *(void *)(v48 + 32) = v50;
        sub_1C3C4C684(v168, v49);
        uint64_t v30 = (uint64_t)v157;
      }
      ++v47;
      v45 -= 40;
      v46 += 40;
    }
    while (v47 < v31);
    uint64_t v20 = v158;
    uint64_t v52 = v151;
    uint64_t v31 = v156;
    if (v156 >= v24) {
      goto LABEL_50;
    }
LABEL_33:
    if (__OFSUB__(v31, v30)) {
      goto LABEL_145;
    }
    if (v31 - v30 < v52) {
      break;
    }
LABEL_50:
    if (v31 < v30) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v156 = v31;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v68 = (char *)v44;
    }
    else {
      uint64_t v68 = sub_1C3D70A34(0, *(void *)(v44 + 16) + 1, 1, (char *)v44);
    }
    unint64_t v70 = *((void *)v68 + 2);
    unint64_t v69 = *((void *)v68 + 3);
    unint64_t v71 = v70 + 1;
    if (v70 >= v69 >> 1) {
      uint64_t v68 = sub_1C3D70A34((char *)(v69 > 1), v70 + 1, 1, v68);
    }
    *((void *)v68 + 2) = v71;
    uint64_t v72 = v68 + 32;
    unint64_t v73 = &v68[16 * v70 + 32];
    uint64_t v74 = v156;
    *(void *)unint64_t v73 = v30;
    *((void *)v73 + 1) = v74;
    uint64_t v163 = (uint64_t)v68;
    if (v70)
    {
      uint64_t v75 = v68;
      uint64_t v157 = v68 + 32;
      while (1)
      {
        unint64_t v76 = v71 - 1;
        if (v71 >= 4)
        {
          uint64_t v82 = &v72[16 * v71];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_128;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_129;
          }
          unint64_t v89 = v71 - 2;
          uint64_t v90 = &v72[16 * v71 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_131;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_134;
          }
          if (v94 >= v85)
          {
            uint64_t v112 = &v72[16 * v76];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_138;
            }
            BOOL v105 = v80 < v115;
            goto LABEL_88;
          }
        }
        else
        {
          if (v71 != 3)
          {
            uint64_t v106 = *((void *)v75 + 4);
            uint64_t v107 = *((void *)v75 + 5);
            BOOL v88 = __OFSUB__(v107, v106);
            uint64_t v99 = v107 - v106;
            char v100 = v88;
            goto LABEL_82;
          }
          uint64_t v79 = v75 + 32;
          uint64_t v78 = *((void *)v75 + 4);
          uint64_t v77 = *((void *)v79 + 1);
          BOOL v88 = __OFSUB__(v77, v78);
          uint64_t v80 = v77 - v78;
          char v81 = v88;
        }
        if (v81) {
          goto LABEL_130;
        }
        unint64_t v89 = v71 - 2;
        uint64_t v95 = &v72[16 * v71 - 32];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v98 = __OFSUB__(v96, v97);
        uint64_t v99 = v96 - v97;
        char v100 = v98;
        if (v98) {
          goto LABEL_133;
        }
        uint64_t v101 = &v72[16 * v76];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v88 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v88) {
          goto LABEL_136;
        }
        if (__OFADD__(v99, v104)) {
          goto LABEL_137;
        }
        if (v99 + v104 >= v80)
        {
          BOOL v105 = v80 < v104;
LABEL_88:
          if (v105) {
            unint64_t v76 = v89;
          }
          goto LABEL_90;
        }
LABEL_82:
        if (v100) {
          goto LABEL_132;
        }
        unint64_t v108 = &v72[16 * v76];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v88 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v88) {
          goto LABEL_135;
        }
        if (v111 < v99) {
          goto LABEL_99;
        }
LABEL_90:
        unint64_t v116 = v76 - 1;
        if (v76 - 1 >= v71)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        uint64_t v117 = *v165;
        if (!*v165) {
          goto LABEL_149;
        }
        uint64_t v118 = v5;
        uint64_t v119 = &v72[16 * v116];
        uint64_t v120 = *(void *)v119;
        unint64_t v121 = v76;
        int v122 = &v72[16 * v76];
        uint64_t v123 = *(void *)v122;
        uint64_t v124 = *((void *)v122 + 1);
        uint64_t v162 = v117 + 40 * *(void *)v119;
        unint64_t v125 = (char *)(v117 + 40 * v123);
        unint64_t v126 = v117 + 40 * v124;
        uint64_t v127 = v164;
        swift_retain();
        sub_1C3C48024(v162, v125, v126, v161, (uint64_t (*)(uint64_t, uint64_t))v166, v169, v127);
        if (v118)
        {
LABEL_119:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_120;
        }
        swift_release();
        if (v124 < v120) {
          goto LABEL_125;
        }
        uint64_t v128 = v163;
        if (v121 > *(void *)(v163 + 16)) {
          goto LABEL_126;
        }
        *(void *)uint64_t v119 = v120;
        uint64_t v72 = v157;
        *(void *)&v157[16 * v116 + 8] = v124;
        unint64_t v129 = *(void *)(v128 + 16);
        if (v121 >= v129) {
          goto LABEL_127;
        }
        unint64_t v71 = v129 - 1;
        size_t v130 = 16 * (v129 - 1 - v121);
        uint64_t v131 = v128;
        memmove(v122, v122 + 16, v130);
        uint64_t v75 = (char *)v131;
        *(void *)(v131 + 16) = v129 - 1;
        uint64_t v5 = 0;
        uint64_t v20 = v158;
        if (v129 <= 2) {
          goto LABEL_99;
        }
      }
    }
    unint64_t v71 = 1;
LABEL_99:
    uint64_t v24 = v165[1];
    uint64_t v29 = (char *)v156;
    if (v156 >= v24)
    {
      uint64_t v28 = v163;
LABEL_105:
      uint64_t v163 = v28;
      if (v71 >= 2)
      {
        uint64_t v132 = (uint64_t *)*v165;
        uint64_t v165 = (uint64_t *)*v165;
        do
        {
          unint64_t v133 = v71 - 2;
          if (v71 < 2) {
            goto LABEL_139;
          }
          if (!v132) {
            goto LABEL_152;
          }
          uint64_t v134 = v164;
          uint64_t v135 = *(void *)(v163 + 32 + 16 * v133);
          uint64_t v136 = *(void *)(v163 + 32 + 16 * (v71 - 1) + 8);
          uint64_t v137 = (uint64_t)&v132[5 * v135];
          uint64_t v138 = (char *)&v132[5 * *(void *)(v163 + 32 + 16 * (v71 - 1))];
          unint64_t v139 = (unint64_t)&v132[5 * v136];
          swift_retain();
          sub_1C3C48024(v137, v138, v139, v161, (uint64_t (*)(uint64_t, uint64_t))v166, v169, v134);
          if (v5) {
            goto LABEL_119;
          }
          swift_release();
          if (v136 < v135) {
            goto LABEL_140;
          }
          uint64_t v140 = (char *)v163;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v140 = sub_1C3D70EE8((uint64_t)v140);
          }
          if (v133 >= *((void *)v140 + 2)) {
            goto LABEL_141;
          }
          uint64_t v141 = &v140[16 * v133 + 32];
          *(void *)uint64_t v141 = v135;
          *((void *)v141 + 1) = v136;
          unint64_t v142 = *((void *)v140 + 2);
          if (v71 > v142) {
            goto LABEL_142;
          }
          memmove(&v140[16 * v71 + 16], &v140[16 * v71 + 32], 16 * (v142 - v71));
          uint64_t v163 = (uint64_t)v140;
          *((void *)v140 + 2) = v142 - 1;
          unint64_t v71 = v142 - 1;
          uint64_t v5 = 0;
          uint64_t v132 = v165;
        }
        while (v142 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v148 + 16) = 0;
      goto LABEL_121;
    }
  }
  if (__OFADD__(v30, v52)) {
    goto LABEL_146;
  }
  if (v30 + v52 >= v24) {
    uint64_t v53 = v24;
  }
  else {
    uint64_t v53 = v30 + v52;
  }
  if (v53 < v30)
  {
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    swift_release_n();
    __break(1u);
LABEL_150:
    swift_release_n();
    __break(1u);
LABEL_151:
    swift_release_n();
    __break(1u);
LABEL_152:
    swift_release_n();
    __break(1u);
LABEL_153:
    swift_release_n();
    uint64_t result = sub_1C3DBAF48();
    __break(1u);
    return result;
  }
  if (v31 == v53) {
    goto LABEL_50;
  }
  uint64_t v54 = 40 * v31 - 40;
  uint64_t v162 = v53;
LABEL_42:
  uint64_t v156 = v31;
  uint64_t v55 = v30;
  uint64_t v163 = v54;
  while (1)
  {
    uint64_t v56 = *v165 + v54;
    sub_1C3C49A14(v56 + 40, (uint64_t)v168);
    sub_1C3C49A14(v56, (uint64_t)v167);
    uint64_t v57 = (uint64_t)v154;
    swift_getAtKeyPath();
    uint64_t v58 = (uint64_t)v155;
    swift_getAtKeyPath();
    char v59 = v166((char *)v57, (char *)v58);
    if (v5) {
      break;
    }
    char v60 = v59;
    long long v61 = *v159;
    uint64_t v62 = v58;
    uint64_t v63 = v160;
    (*v159)(v62, v160);
    v61(v57, v63);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v168);
    if ((v60 & 1) == 0) {
      goto LABEL_47;
    }
    uint64_t v64 = *v165;
    if (!*v165) {
      goto LABEL_150;
    }
    uint64_t v65 = v64 + v54;
    sub_1C3C4C684((long long *)(v64 + v54 + 40), (uint64_t)v168);
    long long v66 = *(_OWORD *)(v65 + 16);
    *(_OWORD *)(v65 + 40) = *(_OWORD *)v65;
    *(_OWORD *)(v65 + 56) = v66;
    *(void *)(v65 + 72) = *(void *)(v65 + 32);
    sub_1C3C4C684(v168, v65);
    v54 -= 40;
    if (v156 == ++v55)
    {
LABEL_47:
      uint64_t v30 = (uint64_t)v157;
      uint64_t v31 = v156 + 1;
      uint64_t v54 = v163 + 40;
      if (v156 + 1 == v162)
      {
        uint64_t v31 = v162;
        uint64_t v20 = v158;
        goto LABEL_50;
      }
      goto LABEL_42;
    }
  }
  uint64_t v143 = v160;
  v144 = *v159;
  (*v159)(v58, v160);
  v144(v57, v143);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v167);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v168);
LABEL_118:
  swift_bridgeObjectRelease();
LABEL_120:
  *(void *)(v148 + 16) = 0;
LABEL_121:
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}